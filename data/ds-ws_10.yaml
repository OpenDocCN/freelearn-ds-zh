- en: 10\. Analyzing a Dataset
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10\. 分析数据集
- en: Overview
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 概览
- en: By the end of this chapter, you will be able to explain the key steps involved
    in performing exploratory data analysis; identify the types of data contained
    in the dataset; summarize the dataset and at a detailed level for each variable;
    visualize the data distribution in each column; find relationships between variables
    and analyze missing values and outliers for each variable
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章结束时，您将能够解释进行探索性数据分析的关键步骤；识别数据集中包含的数据类型；总结数据集并对每个变量进行详细分析；可视化每一列的数据分布；找到变量之间的关系，并分析每个变量的缺失值和异常值。
- en: This chapter will introduce you to the art of performing exploratory data analysis
    and visualizing the data in order to identify quality issues, potential data transformations,
    and interesting patterns.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您介绍如何进行探索性数据分析并可视化数据，以便识别质量问题、潜在的数据转换以及有趣的模式。
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'The previous chapter was all about improving our machine learning model, and
    interpreting its results and parameters to provide meaningful insights to the
    business. This chapter opens the third part of this book: *enhancing your dataset*.
    In the next three chapters, we are taking a step back and will be focusing on
    the key input of any machine learning model: the dataset. We will learn how to
    explore a new dataset, prepare it for the modeling stage, and create new variables
    (also called **feature engineering**). These are very exciting and important topics
    to learn about, so let''s jump in.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 上一章主要讨论了如何改进我们的机器学习模型，并解释其结果和参数，以便为业务提供有意义的见解。本章开启了本书的第三部分：*提升您的数据集*。在接下来的三章中，我们将退后一步，专注于任何机器学习模型的关键输入：数据集。我们将学习如何探索一个新的数据集，准备它进入建模阶段，并创建新的变量（也叫做**特征工程**）。这些都是非常激动人心且重要的主题，所以让我们开始吧。
- en: When we mention data science, most people think about building fancy machine
    learning algorithms for predicting future outcomes. They usually do not think
    about all the other critical tasks involved in a data science project. In reality,
    the modeling step covers only a small part of such a project. You may have already
    heard about the *rule of thumb* stating that data scientists spend only 20% of
    their time fitting a model and the other 80% on understanding and preparing the
    data. This is actually quite close to reality.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们提到数据科学时，大多数人想到的是构建精密的机器学习算法来预测未来的结果。他们通常不会想到数据科学项目中涉及的所有其他关键任务。实际上，建模步骤只涵盖了这样一个项目的一个小部分。你可能已经听说过一个*经验法则*，即数据科学家将20%的时间花在建模上，剩下的80%时间用于理解和准备数据。这个说法其实很接近现实。
- en: A very popular methodology that's used in the industry for running data science
    projects is **CRISP-DM**.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在业界用于开展数据科学项目的一个非常流行的方法论是**CRISP-DM**。
- en: Note
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'We will not go into too much detail about this methodology as it is out of
    the scope of this book. But if you are interested in learning more about it, you
    can find the description of CRISP-DM here: [https://packt.live/2QMRepG](https://packt.live/2QMRepG).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会对这个方法论进行过多的详细介绍，因为它超出了本书的范围。但如果你有兴趣了解更多，可以在这里找到关于CRISP-DM的描述：[https://packt.live/2QMRepG](https://packt.live/2QMRepG)。
- en: 'This methodology breaks down a data science project into six different stages:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法论将数据科学项目分解为六个不同的阶段：
- en: Business understanding
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 业务理解
- en: Data understanding
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据理解
- en: Data preparation
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据准备
- en: Modeling
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建模
- en: Evaluation
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评估
- en: Deployment
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署
- en: 'As you can see, modeling represents only one phase out of the six and it happens
    quite close toward the end of the project. In this chapter, we will mainly focus
    on the second step of CRISP-DM: the data understanding stage.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，建模只占六个阶段中的一个阶段，而且发生在项目的后期。在本章中，我们将主要聚焦于CRISP-DM的第二步：数据理解阶段。
- en: You may wonder why it is so important to understand the data and why we shouldn't
    spend more time on modeling. Some researchers have actually shown that training
    very simple models on high-quality data outperformed extremely complex models
    with bad data.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，为什么理解数据如此重要，为什么我们不应该把更多的时间花在建模上。实际上，一些研究者已经证明，在高质量数据上训练非常简单的模型，效果超过了在差的数据上训练复杂的模型。
- en: If your data is not right, even the most advanced model will not be able to
    find the relevant patterns and predict the right outcome. This is *garbage in,
    garbage out*, which means that the wrong input will lead to the wrong output.
    Therefore, we need to have a good grasp of the limitations and issues of our dataset
    and fix them before fitting it into a model.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的数据不正确，即使是最先进的模型也无法找到相关的模式并预测正确的结果。这就是*垃圾进，垃圾出*，意味着错误的输入会导致错误的输出。因此，我们需要充分了解数据集的局限性和问题，并在将其应用于模型之前加以修正。
- en: The second reason why it is so important to understand the input data is because
    it will also help us to define the right approach and shortlist the relevant algorithms
    accordingly. For instance, if you see that a specific class is less represented
    compared to other ones in your dataset, you may want to use specific algorithms
    that can handle imbalanced data or use some resampling techniques beforehand to
    make the classes more evenly distributed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 理解输入数据如此重要的第二个原因是，它还将帮助我们定义正确的方法，并相应地筛选出相关的算法。例如，如果你发现在数据集中某个特定类别的样本比其他类别少，那么你可能需要使用能够处理不平衡数据的算法，或者预先使用一些重采样技术来使类别分布更均匀。
- en: In this chapter, you will learn about some of the key concepts and techniques
    for getting a deep and good understanding of your data.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你将学习一些关键概念和技术，以深入理解你的数据。
- en: Exploring Your Data
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索你的数据
- en: If you are running your project by following the CRISP-DM methodology, the first
    step will be to discuss the project with the stakeholders and clearly define their
    requirements and expectations. Only once this is clear can you start having a
    look at the data and see whether you will be able to achieve these objectives.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按照CRISP-DM方法论进行项目管理，第一步将是与相关方讨论项目，并清楚地定义他们的需求和期望。只有当这一点明确后，你才能开始查看数据，并判断是否能够实现这些目标。
- en: After receiving a dataset, you may want to make sure that the dataset contains
    the information you need for your project. For instance, if you are working on
    a supervised project, you will check whether this dataset contains the target
    variable you need and whether there are any missing or incorrect values for this
    field. You may also check how many observations (rows) and variables (columns)
    there are. These are the kind of questions you will have initially with a new
    dataset. This section will introduce you to some techniques you can use to get
    the answers to these questions.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在接收到数据集后，你可能想确认数据集是否包含你项目所需的信息。例如，如果你正在进行监督学习项目，你将检查数据集中是否包含你需要的目标变量，以及该字段是否存在缺失值或错误值。你还可以检查数据集包含多少观察值（行）和变量（列）。这些是你在处理新数据集时可能会首先遇到的问题。本节将向你介绍一些可以用来回答这些问题的技术。
- en: For the rest of this section, we will be working with a dataset containing transactions
    from an online retail store.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本节剩余部分，我们将使用一个包含在线零售店交易的数据库。
- en: Note
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'This dataset is in our GitHub repository: [https://packt.live/36s4XIN](https://packt.live/36s4XIN).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集存储在我们的GitHub库中：[https://packt.live/36s4XIN](https://packt.live/36s4XIN)。
- en: It was sourced from [https://packt.live/2Qu5XqC](https://packt.live/2Qu5XqC),
    courtesy of Daqing Chen, Sai Liang Sain, and Kun Guo, Data mining for the online
    retail industry, UCI Machine Learning Repository.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集来自[https://packt.live/2Qu5XqC](https://packt.live/2Qu5XqC)，由Daqing Chen、Sai
    Liang Sain和Kun Guo提供，标题为《在线零售行业的数据挖掘》，来源于UCI机器学习库。
- en: 'Our dataset is an Excel spreadsheet. Luckily, the `pandas` package provides
    a method we can use to load this type of file: `read_excel()`.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据集是一个Excel电子表格。幸运的是，`pandas`包提供了一个方法，可以用来加载这种类型的文件：`read_excel()`。
- en: 'Let''s read the data using the `.read_excel()` method and store it in a `pandas`
    DataFrame, as shown in the following code snippet:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`.read_excel()`方法读取数据，并将其存储在一个`pandas` DataFrame中，如下代码片段所示：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After loading the data into a DataFrame, we want to know the size of this dataset,
    that is, its number of rows and columns. To get this information, we just need
    to call the `.shape` attribute from `pandas`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在将数据加载到DataFrame后，我们想知道这个数据集的大小，即它的行数和列数。为了获取这些信息，我们只需要调用`pandas`的`.shape`属性：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You should get the following output:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This attribute returns a tuple containing the number of rows as the first element
    and the number of columns as the second element. The loaded dataset contains `541909`
    rows and `8` different columns.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性返回一个元组，包含行数作为第一个元素，列数作为第二个元素。加载的数据集包含`541909`行和`8`列。
- en: 'Since this attribute returns a tuple, we can access each of its elements independently
    by providing the relevant index. Let''s extract the number of rows (index `0`):'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个属性返回的是一个元组，我们可以通过提供相关索引独立访问其每个元素。让我们提取行数（索引`0`）：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You should get the following output:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Similarly, we can get the number of columns with the second index:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以通过第二个索引获取列数：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You should get the following output:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Usually, the first row of a dataset is the header. It contains the name of each
    column. By default, the `read_excel()` method assumes that the first row of the
    file is the header. If the `header` is stored in a different row, you can specify
    a different index for the header with the parameter header from `read_excel()`,
    such as `pd.read_excel(header=1)` for specifying the header column is the second
    row.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，数据集的第一行是表头，包含每一列的名称。默认情况下，`read_excel()`方法假设文件的第一行是表头。如果`header`存储在其他行，可以通过`read_excel()`方法的`header`参数指定其他的表头行索引，例如`pd.read_excel(header=1)`用于指定表头在第二行。
- en: 'Once loaded into a `pandas` DataFrame, you can print out its content by calling
    it directly:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦加载到`pandas`数据框中，你可以通过直接调用它来打印出其内容：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You should get the following output:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.1: First few rows of the loaded online retail DataFrame'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.1: 加载的在线零售数据框的前几行'
- en: '](img/B15019_10_01.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_01.jpg)'
- en: 'Figure 10.1: First few rows of the loaded online retail DataFrame'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.1: 加载的在线零售数据框的前几行'
- en: 'To access the names of the columns for this DataFrame, we can call the `.columns`
    attribute:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问这个数据框的列名，我们可以调用`.columns`属性：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You should get the following output:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.2: List of the column names for the online retail DataFrame'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.2: 在线零售数据框的列名列表'
- en: '](img/B15019_10_02.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_02.jpg)'
- en: 'Figure 10.2: List of the column names for the online retail DataFrame'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.2: 在线零售数据框的列名列表'
- en: The columns from this dataset are `InvoiceNo`, `StockCode`, `Description`, `Quantity`,
    `InvoiceDate`, `UnitPrice`, `CustomerID`, and `Country`. We can infer that a row
    from this dataset represents the sale of an article for a given quantity and price
    for a specific customer at a particular date.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集的列包括`InvoiceNo`、`StockCode`、`Description`、`Quantity`、`InvoiceDate`、`UnitPrice`、`CustomerID`和`Country`。我们可以推测该数据集的每一行代表了一个特定客户在特定日期购买某件商品的销售记录，包括数量和价格。
- en: 'Looking at these names, we can potentially guess what types of information
    are contained in these columns, however, to be sure, we can use the `dtypes` attribute,
    as shown in the following code snippet:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 看着这些列名，我们或许能猜到这些列中包含的是什么类型的信息，但为了确保准确无误，我们可以使用`dtypes`属性，代码如下所示：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You should get the following output:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.3: Description of the data type for each column of the DataFrame'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.3: 数据框每列的数据类型描述'
- en: '](img/B15019_10_03.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_03.jpg)'
- en: 'Figure 10.3: Description of the data type for each column of the DataFrame'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.3: 数据框每列的数据类型描述'
- en: From this output, we can see that the `InvoiceDate` column is a date type (`datetime64[ns]`),
    `Quantity` is an integer (`int64`), and that `UnitPrice` and `CustomerID` are
    decimal numbers (`float64`). The remaining columns are text (`object`).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个输出中，我们可以看到`InvoiceDate`列是日期类型（`datetime64[ns]`），`Quantity`是整数类型（`int64`），`UnitPrice`和`CustomerID`是小数类型（`float64`）。其余的列是文本类型（`object`）。
- en: 'The `pandas` package provides a single method that can display all the information
    we have seen so far, that is, the `info()` method:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`包提供了一个方法，可以显示我们迄今为止看到的所有信息，这个方法是`info()`方法：'
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You should get the following output:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.4: Output of the info() method'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.4: `info()`方法的输出'
- en: '](img/B15019_10_04.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_04.jpg)'
- en: 'Figure 10.4: Output of the info() method'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.4: `info()`方法的输出'
- en: In just a few lines of code, we learned some high-level information about this
    dataset, such as its size, the column names, and their types.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 仅通过几行代码，我们就能了解有关该数据集的一些高级信息，例如其大小、列名及其类型。
- en: In the next section, we will analyze the content of a dataset.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将分析数据集的内容。
- en: Analyzing Your Dataset
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析你的数据集
- en: Previously, we learned about the overall structure of a dataset and the kind
    of information it contains. Now, it is time to really dig into it and look at
    the values of each column.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们了解了数据集的整体结构以及其中包含的信息类型。现在，是时候深入探讨每一列的具体值了。
- en: 'First, we need to import the `pandas` package:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要导入 `pandas` 包：
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, we''ll load the data into a `pandas` DataFrame:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将数据加载到一个 `pandas` DataFrame 中：
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `pandas` package provides several methods so that you can display a snapshot
    of your dataset. The most popular ones are `head()`, `tail()`, and `sample()`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas` 包提供了多个方法，方便你查看数据集的快照。最常用的有 `head()`、`tail()` 和 `sample()`。'
- en: 'The `head()` method will show the top rows of your dataset. By default, `pandas`
    will display the first five rows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`head()` 方法将显示数据集的前几行。默认情况下，`pandas` 将显示前五行：'
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You should get the following output:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到以下输出：
- en: '![Figure 10.5: Displaying the first five rows using the head() method'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.5：使用 `head()` 方法显示前五行'
- en: '](img/B15019_10_05.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_05.jpg)'
- en: 'Figure 10.5: Displaying the first five rows using the head() method'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5：使用 `head()` 方法显示前五行
- en: The output of the `head()` method shows that the `InvoiceNo`, `StockCode`, and
    `CustomerID` columns are unique identifier fields for each purchasing invoice,
    item sold, and customer. The `Description` field is text describing the item sold.
    `Quantity` and `UnitPrice` are the number of items sold and their unit price,
    respectively. `Country` is a text field that can be used for specifying where
    the customer or the item is located or from which country version of the online
    store the order has been made. In a real project, you may reach out to the team
    who provided this dataset and confirm what the meaning of the `Country` column
    is, or any other column details that you may need, for that matter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`head()` 方法的输出显示，`InvoiceNo`、`StockCode` 和 `CustomerID` 列是每个采购发票、销售商品和客户的唯一标识符字段。`Description`
    字段是描述所售商品的文本。`Quantity` 和 `UnitPrice` 分别表示售出商品的数量和单价。`Country` 是一个文本字段，用于指定客户或商品的位置，或指定客户在哪个国家版本的在线商店下的订单。在实际项目中，你可以联系提供此数据集的团队，确认
    `Country` 列的含义，或者任何其他你可能需要的列信息。'
- en: 'With `pandas`, you can specify the number of top rows to be displayed with
    the `head()` method by providing an integer as its parameter. Let''s try this
    by displaying the first `10` rows:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `pandas` 时，可以通过在 `head()` 方法中提供整数参数来指定显示的前几行数量。我们通过显示前 `10` 行来尝试一下：
- en: '[PRE14]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You should get the following output:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到以下输出：
- en: '![Figure 10.6: Displaying the first 10 rows using the head() method'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.6：使用 `head()` 方法显示前10行'
- en: '](img/B15019_10_06.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_06.jpg)'
- en: 'Figure 10.6: Displaying the first 10 rows using the head() method'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6：使用 `head()` 方法显示前10行
- en: 'Looking at this output, we can assume that the data is sorted by the `InvoiceDate`
    column and grouped by `CustomerID` and `InvoiceNo`. We can only see one value
    in the `Country` column: `United Kingdom`. Let''s check whether this is really
    the case by looking at the last rows of the dataset. This can be achieved by calling
    the `tail()` method. Like `head()`, this method, by default, will display only
    five rows, but you can specify the number of rows you want as a parameter. Here,
    we will display the last eight rows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个输出来看，我们可以假设数据是按 `InvoiceDate` 列升序排序，并按 `CustomerID` 和 `InvoiceNo` 分组的。在 `Country`
    列中，我们只看到一个值：`United Kingdom`。让我们通过查看数据集的最后几行来确认这是否属实。这可以通过调用 `tail()` 方法实现。与 `head()`
    方法类似，默认情况下，该方法将仅显示五行，但你可以通过参数指定要显示的行数。这里，我们将显示最后八行：
- en: '[PRE15]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You should get the following output:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到以下输出：
- en: '![Figure 10.7: Displaying the last eight rows using the tail() method'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.7：使用 `tail()` 方法显示最后八行'
- en: '](img/B15019_10_07.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_07.jpg)'
- en: 'Figure 10.7: Displaying the last eight rows using the tail() method'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7：使用 `tail()` 方法显示最后八行
- en: It seems that we were right in assuming that the data is sorted in ascending
    order by the `InvoiceDate` column. We can also confirm that there is actually
    more than one value in the `Country` column.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我们之前的假设是正确的，数据确实是按 `InvoiceDate` 列升序排序的。我们也可以确认，`Country` 列中实际上有不止一个值。
- en: 'We can also use the `sample()` method to randomly pick a given number of rows
    from the dataset with the `n` parameter. You can also specify a `random_state`
    parameter:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 `sample()` 方法，利用 `n` 参数随机选择指定数量的行。你也可以指定 `random_state` 参数：
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You should get the following output:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到以下输出：
- en: '![Figure 10.8: Displaying five random sampled rows using the sample() method'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.8：使用sample()方法显示五个随机采样的行'
- en: '](img/B15019_10_08.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_08.jpg)'
- en: 'Figure 10.8: Displaying five random sampled rows using the sample() method'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8：使用sample()方法显示五个随机采样的行
- en: 'In this output, we can see an additional value in the `Country` column: `Germany`.
    We can also notice a few interesting points:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个输出中，我们可以看到`Country`列中有一个额外的值：`Germany`。我们还可以注意到几个有趣的点：
- en: '`InvoiceNo` can also contain alphabetical letters (row `94,801` starts with
    a `C`, which may have a special meaning).'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InvoiceNo` 也可以包含字母（第`94,801`行以`C`开头，这可能有特殊意义）。'
- en: '`Quantity` can have negative values: `-2` (row `94801`).'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Quantity` 可以有负值：`-2`（第`94801`行）。'
- en: '`CustomerID` contains missing values: `NaN` (row `210111`).'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CustomerID`包含缺失值：`NaN`（第`210111`行）。'
- en: 'Exercise 10.01: Exploring the Ames Housing Dataset with Descriptive Statistics'
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 10.01：使用描述性统计分析Ames Housing数据集
- en: In this exercise, we will explore the `Ames Housing dataset` in order to get
    a good understanding of it by analyzing its structure and looking at some of its
    rows.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次练习中，我们将探索`Ames Housing dataset`，通过分析其结构并查看其中的一些行来充分理解它。
- en: 'The dataset we will be using in this exercise is the Ames Housing dataset,
    which can be found on our GitHub repository: [https://packt.live/35kRKAo](https://packt.live/35kRKAo).'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这个练习中使用的数据显示集是Ames Housing数据集，您可以在我们的GitHub仓库中找到它：[https://packt.live/35kRKAo](https://packt.live/35kRKAo)。
- en: Note
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This dataset was compiled by Dean De Cock.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集由Dean De Cock编制。
- en: This dataset contains a list of residential house sales in the city of Ames,
    Iowa, between 2016 and 2010.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集包含2016年到2010年间爱荷华州Ames市的住宅房屋销售数据。
- en: More information about each variable can be found at [https://packt.live/2sT88L4](https://packt.live/2sT88L4).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于每个变量的信息可以在[https://packt.live/2sT88L4](https://packt.live/2sT88L4)找到。
- en: 'The following steps will help you to complete this exercise:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助你完成这个练习：
- en: Open a new Colab notebook.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的Colab笔记本。
- en: 'Import the `pandas` package:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`pandas`包：
- en: '[PRE17]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Assign the link to the AMES dataset to a variable called `file_url`:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将AMES数据集的链接分配给一个名为`file_url`的变量：
- en: '[PRE18]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Use the `.read_csv()` method from the `pandas` package and load the dataset
    into a new variable called `df`:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`包中的`.read_csv()`方法，将数据集加载到一个名为`df`的新变量中：
- en: '[PRE19]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Print the number of rows and columns of the DataFrame using the `shape` attribute
    from the `pandas` package:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`包中的`shape`属性打印DataFrame的行数和列数：
- en: '[PRE20]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'You should get the following output:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE21]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We can see that this dataset contains `1460` rows and `81` different columns.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到这个数据集包含了`1460`行和`81`个不同的列。
- en: 'Print the names of the variables contained in this DataFrame using the `columns`
    attribute from the `pandas` package:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`库中的`columns`属性打印此DataFrame包含的变量名：
- en: '[PRE22]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You should get the following output:'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.9: List of columns in the housing dataset'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.9：房屋数据集的列列表'
- en: '](img/B15019_10_09.jpg)'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_09.jpg)'
- en: 'Figure 10.9: List of columns in the housing dataset'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.9：房屋数据集的列列表
- en: We can infer the type of information contained in some of the variables by looking
    at their names, such as `LotArea` (property size), `YearBuilt` (year of construction),
    and `SalePrice` (property sale price).
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以通过查看变量名称来推测一些变量所包含的信息类型，例如`LotArea`（房产大小）、`YearBuilt`（建造年份）和`SalePrice`（房产销售价格）。
- en: 'Print out the type of each variable contained in this DataFrame using the `dtypes`
    attribute from the `pandas` package:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`包中的`dtypes`属性打印此DataFrame包含的每个变量的类型：
- en: '[PRE23]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You should get the following output:'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.10: List of columns and their type from the housing dataset'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.10：房屋数据集的列及其类型'
- en: '](img/B15019_10_10.jpg)'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_10.jpg)'
- en: 'Figure 10.10: List of columns and their type from the housing dataset'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.10：房屋数据集的列及其类型
- en: We can see that the variables are either numerical or text types. There is no
    date column in this dataset.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到，变量要么是数值型的，要么是文本类型的。这个数据集中没有日期列。
- en: 'Display the top rows of the DataFrame using the `head()` method from `pandas`:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`库中的`head()`方法显示DataFrame的前几行：
- en: '[PRE24]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You should get the following output:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.11: First five rows of the housing dataset'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.11：房屋数据集的前五行'
- en: '](img/B15019_10_11.jpg)'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_11.jpg)'
- en: 'Figure 10.11: First five rows of the housing dataset'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.11：房屋数据集的前五行
- en: 'Display the last five rows of the DataFrame using the `tail()` method from
    `pandas`:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`中的`tail()`方法显示DataFrame的最后五行：
- en: '[PRE25]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You should get the following output:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.12: Last five rows of the housing dataset'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.12：房屋数据集的最后五行'
- en: '](img/B15019_10_12.jpg)'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_12.jpg)'
- en: 'Figure 10.12: Last five rows of the housing dataset'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.12：房屋数据集的最后五行
- en: It seems that the `Alley` column has a lot of missing values, which are represented
    by the `NaN` value (which stands for `Not a Number`). The `Street` and `Utilities`
    columns seem to have only one value.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 看起来 `Alley`（巷道）列有很多缺失值，这些缺失值由 `NaN` 表示（表示“不是一个数字”）。`Street`（街道）和 `Utilities`（公用设施）列似乎只有一个值。
- en: 'Now, display `5` random sampled rows of the DataFrame using the `sample()`
    method from `pandas` and pass it a `''random_state''` of `8`:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用 `pandas` 中的 `sample()` 方法显示 `5` 行随机抽样数据，并为其传入 `'random_state'` 参数值 `8`：
- en: '[PRE26]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You should get the following output:'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.13: Five randomly sampled rows of the housing dataset'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.13：房屋数据集的五个随机抽样行'
- en: '](img/B15019_10_13.jpg)'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_13.jpg)'
- en: 'Figure 10.13: Five randomly sampled rows of the housing dataset'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13：房屋数据集的五个随机抽样行
- en: With these random samples, we can see that the `LotFrontage` column also has
    some missing values. We can also see that this dataset contains both numerical
    and text data (object types). We will analyze them more in detail in *Exercise
    10.02*, *Analyzing the Categorical Variables from the Ames Housing Dataset*, and
    *Exercise 10.03*, *Analyzing Numerical Variables from the Ames Housing Dataset*.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些随机样本，我们还可以看到 `LotFrontage`（地块前沿）列也有一些缺失值。我们还看到这个数据集中包含了数值和文本数据（对象类型）。我们将在
    *练习 10.02* 中分析这些分类变量， *《从 Ames 房屋数据集中分析分类变量》*，以及 *练习 10.03* 中分析数值变量， *《从 Ames
    房屋数据集中分析数值变量》*。
- en: Note
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2E8HMdH](https://packt.live/2E8HMdH).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问该特定部分的源代码，请参考 [https://packt.live/2E8HMdH](https://packt.live/2E8HMdH)。
- en: You can also run this example online at [https://packt.live/3g62zLT](https://packt.live/3g62zLT).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在线运行这个示例，网址：[https://packt.live/3g62zLT](https://packt.live/3g62zLT)。
- en: We learned quite a lot about this dataset in just a few lines of code, such
    as the number of rows and columns, the data type of each variable, and their information.
    We also identified some issues with missing values.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这几行代码，我们已经学到了很多关于这个数据集的内容，比如行数和列数、每个变量的数据类型以及它们的信息。我们还发现了一些缺失值的问题。
- en: Analyzing the Content of a Categorical Variable
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析分类变量的内容
- en: 'Now that we''ve got a good feel for the kind of information contained in the
    `online retail dataset`, we want to dig a little deeper into each of its columns:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对 `在线零售数据集` 中包含的信息有了初步了解，我们想深入探讨每一列数据：
- en: '[PRE27]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'For instance, we would like to know how many different values are contained
    in each of the variables by calling the `nunique()` method. This is particularly
    useful for a categorical variable with a limited number of values, such as `Country`:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们希望通过调用 `nunique()` 方法来了解每个变量中包含多少不同的值。这对于一个具有有限值数量的分类变量，像 `Country`（国家）这种情况特别有用：
- en: '[PRE28]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You should get the following output:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE29]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We can see that there are 38 different countries in this dataset. It would
    be great if we could get a list of all the values in this column. Thankfully,
    the `pandas` package provides a method to get these results: `unique()`:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，这个数据集中有38个不同的国家。如果我们能获得这一列中所有值的列表，那就太好了。幸运的是，`pandas` 包提供了一个方法来获取这些结果：`unique()`：
- en: '[PRE30]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'You should get the following output:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.14: List of unique values for the ''Country'' column'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.14：''Country''（国家）列的唯一值列表'
- en: '](img/B15019_10_14.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_14.jpg)'
- en: 'Figure 10.14: List of unique values for the ''Country'' column'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.14：'Country'（国家）列的唯一值列表
- en: We can see that there are multiple countries from different continents, but
    most of them come from Europe. We can also see that there is a value called `Unspecified`
    and another one for `European Community`, which may be for all the countries of
    the eurozone that are not listed separately.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，来自不同大陆的多个国家，但大多数国家来自欧洲。我们还看到有一个值叫做 `Unspecified`（未指定）和另一个值 `European
    Community`（欧洲共同体），这可能是指所有欧元区的国家，这些国家没有单独列出。
- en: 'Another very useful method from `pandas` is `value_counts()`. This method lists
    all the values from a given column but also their occurrence. By providing the
    `dropna=False` and `normalise=True` parameters, this method will include the missing
    value in the listing and calculate the number of occurrences as a ratio, respectively:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`中的另一个非常有用的方法是`value_counts()`。这个方法列出了给定列中的所有值，还包括它们的出现次数。通过提供`dropna=False`和`normalize=True`参数，该方法将包括缺失值并分别计算出现次数的比率：'
- en: '[PRE31]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'You should get the following output:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.15: A truncated list of unique values and their occurrence percentage'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.15：唯一值及其出现百分比的截断列表'
- en: for the 'Country' column
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`Country`列
- en: '](img/B15019_10_15.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_15.jpg)'
- en: 'Figure 10.15: A truncated list of unique values and their occurrence percentage
    for the ''Country'' column'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.15：'Country'列唯一值及其出现百分比的截断列表
- en: From this output, we can see that the `United Kingdom` value is totally dominating
    this column as it represents over 91% of the rows and that other values such as
    `Austria` and `Denmark` are quite rare as they represent less than 1% of this
    dataset.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中，我们可以看到`United Kingdom`的值在这一列中完全占据主导地位，它代表了超过91%的行，而`Austria`和`Denmark`等其他值则相当稀有，代表了该数据集中不到1%的行。
- en: 'Exercise 10.02: Analyzing the Categorical Variables from the Ames Housing Dataset'
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习10.02：分析Ames Housing数据集中的分类变量
- en: In this exercise, we will continue our dataset exploration by analyzing the
    categorical variables of this dataset. To do so, we will implement our own `describe`
    functions.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次练习中，我们将通过分析数据集的分类变量继续进行数据集探索。为此，我们将实现我们自己的`describe`函数。
- en: 'The dataset we will be using in this exercise is the Ames Housing dataset,
    which can be found on our GitHub repository: [https://packt.live/35kRKAo](https://packt.live/35kRKAo).
    Let''s get started:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本次练习中使用的数据集是Ames Housing数据集，可以在我们的GitHub仓库找到：[https://packt.live/35kRKAo](https://packt.live/35kRKAo)。让我们开始吧：
- en: Open a new Colab notebook.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的Colab笔记本。
- en: 'Import the `pandas` package:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`pandas`包：
- en: '[PRE32]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Assign the following link to the AMES dataset to a variable called `file_url`:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下链接分配给名为`file_url`的变量：
- en: '[PRE33]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Use the `.read_csv()` method from the `pandas` package and load the dataset
    into a new variable called `df`:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`包中的`.read_csv()`方法，将数据集加载到一个名为`df`的新变量中：
- en: '[PRE34]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Create a new DataFrame called `obj_df` with only the columns that are of numerical
    types using the `select_dtypes` method from `pandas` package. Then, pass in the
    `object` value to the `include` parameter:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`obj_df`的新DataFrame，只包含使用`pandas`包中的`select_dtypes`方法选出的数值类型的列。然后，将`object`值传递给`include`参数：
- en: '[PRE35]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Using the `columns` attribute from `pandas`, extract the list of columns of
    this DataFrame, `obj_df`, assign it to a new variable called `obj_cols`, and print
    its content:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`中的`columns`属性，提取该DataFrame `obj_df`的列列表，并将其分配给一个名为`obj_cols`的新变量，然后打印出其内容：
- en: '[PRE36]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'You should get the following output:'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.16: List of categorical variables'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.16：分类变量列表'
- en: '](img/B15019_10_16.jpg)'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_16.jpg)'
- en: 'Figure 10.16: List of categorical variables'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.16：分类变量列表
- en: 'Create a function called `describe_object` that takes a `pandas` DataFrame
    and a column name as input parameters. Then, inside the function, print out the
    name of the given column, its number of unique values using the `nunique()` method,
    and the list of values and their occurrence using the `value_counts()` method,
    as shown in the following code snippet:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`describe_object`的函数，该函数接受一个`pandas` DataFrame和一个列名作为输入参数。然后，在函数内部，打印出给定列的名称、使用`nunique()`方法计算的唯一值数量，以及使用`value_counts()`方法列出的值及其出现次数，代码示例如下：
- en: '[PRE37]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Test this function by providing the `df` DataFrame and the `''MSZoning''` column:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过提供`df` DataFrame和`'MSZoning'`列来测试这个函数：
- en: '[PRE38]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'You should get the following output:'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.17: Display of the created function for the MSZoning column'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.17：展示为MSZoning列创建的函数'
- en: '](img/B15019_10_17.jpg)'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_17.jpg)'
- en: 'Figure 10.17: Display of the created function for the MSZoning column'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.17：展示为MSZoning列创建的函数
- en: For the `MSZoning` column, the `RL` value represents almost `79%` of the values,
    while `C` `(all)` is only present in less than `1%` of the rows.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于`MSZoning`列，`RL`值几乎代表了`79%`的值，而`C`（全部）仅出现在不到`1%`的行中。
- en: 'Create a `for` loop that will call the created function for every element from
    the `obj_cols` list:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`for`循环，调用为`obj_cols`列表中的每个元素创建的函数：
- en: '[PRE39]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'You should get the following output:'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.18: Display of the created function for the first columns contained
    in obj_cols'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.18: 展示在obj_cols中创建的函数的第一个列'
- en: '](img/B15019_10_18.jpg)'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_18.jpg)'
- en: 'Figure 10.18: Display of the created function for the first columns contained
    in obj_cols'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.18: 展示在obj_cols中创建的函数的第一个列'
- en: 'The output of the previous step is truncated in *Figure 10.18*. We can confirm
    that the `Street` column is almost constant as 99.6% of the rows contain the same
    value: `Pave`. For the column, that is, `Alley`, almost 94% of the rows have missing
    values.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 前一步的输出在*图 10.18*中被截断了。我们可以确认`Street`列几乎是常数，因为99.6%的行包含相同的值：`Pave`。对于`Alley`列，几乎94%的行包含缺失值。
- en: Note
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/3kWoRn2](https://packt.live/3kWoRn2).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 若要访问此部分的源代码，请参见[https://packt.live/3kWoRn2](https://packt.live/3kWoRn2)。
- en: You can also run this example online at [https://packt.live/3gbPnp0](https://packt.live/3gbPnp0).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在线运行这个示例，链接：[https://packt.live/3gbPnp0](https://packt.live/3gbPnp0)。
- en: We just analyzed all the categorical variables from this dataset. We saw how
    to look at the distribution of all the values contained in any feature. We also
    found that some of them are dominated by a single value and others have mainly
    missing values in them.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚分析了数据集中所有的类别变量。我们展示了如何查看任何特征中所有值的分布。我们还发现其中一些特征由单一值主导，而其他特征则主要包含缺失值。
- en: Summarizing Numerical Variables
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结数值变量
- en: Now, let's have a look at a numerical column and get a good understanding of
    its content. We will use some statistical measures that summarize a variable.
    All of these measures are referred to as descriptive statistics. In this chapter,
    we will introduce you to the most popular ones.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看一个数值列，深入了解它的内容。我们将使用一些统计度量来总结一个变量。所有这些度量被称为描述性统计。在本章中，我们将介绍一些最常见的度量方法。
- en: 'With the `pandas` package, a lot of these measures have been implemented as
    methods. For instance, if we want to know what the highest value contained in
    the `''Quantity''` column is, we can use the `.max()` method:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pandas`包，许多这些度量已经作为方法实现。例如，如果我们想知道`'数量'`列中包含的最大值是什么，我们可以使用`.max()`方法：
- en: '[PRE40]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'You should get the following output:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE41]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'We can see that the maximum quantity of an item sold in this dataset is `80995`,
    which seems extremely high for a retail business. In a real project, this kind
    of unexpected value will have to be discussed and confirmed with the data owner
    or key stakeholders to see whether this is a genuine or an incorrect value. Now,
    let''s have a look at the lowest value for `''Quantity''` using the `.min()` method:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在这个数据集中，某个商品的最大销售数量是`80995`，这对于零售业务来说似乎极高。在实际项目中，这种意外的值需要与数据所有者或关键利益相关者讨论并确认，看看这是有效值还是错误值。现在，让我们使用`.min()`方法查看`'数量'`的最小值：
- en: '[PRE42]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'You should get the following output:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE43]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The lowest value in this variable is extremely low. We can think that having
    negative values is possible for returned items, but here, the minimum (`-80995`)
    is very low. This, again, will be something to be confirmed with the relevant
    people in your organization.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 该变量的最小值极低。我们可以认为退货商品的负值是可能的，但这里的最小值（`-80995`）非常低。这同样需要与你组织中的相关人员确认。
- en: Now, we are going to have a look at the central tendency of this column. **Central
    tendency** is a statistical term referring to the central point where the data
    will cluster around. The most famous central tendency measure is the average (or
    mean). The average is calculated by summing all the values of a column and dividing
    them by the number of values.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看看此列的集中趋势。**集中趋势**是一个统计学术语，指的是数据将围绕其聚集的中心点。最著名的集中趋势度量是平均数（或均值）。平均数是通过将列中的所有值相加并除以值的数量来计算的。
- en: 'If we plot the `Quantity` column on a graph with its average, it would look
    as follows:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将`数量`列绘制在带有平均值的图表上，它将如下所示：
- en: '![Figure 10.19: Average value for the ''Quantity'' column'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.19: ''数量''列的平均值'
- en: '](img/B15019_10_19.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_19.jpg)'
- en: 'Figure 10.19: Average value for the ''Quantity'' column'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '图 10.19: ''数量''列的平均值'
- en: We can see the average for the `Quantity` column is very close to 0 and most
    of the data is between `-50` and `+50`.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到`数量`列的平均值非常接近0，且大多数数据位于`-50`和`+50`之间。
- en: 'We can get the average value of a feature by using the `mean()` method from
    `pandas`:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用`pandas`中的`mean()`方法来获得某个特征的平均值：
- en: '[PRE44]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'You should get the following output:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE45]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: In this dataset, the average quantity of items sold is around `9.55`. The average
    measure is very sensitive to outliers and, as we saw previously, the minimum and
    maximum values of the `Quantity` column are quite extreme (`-80995 to +80995`).
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个数据集中，销售的平均数量约为`9.55`。平均值对异常值非常敏感，正如我们之前看到的，`Quantity`列的最小值和最大值非常极端（`-80995
    到 +80995`）。
- en: 'We can use the median instead as another measure of central tendency. The median
    is calculated by splitting the column into two groups of equal lengths and getting
    the value of the middle point by separating these two groups, as shown in the
    following example:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用中位数作为另一种集中趋势的度量。中位数的计算方法是将列分成两个长度相等的组，然后通过分隔这两组来获得中间点的值，如以下示例所示：
- en: '![Figure 10.20: Sample median example'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.20：示例中位数](img/B15019_10_20.jpg)'
- en: '](img/B15019_10_20.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_21.jpg)'
- en: 'Figure 10.20: Sample median example'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.20：示例中位数
- en: 'In `pandas`, you can call the `median()` method to get this value:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pandas`中，你可以调用`median()`方法来获得这个值：
- en: '[PRE46]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'You should get the following output:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE47]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The median value for this column is 3, which is quite different from the mean
    (`9.55`) we found earlier. This tells us that there are some outliers in this
    dataset and we will have to decide on how to handle them after we've done more
    investigation (this will be covered in *Chapter 11*, *Data Preparation*).
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列的中位数是3，和我们之前找到的平均数（`9.55`）差别很大。这告诉我们这个数据集中有一些异常值，等我们进一步调查后，需要决定如何处理它们（这将在*第11章*，*数据准备*中讲解）。
- en: 'We can also evaluate the spread of this column (how much the data points vary
    from the central point). A common measure of spread is the standard deviation.
    The smaller this measure is, the closer the data is to its mean. On the other
    hand, if the standard deviation is high, this means there are some observations
    that are far from the average. We will use the `std()` method from `pandas` to
    calculate this measure:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以评估这一列的分布情况（数据点与中心点的差异）。一个常见的分布度量是标准差。这个度量越小，数据越接近其平均值。相反，如果标准差很高，意味着有一些观测值远离平均值。我们将使用`pandas`中的`std()`方法来计算这个度量：
- en: '[PRE48]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'You should get the following output:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE49]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: As expected, the standard deviation for this column is quite high, so the data
    is quite spread from the average, which is `9.55` in this example.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，这一列的标准差相当高，因此数据点分布较广，离平均值`9.55`相差较大。
- en: 'In the `pandas` package, there is a method that can display most of these descriptive
    statistics with one single line of code: `describe()`:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pandas`包中，有一个方法可以通过一行代码显示大部分描述性统计数据：`describe()`：
- en: '[PRE50]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'You should get the following output:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.21: Output of the describe() method'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.21：`describe()`方法的输出](img/B15019_10_21.jpg)'
- en: '](img/B15019_10_21.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_21.jpg)'
- en: 'Figure 10.21: Output of the describe() method'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.21：`describe()`方法的输出
- en: We got the exact same values for the `Quantity` column as we saw previously.
    This method has calculated the descriptive statistics for the three numerical
    columns (`Quantity`, `UnitPrice`, and `CustomerID`).
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了与之前相同的`Quantity`列值。这个方法已经计算了三个数值列（`Quantity`、`UnitPrice`和`CustomerID`）的描述性统计信息。
- en: Even though the `CustomerID` column contains only numerical data, we know these
    values are used to identify each customer and have no mathematical meaning. For
    instance, it will not make sense to add customer ID `12680 to 17850` in the table
    or calculate the mean of these identifiers. This column is not actually numerical
    but categorical.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`CustomerID`列仅包含数值数据，但我们知道这些值用于标识每个客户，并没有数学意义。例如，表格中将客户ID `12680 到 17850`
    相加或计算这些标识符的平均值是没有意义的。这个列实际上不是数值型，而是类别型。
- en: The `describe()` method doesn't know this information and just noticed there
    are numbers, so it assumed this is a numerical variable. This is the perfect example
    of why you should understand your dataset perfectly and identify the issues to
    be fixed before feeding the data to an algorithm. In this case, we will have to
    change the type of this column to categorical. In *Chapter 11*, *Data Preparation*,
    we will see how we can handle this kind of issue, but for now, we will look at
    some graphical tools and techniques that will help us have an even better understanding
    of the data.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`describe()`方法不知道这些信息，只注意到有数字，因此假设这是一个数值变量。这正是为什么你应该完全理解你的数据集，并在将数据输入算法之前识别需要修复的问题的完美例子。在这种情况下，我们将需要将该列的类型更改为分类类型。在*第11章*，*数据准备*中，我们将看到如何处理此类问题，但现在，我们将看看一些图形工具和技术，这些工具将帮助我们更好地理解数据。'
- en: 'Exercise 10.03: Analyzing Numerical Variables from the Ames Housing Dataset'
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 10.03：分析Ames Housing数据集中的数值变量
- en: In this exercise, we will continue our dataset exploration by analyzing the
    numerical variables of this dataset. To do so, we will implement our own `describe`
    functions.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将通过分析此数据集的数值变量继续我们的数据集探索。为此，我们将实现我们自己的`describe`函数。
- en: 'The dataset we will be using in this exercise is the Ames Housing dataset,
    which can be found on our GitHub repository: [https://packt.live/35kRKAo](https://packt.live/35kRKAo).
    Let''s get started:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本练习中使用的数据集是Ames Housing数据集，可以在我们的GitHub仓库找到：[https://packt.live/35kRKAo](https://packt.live/35kRKAo)。让我们开始吧：
- en: Open a new Colab notebook.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的Colab笔记本。
- en: 'Import the `pandas` package:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`pandas`包：
- en: '[PRE51]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Assign the link to the AMES dataset to a variable called `file_url`:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将AMES数据集的链接赋值给一个名为`file_url`的变量：
- en: '[PRE52]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Use the `.read_csv()` method from the `pandas` package and load the dataset
    into a new variable called `df`:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`包中的`.read_csv()`方法，将数据集加载到一个名为`df`的新变量中：
- en: '[PRE53]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Create a new DataFrame called `num_df` with only the columns that are numerical
    using the `select_dtypes` method from the `pandas` package and pass in the `''number''`
    value to the `include` parameter:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的DataFrame，名为`num_df`，仅包含数值型的列，使用`pandas`包中的`select_dtypes`方法，并将`'number'`值传递给`include`参数：
- en: '[PRE54]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Using the `columns` attribute from `pandas`, extract the list of columns of
    this DataFrame, `num_df`, assign it to a new variable called `num_cols`, and print
    its content:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`中的`columns`属性，提取此DataFrame (`num_df`) 的列列表，将其赋值给一个名为`num_cols`的新变量，并打印其内容：
- en: '[PRE55]'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'You should get the following output:'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.22: List of numerical columns'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.22：数值列列表'
- en: '](img/B15019_10_22.jpg)'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_22.jpg)'
- en: 'Figure 10.22: List of numerical columns'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.22：数值列列表
- en: 'Create a function called `describe_numeric` that takes a `pandas` DataFrame
    and a column name as input parameters. Then, inside the function, print out the
    name of the given column, its minimum value using `min()`, its maximum value using
    `max()`, its average value using `mean()`, its standard deviation using `std()`,
    and its `median` using `median()`:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`describe_numeric`的函数，该函数接受一个`pandas` DataFrame和一个列名作为输入参数。然后，在函数内部，打印给定列的名称、使用`min()`的最小值、使用`max()`的最大值、使用`mean()`的平均值、使用`std()`的标准差和`median()`的中位数：
- en: '[PRE56]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Now, test this function by providing the `df` DataFrame and the `SalePrice`
    column:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过提供`df` DataFrame和`SalePrice`列来测试此函数：
- en: '[PRE57]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'You should get the following output:'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.23: The display of the created function for the ''SalePrice'' column'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.23：为''SalePrice''列创建的函数显示'
- en: '](img/B15019_10_23.jpg)'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_23.jpg)'
- en: 'Figure 10.23: The display of the created function for the ''SalePrice'' column'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.23：为'SalePrice'列创建的函数显示
- en: The sale price ranges from `34,900` to `755,000` with an average of `180,921`.
    The median is slightly lower than the average, which tells us there are some outliers
    with high sales prices.
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 销售价格范围从`34,900`到`755,000`，平均值为`180,921`。中位数略低于平均值，这告诉我们存在一些高销售价格的异常值。
- en: 'Create a `for` loop that will call the created function for every element from
    the `num_cols` list:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`for`循环，调用为`num_cols`列表中的每个元素创建的函数：
- en: '[PRE58]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'You should get the following output:'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.24: Display of the created function for the first few columns'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.24：显示为前几列创建的函数'
- en: contained in 'num_cols'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含在'num_cols'中
- en: '](img/B15019_10_24.jpg)'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_24.jpg)'
- en: 'Figure 10.24: Display of the created function for the first few columns contained
    in ''num_cols'''
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.24：显示为'num_cols'中包含的前几列创建的函数
- en: '*Figure 10.25* displays the truncated output. The `Id` column ranges from `1`
    to `1460`, which is the exact value as the number of rows in this dataset. This
    means this column is definitely a unique identifier of the property that was sold.
    It appears the values from the `MSSubClass` are all rounded. This may indicate
    that the information contained in this column has either been clustered into groups
    of 10 or categorical variable.'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10.25* 显示了截断的输出。`Id` 列的范围从 `1` 到 `1460`，这正是该数据集行数的准确值。这意味着该列肯定是已售财产的唯一标识符。看起来
    `MSSubClass` 的值都是四舍五入的，这可能表明该列中的信息已被分成了10为一组的类别变量。'
- en: Note
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2Q2TJEc](https://packt.live/2Q2TJEc).
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问这一特定部分的源代码，请参考：[https://packt.live/2Q2TJEc](https://packt.live/2Q2TJEc)。
- en: You can also run this example online at [https://packt.live/2Yez18U](https://packt.live/2Yez18U).
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在线运行此示例，网址：[https://packt.live/2Yez18U](https://packt.live/2Yez18U)。
- en: We saw how to explore a newly received dataset with just a few lines of code.
    This helped us to understand its structure, the type of information contained
    in each variable, and also helped us identify some potential data quality issues,
    such as missing values or incorrect values.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到如何通过几行代码探索一个新收到的数据集。这帮助我们理解其结构、每个变量中包含的信息类型，并帮助我们识别一些潜在的数据质量问题，如缺失值或不正确的值。
- en: Visualizing Your Data
  id: totrans-313
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化你的数据
- en: In the previous section, we saw how to explore a new dataset and calculate some
    simple descriptive statistics. These measures helped summarize the dataset into
    interpretable metrics, such as the average or maximum values. Now it is time to
    dive even deeper and get a more granular view of each column using data visualization.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们看到了如何探索一个新的数据集并计算一些简单的描述性统计数据。这些度量帮助我们将数据集总结成可解释的度量，例如平均值或最大值。现在是时候更深入地分析每一列数据，利用数据可视化获得更细致的视图。
- en: In a data science project, data visualization can be used either for data analysis
    or communicating gained insights. Presenting results in a visual way that stakeholders
    can easily understand and interpret them in is definitely a must-have skill for
    any good data scientist.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学项目中，数据可视化可以用于数据分析或传达获得的见解。以一种利益相关者可以轻松理解和解释的方式展示结果，绝对是任何优秀数据科学家的必备技能。
- en: 'However, in this chapter, we will be focusing on using data visualization for
    analyzing data. Most people tend to interpret information more easily on a graph
    than reading written information. For example, when looking at the following descriptive
    statistics and the scatter plot for the same variable, which one do you think
    is easier to interpret? Let''s take a look:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在本章中，我们将重点介绍使用数据可视化来分析数据。与阅读书面信息相比，大多数人倾向于更容易通过图表来解释信息。例如，在查看以下描述性统计数据和同一变量的散点图时，哪一种你认为更容易理解？我们来看看：
- en: '![Figure 10.25: Sample visual data analysis'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.25：示例可视化数据分析'
- en: '](img/B15019_10_25.jpg)'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_25.jpg)'
- en: 'Figure 10.25: Sample visual data analysis'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.25：示例可视化数据分析
- en: Even though the information shown with the descriptive statistics are more detailed,
    by looking at the graph, you have already seen that the data is stretched and
    mainly concentrated around the value 0\. It probably took you less than 1 or 2
    seconds to come up with this conclusion, that is, there is a cluster of points
    near the 0 value and that it gets reduced while moving away from it. Coming to
    this conclusion would have taken you more time if you were interpreting the descriptive
    statistics. This is the reason why data visualization is a very powerful tool
    for effectively analyzing data.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管通过描述性统计显示的信息更加详细，但通过查看图表，你已经能够看到数据被拉伸并且主要集中在0值附近。你可能用了不到1到2秒的时间就得出了这个结论：数据点聚集在0值附近，且随着远离该值而减少。如果你是在解读描述性统计数据，得出这个结论可能会花费更多时间。这就是为什么数据可视化是分析数据的一个非常强大的工具。
- en: Using the Altair API
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Altair API
- en: We will be using a package called `altair` (if you recall, we already briefly
    used it in *Chapter 5*, *Performing Your First Cluster Analysis*). There are quite
    a lot of Python packages for data visualization on the market, such as `matplotlib`,
    `seaborn`, or `Bokeh`, and compared to them, `altair` is relatively new, but its
    community of users is growing fast thanks to its simple API syntax.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个名为`altair`的包（如果你还记得，我们在*第5章*《执行你的第一次聚类分析》中已经简要使用过它）。市面上有很多用于数据可视化的Python包，比如`matplotlib`、`seaborn`或`Bokeh`，与它们相比，`altair`相对较新，但由于其简单的API语法，用户社区正在快速增长。
- en: Let's see how we can display a bar chart step by step on the online retail dataset.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何逐步在在线零售数据集上显示条形图。
- en: 'First, import the `pandas` and `altair` packages:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，导入`pandas`和`altair`包：
- en: '[PRE59]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Then, load the data into a `pandas` DataFrame:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将数据加载到`pandas`的DataFrame中：
- en: '[PRE60]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'We will randomly sample 5,000 rows of this DataFrame using the `sample()` method
    (`altair` requires additional steps in order to display a larger dataset):'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将随机抽取5,000行数据使用`sample()`方法（`altair`需要额外的步骤来显示更大的数据集）：
- en: '[PRE61]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Now instantiate a `Chart` object from `altair` with the `pandas` DataFrame
    as its input parameter:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，从`altair`实例化一个`Chart`对象，并将`pandas`的DataFrame作为输入参数：
- en: '[PRE62]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Next, we call the `mark_circle()` method to specify the type of graph we want
    to plot: a scatter plot:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们调用`mark_circle()`方法来指定我们想绘制的图表类型：散点图：
- en: '[PRE63]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Finally, we specify the names of the columns that will be displayed on the
    *x* and *y* axes using the `encode()` method:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用`encode()`方法指定将在*x*轴和*y*轴上显示的列名称：
- en: '[PRE64]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'We just plotted a scatter plot in seven lines of code:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仅用七行代码就绘制了一个散点图：
- en: '![Figure 10.26: Output of the scatter plot'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.26：散点图输出'
- en: '](img/B15019_10_26.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_26.jpg)'
- en: 'Figure 10.26: Output of the scatter plot'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.26：散点图输出
- en: 'Altair provides the option for combining its methods all together into one
    single line of code, like this:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: Altair提供了将其方法组合成一行代码的选项，像这样：
- en: '[PRE65]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'You should get the following output:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.27: Output of the scatter plot with combined altair methods'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.27：结合altair方法的散点图输出'
- en: '](img/B15019_10_27.jpg)'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_27.jpg)'
- en: 'Figure 10.27: Output of the scatter plot with combined altair methods'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.27：结合altair方法的散点图输出
- en: 'We can see that we got the exact same output as before. This graph shows us
    that there are a lot of outliers (extreme values) for both variables: most of
    the values of `UnitPrice` are below 100, but there are some over 300, and `Quantity`
    ranges from -200 to 800, while most of the observations are between -50 to 150\.
    We can also notice a pattern where items with a high unit price have lower quantity
    (items over 50 in terms of unit price have a quantity close to 0) and the opposite
    is also true (items with a quantity over 100 have a unit price close to 0).'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，输出和之前完全相同。这个图表显示了两个变量都有很多离群值（极端值）：`UnitPrice`的大多数值都在100以下，但也有超过300的值，`Quantity`的范围从-200到800，而大部分观测值都在-50到150之间。我们还可以注意到一个模式，单位价格高的物品其数量较低（单位价格超过50的物品数量接近0），反之亦然（数量超过100的物品单位价格接近0）。
- en: 'Now, let''s say we want to visualize the same plot while adding the `Country`
    column''s information. One easy way to do this is to use the `color` parameter
    from the `encode()` method. This will color all the data points according to their
    value in the `Country` column:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们想在同一个图表中展示`Country`列的信息。实现这一点的一个简单方法是使用`encode()`方法中的`color`参数。这样就可以根据`Country`列的值为所有数据点上色：
- en: '[PRE66]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'You should get the following output:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.28: Scatter plot with colors based on the ''Country'' column'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.28：基于“Country”列颜色的散点图'
- en: '](img/B15019_10_28.jpg)'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_28.jpg)'
- en: 'Figure 10.28: Scatter plot with colors based on the ''Country'' column'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.28：基于“Country”列颜色的散点图
- en: 'We added the information from the `Country` column into the graph, but as we
    can see, there are too many values and it is hard to differentiate between countries:
    there are a lot of blue points, but it is hard to tell which countries they are
    representing.'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`Country`列的信息加入到图表中，但正如我们所见，值太多了，难以区分不同的国家：有很多蓝色的点，但很难判断它们代表的是哪个国家。
- en: 'With `altair`, we can easily add some interactions on the graph in order to
    display more information for each observation; we just need to use the `tooltip`
    parameter from the `encode()` method and specify the list of columns to be displayed
    and then call the `interactive()` method to make the whole thing interactive (as
    seen previously in *Chapter 5*, *Performing Your First Cluster Analysis*):'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`altair`，我们可以轻松地在图表上添加一些交互，以便为每个观测点显示更多的信息；我们只需使用`encode()`方法中的`tooltip`参数，并指定要显示的列列表，然后调用`interactive()`方法使整个图表变得可交互（如在*第五章*，*执行第一次聚类分析*中所见）：
- en: '[PRE67]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'You should get the following output:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.29: Interactive scatter plot with tooltip'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.29：带有工具提示的交互式散点图'
- en: '](img/B15019_10_29.jpg)'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_29.jpg)'
- en: 'Figure 10.29: Interactive scatter plot with tooltip'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.29：带有工具提示的交互式散点图
- en: 'Now, if we hover on the observation with the highest `UnitPrice` value (the
    one near 600), we can see the information displayed by the tooltip: this observation
    doesn''t have any value for `StockCode` and its `Description` is `Manual`. So,
    it seems that this is not a normal transaction to happen on the website. It may
    be a special order that has been manually entered into the system. This is something
    you will have to discuss with your stakeholder and confirm.'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们将鼠标悬停在`UnitPrice`值最高的观测点（即接近600的那个），我们可以看到工具提示显示的信息：这个观测点没有`StockCode`的值，它的`Description`是`Manual`。因此，看起来这不是网站上发生的正常交易。这可能是一个手动输入到系统中的特殊订单。这个问题你需要与相关方讨论并确认。
- en: Histogram for Numerical Variables
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数值型变量的直方图
- en: Now that we are familiar with the `altair` API, let's have a look at some specific
    type of charts that will help us analyze and understand each variable. First,
    let's focus on numerical variables such as `UnitPrice` or `Quantity` in the online
    retail dataset.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了`altair` API，让我们来看看一些特定类型的图表，这些图表将帮助我们分析并理解每个变量。首先，我们关注在线零售数据集中的数值型变量，如`UnitPrice`或`Quantity`。
- en: For this type of variable, a histogram is usually used to show the distribution
    of a given variable. The x axis of a histogram will show the possible values in
    this column and the y axis will plot the number of observations that fall under
    each value. Since the number of possible values can be very high for a numerical
    variable (potentially an infinite number of potential values), it is better to
    group these values by chunks (also called bins). For instance, we can group prices
    into bins of 10 steps (that is, groups of 10 items each) such as 0 to 10, 11 to
    20, 21 to 30, and so on.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种类型的变量，通常使用直方图来展示给定变量的分布情况。直方图的x轴显示此列中的可能值，y轴绘制落在每个值下的观测数量。由于数值型变量的可能值非常多（可能是无限多个潜在值），因此最好将这些值分组为若干个区间（也叫做箱体）。例如，我们可以将价格分为10步的区间（即每组10个项目），比如0到10，11到20，21到30，依此类推。
- en: 'Let''s look at this by using a real example. We will plot a histogram for `''UnitPrice''`
    using the `mark_bar()` and `encode()` methods with the following parameters:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过实际的例子来看这个问题。我们将使用`mark_bar()`和`encode()`方法，结合以下参数来绘制`'UnitPrice'`的直方图：
- en: '`alt.X("UnitPrice:Q", bin=True)`: This is another `altair` API syntax that
    allows you to tune some of the parameters for the x axis. Here, we are telling
    altair to use the `''UnitPrice''` column as the axis. `'':Q''` specifies that
    this column is quantitative data (that is, numerical) and `bin=True` forces the
    grouping of the possible values into bins.'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alt.X("UnitPrice:Q", bin=True)`：这是另一个`altair` API语法，允许你调整x轴的一些参数。在这里，我们告诉`altair`使用`''UnitPrice''`列作为轴。`'':Q''`表示这一列是定量数据（即数值型），而`bin=True`强制将可能的值分组为箱体。'
- en: '`y=''count()''`: This is used for calculating the number of observations and
    plotting them on the y axis, like so:'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`y=''count()''`：用于计算观测数量并将其绘制在y轴上，如下所示：'
- en: '[PRE68]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'You should get the following output:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.30: Histogram for UnitPrice with the default bin step size'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.30：带有默认箱体步长的UnitPrice直方图'
- en: '](img/B15019_10_30.jpg)'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_30.jpg)'
- en: 'Figure 10.30: Histogram for UnitPrice with the default bin step size'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.30：带有默认箱体步长的UnitPrice直方图
- en: 'By default, `altair` grouped the observations by bins of 100 steps: 0 to 100,
    then 100 to 200, and so on. The step size that was chosen is not optimal as almost
    all the observations fell under the first bin (0 to 100) and we can''t see any
    other bin. With `altair`, we can specify the values of the parameter bin and we
    will try this with 5, that is, `alt.Bin(step=5)`:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`altair`将观测值按100步的区间进行分组：从0到100，然后是100到200，以此类推。选择的步长并不理想，因为几乎所有的观测值都落在第一个区间（0到100）内，我们看不到其他的区间。使用`altair`时，我们可以指定`bin`参数的值，我们将尝试使用步长为5，即`alt.Bin(step=5)`：
- en: '[PRE69]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'You should get the following output:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.31: Histogram for UnitPrice with a bin step size of 5'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.31：单价的直方图，步长为5'
- en: '](img/B15019_10_31.jpg)'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_31.jpg)'
- en: 'Figure 10.31: Histogram for UnitPrice with a bin step size of 5'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.31：单价的直方图，步长为5
- en: This is much better. With this step size, we can see that most of the observations
    have a unit price under 5 (almost 4,200 observations). We can also see that a
    bit more than 500 data points have a unit price under 10\. The count of records
    keeps decreasing as the unit price increases.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 这样好多了。通过这个步长，我们可以看到大多数观测值的单价低于5（几乎4,200个观测值）。我们还可以看到有500多个数据点的单价低于10。随着单价的增加，记录的数量逐渐减少。
- en: 'Let''s plot the histogram for the `Quantity` column with a bin step size of
    10:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们绘制`Quantity`列的直方图，步长为10：
- en: '[PRE70]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'You should get the following output:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.32: Histogram for Quantity with a bin step size of 10'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.32：数量的直方图，步长为10'
- en: '](img/B15019_10_32.jpg)'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_32.jpg)'
- en: 'Figure 10.32: Histogram for Quantity with a bin step size of 10'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.32：数量的直方图，步长为10
- en: In this histogram, most of the records have a positive quantity between 0 and
    30 (first three highest bins). There is also a bin with around 50 observations
    that have a negative quantity from -10 to 0\. As we mentioned earlier, these may
    be returned items from customers.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个直方图中，大多数记录的数量在0到30之间（前几个最高的区间）。还有一个区间约有50个观测值，它们的数量在-10到0之间。如前所述，这些可能是客户退货的商品。
- en: Bar Chart for Categorical Variables
  id: totrans-386
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类别变量的条形图
- en: 'Now, we are going to have a look at categorical variables. For such variables,
    there is no need to group the values into bins as, by definition, they have a
    limited number of potential values. We can still plot the distribution of such
    columns using a simple bar chart. In `altair`, this is very simple – it is similar
    to plotting a histogram but without the `bin` parameter. Let''s try this on the
    `Country` column and look at the number of records for each of its values:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将来看一下类别变量。对于这类变量，不需要将值分组为区间，因为它们的潜在值数量有限。我们仍然可以通过简单的条形图绘制这些列的分布。在`altair`中，这非常简单——它与绘制直方图类似，但没有`bin`参数。我们将尝试在`Country`列上进行这个操作，查看每个值的记录数量：
- en: '[PRE71]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'You should get the following output:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.33: Bar chart of the Country column''s occurrence'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.33：国家列的出现次数的条形图'
- en: '](img/B15019_10_33.jpg)'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_33.jpg)'
- en: 'Figure 10.33: Bar chart of the Country column''s occurrence'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.33：国家列的出现次数的条形图
- en: We can confirm that `United Kingdom` is the most represented country in this
    dataset (and by far), followed by `Germany`, `France`, and `EIRE`. We clearly
    have imbalanced data that may affect the performance of a predictive model. In
    *Chapter 13*, *Imbalanced Datasets*, we will look at how we can handle this situation.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以确认`United Kingdom`是这个数据集中最具代表性的国家（远远超过其他国家），其次是`Germany`、`France`和`EIRE`。我们显然有不平衡的数据，这可能会影响预测模型的性能。在*第13章*，*不平衡数据集*中，我们将探讨如何处理这种情况。
- en: 'Now, let''s analyze the datetime column, that is, `InvoiceDate`. The `altair`
    package provides some functionality that we can use to group datetime information
    by period, such as day, day of week, month, and so on. For instance, if we want
    to have a monthly view of the distribution of a variable, we can use the `yearmonth`
    function to group datetimes. We also need to specify that the type of this variable
    is ordinal (there is an order between the values) by adding `:O` to the column
    name:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们分析日期时间列，即`InvoiceDate`。`altair`包提供了一些功能，我们可以利用这些功能按时间段（如天、星期几、月等）对日期时间信息进行分组。例如，如果我们希望查看一个变量的按月分布，可以使用`yearmonth`函数对日期时间进行分组。我们还需要通过在列名后添加`:O`来指定该变量的类型是顺序型（值之间有顺序）：
- en: '[PRE72]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'You should get the following output:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.34: Distribution of InvoiceDate by month'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.34：按月份分布的发票日期'
- en: '](img/B15019_10_34.jpg)'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_34.jpg)'
- en: 'Figure 10.34: Distribution of InvoiceDate by month'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.34：按月分布的发票日期
- en: This graph tells us that there was a huge spike of items sold in November 2011\.
    It peaked to 800 items sold in this month, while the average is around 300\. Was
    there a promotion or an advertising campaign run at that time that can explain
    this increase? These are the questions you may want to ask your stakeholders so
    that they can confirm this sudden increase of sales.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 该图表告诉我们，2011年11月的销售量出现了巨大的峰值。该月售出了800件商品，而平均销售量大约为300件。那时是否有促销或广告活动？这些都是你可能需要向利益相关者提问的问题，以便他们能确认这一销售激增的原因。
- en: Boxplots
  id: totrans-401
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 箱形图
- en: 'Now, we will have a look at another specific type of chart called a **boxplot**.
    This kind of graph is used to display the distribution of a variable based on
    its quartiles. Quartiles are the values that split a dataset into quarters. Each
    quarter contains exactly 25% of the observations. For example, in the following
    sample data, the quartiles will be as follows:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看看另一种特殊类型的图表——**箱形图**。这种图表用于显示基于四分位数的变量分布。四分位数是将数据集分成四个部分的值。每个部分包含25%的观测值。例如，在以下样本数据中，四分位数如下：
- en: '![Figure 10.35: Example of quartiles for the given data'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.35：给定数据的四分位数示例'
- en: '](img/B15019_10_35.jpg)'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_35.jpg)'
- en: 'Figure 10.35: Example of quartiles for the given data'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.35：给定数据的四分位数示例
- en: So, the first quartile (usually referred to as Q1) is 4; the second one (Q2),
    which is also the median, is 5; and the third quartile (Q3) is 8.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，第一个四分位数（通常称为Q1）是4；第二个四分位数（Q2），也就是中位数，是5；第三个四分位数（Q3）是8。
- en: 'A boxplot will show these quartiles but also additional information, such as
    the following:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 箱形图将显示这些四分位数，还会显示一些额外的信息，如下所示：
- en: The **interquartile range (or IQR)**, which corresponds to Q3 - Q1
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**四分位差（IQR）**，即Q3 - Q1'
- en: The *lowest* value, which corresponds to Q1 - (1.5 * IQR)
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*最低*值，等于Q1 - (1.5 * IQR)'
- en: The *highest* value, which corresponds to Q3 + (1.5 * IQR)
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*最高*值，等于Q3 + (1.5 * IQR)'
- en: 'Outliers, that is, any point outside of the lowest and highest points:![Figure
    10.36: Example of a boxplot'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常值，也就是任何超出最低点和最高点的点：![图 10.36：箱形图示例
- en: '](img/B15019_10_36.jpg)'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_36.jpg)'
- en: 'Figure 10.36: Example of a boxplot'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.36：箱形图示例
- en: With a boxplot, it is quite easy to see the central point (median), where 50%
    of the data falls under (IQR), and the outliers.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 使用箱形图，我们很容易看到中心点（中位数），50%的数据落在（IQR）下方，以及异常值。
- en: 'Another benefit of using a boxplot is to plot the distribution of categorical
    variables against a numerical variable and compare them. Let''s try it with the
    `Country` and `Quantity` columns using the `mark_boxplot()` method:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 使用箱形图的另一个好处是，可以绘制分类变量与数值变量的分布，并进行比较。让我们通过`mark_boxplot()`方法尝试一下`Country`和`Quantity`列：
- en: '[PRE73]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'You should receive the following output:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.37: Boxplot of the ''Country'' and ''Quantity'' columns'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.37：''Country''和''Quantity''列的箱形图'
- en: '](img/B15019_10_37.jpg)'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_37.jpg)'
- en: 'Figure 10.37: Boxplot of the ''Country'' and ''Quantity'' columns'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.37：'Country'和'Quantity'列的箱形图
- en: This chart shows us how the `Quantity` variable is distributed across the different
    countries for this dataset. We can see that `United Kingdom` has a lot of outliers,
    especially in the negative values. `Eire` is another country that has negative
    outliers. Most of the countries have very low value quantities except for `Japan`,
    `Netherlands`, and `Sweden`, who sold more items.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 此图显示了`Quantity`变量在不同国家之间的分布情况。我们可以看到`United Kingdom`有很多异常值，尤其是在负值上。`Eire`是另一个有负值异常值的国家。除`Japan`、`Netherlands`和`Sweden`外，大多数国家的销售量都非常低。
- en: In this section, we saw how to use the `altair` package to generate graphs that
    helped us get additional insights about the dataset and identify some potential
    issues.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们展示了如何使用`altair`包生成图表，这些图表帮助我们深入了解数据集，并识别出一些潜在问题。
- en: 'Exercise 10.04: Visualizing the Ames Housing Dataset with Altair'
  id: totrans-423
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 10.04：使用Altair可视化Ames Housing数据集
- en: In this exercise, we will learn how to get a better understanding of a dataset
    and the relationship between variables using data visualization features such
    as histograms, scatter plots, or boxplots.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次练习中，我们将学习如何使用数据可视化功能，如直方图、散点图或箱形图，来更好地理解数据集以及变量之间的关系。
- en: Note
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You will be using the same Ames housing dataset that was used in the previous
    exercises.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用与之前练习中相同的Ames housing数据集。
- en: Open a new Colab notebook.
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的Colab笔记本。
- en: 'Import the `pandas` and `altair` packages:'
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`pandas`和`altair`包：
- en: '[PRE74]'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Assign the link to the AMES dataset to a variable called `file_url`:'
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将AMES数据集的链接赋值给名为`file_url`的变量：
- en: '[PRE75]'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Using the `read_csv` method from the pandas package, load the dataset into
    a new variable called `''df''`:'
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pandas`包中的`read_csv`方法，将数据集加载到名为`'df'`的新变量中：
- en: '[PRE76]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Plot the histogram for the `SalePrice` variable using the `mark_bar()` and
    `encode()` methods from the `altair` package. Use the `alt.X` and `alt.Bin` APIs
    to specify the number of bin steps, that is, `50000`:'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`altair`包中的`mark_bar()`和`encode()`方法绘制`SalePrice`变量的直方图。使用`alt.X`和`alt.Bin`
    API来指定箱子步长的数量，即`50000`：
- en: '[PRE77]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'You should get the following output:'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.38: Histogram of SalePrice'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.38：`SalePrice`的直方图'
- en: '](img/B15019_10_38.jpg)'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_38.jpg)'
- en: 'Figure 10.38: Histogram of SalePrice'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.38：`SalePrice`的直方图
- en: This chart shows that most of the properties have a sale price centered around
    `100,000 – 150,000`. There are also a few outliers with a high sale price over
    `500,000`.
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该图表显示，大多数房产的售价集中在`100,000 – 150,000`之间。也有少数异常值，其售价超过`500,000`。
- en: 'Now, let''s plot the histogram for `LotArea` but this time with a bin step
    size of `10000`:'
  id: totrans-441
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们绘制`LotArea`的直方图，但这次使用步长为`10000`的箱子：
- en: '[PRE78]'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'You should get the following output:'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.39: Histogram of LotArea'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.39：`LotArea`的直方图'
- en: '](img/B15019_10_39.jpg)'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_39.jpg)'
- en: 'Figure 10.39: Histogram of LotArea'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.39：`LotArea`的直方图
- en: '`LotArea` has a totally different distribution compared to `SalePrice`. Most
    of the observations are between `0` and `20,000`. The rest of the observations
    represent a small portion of the dataset. We can also notice some extreme outliers
    over `150,000`.'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`LotArea`的分布与`SalePrice`完全不同。大多数观测值介于`0`和`20,000`之间，其余观测值则占数据集的一小部分。我们还可以注意到有一些极端的异常值，超过`150,000`。'
- en: 'Now, plot a scatter plot with `LotArea` as the *x* axis and `SalePrice` as
    the *y* axis to understand the interactions between these two variables:'
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，绘制一个散点图，将`LotArea`作为*X*轴，`SalePrice`作为*Y*轴，以了解这两个变量之间的关系：
- en: '[PRE79]'
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'You should get the following output:'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.40: Scatter plot of SalePrice and LotArea'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.40：`SalePrice`和`LotArea`的散点图'
- en: '](img/B15019_10_40.jpg)'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_40.jpg)'
- en: 'Figure 10.40: Scatter plot of SalePrice and LotArea'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.40：`SalePrice`和`LotArea`的散点图
- en: 'There is clearly a correlation between the size of the property and the sale
    price. If we look only at the properties with `LotArea` under 50,000, we can see
    a linear relationship: if we draw a straight line from the (`0,0`) coordinates
    to the (`20000,800000`) coordinates, we can say that `SalePrice` increases by
    40,000 for each additional increase of 1,000 for `LotArea`. The formula of this
    straight line (or regression line) will be `SalePrice = 40000 * LotArea / 1000`.
    We can also see that, for some properties, although their size is quite high,
    their price didn''t follow this pattern. For instance, the property with a size
    of 160,000 has been sold for less than 300,000.'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显然，房产大小和售价之间存在一定的相关性。如果我们仅观察`LotArea`小于50,000的房产，可以看到它们之间呈线性关系：如果我们从（`0,0`）坐标画一条直线到（`20000,800000`）坐标，可以说`SalePrice`随着`LotArea`每增加1,000而增加40,000。这个直线（或回归线）的公式为`SalePrice
    = 40000 * LotArea / 1000`。我们还可以看到，对于某些房产，尽管它们的面积相当大，但价格并未遵循这种模式。例如，面积为160,000的房产以不到300,000的价格售出。
- en: 'Now, let''s plot the histogram for `OverallCond`, but this time with the default
    bin step size, that is, (`bin=True`):'
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们绘制`OverallCond`的直方图，但这次使用默认的箱子步长，即（`bin=True`）：
- en: '[PRE80]'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'You should get the following output:'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到如下输出：
- en: '![Figure 10.41: Histogram of OverallCond'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.41：`OverallCond`的直方图'
- en: '](img/B15019_10_41.jpg)'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_41.jpg)'
- en: 'Figure 10.41: Histogram of OverallCond'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.41：`OverallCond`的直方图
- en: 'We can see that the values contained in this column are discrete: they can
    only take a finite number of values (any integer between `1` and `9`). This variable
    is not numerical, but ordinal: the order matters, but you can''t perform some
    mathematical operations on it such as adding value `2` to value `8`. This column
    is an arbitrary mapping to assess the overall quality of the property. In the
    next chapter, we will look at how we can change the type of such a column.'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到该列中的值是离散的：它们只能取有限的值（介于`1`和`9`之间的任何整数）。这个变量不是数值型的，而是有序的：顺序很重要，但你不能对其执行一些数学运算，比如将值`2`加到值`8`上。这个列是对房产整体质量的一个任意映射。在下一章，我们将探讨如何改变这种列的数据类型。
- en: 'Build a boxplot with `OverallCond:O` (`'':O''` is for specifying that this
    column is ordinal) on the *x* axis and `SalePrice` on the *y* axis using the `mark_boxplot()`
    method, as shown in the following code snippet:'
  id: totrans-462
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`mark_boxplot()`方法，构建一个箱线图，将`OverallCond:O`（`':O'`表示该列为有序列）作为 *x* 轴，将`SalePrice`作为
    *y* 轴，如下代码片段所示：
- en: '[PRE81]'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'You should get the following output:'
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.42: Boxplot of OverallCond'
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.42：OverallCond的箱线图'
- en: '](img/B15019_10_42.jpg)'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_42.jpg)'
- en: 'Figure 10.42: Boxplot of OverallCond'
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.42：OverallCond的箱线图
- en: 'It seems that the `OverallCond` variable is in ascending order: the sales price
    is higher if the condition value is high. However, we will notice that `SalePrice`
    is quite high for the value 5, which seems to represent a medium condition. There
    may be other factors impacting the sales price for this category, such as higher
    competition between buyers for such types of properties.'
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 看起来`OverallCond`变量是按升序排列的：条件值高时销售价格较高。然而，我们会发现，`SalePrice`在条件值为5时较高，这似乎代表中等状态。可能有其他因素影响这一类别的销售价格，例如，买家之间的竞争较为激烈。
- en: 'Now, let''s plot a bar chart for `YrSold` as its *x* axis and `count()` as
    its *y* axis. Don''t forget to specify that `YrSold` is an ordinal variable and
    not numerical using `'':O''`:'
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们绘制一个柱状图，以`YrSold`作为 *x* 轴，`count()`作为 *y* 轴。不要忘记使用`':O'`来指定`YrSold`是有序变量而非数值变量：
- en: '[PRE82]'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'You should get the following output:'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.43: Bar chart of YrSold'
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.43：YrSold的柱状图'
- en: '](img/B15019_10_43.jpg)'
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_43.jpg)'
- en: 'Figure 10.43: Bar chart of YrSold'
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.43：YrSold的柱状图
- en: We can see that, roughly, the same number of properties are sold every year,
    except for 2010\. From 2006 to 2009, there was, on average, 310 properties sold
    per year, while there were only 170 in 2010\.
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到，除2010年外，几乎每年售出的房产数量相同。从2006年到2009年，平均每年售出310套房产，而2010年仅售出170套。
- en: 'Plot a boxplot similar to the one shown in *Step 8* but for `YrSold` as its
    *x* axis:'
  id: totrans-476
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制一个类似于*步骤8*中的箱线图，但将`YrSold`作为其 *x* 轴：
- en: '[PRE83]'
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'You should get the following output:'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.44: Boxplot of YrSold and SalePrice'
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.44：YrSold与SalePrice的箱线图'
- en: '](img/B15019_10_44.jpg)'
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_44.jpg)'
- en: 'Figure 10.44: Boxplot of YrSold and SalePrice'
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.44：YrSold与SalePrice的箱线图
- en: Overall, the median sale price is quite stable across the years, with a slight
    decrease in 2010.
  id: totrans-482
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 总体来看，销售价格的中位数在各年份之间相当稳定，2010年略有下降。
- en: 'Let''s analyze the relationship between `SalePrice` and `Neighborhood` by plotting
    a bar chart, similar to the one shown in *Step 9*:'
  id: totrans-483
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过绘制类似于*步骤9*中的柱状图，来分析`SalePrice`与`Neighborhood`之间的关系：
- en: '[PRE84]'
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'You should get the following output:'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.45: Bar chart of Neighborhood'
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.45：邻里的柱状图'
- en: '](img/B15019_10_45.jpg)'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_45.jpg)'
- en: 'Figure 10.45: Bar chart of Neighborhood'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.45：邻里的柱状图
- en: 'The number of sold properties differs, depending on their location. The `''NAmes''`
    neighborhood has the higher number of properties sold: over 220\. On the other
    hand, neighborhoods such as `''Blueste''` or `''NPkVill''` only had a few properties
    sold.'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已售房产的数量根据位置不同有所差异。`'NAmes'`邻里售出的房产数量最多，超过220套。相反，像`'Blueste'`或`'NPkVill'`这样的邻里仅售出了几套房产。
- en: 'Let''s analyze the relationship between `SalePrice` and `Neighborhood` by plotting
    a boxplot chart similar to the one in *Step 10*:'
  id: totrans-490
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过绘制一个类似于*步骤10*中的箱线图，来分析`SalePrice`与`Neighborhood`之间的关系：
- en: '[PRE85]'
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'You should get the following output:'
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '![Figure 10.46: Boxplot of Neighborhood and SalePrice'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.46：邻里与SalePrice的箱线图'
- en: '](img/B15019_10_46.jpg)'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15019_10_46.jpg)'
- en: 'Figure 10.46: Boxplot of Neighborhood and SalePrice'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.46：邻里与SalePrice的箱线图
- en: The location of the properties that were sold has a significant impact on the
    sale price. The `noRidge`, `NridgHt`, and `StoneBr` neighborhoods have a higher
    price overall. It is also worth noting that there are some extreme outliers for
    `NoRidge` where some properties have been sold with a price that's much higher
    than other properties in this neighborhood.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 已售房产的地理位置对销售价格有显著影响。`noRidge`、`NridgHt`和`StoneBr`等邻里地区的房价普遍较高。值得注意的是，`NoRidge`中存在一些极端的异常值，某些房产的售价远高于该邻里其他房产的价格。
- en: Note
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2CDWfO4](https://packt.live/2CDWfO4).
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 若要访问此特定部分的源代码，请参考[https://packt.live/2CDWfO4](https://packt.live/2CDWfO4)。
- en: This section does not currently have an online interactive example, but can
    be run as usual on Google Colab.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分目前没有在线互动示例，但可以像往常一样在 Google Colab 上运行。
- en: With this analysis, we've completed this exercise. We saw that, by using data
    visualization, we can get some valuable insights about the dataset. For instance,
    using a scatter plot, we identified a linear relationship between `SalePrice`
    and `LotArea`, where the price tends to increase as the size of the property gets
    bigger. Histograms helped us to understand the distribution of the numerical variables
    and bar charts gave us a similar view for categorical variables. For example,
    we saw that there are more sold properties in some neighborhoods compared to others.
    Finally, we were able to analyze and compare the impact of different values of
    a variable on `SalePrice` through the use of a boxplot. We saw that the better
    condition a property is in, the higher the sale price will be. Data visualization
    is a very important tool for data scientists so that they can explore and analyze
    datasets.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 通过数据可视化进行此分析，我们完成了此练习。通过数据可视化，我们可以获得关于数据集的一些宝贵见解。例如，使用散点图，我们确定了`SalePrice`与`LotArea`之间的线性关系，即随着物业面积的增大，价格倾向于增加。直方图帮助我们了解数值变量的分布，条形图则为分类变量提供了类似的视图。例如，我们看到某些社区出售的房产比其他社区更多。最后，通过箱线图，我们能够分析和比较不同变量值对`SalePrice`的影响。我们看到，房产的良好状态将会使销售价格更高。数据可视化是数据科学家的重要工具，让他们能够探索和分析数据集。
- en: 'Activity 10.01: Analyzing Churn Data Using Visual Data Analysis Techniques'
  id: totrans-501
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 10.01：使用视觉数据分析技术分析流失数据
- en: You are working for a major telecommunications company. The marketing department
    has noticed a recent spike of customer churn (*customers that stopped using or
    canceled their service from the company*).
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 你正在为一家主要的电信公司工作。市场部门注意到最近客户流失率出现了上升（*停止使用或取消公司服务的客户*）。
- en: You have been asked to analyze the customer profiles and predict future customer
    churn. Before building the predictive model, your first task is to analyze the
    data the marketing department has shared with you and assess its overall quality.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 要求您分析客户配置文件并预测未来的客户流失。在构建预测模型之前，您的第一个任务是分析市场部门与您共享的数据并评估其整体质量。
- en: Note
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The dataset to be used in this activity can be found on our GitHub repository:
    [https://packt.live/2s1yquq](https://packt.live/2s1yquq).'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在我们的 GitHub 仓库中找到此活动中要使用的数据集：[https://packt.live/2s1yquq](https://packt.live/2s1yquq)。
- en: 'The dataset we are going to be using was has originally shared by Eduardo Arino
    De La Rubia on Data.World: [https://packt.live/2s1ynie](https://packt.live/2s1ynie).'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的数据集最初由 Eduardo Arino De La Rubia 在 Data.World 上共享：[https://packt.live/2s1ynie](https://packt.live/2s1ynie)。
- en: 'The following steps will help you complete this activity:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助您完成此活动：
- en: Download and load the dataset into Python using `.read_csv()`.
  id: totrans-508
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `.read_csv()` 在 Python 中下载并加载数据集。
- en: Explore the structure and content of the dataset by using `.shape`, `.dtypes`,
    `.head()`, `.tail()`, or `.sample()`.
  id: totrans-509
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用`.shape`、`.dtypes`、`.head()`、`.tail()`或`.sample()` 探索数据集的结构和内容。
- en: Calculate and interpret descriptive statistics with `.describe()`.
  id: totrans-510
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `.describe()` 计算并解释描述性统计信息。
- en: Analyze each variable using data visualization with bar charts, histograms,
    or boxplots.
  id: totrans-511
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用条形图、直方图或箱线图分析每个变量。
- en: Identify areas that need clarification from the marketing department and potential
    data quality issues.
  id: totrans-512
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别需要向市场部门澄清的问题和潜在的数据质量问题。
- en: '**Expected Output**'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: '**期望的输出**'
- en: 'Here is the expected bar chart output:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 这是预期的条形图输出：
- en: '![Figure 10.47: Expected bar chart output'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.47：预期的条形图输出'
- en: '](img/B15019_10_47.jpg)'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_47.jpg)'
- en: 'Figure 10.47: Expected bar chart output'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.47：预期的条形图输出
- en: 'Here is the expected histogram output:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 这是预期的直方图输出：
- en: '![Figure 10.48: Expected histogram output'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.48：预期的直方图输出'
- en: '](img/B15019_10_48.jpg)'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_48.jpg)'
- en: 'Figure 10.48: Expected histogram output'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.48：预期的直方图输出
- en: 'Here is the expected boxplot output:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 这是预期的箱线图输出：
- en: '![Figure 10.49: Expected boxplot output'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.49：预期的箱线图输出'
- en: '](img/B15019_10_49.jpg)'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15019_10_49.jpg)'
- en: 'Figure 10.49: Expected boxplot output'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.49：预期的箱线图输出
- en: Note
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The solution to this activity can be found here: [https://packt.live/2GbJloz](https://packt.live/2GbJloz).'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 此活动的解决方案可在此处找到：[https://packt.live/2GbJloz](https://packt.live/2GbJloz)。
- en: 'You just completed the activity for this chapter. You have analyzed the dataset
    related to customer churn. You learned a lot about this dataset using descriptive
    statistics and data visualization. In a few lines of codes, you understood the
    structure of the DataFrame (number of rows and columns) and the type of information
    contained in each variable. By plotting the distribution of some columns, we learned
    there are specific charges for day, evening, or international calls. We also saw
    that the churn variable is imbalanced: there are roughly only 10% of customers
    who churn. Finally, we saw that one of the variables, `numbervmailmessages`, has
    a very different distribution for customers who churned or not. This may be a
    strong predictor for customer churn.'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚完成了本章的活动。你已经分析了与客户流失相关的数据集。你通过描述性统计和数据可视化学到了很多关于这个数据集的内容。在几行代码中，你理解了DataFrame的结构（行数和列数）以及每个变量中包含的信息类型。通过绘制某些列的分布，我们发现对于白天、晚上或国际电话存在特定的收费。我们还看到流失变量是不平衡的：大约只有10%的客户会流失。最后，我们发现其中一个变量`numbervmailmessages`，对于流失客户和非流失客户的分布有很大不同。这可能是一个强有力的客户流失预测因子。
- en: Summary
  id: totrans-529
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: You just learned a lot regarding how to analyze a dataset. This a very critical
    step in any data science project. Getting a deep understanding of the dataset
    will help you to better assess the feasibility of achieving the requirements from
    the business.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚学到了很多关于如何分析数据集的知识。这是任何数据科学项目中非常关键的一步。深入了解数据集将帮助你更好地评估实现业务要求的可行性。
- en: Getting the right data in the right format at the right level of quality is
    key for getting good predictive performance for any machine learning algorithm.
    This is why it is so important to take the time analyzing the data before proceeding
    to the next stage. This task is referred to as the data understanding phase in
    the CRISP-DM methodology and can also be called **Exploratory Data Analysis**
    (**EDA**).
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 获取正确格式、质量合格的数据，对于任何机器学习算法来说，都是获得良好预测性能的关键。这就是为什么在进入下一阶段之前，花时间分析数据是如此重要。这一任务在CRISP-DM方法论中被称为数据理解阶段，也可以称为**探索性数据分析**（**EDA**）。
- en: You learned how to use descriptive statistics to summarize key attributes of
    the dataset such as the average value of a numerical column, its spread with standard
    deviation or its range (minimum and maximum values), the unique values of a categorical
    variable, and its most frequent values. You also saw how to use data visualization
    to get valuable insights for each variable. Now, you know how to use scatter plots,
    bar charts, histograms, and boxplots to understand the distribution of a column.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 你学会了如何使用描述性统计来总结数据集的关键属性，比如数值列的平均值、标准差或范围（最小值和最大值）、类别变量的唯一值以及它的最频繁值。你还学习了如何使用数据可视化来获得每个变量的有价值见解。现在，你知道如何使用散点图、条形图、直方图和箱线图来理解列的分布。
- en: 'While analyzing the data, we came across additional questions that, in a normal
    project, need to be addressed with the business. We also spotted some potential
    data quality issues, such as missing values, outliers, or incorrect values that
    need to be fixed. This is the topic we will cover in the next chapter: preparing
    the data. Stay tuned.'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析数据时，我们遇到了需要在正常项目中与业务讨论的额外问题。我们还发现了一些潜在的数据质量问题，比如缺失值、离群值或需要修正的不正确值。这将是我们在下章中讨论的主题：数据准备。敬请期待。
