- en: '19'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '19'
- en: Random Variables and Distributions
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量与分布
- en: 'Having a probability space to model our experiments and observations is fine
    and all, but in almost all of the cases, we are interested in a quantitative measure
    of the outcome. To give you an example, let’s consider an already familiar situation:
    tossing coins. Suppose that we are tossing a fair coin n times but we are only
    interested in the number of heads. How do we model the probability space this
    time?'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有一个概率空间来建模我们的实验和观察是可以的，但在几乎所有的情况下，我们关心的是结果的定量度量。举个例子，假设我们进行 n 次公正的硬币抛掷，但我们只关心正面朝上的次数。我们该如何建模这个概率空间呢？
- en: 'By taking things one step at a time; first, we construct an event space by
    enumerating all possible outcomes in a single set, just like we already did in
    Section [18.2.1](ch030.xhtml#event-spaces-and-algebras):'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一步步来；首先，我们通过列举所有可能的结果在一个集合中构造一个事件空间，就像我们在第[18.2.1](ch030.xhtml#event-spaces-and-algebras)节已经做的那样：
- en: '![Ω = {0,1}n, Σ = 2Ω. ](img/file1731.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Ω = {0,1}n, Σ = 2Ω. ](img/file1731.png)'
- en: Since the coin is fair, each outcome ω has the probability P(ω) = ![12n](img/file1732.png).
    This probability space (Ω,Σ,P) is nice and simple so far. Using the additivity
    of probability measures (see Definition [77](ch030.xhtml#x1-285008r77)), we can
    calculate the probability of any event. That is, for any A ∈ Σ, we have
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 由于硬币是公正的，每个结果 ω 的概率 P(ω) = ![12n](img/file1732.png)。到目前为止，这个概率空间 (Ω, Σ, P) 非常简单。利用概率度量的可加性（见定义[77](ch030.xhtml#x1-285008r77)），我们可以计算任何事件的概率。即，对于任何
    A ∈ Σ，我们有
- en: '![P (A) = |A|, |Ω| ](img/file1733.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![P (A) = |A|, |Ω| ](img/file1733.png)'
- en: where j ⋅j denotes the number of elements in a given set.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 j ⋅j 表示给定集合中的元素个数。
- en: However, as mentioned, we are only interested in the number of heads. Should
    we just incorporate this information somewhere in the probability space? Sure,
    we could do that, but that would couple the elementary outcomes (that is, a series
    of heads or tails) with the measurements. This can significantly complicate our
    model.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正如前面所提到的，我们只关心正面朝上的次数。我们是否应该仅仅把这个信息纳入概率空间的某个地方？当然，我们可以这样做，但那样会把基本结果（即，正面或反面的序列）与测量结果耦合在一起，这会显著地复杂化我们的模型。
- en: 'Instead of overloading this probability space to directly deal with the desired
    measurements, we can do something much simpler: introduce a function X : Ω →ℕ,
    mapping outcomes to measurements.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '我们可以做一些更简单的事情：引入一个函数 X : Ω → ℕ，将结果映射到测量值，而不是直接使用这个概率空间来处理所需的测量。'
- en: These functions are called random variables, and they are at the very center
    of probability theory and statistics. By collecting data, we are observing random
    variables, and by fitting predictive models, we approximate them using the observations.
    Now that we understand why we need them, we are going to make this notion mathematically
    precise.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数被称为随机变量，它们是概率论和统计学的核心。通过收集数据，我们在观察随机变量；通过拟合预测模型，我们使用这些观察值来近似它们。现在我们明白了为什么需要它们，接下来我们将把这个概念数学化。
- en: 19.1 Random variables
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 19.1 随机变量
- en: Hold your horses, though; it’s not that simple. Random variables are hard to
    understand in their general form, so we’ll slow down and focus on special cases,
    taking one step at a time. This is how learning is done most effectively, and
    we’ll follow this path as well.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，慢一点；事情并不像看起来那么简单。随机变量在一般形式下很难理解，因此我们将放慢速度，专注于特殊情况，一步一步地进行。这是学习最有效的方法，我们也将遵循这条路径。
- en: Let’s deal with so-called discrete random variables (such as the above example)
    first, real random variables second, and the general case last.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先处理所谓的离散随机变量（例如上面的例子），其次是实际的随机变量，最后是一般情况。
- en: 19.1.1 Discrete random variables
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.1.1 离散随机变量
- en: Following our motivating example describing the number of heads in n coin tosses,
    we can create a formal definition.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们描述抛硬币中正面朝上的次数的激励性例子，我们可以创建一个正式的定义。
- en: Definition 80\. (Discrete random variables)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 80. （离散随机变量）
- en: 'Let (Ω,Σ,P) be a probability space and {x[k]}[k=1]^∞ be an arbitrary sequence
    of real numbers. The function X : Ω → {x[1],x[2],…} is called a discrete random
    variable if the sets'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '设 (Ω, Σ, P) 为概率空间，{x[k]}[k=1]^∞ 为一任意的实数序列。如果函数 X : Ω → {x[1], x[2], …}，则称其为离散随机变量，如果这些集合'
- en: '![S = {ω ∈ Ω : X (ω) = x } k k ](img/file1734.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![S = {ω ∈ Ω : X (ω) = x } k k ](img/file1734.png)'
- en: are events for any integer k ∈ℤ (that is, S[k] ∈ Σ).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何整数 k ∈ ℤ（即，S[k] ∈ Σ），这些都是事件。
- en: 'You might ask why we are requiring the sets {ω ∈ Ω : X(ω) = x[k]} to be events.
    It seems like just another technical condition, but this plays an essential role.
    Ultimately, we are defining random variables because we want to measure the probabilities
    of our observations. This condition ensures that we can do this.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '你可能会问，为什么我们要求集合 {ω ∈ Ω : X(ω) = x[k]} 必须是事件。这看起来只是一个技术性条件，但它起着至关重要的作用。归根结底，我们定义随机变量是为了测量我们观察到的事件的概率。这个条件确保了我们能够做到这一点。'
- en: To simplify our notations, we write
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化我们的符号表示，我们写作：
- en: '![ ( ) P (X = xk) := P {ω ∈ Ω : X (ω) = xk} ](img/file1735.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) P (X = xk) := P {ω ∈ Ω : X (ω) = xk} ](img/file1735.png)'
- en: whenever we talk about these probabilities. Let’s see a concrete example!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们谈论这些概率时，我们都会这样表示。让我们看一个具体的例子！
- en: In the case of the coin tossing above, our random variable is defined by
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述抛硬币的例子中，我们的随机变量由以下定义：
- en: '![X = number of heads. ](img/file1736.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![X = 正面朝上的硬币数。](img/file1736.png)'
- en: Even though we can define X in terms of formulas by
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们可以通过公式来定义 X，
- en: '![ ∑n X (ω) = ωk, ω = (ω1, ...,ωn ) ∈ Ω, k=1 ](img/file1737.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![ ∑n X (ω) = ωk, ω = (ω1, ...,ωn ) ∈ Ω, k=1 ](img/file1737.png)'
- en: this is not needed. Often, such a thing is not even possible. Regarding our
    random variables, we are not interested in knowing the entire mapping, only in
    questions such as the probability of k heads among n tosses.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是必须的。通常情况下，这种做法甚至是不可能的。关于我们的随机变量，我们并不关心知道整个映射，只关心像是 n 次抛掷中正面朝上的次数 k 的概率等问题。
- en: If we record the “timestamps” where the outcome is heads, we can encode each
    ω as a subset of {1,2,…,n}. For instance, if the 1st, 3rd, and 37th tosses are
    heads and the rest are tails, this is {1,3,37}. To calculate the probability of
    k heads, we need to count the number of k-sized subsets for a set of n elements.
    This is given by the binomial coefficient ![(n) k](img/file1738.png). So,
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们记录下“时间戳”，即每次结果为正面的时间，我们可以将每个 ω 编码为 {1,2,…,n} 的子集。例如，如果第 1 次、第 3 次和第 37 次抛掷是正面朝上，其余的是反面朝上，这就是
    {1,3,37}。要计算 k 次正面的概率，我们需要计算 n 个元素集合的 k 大小子集的数量。这由二项式系数 ![(n) k](img/file1738.png)
    给出。所以，
- en: '![ ( ) P (X = k) = n 1-. k 2n ](img/file1739.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) P (X = k) = n 1-. k 2n ](img/file1739.png)'
- en: We’ll see this in detail when talking about the binomial distribution, whatever
    it might be. For now, we are ready to generalize our random variables!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们讨论二项分布时，我们会详细了解这一点，无论它是什么。现在，我们已经准备好将随机变量进行一般化！
- en: 19.1.2 Real-valued random variables
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.1.2 实值随机变量
- en: What if our measurements are not discrete? For instance, suppose that we have
    a class of students in front of us. We are interested in the distribution of their
    body height. So, we pick one student at random and measure their height with our
    shiny new tool, which is capable of measuring height with perfect precision.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的测量不是离散的，会怎么样呢？比如说，假设我们面前有一班学生。我们对他们的身高分布感兴趣。于是，我们随机挑选一名学生，使用我们新买的、能够精确测量身高的工具来测量他的身高。
- en: In this case, discrete random variables are not enough, but we can define something
    similar.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，离散随机变量不足以应对，但我们可以定义类似的东西。
- en: Definition 81\. (Real-valued random variables)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 81.（实值随机变量）
- en: 'Let (Ω,Σ,P) be a probability space. The function X : Ω → ℝ is called a random
    variable if the set'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '设 (Ω,Σ,P) 为一个概率空间。函数 X : Ω → ℝ 称为随机变量，如果集合'
- en: '![ ( ) X −1 (a,b) := {ω ∈ Ω : a <X (ω) <b} ](img/file1740.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) X −1 (a,b) := {ω ∈ Ω : a <X (ω) <b} ](img/file1740.png)'
- en: is an event for all a,b ∈ℝ. (That is, X^(−1)((a,b)) ∈ Σ for all a,b ∈ℝ.)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 是对所有 a,b ∈ℝ 的事件。（即，X^(−1)((a,b)) ∈ Σ 对于所有 a,b ∈ℝ 成立。）
- en: Let’s unwrap this definition. First of all, X is a mapping from the event space
    Ω to the set of real numbers ℝ, as illustrated by Figure [19.1](#).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们展开这个定义。首先，X 是从事件空间 Ω 到实数集 ℝ 的映射，如图 [19.1](#) 所示。
- en: '![PIC](img/file1743.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1743.png)'
- en: 'Figure 19.1: A real-valued random variable is a mapping from the event space
    to the set of real numbers'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.1：实值随机变量是从事件空间到实数集的映射。
- en: Similarly to the discrete case, we are interested in the probabilities of events
    such as X^(−1)((a,b)). Again, for simplicity, we write
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于离散情况，我们对事件如 X^(−1)((a,b)) 的概率感兴趣。同样，为了简化，我们写作：
- en: '![ ( −1( )) P (a <X <b) = P X (a,b) . ](img/file1746.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![ ( −1( )) P (a <X <b) = P X (a,b) . ](img/file1746.png)'
- en: You can imagine X^(−1)((a,b) as the subset of Ω that is mapped to (a,b). (In
    general, sets of the form X^(−1)(A) are called inverse images.)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把 X^(−1)((a,b)) 想象成映射到 (a,b) 的 Ω 的子集。（一般来说，形式为 X^(−1)(A) 的集合称为逆像。）
- en: '![PIC](img/file1747.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1747.png)'
- en: 'Figure 19.2: Inverse image of an interval'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.2：区间的逆像
- en: Let’s see an example right away. Suppose that we are throwing darts at a circular
    board on the wall. (For simplicity, assume that we are so good that we always
    hit the board.) As we have seen when discussing σ-algebras in higher dimensions
    (Section [18.2.6](ch030.xhtml#probability-spaces-on-rn)), we can model this by
    selecting
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们马上看一个例子。假设我们正在向墙上的圆形靶子投掷飞镖。（为了简便起见，假设我们非常厉害，总是能够命中靶子。）正如我们在讨论高维度中的σ-代数时所见（第[18.2.6](ch030.xhtml#probability-spaces-on-rn)节），我们可以通过选择
- en: '![Ω = B(0,1) = {x ∈ ℝ2 : ∥x∥ <1} ](img/file1748.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![Ω = B(0,1) = {x ∈ ℝ2 : ∥x∥ <1} ](img/file1748.png)'
- en: and
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 和
- en: '![ ( ) Σ = ℬ B (0,1) ( n ) = σ {A ∩ B (0,1) : A ∈ ℬ (ℝ ) , ](img/file1749.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) Σ = ℬ B (0,1) ( n ) = σ {A ∩ B (0,1) : A ∈ ℬ (ℝ ) , ](img/file1749.png)'
- en: while
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 而
- en: '![P (A) = area(A)-= area(A). area(Ω) π ](img/file1750.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![P (A) = area(A)-= area(A). area(Ω) π ](img/file1750.png)'
- en: Since dart boards are subdivided into concentric circles, scoring is determined
    by the distance from the center. So, we might as well define our random variable
    by
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于飞镖靶被划分为同心圆，因此评分由距离中心的距离决定。因此，我们也可以通过以下方式定义我们的随机变量：
- en: '![X = distance of the impact point from the center. ](img/file1751.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![X = 距离中心的撞击点距离。 ](img/file1751.png)'
- en: X encodes all that we are interested in, in terms of scoring. In general, we
    have
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: X编码了我们在评分方面感兴趣的所有内容。一般来说，我们有
- en: '![ ( || 0 if r ≤ 0, ||{ P(X <r) = r2 if 0 <r <1, ||| |( 1 otherwise. ](img/file1752.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![ ( || 0 if r ≤ 0, ||{ P(X <r) = r2 if 0 <r <1, ||| |( 1 otherwise. ](img/file1752.png)'
- en: 'What if we have more than one measurement? For instance, in the case of the
    famous Iris dataset ([https://en.wikipedia.org/wiki/Iris_flower_data_set](https://en.wikipedia.org/wiki/Iris_flower_data_set))
    (one that we have seen a few times so far), we have four measurements. Sure, we
    can just define four random variables, but then we cannot take advantage of all
    the heavy machinery we have built so far: linear algebra and multivariate calculus.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有多个测量值怎么办？例如，在著名的鸢尾花数据集的情况下（[https://en.wikipedia.org/wiki/Iris_flower_data_set](https://en.wikipedia.org/wiki/Iris_flower_data_set)）（这是我们到目前为止已经看到过几次的数据集），我们有四个测量值。当然，我们可以定义四个随机变量，但那样我们就不能利用到目前为止所构建的所有复杂工具：线性代数和多变量微积分。
- en: For this, we will take a look at random variables in the general case.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将先看看一般情况下的随机变量。
- en: 19.1.3 Random variables in general
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.1.3 一般情况下的随机变量
- en: Let’s cut to the chase.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们直接切入正题。
- en: Definition 82\. (Random variables)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 定义82\.（随机变量）
- en: 'Let (Ω[1],Σ[1],P[1]) be a probability space and let (Ω[2],Σ[2]) be another
    event space Ω[2] with σ-algebra Σ[2]. The function X : Ω[1] → Ω[2] is a random
    variable if, for every E ∈ Σ[2], the set'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '设(Ω[1],Σ[1],P[1])是一个概率空间，设(Ω[2],Σ[2])是另一个事件空间Ω[2]，具有σ-代数Σ[2]。函数X : Ω[1] → Ω[2]是一个随机变量，如果对于每个E
    ∈ Σ[2]，集合'
- en: '![X −1(E ) := {ω ∈ Ω1 : X (ω) ∈ E } ](img/file1753.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![X −1(E ) := {ω ∈ Ω1 : X (ω) ∈ E } ](img/file1753.png)'
- en: is a member of Σ[1]. (That is, X^(−1)(E) ∈ Σ[1].)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 是Σ[1]的成员。（也就是说，X^(−1)(E) ∈ Σ[1]。）
- en: In mathematical literature, random variables are usually denoted by either capital
    Latin letters such as X,Y , or Greek letters (mostly starting from ξ).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在数学文献中，随机变量通常用大写拉丁字母如X, Y表示，或者用希腊字母（大多数是从ξ开始的）表示。
- en: Random variables essentially push probability measures forward from abstract
    probability spaces to more tractable ones. On the event space (Ω[2],Σ[2]), we
    can define a probability measure P[2] by
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量本质上是将概率测度从抽象的概率空间推送到更易处理的空间。在事件空间(Ω[2],Σ[2])上，我们可以通过
- en: '![ ( −1 ) P2(E ) := P1 X (E) , E ∈ Σ2, ](img/file1754.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![ ( −1 ) P2(E ) := P1 X (E) , E ∈ Σ2, ](img/file1754.png)'
- en: making it possible to transform one probability space to another while keeping
    the underlying probabilistic model intact.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使得在保持基础概率模型不变的情况下，将一个概率空间转换到另一个概率空间成为可能。
- en: This general case covers all the mathematical objects we are interested in for
    machine learning. Staying with the Iris dataset ( [https://en.wikipedia.org/wiki/Iris_flower_data_set](https://en.wikipedia.org/wiki/Iris_flower_data_set)),
    the random variable
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这个一般情况涵盖了我们在机器学习中感兴趣的所有数学对象。继续使用鸢尾花数据集（[https://en.wikipedia.org/wiki/Iris_flower_data_set](https://en.wikipedia.org/wiki/Iris_flower_data_set)），随机变量
- en: '![X : set of iris flowers → ℝ4, iris flower ↦→ (petal width,petal length,sepal
    width,sepal length) ](img/file1755.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![X : 鸢尾花的集合 → ℝ4，鸢尾花 ↦→ (花瓣宽度，花瓣长度，萼片宽度，萼片长度) ](img/file1755.png)'
- en: describes the generating distribution for the dataset, while for classification
    tasks, we are interested in approximating the random variable
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 描述了数据集的生成分布，而对于分类任务，我们关注的是近似随机变量
- en: '![Y : set of iris flowers → {setosa,versicolor,virginica}, iris flower ↦→ class
    label. ](img/file1756.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![Y : set of iris flowers → {setosa, versicolor, virginica}, iris flower ↦→
    class label. ](img/file1756.png)'
- en: Now we will take a deeper look at why random variables are defined this way.
    This will be a bit technical, so feel free to skip it. It won’t adversely affect
    your ability to work with random variables.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将深入探讨为什么随机变量是这样定义的。这部分会有点技术性，如果你觉得难以理解，可以跳过它。这不会影响你对随机变量的理解和应用。
- en: 19.1.4 Behind the definition of random variables
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.1.4 随机变量的定义背后
- en: 'So, random variables are functions, mapping the probability space onto a measurement
    space. The only question is, why are the sets X^(−1)(E) so special? Let’s revisit
    one of our motivating examples: picking a random student and measuring their height.
    We are interested in questions such as the probability of a student having a body
    height between 155 cm and 185 cm. (If you prefer using the imperial metric system,
    then 155 cm is roughly 5.09 feet and 185 cm is around 6.07 feet.) Translating
    this into formulas, we are interested in'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，随机变量是函数，将概率空间映射到度量空间。唯一的问题是，为什么X^(−1)(E)这些集合如此特殊？让我们回顾一下我们的动机示例：挑选一个随机学生并测量他们的身高。我们关心的是类似学生身高在155厘米到185厘米之间的概率这样的问提。（如果你更习惯使用英制单位，那么155厘米大约是5.09英尺，185厘米大约是6.07英尺。）将这个问题转化为公式，我们关注的是
- en: '![ ( ( )) P(155 ≤ X ≤ 185) = P X − 1[155,185] . ](img/file1757.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ( )) P(155 ≤ X ≤ 185) = P X − 1[155,185] . ](img/file1757.png)'
- en: (In the above formula, I wrote the same thing using two different notations.)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: （在上面的公式中，我使用了两种不同的符号表示相同的内容。）
- en: So, how is X^(−1)([155,185]) an event? To find this out, let’s look at inverse
    images in general.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么X^(−1)([155,185])是一个事件呢？为了找出原因，我们先来看一下逆像的一般情况。
- en: Definition 83\. (Inverse image of sets with respect to functions)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 定义83\. （关于函数的集合逆像）
- en: 'Let f : E →H be a function between the two sets E and H, and let A ⊆H be an
    arbitrary set. The inverse image of A with respect to the function f is defined
    by'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '设f : E →H是两个集合E和H之间的一个函数，A ⊆ H是任意集合。则A关于函数f的逆像定义为'
- en: '![f− 1(A ) := {x ∈ E : f (x ) ∈ A}. ](img/file1760.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![f− 1(A ) := {x ∈ E : f (x ) ∈ A}. ](img/file1760.png)'
- en: We like inverse images of sets because they behave nicely under set operations.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们喜欢集合的逆像，因为它们在集合操作下行为良好。
- en: This is formalized by the following theorem.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点通过下面的定理进行了形式化。
- en: Theorem 121\.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 定理121\.
- en: 'Let f : E → H be a function between the two sets E and H. For any A[1],A[2],⋅⋅⋅⊆H,
    the following hold:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '设f : E → H是两个集合E和H之间的一个函数。对于任意的A[1], A[2], ⋅⋅⋅ ⊆ H，以下条件成立：'
- en: (a)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: (a)
- en: '![ ( ) −1 ⋃∞ ∞⋃ −1 f An = f (An ), n=1 n=1 ](img/file1762.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) −1 ⋃∞ ∞⋃ −1 f An = f (An ), n=1 n=1 ](img/file1762.png)'
- en: (b)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: (b)
- en: '![f− 1(A1 ∖ A2) = f−1(A1) ∖f− 1(A2 ), ](img/file1763.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![f− 1(A1 ∖ A2) = f−1(A1) ∖f− 1(A2 ), ](img/file1763.png)'
- en: (c)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: (c)
- en: '![ ( ∞ ) ∞ −1 ⋂ ⋂ −1 f An = f (An ). n=1 n=1 ](img/file1764.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ∞ ) ∞ −1 ⋂ ⋂ −1 f An = f (An ). n=1 n=1 ](img/file1764.png)'
- en: Proof. (a) We can easily see this by simply writing out the definitions. That
    is, we have
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。（a）我们可以通过直接写出定义来轻松看到这一点。即，我们有
- en: '![ ( ) −1 ⋃∞ { ∞ } f An = x ∈ E : f(x) ∈ ∪ n=1An n=1 ∞⋃ { } = x ∈ E : f(x)
    ∈ An n=1 ∞⋃ −1 = f (An ), n=1 ](img/file1765.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) −1 ⋃∞ { ∞ } f An = x ∈ E : f(x) ∈ ∪ n=1An n=1 ∞⋃ { } = x ∈ E : f(x)
    ∈ An n=1 ∞⋃ −1 = f (An ), n=1 ](img/file1765.png)'
- en: which is what we had to show. (If you are not comfortable with working with
    sets, feel free to review Appendix C on introductory set theory.)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们需要证明的内容。（如果你不太熟悉集合论的内容，可以随时回顾附录C中的入门集合理论。）
- en: (b) This can be done in the same manner as (a).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 这可以像(a)一样进行。
- en: (c) The De Morgan laws (Theorem [153](ch037.xhtml#x1-377003r153)) imply that
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: (c) 德·摩根定律（定理[153](ch037.xhtml#x1-377003r153)）意味着
- en: '![ ( ⋃∞ ) ∞⋂ H ∖ An = (H ∖An ) n=1 n=1 ](img/file1766.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ⋃∞ ) ∞⋂ H ∖ An = (H ∖An ) n=1 n=1 ](img/file1766.png)'
- en: holds. Combining this with (a) and (b), (c) follows.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 成立。将其与(a)和(b)结合起来，(c)得以推导。
- en: Why is this important? Recall that the Borel sets, our standard σ-algebra on
    real numbers (as seen in Section [18.2.3](ch030.xhtml#algebras-over-real-numbers)),
    is defined by
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这很重要？回想一下，Borel集合，即我们在实数上使用的标准σ-代数（如在第[18.2.3](ch030.xhtml#algebras-over-real-numbers)节所见），是通过以下方式定义的：
- en: 'ℬ := σ({(−∞, x] : x ∈ ℝ}) (19.1)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 'ℬ := σ({(−∞, x] : x ∈ ℝ}) (19.1)'
- en: These contain all the events that we are interested in regarding the measurements.
    Combined with our previous result, we can reveal what is not in plain sight about
    random variables.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这些包含了我们关心的与测量相关的所有事件。结合我们之前的结果，我们可以揭示随机变量中不明显的部分。
- en: Theorem 122\.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 定理122\.
- en: 'Let (Ω,Σ,P) be a probability space and X : Ω →ℝ be a random variable, and let
    A ∈ ℬ, where ℬ is the Borel algebra defined by ([23.1.4](#)). Then, X^(−1)(A)
    ∈ Σ.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '设 (Ω, Σ, P) 为一个概率空间，X : Ω → ℝ 为一个随机变量，且 A ∈ ℬ，其中 ℬ 为由 ([23.1.4](#)) 定义的 Borel
    代数。那么，X^(−1)(A) ∈ Σ。'
- en: That is, we can measure the probability of X^(−1)(A) for any Borel set A. Without
    this, our random variables would not be that useful. To make our notations more
    intuitive, we write
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，我们可以测量 X^(−1)(A) 对任何 Borel 集合 A 的概率。没有这个，我们的随机变量就不那么有用了。为了使我们的符号更直观，我们写作
- en: '![ ( −1 ) P (X ∈ A ) := P X (A ) . ](img/file1769.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![ ( −1 ) P (X ∈ A ) := P X (A ) . ](img/file1769.png)'
- en: In plain English, P(X ∈A) is the probability of our measurement X falling into
    the set A.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 用简单的语言来说，P(X ∈A) 是我们测量 X 落入集合 A 的概率。
- en: Now that we understand what all of this means, let’s see the simple proof!
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们理解了这一切的含义，让我们看一下简单的证明！
- en: Proof. This is a simple consequence of the fact that ℬ is the σ-algebra generated
    by sets of the form (−∞,x], and the inverse images behave nicely under set operations
    (as Theorem [121](ch031.xhtml#x1-304003r121) suggests).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。这是基于 ℬ 是由形如 (−∞,x] 的集合生成的 σ-代数，并且逆像在集合运算下行为良好的事实（如定理 [121](ch031.xhtml#x1-304003r121)
    所示）。
- en: 19.1.5 Independence of random variables
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.1.5 随机变量的独立性
- en: When building probabilistic models of the external world, the assumption of
    independence significantly simplifies the subsequent mathematical analysis. Recall
    that on a probability space (Ω,Σ,P), the events A,B ∈ Σ are independent if
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建外部世界的概率模型时，独立性的假设大大简化了后续的数学分析。回想一下在概率空间 (Ω, Σ, P) 上，事件 A, B ∈ Σ 是独立的，当且仅当
- en: '![P (A ∩B ) = P(A )P(B ), ](img/file1770.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![P (A ∩B ) = P(A )P(B ), ](img/file1770.png)'
- en: or equivalently,
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 或者等价地，
- en: '![P (A | B) = P (A ). ](img/file1771.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![P (A | B) = P (A ). ](img/file1771.png)'
- en: In plain English, observing one event doesn’t change our probabilistic belief
    about the other.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 用简单的语言来说，观察一个事件不会改变我们对另一个事件的概率信念。
- en: Since a random variable X is described by events of the form X^(−1)(E), we can
    generalize the notion of independence to random variables.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 由于随机变量 X 由形如 X^(−1)(E) 的事件描述，我们可以将独立性概念推广到随机变量。
- en: Definition 84\. (Independence of random variables)
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 84. （随机变量的独立性）
- en: 'Let X,Y : Ω[1] → Ω[2] be two random variables between the probability space
    (Ω[1],Σ[1],P) and σ-algebra (Ω[2],Σ[2]).'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '设 X, Y : Ω[1] → Ω[2] 为两个随机变量，定义在概率空间 (Ω[1], Σ[1], P) 和 σ-代数 (Ω[2], Σ[2]) 之间。'
- en: We say that X and Y are independent if, for every A,B ∈ Σ[2],
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们说 X 和 Y 是独立的，如果对于每个 A, B ∈ Σ[2]，
- en: '![P (X ∈ A, Y ∈ B ) = P (X ∈ A )P(Y ∈ B ) ](img/file1772.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![P (X ∈ A, Y ∈ B ) = P (X ∈ A )P(Y ∈ B ) ](img/file1772.png)'
- en: holds.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 成立。
- en: Again, think about two coin tosses. X[1] describes the first coin toss and X[2]
    describes the other. Since the tosses are independent, no observation of the first
    one reveals any extra information about the second one. This is formalized by
    the definition above.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 再次考虑两个掷硬币的情况。X[1] 描述第一次掷硬币，X[2] 描述第二次掷硬币。由于掷硬币是独立的，第一次掷硬币的结果不会为第二次掷硬币提供任何额外的信息。这就是上述定义所形式化的内容。
- en: On the other hand, to show two dependent random variables, consider the following.
    We’ll roll a six-sided dice, and denote the result as X. After that, we roll with
    X pieces of six-sided dice and denote the sum total of their values as Y . X and
    Y are dependent on each other. For instance, consider that P(X = 1,Y /span>7)
    = 0, but neither P(X = 1) nor P(Y /span>7) are zero.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，要展示两个相关的随机变量，考虑以下情况。我们掷一个六面骰子，将结果记为 X。接着，我们用 X 个六面骰子进行掷骰，记下它们值的总和为 Y。X
    和 Y 是相互依赖的。例如，考虑 P(X = 1, Y > 7) = 0，但 P(X = 1) 和 P(Y > 7) 都不为零。
- en: Independence is an assumption that we often make. When working with sequences
    of random variables represented by X[1],X,2,…, we almost always assume that they
    are independent and identically distributed; that is, i.i.d. random variables.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 独立性是我们经常做的假设。当处理由 X[1], X[2], … 表示的随机变量序列时，我们几乎总是假设它们是独立同分布的；即 i.i.d. 随机变量。
- en: Now that we understand how to work with random variables, it’s time to show
    how to represent them in a compact form.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们理解了如何处理随机变量，是时候展示如何以紧凑的形式表示它们了。
- en: 19.2 Discrete distributions
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 19.2 离散分布
- en: Let’s recap what we have learned so far. In probability theory, our goal is
    to first model real-life scenarios affected by uncertainty and then to analyze
    them using mathematical tools such as calculus.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下到目前为止所学的内容。在概率论中，我们的目标是首先建模受不确定性影响的现实场景，然后使用数学工具如微积分来分析这些场景。
- en: For the latter purpose, probability spaces are not easy to work with. A probability
    measure is a function defined on an σ-algebra, so we can’t really use calculus
    there.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 对于后者，概率空间不易处理。概率测度是定义在σ-代数上的一个函数，因此我们无法在这里使用微积分。
- en: 'Random variables bring us one step closer to the solution, but they can also
    be difficult to work with. Even though a real-valued random variable X : Ω →ℝ
    maps an abstract probablity space to the set of real numbers, there are some complications.
    Ω can be anything, and if you recall, we might not even have a tractable formula
    for X.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '随机变量使我们离解决方案更近了一步，但它们也可能难以处理。尽管实值随机变量X : Ω →ℝ将抽象的概率空间映射到实数集，但仍然存在一些复杂性。Ω可以是任何东西，而且如果你回想一下，我们可能甚至没有X的可解公式。'
- en: For example, if X denotes the lifetime of a lightbulb, we don’t have a formula.
    So, again, we can’t use calculus. However, there is a way to represent the information
    contained by a random variable in a sequence, a vector-scalar function, or a scalar-scalar
    function.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果X表示一只灯泡的寿命，我们没有公式。因此，我们同样无法使用微积分。然而，有一种方法可以将随机变量所包含的信息表示为序列、向量-标量函数或标量-标量函数。
- en: Enter probability distributions and density functions.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 引入概率分布和密度函数。
- en: Consider a simple experiment, such as tossing a fair coin n times and counting
    the number of heads, denoting it with X. As we have seen before in Definition [80](ch031.xhtml#x1-301002r80),
    X is a discrete random variable with
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个简单的实验，比如公平地投掷一枚硬币n次并统计正面朝上的次数，用X表示。正如我们在定义[80](ch031.xhtml#x1-301002r80)中看到的那样，X是一个离散随机变量，其
- en: '![ (| ( ) { nk 12n if k = 0,1,...,n, P (X = k) = | ( 0 otherwise. ](img/file1773.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![ (| ( ) { nk 12n 如果 k = 0,1,...,n, P (X = k) = | ( 0 其他情况. ](img/file1773.png)'
- en: However, the sequence {P(X = k)}[k=0]^n fully describes the random variable
    X!
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，序列{P(X = k)}[k=0]^n完全描述了随机变量X！
- en: Think about it. As our event space is Ω = {0,1,…,n}, any event is of the form
    A = {a[1],a[2],…,a[l]}⊂ Ω for some l ≤n + 1\. Thus,
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 想一想吧。因为我们的事件空间是Ω = {0,1,…,n}，所以任何事件的形式都是A = {a[1],a[2],…,a[l]}⊂ Ω，其中l ≤n + 1\.
    因此，
- en: '![ l ∑ P (X ∈ A ) = P(X = ai), i=1 ](img/file1774.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![ l ∑ P (X ∈ A ) = P(X = ai), i=1 ](img/file1774.png)'
- en: where we used the (![σ ](img/file1775.png)-)additivity of probability. The sequence
    {P(X = k)}[k=0]^n is all the information we need.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 其中我们使用了概率的加法性（![σ ](img/file1775.png)-）。序列{P(X = k)}[k=0]^n包含了我们所需的所有信息。
- en: 'As a consequence, instead of working with X : Ω →ℕ, we can forget about it
    and use only {P(X = k)}[k=0]^n. Why is this good for us?'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '因此，我们可以不再考虑X : Ω →ℕ，而仅仅使用{P(X = k)}[k=0]^n。这对我们有什么好处呢？'
- en: Because sequences are awesome. As opposed to the mysterious random variables,
    we have a lot of tools to work with them. Most importantly, we can represent them
    in a programming language as an array of numbers. We can’t do such a thing with
    pure random variables.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 因为序列非常强大。与神秘的随机变量不同，我们有许多工具可以处理它们。最重要的是，我们可以将它们表示为编程语言中的数字数组。对于纯随机变量，我们无法做到这一点。
- en: Definition 85\. (Probability mass function)
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 85\。 (概率质量函数)
- en: 'Let X be a real-valued discrete random variable. The function p[X] : ℝ → [0,1]
    defined by'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '设X为一个实值离散随机变量。由以下函数p[X] : ℝ → [0,1]定义：'
- en: '![p (x) = P(X = x), x ∈ ℝ X ](img/file1776.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![p (x) = P(X = x), x ∈ ℝ X ](img/file1776.png)'
- en: is called the probability mass function (or PMF in short) of the discrete random
    variable X.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数称为离散随机变量X的概率质量函数（简称PMF）。
- en: In general, a sequence of real numbers defines a discrete distribution if its
    elements are non-negative and it sums up to one.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，如果实数序列的元素为非负数并且其和为1，则该序列定义了一个离散分布。
- en: Definition 86\. (Discrete probability distribution)
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 86\。 (离散概率分布)
- en: Let {p[k]}[k=1]^∞ be a sequence of real numbers. We say that {p[k]} is a discrete
    probability distribution if
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 设{p[k]}[k=1]^∞为一列实数序列。我们说{p[k]}是一个离散概率分布，当且仅当
- en: (a) p[k] ≥ 0 for all k,
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 对于所有k，p[k] ≥ 0，
- en: (b) and ∑ [k=1]^∞p[k] = 1.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 并且 ∑ [k=1]^∞p[k] = 1。
- en: Remark 12\.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 备注 12\。
- en: Note that if the random variable assumes finitely many values (such as in our
    coin tossing example before), only finitely many values are nonzero in the distribution.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果随机变量取有限个值（例如我们之前的投硬币实验），则在分布中只有有限个值是非零的。
- en: 'As recently hinted, every discrete random variable X defines the distribution
    {P(X = x[k])}[k=1]^∞, where {x[1],x[2],…} are the possible values that X can take.
    This also holds in the reverse direction: given a discrete distribution p = {p[k]}[k=1]^∞,
    we can construct a random variable X whose probability mass function (PMF) is
    p.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，每个离散随机变量 X 定义了分布 {P(X = x[k])}[k=1]^∞，其中 {x[1], x[2], …} 是 X 可以取的可能值。反向也是成立的：给定一个离散分布
    p = {p[k]}[k=1]^∞，我们可以构造一个随机变量 X，其概率质量函数（PMF）为 p。
- en: Thus, the probability mass function of X is also referred to as its distribution.
    I know, it is a bit confusing, as the word “distribution” is quite overloaded
    in math. You’ll get used to it.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，X 的概率质量函数也被称为其分布。我知道，这有点令人困惑，因为“分布”这个词在数学中用得很广泛。你会习惯的。
- en: These discrete probability distributions are well suited for performing quantitative
    analysis, as opposed to the base form of random variables. As an additional benefit,
    think about how distributions generalize random variables. No matter whether we
    talk about coin tosses or medical tests, the rate of success is given by the above
    discrete probability distribution.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这些离散概率分布非常适合进行定量分析，而不是随机变量的基本形式。作为额外的好处，想一下分布是如何推广随机变量的。不管我们讨论的是抛硬币还是医学检测，成功的概率率都是由上述离散概率分布给出的。
- en: Before moving on to discussing the basic properties of discrete distributions,
    let’s see some examples!
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续讨论离散分布的基本属性之前，让我们先看一些例子！
- en: 19.2.1 The Bernoulli distribution
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.2.1 伯努利分布
- en: 'Let’s start the long line of examples with the most basic probability distribution
    possible: the Bernoulli distribution, describing a simple coin-tossing experiment.
    We are tossing a coin having probability p of coming up heads and probability
    1 −p of coming up tails. The experiment is encoded in the random variable X, which
    takes the value 1 if the toss results in heads, 0 otherwise:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从最基本的概率分布开始：伯努利分布，描述一个简单的抛硬币实验。我们抛掷一个硬币，正面朝上的概率是 p，反面朝上的概率是 1 − p。实验通过随机变量
    X 编码，若抛掷结果为正面，则 X 取值为 1，否则取值为 0：
- en: '![ ( |{ 1 if the toss results in heads, X = |( 0 otherwise. ](img/file1777.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ 1 如果抛掷结果为正面，X = |( 0 否则。 ](img/file1777.png)'
- en: Thus,
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，
- en: '![ ( || ||{ 1 − p if k = 0, P (X = k) = p if k = 1, ||| |( 0 otherwise. ](img/file1778.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![ ( || ||{ 1 − p 如果 k = 0, P (X = k) = p 如果 k = 1, ||| |( 0 否则。 ](img/file1778.png)'
- en: When a random variable X is distributed according to this, we write
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 当随机变量 X 按照此分布进行时，我们写作
- en: '![X ∼ Bernoulli(p), ](img/file1779.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![X ∼ Bernoulli(p), ](img/file1779.png)'
- en: where p ∈ [0,1] is a parameter of the distribution.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 p ∈ [0,1] 是分布的参数。
- en: Remark 13\. (An alternative form of the Bernoulli distribution)
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 注释 13.（伯努利分布的另一种形式）
- en: There is a clever alternative formulation of the Bernoulli distribution that
    gets rid of the if-else definition. As k is either zero or one, P(X = k) can be
    written as
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种巧妙的伯努利分布的替代表述方式，可以避免使用 if-else 定义。由于 k 只能是零或一，P(X = k) 可以写作
- en: '![ k 1−k P (X = k) = p (1− p) . ](img/file1780.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![ k 1−k P (X = k) = p (1− p) . ](img/file1780.png)'
- en: Keep this form in mind, as it’ll be extremely useful later down the line.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住这种形式，它将在后续非常有用。
- en: 'It’s time to talk about distributions in practice. There are several stats
    packages for Python, but we’ll use the almighty scipy (which is not exactly a
    stats package, but it has an excellent statistical module):'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候谈论实践中的分布了。Python 有多个统计包，但我们将使用强大的 scipy（虽然它不完全是一个统计包，但它有一个优秀的统计模块）：
- en: '[PRE0]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can generate random values using the rvs method of the bernoulli object
    (just like for any other distribution from scipy):'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 bernoulli 对象的 rvs 方法生成随机值（就像 scipy 中的任何其他分布一样）：
- en: '[PRE1]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In scipy, the probability mass function is implemented in the pmf method.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在 scipy 中，概率质量函数通过 pmf 方法实现。
- en: 'We can even visualize the distribution using Matplotlib:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以使用 Matplotlib 可视化这个分布：
- en: '[PRE3]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![PIC](img/file1781.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1781.png)'
- en: 'Figure 19.3: The Bernoulli distribution'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.3：伯努利分布
- en: If you are interested in the details, feel free to check out the SciPy documentation
    ( [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bernoulli.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bernoulli.html))
    for further methods!
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对细节感兴趣，随时可以查看 SciPy 文档（[https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bernoulli.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bernoulli.html)）了解更多方法！
- en: 19.2.2 The binomial distribution
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.2.2 二项分布
- en: Let’s take our previous coin-tossing example one step further. Suppose that
    we toss the same coin n times, and X denotes the number of heads out of n tosses.
    What is the probability of getting exactly k heads?
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将之前的投掷硬币的例子再推进一步。假设我们投掷同一枚硬币 n 次，X 表示 n 次投掷中正面的次数。那么，恰好得到 k 次正面的概率是多少？
- en: Say, n = 5 and k = 3\. For example, the configuration 11010 (where 0 denotes
    tails and 1 denotes heads) has the probability p³(1 −p)², as there are three heads
    and two tails from five independent (Definition [84](ch031.xhtml#x1-305002r84))
    tosses.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 假设，n = 5 且 k = 3。例如，配置11010（其中0表示反面，1表示正面）有概率 p³(1 −p)²，因为在五次独立的（定义 [84](ch031.xhtml#x1-305002r84)）投掷中，有三次正面和两次反面。
- en: How many such configurations are available? Selecting the position of the three
    heads is the same as selecting a three-element subset out of a set of five elements.
    Thus, there are ![(5) 3](img/file1783.png) possibilities. In general, there are
    ![(n) k](img/file1784.png) possibilities for selecting a k-element subset out
    of a set of n elements.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 有多少种这样的配置呢？选择三个正面的排列位置就等于从五个元素的集合中选择一个三元素的子集。因此，总共有 ![(5) 3](img/file1783.png)
    种可能性。一般来说，从 n 个元素的集合中选择一个 k 元素的子集，总共有 ![(n) k](img/file1784.png) 种可能性。
- en: Combining this, we have
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 结合这些，我们得到
- en: '![ ( |{ (n) k n−k P (X = k ) = k p (1− p) if k = 0,1,...,n, |( 0 otherwise.
    ](img/file1785.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ (n) k n−k P (X = k ) = k p (1− p) 如果 k = 0,1,...,n, |( 0 否则。 ](img/file1785.png)'
- en: This is called the binomial distribution, one of the most frequently encountered
    ones in probability and statistics. In notation, we write
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是著名的二项分布，它是概率论与统计学中最常遇到的分布之一。我们用符号表示为
- en: '![X ∼ Binomial(n,p), ](img/file1786.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![X ∼ 二项分布(n,p), ](img/file1786.png)'
- en: where the n ∈ℕ and p ∈ [0,1] are its two parameters. Let’s visualize the distribution!
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 n ∈ℕ 且 p ∈ [0,1] 是它的两个参数。让我们来可视化这个分布！
- en: '[PRE4]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![PIC](img/file1787.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1787.png)'
- en: 'Figure 19.4: The binomial distribution'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.4：二项分布
- en: 19.2.3 The geometric distribution
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.2.3 几何分布
- en: A bit more coin tossing. We toss the same coin until a heads turn up. Let X
    denote the number of tosses needed. With some elementary probabilistic thinking,
    we can deduce that
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 再来点硬币投掷。我们继续投掷同一枚硬币，直到出现正面。令 X 表示需要的投掷次数。通过一些基本的概率思维，我们可以推导出
- en: '![ ( |{ k−1 P(X = k) = (1 − p) p if k = 1,2,... |( 0 otherwise. ](img/file1788.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ k−1 P(X = k) = (1 − p) p 如果 k = 1,2,... |( 0 否则。 ](img/file1788.png)'
- en: (Since if heads turn up first for the k-th toss, we tossed k − 1 tails previously.)
    This is called the geometric distribution and is denoted as
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: （因为如果第 k 次投掷的结果是正面，那么之前我们投掷了 k − 1 次反面。）这就是所谓的几何分布，通常表示为
- en: '![X ∼ Geo (p), ](img/file1789.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![X ∼ 几何分布(p), ](img/file1789.png)'
- en: 'with p ∈ [0,1] being the only parameter. Similarly, we can plot the histograms
    to visualize the distribution family:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 p ∈ [0,1] 是唯一的参数。类似地，我们可以绘制直方图来可视化分布家族：
- en: '[PRE5]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![PIC](img/file1790.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1790.png)'
- en: 'Figure 19.5: The geometric distribution'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.5：几何分布
- en: Note that none of the probabilities P(X = k) are zero, but as k grows, they
    become extremely small. (The closer p is to 1, the faster the decay.)
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，P(X = k) 的概率没有一个是零，但随着 k 的增大，它们会变得非常小。（当 p 趋近于 1 时，衰减速度更快。）
- en: It might not be immediately obvious that ∑ [k=1]^∞(1 −p)^(k−1)p = 1\. To do
    that, we’ll apply a magic trick. (You know. Paraphrasing the famous Arthur C.
    Clarke quote, “Any sufficiently advanced mathematics is indistinguishable from
    magic.”)
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: ∑ [k=1]^∞(1 −p)^(k−1)p = 1 可能并不立即显现出来。为了证明这一点，我们将使用一个魔术技巧。（你知道的，改编自著名的阿瑟·C·克拉克的名言：“任何足够先进的数学都与魔术无法区分。”）
- en: In fact, for an arbitrary x ∈ (−1,1), the astounding identity
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，对于任意 x ∈ (−1,1)，有一个惊人的恒等式
- en: '![L(U,V ) = {f : U → V | f is linear}](img/equation_(27).png)(19.2)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![L(U,V ) = {f : U → V | f 是线性的}](img/equation_(27).png)(19.2)'
- en: holds.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 恒等式成立。
- en: This is the famous geometric series. Using ([23.2.3](#)), we have
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是著名的几何级数。利用 ([23.2.3](#))，我们得到
- en: '![ ∞ ∞ ∑ ∑ k−1 P (X = k) = (1− p ) p k=1 k=1∞ ∑ k = p (1 − p) k=0 = p-----1----
    1 − (1− p) = 1\. ](img/file1792.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![ ∞ ∞ ∑ ∑ k−1 P (X = k) = (1− p ) p k=1 k=1∞ ∑ k = p (1 − p) k=0 = p-----1----
    1 − (1− p) = 1\. ](img/file1792.png)'
- en: Using the geometric series is one of the most common tricks up a mathematician’s
    sleeve. We’ll use this, for instance, when talking about expected values for certain
    distributions.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 使用几何级数是数学家常用的技巧之一。例如，在讨论某些分布的期望值时，我们会用到它。
- en: 19.2.4 The uniform distribution
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.2.4 均匀分布
- en: 'Let’s discard the coin and roll a six-sided dice instead. We’ve seen this before:
    the probability of each outcome is the same, that is,'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们丢掉硬币，换成掷一个六面骰子。我们以前见过这种情况：每种结果的概率相同，也就是说，
- en: '![P(X = 1) = P(X = 2) = ⋅⋅⋅ = P(X = 6) = 1, 6 ](img/file1793.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![P(X = 1) = P(X = 2) = ⋅⋅⋅ = P(X = 6) = 1, 6 ](img/file1793.png)'
- en: where X denotes the outcome of the roll. This is a special instance of the uniform
    distribution.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 X 表示掷骰子的结果。这是均匀分布的一个特殊实例。
- en: 'In general, let A = {a[1],a[2],…,a[n]} be a finite set. The discrete random
    variable X : Ω →A is uniformly distributed on A, that is,'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '一般而言，令 A = {a[1], a[2], …, a[n]} 为有限集合。离散随机变量 X : Ω → A 在 A 上均匀分布，即'
- en: '![X ∼ Uniform(A ), ](img/file1794.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![X ∼ Uniform(A ), ](img/file1794.png)'
- en: if
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如果
- en: '![ 1- P (X = a1) = P (X = a2) = ⋅⋅⋅ = P(X = an) = n. ](img/file1795.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![ 1- P (X = a1) = P (X = a2) = ⋅⋅⋅ = P(X = an) = n. ](img/file1795.png)'
- en: 'Note that A must be a finite set: no discrete uniform distribution exists on
    infinite sets. When we have an uniform distribution on {1,2,…,n}, we often abbreviate
    it as Uniform(n).'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，A 必须是有限集合：无限集合上不存在离散均匀分布。当我们在 {1, 2, …, n} 上有均匀分布时，我们通常将其缩写为 Uniform(n)。
- en: 'Here is the probability mass function for rolling a six-sided dice. Not the
    most exciting one, I know:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是掷一个六面骰子的概率质量函数。知道这并不算特别激动人心，没错：
- en: '[PRE6]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![PIC](img/file1796.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1796.png)'
- en: 'Figure 19.6: The (discrete) uniform distribution'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.6： (离散) 均匀分布
- en: 19.2.5 The single-point distribution
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.2.5 单点分布
- en: 'We’ve left the simplest one till last: the single-point distribution. For that,
    let a ∈ℝ be an arbitrary real number. We say that the random variable X is distributed
    according to δ(a) if'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将最简单的一个留到最后：单点分布。为此，令 a ∈ ℝ 为任意实数。我们说随机变量 X 根据 δ(a) 分布，如果
- en: '![ ( |{ 1 if x = a, P (X = x) = |( 0 otherwise. ](img/file1797.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ 1 if x = a, P (X = x) = |( 0 otherwise. ](img/file1797.png)'
- en: That is, X assumes a with probability 1\. Their corresponding cumulative distribution
    function is
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 即，X 以概率 1 取 a。它们对应的累积分布函数为
- en: '![ (| { 1 if x ≥ a, FX (x) = | ( 0 otherwise, ](img/file1798.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![ (| { 1 if x ≥ a, FX (x) = | ( 0 otherwise, ](img/file1798.png)'
- en: which is a simple step function with a single jump.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个具有单个跳跃的简单阶跃函数。
- en: Trust me, explicitly naming such a simple distribution is immensely useful.
    There are two main reasons that come to mind. First, the single-point distribution
    often arises as the limit distribution of sequences of random variables.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 相信我，明确地命名这样一个简单的分布是非常有用的。想到的主要原因有两个。首先，单点分布通常作为随机变量序列的极限分布出现。
- en: Second, every discrete distribution can be written in terms of single-point
    distributions. This is not absolutely necessary for you to understand right now,
    but it’ll be essential on a more advanced level.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，任何离散分布都可以用单点分布表示。现在理解这一点并非绝对必要，但在更高阶的学习中，它将是非常重要的。
- en: Remark 14\. (Discrete distributions as the linear combination of single-point
    distributions)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 注 14．（离散分布作为单点分布的线性组合）
- en: 'Let (Ω,Σ,P) be a probability space and let X : Ω →{x[1],x[2],…} be a discrete
    random variable with probability mass function p[i] = P(X = x[i]).'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '令 (Ω, Σ, P) 为概率空间，且令 X : Ω → {x[1], x[2], …} 为离散随机变量，其概率质量函数为 p[i] = P(X =
    x[i])。'
- en: By introducing the single-point distributions X[i] ∼δ(x[i]), we have
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 通过引入单点分布 X[i] ∼ δ(x[i])，我们得到
- en: '![ ∑∞ FX (x) = piFX (x). i=1 i ](img/file1799.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![ ∑∞ FX (x) = piFX (x). i=1 i ](img/file1799.png)'
- en: This decomposition can be extremely useful.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这个分解可以非常有用。
- en: 19.2.6 Law of total probability, revisited once more
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.2.6 全概率法则，再次回顾
- en: With the help of discrete random variables, we can dress the law of total probability
    (Theorem [117](ch030.xhtml#x1-291003r117)) in new clothes.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 借助离散随机变量，我们可以用全概率公式（定理[117](ch030.xhtml#x1-291003r117)）的新形式来描述它。
- en: Theorem 123\. (Law of total probability, discrete random variable version)
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 123．（全概率法则，离散随机变量版本）
- en: 'Let (Ω,Σ,P) be a probability space and let A ∈ Σ be an arbitrary event. If
    X : Ω →{x[1],x[2],…}is a discrete random variable, then'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '令 (Ω, Σ, P) 为概率空间，且令 A ∈ Σ 为任意事件。如果 X : Ω → {x[1], x[2], …} 是离散随机变量，则'
- en: P(A) = ∑[k=1]^∞ P(A | X = x[k]) P(X = x[k]). (19.3)
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: P(A) = ∑[k=1]^∞ P(A | X = x[k]) P(X = x[k])。（19.3）
- en: 'Proof. For any discrete random variable X : Ω → {x[1],x[2],…}, the events {X
    = x[k]} partition the event space: they are mutually disjoint, and their union
    gives Ω. Thus, the law of total probability can be applied, obtaining'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '证明。对于任何离散随机变量 X : Ω → {x[1], x[2], …}，事件 {X = x[k]} 划分了事件空间：它们是互不相交的，且它们的并集为
    Ω。因此，可以应用全概率法则，得到'
- en: '![ ∑∞ P(A ) = P(A, X = xk) k=1 ∑∞ = P(A | X = xk)P (X = xk), k=1 ](img/file1800.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![ ∑∞ P(A ) = P(A, X = xk) k=1 ∑∞ = P(A | X = xk)P (X = xk), k=1 ](img/file1800.png)'
- en: which is what we had to prove.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这正是我们需要证明的。
- en: In other words, we can study events in the context of discrete random variables.
    This is extremely useful in practice. (Soon, we’ll see that it’s not only for
    the discrete case.)
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，我们可以在离散随机变量的背景下研究事件。这在实践中非常有用。（很快，我们会看到它不仅适用于离散情况。）
- en: Let’s put ([19.3](ch031.xhtml#x1-312003r123)) to work right away.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们立即运用 ([19.3](ch031.xhtml#x1-312003r123))。
- en: 19.2.7 Sums of discrete random variables
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.2.7 离散随机变量的和
- en: Since discrete probability distributions are represented by sequences, we can
    use a wide array of tools from mathematical analysis to work with them. (This
    was the whole reason behind switching random variables to distributions.) As a
    consequence, we can easily describe more complex random variables by constructing
    them from simpler ones.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 由于离散概率分布由序列表示，我们可以使用数学分析中的各种工具来处理它们。（这就是将随机变量转化为分布的原因。）因此，我们可以通过从简单的随机变量构造更复杂的随机变量来轻松描述它们。
- en: For instance, consider rolling two dice, where we are interested in the distribution
    of the sum. So, we can write this as the sum of random variables X[1] and X[2],
    denoting the outcome of the first and second toss, respectively. We know that
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑掷两个骰子，我们对和的分布感兴趣。所以，我们可以将其表示为随机变量 X[1] 和 X[2] 的和，分别表示第一次和第二次投掷的结果。我们知道
- en: '![ (| { 16 if k = 1,2,...,6, P(Xi = k) = | ( 0 otherwise ](img/file1801.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![ (| { 16 如果 k = 1,2,...,6, P(Xi = k) = | ( 0 其它情况 ](img/file1801.png)'
- en: for i = 1,2\. Using ([19.3](ch031.xhtml#x1-312003r123)) and the fact that the
    two outcomes are independent, we have
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 i = 1,2。利用([19.3](ch031.xhtml#x1-312003r123)) 和两个结果独立这一事实，我们得到
- en: '![ 6 P (X + X = k) = ∑ P(X + X = k | X = l)P (X = l) 1 2 l=1 1 2 2 2 6 ∑ =
    P(X1 = k − l)P(X2 = l) l=1 ](img/file1802.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![ 6 P (X + X = k) = ∑ P(X + X = k | X = l)P (X = l) 1 2 l=1 1 2 2 2 6 ∑ =
    P(X1 = k − l)P(X2 = l) l=1 ](img/file1802.png)'
- en: If this looks familiar, it is not an accident.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这看起来熟悉，那并非巧合。
- en: What you see here is the famous convolution operation in action.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 你在这里看到的是著名的卷积操作的应用。
- en: Definition 87\. (Discrete convolution)
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 87.（离散卷积）
- en: Let a = {a[k]}[k=−∞]^∞ and b = {b[k]}[k=−∞]^∞ be two arbitrary sequences. Their
    convolution is defined by
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 设 a = {a[k]}[k=−∞]^∞ 和 b = {b[k]}[k=−∞]^∞ 为两个任意序列。它们的卷积定义为
- en: '![ { ∞∑ } ∞ a∗ b := ak−lbl . l= −∞ k=−∞ ](img/file1803.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![ { ∞∑ } ∞ a∗ b := ak−lbl . l= −∞ k=−∞ ](img/file1803.png)'
- en: That is, the k-th element of the sequence a ∗b is defined by the sum ∑ [l=−∞]^∞a[k−l]b[l].
    This might be hard to imagine, but thinking about the probabilistic interpretation
    makes the definition clear. The random variable X[1] + X[2] can assume the value
    k if X[1] = k −l and X[2] = l, for all possible l ∈ℤ.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 即，序列 a ∗b 的第 k 个元素通过求和 ∑ [l=−∞]^∞a[k−l]b[l] 来定义。虽然这可能难以想象，但从概率解释的角度来看，定义变得清晰。随机变量
    X[1] + X[2] 可以取值 k，如果 X[1] = k −l 且 X[2] = l，对于所有可能的 l ∈ℤ。
- en: Remark 15\. Remark 19.2.4 (Switching up the indices)
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 注 15. 注 19.2.4（交换下标）
- en: Due to symmetry,
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 由于对称性，
- en: '![ ∑∞ ∑∞ ak−lbl = albk−l. l=−∞ l=−∞ ](img/file1804.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![ ∑∞ ∑∞ ak−lbl = albk−l. l=−∞ l=−∞ ](img/file1804.png)'
- en: Thus, an alternative definition of a ∗b
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，a ∗b 的另一种定义是
- en: '![ { ∑∞ }∞ a ∗b = albk−l . l=− ∞ k= −∞ ](img/file1805.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![ { ∑∞ }∞ a ∗b = albk−l . l=− ∞ k= −∞ ](img/file1805.png)'
- en: This trick is often extremely useful, as when a[k] and b[k] is explicitly given,
    sometimes ∑ [l=−∞]^∞a[l]b[k−l] is simpler to calculate than ∑ [l=−∞]^∞a[k−l]b[l],
    and vice versa.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这个技巧通常非常有用，因为当 a[k] 和 b[k] 明确给出时，有时 ∑ [l=−∞]^∞a[l]b[k−l] 比 ∑ [l=−∞]^∞a[k−l]b[l]
    更容易计算，反之亦然。
- en: 'Convolution is supported by NumPy, so with its help, we can visualize the distribution
    of our X[1] + X[2]:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 卷积由 NumPy 支持，因此借助它，我们可以可视化 X[1] + X[2] 的分布：
- en: '[PRE7]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![PIC](img/file1806.png)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1806.png)'
- en: 'Figure 19.7: Distribution of the sum of two random variables'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.7：两个随机变量和的分布
- en: Let’s talk about the general case. The pattern is clear, so we can formulate
    a theorem.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们谈谈一般情况。模式很清晰，因此我们可以公式化一个定理。
- en: Theorem 124\. (Sums of discrete random variables.)
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 124.（离散随机变量的和）
- en: 'If X,Y : Ω → ℤ are both integer-valued random variables, then the distribution
    of X + Y is given by the convolution of the respective distributions:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '如果 X,Y : Ω → ℤ 都是整数值随机变量，则 X + Y 的分布由各自分布的卷积给出：'
- en: '![ ∞ ∑ P (X + Y = k ) = P (X = k − l)P (Y = l), l=−∞ ](img/file1807.png)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![ ∞ ∑ P (X + Y = k ) = P (X = k − l)P (Y = l), l=−∞ ](img/file1807.png)'
- en: that is,
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 即，
- en: '![pX+Y = pX ∗ pY. ](img/file1808.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![pX+Y = pX ∗ pY. ](img/file1808.png)'
- en: 'Proof. The proof is a straightforward application of the law of total probability
    ([19.3](ch031.xhtml#x1-312003r123)):'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。证明是对全概率定律的直接应用 ([19.3](ch031.xhtml#x1-312003r123))：
- en: P(X + Y = k) = ∑ [l=−∞]^∞P(X + Y = k∣Y = l)P(Y = l) = ∑ [l=−∞]^∞P(X = k −l)P(Y
    = l) = (p[X] ∗p[Y] )(k),
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: P(X + Y = k) = ∑ [l=−∞]^∞ P(X + Y = k | Y = l)P(Y = l) = ∑ [l=−∞]^∞ P(X = k
    − l)P(Y = l) = (p[X] ∗ p[Y])(k),
- en: which is what we had to prove.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们需要证明的。
- en: Another example of random variable sums is the binomial distribution itself.
    Instead of thinking about the number of successes of an experiment out of n independent
    tries, we can model the core experiment as a Bernoulli distribution. That is,
    if X[i] is a Bernoulli(p) distributed random variable describing the success of
    the i-th attempt, we have
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个随机变量求和的例子是二项分布本身。我们可以将核心实验建模为伯努利分布，而不是考虑n次独立试验中的成功次数。也就是说，如果X[i]是一个伯努利(p)分布的随机变量，描述第i次尝试的成功情况，那么我们有
- en: '![ ∑ P (X1 + ⋅⋅⋅ + Xn = k) = P (X1 = i1,...,Xn = in) i1+ ⋅⋅⋅+in=k = ∑ P (X
    = i )...P(X = i) ◟---1----1-◝◜-----n---n◞ i1+ ⋅⋅⋅+in=k X1,...,Xn are independent
    = ∑ pk(1 − p)n− k i1(+ ⋅⋅⋅)+in=k = n pk(1 − p)n−k, k ](img/file1809.png)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![ ∑ P (X1 + ⋅⋅⋅ + Xn = k) = P (X1 = i1,...,Xn = in) i1+ ⋅⋅⋅+in=k = ∑ P (X
    = i )...P(X = i) ◟---1----1-◝◜-----n---n◞ i1+ ⋅⋅⋅+in=k X1,...,Xn 是独立的 = ∑ pk(1
    − p)n−k i1(+ ⋅⋅⋅)+in=k = n pk(1 − p)n−k, k ](img/file1809.png)'
- en: where the sum ∑ [i[1]+⋅⋅⋅+i[n]=k] traverses all tuples (i[1],…,i[n]) ∈{0,1}^n
    for which i[1] + ⋅⋅⋅ + i[n] = k. (As there are ![(n) k](img/file1812.png) of such
    tuples, we have ∑ [i[1]+⋅⋅⋅+i[n]=k]p^k(1 −p)^(n−k) = ![( ) nk](img/file1814.png)p^k(1
    −p)^(n−k) in the last step.)
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，求和∑ [i[1]+⋅⋅⋅+i[n]=k]遍历所有元组(i[1],…,i[n]) ∈{0,1}^n，使得i[1] + ⋅⋅⋅ + i[n] = k。（因为有![(n)
    k](img/file1812.png)这样元组的个数，我们得到∑ [i[1]+⋅⋅⋅+i[n]=k] p^k(1 −p)^(n−k) = ![( ) nk](img/file1814.png)
    p^k(1 −p)^(n−k)在最后一步。）
- en: 19.3 Real-valued distributions
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 19.3 实值分布
- en: So far, we have talked about discrete random variables, that is, random variables
    with countably many values. However, not all experiments/observations/measurements
    are like this. For instance, the height of a person is a random variable that
    can assume a continuum of values.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们讨论了离散随机变量，即具有可数多个值的随机变量。然而，并非所有的实验/观察/测量都是这样。例如，一个人的身高是一个可以取连续值的随机变量。
- en: To give a tractable example, let’s pick a number X from [0,1], with each one
    having an “equal chance.” In this context, equal chance means that
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给出一个易于处理的例子，我们从[0,1]中选取一个数字X，每个数字具有“相等的机会”。在这个上下文中，相等的机会意味着
- en: '![P (a <X ≤ b) = |b − a|. ](img/file1815.png)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![P (a < X ≤ b) = |b − a|. ](img/file1815.png)'
- en: Can we describe X with a single real function? As in the discrete case, we can
    try
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能用一个单一的实函数来描述X吗？就像离散情况一样，我们可以尝试
- en: '![F(x) = P (X = x), ](img/file1816.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![F(x) = P(X = x), ](img/file1816.png)'
- en: but this wouldn’t work. Why?
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 但这行不通。为什么？
- en: Because for each x ∈X, we have P(X = x) = 0\. That is, picking a particular
    number x has zero probability. Instead, we can try F[X](x) = P(X ≤x), which is
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 因为对于每个x ∈ X，我们有P(X = x) = 0。也就是说，选取特定数字x的概率为零。相反，我们可以尝试F[X](x) = P(X ≤ x)，即
- en: '![ ( ||| 0 if x ≤ 0, |{ FX(x) = x if 0 <x ≤ 1, |||| ( 1 otherwise. ](img/file1817.png)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ||| 0 如果x ≤ 0，|{ FX(x) = x 如果 0 <x ≤ 1，|||| ( 1 否则。 ](img/file1817.png)'
- en: 'We can plot this for visualization:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以绘制这个图形来进行可视化：
- en: '[PRE8]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![PIC](img/file1818.png)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1818.png)'
- en: 'Figure 19.8: The uniform distribution'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.8：均匀分布
- en: In the following section, we will properly define and study this object in detail
    for all real-valued random variables.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将对所有实值随机变量正确地定义并详细研究这个对象。
- en: 19.3.1 The cumulative distribution function
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.3.1 累积分布函数
- en: What we have seen in our motivating example is an instance of a cumulative distribution
    function, or CDF in short. Let’s jump into the formal definition right away.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的动机示例中看到的就是一个累积分布函数（简称CDF）的实例。让我们直接跳入正式的定义。
- en: Definition 88\. (Cumulative distribution function)
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 定义88： (累积分布函数)
- en: Let X be a real-valued random variable. The function defined by
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 设X为一个实值随机变量。由下式定义的函数
- en: F[X](x) := P(X ≤ x) (19.4)
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: F[X](x) := P(X ≤ x) (19.4)
- en: is called the cumulative distribution function (CDF) of X.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 称为X的累积分布函数（CDF）。
- en: Again, let’s unpack this. Recall that in the definition of real-valued random
    variables (Definition [81](ch031.xhtml#x1-302002r81)), we have used the inverse
    images X^(−1)((a,b)).
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 再次让我们解开这个。回顾在实值随机变量的定义（定义[81](ch031.xhtml#x1-302002r81)）中，我们使用了逆映像X^(−1)((a,b))。
- en: Something similar is going on here. P(X ≤x) is the abbreviation for P(X^(−1)((−∞,x])),
    which we are too lazy to write. Similarly to X^(−1)((a,b))), you can visualize
    X^(−1)((−∞,x])) by pulling the interval (−∞,x] back to Ω using the mapping X.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 这里发生的事情类似。P(X ≤ x)是P(X^(−1)((−∞,x]))的简写，我们懒得写出。类似于X^(−1)((a,b)))，你可以通过使用映射X将区间(−∞,x]拉回到Ω，从而可视化X^(−1)((−∞,x]))。
- en: Sets of the form X^(−1)((−∞,x]) are called the level sets of X.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 形式为X^(−1)((−∞,x])的集合称为X的水平集。
- en: '![PIC](img/file1833.png)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1833.png)'
- en: 'Figure 19.9: The level set of a random variable'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.9：随机变量的水平集
- en: According to the Oxford English Dictionary, the word cumulative means “increasing
    or increased in quantity, degree, or force by successive additions.” For discrete
    random variables, using P(X = k) was enough, but since real random variables are
    more nuanced, we have to use the cumulative probabilities P(X ≤x) to meaningfully
    describe them.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 根据《牛津英语词典》，累积一词的意思是“通过连续增加而在数量、程度或力量上逐渐增大。”对于离散随机变量，使用P(X = k)就足够了，但由于实际的随机变量更加细致，我们必须使用累积概率P(X
    ≤x)来有意义地描述它们。
- en: Why do we like to work with distribution functions? Because they condense all
    the relevant information about a random variable in a real function.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么我们喜欢使用分布函数？因为它们将关于随机变量的所有相关信息浓缩成一个实际函数。
- en: For instance, we can express probabilities like
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以像这样表示概率
- en: '![P (a <X ≤ b) = F (b) − F (a ). X X ](img/file1834.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![P (a <X ≤ b) = F (b) − F (a ). X X ](img/file1834.png)'
- en: To give an example, let’s revisit the introduction, where we were selecting
    a random number between zero and one. There, the random variable X with CDF
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，让我们回顾一下介绍部分，我们在其中选择了一个介于零和一之间的随机数。在这里，具有CDF的随机变量X
- en: '![L(U,V ) = {f : U → V | f is linear}](img/equation_(28).png)(19.5)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![L(U,V ) = {f : U → V | f is linear}](img/equation_(28).png)(19.5)'
- en: is said to be uniformly distributed over [0,1], or X ∼ Uniform(0,1) in short.
    We’ll see a ton of examples later, but keep note of this, as the uniform distribution
    will be our textbook example throughout this section.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 被称为在[0,1]上均匀分布，或者简写为X ∼ Uniform(0,1)。我们稍后会看到许多例子，但请记住这一点，因为均匀分布将是本节的教科书示例。
- en: 19.3.2 Properties of the distribution function
  id: totrans-308
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.3.2 分布函数的性质
- en: 'Cumulative distribution functions have three properties that characterize them:
    they are always non-decreasing, right-continuous (whatever that might be), and
    their limits are 0 and 1 toward −∞ and ∞ respectively. You might have guessed
    some of this from the definition, but here is the formal theorem that summarizes
    this.'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 累积分布函数具有三种性质来表征它们：它们总是非递减的，右连续的（无论那意味着什么），并且它们的极限在−∞和∞处分别为0和1。你可能从定义中猜到了一些这些内容，但这里是总结这些内容的正式定理。
- en: Theorem 125\. (Properties of CDFs)
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 定理125.（CDF的性质）
- en: Let X be a real-valued random variable with CDF F[X]. Then, F[X] is
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 设X为一个具有CDF F[X]的实值随机变量。然后，F[X]是
- en: (a) non-decreasing (that is, x ≤y implies F[X](x) ≤F[X](y)),
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 非递减（也就是说，x ≤y意味着F[X](x) ≤F[X](y)），
- en: (b) right-continuous (that is, lim[x→x[0]+]F[X](x) = F[X](x[0]), or in other
    words, taking the right limit is interchangeable with F[X]),
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 右连续（即lim[x→x[0]+]F[X](x) = F[X](x[0])，或者换句话说，取右极限与F[X]是可以互换的），
- en: (c) and the limits
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: (c) 以及极限
- en: '![ lim F (x ) = 0, lim F (x) = 1 x→ −∞ X x→ ∞ X ](img/file1836.png)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![ lim F (x ) = 0, lim F (x) = 1 x→ −∞ X x→ ∞ X ](img/file1836.png)'
- en: hold.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 成立。
- en: Proof. The proofs are relatively straightforward. (a) follows from the fact
    that if x/span>y, then we have
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。证明相对简单。(a) 由下述事实得出：如果x/span>y，那么我们有
- en: '![ ( ) ( ) X −1 (− ∞, x] ⊆ X −1 (− ∞, y]. ](img/file1837.png)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) ( ) X −1 (− ∞, x] ⊆ X −1 (− ∞, y]. ](img/file1837.png)'
- en: In other words, the event X ≤ x is a subset of X ≤ y. Thus, due to the monotonicity
    of probability measures, we have P(X ≤ x) ≤ P(X ≤y).
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，事件X ≤ x是X ≤ y的子集。因此，由于概率度量的单调性，我们有P(X ≤ x) ≤ P(X ≤ y)。
- en: '(b) Here, we need to show that lim[x→x[0]+]P(X ≤ x) = P(X ≤ x[0]). For this,
    note that for any x[n] → x[0] with x[n]/span>x[0], the event sequence {ω ∈ Ω :
    X(ω) ≤x[n]} is decreasing, and'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '(b) 在这里，我们需要证明lim[x→x[0]+]P(X ≤ x) = P(X ≤ x[0])。为此，请注意，对于任意x[n] → x[0]且x[n]/span>x[0]，事件序列{ω
    ∈ Ω : X(ω) ≤x[n]}是递减的，且'
- en: '![∩∞ X− 1((− ∞, xn]) = X− 1((− ∞, x0]). n=1 ](img/file1838.png)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![∩∞ X− 1((− ∞, xn]) = X− 1((− ∞, x0]). n=1 ](img/file1838.png)'
- en: Because of the upper continuity of probability measures (see Theorem [115](ch030.xhtml#x1-286009r115)),
    the right continuity of F[X] follows.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 由于概率度量的上连续性（参见定理[115](ch030.xhtml#x1-286009r115)），F[X]的右连续性随之得到。
- en: (c) Again, this follows from the fact that
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: (c) 同样，这由以下事实得出：
- en: '![ ( ) ∩ ∞n=1X −1 (− ∞, n ] = ∅ ](img/file1839.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) ∩ ∞n=1X −1 (− ∞, n ] = ∅ ](img/file1839.png)'
- en: and
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 和
- en: '![∪∞n=1X −1((− ∞, n]) = Ω. ](img/file1840.png)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![∪∞n=1X −1((− ∞, n]) = Ω. ](img/file1840.png)'
- en: Since P(∅) = 0 and P(Ω) = 1, the statement follows from the upper and lower
    continuity of probability measures. (See Theorem [114](ch030.xhtml#x1-286007r114)
    and Theorem [115](ch030.xhtml#x1-286009r115).)
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 由于P(∅) = 0且P(Ω) = 1，该陈述根据概率度量的上连续性和下连续性成立。（参见定理[114](ch030.xhtml#x1-286007r114)和定理[115](ch030.xhtml#x1-286009r115)。）
- en: Remark 16\. (Alternative definition of CDF-s)
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 备注16.（CDF的另一种定义）
- en: In the literature, you can sometimes find that instead of ([19.4](ch031.xhtml#x1-315002r88)),
    the CDF of X is defined by
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在文献中，你有时会看到，X的CDF定义为
- en: '![F∗ (x ) := P(X <x), X ](img/file1841.png)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![F∗ (x ) := P(X <x), X ](img/file1841.png)'
- en: that is, X/span>x instead of X ≤ x. This doesn’t change the big picture, but
    some details are slightly different. For instance, this change makes F[X] left-continuous
    instead of right-continuous. These minute details matter if you dig really deep,
    but in machine learning, we’ll be fine without thinking too much about them.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 即，X > x，而不是X ≤ x。这不会改变大体框架，但一些细节会有所不同。例如，这个变化使得F[X]变为左连续而非右连续。如果你深入挖掘，这些微小的细节很重要，但在机器学习中，我们不用过多关注它们也能正常工作。
- en: 'Theorem [125](ch031.xhtml#x1-316003r125) is true the other way around: if you
    give me a non-decreasing right-continuous function F(x) with lim[x→−∞]F(x) = 0
    and lim[x→∞]F(x) = 1, I can construct a random variable such that its distribution
    function matches F(x).'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 [125](ch031.xhtml#x1-316003r125)是反向成立的：如果给我一个右连续的非递减函数F(x)，并且满足lim[x→−∞]F(x)
    = 0和lim[x→∞]F(x) = 1，我可以构造一个随机变量，使其分布函数与F(x)匹配。
- en: 19.3.3 Cumulative distribution functions for discrete random variables
  id: totrans-333
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.3.3 离散随机变量的累积分布函数
- en: 'The discrete and real-valued case is not entirely disjoint: in fact, discrete
    random variables have cumulative distribution functions as well. (But not the
    other way around; that is, real-valued random variables cannot be described with
    sequences.)'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 离散和实值情况并不是完全分离的：事实上，离散随机变量也有累积分布函数。（但反过来不行；即，实值随机变量不能用序列来描述。）
- en: Say, if X is a discrete random variable taking the values x[1],x[2],…, then
    its CDF is
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 假设X是一个离散随机变量，取值为x[1],x[2],…，那么它的CDF是
- en: '![ ∑ FX (x ) = P (X = xi), xi≤x ](img/file1842.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![ ∑ FX (x ) = P (X = xi), xi≤x ](img/file1842.png)'
- en: which is a piecewise continuous function. For example, Figure [19.10](#) illustrates
    the CDF of the binomial distribution.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是一个分段连续函数。例如，图 [19.10](#)展示了二项分布的CDF。
- en: '![PIC](img/file1843.png)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1843.png)'
- en: 'Figure 19.10: The CDF of Binomial(10,0.5)'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.10：二项分布(10,0.5)的CDF
- en: The strength or probability lies in its ability to translate real-world phenomena
    into coin tosses, dice rolls, dart throws, lightbulb lifespans, and many more.
    This is possible because of distributions. Distributions are the ribbons stringing
    together a vast bundle of random variables.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 它的优势或概率在于能够将现实世界的现象转化为抛硬币、掷骰子、投掷飞镖、灯泡寿命等随机事件。这一切都得益于分布。分布就像是将一大束随机变量串联在一起的丝带。
- en: Let’s meet some of the most important ones!
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来了解一些最重要的分布！
- en: 19.3.4 The uniform distribution
  id: totrans-342
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.3.4 均匀分布
- en: 'We have already seen a special case of the uniform distribution: selecting
    a random number from the interval [0,1], such that all outcomes are “equally likely.”
    The general uniform distribution captures the same concept, except on an arbitrary
    interval [a,b] for any a/span>b. That is, the random variable X is uniformly distributed
    on the interval [a,b], or X ∼ Uniform(a,b) in symbols, if'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到均匀分布的一个特殊情况：从区间[0,1]中选择一个随机数，使得所有的结果是“同等可能”的。一般的均匀分布捕捉到相同的概念，只是它适用于任意区间[a,b]，其中a
    < b。也就是说，随机变量X在区间[a,b]上均匀分布，或者用符号表示为X ∼ Uniform(a,b)，如果
- en: '![ | | P (α <X ≤ β ) = -1--||[a,b]∩(α,β ]|| b− a ](img/file1844.png)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![ | | P (α <X ≤ β ) = -1--||[a,b]∩(α,β ]|| b− a ](img/file1844.png)'
- en: for all α <β, where |[c,d]| denotes the length of the interval [c,d],
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有α < β，其中|[c,d]|表示区间[c,d]的长度，
- en: 'In other words, the probability of our random number falling into a given interval
    is proportional to the interval’s length. This is how the condition “equally likely”
    makes sense: as there are uncountably many possible outcomes, the probability
    of each individual outcome is zero, but equally long intervals have an equal chance.'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，我们的随机数落入给定区间的概率与该区间的长度成正比。这就是“同等可能”条件的意义所在：由于可能的结果是不可数的，每个单独结果的概率为零，但等长的区间有相同的机会。
- en: In line with the definition, the distribution function of X is
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 根据定义，X的分布函数为
- en: '![ ( |||| 0 if x ≤ a, { FX (x) = | xb−−aa- if a <x ≤ b, |||( 1 otherwise. ](img/file1847.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |||| 0 if x ≤ a, { FX (x) = | xb−−aa- if a <x ≤ b, |||( 1 otherwise. ](img/file1847.png)'
- en: 19.3.5 The exponential distribution
  id: totrans-349
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.3.5 指数分布
- en: 'Let’s turn our attention toward a different problem: lightbulbs. According
    to some mysterious (and probably totally inaccurate) lore, lightbulbs possess
    the so-called memoryless property. That is, their expected lifespan is the same
    at any point in their life.'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们关注一个不同的问题：灯泡。根据某些神秘（且可能完全不准确）的传说，灯泡具备所谓的无记忆性特性。也就是说，它们的期望寿命在任何时候都是一样的。
- en: To put this into a mathematical form, let X be a random variable denoting the
    lifespan of a given lightbulb. The memoryless property states that if the lightbulb
    has already lasted s seconds, then the probability of lasting another t is the
    same as in the very first moment of its life. That is,
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 将这一内容转化为数学形式，设X为一个随机变量，表示给定灯泡的寿命。无记忆性特性表明，如果灯泡已经持续了s秒，那么其持续再t秒的概率与它刚开始时的寿命概率相同。即，
- en: '![P (X >t + s | X >s) = P(X >t). ](img/file1848.png)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![P (X >t + s | X >s) = P(X >t). ](img/file1848.png)'
- en: Expanding the left side, we have
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 展开左侧，我们得到
- en: '![ P (X >t+ s,X >s) P (X >t + s | X >s) =------------------- P(X >s) P-(X-->t+-s)-
    = P(X > s) , ](img/file1849.png)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![ P (X >t+ s,X >s) P (X >t + s | X >s) =------------------- P(X >s) P-(X-->t+-s)-
    = P(X > s) , ](img/file1849.png)'
- en: as {X/span>t + s}∩{X/span>s} = {X/span>t + s}. Thus, the memoryless property
    implies that
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 {X/span>t + s}∩{X/span>s} = {X/span>t + s}。因此，无记忆性特性意味着
- en: P(X > t + s) = P(X > t) P(X > s). (19.6)
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: P(X > t + s) = P(X > t) P(X > s)。 (19.6)
- en: If we think about the probabilities as a function f(t) = P(X/span>t), ([19.6](ch031.xhtml#the-exponential-distribution))
    can be viewed as a functional equation. And a famous one at that. Without going
    into the painful details, the only continuous solution is the exponential function
    f(t) = e^(at), where a ∈ℝ is a parameter.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们把概率看作是一个函数f(t) = P(X/span>t)，那么([19.6](ch031.xhtml#the-exponential-distribution))可以视为一个泛函方程。而且它是一个著名的方程。不深入讨论痛苦的细节，唯一的连续解就是指数函数f(t)
    = e^(at)，其中a ∈ ℝ 是一个参数。
- en: As we are talking about the lifespan of a lightbulb here, the probability of
    it lasting forever is zero. That is,
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们这里讨论的是灯泡的寿命，因此它永远持续的概率为零。也就是说，
- en: '![lim P (X >t) = 0 t→ ∞ ](img/file1850.png)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
  zh: '![lim P (X >t) = 0 t→ ∞ ](img/file1850.png)'
- en: holds. Thus, as
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 这个公式成立。因此，公式为：
- en: '![ ( || ||{ 0 if a <0, lim eat = 1 if a = 0, t→ ∞ ||| |( ∞ if a >0, ](img/file1851.png)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![ ( || ||{ 0 if a <0, lim eat = 1 if a = 0, t→ ∞ ||| |( ∞ if a >0, ](img/file1851.png)'
- en: only the negative parameters are valid in our case. This characterizes the exponential
    distribution. In general, X ∼ exp(λ) for a λ/span>0 if
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，只有负参数是有效的。这就表征了指数分布。一般来说，若 λ > 0，则 X ∼ exp(λ)。
- en: '![ ( |{ 0 if x <0, FX (x) = |( 1− e−λx if x ≥ 0\. ](img/file1852.png)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ 0 if x <0, FX (x) = |( 1− e−λx if x ≥ 0\. ](img/file1852.png)'
- en: Let’s plot this for visualization!
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制图形来进行可视化！
- en: '[PRE9]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![PIC](img/file1853.png)'
  id: totrans-366
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1853.png)'
- en: 'Figure 19.11: The exponential distribution'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.11：指数分布
- en: The exponential distribution is extremely useful and frequently encountered
    in real-life applications. For instance, it models the requests incoming to a
    server, customers standing in a queue, buses arriving at a bus stop, and many
    more.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 指数分布在实际应用中极为有用且经常遇到。例如，它用于模拟服务器的请求、排队的顾客、公交车到站等情形。
- en: We’ll talk more about special distributions in later chapters, and we’ll add
    quite a few others as well.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中讨论更多的特殊分布，并且会增加一些其他的分布。
- en: 19.3.6 The normal distribution
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.3.6 正态分布
- en: 'You have probably seen the bell curve at one point in your life, as it is used
    to describe a wide range of statistical phenomena. Salaries, prices, height, intelligence:
    they all seem to follow the same symmetric bell-shaped distribution.'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能在某个时刻见过钟形曲线，因为它被用来描述各种统计现象。薪资、价格、身高、智力：它们似乎都遵循相同的对称钟形分布。
- en: 'This is described by the famous normal distribution: we say that X is normally
    distributed, or X ∼𝒩(μ,σ²), if'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 这由著名的正态分布描述：我们说X服从正态分布，或X ∼𝒩(μ,σ²)，如果
- en: '![ 1 ∫ x (t−-μ)2 FX (x ) =--√--- e− 2σ2 dt, σ 2 π −∞ ](img/file1854.png)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![ 1 ∫ x (t−-μ)2 FX (x ) =--√--- e− 2σ2 dt, σ 2 π −∞ ](img/file1854.png)'
- en: where μ,σ ∈ℝ. The parameter μ is called the mean of X, while σ² is its variance
    and σ is its standard deviation. (We’ll see more about these quantities when talking
    about the expected value and variance in Chapter [20](ch032.xhtml#the-expected-value).)
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 μ，σ ∈ ℝ。参数μ被称为X的均值，而σ²是它的方差，σ是其标准差。（当我们讨论期望值和方差时，会看到这些量的更多内容，详见第[20](ch032.xhtml#the-expected-value)章。）
- en: 'Let’s see the plot the inner part first, which you know as the famous bell
    curves:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看图形的内部分布，你知道的，就是著名的钟形曲线：
- en: '[PRE10]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![PIC](img/file1857.png)'
  id: totrans-377
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1857.png)'
- en: 'Figure 19.12: The bell curves'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.12：钟形曲线
- en: Surprisingly, no closed expression exists for its CDF
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 出乎意料的是，它的累积分布函数（CDF）没有闭式表达式。
- en: '![ 1 ∫ x − (t−-μ)2 FX (x ) =--√--- e 2σ2 dt. σ 2 π −∞ ](img/file1858.png)'
  id: totrans-380
  prefs: []
  type: TYPE_IMG
  zh: '![ 1 ∫ x − (t−-μ)2 FX (x ) =--√--- e 2σ2 dt. σ 2 π −∞ ](img/file1858.png)'
- en: No, it’s not that mathematicians were not smart enough to figure it out; it
    provably doesn’t exist. In the ancient days, statisticians used to read out its
    values from statistical tables, located in massive tomes.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 不，不是因为数学家们不够聪明无法搞明白；它证明是不存在的。在古代，统计学家们曾从巨大的统计表中查找它的值。
- en: 'Now, let’s plot F[X]:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们绘制 F[X]：
- en: '[PRE11]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![PIC](img/file1859.png)'
  id: totrans-384
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1859.png)'
- en: 'Figure 19.13: The normal distribution'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.13：正态分布
- en: Normal distribution is the single most important one in statistics, and we’ll
    see it appearing everywhere, not just in practice but in theory as well.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 正态分布是统计学中最重要的分布，我们将会看到它无处不在，不仅在实践中，而且在理论上也是如此。
- en: To sum up, distributions are the lifeblood of probability theory, and distributions
    can be represented with cumulative distribution functions.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，分布是概率论的命脉，分布可以通过累积分布函数来表示。
- en: 'However, CDFs have a significant drawback: it’s hard to express the probability
    of more complex events with them. Later, we’ll see several concrete examples of
    where CDFs fail.'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，累积分布函数（CDF）有一个显著的缺点：用它们很难表达更复杂事件的概率。稍后，我们将看到几个累积分布函数失效的具体例子。
- en: Without going into details, one example points toward multidimensional distributions.
    (I hope that their existence and importance are not surprising to you.) There,
    the distribution functions can be used to express the probability of rectangle-shaped
    events, but not, say, spheres.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 不深入细节，一个例子指向多维分布。（我希望它们的存在和重要性不会让你感到惊讶。）在那里，分布函数可以用来表示矩形事件的概率，但不能表示例如球形事件的概率。
- en: To be a bit more precise, if X,Y ∼ Uniform(0,1), then the probability
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 更准确地说，如果 X, Y ∼ Uniform(0,1)，那么概率是：
- en: '![P(X2 + Y 2 <1) ](img/file1860.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![P(X2 + Y 2 <1) ](img/file1860.png)'
- en: cannot be directly expressed in terms of the two-dimensional CDF F[X,Y] (x,y)
    (whatever that may be). Fortunately, this is not our only tool. Recall the e^(−![(x−2μσ2)2](img/file1861.png))
    part inside the CDF of the normal distribution? This is a special instance of
    density functions, which is what we’ll learn about in the next section.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 不能直接用二维累积分布函数 F[X,Y] (x,y)（无论那是什么）来表达。幸运的是，这并不是我们唯一的工具。回想一下正态分布的累积分布函数中 e^(−![(x−2μσ2)2](img/file1861.png))
    这一部分？这就是密度函数的一个特殊实例，我们将在下一节学习这个内容。
- en: 19.4 Density functions
  id: totrans-393
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 19.4 密度函数
- en: Distribution functions are not our only tool to describe real-valued random
    variables. If you have studied probability theory from a book/lecture/course written
    by a non-mathematician, you have probably seen a function such as
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 分布函数并不是我们描述实值随机变量的唯一工具。如果你从一本/一堂由非数学家写的书籍/讲座/课程学习概率论，你可能见过类似这样的函数：
- en: '![ √-1--− x22 p(x) = 2π e ](img/file1862.png)'
  id: totrans-395
  prefs: []
  type: TYPE_IMG
  zh: '![ √-1--− x22 p(x) = 2π e ](img/file1862.png)'
- en: referred to as “probability” at some point. Let me tell you, this is definitely
    not a probability. I have seen this mistake so much that I decided to write short
    X/Twitter threads properly explaining probabilistic concepts, from which this
    book was grown out of. So, I take this issue to heart.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些时候被称为“概率”。让我告诉你，这绝对不是一个概率。我曾见过这个错误很多次，以至于我决定写一系列简短的 X/Twitter 线程，来正确地解释概率概念，这本书正是由此而生。所以，我非常重视这个问题。
- en: 'Here is the problem with cumulative distribution functions: they represent
    global information about local objects. Let’s unpack this idea. If X is a real-valued
    random variable, the CDF'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是累积分布函数的问题：它们表示关于局部对象的全局信息。让我们解析一下这个概念。如果 X 是一个实值随机变量，那么 CDF
- en: '![FX (x) = P(X ≤ x) ](img/file1863.png)'
  id: totrans-398
  prefs: []
  type: TYPE_IMG
  zh: '![FX (x) = P(X ≤ x) ](img/file1863.png)'
- en: describes the probability of X being smaller than a given x. But what if we
    are interested in what happens around x? Say, in the case of the uniform distribution
    ([19.5](#)), we have
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 描述了 X 小于给定 x 的概率。但如果我们关心的是 x 附近发生的情况呢？例如，在均匀分布的情况下（[19.5](#)），我们有：
- en: '![P(X = x) = lim P (x− 𝜀 <X ≤ x) 𝜀→0 = lim (FX (x)− FX (x − 𝜀)) 𝜀→0 = lim 𝜀
    𝜀→0 = 0\. ](img/file1864.png)'
  id: totrans-400
  prefs: []
  type: TYPE_IMG
  zh: '![P(X = x) = lim P (x− 𝜖 <X ≤ x) 𝜖→0 = lim (FX (x)− FX (x − 𝜖)) 𝜖→0 = lim 𝜖
    𝜖→0 = 0\. ](img/file1864.png)'
- en: (We used Theorem [115](ch030.xhtml#x1-286009r115) when taking the limit.)
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: （我们在求极限时使用了定理[115](ch030.xhtml#x1-286009r115)）。
- en: Thus, as we have already seen, the probability of picking a particular point
    is zero. Contrary to the discrete case, P(X = x) tells us nothing about how the
    distribution of X behaves around x.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，正如我们之前看到的，选择一个特定点的概率为零。与离散情况相反，P(X = x)不能告诉我们 X 在 x 附近的分布情况。
- en: And the worst thing is, this is the same for a wide array of distributions.
    For instance, you can check it manually for the exponential distribution.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 最糟糕的是，这在各种分布中都是相同的。例如，你可以手动检查指数分布。
- en: Isn’t this strange? The probability of individual outcomes is zero for both
    the uniform and exponential distribution, yet the distributions themselves couldn’t
    be more different. Let’s examine the problem from another perspective. By definition,
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是很奇怪吗？均匀分布和指数分布对于个别结果的概率都是零，但它们的分布却截然不同。我们换个角度来看这个问题。根据定义，
- en: '![P(a <X ≤ b) = FX (b)− FX (a) ](img/file1865.png)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![P(a <X ≤ b) = FX (b)− FX (a) ](img/file1865.png)'
- en: holds. Does this look familiar to you? Increments of F[X] on the right, probabilities
    on the left. Where have we seen increments before?
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 是成立的。这个式子对你来说是不是很熟悉？右边是 F[X] 的增量，左边是概率。我们在哪里见过增量？
- en: In the fundamental theorem of calculus (Theorem [92](ch022.xhtml#x1-235004r92)),
    that’s where. That is, if F[X] is differentiable and its derivative is F[X]^′(x)
    = f[X](x), then
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 在微积分的基本定理（定理 [92](ch022.xhtml#x1-235004r92)）中，就是这么回事。也就是说，如果 F[X] 可导且其导数为 F[X]^′(x)
    = f[X](x)，那么
- en: ∫[a]^b f[X](x) dx = F[X](b) − F[X](a). (19.7)
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: ∫[a]^b f[X](x) dx = F[X](b) − F[X](a)。 (19.7)
- en: 'The function f[X](x) seems to be what we are looking for: it represents the
    local behavior of X around x. But instead of describing the probability, it describes
    its rate of change. This is called a probability density function.'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 f[X](x) 似乎正是我们在寻找的：它表示 X 在 x 附近的局部行为。但它不是描述概率，而是描述其变化率。这被称为概率密度函数。
- en: By turning this argument around, we can define density functions using ([19.7](ch031.xhtml#density-functions)).
    Here is the mathematically precise version.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转这个论证，我们可以使用 ([19.7](ch031.xhtml#density-functions)) 来定义密度函数。这里是数学上精确的版本。
- en: Definition 89\. (Density functions)
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 89. （密度函数）
- en: 'Let (Ω,Σ,P) be a probability space, and X : Ω →ℝ be a real-valued random variable.
    The function f[X] : ℝ →ℝ is called the probability density function (PDF) of X,
    if it is integrable, and'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '设 (Ω,Σ,P) 是一个概率空间，X : Ω →ℝ 是一个实值随机变量。如果函数 f[X] : ℝ →ℝ 可积，则称 f[X] 是 X 的概率密度函数（PDF），并且'
- en: ∫[a]^b f[X](x) dx = F[X](b) − F[X](a) (19.8)
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: ∫[a]^b f[X](x) dx = F[X](b) − F[X](a) (19.8)
- en: holds for all a,b ∈ℝ.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有 a,b ∈ℝ 都成立。
- en: Again, ([19.8](ch031.xhtml#x1-321004r89)) is the Newton-Leibniz formula (Theorem [92](ch022.xhtml#x1-235004r92))
    in disguise.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提到，([19.8](ch031.xhtml#x1-321004r89)) 是牛顿-莱布尼茨公式（定理 [92](ch022.xhtml#x1-235004r92)）的变体。
- en: The following theorem makes this connection precise.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 以下定理准确地阐明了这一联系。
- en: Theorem 126\. (The density function as derivative)
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 126. （作为导数的密度函数）
- en: Let X be a real-valued random variable. If the cumulative distribution function
    F[X](x) is everywhere differentiable, then
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 设 X 是一个实值随机变量。如果累积分布函数 F[X](x) 在所有地方可导，那么
- en: '![fX(x) = -d-FX (x ) dx ](img/file1866.png)'
  id: totrans-419
  prefs: []
  type: TYPE_IMG
  zh: '![fX(x) = -d-FX (x ) dx ](img/file1866.png)'
- en: is a density function for X.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 是 X 的密度函数。
- en: Proof. This is just a simple application of the fundamental theorem of calculus
    (Theorem [92](ch022.xhtml#x1-235004r92)). If the derivative indeed exists, then
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 证明：这只是微积分基本定理（定理 [92](ch022.xhtml#x1-235004r92)）的简单应用。如果导数确实存在，那么
- en: '![∫ b-d- a dx FX (x )dx = FX (b)− FX (a), ](img/file1867.png)'
  id: totrans-422
  prefs: []
  type: TYPE_IMG
  zh: '![∫ b-d- a dx FX (x )dx = FX (b)− FX (a), ](img/file1867.png)'
- en: which means that f[X](x) = ![d- dx](img/file1868.png)F[X](x) is indeed a density
    function.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着 f[X](x) = ![d- dx](img/file1868.png)F[X](x) 确实是一个密度函数。
- en: Remark 17\. (Density functions are not unique)
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 注释 17. （密度函数并非唯一）
- en: Note that density functions are not unique. If X is a random variable with density
    f[X], then, say, modifying f[X] at a single point still functions as a density
    function for X.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，密度函数并非唯一。如果 X 是一个具有密度 f[X] 的随机变量，那么，例如，在一个点上修改 f[X] 仍然可以作为 X 的密度函数。
- en: To be more precise, define
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 更准确地说，定义
- en: '![ ( |{ fX(x) if x ⁄= 0, f∗X(x) = |( fX(0)+ 1 if x = 0\. ](img/file1869.png)'
  id: totrans-427
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ fX(x) if x ⁄= 0, f∗X(x) = |( fX(0)+ 1 if x = 0\. ](img/file1869.png)'
- en: You can check by hand that f[X]^∗ is still a density for X, yet f[X]≠f[X]^∗.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以手动检查，f[X]^∗ 仍然是 X 的密度，但 f[X] ≠ f[X]^∗。
- en: One more thing before we move on. Recall that discrete random variables are
    characterized by probability mass functions (Definition [85](ch031.xhtml#x1-306003r85)).
    Mass functions and densities are two sides of the same coin.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，再补充一点。回想一下，离散型随机变量是通过概率质量函数来表征的（定义 [85](ch031.xhtml#x1-306003r85)）。质量函数和密度函数是同一个问题的两面。
- en: The probability mass function is analogous to the density function, yet we don’t
    have terminology for random variables with the latter. We’ll fix this now.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 概率质量函数类似于密度函数，但我们没有针对后者的随机变量的术语。我们现在来解决这个问题。
- en: Definition 90\. (Continuous random variables)
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 定义90\.（连续随机变量）
- en: 'Let (Ω,Σ,P) be a probability space, and X : Ω →ℝ be a real-valued random variable.
    We say that X is continuous if it has a probability density function.'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '设（Ω，Σ，P）为概率空间，X : Ω → ℝ为实值随机变量。我们说X是连续的，如果它具有概率密度函数。'
- en: 'Discrete and continuous random variables are the backbones of probability theory:
    the most interesting random variables are falling into either of these two classes.
    (Later in the chapter, we’ll see that there are more types, but these two are
    the most important.)'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 离散和连续随机变量是概率论的基础：最有趣的随机变量属于这两类中的任何一种。（在本章后面，我们会看到还有更多类型，但这两类是最重要的。）
- en: Now we are ready to get our hands dirty and see some density functions in practice.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备动手，看看一些实际中的密度函数。
- en: 19.4.1 Density functions in practice
  id: totrans-435
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.4.1 实际中的密度函数
- en: 'After all this introduction, let’s see a few concrete examples. So far, we
    have seen two real-valued non-discrete distributions: uniform and exponential.'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 经过所有这些介绍后，让我们看看几个具体的例子。到目前为止，我们已经看到两个实值非离散分布：均匀分布和指数分布。
- en: Example 1\. Let’s start with X ∼ Uniform(0,1). Can we apply Theorem [126](ch031.xhtml#x1-321005r126)
    directly? Not without a little snag. Or two, to be more precise.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 示例1\. 我们从X ∼ 均匀分布(0,1)开始。我们能直接应用定理[126](ch031.xhtml#x1-321005r126)吗？没有一点问题的话不行。或者更精确地说，是两个问题。
- en: Why? Because the distribution function
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么？因为分布函数
- en: '![ (| ||| 0 if x ≤ 0, { FX(x) = | x if 0 <x ≤ 1, |||( 1 if x >1 ](img/file1870.png)'
  id: totrans-439
  prefs: []
  type: TYPE_IMG
  zh: '![ (| ||| 0 if x ≤ 0, { FX(x) = | x if 0 <x ≤ 1, |||( 1 if x >1 ](img/file1870.png)'
- en: is not differentiable at x = 0 and x = 1\. However, it is differentiable everywhere
    else, and its derivative
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 在x = 0和x = 1处不可微分。然而，它在其他地方是可微的，并且其导数
- en: '![ ( || 0 if x <0, ||{ F′X (x ) = 1 if 0 <x <1, ||| |( 0 if x >1 ](img/file1871.png)'
  id: totrans-441
  prefs: []
  type: TYPE_IMG
  zh: '![ ( || 0 if x <0, ||{ F′X (x ) = 1 if 0 <x <1, ||| |( 0 if x >1 ](img/file1871.png)'
- en: is indeed a density function. (You can check this by hand.) This density is
    patched together from the derivative of F[X](x) on the intervals (−∞,0), (0,1),
    and (1,∞).
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 确实是一个密度函数。（你可以亲自验证这一点。）这个密度是由F[X](x)的导数在区间(−∞,0)、(0,1)和(1,∞)上拼接而成的。
- en: '![PIC](img/file1872.png)'
  id: totrans-443
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1872.png)'
- en: 'Figure 19.14: Density function of the uniform distribution on [0,1]'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.14：均匀分布在[0,1]上的密度函数
- en: Example 2\. In the case of the exponentially distributed random variable Y ∼
    exp(λ), the function
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2\. 在指数分布的随机变量Y ∼ exp(λ)的情况下，函数
- en: '![ ( |{0 if x <0, fY(x) = | (λe −λx if x ≥ 0 ](img/file1873.png)'
  id: totrans-446
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{0 if x <0, fY(x) = | (λe −λx if x ≥ 0 ](img/file1873.png)'
- en: is a proper density function, which we obtained by differentiating F[Y] (x)
    whenever possible. Again, the density f[X](x) is patched together from the derivatives
    on the intervals (−∞,0) and (0,∞).
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 是一个合适的密度函数，我们通过对F[Y] (x)进行可微分的操作获得。再次强调，密度f[X](x)是由在区间(−∞,0)和(0,∞)上的导数组合而成。
- en: '![PIC](img/file1874.png)'
  id: totrans-448
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1874.png)'
- en: 'Figure 19.15: Density function of the exp(1) distribution'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.15：exp(1)分布的密度函数
- en: Example 3\. Now, I am going to turn everything upside down. Let Z ∼ Bernoulli(1∕2),
    which is a discrete random variable with probability mass function
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 示例3\. 现在，我将把一切颠倒过来。设Z ∼ 伯努利(1∕2)，这是一个离散随机变量，具有概率质量函数
- en: '![pZ (0) = pZ(1) = 1, 2 ](img/file1875.png)'
  id: totrans-451
  prefs: []
  type: TYPE_IMG
  zh: '![pZ (0) = pZ(1) = 1, 2 ](img/file1875.png)'
- en: and cumulative distribution function
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 和累积分布函数
- en: '![ ( || 0 if x <0, ||{ FZ(x) = 1 if 0 ≤ x <1, ||| 2 |( 1 if x ≥ 1\. ](img/file1876.png)'
  id: totrans-453
  prefs: []
  type: TYPE_IMG
  zh: '![ ( || 0 if x <0, ||{ FZ(x) = 1 if 0 ≤ x <1, ||| 2 |( 1 if x ≥ 1\. ](img/file1876.png)'
- en: Like the uniform and exponential distributions, this CDF is also differentiable
    except for a few points (which are 0 and 1).
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 像均匀分布和指数分布一样，这个CDF也是可微的，除了少数几个点（即0和1）。
- en: 'Thus, it is natural to guess that, like before, we can patch its derivatives
    together to obtain a density function. However, there is a bigger snag: the derivative
    of F[Z] is zero, at least wherever it exists. It turns out that Z does not have
    a density function at all!'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，像以前一样，我们可以猜测，通过将其导数拼接在一起，可以得到一个密度函数。然而，存在一个更大的问题：F[Z]的导数为零，至少在它存在的地方是如此。事实证明，Z根本没有密度函数！
- en: 'What’s the issue? I’ll tell you: the jump discontinuities of F[Z](x) at x =
    0 and x = 1\. Although the CDFs of the uniform and exponential distributions were
    not differentiable at finitely many points, they did not include any jump discontinuities.'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 有什么问题？我来告诉你：F[Z](x)在x = 0和x = 1处的跳跃不连续性。尽管均匀分布和指数分布的累积分布函数在有限个点上不可导，但它们没有跳跃不连续性。
- en: 'We are not going to dive deep into the details, but the gist is: if there is
    a jump discontinuity in the CDF, the density function does not exist.'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不打算深入细节，但要点是：如果累积分布函数中存在跳跃不连续性，则密度函数不存在。
- en: Remark 18\. (The non-existence of density despite the lack of jump discontinuities)
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 注18。（尽管没有跳跃不连续性，仍然不存在密度函数）
- en: Unfortunately, the reverse direction of “jump discontinuity in the CDF ⇒ no
    PDF exists” is not true, I repeat, not true.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，“累积分布函数中的跳跃不连续性 ⇒ 不存在概率密度函数”这一反向命题并不成立，我重复一遍，**不成立**。
- en: We can find random variables whose cumulative distribution functions are continuous,
    but their density does not exist. One famous example is the Cantor function ([https://en.wikipedia.org/wiki/Cantor_function](https://en.wikipedia.org/wiki/Cantor_function)),
    also known as the Devil’s staircase. (Only follow this link if you are brave enough
    or well-trained in real analysis, which is the same.)
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以找到累积分布函数是连续的随机变量，但其密度不存在。一个著名的例子是康托尔函数（[https://en.wikipedia.org/wiki/Cantor_function](https://en.wikipedia.org/wiki/Cantor_function)），也被称为“魔鬼楼梯”。（只有当你足够勇敢或在实分析方面经过良好训练时，才可以点击此链接，这二者是一样的。）
- en: 19.4.2 Classification of real-valued random variables
  id: totrans-461
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 19.4.2 实值随机变量的分类
- en: 'So far, we have been focusing on two special kinds of real-valued random variables:
    discrete random variables (Definition [80](ch031.xhtml#x1-301002r80)) and continuous
    ones (Definition [90](ch031.xhtml#x1-321008r90)).'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在关注两种特殊类型的实值随机变量：离散型随机变量（定义[80](ch031.xhtml#x1-301002r80)）和连续型随机变量（定义[90](ch031.xhtml#x1-321008r90)）。
- en: We’ve seen all kinds of objects describing them. Every real-valued random variable
    has a cumulative distribution function (Definition [88](ch031.xhtml#x1-315002r88)),
    but while discrete ones are characterized by probability mass functions (Definition [85](ch031.xhtml#x1-306003r85)),
    the continuous ones are by density functions (Definition [89](ch031.xhtml#x1-321004r89)).
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了描述它们的各种对象。每个实值随机变量都有一个累积分布函数（定义[88](ch031.xhtml#x1-315002r88)），但离散型随机变量通过概率质量函数（定义[85](ch031.xhtml#x1-306003r85)）来表征，而连续型随机变量则通过密度函数（定义[89](ch031.xhtml#x1-321004r89)）来表征。
- en: Are these two all that’s out there?
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个就是全部了吗？
- en: No. There are mixed cases. For instance, consider the following example. We
    are selecting a random number from [0,1], but we add a little twist to the picking
    process. First, we toss a fair coin, and if it comes up heads, we pick 0\. Otherwise,
    we pick uniformly between zero and one.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 不。还有混合型情况。例如，考虑以下例子。我们从[0,1]区间选择一个随机数，但我们对选择过程做了一点小改动。首先，我们抛一个公平的硬币，如果是正面朝上，我们选择0；否则，我们在0到1之间均匀地选择一个数。
- en: 'To describe this weird process, let’s introduce two random variables: let X
    be the final outcome and Y be the outcome of the coin toss. Then, using the conditional
    version of the law of total probability (see Theorem [117](ch030.xhtml#x1-291003r117)),
    we have'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 为了描述这个奇怪的过程，让我们引入两个随机变量：令X为最终结果，Y为抛硬币的结果。然后，使用全概率法则的条件版本（参见定理[117](ch030.xhtml#x1-291003r117)），我们得到
- en: '![P (X ≤ x) = P (X ≤ x | Y = heads )P (Y = heads) + P (X ≤ x | Y = tails)P
    (Y = tails). ](img/file1878.png)'
  id: totrans-467
  prefs: []
  type: TYPE_IMG
  zh: '![P (X ≤ x) = P (X ≤ x | Y = heads )P (Y = heads) + P (X ≤ x | Y = tails)P
    (Y = tails). ](img/file1878.png)'
- en: As
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 如
- en: '![ ( |{ P (X ≤ x | Y = heads) = 0 if x <0, |( 1 if x ≥ 1, ](img/file1879.png)'
  id: totrans-469
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ P (X ≤ x | Y = heads) = 0 if x <0, |( 1 if x ≥ 1, ](img/file1879.png)'
- en: and P(X ≤x∣Y = tails) = F[Uniform(0,1)](x), we ultimately have
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 和 P(X ≤x∣Y = tails) = F[Uniform(0,1)](x)，最终我们得到了
- en: '![ (| ||| 0 if x <0, { x+1 FX (x) = | -2- if 0 ≤ x <1, |||( 1 if x ≥ 1\. ](img/file1880.png)'
  id: totrans-471
  prefs: []
  type: TYPE_IMG
  zh: '![ (| ||| 0 if x <0, { x+1 FX (x) = | -2- if 0 ≤ x <1, |||( 1 if x ≥ 1\. ](img/file1880.png)'
- en: Ultimately, F[X] is the convex combination of two cumulative distribution functions.
    (A convex combination is a linear combination where the coefficients are positive
    and their sum is 1.)
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，F[X]是两个累积分布函数的凸组合。（凸组合是系数为正且总和为1的线性组合。）
- en: '![PIC](img/file1881.png)'
  id: totrans-473
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1881.png)'
- en: 'Figure 19.16: CDF of the mixed distribution X'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.16：混合分布X的累积分布函数（CDF）
- en: Thus, the random variable X is not discrete nor continuous. So, what is it?
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，随机变量X既不是离散型的，也不是连续型的。那么，它是什么呢？
- en: It’s time to add order to chaos! In this section, we are going to provide a
    complete classification for our real-valued random variables. This is a beautiful,
    albeit advanced, topic so feel free to skip it on a first read.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候为混乱添加秩序了！在这一节中，我们将为我们的实值随机变量提供完整的分类。这是一个美丽的、虽然高级的话题，所以第一次阅读时可以跳过它。
- en: 'Let’s start at a seemingly distant topic: subsets of ℝ that are so small that
    they practically vanish. Since ℝ is a one-dimensional object, we are usually talking
    about length here, but let’s forget that terminology and talk about measure instead.
    We’ll denote the measure of a set A ⊆ℝ by λ(A), whatever that might be.'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个看似遥远的话题开始：ℝ 的子集，它们小到几乎消失。由于 ℝ 是一维对象，我们通常在这里讨论的是长度，但让我们忘记那个术语，转而讨论测度。我们将用
    λ(A) 来表示一个集合 A ⊆ ℝ 的测度，不管它是什么。
- en: We are not going too deep into the details and will keep on using the notion
    of measure intuitively. For instance, the measure of an interval [a,b] is λ([a,b])
    = b−a.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会深入细节，并将继续直观地使用测度的概念。例如，区间 [a, b] 的测度是 λ([a, b]) = b - a。
- en: Our measure λ has some fundamental properties, for instance,
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的测度 λ 具有一些基本属性，例如，
- en: λ(∅) = 0,
  id: totrans-480
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: λ(∅) = 0，
- en: λ(A) ≤λ(B) if A ⊆B,
  id: totrans-481
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 A ⊆ B，则 λ(A) ≤ λ(B)。
- en: and λ(∪[k=1]^∞A[k]) = ∑ [k=1]^∞λ(A[k]) if A[i] ∩A[j] = ∅.
  id: totrans-482
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并且 λ(∪[k=1]^∞A[k]) = ∑ [k=1]^∞λ(A[k])，如果 A[i] ∩ A[j] = ∅。
- en: 'This almost behaves like a probability measure, with one glaring exception:
    λ(ℝ) = ∞. This is not an accident.'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 这几乎表现得像一个概率度量，唯一显著的例外是：λ(ℝ) = ∞。这并不是偶然的。
- en: What is the measure of a finite set {a[1],…,a[n]}? Intuitively, it is zero,
    and from this example, we’ll conjure up the concept of sets of zero measure.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有限集合 {a[1], …, a[n]} 的测度是多少？直观上，它是零，借此示例，我们将引出零测度集合的概念。
- en: Theorem 127\. (Sets of zero measure)
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 127\. （零测度集合）
- en: Let A ⊆ℝ be an arbitrary set. Suppose that for any arbitrarily small 𝜀/span>0,
    there exists a union of intervals E = ∪[k=1]^∞(a[i],b[i]) such that
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 设 A ⊆ ℝ 是任意集合。假设对于任何任意小的 𝜀/span>0，存在一个区间的并 E = ∪[k=1]^∞(a[i], b[i])，使得
- en: (a) λ(E)/span>𝜀, (b) and A ⊆E,
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: (a) λ(E)/span>𝜀, (b) 且 A ⊆ E，
- en: then, λ(A) = 0.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，λ(A) = 0。
- en: Proof. As A ⊆E, λ(A) ≤λ(E) 𝜀. This means that λ(A) is smaller than any positive
    real number, thus it must be zero.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。由于 A ⊆ E，因此 λ(A) ≤ λ(E) 𝜀。这意味着 λ(A) 小于任何正实数，因此它必须为零。
- en: Let’s see some examples.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一些例子。
- en: Example 1\. A set of a single element has zero measure. As any {a} can be covered
    by the interval (a−𝜀,a + 𝜀) for some 𝜀/span>0\. As λ((a−𝜀,a + 𝜀)) = 2𝜀, the conditions
    of Theorem [127](ch031.xhtml#x1-323011r127) apply, thus λ({a}) = 0\.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 1\. 单元素集合的测度为零。由于任何 {a} 都可以被区间 (a−𝜀, a+𝜀) 覆盖，其中 𝜀/span>0。由于 λ((a−𝜀, a+𝜀))
    = 2𝜀，定理[127](ch031.xhtml#x1-323011r127)的条件适用，因此 λ({a}) = 0。
- en: Example 2\. A finite set has zero measure. To see this, let A = {a[1],…,a[n]}
    be our finite set. The system of intervals
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2\. 有限集合的测度为零。为了证明这一点，设 A = {a[1], …, a[n]} 是我们的有限集合。区间系统
- en: '![ n ( ) E = ⋃ a − -𝜀-,a + -𝜀- , 𝜀 >0 k 2n k 2n k=1 ](img/file1884.png)'
  id: totrans-493
  prefs: []
  type: TYPE_IMG
  zh: '![ n ( ) E = ⋃ a − -𝜀-,a + -𝜀- , 𝜀 >0 k 2n k 2n k=1 ](img/file1884.png)'
- en: will do the job, as the intervals are mutually disjoint for a small enough 𝜀,
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做是可行的，因为对于足够小的 𝜀，区间是互不重叠的。
- en: thus
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 因此
- en: '![ ∑n ( ( 𝜀 𝜀 )) λ(E) = λ ak − ---,ak +--- k=1 2n 2n ∑n 𝜀 = -- k=1n = 𝜀. ](img/file1885.png)'
  id: totrans-496
  prefs: []
  type: TYPE_IMG
  zh: '![ ∑n ( ( 𝜀 𝜀 )) λ(E) = λ ak − ---,ak +--- k=1 2n 2n ∑n 𝜀 = -- k=1n = 𝜀. ](img/file1885.png)'
- en: Example 3\. A countable set has zero measure. For any A = {a[1],a[2],…}, the
    system of intervals
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 3\. 可数集合的测度为零。对于任意的 A = {a[1], a[2], …}，区间系统
- en: '![ ∞⋃ ( 𝜀 𝜀 ) E = ak − -k+1-,ak +-k+1- , 𝜀 >0 k=1 2 2 ](img/file1886.png)'
  id: totrans-498
  prefs: []
  type: TYPE_IMG
  zh: '![ ∞⋃ ( 𝜀 𝜀 ) E = ak − -k+1-,ak +-k+1- , 𝜀 >0 k=1 2 2 ](img/file1886.png)'
- en: work perfectly, as
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 完全可以工作，因为
- en: '![ ∞∑ -𝜀- λ (E ) ≤ 2k = 𝜀. k=1 ](img/file1887.png)'
  id: totrans-500
  prefs: []
  type: TYPE_IMG
  zh: '![ ∞∑ -𝜀- λ (E ) ≤ 2k = 𝜀. k=1 ](img/file1887.png)'
- en: For instance, as the set of integers and rational numbers are both countable,
    λ(ℤ) = λ(ℚ) = 0.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，由于整数集合和有理数集合都是可数的，λ(ℤ) = λ(ℚ) = 0。
- en: 'Overall, sets of zero measure are true to their name: they are small. (They
    are not necessarily countable though.) Why are these important? We’ll see this
    in the next section.'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，零测度的集合名副其实：它们很小。（不过，它们不一定是可数的。）为什么这些重要？我们将在下一节看到。
- en: Remark 19\. (Density functions are not unique, take two)
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 备注 19\. （密度函数不是唯一的，取两个）
- en: Do you recall Remark [17](ch031.xhtml#x1-321006r17), where we saw that changing
    the density function of X at a single point is also a density for X?
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 你还记得备注[17](ch031.xhtml#x1-321006r17)吗？我们曾看到，在 X 的单个点改变密度函数也是 X 的密度函数。
- en: Turns out that you can actually modify f[X] at an entire set of measure zero.
    Say,
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 结果发现，实际上你可以在整个零测度集合上修改 f[X]。假设，
- en: '![ ( | ∗ { fX (x) if x∈∕ℚ, fX (x) = |( 0 if x ∈ ℚ ](img/file1888.png)'
  id: totrans-506
  prefs: []
  type: TYPE_IMG
  zh: '![ ( | ∗ { fX (x) if x∈∕ℚ, fX (x) = |( 0 if x ∈ ℚ ](img/file1888.png)'
- en: is still a density function for X. Unfortunately, we don’t have the tools to
    show this, as it would require moving beyond the good old Riemann integral, which
    is way beyond our scope.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 对 X 来说，它仍然是一个密度函数。不幸的是，我们没有足够的工具来证明这一点，因为这需要超越经典的 Riemann 积分，这超出了我们的讨论范围。
- en: The main difference between a discrete and a continuous random variable is the
    set where they live. Fundamentally, they are both real-valued random variables,
    but the range of a discrete variable is a set of measure zero.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 离散随机变量与连续随机变量之间的主要区别在于它们所处的集合。从根本上说，它们都是实值随机变量，但离散变量的范围是一个零测度的集合。
- en: Let’s introduce the concept of singular random variables to make this notion
    precise.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们引入奇异随机变量的概念，以使这个概念更加精确。
- en: Definition 91\. (Singular random variables)
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 91\. （奇异随机变量）
- en: 'Let (Ω,Σ,P) be a probability space and X : Ω →ℝ be a real-valued random variable.
    We say that X is singular if its range X(Ω) = {X(ω) : ω ∈ Ω}⊆ℝ is a set of zero
    measure, that is,'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '设（Ω, Σ, P）为概率空间，X : Ω →ℝ 为实值随机变量。我们称 X 为奇异的，如果它的范围 X(Ω) = {X(ω) : ω ∈ Ω}⊆ℝ
    是一个零测度的集合，即，'
- en: '![ ( ) λ X (Ω ) = 0 ](img/file1889.png)'
  id: totrans-512
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) λ X (Ω ) = 0 ](img/file1889.png)'
- en: holds.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 成立。
- en: All discrete random variables are singular, but not the other way around. For
    instance, the Cantor function ([https://en.wikipedia.org/wiki/Cantor_function](https://en.wikipedia.org/wiki/Cantor_function))
    is a good example.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 所有离散随机变量都是奇异的，但反之则不然。例如，Cantor函数（[https://en.wikipedia.org/wiki/Cantor_function](https://en.wikipedia.org/wiki/Cantor_function)）就是一个很好的例子。
- en: Why are singular random variables so special? Because every distribution can
    be written as the sum of a singular and a continuous one! Here is the famous Lebesgue
    decomposition theorem.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么奇异随机变量如此特别？因为每个分布都可以写成奇异随机变量和连续随机变量的和！这就是著名的 Lebesgue 分解定理。
- en: Theorem 128\. (Lebesgue’s decomposition theorem)
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 128\. （Lebesgue 分解定理）
- en: 'Let (Ω,Σ,P) be a probability space and X : Ω →ℝ be a real-valued random variable.
    Then, there exists a singular random variable X[s] and a continuous random variable
    X[c] such that'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '设（Ω, Σ, P）为概率空间，X : Ω →ℝ 为实值随机变量。那么，存在一个奇异随机变量 X[s] 和一个连续随机变量 X[c]，使得'
- en: '![FX = αFXs + βFXc, ](img/file1890.png)'
  id: totrans-518
  prefs: []
  type: TYPE_IMG
  zh: '![FX = αFXs + βFXc, ](img/file1890.png)'
- en: where α + β = 1, and F[X], F[X[s]], F[X[c]] are the corresponding cumulative
    distribution functions.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 α + β = 1，F[X]、F[X[s]]、F[X[c]]分别是对应的累积分布函数。
- en: 'We are not going to prove this here but the gist is this: there are singular
    random variables, continuous ones, and their sum.'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里不会证明这个结果，但其要点是：有奇异随机变量、连续随机变量及其和。
- en: 19.5 Summary
  id: totrans-521
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 19.5 总结
- en: With the introduction of random variables, we learned to represent abstract
    probability spaces as random variables, mapping a sufficiently expressive collection
    of events to the real numbers. Instead of σ-algebras and probability measures,
    now we can deal with numbers. As I told you, “The strength or probability lies
    in its ability to translate real-world phenomena into coin tosses, dice rolls,
    dart throws, lightbulb lifespans, and many more.”
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 随着随机变量的引入，我们学会了将抽象的概率空间表示为随机变量，将一个足够表达的事件集合映射到实数上。现在我们可以处理数字，而不再是 σ-代数和概率度量。正如我之前告诉你的，“概率的力量在于它能够将现实世界的现象转化为掷硬币、掷骰子、投掷飞镖、灯泡寿命等很多事件。”
- en: 'Most common random variables come in two forms: discrete or continuous, meaning
    that either it can be described with a probability mass function'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的随机变量有两种形式：离散型或连续型，这意味着它要么可以用概率质量函数描述
- en: '![{ } ∞ P (X = xk ) k=1, ](img/file1891.png)'
  id: totrans-524
  prefs: []
  type: TYPE_IMG
  zh: '![{ } ∞ P (X = xk ) k=1, ](img/file1891.png)'
- en: or with a density function f[X], satisfying
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 或者使用密度函数 f[X]，满足
- en: '![ ∫ b P(a ≤ X ≤ b) = a fX (x)dx. ](img/file1892.png)'
  id: totrans-526
  prefs: []
  type: TYPE_IMG
  zh: '![ ∫ b P(a ≤ X ≤ b) = a fX (x)dx. ](img/file1892.png)'
- en: Translating experiments to distributions is the secret sauce of probability
    theory and statistics. For instance, the time between call center calls, bus arrivals,
    earthquakes, and insurance claims are all modeled with the exponential distribution,
    a mathematical object we can work with.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 将实验转化为分布是概率论和统计学的核心秘密。例如，呼叫中心通话之间的时间、公交到达、地震和保险索赔等都可以用指数分布建模，这是我们可以操作的数学对象。
- en: 'I know that learning takes a lifetime, but we must wrap this book up at some
    point. There is one more concept left that I want to tell you about: the expected
    value, enabling us to measure the statistical properties of our distributions.
    See you in the next chapter!'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道学习是一个终身的过程，但我们必须在某个时候结束这本书。还有一个概念我想告诉你：期望值，它让我们能够衡量分布的统计特性。下章见！
- en: 19.6 Problems
  id: totrans-529
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 19.6 问题
- en: Problem 1\. Let X and Y be two independent random variables, and let a,b ∈ℝ
    be two arbitrary constants. Show that X −a and Y −b are also independent from
    each other.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 1\. 设 X 和 Y 为两个独立的随机变量，a, b ∈ℝ 为两个任意常数。证明 X −a 和 Y −b 也是彼此独立的。
- en: Problem 2\. Let X be a continuous random variable. Show that P(X = x) = 0 for
    any x ∈ℝ.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 2\. 设 X 为连续随机变量。证明对于任何 x ∈ℝ，P(X = x) = 0。
- en: Problem 3\. Let X ∼ Bernoulli(p) and Y ∼ Binomial(n,p). Calculate the probability
    distribution of X + Y .
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 3\. 设 X ∼ 伯努利(p) 和 Y ∼ 二项分布(n,p)。计算 X + Y 的概率分布。
- en: 'Problem 4\. Let X ∼ Bernoulli(p) be the result of a coin toss. We select a
    random number Y from [0,2] based on the result of the toss: if X = 0, we pick
    a number from [0,1] using the uniform distribution, but if X = 1, we pick a number
    from [1,2], once more using the uniform distribution. Find the cumulative distribution
    function of Y . Does Y have a density function? If yes, find it.'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 4\. 设 X ∼ 伯努利(p) 为一次抛硬币的结果。我们根据抛硬币的结果从 [0,2] 中选择一个随机数 Y：如果 X = 0，我们从 [0,1]
    中均匀分布地选取一个数；如果 X = 1，我们从 [1,2] 中选取一个数，同样采用均匀分布。求 Y 的累积分布函数。Y 是否有密度函数？如果有，求出该函数。
- en: Join our community on Discord
  id: totrans-534
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区
- en: Read this book alongside other users, Machine Learning experts, and the author
    himself. Ask questions, provide solutions to other readers, chat with the author
    via Ask Me Anything sessions, and much more. Scan the QR code or visit the link
    to join the community. [https://packt.link/math](https://packt.link/math)
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、机器学习专家以及作者一起阅读本书。提出问题、为其他读者提供解决方案、通过“问我任何问题”环节与作者交流，等等。扫描二维码或访问链接加入社区。[https://packt.link/math](https://packt.link/math)
- en: '![PIC](img/file1.png)'
  id: totrans-536
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/file1.png)'
