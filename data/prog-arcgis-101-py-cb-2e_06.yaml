- en: Chapter 6. Executing Geoprocessing Tools from Scripts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章。从脚本中执行地理处理工具
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下食谱：
- en: Finding geoprocessing tools
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找地理处理工具
- en: Retrieving a toolbox alias
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取工具箱别名
- en: Executing geoprocessing tools from a script
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从脚本中执行地理处理工具
- en: Using the output of a tool as an input to another tool
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将工具的输出用作另一个工具的输入
- en: Setting environment variables
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置环境变量
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: ArcGIS Desktop contains over 800 geoprocessing tools, which can be used in your
    Python scripts. In this chapter, you will learn to use these tools in your scripts.
    Each tool has unique characteristics. The syntax for executing each will differ
    depending upon the type of input required to successfully execute the tool. We'll
    examine how you can determine the input parameters for any tool using the ArcGIS
    Desktop help system. The execution of a tool results in the creation of one or
    more output datasets along with a set of messages that are generated while the
    tool is running. We'll examine how you can use these messages. Finally, we'll
    look at how you can get and set environment variables for your script.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS Desktop 包含超过 800 个地理处理工具，这些工具可用于您的 Python 脚本。在本章中，您将学习如何在脚本中使用这些工具。每个工具都有其独特的特性。执行每个工具的语法将根据需要成功执行工具所需的输入类型而有所不同。我们将探讨如何使用
    ArcGIS Desktop 帮助系统确定任何工具的输入参数。工具的执行将导致创建一个或多个输出数据集以及工具运行期间生成的消息集。我们将探讨如何使用这些消息。最后，我们将探讨如何获取和设置脚本的环境变量。
- en: Finding geoprocessing tools
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找地理处理工具
- en: Before using a tool in your geoprocessing script, you will need to make sure
    that you have access to that tool, based on the current license level of ArcGIS
    Desktop that you are running or that your end users will run. This information
    is contained within the ArcGIS Desktop help system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的地理处理脚本中使用工具之前，您需要确保您有权访问该工具，这取决于您正在运行的 ArcGIS Desktop 当前许可级别或您的最终用户将运行的许可级别。此信息包含在
    ArcGIS Desktop 帮助系统中。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The availability of geoprocessing tools for your script is dependent upon the
    ArcGIS license level you are using. At version 10.1 of ArcGIS Desktop, there are
    three license levels, namely **Basic**, **Standard**, and **Advanced**. These
    were formerly known as **ArcView**, **ArcEditor**, and **ArcInfo**, respectively.
    It is important for you to understand the license level required for the tool
    that you want to use in your script. In addition to this, the use of extensions
    in ArcGIS Desktop can result in the availability of additional tools for your
    script. There are two primary ways to find tools in ArcGIS Desktop. The first
    is to use the search window and the second is to simply browse the contents of
    ArcToolbox. In this recipe, you will learn to use the search window to find available
    geoprocessing tools that can be used in your scripts.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您的脚本中地理处理工具的可用性取决于您使用的 ArcGIS 许可级别。在 ArcGIS Desktop 的 10.1 版本中，有三个许可级别，分别是 **基本**、**标准**和**高级**。这些以前分别被称为
    **ArcView**、**ArcEditor**和**ArcInfo**。了解您在脚本中想要使用的工具所需的许可级别非常重要。此外，在 ArcGIS Desktop
    中使用扩展可能会导致您的脚本可用更多工具。在 ArcGIS Desktop 中查找工具主要有两种方法。第一种是使用搜索窗口，第二种是简单地浏览 ArcToolbox
    的内容。在本食谱中，您将学习如何使用搜索窗口查找可用于您脚本的可用地理处理工具。
- en: How to do it…
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Open `C:\ArcpyBook\Ch6\Crime_Ch6.mxd` in ArcMap.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch6\Crime_Ch6.mxd`。
- en: From the **Geoprocessing** menu item select **Search For Tools**. This will
    display the **Search** window, as shown in the following screenshot. By default,
    you will be searching for **Tools**:![How to do it…](img/4445_06_1.jpg)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **地理处理** 菜单项中选择 **搜索工具**。这将显示 **搜索** 窗口，如下面的截图所示。默认情况下，您将搜索 **工具**：![如何操作…](img/4445_06_1.jpg)
- en: 'Type the term `Clip` into the search text box. As you begin typing this word,
    the **Search** textbox will automatically filter the results based upon the first
    few letters you type. You''ll notice that for the word `Clip`, there are three
    possible tools: `clip(analysis)`, `clip(coverage)`, `clip(data_management)`. There
    are a number of cases where there are several geoprocessing tools with the same
    name. To uniquely define a tool, the toolbox alias is attached to the tool name.
    We''ll examine toolbox aliases in greater detail in the next recipe.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索文本框中输入术语`Clip`。当您开始输入此词时，**搜索**文本框将自动根据您输入的前几个字母过滤结果。您会注意到对于单词`Clip`，有三个可能的工具：`clip(analysis)`、`clip(coverage)`、`clip(data_management)`。在许多情况下，存在几个具有相同名称的地理处理工具。为了唯一地定义一个工具，工具箱别名附加到工具名称上。我们将在下一个菜谱中更详细地检查工具箱别名。
- en: For now, click on the **Search** button to generate a list of matching tools.
    The search should generate a list similar to what you see in the following screenshot.
    Tools are indicated with a hammer icon in the search results. You'll also see
    a couple of other icons in the search results. The scroll icon indicates a Python
    script, and an icon containing multi-colored squares indicates a model:![How to
    do it…](img/4445_06_2.jpg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击**搜索**按钮以生成匹配工具的列表。搜索应生成一个类似于以下截图的列表。工具在搜索结果中以锤子图标表示。您还会在搜索结果中看到几个其他图标。滚动图标表示Python脚本，而包含多色方块的图标表示模型：![如何做…](img/4445_06_2.jpg)
- en: Select the **Clip (Analysis)** tool. This will open the dialog box for the **Clip
    (Analysis)** tool. This isn't all that useful to you as a script programmer. You
    will probably be more interested in the ArcGIS Desktop help for a particular tool.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Clip (Analysis)**工具。这将打开**Clip (Analysis)**工具的对话框。这对您作为脚本程序员来说并不那么有用。您可能对特定工具的ArcGIS
    Desktop帮助更感兴趣。
- en: Click on the **Tool Help** button at the bottom of the tool dialog box to display
    detailed information about this particular tool:![How to do it…](img/4445_06_3.jpg)
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击工具对话框底部的**工具帮助**按钮以显示有关此特定工具的详细信息：![如何做…](img/4445_06_3.jpg)
- en: Scroll down to the bottom of the help page for the **Clip** tool to examine
    the syntax for this particular tool.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**Clip**工具的帮助页面底部，以检查此特定工具的语法。
- en: How it works…
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The help system contains a summary, illustration, usage, syntax, code samples,
    available environment variables, related topics, and licensing information for
    each tool. As a geoprocessing script programmer, you will primarily be interested
    in the syntax, code samples, and licensing information sections near the bottom.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 帮助系统包含每个工具的摘要、插图、用法、语法、代码示例、可用环境变量、相关主题和许可信息。作为一个地理处理脚本程序员，您主要会对语法、代码示例和许可信息部分感兴趣，这些部分位于页面底部。
- en: Note
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You should always examine the licensing information section at the bottom of
    the help documentation for each tool, to make sure you have the appropriate license
    level to use the tool.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该始终检查每个工具的帮助文档底部的许可信息部分，以确保您拥有适当的许可级别来使用该工具。
- en: 'The syntax section contains information about how this tool should be called
    from your Python script, including the name of the tool and the required and optional
    input parameters. All the parameters will be enclosed within parentheses. The
    required parameters for the `Clip` tool are `in_features`, `clip_features`, and
    `out_feature_class`. When you call this tool from your script, you will be required
    to provide these parameters to the tool for it to execute correctly. The fourth
    parameter is an optional parameter called `cluster_tolerance`. Parameters marked
    as optional in the syntax are surrounded by curly braces. The following screenshot
    provides an example of an optional parameter surrounded by curly braces. This
    doesn''t mean that you enclose the parameter in curly braces when you call the
    tool. It is in the help section simply to indicate that this parameter is optional
    when being called from your geoprocessing script:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 语法部分包含了关于如何从您的Python脚本中调用此工具的信息，包括工具的名称和所需的以及可选的输入参数。所有参数都将包含在括号内。`Clip`工具所需的参数是`in_features`、`clip_features`和`out_feature_class`。当您从脚本中调用此工具时，您需要提供这些参数以便工具能够正确执行。第四个参数是一个可选参数，称为`cluster_tolerance`。在语法中标有可选的参数被大括号包围。以下截图提供了一个被大括号包围的可选参数的示例。这并不意味着您在调用工具时将参数包围在大括号内。它仅位于帮助部分，以表明当从地理处理脚本中调用时此参数是可选的：
- en: '![How it works…](img/4445_06_4.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理…](img/4445_06_4.jpg)'
- en: Retrieving a toolbox alias
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取工具箱别名
- en: All toolboxes have an alias which, when combined with the tool name, provides
    a unique reference to any tool in ArcGIS Desktop. This alias is necessary because
    a number of tools have the same name. When referencing a tool from your Python
    script, it is necessary to reference both the tool name and tool alias.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所有工具箱都有一个别名，当与工具名称结合时，为 ArcGIS Desktop 中的任何工具提供了一个唯一的引用。这个别名是必要的，因为许多工具具有相同的名称。当从您的
    Python 脚本引用工具时，需要同时引用工具名称和工具别名。
- en: Getting ready
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In the last recipe we looked at the **Clip** tool. There are actually three
    Clip tools which can be found in the **Analysis, Coverage**, and **Data Management**
    toolboxes. Each **Clip** tool performs a different function. For instance, the
    **Clip** tool in the **Analysis** toolbox clips a vector feature class using an
    input feature, while the **Clip** tool in the **Data Management** toolbox is used
    to create a spatial subset of a raster. Since it is possible to have multiple
    tools with the same name, we can uniquely identify a particular tool by providing
    both the toolname and the toolbox alias where the tool resides. In this recipe
    you will learn how to find the alias of a toolbox.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个菜谱中，我们探讨了 **Clip** 工具。实际上有三个 **Clip** 工具可以在 **Analysis, Coverage** 和 **Data
    Management** 工具箱中找到。每个 **Clip** 工具执行不同的功能。例如，**Analysis** 工具箱中的 **Clip** 工具使用输入要素裁剪矢量要素类，而
    **Data Management** 工具箱中的 **Clip** 工具用于创建栅格的空间子集。由于可能存在具有相同名称的多个工具，我们可以通过提供工具名称和工具所在工具箱的别名来唯一地识别特定工具。在这个菜谱中，您将学习如何查找工具箱的别名。
- en: How to do it…
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Open `C:\ArcpyBook\Ch6\Crime_Ch6.mxd` in ArcMap.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch6\Crime_Ch6.mxd`。
- en: If necessary, open **ArcToolbox**.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，打开 **ArcToolbox**。
- en: Find the **Analysis Tools** toolbox, as shown in the following screenshot:![How
    to do it…](img/4445_06_5.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找如图所示的 **Analysis Tools** 工具箱：![如何操作…](img/4445_06_5.jpg)
- en: Right-click on the **Analysis Tools** toolbox and select **Properties**. This
    will display the **Analysis Tools Properties** dialog, as shown in the following
    screenshot. The **Alias** textbox will contain the alias:![How to do it…](img/4445_06_6.jpg)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 **Analysis Tools** 工具箱并选择 **Properties**。这将显示如图所示的 **Analysis Tools Properties**
    对话框。**Alias** 文本框将包含别名：![如何操作…](img/4445_06_6.jpg)
- en: How it works…
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: You can follow this process to find the alias name of any toolbox. In a Python
    script, you can execute a tool by referring to the tool with the syntax `<toolname>_<toolbox
    alias>`. For example, if you were calling the **Buffer** tool, it would be `buffer_analysis`.
    Toolbox aliases are invariably simple. They are typically one word and do not
    include dashes or special characters. In the next recipe, we'll create a simple
    script that follows this format for executing a tool.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以遵循以下过程来查找任何工具箱的别名。在 Python 脚本中，您可以通过使用 `<toolname>_<toolbox alias>` 语法来执行工具。例如，如果您正在调用
    **Buffer** 工具，它将是 `buffer_analysis`。工具箱别名总是简单的。它们通常是单个单词，不包含破折号或特殊字符。在下一个菜谱中，我们将创建一个简单的脚本，用于按照此格式执行工具。
- en: Executing geoprocessing tools from a script
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从脚本中执行地理处理工具
- en: Once you have determined the toolbox alias and then verified the accessibility
    of the tool based on your current license level, you are ready to add the execution
    of the tool to a script.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您确定了工具箱别名并验证了基于您当前许可级别的工具可访问性，您就可以将工具的执行添加到脚本中。
- en: Getting ready
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Now that you understand how to find the tools that are available and how to
    uniquely reference them, the next step is to put this together and execute a tool
    from a geoprocessing script. In this recipe, you can then execute the tool from
    your script.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了如何查找可用的工具以及如何唯一引用它们，下一步是将这些组合起来并从地理处理脚本中执行工具。在这个菜谱中，您可以从您的脚本中执行工具。
- en: How to do it…
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Open `C:\ArcpyBook\Ch6\Crime_Ch6.mxd` in ArcMap.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch6\Crime_Ch6.mxd`。
- en: Click on the **Add Data** button and add the `EdgewoodSD.shp` file to the table
    of contents.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Add Data** 按钮，并将 `EdgewoodSD.shp` 文件添加到目录表中。
- en: Turn off the **Crime Density by School District** and **Burglaries in 2009**
    layers to get a better view of the **EdgewoodSD** layer. There is only one polygon
    feature in this file. It represents the Edgewood School District. Now we're going
    to write a script that clips the **Burglaries in 2009** features to this school
    district.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**按学区划分的犯罪密度**和**2009年盗窃事件**图层，以便更好地查看**EdgewoodSD**图层。此文件中只有一个多边形要素。它代表Edgewood学区。现在我们将编写一个脚本，将**2009年盗窃事件**要素裁剪到这个学区。
- en: Open the Python window in ArcMap.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开Python窗口。
- en: 'Import the `arcpy` module:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy`模块：
- en: '[PRE0]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a variable that references the input feature class to be clipped:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个变量来引用要裁剪的输入要素类：
- en: '[PRE1]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create a variable that references the layer to be used for the clip:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个变量来引用用于裁剪的图层：
- en: '[PRE2]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Create a variable that references the output feature class:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个变量来引用输出要素类：
- en: '[PRE3]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Execute the `Clip` tool from the **Analysis Tools** toolbox:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**分析工具**工具箱中执行`Clip`工具：
- en: '[PRE4]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Run the script. The output feature class containing only those burglary points
    within the Edgewood school district should be added to the data frame, as shown
    in the following screenshot:![How to do it…](img/4445_06_7.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。包含仅限于Edgewood学区内的那些盗窃点的输出要素类应添加到数据框中，如下截图所示：![如何做…](img/4445_06_7.jpg)
- en: How it works…
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The primary line of code of interest in this recipe is the final line that executes
    the `Clip` tool. Notice that we called this tool by specifying a syntax of `Clip_analysis`,
    which gives us a reference to the `Clip` tool in the **Analysis Tools** toolbox,
    which has an alias of `analysis`. We've also passed in three parameters that reference
    the input feature class, clip feature class, and output feature class. I should
    point out that we hardcoded the paths to each of the datasets. This is not a good
    programming practice, but in this particular instance I just wanted to illustrate
    how you execute a tool. A future chapter will illustrate how you can remove the
    hardcoding in your scripts and make them much more versatile.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们感兴趣的代码的主要行是执行`Clip`工具的最后一条线。注意，我们通过指定`Clip_analysis`的语法来调用此工具，这为我们提供了对**分析工具**工具箱中`Clip`工具的引用，该工具的别名为`analysis`。我们还传递了三个参数，分别引用输入要素类、裁剪要素类和输出要素类。我应该指出，我们硬编码了每个数据集的路径。这不是一个好的编程实践，但在这个特定的例子中，我只是想说明如何执行工具。未来的章节将说明如何从您的脚本中删除硬编码，并使它们更加灵活。
- en: 'Most tools that you use will require paths to data sources. This path must
    be the same as the path reported on the ArcCatalog **Location** toolbar, as shown
    in the following screenshot:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您使用的多数工具将需要数据源路径。此路径必须与ArcCatalog **位置**工具栏上报告的路径相同，如下截图所示：
- en: '![How it works…](img/4445_06_8.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的…](img/4445_06_8.jpg)'
- en: Tools use ArcCatalog to find geographic data using an ArcCatalog path. This
    path is a string and is unique to each dataset. The path can include folder locations,
    database connections, or a URL. So, it is important to check the path using ArcCatalog
    before attempting to write Python scripts against the data. ArcSDE paths require
    special consideration. Many ArcSDE users do not have standardized connection names,
    which can cause issues when running models or scripts.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 工具使用ArcCatalog通过ArcCatalog路径查找地理数据。此路径是一个字符串，并且对每个数据集都是唯一的。路径可以包括文件夹位置、数据库连接或URL。因此，在尝试针对数据编写Python脚本之前，使用ArcCatalog检查路径是很重要的。ArcSDE路径需要特别注意。许多ArcSDE用户没有标准化的连接名称，这可能在运行模型或脚本时引起问题。
- en: There's more...
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Geoprocessing tools are organized in two ways. You can access tools as functions
    on `arcpy` or as modules matching the toolbox alias name. In the first case, when
    tools are accessible as functions from `arcpy`, they are called in the format
    that you followed in this recipe. The tool name is followed by an underscore and
    then the toolbox alias. In the second form, tools are called as functions of a
    module, which takes the name of the toolbox alias. Here, `analysis` is the toolbox
    alias, so it becomes a module. `Clip` is a function of that module and is called
    follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 地理处理工具以两种方式组织。您可以通过`arcpy`上的函数访问工具，也可以作为与工具箱别名匹配的模块访问。在第一种情况下，当工具可以通过`arcpy`作为函数访问时，它们将以您在本食谱中遵循的格式调用。工具名称后跟一个下划线，然后是工具箱别名。在第二种形式中，工具作为模块的函数调用，该模块的名称是工具箱别名。在这里，`analysis`是工具箱别名，因此它成为一个模块。`Clip`是该模块的函数，其调用方式如下：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Which method you use is really a matter of preference. They both accomplish
    the same thing, which is the execution of a geoprocessing tool.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你使用哪种方法完全是个人喜好问题。它们都完成了相同的事情，即执行地理处理工具。
- en: Using the output of a tool as an input to another tool
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将工具的输出用作另一个工具的输入
- en: There will be many occasions when you will need to use the output of one tool
    as an input to another tool. This is called tool chaining. An example of tool
    chaining could involve buffering a streams layer and then finding all residential
    properties that fall within the buffer. In this case, the Buffer tool would output
    a new layer, which would then be used as an input to the Select by Location tool
    or one of the other overlay tools. In this recipe, you will learn how to obtain
    the output of a tool and use it as input to another tool.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，你需要将一个工具的输出用作另一个工具的输入。这被称为工具链。工具链的一个例子可能涉及缓冲河流图层，然后找到所有位于缓冲区内的住宅物业。在这种情况下，`Buffer`工具将输出一个新图层，然后该图层将被用作`Select
    by Location`工具或其他叠加工具的输入。在这个菜谱中，你将学习如何获取工具的输出并将其用作另一个工具的输入。
- en: Getting ready
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Buffer tool creates an output feature class from an input feature layer
    using a specified distance. This output feature class can be stored in a variable,
    which can then be used as an input to another tool, such as the `Select Layer
    by Location` tool. In this recipe, you will learn how to use the output from the
    `Buffer` tool as an input to the `Select Layer by Location` tool to find all schools
    that are within a half mile of a stream.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`Buffer`工具使用指定的距离从一个输入要素类创建输出要素类。这个输出要素类可以存储在一个变量中，然后可以将其用作另一个工具的输入，例如`Select
    Layer by Location`工具。在这个菜谱中，你将学习如何将`Buffer`工具的输出用作`Select Layer by Location`工具的输入，以找到所有位于河流半英里范围内的学校。'
- en: How to do it...
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to access the currently active map document
    in ArcMap:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何在ArcMap中访问当前活动的地图文档：
- en: Open ArcMap with a new map document file (`.mxd`).
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新的地图文档文件（`.mxd`）打开ArcMap。
- en: Click on the **Add Data** button and add the Streams and Schools shapefiles
    from `c:\ArcpyBook\data\TravisCounty`.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加数据**按钮并将`Streams`和`Schools`要素类从`c:\ArcpyBook\data\TravisCounty`添加进来。
- en: Click on the Python window button.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击Python窗口按钮。
- en: 'Import the `arcpy` module:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy`模块：
- en: '[PRE6]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Set the workspace:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置工作空间：
- en: '[PRE7]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Start a `try` statement and add variables for the streams, buffered streams
    layer, distance, and schools:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个`try`语句并添加用于河流、缓冲河流图层、距离和学校的变量：
- en: '[PRE8]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Call the `Buffer` tool and pass in variables for the streams layer, the buffered
    stream layer, and the distance along with several variables that control the look
    of the buffer:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`Buffer`工具并传入河流图层、缓冲河流图层、距离以及控制缓冲区外观的几个变量：
- en: '[PRE9]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create a temporary layer for the schools using the `Make Feature Layer` tool:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`Make Feature Layer`工具为学校创建一个临时图层：
- en: '[PRE10]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Select all schools within a half mile of a stream using the `Select Layer by
    Location` tool:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`Select Layer by Location`工具选择所有位于河流半英里范围内的学校：
- en: '[PRE11]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add the `except` block to catch any errors:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`except`块以捕获任何错误：
- en: '[PRE12]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The entire script should appear as follows:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：
- en: '[PRE13]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How it works...
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `Buffer` tool creates an output feature class, which we called `StreamsBuffer.shp`
    and stored in a variable called `streamsBuffer`. This `streamsBuffer` variable
    is then used as an input to the `Select Layer by Location` tool as the third parameter
    being passed in to the function. Using the output of one tool simply requires
    that you create a variable to hold the output data and then it can be re-used
    as needed in other tools.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`Buffer`工具创建一个输出要素类，我们将其命名为`StreamsBuffer.shp`并存储在一个名为`streamsBuffer`的变量中。然后，这个`streamsBuffer`变量被用作`Select
    Layer by Location`工具的输入，作为传递给函数的第三个参数。使用一个工具的输出只需要创建一个变量来保存输出数据，然后它可以在其他工具中按需重复使用。'
- en: Setting environment variables and examining tool messages
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境变量和检查工具消息
- en: Environment variables provide additional parameters that can be set, which serve
    as global variables accessible at various levels including your scripts. Your
    scripts can get environment variable values as well as set values. You need to
    have an understanding of the environment variables that are available to your
    script as well as how they can be accessed. In addition to this, tools generate
    messages during execution. These messages come in several varieties.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量提供可以设置的附加参数，这些参数作为全局变量在各个级别（包括您的脚本）中可访问。您的脚本可以获取环境变量的值以及设置值。您需要了解可供您的脚本使用的环境变量以及如何访问它们。此外，工具在执行过程中会生成消息。这些消息有多种类型。
- en: Getting ready
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Environment settings are additional parameters available to your script during
    execution. These are the values that you set once at the ArcGIS Desktop application
    level using a separate dialog box accessed through the **Geoprocessing - Environments**
    menu item, and are organized by category:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 环境设置是在执行期间可供您的脚本使用的附加参数。这些是在 ArcGIS 桌面应用程序级别使用单独的对话框设置的值，该对话框通过“地理处理 - 环境”菜单项访问，并按类别组织：
- en: '![Getting ready](img/4445OT_06_08.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/4445OT_06_08.jpg)'
- en: These settings are very similar to environment variable settings that you can
    set at an operating-system level, but they are specific to the ArcGIS geoprocessing
    framework. These application-level environment settings are the highest level,
    and default settings for all the tools are applied during the execution of any
    tool. In addition to application-level environment settings, you can also apply
    environment settings at the tool level. Environment settings at the tool level
    directly inherit the settings applied at the application level. However, these
    settings can be overridden at the tool level. Tool-level settings are applicable
    only to the current tool execution. Your Python scripts can get and set environment
    settings through the `env` class in `arcpy`. These are read/write properties.
    Both application- and tool-level settings are passed into the script and will
    apply to any tool that you run from within the script. You may also override any
    environment settings from within your script and these will be applied during
    the execution of the script. Please keep in mind that just as with tools, environment
    settings set at the script level only apply to the current execution of a script.
    There are, however, two occasions when environment settings are not passed to
    the script. These include scripts running outside an ArcGIS application, such
    as when they are run from the operating system command prompt. In addition, when
    a script calls another script, environment settings are not passed through. In
    this recipe, you will learn to set environment settings from your Python script
    and view various messages generated by the tool during execution.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置与您可以在操作系统级别设置的类似的环境变量设置非常相似，但它们是针对 ArcGIS 地理处理框架的特定设置。这些应用程序级别的环境设置是最高级别的，并且在执行任何工具时都会应用所有工具的默认设置。除了应用程序级别的环境设置之外，您还可以在工具级别应用环境设置。工具级别的环境设置直接继承应用程序级别应用的设置。然而，这些设置可以在工具级别被覆盖。工具级别的设置仅适用于当前工具的执行。您的
    Python 脚本可以通过 `arcpy` 中的 `env` 类获取和设置环境设置。这些都是读写属性。应用程序和工具级别的设置都会传递到脚本中，并将应用于您从脚本中运行的任何工具。您还可以在脚本内部覆盖任何环境设置，这些设置将在脚本执行期间应用。请注意，与工具一样，仅在脚本级别设置的环境设置仅适用于脚本当前执行。然而，有两种情况下环境设置不会传递到脚本。这包括在
    ArcGIS 应用程序之外运行的脚本，例如，当它们从操作系统命令提示符运行时。此外，当脚本调用另一个脚本时，环境设置不会传递。在本食谱中，您将学习如何从您的
    Python 脚本中设置环境设置并查看工具在执行期间生成的各种消息。
- en: How to do it…
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to set environment settings and generate messages
    in your script:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何在脚本中设置环境设置并生成消息：
- en: Create a new IDLE script and save it as `c:\ArcpyBook\Ch6\SetEnvVariables.py`.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 IDLE 脚本，并将其保存为 `c:\ArcpyBook\Ch6\SetEnvVariables.py`。
- en: 'Import the `arcpy` module:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy` 模块：
- en: '[PRE14]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Set the workspace using an environment variable:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用环境变量设置工作空间：
- en: '[PRE15]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Call the `Buffer` tool, passing in the input dataset of `Streams.shp`, an output
    dataset of `Streams_Buff.shp`, and a distance of 200 feet.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `Buffer` 工具，传入输入数据集 `Streams.shp`，输出数据集 `Streams_Buff.shp`，以及距离 200 英尺。
- en: '[PRE16]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Save the script.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存脚本。
- en: How it works…
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Environment variables can be set at both the application level and the tool
    level. Application-level environment settings are similar to global environment
    settings; in that they affect all tools. On the other hand, environment settings
    defined at the tool level affect only the current run of a tool. Both can be set
    using ArcGIS Desktop. Your scripts can also set environment variables, which are
    applicable only during the execution of the script. They are similar to environment
    variables set at the tool level. Probably, the most commonly set environment variable
    used in scripts is the `env.workspace` variable, which defines the current working
    directory for the script. Setting this variable at the top of your script can
    make your code less wordy, since you won’t have to constantly refer to the full
    path to a dataset, but rather simply the dataset name as defined in the current
    workspace.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量可以在应用程序级别和工具级别进行设置。应用程序级别的环境设置类似于全局环境设置；在于它们影响所有工具。另一方面，在工具级别定义的环境设置仅影响工具的当前运行。两者都可以使用
    ArcGIS Desktop 进行设置。您的脚本也可以设置环境变量，这些变量仅在脚本执行期间适用。它们类似于在工具级别设置的环境变量。可能，在脚本中最常设置的环境变量是
    `env.workspace` 变量，它定义了脚本的当前工作目录。在脚本顶部设置此变量可以使您的代码更加简洁，因为您不必不断引用数据集的完整路径，而只需简单地引用当前工作空间中定义的数据集名称。
