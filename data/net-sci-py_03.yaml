- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Useful Python Libraries
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有用的 Python 库
- en: In this chapter, I’m going to introduce several of the Python libraries we will
    be using in this book. I will describe what they are and how to install them,
    and give examples of a few useful things you can do with them. You do not have
    to memorize all of the capabilities of every Python library that you use, or thoroughly
    understand the internals of every single function that you use. It is important
    that you understand what libraries are available, what overall capabilities they
    have, and what critically important timesavers are in the library (this will keep
    you coming back for more). Everyone’s use case is different, and there is no way
    to memorize everything. I recommend that you internalize this point as quickly
    as possible, and learn what you need to when you need it. Learn about the internals
    in as much depth as you need.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将介绍我们将在本书中使用的几个 Python 库。我会描述它们是什么、如何安装，并给出一些有用的示例。你不需要记住每个 Python 库的所有功能，或者深入理解你使用的每个函数的内部原理。重要的是，你需要知道哪些库是可用的，它们的整体功能是什么，以及库中有哪些关键的时间节省工具（这会让你反复使用）。每个人的使用场景不同，无法记住所有内容。我建议你尽快理解这一点，在需要时学习所需内容。根据需要深入了解库的内部结构。
- en: 'To keep this organized, I am separating software libraries by category. Here
    are the libraries we will discuss:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持条理，我将按照类别来划分软件库。以下是我们将讨论的库：
- en: '| **Python Library** | **Category** |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| **Python 库** | **类别** |'
- en: '| --- | --- |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `pandas` | Data Analysis and Processing |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| `pandas` | 数据分析与处理 |'
- en: '| `NumPy` | Data Analysis and Processing |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `NumPy` | 数据分析与处理 |'
- en: '| `Matplotlib` | Data Visualization |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `Matplotlib` | 数据可视化 |'
- en: '| `Seaborn` | Data Visualization |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `Seaborn` | 数据可视化 |'
- en: '| `Plotly` | Data Visualization |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `Plotly` | 数据可视化 |'
- en: '| `NLTK` | Natural Language Processing |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `NLTK` | 自然语言处理 |'
- en: '| `spaCy` | Natural Language Processing |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `spaCy` | 自然语言处理 |'
- en: '| `NetworkX` | Network Analysis and Visualization |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `NetworkX` | 网络分析与可视化 |'
- en: '| `Scikit-Network` | Network Visualization (Better) |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `Scikit-Network` | 网络可视化（更好） |'
- en: '| `scikit-learn` | Machine Learning |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `scikit-learn` | 机器学习 |'
- en: '| `Karate Club` | Machine Learning (Graph) |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `Karate Club` | 机器学习（图形） |'
- en: '| `spaCy (Repeat)` | Machine Learning (NLP) |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `spaCy (重复)` | 机器学习（自然语言处理） |'
- en: Figure 3.1 – A table of Python libraries for NLP
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 自然语言处理的 Python 库表格
- en: It’s useful to break the libraries down this way, as it is logical. We need
    to first collect, process, and analyze data before we should do anything else.
    We should visualize the data as we analyze it. Certain libraries specialize in
    NLP. Other libraries specialize in network analysis and visualization. Finally,
    there are different libraries that are useful for different kinds of ML, and even
    non-ML-focused libraries often have ML capabilities, such as `spaCy`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式划分库非常有用，因为它是合乎逻辑的。我们需要首先收集、处理和分析数据，然后再做其他任何事情。在分析数据的过程中，我们应当进行数据可视化。某些库专注于自然语言处理，其他库专注于网络分析与可视化。最后，有些库对于不同类型的机器学习（ML）非常有用，甚至一些非
    ML 专注的库也往往具有 ML 功能，例如 `spaCy`。
- en: I am going to keep this very high level, as we will actually be using these
    libraries in upcoming chapters. This chapter covers the “what” and “why” questions
    about given libraries. Other chapters will cover how they may be used.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我将保持这个介绍的高层次，因为我们将在接下来的章节中实际使用这些库。本章介绍的是关于给定库的“什么”和“为什么”的问题，其他章节将介绍它们的使用方法。
- en: 'One final point before moving on: you do not need to memorize every aspect
    of any of these Python libraries. In software development and data science, skills
    are acquired piece by piece. Learn what is useful to you now, then if a library
    proves to be useful, learn more. Don’t feel guilty for only knowing small pieces.
    Knowledge is accumulated over time, not all at once.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 继续之前的最后一点：你不需要记住这些 Python 库的每个方面。在软件开发和数据科学中，技能是逐步积累的。现在学习对你有用的部分，然后如果某个库证明有用，再深入学习。不要因为只知道一些小部分而感到愧疚，知识是随着时间积累的，而不是一蹴而就的。
- en: 'Our sections for this chapter will be the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的内容将包括以下几个部分：
- en: Using notebooks
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用笔记本
- en: Data analysis and processing
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据分析与处理
- en: Data visualization
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可视化
- en: NLP
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然语言处理（NLP）
- en: Network analysis and visualization
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络分析与可视化
- en: ML
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习（ML）
- en: Technical requirements
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter will deal with a lot of the resources we will be using throughout
    the book.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍我们在全书中将使用的许多资源。
- en: 'All of the code can be found in the GitHub repository: [https://github.com/PacktPublishing/Network-Science-with-Python.](https://github.com/PacktPublishing/Network-Science-with-Python)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 所有代码都可以在 GitHub 仓库中找到：[https://github.com/PacktPublishing/Network-Science-with-Python.](https://github.com/PacktPublishing/Network-Science-with-Python)
- en: Using notebooks
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用笔记本
- en: It is often easiest – and very useful – to do data analysis and prototyping
    using what we often affectionately just call **notebooks**. **Jupyter** defines
    the Jupyter notebook as a web-based interactive computing platform. I like that
    simple definition. Notebooks are essentially a series of “cells” that can contain
    code or text, which can be run individually or sequentially. This allows you to
    write code in a web browser, run the code while in the web browser, and see immediate
    results. For data analysis or experimentation, this immediate feedback is useful.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 进行数据分析和原型开发时，通常最简单且非常有用的方法是使用我们常亲切地称为**笔记本**的工具。**Jupyter** 将 Jupyter Notebook
    定义为一个基于网页的交互式计算平台。我喜欢这个简单的定义。笔记本本质上是一系列可以包含代码或文本的“单元”，这些单元可以单独运行，也可以顺序运行。这使得你可以在网页浏览器中编写代码，在网页浏览器中运行代码，并看到即时的结果。对于数据分析或实验，这种即时反馈非常有用。
- en: In this book, we use Jupyter Notebook. I recommend downloading and installing
    it from the Anaconda website. You can do so at [https://www.anaconda.com](https://www.anaconda.com).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们使用 Jupyter Notebook。我建议从 Anaconda 网站下载并安装它。你可以在[https://www.anaconda.com](https://www.anaconda.com)进行下载。
- en: In Jupyter, you can run code and see the immediate results of that code, whether
    the output be text, numeric, or a data visualization. You will see a lot of notebook
    use in this book, so I will keep this short.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Jupyter 中，你可以运行代码并查看该代码的即时结果，无论是文本、数字还是数据可视化。你将在本书中看到很多笔记本的使用，所以我会简短说明。
- en: '**Google Colab** is another option for working with notebooks, and you don’t
    have to install anything to use it. This can be an even easier way to work with
    notebooks, but it has its advantages and disadvantages. I recommend that you learn
    how to use both and choose the one that you like best, or that allows you to work
    well with others.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Colab** 是另一种使用笔记本的选择，你无需安装任何东西即可使用它。这可能是使用笔记本的一种更简便的方式，但它也有优点和缺点。我建议你学习如何使用两者，并选择一个最适合你，或者允许你与他人高效合作的工具。'
- en: You can check out Google Colab at [https://colab.research.google.com](https://colab.research.google.com).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看 Google Colab，网址是 [https://colab.research.google.com](https://colab.research.google.com)。
- en: Next, let’s explore the libraries we’ll use for data analysis.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们探索一下我们将在数据分析中使用的库。
- en: Data analysis and processing
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据分析与处理
- en: There are a number of useful libraries for working with data, and you will want
    to use different libraries and techniques at different points of the data life
    cycle. For instance, in working with data, it is often useful to start with **Exploratory
    Data Analysis** (**EDA**). Later on, you will want to do cleanup, wrangling, various
    transformations for preprocessing, and so on. Here are some of the available Python
    libraries and their uses.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数据时，有许多有用的库，而在数据生命周期的不同阶段，你会希望使用不同的库和技术。例如，在数据处理时，**探索性数据分析**（**EDA**）通常是一个有用的起点。之后，你可能需要进行数据清理、数据整理、预处理时的各种转换等等。下面是一些常用的
    Python 库及其用途。
- en: pandas
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: pandas
- en: '`pandas` is easily one of the most important libraries to use when doing anything
    with data in Python. Put simply, if you work with data in Python, you should know
    about `pandas`, and you should probably be using it. You can use it for several
    different things when working with data, such as the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas` 无疑是 Python 中进行数据处理时最重要的库之一。简而言之，如果你在 Python 中处理数据，你应该了解 `pandas`，并且很可能应该使用它。你可以在数据处理时使用它做多种不同的事情，例如：'
- en: Reading data from an assortment of file types or from the internet
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从各种文件类型或互联网读取数据
- en: EDA
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EDA
- en: '**Extract, Transform,** **Load** (**ETL**)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提取、转换、** **加载**（**ETL**）'
- en: Simple and quick data visualizations
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单快捷的数据可视化
- en: And much, much, more
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有更多更多的内容
- en: If there is one Python library that I would recommend to everyone on this planet
    – not just data professionals – it is `pandas`. Being able to make short work
    of data analysis outside of spreadsheets is liberating and powerful.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有一个 Python 库我会推荐给这个星球上的每一个人——不仅仅是数据专业人士——那就是 `pandas`。能够在不使用电子表格的情况下快速进行数据分析是非常解放且强大的。
- en: Setup
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'If you’re working in Jupyter or Google Colab notebooks, it’s very likely that
    `pandas` is already installed and that you can just start using it. However, if
    you need to follow the steps, you can follow the official installation guide:
    [https://pandas.pydata.org/docs/getting_started/install.html](https://pandas.pydata.org/docs/getting_started/install.html).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 Jupyter 或 Google Colab 笔记本中工作，`pandas` 很可能已经安装好了，你可以直接开始使用它。不过，如果需要，你可以按照官方安装指南操作：[https://pandas.pydata.org/docs/getting_started/install.html](https://pandas.pydata.org/docs/getting_started/install.html)。
- en: 'Once it is installed, or if you suspect it is already installed, simply run
    this statement in your favorite notebook:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装完成，或者如果你怀疑它已经安装，只需在你喜欢的笔记本中运行这个语句：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If Python doesn’t complain about the library not being installed, you are all
    set.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Python 没有提示库未安装，那么你就准备好了。
- en: 'If you want to see what version of `pandas` you are using, run this statement:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看你正在使用的 `pandas` 版本，可以运行这个语句：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I can see that I am running version 1.3.4.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我看到我正在运行版本 1.3.4。
- en: Starter functionality
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: Reading data is my preferred way to help people get started with `pandas`. After
    all, data work is pretty boring if you don’t have any data to play with. In `pandas`,
    you typically work with a DataFrame, which resembles a data table or spreadsheet.
    A `pandas` DataFrame is a data object consisting of rows and columns.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读数据是我帮助大家入门 `pandas` 的首选方式。毕竟，如果没有数据玩，数据工作会非常枯燥。在 `pandas` 中，你通常使用 DataFrame，这是一个类似于数据表或电子表格的数据结构。一个
    `pandas` DataFrame 是一个由行和列组成的数据对象。
- en: 'To read a CSV file into a `pandas` DataFrame, you would do something like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 CSV 文件读取到 `pandas` DataFrame 中，你可以像这样做：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The data that I want to use is in a subdirectory of the current directory called
    data, in a file called `fruit.csv`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我想使用的数据位于当前目录的子目录 `data` 中，文件名为 `fruit.csv`。
- en: 'Once it’s read into a DataFrame, you can preview the data:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据被读取到 DataFrame 中，你可以预览数据：
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This will show a preview of the first five rows of the DataFrame.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示数据框的前五行预览。
- en: '![Figure 3.2 – Simple pandas DataFrame](img/B17105_03_002.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.2 – 简单的 pandas DataFrame](img/B17105_03_002.jpg)'
- en: Figure 3.2 – Simple pandas DataFrame
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – 简单的 pandas DataFrame
- en: 'You can also read other datasets into `pandas`. For instance, if you already
    have `scikit-learn` installed, you could do this:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以将其他数据集读取到 `pandas` 中。例如，如果你已经安装了 `scikit-learn`，你可以执行如下操作：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'That gives us *Figure 3**.3*:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们展示了 *图 3.3*：
- en: '![Figure 3.3 – pandas DataFrame of the iris dataset](img/B17105_03_003.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – iris 数据集的 pandas DataFrame](img/B17105_03_003.jpg)'
- en: Figure 3.3 – pandas DataFrame of the iris dataset
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – iris 数据集的 pandas DataFrame
- en: '`pandas` doesn’t only read from CSV files. It is quite versatile, and it is
    also less error-prone than other ways of loading CSV files. For instance, I often
    find that `pandas` will have no problem.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas` 不仅仅可以从 CSV 文件读取数据。它非常多才多艺，而且比其他加载 CSV 文件的方法更不容易出错。例如，我常常发现 `pandas`
    可以毫无问题地处理这些数据。'
- en: What is Spark?
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是 Spark？
- en: Spark is a technology that is often used for processing large amounts of data.
    Spark is very useful for “big data” workloads. At a certain point, large amounts
    of data can become too much for tools such as `pandas`, and it is useful to know
    more powerful tools, such as Spark.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Spark 是一种常用于处理大量数据的技术。Spark 对于“大数据”工作负载非常有用。到了一定程度，庞大的数据量可能会超出像 `pandas` 这样的工具的处理能力，了解像
    Spark 这样的更强大工具是非常有用的。
- en: 'Here are some of the other `pandas` `read_*` functions:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些其他的 `pandas` `read_*` 函数：
- en: '`pd.read_clipboard()`'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_clipboard()`'
- en: '`pd.read_excel()`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_excel()`'
- en: '`pd.read_feather()`'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_feather()`'
- en: '`pd.read_fwf()`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_fwf()`'
- en: '`pd.read_gbq()`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_gbq()`'
- en: '`pd.read_hdf()`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_hdf()`'
- en: '`pd.read_html()`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_html()`'
- en: '`pd.read_json()`'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_json()`'
- en: '`pd.read_orc()`'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_orc()`'
- en: '`pd.read_parquet()`'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_parquet()`'
- en: '`pd.read_pickle()`'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_pickle()`'
- en: '`pd.read_sas()`'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_sas()`'
- en: '`pd.read_spss()`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_spss()`'
- en: '`pd.read_sql()`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_sql()`'
- en: '`pd.read_sql_query()`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_sql_query()`'
- en: '`pd.read_sql_table()`'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_sql_table()`'
- en: '`pd.read_stata()`'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_stata()`'
- en: '`pd.read_table()`'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_table()`'
- en: '`pd.read_xml()`'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_xml()`'
- en: This looks like a lot, and I personally do not have all of these memorized.
    I typically only use a handful of these, such as `read_csv`, `read_json`, and
    `read_parquet`, but `read_html` is occasionally useful at a pinch as well.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这些看起来有点多，我个人并没有全部记住。我通常只使用其中的一小部分，比如 `read_csv`、`read_json` 和 `read_parquet`，但在紧急情况下，`read_html`
    偶尔也会很有用。
- en: 'For me, EDA and simple visualizations are what got me hooked on `pandas`. For
    instance, if you wanted to draw a histogram, you could do this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 对我而言，EDA（探索性数据分析）和简单的可视化是我迷上 `pandas` 的原因。例如，如果你想绘制直方图，可以这样做：
- en: '[PRE5]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Figure 3.4 – Petal width histogram](img/B17105_03_004.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.4 – 花瓣宽度直方图](img/B17105_03_004.jpg)'
- en: Figure 3.4 – Petal width histogram
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 花瓣宽度直方图
- en: '`pandas` can do much more than what I’ve shown. There are countless blog posts
    and books on doing data analysis with `pandas`. Whole books have been written
    about using `pandas`. I encourage you to buy a few and learn as much about this
    library as you can. The more you learn about `pandas`, the better you will be
    at working with data.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`能做的远不止我展示的内容。关于使用`pandas`进行数据分析的博客文章和书籍不计其数。专门讲解如何使用`pandas`的书籍也写了很多。我鼓励你买几本书，尽可能多地了解这个库。你对`pandas`了解得越多，你在处理数据时就会越得心应手。'
- en: Documentation
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: 'You can learn more about `pandas` by visiting this website: [https://pandas.pydata.org/docs/getting_started/overview.html](https://pandas.pydata.org/docs/getting_started/overview.html).'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过访问这个网站来了解更多关于`pandas`的信息：[https://pandas.pydata.org/docs/getting_started/overview.html](https://pandas.pydata.org/docs/getting_started/overview.html)。
- en: 'You can use this book as a reference to get more comfortable working with `pandas`,
    but there are also several online guides that will give hands-on practice, such
    as this: [https://pandas.pydata.org/docs/getting_started/intro_tutorials/01_table_oriented.html](https://pandas.pydata.org/docs/getting_started/intro_tutorials/01_table_oriented.html).'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将本书作为参考，以便更熟练地使用`pandas`，但也有许多在线指南可以提供动手练习，例如这个：[https://pandas.pydata.org/docs/getting_started/intro_tutorials/01_table_oriented.html](https://pandas.pydata.org/docs/getting_started/intro_tutorials/01_table_oriented.html)。
- en: NumPy
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy
- en: '`pandas` is excellent for doing data analysis against DataFrames, `NumPy` is
    more general-purpose and consists of a wide variety of mathematical functions
    and transformations.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`非常适合对DataFrame进行数据分析，`NumPy`则更为通用，包含了各种各样的数学函数和转换。'
- en: But what’s the difference between it and `pandas`? That’s actually a good question
    because both libraries are often used together. Where you see `pandas`, you will
    often also see `NumPy`. After several years of using both, the way things typically
    happen is I’ll try to do something in `pandas`, find out that it’s not possible,
    and then find out that it’s possible in `NumPy`. The two libraries work well together,
    and they meet different needs.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 那它和`pandas`有什么区别呢？这是一个很好的问题，因为这两个库通常是一起使用的。你在使用`pandas`时，通常也会看到`NumPy`。经过几年同时使用这两个库，我通常会先在`pandas`中尝试做某件事，发现做不到，然后发现`NumPy`可以做到。这两个库很好地协作，它们满足不同的需求。
- en: With `pandas`, it’s always exciting to read a CSV file for the first time and
    plot a histogram. With `NumPy`, there’s no real exciting moment. It’s just useful.
    It’s a powerful and versatile tool, and it will save you in a pinch, 9 times out
    of 10, when `pandas` doesn’t do what you need to do.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pandas`时，第一次读取CSV文件并绘制直方图总是令人兴奋。而使用`NumPy`时，没有什么特别令人兴奋的时刻，它只是非常有用。它是一个强大而多功能的工具，当`pandas`做不到你需要做的事情时，它在紧急情况下能为你省下9次中的10次。
- en: Setup
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装
- en: 'As with `pandas`, if you are working from within a notebook environment, `NumPy`
    is probably already installed. However, if you need to follow the steps, you can
    follow the official installation guide: [https://numpy.org/install/](https://numpy.org/install/).'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 和`pandas`一样，如果你在笔记本环境中工作，`NumPy`可能已经安装好了。不过，如果你需要跟随步骤操作，可以参考官方安装指南：[https://numpy.org/install/](https://numpy.org/install/)。
- en: Starter functionality
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: If you want to play around with `NumPy` to get a feel for what it can do, please
    check out one of their quickstart tutorials, such as [https://numpy.org/doc/stable/user/quickstart.html](https://numpy.org/doc/stable/user/quickstart.html).
    In the tutorial, they explain some basic operations such as generating random
    numbers, reshaping arrays, printing arrays, and more.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想玩一玩`NumPy`，感受一下它能做什么，可以查看他们的快速入门教程，比如[https://numpy.org/doc/stable/user/quickstart.html](https://numpy.org/doc/stable/user/quickstart.html)。在教程中，他们解释了一些基本操作，比如生成随机数、重塑数组、打印数组等等。
- en: Documentation
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: You can learn a lot more about `NumPy` at [https://numpy.org/doc/stable/](https://numpy.org/doc/stable/).
    In this book, we will rely on `NumPy` at a pinch, as I described previously, when
    `pandas` or another library is unable to do something that we need. Often, there
    is a simple solution in `NumPy`. So, keep an eye out for our use of `NumPy`, and
    learn what the process is doing.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://numpy.org/doc/stable/](https://numpy.org/doc/stable/)上了解更多关于`NumPy`的信息。在本书中，当`pandas`或其他库无法完成我们需要做的事情时，我们会在紧急情况下依赖`NumPy`，正如我之前描述的那样。通常，`NumPy`中有一个简单的解决方案。因此，注意我们对`NumPy`的使用，并了解其过程。
- en: Let’s move on from analysis and processing to the libraries we’ll use for visualizing
    our data.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从分析和处理转向我们将用来可视化数据的库。
- en: Data visualization
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可视化
- en: There are several Python libraries that can be used for data visualizations.
    **Matplotlib** is a good place to start, but other libraries such as **Seaborn**
    can create more attractive visualizations, and **Plotly** can create interactive
    visualizations.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个 Python 库可以用来进行数据可视化。**Matplotlib** 是一个很好的起点，但其他库，如 **Seaborn** 可以生成更具吸引力的可视化，而
    **Plotly** 则可以生成交互式可视化。
- en: Matplotlib
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Matplotlib
- en: '`Matplotlib` is a Python library for data visualization. That’s it. If you
    have data, `Matplotlib` can probably be used to visualize it. The library is integrated
    directly into `pandas`, so if you use `pandas`, you likely also use `Matplotlib`.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`Matplotlib` 是一个用于数据可视化的 Python 库。就是这样。如果你有数据，`Matplotlib` 很可能可以用来可视化它。该库已直接集成到
    `pandas` 中，所以如果你使用 `pandas`，你很可能也在使用 `Matplotlib`。'
- en: '`Matplotlib` has a very steep learning curve and is not intuitive at all. I
    consider it a necessary evil if you are learning about Python data science. No
    matter how much data visualization I do with `Matplotlib`, it never becomes easy,
    and I memorize very little. I say all of this not to badmouth `Matplotlib`, but
    so that you will not feel negativity toward yourself if you struggle with the
    library. We all struggle with the library.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`Matplotlib` 的学习曲线非常陡峭，根本不直观。我认为如果你在学习 Python 数据科学，它是一个必需的恶魔。不管我用 `Matplotlib`
    做多少数据可视化，它都永远不会变得容易，而且我记住的也很少。我这么说并不是为了贬低 `Matplotlib`，而是让你知道，如果你在使用这个库时感到挣扎，不要对自己感到沮丧。我们都在和这个库斗争。'
- en: Setup
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'As with `pandas` and `NumPy`, if you are working from within a notebook environment,
    `Matplotlib` is probably already installed. However, if you need to follow the
    steps, you can follow the official installation guide: [https://matplotlib.org/stable/users/installing/](https://matplotlib.org/stable/users/installing/).'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 和 `pandas` 以及 `NumPy` 一样，如果你在一个笔记本环境中工作，`Matplotlib` 很可能已经安装好了。然而，如果你需要按照步骤进行，你可以按照官方安装指南操作：[https://matplotlib.org/stable/users/installing/](https://matplotlib.org/stable/users/installing/)。
- en: Starter functionality
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: 'If you use `pandas` to do data visualization, you are already using `Matplotlib`.
    For instance, in the `pandas` discussion, we used this code to plot a histogram:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 `pandas` 进行数据可视化，那么你已经在使用 `Matplotlib` 了。例如，在 `pandas` 的讨论中，我们使用了以下代码来绘制直方图：
- en: '[PRE6]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Simple visualizations such as bar charts can easily be done. They’re most easily
    done directly in `pandas`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 像条形图这样的简单可视化可以很容易地完成。它们最直接地在 `pandas` 中完成。
- en: 'For instance, you could create a horizontal bar chart:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以创建一个水平条形图：
- en: '[PRE7]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This would render a very simple data visualization.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这将渲染一个非常简单的数据可视化。
- en: '![Figure 3.5 – Petal width horizontal bar chart](img/B17105_03_005.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.5 – 花瓣宽度水平条形图](img/B17105_03_005.jpg)'
- en: Figure 3.5 – Petal width horizontal bar chart
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 花瓣宽度水平条形图
- en: Documentation
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: 'The `Matplotlib` tutorials section is probably the best place to start learning:
    [https://matplotlib.org/stable/tutorials/](https://matplotlib.org/stable/tutorials/).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`Matplotlib` 的教程部分可能是开始学习的最佳地方：[https://matplotlib.org/stable/tutorials/](https://matplotlib.org/stable/tutorials/)。'
- en: However, we will be making a lot of use of `pandas` and `Matplotlib` in this
    book, so you should pick up quite a bit of knowledge just from following along
    and practicing.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在本书中，我们将大量使用 `pandas` 和 `Matplotlib`，所以你应该通过跟随和练习，掌握相当多的知识。
- en: Seaborn
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Seaborn
- en: '`Seaborn` is essentially “pretty `Matplotlib`.” It is an extension of `Matplotlib`
    and produces more attractive data visualizations. The downside is that some things
    that were not remotely intuitive in `Matplotlib` are even less intuitive in `Seaborn`.
    It’s got a learning curve like `Matplotlib`, and the learning never sticks. I
    find myself googling the web every time I need to make a visualization.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`Seaborn` 本质上是“美化版的 `Matplotlib`。”它是 `Matplotlib` 的扩展，能够生成更具吸引力的数据可视化。缺点是，一些在
    `Matplotlib` 中完全不直观的东西，在 `Seaborn` 中变得更不直观。它有着像 `Matplotlib` 一样的学习曲线，而且学习永远不会记住。我发现每次需要制作可视化时，我都在谷歌搜索。'
- en: However, once you begin figuring things out, it’s not so bad. You start to remember
    the headaches you overcame, and powering through difficult things that should
    be simple (such as resizing visualizations) becomes slightly less aggravating
    over time.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一旦你开始弄清楚事情，它也没有那么糟。你会开始记得你克服的困难，并且处理那些应该很简单的难题（比如调整可视化的大小）随着时间的推移变得稍微不那么烦人。
- en: 'The visualizations are aesthetically pleasing, much more than the `Matplotlib`
    default. It’s a lot of fun to just look through the `Seaborn` catalog of visualizations:
    [https://seaborn.pydata.org/examples/.](https://seaborn.pydata.org/examples/.)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这些可视化效果美观，远胜于 `Matplotlib` 的默认设置。浏览 `Seaborn` 可视化示例目录非常有趣：[https://seaborn.pydata.org/examples/.](https://seaborn.pydata.org/examples/.)
- en: We will occasionally use `Seaborn` in this book, but we will mostly use `Matplotlib`
    and `scikit-network` for our visualizations. Do learn about the library, though.
    It is important.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中偶尔会使用 `Seaborn`，但大多数情况下会使用 `Matplotlib` 和 `scikit-network` 来进行可视化。不过，还是要了解这个库，它非常重要。
- en: Setup
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'I don’t remember whether notebooks come with `Seaborn` installed. It wouldn’t
    surprise me if they do by now. However, if you need to install `Seaborn`, you
    can follow the official installation guide: [https://seaborn.pydata.org/installing.html](https://seaborn.pydata.org/installing.html).'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我不记得笔记本是否已经安装了 `Seaborn`。如果现在已经安装了，我也不会感到惊讶。如果你需要安装 `Seaborn`，可以参考官方安装指南：[https://seaborn.pydata.org/installing.html](https://seaborn.pydata.org/installing.html)。
- en: Starter functionality
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: '`Seaborn` can do what `Matplotlib` can do, but better, and more prettily. For
    instance, let’s redo the histogram we previously created, and include the **Kernel
    Density** **Estimate** (**KDE**):'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`Seaborn` 能做 `Matplotlib` 可以做的事，但做得更好、更漂亮。例如，让我们重新做一下之前创建的直方图，并加上 **核密度估计**（**KDE**）：'
- en: '[PRE8]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This produces the following graph:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下图表：
- en: '![Figure 3.6 – Seaborn petal width histogram with the KDE](img/B17105_03_006.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.6 – 带有 KDE 的 Seaborn 花瓣宽度直方图](img/B17105_03_006.jpg)'
- en: Figure 3.6 – Seaborn petal width histogram with the KDE
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 带有 KDE 的 Seaborn 花瓣宽度直方图
- en: The best way to get started with Seaborn is to just jump in. Get some data,
    then try to visualize it. Look through their example gallery for something applicable
    to your data, and then try to build the same thing. Copy their code at first,
    and experiment with parameters.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 学习 Seaborn 最好的方式就是直接上手。获取一些数据，然后尝试将其可视化。浏览他们的示例画廊，找一些与你的数据相符的例子，然后尝试构建相同的内容。最开始可以复制他们的代码，并尝试调整参数。
- en: Documentation
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: 'You can learn more about `Seaborn` from their website: [https://seaborn.pydata.org/](https://seaborn.pydata.org/).'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过他们的网站了解更多关于 `Seaborn` 的信息：[https://seaborn.pydata.org/](https://seaborn.pydata.org/)。
- en: Plotly
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Plotly
- en: To be honest, we will not use `Plotly` very often in this book, but there is
    one chapter where we needed to use an interactive scatterplot, and `Plotly` had
    a visualization that was useful. However, it is still good to know about `Plotly`,
    as it can be a powerful tool when you need simple intractability for data visualization.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，我们在本书中不会经常使用 `Plotly`，但是有一章需要使用交互式散点图，`Plotly` 提供了一个非常有用的可视化工具。不过，了解 `Plotly`
    还是很有用的，它在需要简单交互的数据可视化时可以成为一个强大的工具。
- en: '`Plotly` advertises that it makes interactive, publication-quality graphs.
    That’s it. It essentially does what `Matplotlib` and `Seaborn` do but in an interactive
    way. Building interaction into `Matplotlib` is possible, but it is painful. With
    `Plotly`, it is easy and fast, and a joy to do.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`Plotly` 宣传称其可以制作交互式、出版质量的图表。仅此而已。它本质上做的是 `Matplotlib` 和 `Seaborn` 所做的工作，但以交互的方式进行。将交互功能添加到
    `Matplotlib` 是可能的，但过程比较痛苦。使用 `Plotly`，则既简单又快速，而且过程充满乐趣。'
- en: Setup
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'To install `Plotly`, follow their official guide: [https://plotly.com/python/getting-started/#installation](https://plotly.com/python/getting-started/#installation).'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 若要安装 `Plotly`，请参考其官方指南：[https://plotly.com/python/getting-started/#installation](https://plotly.com/python/getting-started/#installation)。
- en: Starter functionality
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: Their website has a very fun and interactive gallery to play with, to stimulate
    creative ideas. I recommend that you read through their getting started guide,
    and explore their examples. [https://plotly.com/python/getting-started/](https://plotly.com/python/getting-started/).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的网站有一个非常有趣和互动的画廊，可以激发创意。我建议你先阅读他们的入门指南，探索他们的示例：[https://plotly.com/python/getting-started/](https://plotly.com/python/getting-started/)。
- en: We will use `Plotly` in *sw*, *Unsupervised Machine Learning on* *Network Data.*
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 *sw* 中使用 `Plotly`，*《网络数据的无监督机器学习》*。
- en: '![Figure 3.7 – Plotly interactive scatterplot](img/B17105_03_007.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.7 – Plotly 交互式散点图](img/B17105_03_007.jpg)'
- en: Figure 3.7 – Plotly interactive scatterplot
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – Plotly 交互式散点图
- en: Documentation
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: 'You can learn a lot more about `Plotly` at their website: [https://plotly.com/python/](https://plotly.com/python/).'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在他们的网站上学到更多关于 `Plotly` 的知识：[https://plotly.com/python/](https://plotly.com/python/)。
- en: Now that we have covered some useful libraries for data visualization, let’s
    do the same but for NLP and working with text.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了一些用于数据可视化的有用库，接下来我们将做同样的事情，针对自然语言处理（NLP）和文本处理。
- en: NLP
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自然语言处理（NLP）
- en: Moving on from data visualization to NLP, there are also several Python libraries
    that will be helpful to us in processing text. Each library has unique offerings
    as well as strengths and weaknesses, and the documentation should be read.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据可视化转到NLP，仍有几个Python库会对我们处理文本数据有所帮助。每个库都有独特的功能、优点和缺点，文档需要仔细阅读。
- en: Natural Language Toolkit
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自然语言工具包
- en: The `NLTK` is an older Python library, and it is often better to use other libraries
    such as `spaCy` for things that used to be done with `NLTK`, such as named-entity
    recognition or part-of-speech tagging.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`NLTK`是一个较老的Python库，通常对于曾经用`NLTK`完成的任务（例如命名实体识别或词性标注），使用`spaCy`等其他库会更好。'
- en: However, just because it is older doesn’t mean that it is obsolete. It is still
    very useful for analyzing text data, and it provides more linguistic capabilities
    than libraries such as `spaCy`.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仅仅因为它较老并不意味着它已经过时。它仍然非常适合分析文本数据，并且提供了比`spaCy`等库更多的语言学功能。
- en: Put simply, `NLTK` is a foundational library for doing NLP in Python, and you
    should not skip past it for more recent libraries and approaches.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，`NLTK`是做Python NLP的基础性库，你不应跳过它，去直接使用更新的库和方法。
- en: Setup
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置
- en: 'Installing `NLTK` is easy. Just follow the guide: [https://www.nltk.org/install.html](https://www.nltk.org/install.html).'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 安装`NLTK`非常简单。只需按照指南操作：[https://www.nltk.org/install.html](https://www.nltk.org/install.html)。
- en: Starter functionality
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动功能
- en: We’re going to use `NLTK` quite a bit in this book. When you are ready, jump
    into the next chapter and we’ll get started right away. Nothing really stands
    out as exciting to show off as starter functionality. NLP becomes more exciting
    the more you learn. It is a bit confusing in the beginning, to say the least.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将大量使用`NLTK`。当你准备好时，跳入下一章，我们会立刻开始。作为入门功能，并没有什么特别值得展示的。随着学习的深入，NLP变得更为有趣。起初，它至少有点让人困惑。
- en: Documentation
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档
- en: 'The `NLTK` website is not very helpful as a learning tool, but you can see
    some code snippets and examples here: [https://www.nltk.org](https://www.nltk.org).'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`NLTK`网站作为学习工具并不太有用，但你可以在这里看到一些代码片段和示例：[https://www.nltk.org](https://www.nltk.org)。'
- en: These days, you will likely learn more about `NLTK` from blog posts (*TowardsDataScience*
    and others) than from the official `NLTK` website. Do a Google search for `nltk
    getting started` and you’ll find some helpful guides if you want to learn from
    other sources.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，你很可能通过博客文章（*TowardsDataScience*等）了解`NLTK`，而非通过官方`NLTK`网站。如果你想从其他来源学习，可以搜索“`nltk
    getting started`”，会找到一些有用的指南。
- en: This book will be enough to help you get started with `NLTK`, but I do recommend
    learning from others who write about NLP. There is so much to learn and explore.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将足以帮助你入门`NLTK`，但我确实建议向其他撰写关于NLP文章的作者学习。NLP有太多内容值得学习和探索。
- en: spaCy
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: spaCy
- en: '`NLTK`. For instance, if you are doing named-entity recognition, part-of-speech
    tagging, or lemmatization, I recommend that you use `spaCy`, as it is quicker
    and simpler to get good results. However, the `NLTK` data loaders, stop words,
    tokenizers, and other linguistic offerings are still useful, and sometimes unmatched
    by `spaCy`. In my opinion, if you work with NLP in Python, you should learn about
    both `NLTK` and `spaCy`, not just `spaCy`. Learn about both, and remember where
    `spaCy` shines brighter than `NLTK`.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`NLTK`。例如，如果你正在做命名实体识别、词性标注或词形还原，我建议你使用`spaCy`，因为它更快捷且简单，能够获得较好的结果。然而，`NLTK`的数据加载器、停用词、分词器和其他语言学工具依然非常有用，而且有时候`spaCy`无法匹敌。个人认为，如果你从事Python中的NLP工作，应该同时学习`NLTK`和`spaCy`，而不仅仅是`spaCy`。了解两者，并记住`spaCy`在某些方面比`NLTK`更强。'
- en: Setup
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'To install `spaCy`, please use the official installation guide: [https://spacy.io/usage#quickstart](https://spacy.io/usage#quickstart).'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`spaCy`，请使用官方安装指南：[https://spacy.io/usage#quickstart](https://spacy.io/usage#quickstart)。
- en: Starter functionality
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: You’re going to see `spaCy` used quite a bit in this book, especially for named-entity
    recognition, which is useful in graph construction. Feel free to skip ahead if
    you want to see it in use.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你将看到`spaCy`的使用，尤其是在命名实体识别方面，这对图谱构建非常有用。如果你想看到它的实际应用，可以跳到后面。
- en: 'As an example, let’s install the language model, like so:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们安装语言模型，如下所示：
- en: '[PRE9]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We can run this code:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以运行这段代码：
- en: '[PRE10]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'And this would output some NER results:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这将输出一些命名实体识别（NER）结果：
- en: '[PRE11]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How is it doing this, you might wonder? It’s MAGIC! Just kidding – it’s ML.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，它是怎么做到的呢？是魔法！开个玩笑——其实是机器学习。
- en: Documentation
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: Unlike `NLTK`, the `spaCy` documentation is thorough and helpful, and it looks
    modern. I recommend spending significant time on their website and learning about
    the capabilities. There is much more that can be done with `spaCy` than what we
    will cover in this book. To learn more, visit [https://spacy.io/usage/linguistic-features](https://spacy.io/usage/linguistic-features).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 与`NLTK`不同，`spaCy`的文档非常详尽且有帮助，而且看起来现代化。我建议你花大量时间在他们的网站上，了解它的功能。`spaCy`能做的事情远比本书所涵盖的要多。要了解更多内容，请访问[https://spacy.io/usage/linguistic-features](https://spacy.io/usage/linguistic-features)。
- en: Network analysis and visualization
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络分析与可视化
- en: Our next set of libraries is useful for analyzing and visualizing various types
    of networks. Network visualization is another form of data visualization but specifically
    for networks. It is very difficult and tedious to create useful network visualizations
    without network visualization software.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来要使用的几种库对于分析和可视化各种类型的网络很有用。网络可视化是数据可视化的另一种形式，但专门针对网络。没有网络可视化软件，创建有用的网络可视化是非常困难和繁琐的。
- en: NetworkX
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`NetworkX`'
- en: '`NetworkX`, and there is simply no better resource for doing network analysis
    in Python.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`NetworkX`，没有比这更好的资源来进行Python中的网络分析了。'
- en: There are other libraries that can be used for very simple network visualization.
    In this book, I disregard all of those and show how `NetworkX` and `scikit-network`
    can be used to both do good network analysis and make reasonably attractive network
    visualizations.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他库可以用于非常简单的网络可视化。在本书中，我忽略了这些，并展示了如何使用`NetworkX`和`scikit-network`进行良好的网络分析并制作出相对美观的网络可视化。
- en: There are also other libraries that are useful alongside `NetworkX`, for community
    detection, or for analyzing the fragility of networks, for instance, but `NetworkX`
    is the core. My goal for writing this book is to spread awareness of network science
    and using networks in software development, and `NetworkX` is crucial for this.
    I want more software engineers to learn these skills.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他一些库可以与`NetworkX`一起使用，用于社区检测或分析网络的脆弱性等，但`NetworkX`是核心。我写这本书的目的是传播网络科学的知识以及在软件开发中使用网络的理念，而`NetworkX`对于这一目标至关重要。我希望更多的软件工程师能够掌握这些技能。
- en: Setup
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'Please follow the official guide to installing `NetworkX`: [https://networkx.org/documentation/stable/install.html](https://networkx.org/documentation/stable/install.html).'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照官方指南安装`NetworkX`：[https://networkx.org/documentation/stable/install.html](https://networkx.org/documentation/stable/install.html)。
- en: Starter functionality
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: 'We’re going to do a lot of really cool stuff with `NetworkX`, but if you want
    to check that it is working, you can run this code:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用`NetworkX`做很多非常酷的事情，但如果你想确认它是否正常工作，你可以运行这段代码：
- en: '[PRE12]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In a notebook, this should show a Python list of the first 10 nodes included
    in the *Les* *Miserables* graph:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在一本笔记本中，这应该显示一个Python列表，包含*悲惨世界*图中的前10个节点：
- en: '[PRE13]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Or, you could do this, to get a quick summary of the *Les* *Miserables* graph:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你也可以这样做，快速获取*悲惨世界*图的概览：
- en: '[PRE14]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Documentation
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: 'The best way to learn about `NetworkX` is actually probably reading this book.
    There are very few books about using `NetworkX`. There are some blog posts, and
    a few of the guides on the `NetworkX` website can be helpful. There’s this one,
    but it assumes that you have an understanding of graphs: [https://networkx.org/documentation/stable/tutorial.html](https://networkx.org/documentation/stable/tutorial.html).'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 学习`NetworkX`的最佳方式可能就是阅读这本书。关于如何使用`NetworkX`的书籍非常少。也有一些博客文章，`NetworkX`网站上的一些指南也很有帮助。这里有一个，但它假设你已经理解了图的概念：[https://networkx.org/documentation/stable/tutorial.html](https://networkx.org/documentation/stable/tutorial.html)。
- en: 'The website does have very detailed documentation on the different tools offered:
    [https://networkx.org/documentation/stable/reference/](https://networkx.org/documentation/stable/reference/).'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 该网站确实有非常详细的文档，介绍了不同工具的使用：[https://networkx.org/documentation/stable/reference/](https://networkx.org/documentation/stable/reference/)。
- en: 'My favorite part about their online resources is that they point to academic
    papers that were written about the functions that have been implemented. For instance,
    if you visit the page in the **Link Prediction** section about **Preferential
    Attachment**, you will see this block:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢他们在线资源的一部分是，他们会指向关于已实现功能的学术论文。例如，如果你访问**链接预测**部分中的**优先附加**页面，你会看到这个块：
- en: '![Figure 3.8 – NetworkX reference](img/B17105_03_008.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.8 – NetworkX参考](img/B17105_03_008.jpg)'
- en: Figure 3.8 – NetworkX reference
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – NetworkX参考
- en: On several occasions, I’ve enjoyed digging into the writing that has gone into
    the development of several algorithms. It is nice to know the background, and
    algorithms absolutely should not be used blindly. If you’re going to use a tool,
    learn how it works, and where it doesn’t work.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在多次场合中，我很喜欢深入研究开发几个算法背后的编写工作。了解背景是很有意义的，算法绝对不应该被盲目使用。如果你要使用一个工具，了解它的工作原理，以及它在哪些方面可能不起作用。
- en: scikit-network
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: scikit-network
- en: '`NetworkX` visualizations are slow, to the point that I will not teach them.
    They take a long time to render, even on a small network, and their appearance
    is bland and basic. `scikit-network` visualizations load very fast, on the other
    hand, as they are rendered SVGs. The visualizations load at a reasonable speed,
    even if you have hundreds or thousands of nodes.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`NetworkX`的可视化速度很慢，以至于我不会教它们。即使在小型网络上，它们的渲染也需要很长时间，而且其外观单调且基础。另一方面，`scikit-network`的可视化加载非常快速，因为它们是以SVG格式渲染的。即使你有成百上千个节点，加载速度也很合理。'
- en: However, the notion that this is a package for the analysis of large graphs
    is not accurate at all. This is visualization software, at its core, even if it
    is capable of doing a bit more than that. It seems they have added some additional
    capabilities (such as **Graph Neural Networks** (**GNNs**)), but most documentation
    pages highlight visualization. Do take a look at their offerings on embeddings
    and community detection, though. It seems that they are working toward doing more
    than network visualization and that the library is evolving.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，将其视为一个用于分析大规模图形的包并不准确。从本质上讲，这是一款可视化软件，尽管它的功能稍微超出了这个范围。看起来他们已经加入了一些额外的功能（例如**图神经网络**（**GNNs**）），但大多数文档页面还是侧重于可视化。不过，还是可以看看他们在嵌入和社区检测方面的工作。似乎他们正在朝着超越网络可视化的方向发展，这个库也在不断演化。
- en: Setup
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'To install `scikit-network`, please follow the official guide: [https://scikit-network.readthedocs.io/en/latest/first_steps.html](https://scikit-network.readthedocs.io/en/latest/first_steps.html).'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`scikit-network`，请按照官方指南操作：[https://scikit-network.readthedocs.io/en/latest/first_steps.html](https://scikit-network.readthedocs.io/en/latest/first_steps.html)。
- en: Starter functionality
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动功能
- en: In this book, we will only use `scikit-network` for network visualization, so
    if you’d like to get started with it, please take a look at some of their tutorials,
    such as [https://scikit-network.readthedocs.io/en/latest/tutorials/visualization/graphs.html](https://scikit-network.readthedocs.io/en/latest/tutorials/visualization/graphs.html).
    There are several tutorials you can use to learn more about the library.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将仅使用`scikit-network`进行网络可视化，因此如果你想开始使用它，请查看他们的一些教程，例如[https://scikit-network.readthedocs.io/en/latest/tutorials/visualization/graphs.html](https://scikit-network.readthedocs.io/en/latest/tutorials/visualization/graphs.html)。有多个教程可以帮助你深入了解这个库。
- en: Documentation
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: 'The `scikit-network` documentation is pretty good and pretty well-organized.
    The simplicity of the documentation shows that it’s really not a very deep Python
    library. If you want to learn more, start here: [https://scikit-network.readthedocs.io/en/latest/](https://scikit-network.readthedocs.io/en/latest/).'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '`scikit-network`的文档非常好且组织得很有条理。文档的简洁性表明它实际上并不是一个非常深奥的Python库。如果你想深入了解，先从这里开始：[https://scikit-network.readthedocs.io/en/latest/](https://scikit-network.readthedocs.io/en/latest/)。'
- en: 'You might be wondering why I only use this for visualization when it also offers
    capabilities for some ML, community detection, and other things. The reason is
    this: `NetworkX` and `KarateClub` also offer similar capabilities, and they do
    them better. For instance, `KarateClub` offers `NetworkX` provides the `scikit-network`
    provides functionality for calculating `NetworkX` does it better and more cleanly.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，既然`scikit-network`还提供一些机器学习、社区检测和其他功能，为什么我只用它来做可视化呢？原因是这样的：`NetworkX`和`KarateClub`也提供类似的功能，而且它们做得更好。例如，`KarateClub`提供的功能更强，而`NetworkX`提供的`scikit-network`功能也能很好地实现，而且更干净。
- en: That is why I only show how it can be used for visualization. The other capabilities
    haven’t shown to be better than those provided by `NetworkX` and `KarateClub`.
    It’s nothing personal. We all have our favorite tools.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我只展示它在可视化方面的使用。其他功能并未表现得比`NetworkX`和`KarateClub`提供的更好。这并非针对个人。每个人都有自己喜欢的工具。
- en: In the next section, we’ll talk about the libraries we can use for ML.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将讨论可以用于机器学习的库。
- en: ML
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习
- en: There is also a set of Python libraries for doing machine learning. Knowing
    the Python libraries and algorithms is not enough. Please learn as much as you
    can about the models and techniques you will use. There is always more to learn.
    Here are some of the libraries you will most likely frequently use.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Python 还有一组用于机器学习的库。了解 Python 库和算法是不够的。请尽可能多地了解你将使用的模型和技术。总是有更多东西可以学习。以下是你可能经常使用的一些库。
- en: scikit-learn
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: scikit-learn
- en: '`TensorFlow` and `PyTorch`, but we will not use them directly in this book.
    Just be aware that they are out there, and that you should learn about them as
    your ML skills improve.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`TensorFlow` 和 `PyTorch`，但我们在本书中不会直接使用它们。只需知道它们的存在，并且随着你的机器学习技能的提高，你应该了解它们。'
- en: If you are learning about or doing ML in Python, you will very quickly run into
    `scikit-learn`. `scikit-learn` provides a treasure trove of ML models, data loaders,
    preprocessors, transformations, and much more. There are many books and blog posts
    about `scikit-learn`, including several that have been published by Packt. If
    you are interested in learning ML, you will be doing a lot of reading, and `scikit-learn`
    is an excellent place to start.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在学习或使用 Python 进行机器学习，你很快就会接触到`scikit-learn`。`scikit-learn` 提供了大量的机器学习模型、数据加载器、预处理器、转换器等等。有很多关于`scikit-learn`的书籍和博客文章，包括一些由
    Packt 出版的。如果你有兴趣学习机器学习，你会阅读很多内容，而`scikit-learn`是一个很好的起点。
- en: Setup
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'If you are working with notebooks, then `scikit-learn` is probably already
    installed. However, if you need to install it, please follow the official guide:
    [https://scikit-learn.org/stable/install.html](https://scikit-learn.org/stable/install.html).'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在使用笔记本，那么`scikit-learn`可能已经安装好了。但是，如果你需要安装它，请按照官方指南操作：[https://scikit-learn.org/stable/install.html](https://scikit-learn.org/stable/install.html)。
- en: Starter functionality
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 初学者功能
- en: 'ML is complicated, and it takes several steps to build and use a model. For
    now, just make sure that `scikit-learn` is installed and that you can see which
    version you are running:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习很复杂，构建和使用模型需要多个步骤。现在，只需确保安装了`scikit-learn`并且能够查看运行的版本：
- en: '[PRE15]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: For me, this shows that I am running version `1.0.2`. For the exercises in this
    book, we do not need to have an exact match, but for reproducibility in the real
    world, all versions of libraries should match when deploying anything.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，这表明我正在运行版本`1.0.2`。对于本书的练习，我们不需要精确匹配，但是在实际部署中，所有库的版本应保持一致以确保可复现性。
- en: Documentation
  id: totrans-237
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: There are more resources for `scikit-learn` than there are for probably every
    other Python library I’ve mentioned in this chapter. ML is a trendy topic, and
    there is a demand for books, blog posts, videos, and other instruction, so there
    is no shortage of resources to learn from. However, the `scikit-learn` documentation
    is the place to start.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 关于`scikit-learn`的资源比我在本章提到的其他每个 Python 库的资源都要多。机器学习是一个热门话题，对书籍、博客文章、视频和其他教程的需求很大，因此学习资源丰富。然而，`scikit-learn`文档是开始学习的地方。
- en: 'The `scikit-learn` starter guide can be found here: [https://scikit-learn.org/stable/getting_started.html](https://scikit-learn.org/stable/getting_started.html).'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`scikit-learn`入门指南可以在这里找到：[https://scikit-learn.org/stable/getting_started.html](https://scikit-learn.org/stable/getting_started.html)。'
- en: The full user guide can be found at [https://scikit-learn.org/stable/user_guide.html](https://scikit-learn.org/stable/user_guide.html),
    and there is also an API reference at [https://scikit-learn.org/stable/modules/classes.html](https://scikit-learn.org/stable/modules/classes.html).
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的用户指南可以在[https://scikit-learn.org/stable/user_guide.html](https://scikit-learn.org/stable/user_guide.html)找到，并且还有一个
    API 参考文档在[https://scikit-learn.org/stable/modules/classes.html](https://scikit-learn.org/stable/modules/classes.html)。
- en: We will be doing a bit of supervised and unsupervised machine learning in this
    book, but we won’t go very far into the topic. There will be much more to learn
    if you are interested. This book will only scratch the surface of ML and hopefully
    will kick off an obsession.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将进行一些监督和无监督的机器学习，但不会深入讨论。如果你有兴趣，还有很多东西可以学习。本书只是浅尝辄止地介绍了机器学习，希望能引发你的兴趣。
- en: Karate Club
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 空手道俱乐部
- en: '`NetworkX`. In other words, `Karate Club` bridges the gap between machine learning
    and graph analysis. It provides several useful unsupervised learning models that
    can be used for community detection as well as creating node embeddings from graphs
    that may be used in downstream supervised learning tasks. This is often referred
    to as graph machine learning, and there is a lot of excitement about using graphs
    and machine learning together, for instance, to predict new connections (who should
    be friends, who would like certain music or products, and so on).'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`NetworkX`。换句话说，`Karate Club`弥合了机器学习和图形分析之间的差距。它提供了几种有用的无监督学习模型，可用于社区检测以及从图形中创建节点嵌入，这些嵌入可以用于下游的有监督学习任务。这通常被称为图形机器学习，且目前人们对将图形和机器学习结合使用非常感兴趣，例如预测新连接（谁应该成为朋友，谁会喜欢某种音乐或产品等）。'
- en: What’s the difference between this and `scikit-learn`? Well, `scikit-learn`
    can be used with any numeric data. `Karate Club` specializes in transforming graphs
    into numeric data through unsupervised machine learning. `Karate Club` outputs
    can be `scikit-learn` inputs, but rarely the other way around.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这和`scikit-learn`有什么区别？`scikit-learn`可以用于任何数字数据，而`Karate Club`专注于通过无监督机器学习将图形转换为数字数据。`Karate
    Club`的输出可以作为`scikit-learn`的输入，但反过来却很少。
- en: For `Karate Club` to be useful, you need graphs (`NetworkX`) and you need ML
    (`scikit-learn`, `TensorFlow`, `PyTorch`, and so on). `Karate Club` is not very
    useful by itself.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要使`Karate Club`有用，你需要图形（`NetworkX`）和机器学习（`scikit-learn`、`TensorFlow`、`PyTorch`等）。`Karate
    Club`本身的用途有限。
- en: Karate Club is not yet supported by higher versions of Python, such as 3.10.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`Karate Club`尚不支持更高版本的Python，如3.10。'
- en: Setup
  id: totrans-247
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'To install `Karate Club`, follow the official guide: [https://karateclub.readthedocs.io/en/latest/notes/installation.html](https://karateclub.readthedocs.io/en/latest/notes/installation.html).'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`Karate Club`，请按照官方指南：[https://karateclub.readthedocs.io/en/latest/notes/installation.html](https://karateclub.readthedocs.io/en/latest/notes/installation.html)。
- en: Starter functionality
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入门功能
- en: 'There’s no starter functionality worth showcasing. ML is complicated and takes
    several steps to be of use. For now, let’s just verify that the library is installed
    and that we can see the version number:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 没有值得展示的入门功能。机器学习很复杂，需要几个步骤才能真正有用。现在，我们只需要验证库是否已安装，并且可以看到版本号：
- en: '[PRE16]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: I can see that I am running version `1.3.0`.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以看到我正在运行的版本是`1.3.0`。
- en: Documentation
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档
- en: '`Karate Club` provides an introductory guide at [https://karateclub.readthedocs.io/en/latest/notes/introduction.html](https://karateclub.readthedocs.io/en/latest/notes/introduction.html).
    Here, you can start to see how the library may be used. You will also likely notice
    some references to other libraries, such as `scikit-learn`.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`Karate Club`提供了一个入门指南：[https://karateclub.readthedocs.io/en/latest/notes/introduction.html](https://karateclub.readthedocs.io/en/latest/notes/introduction.html)。在这里，你可以开始了解如何使用该库。你还可能会注意到一些对其他库的引用，如`scikit-learn`。'
- en: '`Karate Club` has exemplary documentation. You can find it at [https://karateclub.readthedocs.io/en/latest/modules/root.html](https://karateclub.readthedocs.io/en/latest/modules/root.html).
    The thing that I love the most is that they cite the journal articles that were
    written about the models. For instance, if you look at the documentation for any
    of the algorithms, you will often find mention of the paper that was published
    about the model.'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`Karate Club`拥有出色的文档。你可以在[https://karateclub.readthedocs.io/en/latest/modules/root.html](https://karateclub.readthedocs.io/en/latest/modules/root.html)找到它。我最喜欢的一点是，他们会引用关于这些模型的期刊文章。例如，如果你查看任何算法的文档，通常会找到提到关于该模型的论文。'
- en: '![Figure 3.9 – Karate club documentation reference](img/B17105_03_009.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.9 – 空手道俱乐部文档参考](img/B17105_03_009.jpg)'
- en: Figure 3.9 – Karate club documentation reference
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9 – 空手道俱乐部文档参考
- en: As I’ve looked through several of the `Karate Club` models for work in this
    book, I’ve had the opportunity to read many of these papers, and that has brought
    me many hours of enjoyment. I love this so much.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我查看了多个`Karate Club`模型，因此有机会阅读许多相关的论文，这也给了我很多小时的乐趣。我非常喜欢这个。
- en: 'And if you are working with `Karate Club` in code, you can also see mention
    of the paper in notebooks if you *Shift* + *Tab* into a function call:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在代码中使用`Karate Club`，你也可以在笔记本中看到提到这篇论文的内容，只需在函数调用时按下*Shift* + *Tab*：
- en: '![Figure 3.10 – Karate club code reference](img/B17105_03_010.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.10 – 空手道俱乐部代码参考](img/B17105_03_010.jpg)'
- en: Figure 3.10 – Karate club code reference
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10 – 空手道俱乐部代码参考
- en: Not only is this library exciting to use but it’s also educational to learn
    from.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库不仅使用起来令人兴奋，学习它也具有很高的教育价值。
- en: spaCy (revisited)
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: spaCy（再探）
- en: Yes, I’m mentioning `spaCy` again. Why? Because `spaCy` offers several language
    models, and in many different languages. This means that you can use the `spaCy`
    pre-trained machine learning models for your own purposes, for instance, for named-entity
    recognition. Their models have already been trained and can be directly imported
    for use. You will learn how to do so in this book, in the next few chapters.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我又提到`spaCy`了。为什么？因为`spaCy`提供了多个语言模型，而且涵盖了多种语言。这意味着你可以将`spaCy`预训练的机器学习模型用于自己的目的，例如用于命名实体识别。它们的模型已经过训练，可以直接导入并使用。在本书的接下来的几章中，你将学习如何做到这一点。
- en: Summary
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: There are other Python libraries that we will use in this book, but they will
    be explained in their relevant chapters. In this chapter, I wanted to describe
    the primary libraries we will use for our work. In order to get to the really
    experimental stuff that we cover in this book, a foundation needs to be in place.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中还会使用其他一些Python库，但它们将在相关章节中进行解释。在本章中，我想描述我们将用于工作的主要库。为了能够进入本书讨论的真正实验性内容，我们需要打下基础。
- en: For instance, you need to be able to read and analyze tabular (structured) data.
    You also need to be able to visualize data. With text, you need to be able to
    convert text into a format that is ready for analysis and use. For graphs, you
    need to be able to do the same. And finally, if you want to apply machine learning
    to networks or text, you should understand how to do that.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你需要能够读取和分析表格（结构化）数据。你还需要能够将数据可视化。对于文本，你需要能够将文本转换为适合分析和使用的格式。对于图表，你也需要具备相同的能力。最后，如果你想将机器学习应用于网络或文本，你应该理解如何做到这一点。
- en: That is why the sections have been broken down into data analysis and processing,
    data visualization, natural language processing, network analysis and visualization,
    and machine learning. I hope the structure helps.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么本节被分解为数据分析与处理、数据可视化、自然语言处理、网络分析与可视化以及机器学习。我希望这样的结构能有所帮助。
- en: With these libraries installed and briefly explained, we are now ready to get
    our hands dirty with network science, social network analysis, and NLP, all in
    Python.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装并简要解释了这些库之后，我们现在可以开始深入探索网络科学、社交网络分析和自然语言处理，所有这些都将在Python中进行。
- en: 'Part 2: Graph Construction and Cleanup'
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：图表构建与清理
- en: Network data does not always exist for research that is interesting to an analyst.
    The chapters in this part show how to pull text data from various online resources
    and convert text data into networks that can be analyzed. These chapters also
    walk through data wrangling steps for cleaning networks for use in analysis and
    downstream processes.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 网络数据并不总是存在于分析师感兴趣的研究中。本部分的章节展示了如何从各种在线资源中提取文本数据，并将其转换为可以分析的网络。这些章节还介绍了数据处理步骤，用于清理网络，以便进行分析和后续处理。
- en: 'This section includes the following chapters:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包括以下章节：
- en: '[*Chapter 4*](B17105_04.xhtml#_idTextAnchor158)*, NLP and Network Synergy*'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第四章*](B17105_04.xhtml#_idTextAnchor158)*，自然语言处理与网络协同作用*'
- en: '[*Chapter 5*](B17105_05.xhtml#_idTextAnchor179)*, Even Easier Scraping*'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第五章*](B17105_05.xhtml#_idTextAnchor179)*，更简单的网页抓取*'
- en: '[*Chapter 6*](B17105_06.xhtml#_idTextAnchor228)*, Graph Construction and Cleaning*'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第六章*](B17105_06.xhtml#_idTextAnchor228)*，图表构建与清理*'
