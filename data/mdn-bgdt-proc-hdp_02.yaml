- en: Hadoop Life Cycle Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hadoop生命周期管理
- en: 'In this chapter, we will understand the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解以下主题：
- en: Data wrangling
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据清洗
- en: Data masking
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据掩码
- en: Data security
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据安全
- en: Data wrangling
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据清洗
- en: If you have some experience working on data of some sort, you will recollect
    that most of the time data needs to be preprocessed so that we can further use
    it as part of a bigger analysis. This process is called **data wrangling**.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一些处理某种类型数据的经验，你将记得大多数时候数据需要预处理，这样我们才能将其作为更大分析的一部分进一步使用。这个过程被称为**数据清洗**。
- en: 'Let''s see what the typical flow in this process looks like:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个过程中的典型流程是什么样的：
- en: Data acquisition
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据获取
- en: Data structure analysis
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据结构分析
- en: Information extraction
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信息提取
- en: Unwanted data removal
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无用数据移除
- en: Data transformation
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据转换
- en: Data standardization
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据标准化
- en: Let's try to understand these in detail.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试详细了解这些内容。
- en: Data acquisition
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据获取
- en: Even though not a part of data wrangling, this phase deals with the process
    of acquiring data from somewhere. Typically, all data is generated and stored
    in a central location or is available in files located on some shared storage.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这不是数据清洗的一部分，但这个阶段涉及从某处获取数据的过程。通常，所有数据都是在中央位置生成和存储的，或者位于某些共享存储上的文件中。
- en: Having an understanding of this step helps us to build an interface or use existing
    libraries to pull data from the acquired data source location.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 理解这一步有助于我们构建接口或使用现有的库从获取的数据源位置拉取数据。
- en: Data structure analysis
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据结构分析
- en: 'Once data is acquired, we have to understand the structure of the data. Remember
    that the data we are getting can be in any of the following forms:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 数据获取后，我们必须理解数据的结构。记住，我们得到的数据可以是以下任何一种形式：
- en: 'Text data:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本数据：
- en: Structured data
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结构化数据
- en: Unstructured data
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非结构化数据
- en: Binary data
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二进制数据
- en: This is where we need certain tools to help us understand the structure of the
    data.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们需要某些工具来帮助我们理解数据结构的地方。
- en: Once we have a thorough understanding of the data we are dealing with, the next
    task is to understand the bits and pieces we need to extract from this structure.
    Sometimes, depending on the complexity and size of the data we are dealing with,
    it might take time for us to really find and extract the information we are looking
    for.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对所处理的数据有了彻底的了解，下一个任务是理解我们需要从这个结构中提取的各个部分。有时，根据我们处理的数据的复杂性和大小，我们可能需要时间来真正找到并提取我们所需的信息。
- en: Once we know what we are looking for and also have a solid understanding of
    the structure of the data, it becomes easier for us to come up with simple algorithms
    to extract the required information from the input data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们知道了我们要找什么，并且对数据的结构有了坚实的理解，我们就能更容易地提出简单的算法来从输入数据中提取所需的信息。
- en: Information extraction
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信息提取
- en: 'In this phase, we are interested in extracting the necessary details from the
    input data. In the previous phase, we already identified the necessary pieces
    that are of interest to us. Here is where we can adopt the following techniques
    for information extraction:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们感兴趣的是从输入数据中提取必要的细节。在前一个阶段，我们已经确定了对我们感兴趣的有必要部分。这里我们可以采用以下技术进行信息提取：
- en: Identify and locate where the text is present
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别并定位文本所在的位置
- en: 'Analyze and come up with the best method of information extraction:'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析并找出最佳的信息提取方法：
- en: Tokenize and extract information
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分词并提取信息
- en: Go to offset and extract information
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前往偏移量并提取信息
- en: Regular expression-based information extraction
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于正则表达式的信息提取
- en: Complex algorithm-based information extraction
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于复杂算法的信息提取
- en: Depending on the complexity of the data, we might have to adopt one or more
    of the aforementioned techniques to extract the information from the target data.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 根据数据的复杂性，我们可能需要采用上述一种或多种技术来从目标数据中提取信息。
- en: Unwanted data removal
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无用数据移除
- en: This phase can occur before the information extraction step or after the information
    extraction step. It depends on which one is easier (shortening the text or the
    extraction of information). This is a design choice the analyst can make.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这个阶段可以在信息提取步骤之前或之后发生。这取决于哪个更容易（缩短文本或提取信息）。这是分析师可以做出的设计选择。
- en: In this phase, we are removing unwanted data from the information or input data
    so that the data is further distilled and can easily be consumed for our business
    needs.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们正在从信息或输入数据中删除不需要的数据，以便数据进一步提炼，并可以轻松地满足我们的业务需求。
- en: Data transformation
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据转换
- en: This is also a very important phase, where we enforce the standards defined
    by the enterprise to define the final data output. For example, an organization
    can suggest that all the country codes should be in ISO 3166-1 alpha-2 format.
    In order to adhere to this standard, we might have to transform the input data,
    which can contain countries with their full names. So a mapping and transformation
    has to be done.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是一个非常重要的阶段，我们强制执行企业定义的标准来定义最终的数据输出。例如，一个组织可以建议所有国家代码应采用ISO 3166-1 alpha-2格式。为了遵守这一标准，我们可能需要对包含国家全名的输入数据进行转换。因此，需要进行映射和转换。
- en: Many other transformations can be performed on the input data to make the final
    data consumable by anyone in the organization in a well-defined form and as per
    the organizations standards.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 可以对输入数据进行许多其他转换，以便以定义良好的形式和符合组织标准的方式，使组织中的任何人都能够消费最终数据。
- en: This step also gives some importance to having an enterprise level standard
    to improve collaboration.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤还重视拥有企业级标准以提高协作。
- en: Data standardization
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据标准化
- en: Once the information extraction is complete and any necessary cleanup is done,
    we need to decide how we are going to save the outcome of this process. Typically,
    we can use a simple **CSV** (**comma separated value**) format for this data.
    If we are dealing with a complicated output format, we can choose **XML** (**Extensible
    Markup Language**) or **JSON** (**javascript object notation**) formats.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦信息提取完成并且进行了任何必要的清理，我们需要决定如何保存此过程的结果。通常，我们可以使用简单的**CSV**（**逗号分隔值**）格式来保存这些数据。如果我们处理的是复杂输出格式，我们可以选择**XML**（**可扩展标记语言**）或**JSON**（**JavaScript对象表示法**）格式。
- en: These formats are very much standard and almost all the technologies that we
    have today understand these very easily. But to keep things simple at first, it's
    good to start with CSV format.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这些格式非常标准化，我们今天拥有的几乎所有技术都能非常容易地理解这些格式。但为了使事情简单起见，最好从CSV格式开始。
- en: Data masking
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据掩码
- en: Businesses that deal with customer data have to make sure that the **PII** (**personally
    identifiable information**) of these customers is not moving freely around the
    entire data pipeline. This criterion is applicable not only to customer data but
    also to any other type of data that is considered classified, as per standards
    such as GDPR, SOX, and so on. In order to make sure that we protect the privacy
    of customers, employees, contractors, and vendors, we need to take the necessary
    precautions to ensure that when the data goes through several pipelines, users
    of the data see only anonymized data. The level of anonymization we do depends
    upon the standards the company adheres to and also the prevailing country standards.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 处理客户数据的业务必须确保这些客户的**PII**（**个人可识别信息**）在整个数据管道中不会自由流动。这一标准不仅适用于客户数据，也适用于任何其他被视为机密的数据，如GDPR、SOX等标准。为了确保我们保护客户、员工、承包商和供应商的隐私，我们需要采取必要的预防措施，确保当数据通过多个管道时，数据使用者只能看到匿名数据。我们进行的匿名化程度取决于公司遵守的标准以及所在国家的现行标准。
- en: So, data masking can be called the process of hiding/transforming portions of
    original data with other data without losing the meaning or context.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，数据掩码可以称为隐藏/转换原始数据部分为其他数据的过程，同时不丢失意义或上下文。
- en: 'In this section, we will understand various techniques that are available to
    accomplish this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解可用于完成此任务的各种技术：
- en: 'Substitution:'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换：
- en: Static
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态
- en: 'Dynamic:'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态：
- en: Encryption
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密
- en: Hashing
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希
- en: Hiding
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏
- en: Erasing
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除
- en: Truncation
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 截断
- en: Variance
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方差
- en: Shuffling
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 洗牌
- en: Substitution
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替换
- en: 'Substitution is the process of replacing portions of data with computed data.
    It can be mathematically be defined as:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 替换是将数据部分替换为计算数据的过程。它可以数学上定义为：
- en: '![](img/c470b3b9-8183-41c9-b435-60a02375f6f7.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c470b3b9-8183-41c9-b435-60a02375f6f7.png)'
- en: Where *x* is the source and *y* is the output from this function.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *x* 是源，*y* 是该函数的输出。
- en: In order to choose the correct substitution mechanism, we need to understand
    how this data is going to be used, the target audience, and the data flow environment
    as well. Let's look at the various available substitution mechanisms.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了选择正确的替换机制，我们需要了解这些数据将如何被使用，目标受众以及数据流环境。让我们看看各种可用的替换机制。
- en: Static
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 静态
- en: 'In this method, we have a Lookup table; it consists of all possible substitutions
    for a given set of inputs. This Lookup table can be visualized like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方法中，我们有一个查找表；它包含给定输入集的所有可能的替换。此查找表可以可视化如下：
- en: '| **Source Text (y)** | **Substituted Text (y)** |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| **源文本 (y)** | **替换文本 (y)** |'
- en: '| Steve Jobs | AAPL-1 |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 史蒂夫·乔布斯 | AAPL-1 |'
- en: '| Cat | 123456789 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 猫 | 123456789 |'
- en: '| Tennis | Cricket |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 网球 | 板球 |'
- en: This table illustrates how a Lookup table can be constructed for substituting
    source text with a different text. This method scales well when there is a predefined
    quantity of substitutions available.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 此表说明了如何构建查找表以替换源文本为不同的文本。当有预定义数量的替换可用时，此方法可扩展性良好。
- en: 'Another example of this Lookup table-based substitution is when we follow a
    naming standard for country codes, for example, ISO-8661:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这种基于查找表替换的另一个例子是我们遵循国家代码的命名标准，例如，ISO-8661：
- en: '| **Source Text (x)** | **Substituted Text (y)** |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| **源文本 (x)** | **替换文本 (y)** |'
- en: '| Egypt | EG |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 埃及 | EG |'
- en: '| India | IN |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 印度 | IN |'
- en: '| Saint Vincent and Grenadines | VN |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 圣文森特和格林纳丁斯 | VN |'
- en: '| United Kingdom | GB |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 英国 | GB |'
- en: '| United States of America | US |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 美利坚合众国 | US |'
- en: Dynamic
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态
- en: These substitution techniques are useful when there are a large number of possibilities
    and we want to change the data using some algorithms. These methods can be classified
    into two types.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当有大量可能性并且我们想使用某些算法更改数据时，这些替换技术是有用的。这些方法可以分为两种类型。
- en: Encryption
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密
- en: 'This is the process of changing a given text to some other form by using some
    form of secret. These are mathematically defined functions:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过使用某种形式的密钥将给定文本转换为其他形式的过程。这些是数学上定义的函数：
- en: '![](img/9891878e-37f3-416b-b943-034b45a84acb.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9891878e-37f3-416b-b943-034b45a84acb.png)'
- en: 'As you can see, these functions take an input and a secret and generate data
    that can be decrypted using the same secret and the output:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这些函数接受输入和密钥，并生成可以使用相同密钥和输出解密的数据：
- en: '![](img/38b93fdb-fc83-4469-9583-b27b217d37b4.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '`VSNN4EtlgZi3/`'
- en: If we observe carefully, it is the secret that is playing an important role
    here. In cryptography, there are two types of algorithms that are available based
    on this secret. The usage of these depends on the situation and the secret transportation
    challenges.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们仔细观察，这里起着重要作用的是密钥。在密码学中，根据这个密钥有两种类型的算法可用。这些算法的使用取决于具体情况和密钥传输的挑战。
- en: 'Without going too deep into cryptography, let''s try to understand what these
    methods are:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 不深入探讨密码学，让我们尝试理解这些方法：
- en: Symmetric key encryption
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对称密钥加密
- en: Asymmetric key encryption
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非对称密钥加密
- en: The basic difference between the two is that in the first one, we use the same
    secret for both encryption and decryption. But in the latter, we use two different
    keys for encryption and decryption.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法的基本区别在于，在前一种中，我们使用相同的密钥进行加密和解密。但在后一种中，我们使用两个不同的密钥进行加密和解密。
- en: 'Let''s take a look at a few examples of symmetric key encryption in action:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看几个对称密钥加密的实际例子：
- en: '| **Algorithm** | **Input Data** | **Output Data** | **Method** |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| **算法** | **输入数据** | **输出数据** | **方法** |'
- en: '| ROT13 | `hello` | `uryyb` | Encryption |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| ROT13 | `hello` | `uryyb` | 加密 |'
- en: '|  | `uryyb` | `hello` | Decryption |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '|  | `uryyb` | `hello` | 解密 |'
- en: '| DES | `hello` | `yOYffF4rl8lxCQ4HS2fpMg==` | Encryption (secret is `hello`)
    |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| DES | `hello` | `yOYffF4rl8lxCQ4HS2fpMg==` | 加密（密钥是 `hello`）|'
- en: '|  | `yOYffF4rl8lxCQ4HS2fpMg==` | `hello` | Decryption (secret is `hello`)
    |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '|  | `yOYffF4rl8lxCQ4HS2fpMg==` | `hello` | 解密（密钥是 `hello`）|'
- en: '| RIJNDAEL-256 | `hello` | `v8QbYPszQX/TFeYKbSfPL/` `rNJDywBIQKtxzOzWhBm16/`'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '| RIJNDAEL-256 | `hello` | `v8QbYPszQX/TFeYKbSfPL/` `rNJDywBIQKtxzOzWhBm16/`'
- en: '`VSNN4EtlgZi3/`'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/38b93fdb-fc83-4469-9583-b27b217d37b4.png)'
- en: '`iPqJZpCiXXzDu0sKmKSl6IxbBKhYw==` | Encryption (secret is `hello`) |'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`iPqJZpCiXXzDu0sKmKSl6IxbBKhYw==` | 加密（密钥是 `hello`）|'
- en: '|  | `v8QbYPszQX/TFeYKbSfPL/` `rNJDywBIQKtxzOzWhBm16/`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | `v8QbYPszQX/TFeYKbSfPL/` `rNJDywBIQKtxzOzWhBm16/`'
- en: '`VSNN4EtlgZi3/`'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`VSNN4EtlgZi3/`'
- en: '`iPqJZpCiXXzDu0sKmKSl6IxbBKhYw==` | `hello` | Encryption (secret is `hello`)
    |'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`iPqJZpCiXXzDu0sKmKSl6IxbBKhYw==` | `hello` | 加密（密钥是 `hello`）|'
- en: As you can see, the data that is generated varies in both complexity and length
    depending on the encryption algorithm we use. It also depends on the secret key
    that is used for encryption.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，生成的数据在复杂性和长度上因我们使用的加密算法而异。它还取决于用于加密的秘密密钥。
- en: Encryption poses a challenge of more computational requirements and storage
    space. We need to plan our system accordingly if we want to use encryption as
    one of the methods in the masking process.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 加密提出了更多计算要求和存储空间的问题。如果我们想将加密作为屏蔽过程中的方法之一，我们需要相应地规划我们的系统。
- en: Hashing
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈希
- en: 'This is also a cryptography-based technique where the original data is converted
    to an irreversible form. Let''s see the mathematical form for this:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是一种基于密码学的技术，其中原始数据被转换为不可逆的形式。让我们看看这个数学形式：
- en: '![](img/70ba8a6e-dc2c-42bd-b83f-28678beefdfb.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/70ba8a6e-dc2c-42bd-b83f-28678beefdfb.png)'
- en: Here, unlike in the case of encryption, we cannot use the output to discover
    what the input is.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，与加密的情况不同，我们不能使用输出发现输入是什么。
- en: 'Let''s see a few examples to understand this better:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一些例子来更好地理解这一点：
- en: '| **Input** | **Output** | **Method** |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| **输入** | **输出** | **方法** |'
- en: '| `10-point` | `7d862a9dc7b743737e39dd0ea3522e9f` | MD5 |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| `10-point` | `7d862a9dc7b743737e39dd0ea3522e9f` | MD5 |'
- en: '| `10th` | `8d9407b7f819b7f25b9cfab0fe20d5b3` | MD5 |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| `10th` | `8d9407b7f819b7f25b9cfab0fe20d5b3` | MD5 |'
- en: '| `10-point` | `c10154e1bdb6ea88e5c424ee63185d2c1541efe1bc3d4656a4c3c99122ba9256`
    | SHA256 |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| `10-point` | `c10154e1bdb6ea88e5c424ee63185d2c1541efe1bc3d4656a4c3c99122ba9256`
    | SHA256 |'
- en: '| `10th` | `5b6e8e1fcd052d6a73f3f0f99ced4bd54b5b22fd4f13892eaa3013ca65f4e2b5`
    | SHA256 |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| `10th` | `5b6e8e1fcd052d6a73f3f0f99ced4bd54b5b22fd4f13892eaa3013ca65f4e2b5`
    | SHA256 |'
- en: We can see that depending upon the encryption algorithm we have used, the output
    size varies. Another thing to note is that a given hash function produces the
    same output size irrespective of the input size.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，根据我们使用的加密算法，输出大小会有所不同。另一个需要注意的事情是，给定的哈希函数无论输入大小如何，都会产生相同大小的输出。
- en: Hiding
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐藏
- en: In this approach, the data is considered too sensitive even to reveal it to
    the original owners. So, to protect the confidentiality of the data, certain portions
    of the text are masked with a predefined character, say X (or anything), so that
    only the person with complete knowledge about those pieces can extract the necessary
    information.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种方法中，数据被认为甚至对原始所有者来说都过于敏感，以至于不能透露。因此，为了保护数据的机密性，某些文本部分被预定义的字符（例如X或任何其他字符）屏蔽，这样只有了解这些片段的人才能提取必要的信息。
- en: '**Examples**: Credit card information is considered highly confidential and
    should never be revealed to anyone. If you have some experience of purchasing
    online on websites such as Amazon and so on, you would have seen that your full
    credit card information is not shown; only the last four digits are shown. Since
    I am the genuine owner of such a credit card, I can easily identify it and continue
    with the transaction.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例**：信用卡信息被认为是高度机密的，绝不应该透露给任何人。如果您在亚马逊等网站上购买过在线商品，您就会看到您的完整信用卡信息不会显示；只显示最后四位数字。由于我是这种信用卡的真正持卡人，我可以轻松地识别它并继续交易。'
- en: Similarly, when there is a need for portions of data to be seen by analysts,
    it's important to mask significant pieces of it so that the end users will not
    get the complete picture but will use this data at the same time for any analysis
    that they are doing.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，当需要让数据的一部分被分析师看到时，屏蔽重要的数据部分很重要，这样最终用户就不会看到完整的画面，但仍然可以同时使用这些数据来进行他们正在进行的任何分析。
- en: 'Let''s see a few examples to understand this better:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一些例子来更好地理解这一点：
- en: '| **Data type** | **Input** | **Output** | **Network** |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| **数据类型** | **输入** | **输出** | **网络** |'
- en: '| Creditcard | 4485 **4769 3682** 9843 | 4485 **XXXX XXXX** 9843 | Visa |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| 信用卡 | 4485 **4769 3682** 9843 | 4485 **XXXX XXXX** 9843 | 维萨卡 |'
- en: '| Creditcard | 5402 **1324 5087** 3314 | 5402 **XXXX XXXX** 3314 | Mastercard
    |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| 信用卡 | 5402 **1324 5087** 3314 | 5402 **XXXX XXXX** 3314 | 万事达卡 |'
- en: '| Creditcard | 3772 **951960** 72673 | 3772 **XXXXXX** 72673 | American Express
    |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| 信用卡 | 3772 **951960** 72673 | 3772 **XXXXXX** 72673 | 美国运通卡 |'
- en: In the preceding examples, these numbers follow a predefined algorithm and size.
    So a simple technique of masking digits at fixed locations can work better.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，这些数字遵循一个预定义的算法和大小。因此，在固定位置屏蔽数字的简单技术可以更有效。
- en: 'Let''s take up another example of hiding out portions of email addresses which
    vary in both size and complexity. In this case we have to follow different techniques
    to hide the characters to not reveal complete information:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再举一个隐藏电子邮件地址部分，这些部分在大小和复杂性上都有所不同的例子。在这种情况下，我们必须遵循不同的技术来隐藏字符，以防止泄露完整信息：
- en: '| **Data type** | **Input** | **Output** | **Method** |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| **数据类型** | **输入** | **输出** | **方法** |'
- en: '| Email | `hello@world.com` | `h.l.o@w.r.d.com` | Even Hide |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| 电子邮件 | `hello@world.com` | `h.l.o@w.r.d.com` | 偶数隐藏 |'
- en: '|  | `simple@book.com` | `.i.p.e@.o.k.c.m` | Odd Hide |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '|  | `simple@book.com` | `.i.p.e@.o.k.c.m` | 奇数隐藏 |'
- en: '|  | `something@something.com` | `s...th.ng@..me...com` | Complex Hide |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '|  | `something@something.com` | `s...th.ng@..me...com` | 复杂隐藏 |'
- en: 'The techniques can be as simple as:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这些技术可以非常简单：
- en: '**Even Hide**: In this technique, we hide the every character that is in the
    even position'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**偶数隐藏**：在这个技术中，我们隐藏所有位于偶数位置的字符'
- en: '**Odd Hide**: We hide every odd character in the input data'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**奇数隐藏**：我们在输入数据中隐藏每个奇数字符'
- en: '**Complex Hide**: In this technique, we understand the data we are dealing
    with using NLP and then try to apply an algorithm that doesn''t reveal too much
    information that would allow any intelligent person to decode'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复杂隐藏**：在这个技术中，我们使用自然语言处理（NLP）来理解我们正在处理的数据，然后尝试应用一个不会泄露太多信息，从而允许任何有智能的人解码的算法'
- en: Erasing
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除
- en: As the name suggests, this causes data loss when applied to the input data.
    Depending on the significance of the data we are dealing with, we need to apply
    this technique. Typical examples of this technique is to set a `NULL` value for
    all the records in a column. Since this null data cannot be used to infer anything
    that is meaningful, this technique helps in making sure that confidential data
    is not sent to the other phases of data processing.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，当应用于输入数据时，这会导致数据丢失。根据我们处理的数据的重要性，我们需要应用这种技术。这种技术的典型例子是为列中的所有记录设置 `NULL`
    值。由于这些空数据无法用来推断任何有意义的信息，这种技术有助于确保机密数据不会被发送到数据处理的其他阶段。
- en: 'Let''s take few examples of erasing:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看几个删除的例子：
- en: '| **Input Data** | **Output Data** | **What''s erased** |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| **输入数据** | **输出数据** | **被删除的内容** |'
- en: '| NULL earns 1000 INR per month | Ravi earns NULL per month | Salary and name
    |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| NULL 每月赚取 1000 INR | 拉维每月赚取 NULL | 薪水和姓名 |'
- en: '| NULL mobile number is 0123456789 | Ravi''s mobile number is NULL | Mobile
    number and name |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| NULL 手机号码是 0123456789 | 拉维的手机号码是 NULL | 手机号码和姓名 |'
- en: 'From the examples, you might be wondering: why do we nullify these values?
    This technique is useful when we are not really interested in the PII but interested
    in a summary of how many salary records or mobile number records are there in
    our database/input.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 从例子中，你可能想知道：为什么我们要使这些值无效？当我们对 PII 不感兴趣，而只对数据库/输入中薪资记录或手机号码记录的总结感兴趣时，这种技术很有用。
- en: This concept can be extended to other use cases as well.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这个概念也可以扩展到其他用例。
- en: Truncation
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 截断
- en: Another variant of erasing is truncation, where we make all the input data a
    uniform size. This is useful when we are pretty sure that information loss is
    accepted in the further processing of the pipelines.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种删除的变体是截断，其中我们将所有输入数据调整为统一的大小。当我们相当确信在管道的进一步处理中可以接受信息损失时，这很有用。
- en: 'This can also be an intelligent truncation where we are aware of the data we
    are dealing with. Let''s see this example of email addresses:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以是一种智能截断，其中我们了解我们正在处理的数据。让我们看看以下电子邮件地址的例子：
- en: '| **Input** | **Output** | **What''s truncated** |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| **输入** | **输出** | **被截断的内容** |'
- en: '| `alice@localhost.com` | `alice` | `@localhost.com` |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| `alice@localhost.com` | `alice` | `@localhost.com` |'
- en: '| `bob@localhost.com` | `bob` | `@localhost.com` |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| `bob@localhost.com` | `bob` | `@localhost.com` |'
- en: '| `rob@localhost.com` | `rob` | `@localhost.com` |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| `rob@localhost.com` | `rob` | `@localhost.com` |'
- en: From the preceding examples, we can see that all the domain portions from the
    email are truncated as all of them belong to the same domain. This technique saves
    storage space.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的例子中，我们可以看到，所有来自电子邮件的域名部分都被截断，因为它们都属于同一个域名。这种技术节省了存储空间。
- en: Variance
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变化
- en: This technique is useful for data types that are numeric in nature. It can also
    be applied to Date/Time values.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术适用于本质上是数字的数据类型。它也可以应用于日期/时间值。
- en: This follows a statistical approach where we try to algorithmically vary the
    input data by a factor of +/- X percent. The value of X purely depends on the
    analysis we are doing and shouldn’t have an overall impact on understanding the
    business figures.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这遵循一种统计方法，我们试图通过算法以+/- X百分比的因子改变输入数据。X的值纯粹取决于我们进行的分析，并且不应对理解业务数据产生整体影响。
- en: 'Let''s see a few examples:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看几个例子：
- en: '| **Input Data** | **Output Data** | **Method** | **Explanation** |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| **输入数据** | **输出数据** | **方法** | **说明** |'
- en: '| 100 | 110 | Fixed variance | Increase by 10% |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| 100 | 110 | 固定方差 | 增加10% |'
- en: '| -100 | 90 | Fixed variance | Decrease by 10% |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| -100 | 90 | 固定方差 | 减少10% |'
- en: '| 1-Jan-2000 | 1-Feb-2000 | Fixed variance | Add 1 month |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| 1-Jan-2000 | 1-Feb-2000 | 固定方差 | 增加1个月 |'
- en: '| 1-Aug-2000 | 1-Jul-2000 | Fixed variance | Reduce by 1 month |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| 1-Aug-2000 | 1-Jul-2000 | 固定方差 | 减少一个月 |'
- en: '| 100 | 101 | Dynamic variance | 1% to 5% increase or decrease |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| 100 | 101 | 动态方差 | 增加1%到5%或减少1%到5% |'
- en: '| 100 | 105 | Dynamic | 1% to 5% increase or decrease |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 100 | 105 | 动态 | 增加1%到5%或减少1%到5% |'
- en: Shuffling
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 洗牌
- en: This is also considered one of the standard techniques of achieving anonymity
    of data. This process is more applicable where we have records of data with several
    attributes (columns in database terminology). In this technique, the data in the
    records is shuffled around a column so as to make sure that the record-level information
    is changed. But statistically, the data value remains the same in that column.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这也被认为是实现数据匿名化的一种标准技术。这个过程在拥有具有多个属性（在数据库术语中称为列）的数据记录时更为适用。在这个技术中，记录中的数据会在某一列周围进行洗牌，以确保记录级别的信息发生变化。但从统计学的角度来看，该列中的数据值保持不变。
- en: '**Example**: When doing an analysis on the salary ranges of an organization,
    we can actually do a shuffle of the entire salary column, where the salaries of
    all the employees never match reality. But we can use this data to do an analysis
    on the ranges.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例**：在进行一个组织薪资范围的分析时，我们实际上可以对整个薪资列进行洗牌，其中所有员工的薪资都不会与现实相符。但我们可以使用这些数据来分析薪资范围。'
- en: Complex methods can also be employed in this case, where we can do a shuffle
    based on other fields such as seniority, geography, and so on. The ultimate objective
    of this technique is to preserve the meaning of the data and, at the same time,
    make it impossible to discover the original owners of these attributes.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个情况下，也可以采用复杂的方法，我们可以根据其他字段（如资历、地理位置等）进行洗牌。这种技术的最终目标是保留数据的含义，同时使发现这些属性原始所有者变得不可能。
- en: 'Let''s see this with some example data:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一些示例数据来看看：
- en: '![](img/652dfb7b-645d-4f3e-9723-81b5c6a68dc7.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/652dfb7b-645d-4f3e-9723-81b5c6a68dc7.png)'
- en: There are five sample employee records with their salary information. The top
    table has original salary details and the table below has shuffled salary records.
    Look at the data carefully and you will understand. Remember that while shuffling,
    a random algorithm can be applied to increase the complexity of discovering the
    truth.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 有五个带有薪资信息的员工样本记录。上面的表格包含原始薪资详情，下面的表格包含洗牌后的薪资记录。仔细观察数据，你就会明白。记住，在洗牌时，可以应用随机算法来增加发现真相的复杂性。
- en: Data security
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据安全
- en: Data has become a very important asset for businesses when making very critical
    decisions. As the complexity of the infrastructure that generates and uses this
    data, its very important to have some control over the access patterns of this
    data. In the Hadoop ecosystem, we have Apache Ranger, which is another open source
    project that helps in managing the security of big data.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在做出非常关键的决定时，数据已经成为企业的重要资产。由于生成和使用这些数据的基础设施复杂性很高，因此对数据的访问模式进行一些控制非常重要。在Hadoop生态系统中，我们有Apache
    Ranger，这是另一个开源项目，有助于管理大数据的安全性。
- en: What is Apache Ranger?
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Apache Ranger？
- en: Apache Ranger is an application that enables data architects to implement security
    policies on a big data ecosystem. The goal of this project is to provide a unified
    way for all Hadoop applications to adhere to the security guidelines that are
    defined.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Ranger是一个应用程序，它使数据架构师能够在大数据生态系统中实施安全策略。这个项目的目标是提供一个统一的方式，让所有Hadoop应用程序都能遵守定义的安全指南。
- en: 'Here are some of the features of Apache Ranger:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是Apache Ranger的一些特性：
- en: Centralized administration
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中管理
- en: Fine grained authorization
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 细粒度授权
- en: Standardized authorization
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准化授权
- en: Multiple authorization methods
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多种授权方法
- en: Centralized auditing
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中审计
- en: Apache Ranger installation using Ambari
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ambari安装Apache Ranger
- en: In this section, we will install Ranger using Apache Ambari. This section assumes
    that there is already a running Ambari instance.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用Apache Ambari安装Ranger。本节假设已经有一个运行的Ambari实例。
- en: Ambari admin UI
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ambari管理UI
- en: 'Open the Ambari web interface running on master node; then click on Add Service,
    as shown in the screenshot:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 打开运行在主节点上的Ambari Web界面；然后点击“添加服务”，如图所示：
- en: '![](img/688e0308-9b80-4fd8-87a0-9c9240265967.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/688e0308-9b80-4fd8-87a0-9c9240265967.png)'
- en: This will open a modal window, Add Service Wizard, which will take us through
    several steps for a complete installation of Apache Ambari.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开一个模态窗口，“添加服务向导”，它将引导我们完成Apache Ambari的完整安装。
- en: Add service
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加服务
- en: Once the modal window is in view, select the Apache Ranger service from the
    list and click on Next on the screen.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模态窗口可见，从列表中选择Apache Ranger服务，并在屏幕上点击“下一步”。
- en: 'This is shown in the following screenshot:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这在以下截图中显示：
- en: '![](img/2be2832c-2753-4d1d-814c-5d4c8a883777.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2be2832c-2753-4d1d-814c-5d4c8a883777.png)'
- en: Service placement
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务放置
- en: Once the service is selected, we are presented the next step in the UI where
    we need to chose the servers on which this service is going to be installed and
    run.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了服务，我们就会在UI中看到下一步，我们需要选择该服务将要安装和运行的服务器。
- en: 'I have selected node-3 for Ranger (see the green labels):'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我已选择node-3作为Ranger（见绿色标签）：
- en: '![](img/87b67475-da9f-4b66-a0f9-6182ebf9b456.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/87b67475-da9f-4b66-a0f9-6182ebf9b456.png)'
- en: Screenshot showing how to choose servers on which this services is going to
    be installed and run
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕截图显示如何选择将要安装和运行此服务的服务器
- en: After this, select Next, which is at the bottom of the page.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，选择页面底部的“下一步”。
- en: Service client placement
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务客户端放置
- en: In this step, we can choose where the clients for this service can be installed.
    Use the checkboxes to mark your preferences.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，我们可以选择此服务的客户端可以安装的位置。使用复选框标记您的偏好。
- en: 'They look something like this:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 它们看起来像这样：
- en: '![](img/65982a2c-18c6-4bd3-9665-fe8f2374398d.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/65982a2c-18c6-4bd3-9665-fe8f2374398d.png)'
- en: Click on Next when your choices are made.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在做出选择后，请点击“下一步”。
- en: Database creation on master
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主节点上的数据库创建
- en: 'We have installed the MySQL database server on the master node. Before we continue
    to the next step in the Ambari wizard, we have to create a new database and assign
    a few privileges:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已在主节点上安装了MySQL数据库服务器。在继续到Ambari向导的下一步之前，我们必须创建一个新的数据库并分配一些权限：
- en: '![](img/bfe9ba4f-aeca-4c63-b308-b9ce5518efe0.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bfe9ba4f-aeca-4c63-b308-b9ce5518efe0.png)'
- en: 'We also have to register the JDBC driver using the `ambari-server setup` command:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还必须使用`ambari-server setup`命令注册JDBC驱动程序：
- en: '[PRE0]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After this step, we can go back to the Ambari wizard.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤之后，我们可以返回到Ambari向导。
- en: Ranger database configuration
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ranger数据库配置
- en: 'In the wizard, we are prompted with the database name, username, and password.
    Please fill them according to the choices we made in the previous step:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在向导中，我们将被提示输入数据库名称、用户名和密码。请根据我们在上一步中做出的选择填写它们：
- en: '![](img/fbc737cb-de1e-4504-b1c5-54eb414da55b.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fbc737cb-de1e-4504-b1c5-54eb414da55b.png)'
- en: Once the settings are added, please click on Test Connection. This will save
    lot of time later.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦添加了设置，请点击“测试连接”。这将节省很多时间。
- en: If there are any errors, please go back to the previous step; see whether there
    are any spelling mistakes and rerun those.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何错误，请返回上一步；检查是否有拼写错误，并重新运行那些步骤。
- en: Click on Next when done with the changes.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 完成更改后，请点击“下一步”。
- en: Configuration changes
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置更改
- en: Since we are adding Ranger a service, Ambari shows a list of configuration changes
    that are required for Ranger to work correctly. Mostly leave these on default.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在添加Ranger服务，Ambari显示了Ranger正确工作所需的配置更改列表。大多数情况下，请保留这些为默认值。
- en: 'These changes look like the following screenshot. Once the changes look good,
    click on OK to continue:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更改看起来如下截图所示。一旦更改看起来不错，请点击“确定”继续：
- en: '![](img/2c1fa6d2-5325-419e-8540-7c7215002dec.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2c1fa6d2-5325-419e-8540-7c7215002dec.png)'
- en: Configuration review
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置审查
- en: In this step, we are shown the list of changes that we have made so far in the
    wizard, and are shown choices to print a changes summary and deploy Ranger.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，我们看到了在向导中迄今为止所做的更改列表，并显示了打印更改摘要和部署Ranger的选择。
- en: Only when we click on Deploy will the Ranger software get installed. Until then,
    it is all kept in the browser cache.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当我们点击“部署”时，Ranger软件才会被安装。在此之前，所有内容都保存在浏览器缓存中。
- en: 'The screen looks like this:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕看起来像这样：
- en: '![](img/5ffb2278-f6c4-4dd6-b8a8-35c2e512af9c.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5ffb2278-f6c4-4dd6-b8a8-35c2e512af9c.png)'
- en: Deployment progress
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署进度
- en: 'Once the installation of Ranger starts, it should look something like the one
    in the screenshot. There should not be any failures as we have set up all the
    configurations correctly. If there is any failure, check the logs and review the
    configuration by clicking on the Back button:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Ranger的安装开始，它应该看起来像截图中的那样。不应该有任何失败，因为我们已经正确设置了所有配置。如果有任何失败，请检查日志并通过点击“后退”按钮检查配置：
- en: '![](img/dd1a49f5-1b3c-47b2-aeb4-fc93c599e8c7.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dd1a49f5-1b3c-47b2-aeb4-fc93c599e8c7.png)'
- en: Application restart
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序重启
- en: 'Once the deployment is complete, we need to restart all the affected Hadoop
    components, as shown in the following screenshot:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦部署完成，我们需要重启所有受影响的Hadoop组件，如下面的截图所示：
- en: '![](img/faa744da-eb8f-4af1-98e2-e1698c0d0d7a.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/faa744da-eb8f-4af1-98e2-e1698c0d0d7a.png)'
- en: Once all the components are restarted, the Ambari dashboard looks pretty healthy
    and we are done with the Apache Ranger installation.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有组件都已重启，Ambari仪表板看起来相当健康，我们就完成了Apache Ranger的安装。
- en: In the next step, we will see how to use Apache Ranger for handling our data
    security.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将看到如何使用Apache Ranger来处理我们的数据安全。
- en: Apache Ranger user guide
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache Ranger用户指南
- en: Once the deployment of Apache Ranger is complete, we can manage our entire Hadoop
    infrastructure security using the web interface provided by Apache Ranger.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Apache Ranger的部署完成，我们可以使用Apache Ranger提供的Web界面管理整个Hadoop基础设施的安全。
- en: Login to UI
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 登录到UI
- en: 'If you have not changed the default settings, Ranger runs on port `6080` by
    default in non-SSL Mode. Open up a web browser on the server where its installed
    on port `6080` (`http://<server-ip>:6080`) and you will be prompted with a screen
    like this:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有更改默认设置，Ranger默认在非SSL模式下运行在端口`6080`。在安装了它的服务器上打开端口`6080`的Web浏览器（`http://<服务器IP>:6080`），您将看到一个类似这样的屏幕：
- en: '![](img/3475861b-dcd2-49b7-a19f-3b8f96b964eb.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3475861b-dcd2-49b7-a19f-3b8f96b964eb.png)'
- en: Log in with the default username `admin` and password `admin` (please change
    the password after you log in for the first time, for security reasons).
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 使用默认用户名`admin`和密码`admin`登录（请登录后首次更改密码，出于安全原因）。
- en: Once the login is successful, we are taken to the *Access manager* section.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦登录成功，我们将被带到*访问管理器*部分。
- en: Access manager
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问管理器
- en: 'Access manager lets us define policies based on services and tags. This screenshot
    shows the default list of services and the configured policies:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 访问管理器允许我们根据服务和标签定义策略。此截图显示了默认的服务列表和配置的策略：
- en: '![](img/c8e951c5-5dc0-493b-a140-bc425ed0a609.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8e951c5-5dc0-493b-a140-bc425ed0a609.png)'
- en: As you can see, there is already a policy defined for HDFS service and KAFKA
    service as they are already installed in the Ambari setup.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，由于它们已经在Ambari设置中安装，因此已经为HDFS服务和KAFKA服务定义了策略。
- en: When we want to define a new service, we can click on the + icon and define
    the service details.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想要定义一个新的服务时，我们可以点击加号图标并定义服务详情。
- en: Service details
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务详情
- en: 'Before we start defining the authorization rules for the service, we need to
    define a service and then add authorization policies to the service. These are
    the mandatory properties which are needed to define a service from the UI:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始为服务定义授权规则之前，我们需要定义一个服务，然后向服务添加授权策略。这些是从UI定义服务所需的必填属性：
- en: '| **UI Element name** | **Description** |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| **UI元素名称** | **描述** |'
- en: '| Service Name | Name of the service as defined in agent configuration |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| 服务名称 | 在代理配置中定义的服务名称 |'
- en: '| Username | Name of the service user |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| 用户名 | 服务用户的名称 |'
- en: '| Password | Password for the service user |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| 密码 | 服务用户的密码 |'
- en: '| Namenode URL | URL to the namenode |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| Namenode URL | Namenode的URL |'
- en: A new service can be defined by clicking on the + icon below the application
    (for example, `HDFS`, `Kafka`, and so on)
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击应用程序下方的加号图标（例如，`HDFS`、`Kafka`等）可以定义新的服务。
- en: 'After that, the service definition screen looks like this:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，服务定义屏幕看起来像这样：
- en: '![](img/58f05368-f783-4656-83a1-21cf9fdcea1e.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/58f05368-f783-4656-83a1-21cf9fdcea1e.png)'
- en: Screenshot of the service definition screen after defining new services
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 定义新服务后服务定义屏幕的截图
- en: We need to fill in all the necessary values for our service definition and hit
    save. Later, we need to add policies to this service to access enforcement and
    auditing.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要填写服务定义所需的所有必要值并保存。稍后，我们需要向此服务添加策略以进行访问控制和审计。
- en: Policy definition and auditing for HDFS
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HDFS的策略定义和审计
- en: For every service in Ranger, we can associate different policies to the resources
    in the service. In case of HDFS, the resources will be the file/directory paths.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Ranger 中的每个服务，我们都可以将不同的策略与服务中的资源关联起来。在 HDFS 的情况下，资源将是文件/目录路径。
- en: In this section, we will define a new policy for an HDFS path called projects
    for three users: `hdfs-alice`, `hdfs-bob`, and `hdfs-tom`. Where only `hdfs-alice`
    is allowed all permissions and rest of the users have only read access.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为三个用户定义一个新的针对 HDFS 路径名为 projects 的策略：`hdfs-alice`、`hdfs-bob` 和 `hdfs-tom`。其中只有
    `hdfs-alice` 被允许所有权限，其余用户只有读取权限。
- en: We will see how Ranger enforces access restrictions once the policy is in place.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦策略实施，我们将看到 Ranger 如何执行访问限制。
- en: 'Let''s see the screen for the policy creation:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看策略创建的屏幕：
- en: '![](img/e5aa0907-08ff-4ed9-87c2-d1ab9cca6a94.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e5aa0907-08ff-4ed9-87c2-d1ab9cca6a94.png)'
- en: Screenshot showing how Ranger enforces access restrictions
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕截图显示 Ranger 如何执行访问限制
- en: Once we hit the Add button, this policy is registered and added under the current
    service.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们点击添加按钮，此策略就会被注册并添加到当前服务下。
- en: Now, let's get back to the Unix terminal and see how Ranger enforces the policies.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回到 Unix 终端，看看 Ranger 如何执行策略。
- en: 'This screen shows how `hdfs` and `hdfs-alice` users are allowed to create directories
    `/projects` and `/projects/1`, but how this is denied for `hdfs-tom`:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 此屏幕显示 `hdfs` 和 `hdfs-alice` 用户被允许创建 `/projects` 和 `/projects/1` 目录，但对于 `hdfs-tom`
    来说这是被拒绝的：
- en: '![](img/45c42baf-d515-49e0-8d9c-b93f6498473a.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/45c42baf-d515-49e0-8d9c-b93f6498473a.png)'
- en: Apache Ranger also has an audit section in the web interface, where we can see
    these access patterns.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Ranger 在网页界面中还有一个审计部分，我们可以看到这些访问模式。
- en: 'This screen shows that `hdfs-tom` is denied and `hdfs-alice` is granted access
    by the policy:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 此屏幕显示 `hdfs-tom` 被拒绝访问，而 `hdfs-alice` 被策略允许访问：
- en: '![](img/eeb6ddc0-5791-44e6-ad9a-3ea16271fbb3.png)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/eeb6ddc0-5791-44e6-ad9a-3ea16271fbb3.png)'
- en: Screenshot showing access denied to hdfs-tom and access granted to hdfs-alice
    by the policy
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕截图显示策略拒绝 `hdfs-tom` 访问并允许 `hdfs-alice` 访问
- en: Like this, we can define our own policies and customize how `hdfs` should allow/deny
    access to several resources.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 就像这样，我们可以定义自己的策略并自定义 `hdfs` 应该允许/拒绝访问哪些资源。
- en: The power and flexibility of Ranger comes from the its configurability. There
    is no need for any configuration files and restarts of applications for the access
    control to play a significant role.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: Ranger 的强大和灵活性来自于其可配置性。访问控制要发挥重要作用，无需任何配置文件和应用重启。
- en: Summary
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the different data life cycle stages, including
    when data is created, shared, maintained, archived, retained, and deleted.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了关于不同数据生命周期阶段的内容，包括数据创建、共享、维护、归档、保留和删除。
- en: This chapter gave you a detailed understanding of how big data is managed, considering
    the fact that it is either unstructured or semi-structured and it has a fast arrival
    rate and large volume.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 本章详细介绍了大数据的管理方法，考虑到它要么是非结构化的，要么是半结构化的，并且具有快速到达率和大量数据。
- en: As the complexity of the infrastructure that generates and uses data in business
    organizations has increased drastically, it has become imperative to secure your
    data properly. This chapter further covered data security tools, such as Apache
    Ranger, and patterns to help us learn how to have control over the access patterns
    of data.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 随着业务组织中生成和使用数据的基础设施复杂性急剧增加，确保数据安全变得至关重要。本章进一步介绍了数据安全工具，如 Apache Ranger，以及帮助我们了解如何控制数据访问模式的模式。
- en: In the next chapter, we will take a look at Hadoop installation, its architecture
    and key components.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨 Hadoop 的安装、其架构和关键组件。
