- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Starting an Adventure with Calculations and Parameters
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从计算和参数开始一次冒险
- en: We have already seen what amazing discovery, analysis, and data storytelling
    is possible in Tableau by simply connecting to data and dragging and dropping
    fields. Now, we'll set off on an adventure with calculations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，通过简单地连接数据并拖放字段，在Tableau中可以进行令人惊叹的发现、分析和数据故事讲述。现在，我们将开始一次计算的冒险之旅。
- en: Calculations significantly extend the possibilities for analysis, design, and
    interactivity in Tableau. In this chapter, we'll see how calculations can be used
    in a wide variety of ways. We'll see how calculations can be used to address common
    issues with data, extend data by adding new dimensions and measures, and provide
    additional flexibility in interactivity.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算极大地扩展了Tableau中分析、设计和交互性的可能性。在本章中，我们将看到计算如何在各种方式中得到应用。我们将看到计算如何用来解决数据中的常见问题，如何通过添加新的维度和度量来扩展数据，以及如何在交互性方面提供更多灵活性。
- en: At the same time, while calculations provide incredible power and flexibility,
    they introduce a level of complexity and sophistication. As you work through this
    chapter, try to understand the key concepts behind how calculations work in Tableau.
    As usual, follow along with the examples, but feel free to explore and experiment.
    The goal is not to merely have a list of calculations you can copy, but to gain
    knowledge of how calculations can be used to solve problems and add creative functionality
    to your visualizations and dashboards.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，虽然计算提供了难以置信的力量和灵活性，但它们也带来了复杂性和精细度。在你阅读本章时，尽量理解Tableau中计算工作原理背后的关键概念。像往常一样，跟随示例操作，但也可以自由探索和实验。目标不仅仅是得到一份可以复制的计算列表，而是理解如何利用计算来解决问题，并为你的可视化和仪表板添加创意功能。
- en: 'The first half of this chapter focuses on laying a foundation, while the second
    half provides quite a few practical examples. The topics we will study here are
    as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的前半部分重点是打下基础，而后半部分则提供了相当多的实用示例。我们将在这里学习的主题如下：
- en: Overview of the four main types of calculations
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四种主要计算类型概述
- en: Creating and editing calculations
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和编辑计算
- en: Row-level calculation examples
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行级计算示例
- en: Aggregate calculation examples
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚合计算示例
- en: Parameters
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数
- en: Practical examples
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实用示例
- en: Performance considerations
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能考虑
- en: We'll start with an introduction to the types of calculations in Tableau and
    then delve into some examples.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从介绍Tableau中计算的类型开始，然后深入一些示例。
- en: Introduction to calculations
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算介绍
- en: A calculation is often referred to as a **Calculated Field** in Tableau because,
    in most cases, when you create a calculation, it will show up as either a new
    measure or dimension in the data pane. Calculations consist of code that's made
    up of functions, operations, and references to other fields, parameters, constants,
    groups, or sets. This code returns a value. Sometimes, this result is per row
    of data, and sometimes it is done at an aggregate level. We'll consider the difference
    between Tableau's major calculation types next.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 计算通常在Tableau中被称为**计算字段**，因为在大多数情况下，当你创建一个计算时，它会显示为数据面板中的新度量或维度。计算由包含函数、操作以及对其他字段、参数、常量、分组或集合的引用的代码组成。这个代码会返回一个值。有时，这个结果是按数据行级别计算的，有时则是在聚合级别上完成。接下来，我们将讨论Tableau的主要计算类型之间的区别。
- en: The four main types of calculations
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 四种主要计算类型
- en: 'The most fundamental way to understand calculations in Tableau is to think
    of four major types of calculations:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 理解Tableau中计算的最基本方式是将其分为四种主要类型：
- en: '**Row-level calculations**: These calculations are performed for every row
    of underlying data.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行级计算**：这些计算是针对每一行底层数据执行的。'
- en: '**Aggregate calculations**: These calculations are performed at an aggregate
    level, which is usually defined by the dimensions used in the view.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚合计算**：这些计算是在聚合级别上执行的，聚合级别通常由视图中使用的维度定义。'
- en: '**Level of detail calculations**: These special calculations are aggregations
    that are performed at a specified level of detail, with the results available
    at the row level.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**细节级别计算**：这些特殊的计算是按指定的细节级别进行的聚合，结果可在行级别上获得。'
- en: '**Table calculations**: These calculations are performed on the table of aggregate
    data that has been returned by the data source to Tableau.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表计算**：这些计算是在由数据源返回到Tableau的聚合数据表上执行的。'
- en: Understanding and recognizing the four main types of calculations will enable
    you to leverage the power and potential of calculations in Tableau.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 理解并识别四种主要的计算类型将使你能够充分利用 Tableau 中计算的强大功能和潜力。
- en: 'In this chapter, we''ll take a close look at two of the four main types of
    calculations in Tableau: row-level and aggregate calculations. We''ll consider
    the final two types in *Chapter 5*, *Leveraging Level of Detail Calculations*,
    and *Chapter 6*, *Diving Deep with Table Calculations*.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将详细了解 Tableau 中四种主要计算类型中的两种：行级计算和聚合计算。剩下的两种类型将在*第5章*，*利用细节级别计算*，以及*第6章*，*深入探讨表格计算*中讨论。
- en: As you think through using a calculation to solve a problem, always consider
    the type of calculation you might need. Look for tips throughout this chapter
    and the next two that will help you consider *why* a certain type of calculation
    was used.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在思考如何使用计算解决问题时，始终考虑你可能需要的计算类型。在本章及接下来的两章中，会有一些提示帮助你思考*为什么*使用某种类型的计算。
- en: Now we have examined the major calculation types in Tableau, we will see how
    they are created and edited.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了 Tableau 中主要的计算类型，接下来我们将看到如何创建和编辑这些计算。
- en: Creating and editing calculations
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和编辑计算
- en: 'There are multiple ways to create a calculated field in Tableau:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Tableau 中创建计算字段有多种方法：
- en: Select **Analysis** | **Create Calculated Field...** from the menu.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单中选择**分析** | **创建计算字段...**。
- en: Use the drop-down menu next to **Dimensions** in the **Data** pane:![](img/B16021_04_01.png)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**数据**面板中**维度**旁边的下拉菜单：![](img/B16021_04_01.png)
- en: 'Figure 4.1: The Create Calculated Field… option'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.1：创建计算字段… 选项
- en: Right-click an empty area in the **Data** pane and select **Create Calculated
    Field...**.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**数据**面板中的空白区域，选择**创建计算字段...**。
- en: Use the drop-down menu on a field, set, or parameter in the data pane and select
    **Create** | **Calculated Field...**. The calculation will begin as a reference
    to the field you selected.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用数据面板中的字段、集合或参数的下拉菜单，选择**创建** | **计算字段...**。计算将以你选择的字段为参考开始。
- en: Double-click an empty area on the **Rows**, **Columns**, or **Measure Values**
    shelves, or in the empty area on the **Marks** card to create an ad hoc calculation
    (though this will not show the full calculation editor).
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**行**、**列**或**度量值**架上的空白区域，或在**标记**卡上的空白区域创建临时计算（尽管这不会显示完整的计算编辑器）。
- en: When you create a calculated field, it will be part of the data source that
    is currently selected at the time you create it. You can edit an existing calculated
    field in the data pane by using the drop-down menu and selecting **Edit...**.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你创建计算字段时，它将成为当前选中的数据源的一部分。你可以通过使用下拉菜单选择**编辑...**来编辑数据面板中现有的计算字段。
- en: 'The interface for creating and editing calculations looks like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 创建和编辑计算的界面如下所示：
- en: '![](img/B16021_04_02.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_02.png)'
- en: 'Figure 4.2: The creating and editing calculations interface'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2：创建和编辑计算界面
- en: 'This window has several key features:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此窗口有几个关键特性：
- en: '**Calculated field name**: Enter the name of the calculated field here. Once
    created, the calculated field will show up as a field in the data pane with the
    name you entered in this text box.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算字段名称**：在此处输入计算字段的名称。创建后，计算字段将作为数据面板中的一个字段显示，字段名称为你在此文本框中输入的名称。'
- en: '**Code editor**: Enter code in this text area to perform the calculation. The
    editor includes autocomplete for recognized fields and functions. Additionally,
    you may drag and drop fields and text snippets to and from the code editor and
    the data pane and view.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码编辑器**：在此文本区域输入代码以执行计算。编辑器包括自动完成已识别的字段和函数功能。此外，你可以将字段和文本片段拖放到代码编辑器和数据面板之间。'
- en: An **indicator** at the bottom of the editor will alert you to errors in your
    code. Additionally, if the calculation is used in views or other calculated fields,
    you will see a drop-down indicator that will let you see the dependencies. Click
    the **Apply** button to apply changes to the calculation throughout the workbook
    while leaving the calculation editor open. The **OK** button will save the code
    changes and close the editor. If you wish to discard any changes you've made,
    click the **X** button in the upper-right corner to cancel the changes.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑器底部的**指示器**将提醒你代码中的错误。此外，如果计算被用于视图或其他计算字段，你将看到一个下拉指示器，允许你查看依赖关系。点击**应用**按钮以将更改应用到整个工作簿，同时保持计算编辑器打开。**确定**按钮将保存代码更改并关闭编辑器。如果你希望放弃所做的更改，点击右上角的**X**按钮取消更改。
- en: 'The **functions list** contains all the functions that you can use in your
    code. Many of these functions will be used in examples or discussed in this chapter.
    Tableau groups various functions according to their overall use:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**函数列表**包含了你在代码中可以使用的所有函数。许多函数将在本章的示例中使用或讨论。Tableau 按照函数的总体用途将其分组：'
- en: '**Number**: Mathematical functions, such as rounding, absolute value, trig
    functions, square roots, and exponents.'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字**：数学函数，例如四舍五入、绝对值、三角函数、平方根和指数。'
- en: '**String**: Functions that are useful for string manipulation, such as getting
    a substring, finding a match within a string, replacing parts of a string, and
    converting a string value to uppercase or lowercase.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字符串**：用于字符串操作的函数，例如获取子字符串、在字符串中查找匹配项、替换字符串中的部分内容，以及将字符串值转换为大写或小写。'
- en: '**Date**: Functions that are useful for working with dates, such as finding
    the difference between two dates, adding an interval to a date, getting the current
    date, and transforming strings with non-standard formats into dates.'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日期**：用于处理日期的函数，例如查找两个日期之间的差异、向日期添加间隔、获取当前日期以及将非标准格式的字符串转换为日期。'
- en: '**Type Conversion**: Functions that are useful for converting one type of field
    to another, such as converting strings into integers, integers into floating-point
    decimals, or strings into dates. We''ll cover the major Tableau data types in
    the next section.'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类型转换**：用于将字段从一种类型转换为另一种类型的函数，例如将字符串转换为整数，将整数转换为浮动小数，或将字符串转换为日期。我们将在下一部分介绍主要的
    Tableau 数据类型。'
- en: '**Logical**: Decision-making functions, such as `if` `then` `else` logic or
    `case` statements.'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑**：决策函数，例如`if` `then` `else` 逻辑或`case` 语句。'
- en: '**Aggregate**: Functions that are used for aggregating such as summing, getting
    the minimum or maximum values, or calculating standard deviations or variances.'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚合**：用于聚合的函数，例如求和、获取最小值或最大值，或计算标准差或方差。'
- en: '**Pass Through** (only available when connected live to certain databases,
    such as SQL Server): These functions allow you to pass through raw SQL code to
    the underlying database and retrieve a returned value at either a row level or
    aggregate level.'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**透传**（仅在与某些数据库（如 SQL Server）建立实时连接时可用）：这些函数允许你将原始 SQL 代码传递给底层数据库，并以行级或聚合级别检索返回的值。'
- en: '**User**: Functions that are used to obtain usernames and check whether the
    current user is a member of a group. These functions are often used in combination
    with logical functions to customize the user''s experience or to implement user-based
    security when publishing to Tableau Server or Tableau Online.'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户**：用于获取用户名并检查当前用户是否为某个组成员的函数。这些函数通常与逻辑函数结合使用，用于定制用户体验或在发布到 Tableau Server
    或 Tableau Online 时实施基于用户的安全性。'
- en: '**Table calculation**: These functions are different from the others. They
    operate on the aggregated data *after* it is returned from the underlying data
    source and just prior to the rendering of the view.'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表计算**：这些函数与其他函数不同，它们在从数据源返回聚合数据并渲染视图之前进行操作，*操作的是返回后的数据*。'
- en: '**Spatial**: These functions allow you to perform calculations with spatial
    data.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间**：这些函数允许你使用空间数据进行计算。'
- en: Selecting a function in the list or clicking a field, parameter, or function
    in the code will reveal details about the selection on the right. This is helpful
    when nesting other calculated fields in your code, when you want to see the code
    for that particular calculated field, or when you want to understand the syntax
    for a function.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列表中选择一个函数或点击字段、参数或代码中的函数时，右侧会显示关于选择的详细信息。这在你需要嵌套其他计算字段、查看特定计算字段的代码，或者想理解某个函数的语法时非常有用。
- en: With a good understanding of the interface, let's briefly look at some foundational
    concepts for calculations.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在对界面有较好理解的基础上，接下来我们简要看一下计算的基础概念。
- en: Data types
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据类型
- en: 'Fundamental to the concept of calculations are **data types**, which describe
    the kind of information stored by a field, parameter, or returned by a function.
    Tableau distinguishes six types of data:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 计算概念的基础是**数据类型**，它们描述了字段、参数存储的或函数返回的数据信息类型。Tableau区分了六种数据类型：
- en: '**Number (decimal)**: These are numeric values that include places after the
    decimal. Values such as `0.02`, `100.377`, or `3.14159` are decimal values.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字（小数）**：这些是包含小数点后位数的数值。例如`0.02`、`100.377`或`3.14159`都是小数值。'
- en: '**Number (whole)**: These are integer or whole numbers with no fractional values
    or places after the decimal. Values such as `5`, `157`, and `1,455,982` are whole
    numbers.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字（整数）**：这些是没有小数部分的整数或整数值。例如`5`、`157`和`1,455,982`都是整数。'
- en: '**Date and Time**: These are dates along with times. Values such as `November
    8`, `1980 12:04:33 PM` are date and time types.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日期和时间**：这些是带有时间的日期。例如`1980年11月8日 12:04:33 PM`是日期和时间类型。'
- en: '**Date**: These are dates without times. Values such as `July 17, 1979` are
    date types.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日期**：这些是没有时间的日期。例如`1979年7月17日`是日期类型。'
- en: '**String**: These are a series of characters. A string may consist of a mixture
    of alphabetic characters, numeric characters, symbols, or special characters.
    They may even be blank (empty). Values such as `Hello World`, `password123`, and
    `%$@*!` are all strings. In code, strings will be surrounded by single or double
    quotes.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字符串**：这些是字符的序列。字符串可以由字母字符、数字字符、符号或特殊字符组成，甚至可以是空的（空字符串）。例如`Hello World`、`password123`和`%$@*!`都是字符串。在代码中，字符串将被单引号或双引号包围。'
- en: '**Boolean**: This is a true or false value. The values `TRUE`, `FALSE`, and
    the expressions `1=1` (which evaluates as true) and `1=2` (which evaluates as
    false) are all Boolean types.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**布尔值**：这是一个真假值。`TRUE`、`FALSE`以及表达式`1=1`（结果为真）和`1=2`（结果为假）都属于布尔类型。'
- en: '**Spatial:** A complex value that describes a location, line or shape as it
    relates to a spatial area.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间**：描述位置、线条或形状与空间区域相关的复杂值。'
- en: Every field in Tableau has one of these data types and every function in Tableau
    returns one of these data types. Some functions expect input that matches some
    of these types and you'll receive errors if you try to pass in the wrong type.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau中的每个字段都有这些数据类型之一，Tableau中的每个函数都会返回这些数据类型之一。有些函数需要输入匹配某些数据类型，如果你尝试传入错误的类型，会收到错误提示。
- en: Some types can be converted to other types. For example, using some of the type
    conversion functions mentioned above, you could convert the string `"2.81"` to
    the decimal value `2.81`. You could convert that decimal value to a whole number,
    but in that case, you'd lose the places after the decimal value and the whole
    number would simply be `2`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一些类型可以转换为其他类型。例如，使用上面提到的一些类型转换函数，你可以将字符串`"2.81"`转换为小数值`2.81`。你也可以将这个小数值转换为整数，但在这种情况下，你会丢失小数点后面的位数，转换后的整数会变成`2`。
- en: A data type is different from the format displayed. For example, you may choose
    to format a decimal as a percentage (for example, `0.2` could be shown as `20%`),
    as currency (for example, `144.56` could be formatted as `$144.56`), or even as
    a number with 0 decimals (for example, `2.81` would be rounded to `3`).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型不同于显示的格式。例如，你可以选择将小数格式化为百分比（例如，`0.2`可以显示为`20%`）、货币格式（例如，`144.56`可以格式化为`$144.56`），甚至可以格式化为没有小数的数字（例如，`2.81`会被四舍五入为`3`）。
- en: Pay attention to the data types of fields and functions as we continue.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，请注意字段和函数的数据类型。
- en: Additional functions and operators
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外的函数和运算符
- en: 'Tableau supports numerous functions and operators. In addition to the functions
    that are listed on the calculation screen, Tableau supports the following operators,
    keywords, and syntax conventions:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 支持众多函数和操作符。除了计算屏幕上列出的函数外，Tableau 还支持以下操作符、关键字和语法约定：
- en: '| **Operator / Keyword** | **Description** |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| **操作符 / 关键字** | **描述** |'
- en: '| AND | Logical *and* between two Boolean (`true/false`) values or statements
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| AND | 逻辑*与*，用于判断两个布尔值（`true/false`）或语句之间的关系 |'
- en: '| OR | Logical *or* between two Boolean values or statements |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| OR | 逻辑*或*，用于判断两个布尔值或语句之间的关系 |'
- en: '| NOT | Logical *not* to negate a Boolean value or statement |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| NOT | 逻辑*非*，用于否定布尔值或语句 |'
- en: '| = or == | Logical *equals to* to test the equality of two statements or values
    (single or double equal signs are equivalent in Tableau''s syntax) |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| = 或 == | 逻辑*等于*，用于测试两个语句或值的相等性（在 Tableau 的语法中，单等号或双等号等效） |'
- en: '| + | Addition of numeric or date values or the concatenation of strings |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| + | 数值或日期值的加法，或字符串的连接 |'
- en: '| - | Subtraction of numeric or date values |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| - | 数值或日期值的减法 |'
- en: '| * | Multiplication of numeric values |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| * | 数值的乘法 |'
- en: '| / | Division of numeric values |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| / | 数值除法 |'
- en: '| ^ | Raise to a power with numeric values |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| ^ | 对数值进行幂运算 |'
- en: '| ( ) | Parentheses to define the order of operations or enclose function arguments
    |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| ( ) | 用括号定义运算顺序或括起函数参数 |'
- en: '| [ ] | Square brackets to enclose field names |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [ ] | 方括号用于括起字段名称 |'
- en: '| { } | Curly braces to enclose the level of detail calculations |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| { } | 大括号用于括起详细程度计算 |'
- en: '| // | Double slash to start a comment |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| // | 双斜杠表示开始注释 |'
- en: Field names that are a single word may optionally be enclosed in brackets when
    used in calculations. Field names with spaces, special characters, or from secondary
    data sources must be enclosed in brackets.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行计算时，单词形式的字段名称可以选择性地用括号括起来。包含空格、特殊字符或来自二级数据源的字段名称必须用括号括起来。
- en: You'll see these operators and functions throughout the next few chapters, so
    familiarize yourself with their uses. Now, let's consider the data that will guide
    us through some practical examples.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在接下来的几章中看到这些操作符和函数，因此要熟悉它们的用法。现在，让我们考虑将引导我们完成一些实际示例的数据。
- en: Example data
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例数据
- en: Before we get started with some examples, let's consider a sample dataset that
    will be used for the examples in this chapter. It's simple and small, which means
    we will be able to easily see how the calculations are being done.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始一些示例之前，让我们考虑一个示例数据集，该数据集将在本章的示例中使用。它简单且小巧，意味着我们可以轻松看到计算是如何进行的。
- en: 'This dataset is included as `Vacation Rentals.csv` in the `\Learning Tableau\Chapter
    04` directory of this book''s resources, and is also included in the `Chapter
    4` workbook as a data source named `Vacation Rentals`:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集作为 `Vacation Rentals.csv` 包含在本书资源的 `\Learning Tableau\Chapter 04` 目录中，并且也作为名为
    `Vacation Rentals` 的数据源包含在 `Chapter 4` 工作簿中：
- en: '| **Rental Property** | **First** | **Last** | **Start** | **End** | **Discount**
    | **Rent** | **Tax per Night** |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| **出租物业** | **名字** | **姓氏** | **开始日期** | **结束日期** | **折扣** | **租金** | **每晚税费**
    |'
- en: '| 112-Asbury Atoll | Mary | Slessor | Dec 2 | Dec 9 | 150 | 1,500 | 15 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 112-阿斯伯里环礁 | 玛丽 | 斯莱索尔 | 12月2日 | 12月9日 | 150 | 1,500 | 15 |'
- en: '| 112-Asbury Atoll | Amy | Carmichael | Dec 9 | Dec 15 | 0 | 1,500 | 15 |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 112-阿斯伯里环礁 | 艾米 | 卡迈克尔 | 12月9日 | 12月15日 | 0 | 1,500 | 15 |'
- en: '| 155-Beach Breeze | Charles | Ryrie | Dec 2 | Dec 9 | 260 | 1,300 | 10 |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 155-海滩微风 | 查尔斯 | 瑞里 | 12月2日 | 12月9日 | 260 | 1,300 | 10 |'
- en: '| 155-Beach Breeze | Dwight | Pentecost | Dec 16 | Dec 23 | 280 | 1,400 | 10
    |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 155-海滩微风 | 德怀特 | 彭特科斯特 | 12月16日 | 12月23日 | 280 | 1,400 | 10 |'
- en: '| 207-Beach Breeze | Lewis | Chafer | Dec 9 | Dec 23 | 280 | 2,800 | 10 |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 207-海滩微风 | 路易斯 | 查弗 | 12月9日 | 12月23日 | 280 | 2,800 | 10 |'
- en: '| 207-Beach Breeze | John | Walvoord | Dec 2 | Dec 9 | 60 | 1,500 | 10 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 207-海滩微风 | 约翰 | 瓦尔沃德 | 12月2日 | 12月9日 | 60 | 1,500 | 10 |'
- en: The dataset describes several vacation rental properties, the renters, the start
    and end dates of the rental period, the discount, rent, and tax per night. We'll
    use it throughout the rest of the chapter as we see some examples of calculations.
    Let's start with row-level calculations.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集描述了几处度假租赁物业、租客、租赁期的开始和结束日期、折扣、租金和每晚税费。我们将在本章的后续部分中使用它，展示一些计算的示例。让我们从行级计算开始。
- en: Row-level calculations
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行级计算
- en: We'll walk through several examples of row-level calculations in this section.
    You'll find the completed calculations in the `Complete` workbook, but you might
    prefer to start from scratch in the `Starter` workbook. We won't necessarily cover
    creating a visualization for every example, but try building some of your own
    as you work through the examples.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过几个行级计算示例。你可以在`Complete`工作簿中找到完成的计算，但你可能更喜欢从`Starter`工作簿开始。我们不一定会为每个示例创建可视化，但在完成这些示例时，可以尝试自己构建一些可视化。
- en: Simple example
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单示例
- en: 'We''ll start with a very simple example and then build up in complexity. In
    the `Chapter 04` workbook, create a new calculated field called `Full Name` with
    the following code:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从一个非常简单的示例开始，然后逐步增加复杂性。在`第04章`工作簿中，创建一个名为`全名`的新计算字段，代码如下：
- en: '[PRE0]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This code concatenates the strings of `First` and `Last` with a space in-between
    them. Your calculation editor should look something like the following:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码将`First`和`Last`字符串连接，中间用一个空格。你的计算编辑器应该看起来像下面这样：
- en: '![](img/B16021_04_03.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_03.png)'
- en: 'Figure 4.3: Creating the Full Name calculation in the editor'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3：在编辑器中创建全名计算
- en: After clicking **OK**, you should notice a new **Full Name** field in the data
    pane. The value for that field is calculated per row of data. That is, every row
    of data contains the full name of the renter.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**确定**后，你应该会注意到数据面板中出现一个新的**全名**字段。该字段的值是按数据行计算的。也就是说，每行数据包含租户的全名。
- en: More complex examples
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更复杂的示例
- en: Note that the `Rental Property` field contains values such as `112-Asbury Atoll`
    or `207-Beach Breeze`. Let's assume that the naming convention of the rental unit
    in the vacation rental data gives us the room number and the name of the building
    separated by a dash. For example, the unit named `207-Beach Breeze` is room 207
    of the Beach Breeze building.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`租赁物业`字段包含诸如`112-Asbury Atoll`或`207-Beach Breeze`之类的值。假设假期租赁数据中的租赁单元命名规范为通过破折号分隔房间编号和建筑物名称。例如，名为`207-Beach
    Breeze`的单元是Beach Breeze建筑的207号房间。
- en: 'Name the first `Room` with the following code:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下代码命名第一个`房间`：
- en: '[PRE1]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, create another calculated field named `Building` with the following code:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建另一个名为`建筑物`的计算字段，代码如下：
- en: '[PRE2]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Both of these functions use the `Split()` function, which splits a string into
    multiple values and keeps one of those values. This function takes three arguments:
    the **string**, the **delimiter** (a character or set of characters that separate
    values), and the **token number** (which value to keep from the split, that is,
    first, second, third, and so on.) Using the `-` (dash) as the delimiter, `Room`
    is the first value and `Building` is the second.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个函数都使用了`Split()`函数，它将一个字符串拆分成多个值并保留其中一个值。该函数需要三个参数：**字符串**、**分隔符**（一个字符或一组字符，用于分隔值），以及**标记编号**（拆分后要保留的值，即第一个、第二个、第三个，以此类推）。使用`-`（破折号）作为分隔符，`房间`是第一个值，`建筑物`是第二个值。
- en: 'Using the two calculated fields, create a bar chart of **Rent per Building
    & Room**, like this:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两个计算字段，创建一个**每栋楼及每个房间的租金**柱状图，如下所示：
- en: '![](img/B16021_04_04.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_04.png)'
- en: 'Figure 4.4: Using your calculated fields to build a view'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4：使用你的计算字段构建视图
- en: The **Building** and **Room** fields show up in the data pane as dimensions.
    The calculated dimensions can be used just like any other dimension. They can
    slice the data, define the level of detail, and group measures.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**建筑物**和**房间**字段在数据面板中显示为维度。计算出的维度可以像其他任何维度一样使用。它们可以切片数据，定义详细级别，并对度量值进行分组。'
- en: Row-level calculations are calculated at the row level, but you can choose to
    aggregate the results. For example, you could aggregate to find the highest **Room**
    number `(MAX)` or count the distinct number of **Buildings** `(COUNTD)`. In fact,
    if the result of a row-level calculation is numeric, Tableau will often place
    the resulting field as a measure by default. But as we've seen, you can use a
    row-level field as either a dimension or measure in the view.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 行级计算在行级别计算，但你可以选择对结果进行聚合。例如，你可以聚合结果，找到最高的**房间**编号`(MAX)`，或者统计不同的**建筑物**数量`(COUNTD)`。事实上，如果行级计算的结果是数字类型，Tableau通常会默认将结果字段作为度量值。但正如我们所看到的，你可以将行级字段作为维度或度量值在视图中使用。
- en: 'Note that Tableau adds a small equals sign to the icon of the fields in the
    data pane to indicate that they are calculated fields:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Tableau在数据面板中为字段图标添加了一个小等号，表示它们是计算字段：
- en: '![](img/B16021_04_05.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_05.png)'
- en: 'Figure 4.5: The small = sign indicates a field is a calculation'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5：小等号（=）表示该字段是一个计算字段
- en: 'The code for both calculated fields is executed for every row of data and returns
    a row-level value. We can verify that the code is operating on the row level by
    examining the source data. Simply click on the **View Data** icon next to dimensions
    to see the row-level detail (it''s next to the magnifying glass icon in the preceding
    screenshot). Here, the new fields of **Building** and **Unit**, along with the
    row-level values, can be clearly seen:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 两个计算字段的代码会对每一行数据执行，并返回行级别的值。我们可以通过检查源数据来验证代码是否按行级别操作。只需点击维度旁边的**查看数据**图标，就可以看到行级别的详细信息（它位于前面截图中的放大镜图标旁边）。在这里，可以清楚地看到**建筑**和**单元**的新字段及其行级别的值：
- en: '![](img/B16021_04_06.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_06.png)'
- en: 'Figure 4.6: Viewing the underlying data shows us the calculation is done per
    row of data'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6：查看底层数据，显示计算是按数据行进行的
- en: Tableau provides a shortcut for splitting a field. You can use the drop-down
    menu on a field in the data pane and select **Transform** | **Split** or **Transform**
    | **Custom Split** (if you have a non-standard delimiter). The results are calculated
    fields similar to those you created previously, but with some additional logic
    around determining data types. Transform functionality, such as split, is also
    available for fields in the **Preview** or **Metadata** views on the **Data**
    source screen.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 提供了拆分字段的快捷方式。您可以在数据窗格中的字段上使用下拉菜单，选择**转换** | **拆分**或**转换** | **自定义拆分**（如果您有非标准分隔符）。结果是类似于您之前创建的计算字段，但在确定数据类型时加入了一些额外的逻辑。转换功能，如拆分，也可用于**数据**源屏幕上的**预览**或**元数据**视图中的字段。
- en: Extending the example
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展示例
- en: We'll extend the example a bit more and assume you know that the floor of a
    room is indicated by its number. Rooms 100 through 199 are on the first floor,
    and 200 through 299 are on the second. You'd like to have that information available
    for analysis.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进一步扩展这个例子，并假设您知道房间的楼层由其编号表示。房间号 100 到 199 在第一层，200 到 299 在第二层。您希望将这些信息用于分析。
- en: We could potentially add this attribute to the source data, but there are times
    when this may not be an option or may not be feasible. You may not have permission
    to change the source data or the source might be a spreadsheet that is automatically
    generated every day, and any changes would be overwritten.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有可能将此属性添加到源数据中，但有时这可能不是一个选项，或者不可行。您可能没有权限更改源数据，或者源数据可能是每天自动生成的电子表格，任何更改都会被覆盖。
- en: 'Instead, you can create a row-level calculation in Tableau to extend the data.
    To do so, create a calculated field named `Floor` with the following code:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，您可以在 Tableau 中创建一个行级别的计算来扩展数据。为此，创建一个名为 `Floor` 的计算字段，使用以下代码：
- en: '[PRE3]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This code uses the `LEFT()` function to return the leftmost character of the
    room. Thus, `112` gives a result of `1`; `207` gives a result of `2`. The `IF
    THEN END` logic allows us to assign a result (either `First Floor` or `Second
    Floor`), depending on which case is true. Notice that you used the `Room` field
    in the calculation, which, in turn, was another calculation.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码使用了 `LEFT()` 函数来返回房间号的最左侧字符。因此，`112` 返回的结果是 `1`；`207` 返回的结果是 `2`。`IF THEN
    END` 逻辑允许我们根据哪个情况为真来分配结果（`第一层` 或 `第二层`）。请注意，您在计算中使用了 `Room` 字段，而该字段本身是另一个计算字段。
- en: Using a reference to a calculated field within another calculation is referred
    to as **nesting.** The calculations that use other calculated fields are called
    **nested** **calculations**. There's no theoretical limit to how many levels of
    nesting you can use, but it may become hard to untangle the logic if you use too
    many levels of nesting.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个计算中引用已计算字段，称为**嵌套**。使用其他已计算字段的计算被称为**嵌套计算**。理论上，您可以使用任意多级的嵌套，但如果使用过多的嵌套层级，可能会让逻辑变得难以理清。
- en: Planning for data variations
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为数据变动做好规划
- en: As you write calculations, consider whether your calculation covers variations
    in the data that are not currently present.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写计算时，请考虑您的计算是否涵盖了当前数据中未出现的变动。
- en: 'A few good questions to ask yourself whenever you write a calculation in Tableau
    are: *What happens if the data changes?* *Does the calculation handle unexpected
    or invalid values?* *Have I covered every case?*'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Tableau 中编写计算时，您可以问自己一些很好的问题：*如果数据发生变化，会发生什么？* *该计算能处理意外或无效的值吗？* *我考虑到了所有的情况吗？*
- en: For example, the preceding floor calculation only works if all the rooms are
    either 100- or 200-level rooms. What if there is a room, 306, on the third floor,
    or a room, 822, on the eighth floor?
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，前面的楼层计算只适用于所有房间都是100级或200级房间的情况。如果存在一个位于三楼的房间306，或者一个位于八楼的房间822，该怎么办？
- en: 'To account for additional cases, we might simplify our calculation to the following:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了考虑更多情况，我们可以将计算简化为以下内容：
- en: '[PRE4]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This code simply returns the leftmost character of the room number. We''ll
    get `3` for `306` and `8` for `822`. But what if we have room numbers such as
    1056 on the tenth floor, and 1617 on the sixteenth? We''d have to consider other
    options, such as the following:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码仅返回房间号的最左侧字符。对于`306`，我们得到`3`；对于`822`，我们得到`8`。但是，如果房间号为十楼的1056，或者十六楼的1617呢？我们需要考虑其他选项，例如：
- en: '[PRE5]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Although this is more complicated, the string functions return a substring that
    starts at the beginning of the string and ends just before the last two characters.
    That gives us floor `10` for `1025`, and floor `18` for `1856`.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这更为复杂，字符串函数会返回一个子字符串，该子字符串从字符串的开头开始，并在倒数第二个字符之前结束。这将为`1025`返回`10`，为`1856`返回`18`。
- en: 'We''ve now considered some row-level calculation examples. Let''s move on to
    the next major type of calculation in Tableau: aggregate-level calculations.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经考虑了一些行级计算的例子。接下来，让我们讨论 Tableau 中的另一个主要计算类型：汇总级别计算。
- en: Aggregate calculations
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 汇总计算
- en: We've already considered aggregations such as `sum`, `min`, and `max` in Tableau.
    Often, you'll use fields as simple aggregations in the view. But sometimes, you'll
    want to use aggregations in more complex calculations.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在 Tableau 中考虑了如`sum`、`min`和`max`等聚合方法。通常，你会将字段作为简单的聚合添加到视图中。但有时，你需要在更复杂的计算中使用聚合方法。
- en: For example, you might be curious to explore the percentage of the rent that
    was discounted. There is no such field in the data. It could not really be stored
    in the source, because the value changes based on the level of detail present
    in the view (for example, the percent discounted for an individual unit will be
    different to the percent discounted per floor or per building). Rather, it must
    be calculated as an aggregate and recalculated as the level of detail changes.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能会好奇探索租金折扣的百分比。在数据中没有这样一个字段。因为该值会根据视图中的详细程度变化（例如，单个单元的折扣百分比会与每层楼或每栋建筑的折扣百分比不同），所以它不能真正存储在源数据中。相反，它必须作为汇总计算，并随着详细程度的变化而重新计算。
- en: 'Let''s create a calculation named `Discount %` with the following code:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`Discount %`的计算，并使用以下代码：
- en: '[PRE6]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This code indicates that the sum of `Discount` should be divided by the sum
    of `Rent`. This means that all the values of `Discount` will be added, and all
    the values of `Rent` will be added. Only after the sums are calculated will the
    division occur.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码表示`Discount`的总和应该除以`Rent`的总和。这意味着所有的`Discount`值将被加总，所有的`Rent`值也将被加总。只有在计算完总和后，才会进行除法运算。
- en: Once you've created the calculation, you'll notice that Tableau treats the new
    field as a **Measure** in the data pane. Tableau will treat any calculation with
    a numeric result as a measure by default, but you can change *row-level calculations*
    to dimensions if desired. In this case, though, you are not even able to redefine
    the new field as a dimension. The reason for this is that Tableau will treat every
    *aggregate calculation* as a measure, no matter what data type is returned. This
    is because an aggregate calculation depends on dimensions to define the level
    of detail at which the calculation is performed. So, an aggregate calculation
    cannot be a dimension itself.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你创建了计算，你会注意到 Tableau 在数据窗格中将新字段视为**度量值**。默认情况下，Tableau 会将任何具有数字结果的计算视为度量值，但如果需要，你也可以将*行级计算*转换为维度。不过，在这种情况下，你甚至无法将新字段重新定义为维度。原因是
    Tableau 会将每个*汇总计算*视为度量值，无论返回的数据类型是什么。这是因为汇总计算依赖于维度来定义执行计算时的详细级别。因此，汇总计算本身不能是维度。
- en: As the value of your calculation is a percentage, you will also likely want
    to define the format as a percentage. To do this, right-click the `Discount %`
    field, select **Default Properties** | **Number Format**, and select **Percentage**.
    You may adjust the number of decimal places that are displayed if desired.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你的计算值是百分比，你可能还希望将格式定义为百分比。为此，右键单击`Discount %`字段，选择**默认属性** | **数字格式**，然后选择**百分比**。如果需要，你可以调整显示的小数位数。
- en: 'Now, create a couple of views to see how the calculation returns different
    results, depending on the level of detail in the view. First, we''ll build a view
    to look at each individual rental period:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，创建几个视图，看看计算如何根据视图的细节层级返回不同的结果。首先，我们将创建一个视图来查看每个单独的租赁周期：
- en: Place **Building**, **Room**, **Full Name**, **Start**, and **End** on **Rows**.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**建筑**、**房间**、**全名**、**开始**和**结束**放置在**行**上。
- en: 'In the data pane, under **Measures**, double-click each of the following fields:
    **Rent**, **Discount**, and **Discount %**. Tableau will place each of these measures
    in the view by using **Measure Names** and **Measure Values**.'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据窗格中，在**度量值**下，双击以下每个字段：**租金**、**折扣**和**折扣百分比**。Tableau 会使用**度量名称**和**度量值**将这些度量值放入视图中。
- en: Rearrange the fields on the **Measure Values** shelf so that the order is **Rent**,
    **Discount**, and **Discount %**:![](img/B16021_04_07.png)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整**度量值**架上的字段顺序，使其顺序为**租金**、**折扣**和**折扣百分比**：![](img/B16021_04_07.png)
- en: 'Figure 4.7: Illustrates the Discount % calculated at the level of Building,
    Room, Full Name, Start, and End'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.7：展示了在建筑、房间、全名、开始和结束层级上计算的折扣百分比
- en: 'You can see the percentage given by way of discount for each rental period.
    However, notice how the values change when you remove all fields except **Building**
    and **Room**:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到每个租赁周期的折扣百分比。然而，注意当你删除所有字段，只保留**建筑**和**房间**时，值会发生变化：
- en: '![](img/B16021_04_08.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_08.png)'
- en: 'Figure 4.8: Illustrates the Discount % calculated at the level of Building
    and Room'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8：展示了在建筑和房间层级上计算的折扣百分比
- en: Why did the values change? Because aggregations depend on what dimensions are
    defining the level of detail of the view. In the first case, **Building** and
    **Room**, **Full Name**, **Start**, and **End** defined the level of detail in
    the view. So, the calculation added up all the rent for each rental period and
    all the discounts for the rental period and then divided them. In the second case,
    **Building** and **Room** redefine the level of detail. So, the calculation added
    up all the prices for each building and room and all the discounts for each building
    and room and then divided them.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么值会发生变化？因为聚合依赖于定义视图细节层级的维度。在第一个案例中，**建筑**和**房间**、**全名**、**开始**和**结束**定义了视图的细节层级。因此，计算将每个租赁周期的租金总和与每个租赁周期的折扣总和相加，然后进行除法运算。在第二个案例中，**建筑**和**房间**重新定义了细节层级。因此，计算将每个建筑和房间的所有价格以及每个建筑和房间的所有折扣加起来，然后进行除法运算。
- en: You may have noticed that as you double-clicked each measure, it was added to
    the pane of the view in a special way. **Measure Names** and **Measure Values**
    are special fields that appear in every data connection (toward the bottom of
    the **Data** pane). These serve as placeholders for multiple measures that share
    the same space in the view.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，当你双击每个度量时，它以特殊的方式添加到视图窗格中。**度量名称**和**度量值**是每个数据连接中都会出现的特殊字段（位于**数据**窗格的底部）。它们作为占位符，用于在视图中共享相同空间的多个度量值。
- en: In the view you just created, for example, three measures all shared space in
    the pane. **Measure Values** on **Text** indicated that all values of measures
    on the **Measure Values** shelf should be displayed as text. The **Measure Names**
    field on **Columns** created a column for each measure, with the value of the
    name of that measure.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在你刚创建的视图中，例如，三个度量值都共享视图窗格的空间。**度量值**在**文本**上显示，表示在**度量值**架上所有度量值的值都应作为文本显示。**度量名称**字段在**列**上为每个度量创建了一列，每列的值为该度量的名称。
- en: 'Notice that the values change again, as expected, if you look at the overall
    dataset without slicing by any dimensions:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果你查看整个数据集而不按任何维度切片，值会再次发生变化，正如预期的那样：
- en: '![](img/B16021_04_09.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_09.png)'
- en: 'Figure 4.9: Illustrates the Discount % calculated at the highest possible level:
    the entire dataset'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9：展示了在最高可能层级（整个数据集）上计算的折扣百分比
- en: An easy way to get Tableau to implement **Measure Names** / **Measure Values**
    is to remember that they are used whenever you want to use *two or more measures
    in the same space* in a view. So, if you want to use two or more measures in the
    pane, drag the first to the pane and then the second. If you want to use two or
    more measures on the same axis, drag the first to the axis, and then drag and
    drop the second on the same spot.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要让 Tableau 实现**度量名称** / **度量值**的一个简单方法是记住，当您希望在视图中使用*两个或更多度量值*时，它们会被使用。因此，如果您想在窗格中使用两个或更多度量值，请先拖动第一个到窗格，然后再拖动第二个。如果您想在同一轴上使用两个或更多度量值，请先将第一个拖动到轴上，然后在同一位置拖放第二个。
- en: Now that you have a basic understanding of row-level and aggregate calculations,
    let's consider why the distinction is important.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您对行级和聚合计算有了基本理解，让我们考虑为什么这种区别很重要。
- en: Why the row level versus aggregate difference matters
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么行级与聚合差异很重要
- en: 'Let''s say you created a `Discount % (row level)` calculation with the following
    code:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您创建了以下代码的`Discount % (row level)`计算：
- en: '[PRE7]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The code differs from the aggregate calculation you created previously, which
    had the following code:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 代码与您之前创建的聚合计算不同，该计算具有以下代码：
- en: '[PRE8]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here is the dramatic difference in results:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示了结果上的戏剧性差异：
- en: '![](img/B16021_04_10.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_10.png)'
- en: 'Figure 4.10: Illustrates the Discount % calculated as a row-level value and
    as an aggregate'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10：展示了按行级值和聚合计算的折扣%。
- en: Why is there such a difference in the results? It's a result of the way the
    calculations were performed.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 结果有这样的差异是为什么？这是计算执行方式的结果。
- en: Notice that `Discount % (row level)` appears on the **Measure Values** shelf
    as a `SUM`. That's because the calculation is a row-level calculation, so it gets
    calculated row by row and then aggregated as a measure after all row-level values
    have been determined. The `54.00%` value you see is actually a sum of percentages
    that were calculated in each record of underlying data.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`Discount % (row level)`显示在**度量值**架上为`SUM`。这是因为计算是行级计算，因此它会逐行计算，然后在确定所有行级值后作为度量聚合。您看到的`54.00%`值实际上是在底层数据的每条记录中计算的百分比之和。
- en: 'In fact, the row-level calculation and the final aggregation is performed like
    this:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，行级计算和最终聚合是这样执行的：
- en: '![](img/B16021_04_11.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_11.png)'
- en: 'Figure 4.11: If each Discount % result is calculated at a row level and then
    aggregated, the result is wrong'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11：如果每个折扣%结果首先在行级计算，然后聚合，结果就是错误的。
- en: 'Contrast that with the way the aggregate calculation is performed. Notice that
    the aggregation that''s listed in the active field on the **Measure Values** shelf
    in the view is `AGG`, and not `SUM`. This indicates that you have defined the
    aggregation in the calculation. Tableau is not aggregating the results further.
    Here is how the aggregate calculation is performed:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 对比聚合计算的执行方式。请注意，在视图中**度量值**架上列出的聚合在活动字段中为`AGG`，而不是`SUM`。这表明您已在计算中定义了聚合。Tableau
    不会进一步聚合结果。聚合计算的执行方式如下：
- en: '![](img/B16021_04_12.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_12.png)'
- en: 'Figure 4.12: If the numerator and denominator are aggregated first, then the
    Discount % calculation is correct'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12：如果分子和分母首先进行聚合，那么折扣%计算是正确的。
- en: It is vital to understand the difference between row-level and aggregate calculations
    to ensure you are getting the results you expect and need. In general, use row-level
    calculations when you are certain that you will use either the value as a dimension
    or that an aggregation of the row-level values will make sense. Use aggregate
    calculations if aggregations must be performed prior to other operations.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 理解行级和聚合计算之间的差异非常重要，以确保您得到预期和所需的结果。通常情况下，当您确定要将值用作维度，或者行级值的聚合将有意义时，请使用行级计算。如果必须在其他操作之前执行聚合，请使用聚合计算。
- en: One of the most common error messages that's encountered while writing Tableau
    calculations is *Cannot mix aggregate and non-aggregate arguments with this function*.
    When you encounter this message, check your code to make sure you are not improperly
    mixing row-level fields and calculations with aggregate fields and calculations.
    For example, you cannot have something like `[Discount] / SUM([Rent])`.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写 Tableau 计算时遇到的最常见错误消息之一是*Cannot mix aggregate and non-aggregate arguments
    with this function*。当您遇到此消息时，请检查您的代码，确保您没有不正确地混合使用行级字段和计算与聚合字段和计算。例如，您不能像`[Discount]
    / SUM([Rent])`这样组合使用。
- en: This mixture of a row-level value `(Discount)` and the aggregation (`SUM` of
    `Rent`) is invalid.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这种行级值（`折扣`）和聚合（`租金`的`SUM`）的混合是无效的。
- en: With the distinction between row-level and aggregate calculations clear, let's
    take an interlude and discuss parameters before building additional examples.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在行级计算和聚合计算之间的区别已经明确之后，让我们稍作休息，讨论一下参数，然后再继续构建其他示例。
- en: Parameters
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参数
- en: Before moving to some additional examples of row-level and aggregate calculations,
    let's take a little side trip to examine parameters, given that they can be used
    in incredible ways in calculations.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续处理一些行级计算和聚合计算的其他示例之前，我们稍微偏离一下，检查一下参数，因为它们可以在计算中以惊人的方式使用。
- en: A **parameter** in Tableau is a placeholder for a single, global value such
    as a number, date, or string. Parameters may be shown as controls (such as sliders,
    drop-down lists, or type-in text boxes) to end users of dashboards or views, giving
    them the ability to change the current value of the parameter. Parameter values
    may even be changed with actions, as you'll see in *Chapter 8*, *Telling a Data
    Story with Dashboards*.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 中的**参数**是一个占位符，用于表示单个全局值，如数字、日期或字符串。参数可以显示为控件（例如滑块、下拉列表或文本框）供仪表板或视图的最终用户使用，让他们能够更改参数的当前值。你甚至可以通过操作来改变参数值，正如你将在*第8章*“使用仪表板讲述数据故事”中看到的那样。
- en: The value of a parameter is global so that if the value is changed, every view
    and calculation in the workbook that references the parameter will use the new
    value. Parameters provide another way to provide rich interactivity to the end
    users of your dashboards and visualizations.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 参数的值是全局的，因此如果值发生变化，工作簿中所有引用该参数的视图和计算都会使用新值。参数提供了另一种向仪表板和可视化的最终用户提供丰富交互性的方法。
- en: 'Parameters can be used to allow anyone interacting with your view or dashboard
    to dynamically do many things, including the following:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 参数可以用来允许与视图或仪表板交互的任何人动态地做很多事情，包括以下操作：
- en: Alter the results of a calculation
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改计算结果
- en: Change the size of bins
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改箱子的大小
- en: Change the number of top or bottom items in a top *n* filter or top *n* set
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改 top *n* 过滤器或 top *n* 集合中顶部或底部项目的数量
- en: Set the value of a reference line or band
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置参考线或带状区域的值
- en: Change the size of bins
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改箱子的大小
- en: Pass values to a custom SQL statement that's used in a data source
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将值传递给用于数据源中的自定义 SQL 语句
- en: Some of these are options we'll consider in later chapters.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些选项我们将在后续章节中讨论。
- en: Since parameters can be used in calculations, and since calculated fields can
    be used to define any aspect of a visualization (from filters to colors to rows
    and columns), the change in a parameter value can have dramatic results. We'll
    see some examples of this in the following sections.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 由于参数可以用于计算，并且计算字段可以用来定义可视化的任何方面（从过滤器到颜色再到行和列），因此参数值的变化可能会带来显著的结果。我们将在接下来的章节中看到一些例子。
- en: Creating parameters
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建参数
- en: Creating a parameter is similar to creating a calculated field.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 创建参数类似于创建计算字段。
- en: 'There are multiple ways to create a parameter in Tableau:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Tableau 中有多种方法来创建参数：
- en: Use the drop-down menu next to **Dimensions** in the data pane and select **Create
    Parameter**.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用数据面板中**维度**旁边的下拉菜单并选择**创建参数**。
- en: Right-click an empty area in the data pane and select **Create Parameter**.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右键单击数据面板中的空白区域并选择**创建参数**。
- en: Use the drop-down menu on a field, set, or parameter already in the data pane
    and select **Create** | **Parameter...**.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用数据面板中已有字段、集合或参数的下拉菜单，并选择**创建** | **参数...**。
- en: In the last case, Tableau will create a parameter with a list of potential values
    based on the **domain** (distinct values) of the field. For fields in the data
    pane that are **discrete** (blue) by default, Tableau will create a parameter
    with a list of values matching the discrete values of the field. For fields in
    the data pane that are **continuous** (green), Tableau will create a parameter
    with a range set to the minimum and maximum values of the field that's present
    in the data.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一种情况下，Tableau 将根据字段的**域**（不同的值）创建一个具有潜在值列表的参数。对于数据面板中默认**离散**（蓝色）的字段，Tableau
    会创建一个包含与字段离散值匹配的值列表的参数。对于数据面板中默认**连续**（绿色）的字段，Tableau 会创建一个参数，其中的范围设置为数据中字段的最小值和最大值。
- en: 'When you first create a parameter (or subsequently edit an existing parameter),
    Tableau will present an interface like this:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 当你首次创建参数（或后续编辑现有参数）时，Tableau 会显示一个类似这样的界面：
- en: '![](img/B16021_04_13.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_13.png)'
- en: 'Figure 4.13: The Create Parameter interface numbered with corresponding descriptions
    below'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13：创建参数界面，下面是对应的描述
- en: 'The interface contains the following features:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 该界面包含以下功能：
- en: '**Name** will show as the default title for parameter controls and will also
    be the reference in calculations. You can also add a **Comment** to describe the
    use of the parameter.'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**名称**将作为参数控件的默认标题显示，并且也将是计算中的参考。您还可以添加**注释**来描述参数的用途。'
- en: '**Data type**defines what type of data is allowed for the value of the parameter.
    Options include integer, float (floating-point decimal), string, Boolean, date,
    or date with time.'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据类型**定义了参数值允许的数据类型。选项包括整数、浮动点数（浮动小数）、字符串、布尔值、日期或带时间的日期。'
- en: '**Current value** defines what the initial default value of the parameter will
    be. Changing this value on this screen or on a dashboard or visualization where
    the parameter control is shown will change the current value.'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**当前值**定义了参数的初始默认值。更改此屏幕上的值或在显示参数控件的仪表板或可视化中更改此值将更改当前值。'
- en: '**Value when workbook opens** allows you to optionally change the default value
    of the parameter when the workbook opens based on a calculated value.'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**工作簿打开时的值**允许您根据计算结果在工作簿打开时更改参数的默认值。'
- en: '**Display format** defines how the values will be displayed. For example, you
    might want to show an integer value as a dollar amount, a decimal as a percentage,
    or display a date in a specific format.'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**显示格式**定义了值将如何显示。例如，您可能希望将整数值显示为金额，将小数显示为百分比，或以特定格式显示日期。'
- en: 'The **Allowable values** option gives us the ability to restrict the scope
    of values that are permissible. There are three options for **Allowable values**:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**允许的值**选项使我们能够限制允许的值的范围。**允许的值**有三种选项：'
- en: '**All**allows any input from the user that matches the data type of the parameter.'
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全部**允许用户输入与参数的数据类型匹配的任何内容。'
- en: '**List** allows us to define a list of values from which the user must select
    a single option. The list can be entered manually, pasted from the clipboard,
    or loaded from a dimension of the same data type.'
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**列表**允许我们定义一个值的列表，用户必须从中选择一个选项。该列表可以手动输入、从剪贴板粘贴或从相同数据类型的维度加载。'
- en: '**Range** allows us to define a range of possible values, including an optional
    upper and lower limit, as well as a step size. This can also be set from a field
    or another parameter.'
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**范围**允许我们定义可能的值范围，包括可选的上限和下限，以及步长。此设置也可以从字段或另一个参数中获取。'
- en: In the example of the preceding screenshot, since we've selected **List** for
    **Allowable values**, we are given options to enter the list of possible values.
    In this example, a list of three items has been entered. Notice that the value
    must match the data type, but the display value can be any string value. You can
    drag and drop values in the list to reorder the list. If **Range** had been selected,
    the screen would instead show options for setting the **Minimum**, **Maximum**,
    and **Step Size** for the range.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前面截图的示例中，由于我们选择了**列表**作为**允许的值**，我们可以输入可能的值列表。在此示例中，已输入了三个项目的列表。请注意，值必须与数据类型匹配，但显示值可以是任何字符串值。您可以拖放列表中的值以重新排序列表。如果选择了**范围**，屏幕将显示设置**最小值**、**最大值**和**步长**的选项。
- en: 'Also specific to **List** are a couple of additional options for populating
    the list:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 特别针对**列表**，有几个附加选项用于填充列表：
- en: '**Fixed**: You may manually enter the values, paste from the clipboard, or
    set them from the existing values of a field in the data. In any case, the list
    will be a static list and will not change even if the data is updated.'
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**固定**：您可以手动输入值、从剪贴板粘贴，或从数据中的现有字段值中设置它们。无论如何，列表将是静态的，即使数据更新，列表也不会更改。'
- en: '**When the workbook opens** allows you to specify a field that will dynamically
    update the list based on the available values for that field when the workbook
    is first opened.'
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当工作簿打开时**允许您指定一个字段，该字段将根据工作簿首次打开时该字段的可用值动态更新列表。'
- en: Click **OK** to save changes to the parameter or **Cancel** to revert.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 单击**确定**以保存参数的更改，或单击**取消**以还原。
- en: 'When the parameter is created, it appears in the data pane in the **Parameters**
    section. The drop-down menu for a parameter reveals an option, **Show Parameter
    Control**, which adds the parameter control to the view. The little drop-down
    caret in the upper right of the parameter control reveals a menu for customizing
    the appearance and behavior of the parameter control. Here is the parameter control,
    shown as a single value list, for the parameter we created earlier:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 创建参数时，它会出现在数据面板的**参数**部分。参数的下拉菜单会显示一个选项，**显示参数控件**，该选项将参数控件添加到视图中。参数控件右上角的小下拉箭头会显示一个菜单，用于自定义参数控件的外观和行为。下面是我们之前创建的参数，作为单一值列表的参数控件：
- en: '![](img/B16021_04_14.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_14.png)'
- en: 'Figure 4.14: The parameter control shown as a single select radio button list'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14：作为单选按钮列表显示的参数控件
- en: This control can be shown on any sheet or dashboard and allows the end user
    to select a single value. When the value is changed, any calculations, filters,
    sets, or bins that use the parameter will be re-evaluated, and any views that
    are affected will be redrawn.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 该控件可以在任何工作表或仪表板上显示，允许最终用户选择一个单一值。当值更改时，任何使用该参数的计算、过滤器、集合或分箱都会重新评估，所有受影响的视图也会被重新绘制。
- en: Next, we'll consider some practical examples that use parameters in calculations.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将考虑一些在计算中使用参数的实际示例。
- en: Practical examples of calculations and parameters
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算和参数的实际示例
- en: Let's turn our attention to some practical examples of row-level and aggregate
    calculations. The goal is to learn and understand some of what is possible with
    calculations. You will be able to build on these examples as you embark on your
    analysis and visualization journey.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们关注一些关于行级和聚合计算的实际示例。目标是学习并理解一些计算所能实现的功能。在你开始分析和可视化之旅时，你可以在这些示例的基础上继续深入。
- en: A great place to find help and suggestions for calculations is the official
    Tableau forums at [https://community.tableau.com/s/explore-forums](https://community.tableau.com/s/explore-forums).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 查找计算帮助和建议的好地方是 Tableau 官方论坛，[https://community.tableau.com/s/explore-forums](https://community.tableau.com/s/explore-forums)。
- en: Fixing data issues
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复数据问题
- en: Often, data is not entirely clean. That is, it has problems that need to be
    corrected before meaningful analysis can be accomplished. For example, dates may
    be incorrectly formatted, or fields may contain a mix of numeric values and character
    codes that need to be separated into multiple fields. Calculated fields can often
    be used to fix these kinds of issues.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，数据并不完全干净。也就是说，它存在一些问题，必须在进行有意义的分析之前加以修正。例如，日期可能格式不正确，或者字段中可能包含需要分离成多个字段的数字值和字符代码的混合。计算字段通常可以用来修复这些问题。
- en: We'll consider using Tableau Prep—a tool designed to shape and cleanse data—in
    *Chapter 14*, *Structuring Messy Data to Work Well in Tableau*. Tableau Prep's
    calculation syntax is nearly identical, so many of the examples in this chapter
    will also be applicable in that context. Knowing how to address data issues in
    either Tableau Desktop or Tableau Prep will help you greatly.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将考虑使用 Tableau Prep——一个旨在整理和清理数据的工具——在*第14章*，*将混乱的数据结构化以便在 Tableau 中良好工作*。Tableau
    Prep 的计算语法几乎相同，因此本章中的许多示例也可以应用于此上下文。在 Tableau Desktop 或 Tableau Prep 中处理数据问题的能力，将对你大有帮助。
- en: 'We''ll continue working with the `Vacation Rentals` data. You''ll recall that
    the start and end dates looked something like this:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续使用 `Vacation Rentals` 数据。你可能还记得，开始和结束日期类似于以下内容：
- en: '| **Start** | **End** |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| **开始** | **结束** |'
- en: '| Dec 2 | Dec 9 |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| 12月2日 | 12月9日 |'
- en: '| Dec 9 | Dec 15 |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 12月9日 | 12月15日 |'
- en: '| Dec 16 | Dec 23 |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| 12月16日 | 12月23日 |'
- en: Without the year, Tableau does not recognize the `Start` or `End` fields as
    *dates*. Instead, Tableau recognizes them as *strings*. You might try using the
    drop-down menu on the fields in the data pane to change the data type to date,
    but without the year, Tableau will almost certainly parse them incorrectly, or
    at least incompletely. This is a case where we'll need to use a calculation to
    fix the issue.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有年份，Tableau 不会将 `Start` 或 `End` 字段识别为*日期*。相反，Tableau 会将它们识别为*字符串*。你可能会尝试使用数据面板中字段的下拉菜单将数据类型更改为日期，但没有年份，Tableau
    几乎肯定会解析错误，或者至少会不完全解析。这是我们需要使用计算来修复问题的情况。
- en: Assuming, in this case, that you are confident the year should always be 2020,
    you might create calculated fields named `Start Date` and `End Date`.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 假设在这种情况下，你确定年份应始终为 2020，你可能会创建名为 `Start Date` 和 `End Date` 的计算字段。
- en: 'Here is the code for getting the start date:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是获取开始日期的代码：
- en: '[PRE9]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'And here is the code for getting the end date:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这是获取结束日期的代码：
- en: '[PRE10]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'What these calculated fields do is concatenate the month and day with the year
    and then use the `DATE()` function to convert the string into a date value. Indeed,
    Tableau recognizes the resulting fields as dates (with all the features of a date
    field, such as built-in hierarchies). A quick check in Tableau reveals the expected
    results:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这些计算字段的作用是将月份和日期与年份拼接起来，然后使用 `DATE()` 函数将字符串转换为日期值。实际上，Tableau 将识别结果字段为日期（具备日期字段的所有功能，比如内置层次结构）。在
    Tableau 中快速检查，可以看到预期的结果：
- en: '![](img/B16021_04_15.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_15.png)'
- en: 'Figure 4.15: The corrected dates appear next to the string versions. All fields
    are discrete dimensions on Rows (the dates are exact dates)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15：修正后的日期显示在字符串版本旁边。所有字段都是行上的离散维度（这些日期是精确日期）。
- en: Not only are we able to fix problems in the data, but we can also extend the
    data and our analysis using calculations. We'll consider this next.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不仅能够修复数据中的问题，还能通过计算扩展数据和分析。接下来，我们将讨论这个问题。
- en: Extending the data
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展数据
- en: Often, there will be dimensions or measures you'd like to have in your data,
    but which are not present in the source. Many times, you will be able to extend
    your dataset using calculated fields. We already considered an example of creating
    a field for the full name of the guest where we only had first and last name fields.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，数据中会有一些你希望包含的维度或度量，但它们在源数据中并不存在。很多时候，你可以通过计算字段扩展数据集。我们已经讨论过一个示例，即创建一个字段来表示客人的全名，而我们原本只有名字和姓氏字段。
- en: Another piece of data that might unlock some truly interesting analysis would
    be the length of each rental. We have the start and end dates, but not the length
    of time between those two dates. Fortunately, this is easy to calculate.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 另一项可能解锁真正有趣分析的数据是每次租赁的时长。我们有开始和结束日期，但没有这两者之间的时间长度。幸运的是，这个计算非常简单。
- en: 'Create a calculated field named `Nights Rented` with the following code:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `Nights Rented` 的计算字段，使用以下代码：
- en: '[PRE11]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tableau employs intelligent code completion. It will offer suggestions for functions
    and field names as you type in the code editor. Pressing the `Tab` key will autocomplete
    what you have started to type based on the current suggestion.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 采用智能代码补全功能。当你在代码编辑器中输入时，它会提供函数和字段名称的建议。按下 `Tab` 键会根据当前的建议自动完成你正在输入的内容。
- en: '![](img/B16021_04_16.png)Figure 4.16: The intelligent code completion will
    suggest possible field names and functions as you type.'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/B16021_04_16.png)图 4.16：智能代码补全功能将在你输入时建议可能的字段名称和函数。'
- en: 'The `DATEDIFF()` function takes a date part description, a start and an end
    date, and returns a numeric value for the difference between the two dates. We
    now have a new measure, which wasn''t available previously. We can use this new
    measure in our visualizations, such as the Gantt chart of rentals, as follows:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '`DATEDIFF()` 函数接受一个日期部分描述、一个开始日期和一个结束日期，并返回两个日期之间差异的数值。现在我们有了一个新的度量值，这是之前没有的。我们可以在可视化中使用这个新的度量值，例如以下租赁的甘特图：'
- en: '![](img/B16021_04_17.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_17.png)'
- en: 'Figure 4.17: The calculated field allows us to create the Gantt chart'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17：计算字段使我们能够创建甘特图
- en: You'll find many ways to extend your data with calculations as you continue
    your journey in Tableau. And that will enable you to accomplish some amazing analysis
    and visualizations. We'll consider some examples next.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续使用 Tableau 的过程中，你将会发现有很多方法可以通过计算扩展数据。这将使你能够进行一些令人惊叹的分析和可视化。接下来，我们将考虑一些示例。
- en: Enhancing user experience, analysis, and visualizations
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提升用户体验、分析和可视化效果
- en: Calculations and parameters can greatly enhance the user experience, the analysis,
    and the visualizations.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 计算和参数可以大大提升用户体验、分析效果以及可视化效果。
- en: Let's say we want to give the vacation condo manager the ability to do some
    what-if analysis. Every year, she offers a free night during the month of December.
    She wants to be able to see which renters would have received the free night,
    depending on which night she chooses.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们希望给度假公寓经理提供一些假设分析的能力。每年，她在 12 月提供一个免费夜晚。她希望能够看到哪些租客会收到免费夜晚，这取决于她选择哪个夜晚。
- en: 'To accomplish this, follow these steps:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现这一点，请按照以下步骤操作：
- en: If you have not done so, create a Gantt chart similar to what was shown earlier
    (following the field placement of the screenshot).
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你还没有做，创建一个与之前显示的类似的甘特图（按照截图中的字段放置）。
- en: Create a parameter called **Free Night** with a data type of **Date** and a
    starting value of `12/12/2020`. This will allow the manager to set and adjust
    the starting date for the promotional month. Show the parameter control by selecting
    **Show Parameter Control** from the drop-down menu on the **Free Night** parameter
    in the data pane.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**免费夜晚**的参数，数据类型为**日期**，起始值为`12/12/2020`。这将允许经理设置和调整促销月的起始日期。通过从数据窗格中的**免费夜晚**参数的下拉菜单中选择**显示参数控制**来显示参数控制。
- en: Now, add a reference line to the view to show the free night. Do this by switching
    to the **Analytics** tab in the left sidebar. Drag **Reference Line** to the view
    and drop it on **Table**:![](img/B16021_04_18.png)
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，向视图中添加一条参考线以显示免费夜晚。方法是切换到左侧边栏中的**分析**标签，拖动**参考线**到视图中，并将其放置在**表格**上：![](img/B16021_04_18.png)
- en: 'Figure 4.18: Add a reference line by switching to the Analytics pane and dragging
    the reference line onto the canvas'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.18：通过切换到分析窗格并将参考线拖到画布上来添加参考线
- en: In the resulting dialog box, set **Line** Value to **Free Night**. You may wish
    to set the **Label** to **None**, or **Custom** with the text `Free Night`. You
    may also wish to adjust the formatting of the line:![](img/B16021_04_19.png)
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在结果对话框中，将**线**值设置为**免费夜晚**。你可能希望将**标签**设置为**无**，或者选择**自定义**并显示`免费夜晚`的文本。你也可以调整线条的格式：![](img/B16021_04_19.png)
- en: 'Figure 4.19: Use the Edit Reference Line dialog to adjust formatting, labels,
    and tooltips'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.19：使用编辑参考线对话框调整格式、标签和工具提示
- en: 'Create a calculated field called **Gets Free Night** that returns a `true`
    or `false` value, depending on whether the free night falls within the rental
    period:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**获取免费夜晚**的计算字段，该字段返回`true`或`false`值，取决于免费夜晚是否在租赁期内：
- en: '[PRE12]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Place this new calculated field on the **Color** shelf.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此新计算字段放置在**颜色**货架上。
- en: 'We now have a view that allows the apartment manager to change the date and
    see a dynamically changing view that makes it obvious which renters would have
    fallen within a given promotional period. Experiment by changing the value of
    the **Free Night** parameter to see how the view updates:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个视图，允许公寓经理更改日期并查看动态变化的视图，这使得哪个租户会落在给定的促销期内变得非常明显。通过更改**免费夜晚**参数的值来进行实验，看看视图如何更新：
- en: '![](img/B16021_04_20.png)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_20.png)'
- en: 'Figure 4.20: The reference line will move, and the affected individuals will
    be recalculated every time you change the Free Night parameter value'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.20：参考线将会移动，每次更改“免费夜晚”参数值时，受影响的个体会重新计算。
- en: The preceding view shows the proposed free night as a dashed line and highlights
    which rental periods would receive a free night. The line and colors will change
    as the apartment manager adjusts the **Free Night** parameter value.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 上述视图显示了提议的免费夜晚（以虚线表示），并突出了哪些租赁期会获得免费夜晚。随着公寓经理调整**免费夜晚**参数的值，线条和颜色会发生变化。
- en: In addition to extending your analysis, visualization, and user experience,
    you might also use calculations to add required business logic. We'll consider
    that next.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 除了扩展分析、可视化和用户体验外，您还可以使用计算来添加所需的业务逻辑。接下来我们将考虑这一点。
- en: Meeting business requirements
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 满足业务需求
- en: Sometimes, data doesn't exactly match what your organization wants. For example,
    the measures in the data may not be the exact metrics required to make key business
    decisions. Or dimension values may need to be grouped according to a certain set
    of rules. Although this kind of business logic is often applied as data is transformed
    or modeled prior to connecting to it with Tableau, you may find cases where you
    need to implement business logic on the fly.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，数据与您的组织需求不完全匹配。例如，数据中的度量可能不是做出关键业务决策所需的确切指标，或者维度值可能需要根据某些规则进行分组。虽然这种业务逻辑通常会在与
    Tableau 连接之前对数据进行转换或建模时应用，但你可能会遇到需要即时实现业务逻辑的情况。
- en: 'In this example, consider that the measure `Rent` is simply the base rent and
    does not include the discount or taxes. Those are separate fields in the data.
    If you needed to analyze the total `Revenue`, you''d need to calculate it. That
    calculation might look something like this:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，假设度量`租金`只是基本租金，不包括折扣或税费。这些是数据中的单独字段。如果你需要分析总`收入`，你需要进行计算。这个计算可能类似于这样：
- en: '[PRE13]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This formula takes the base `Rent`, subtracts the `Discount`, and then adds
    the `Tax per Night` multiplied by the `Nights Rented`. The parentheses aid readability
    but are not required because the multiplication operator, `*`, has higher precedence
    and is evaluated before the addition, `+`.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 这个公式取基础的`Rent`，减去`Discount`，然后加上`每晚税`乘以`租赁夜数`。括号有助于提高可读性，但并不是必需的，因为乘法运算符`*`的优先级高于加法运算符`+`，因此会先进行计算。
- en: Up until now, we've created calculated fields that extend the data source. Sometimes
    you just need a quick calculation to help in a single view. We'll conclude by
    looking at these quick ad hoc calculations.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们创建了扩展数据源的计算字段。有时你只需要一个快速的计算来帮助单个视图。我们将以这些快速的临时计算作为结尾。
- en: Ad hoc calculations
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 临时计算
- en: Ad hoc calculations allow you to add calculated fields to shelves in a single
    view without adding fields to the data pane.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 临时计算允许你在单个视图中将计算字段添加到架上，而无需将字段添加到数据面板。
- en: 'Let''s say you have a simple view that shows the **Revenue per Guest**, like
    this:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个简单的视图，显示**每位客人的收入**，像这样：
- en: '![](img/B16021_04_21.png)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_21.png)'
- en: 'Figure 4.21: The revenue generated from each individual''s stay'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.21：每个个人住宿所产生的收入
- en: 'What if you wanted to quickly highlight any renters who had paid less than
    $1,500? One option would be to create an ad hoc calculation. To do so, simply
    double-click on an empty area of the **Columns**, **Rows**, or **Measure Values**
    cards, or on the empty space of the **Marks** shelf, and then start typing the
    code for a calculation. In this example, we''ve double-clicked the empty space
    on the **Marks** shelf:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想快速突出显示支付少于$1,500的租户呢？一种选择是创建一个临时计算。为此，只需双击**列**、**行**或**度量值**卡片的空白区域，或**标记**架上的空白区域，然后开始输入计算的代码。在这个例子中，我们在**标记**架的空白区域双击了：
- en: '![](img/B16021_04_22.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_22.png)'
- en: 'Figure 4.22: Creating an ad hoc calculation on the Marks card'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.22：在标记卡上创建临时计算
- en: 'Here, we''ve entered code that will return `True` if the sum of `Rent` is less
    than $1,500 and `False` otherwise. Pressing *Enter* or clicking outside the text
    box will reveal a new ad hoc field that can be dragged and dropped anywhere within
    the view. Here, we''ve moved it to the **Color** shelf:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们输入了一个代码，如果`Rent`的总和小于$1,500，则返回`True`，否则返回`False`。按*Enter*键或点击文本框外部，将显示一个新的临时字段，可以将其拖放到视图中的任何位置。在这里，我们将其移动到**颜色**架上：
- en: '![](img/B16021_04_23.png)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_04_23.png)'
- en: 'Figure 4.23: Using the ad hoc calculation on Color'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.23：在颜色上使用临时计算
- en: The ad hoc field is only available within the view and does not show up in the
    data pane. You can double-click the field to edit the code.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 临时字段仅在视图中可用，不会出现在数据面板中。你可以双击该字段来编辑代码。
- en: Dragging and dropping an ad hoc field into the data pane transforms it into
    a regular calculated field that will be available for other views that are using
    that data source.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 将临时字段拖放到数据面板中，会将其转变为常规的计算字段，这些字段将可用于使用该数据源的其他视图。
- en: Having seen a number of practical examples, let's conclude by considering some
    ways to ensure good performance when using calculations.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一些实际示例的展示后，最后我们考虑一些确保在使用计算时保持良好性能的方法。
- en: Performance considerations
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能考虑
- en: When working with a small dataset and an efficient database, you often won't
    notice inefficient calculations. With larger datasets, the efficiency of your
    calculations can start to make a difference to the speed at which a view is rendered.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 当你处理一个小数据集和高效的数据库时，你通常不会注意到计算效率低下。在更大的数据集上，计算效率可能会开始影响视图渲染的速度。
- en: 'Here are some tips for making your calculations as efficient as possible:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些提示，可以帮助你使计算尽可能高效：
- en: 'Boolean and numeric calculations are much faster than string calculations.
    If possible, avoid string manipulation and use aliasing or formatting to provide
    user-friendly labels. For example, don''t write the following code: `IF [value]
    == 1` `THEN "Yes" ELSE "No" END`. Instead, simply write `[value] == 1`, and then
    edit the aliases of the field and set `True` to `Yes` and `False` to `No`.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔和数字计算比字符串计算要快得多。如果可能，避免字符串操作，使用别名或格式化来提供用户友好的标签。例如，别写如下代码：`IF [value] == 1`
    `THEN "Yes" ELSE "No" END`。相反，只需写`[value] == 1`，然后编辑字段的别名，将`True`设置为`Yes`，将`False`设置为`No`。
- en: 'Look for ways to increase the efficiency of a calculation. If you find yourself
    writing a long `IF ELSEIF` statement with lots of conditions, see whether there
    are one or two conditions that you can check first to eliminate the checks of
    all the other conditions. For example, let''s consider simplifying the following
    code:'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找提高计算效率的方法。如果你发现自己在编写一个包含大量条件的长`IF ELSEIF`语句，看看是否有一两个条件可以先检查，以排除其他所有条件的检查。例如，考虑简化以下代码：
- en: '[PRE14]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Notice how the check of type doesn't have to be done for any records where the
    age was less than `1`. That could be a very high percentage of records in the
    dataset.
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，在年龄小于`1`的记录中，不需要对类型进行检查。这可能是数据集中非常大的一部分记录。
- en: Row-level calculations have to be performed for every row of data. Try to minimize
    the complexity of row-level calculations. However, if that is not possible or
    doesn't solve a performance issue, consider the final option.
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行级计算必须对每一行数据进行执行。尽量减少行级计算的复杂性。然而，如果无法做到这一点或无法解决性能问题，可以考虑最终的选项。
- en: When you create a data extract, certain row-level calculations are materialized.
    This means that the calculation is performed once when the extract is created,
    and the results are then stored in the extract. This means that the data engine
    does not have to execute the calculation over and over. Instead, the value is
    simply read from the extract. Calculations that use any user functions, parameters,
    or `TODAY()` or `NOW()`, will not be materialized in an extract as the value necessarily
    changes according to the current user, parameter selection, and system time. Tableau's
    optimizer may also determine whether to materialize certain calculations that
    are more efficiently performed in memory rather than having to read the stored
    value.
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你创建数据提取时，某些行级计算会被物化。这意味着在创建提取时，计算会执行一次，结果会存储在提取中。这样，数据引擎就不必反复执行计算。相反，值将直接从提取中读取。使用任何用户函数、参数或`TODAY()`或`NOW()`的计算将不会在提取中物化，因为其值会根据当前用户、参数选择和系统时间发生变化。Tableau
    的优化器还会判断某些计算是否更有效地在内存中执行，而不是读取存储的值。
- en: When you use an extract to materialize row-level calculations, only the calculations
    that were created at the time of the extract are materialized. If you edit calculated
    fields or create new ones after creating the extract, you will need to optimize
    the extract (use the drop-down menu on the data source or select it from the **Data**
    menu and then select **Extract** | **Optimize** or **Extract** | **Compute Calculations
    Now**).
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用提取物来物化行级计算时，只有在提取时创建的计算会被物化。如果你在创建提取之后编辑了计算字段或创建了新的计算字段，你将需要优化提取（使用数据源上的下拉菜单，或从**数据**菜单中选择并点击**提取**
    | **优化**或**提取** | **立即计算计算字段**）。
- en: As you continue to work with calculations, pay special attention to situations
    where you notice performance issues, and consider whether you can optimize your
    calculations for better results.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续进行计算时，特别注意那些出现性能问题的情况，并考虑是否可以优化计算以获得更好的结果。
- en: Summary
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Calculations open amazing possibilities in Tableau. You are no longer confined
    to the fields in the source data. With calculations, you can extend the data by
    adding new dimensions and measures, fix bad or poorly formatted data, and enhance
    the user experience with parameters for user input and calculations that enhance
    the visualizations.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 计算在 Tableau 中开启了令人惊叹的可能性。你不再局限于源数据中的字段。通过计算，你可以通过添加新的维度和度量来扩展数据，修复错误或格式不正确的数据，并通过参数让用户输入数据，提升可视化效果。
- en: The key to using calculated fields is understanding the four main types of calculations
    in Tableau. Row-level calculations are performed for every row of source data.
    These calculated fields can be used as dimensions or they can be aggregated as
    measures. Aggregate calculations are performed at the level of detail that's defined
    by the dimensions that are present in a view. They are especially helpful, and
    even necessary, when you must first aggregate components of the calculation before
    performing additional operations.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 使用计算字段的关键在于理解 Tableau 中四种主要的计算类型。行级计算对每一行源数据执行。这些计算字段可以作为维度使用，也可以作为度量进行聚合。聚合计算在视图中定义的维度的详细级别上执行。当你必须首先聚合计算的组成部分，然后再执行其他操作时，这些计算尤其有用，甚至是必需的。
- en: 'In the next chapter, we''ll explore the third of the four main types of calculations:
    **Level of Detail calculations**. This will greatly extend your ability to work
    with data and solve all kinds of interesting problems.'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨四种主要计算类型中的第三种：**细节层次计算**。这将极大地提升你处理数据和解决各种有趣问题的能力。
