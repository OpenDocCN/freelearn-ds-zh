- en: Chapter 1. Automating QGIS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 自动化QGIS
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下菜谱：
- en: Installing QGIS for development
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为开发安装QGIS
- en: Using the QGIS Python console
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用QGIS Python控制台
- en: Using Python's ScriptRunner plugin
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Python的ScriptRunner插件
- en: Setting up your QGIS IDE
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置您的QGIS IDE
- en: Debugging QGIS Python scripts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试QGIS Python脚本
- en: Navigating the PyQGIS API
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航PyQGIS API
- en: Creating a QGIS plugin
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建QGIS插件
- en: Distributing a plugin
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分发插件
- en: Building a standalone application
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建独立应用程序
- en: Storing and reading global preferences
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储和读取全局首选项
- en: Storing and reading project preferences
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储和读取项目首选项
- en: Accessing the script path from within your script
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的脚本中访问脚本路径
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: This chapter explains how to configure QGIS for automation using Python. In
    addition to setting up QGIS, we will also configure the free Eclipse **Integrated
    Development Environment** (**IDE**) with the PyDev plugin to make writing, editing,
    and debugging scripts easier. We will also learn the basics of different types
    of QGIS automated Python scripts through the PyQGIS API. Finally, we'll examine
    some core QGIS plugins that significantly extend the capability of QGIS.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了如何使用Python配置QGIS以实现自动化。除了设置QGIS之外，我们还将配置带有PyDev插件的免费Eclipse **集成开发环境**（**IDE**），以便更容易地编写、编辑和调试脚本。我们还将通过PyQGIS
    API学习不同类型的QGIS自动化Python脚本的基础知识。最后，我们将检查一些核心的QGIS插件，这些插件显著扩展了QGIS的功能。
- en: Installing QGIS for development
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为开发安装QGIS
- en: QGIS has a set of Python modules and libraries that can be accessed from the
    Python console within QGIS. However, they can also be accessed from outside QGIS
    to write standalone applications. First, you must make sure that PyQGIS is installed
    for your platform, and then set up some required system environment variables.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS有一套可以从QGIS中的Python控制台访问的Python模块和库。然而，它们也可以从QGIS外部访问以编写独立应用程序。首先，您必须确保为您的平台安装了PyQGIS，然后设置一些必需的系统环境变量。
- en: In this recipe, we will walk you through the additional steps required beyond
    the normal QGIS installation to prepare your system for development. The steps
    for each platform are provided, which also include the different styles of Linux
    package managers.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将向您介绍在正常QGIS安装之外所需的额外步骤，以准备您的系统进行开发。每个平台的步骤都提供，其中包括不同的Linux包管理器样式。
- en: Getting ready
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: QGIS uses slightly different installation methods for Windows, GNU/Linux, and
    Mac OS X. The Windows installers install everything you need for Python development,
    including Python itself.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS针对Windows、GNU/Linux和Mac OS X使用略微不同的安装方法。Windows安装程序安装了Python开发所需的所有内容，包括Python本身。
- en: However, on Linux distributions and Mac OS X, you may need to manually install
    the Python modules for the system installation of Python. On Mac OS X, you can
    download installers for some of the commonly used Python modules with QGIS from
    [http://www.kyngchaos.com/software/python](http://www.kyngchaos.com/software/python).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在Linux发行版和Mac OS X上，您可能需要手动安装Python模块以进行系统Python安装。在Mac OS X上，您可以从[http://www.kyngchaos.com/software/python](http://www.kyngchaos.com/software/python)下载一些常用Python模块的安装程序，与QGIS一起使用。
- en: How to do it
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作
- en: On Linux, you have the option to compile from the source or you can just specify
    the Python QGIS interface to be installed through your package manager.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上，您可以选择从源代码编译，或者您可以通过包管理器指定要安装的Python QGIS接口。
- en: Installing PyQGIS using the Debian package manager
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Debian包管理器安装PyQGIS
- en: 'For Linux distributions based on the Debian Linux package manager, which includes
    Ubuntu and Debian, use the following command in a shell:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于基于Debian Linux包管理器的Linux发行版，包括Ubuntu和Debian，请在shell中使用以下命令：
- en: '[PRE0]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, install the QGIS, PyQGIS, and QGIS GRASS plugins:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，安装QGIS、PyQGIS和QGIS GRASS插件：
- en: '[PRE1]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Installing PyQGIS using the RPM package manager
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用RPM包管理器安装PyQGIS
- en: 'For Linux distributions based on the **Red Hat Package Manager** (**RPM**),
    first update the package manager, as follows:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于基于**Red Hat包管理器**（**RPM**）的Linux发行版，首先更新包管理器，如下所示：
- en: '[PRE2]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, install the packages for the QGIS, PyQGIS, and QGIS GRASS plugins:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，安装QGIS、PyQGIS和QGIS GRASS插件的包：
- en: '[PRE3]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Setting the environment variables
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置环境变量
- en: Now, we must set the `PYTHONPATH` to the PyQGIS directory. At the same time,
    append the path to this directory to the `PATH` variable so that you can use the
    PyQGIS modules with an external IDE.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须将`PYTHONPATH`设置为PyQGIS目录。同时，将此目录的路径追加到`PATH`变量中，以便您可以使用外部IDE使用PyQGIS模块。
- en: Setting the environment variables on Windows
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在Windows上设置环境变量
- en: 'Set the `PYTHONPATH` variable in a command prompt to the `bin` directory of
    the QGIS installation:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符中设置`PYTHONPATH`变量为QGIS安装的`bin`目录：
- en: '[PRE4]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, append QGIS''s `bin` directories to the system''s `PATH` variable:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将QGIS的`bin`目录追加到系统的`PATH`变量中：
- en: '[PRE5]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Setting the environment variables on Linux
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在Linux上设置环境变量
- en: 'Set the `PYTHONPATH` variable in a command prompt to the `bin` directory of
    the QGIS installation:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符中设置`PYTHONPATH`变量为QGIS安装的`bin`目录：
- en: '[PRE6]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, append the QGIS shared library directory to the runtime search path. Note
    that this location can vary depending on your particular system configuration:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将QGIS共享库目录追加到运行时搜索路径中。请注意，此位置可能因您的特定系统配置而异：
- en: '[PRE7]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How it works…
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The QGIS installation process and package managers set up the Python module's
    configuration internal to QGIS. When you use the Python console inside QGIS, it
    knows where all the PyQGIS modules are. However, if you want to use the PyQGIS
    API outside QGIS, using a system Python installation on Windows or Linux, it is
    necessary to set some system variables so that Python can find the required PyQGIS
    modules.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS安装过程和包管理器在QGIS内部设置了Python模块的配置。当您在QGIS内部使用Python控制台时，它知道所有PyQGIS模块的位置。然而，如果您想在QGIS之外使用PyQGIS
    API，在Windows或Linux上使用系统Python安装，则需要设置一些系统变量，以便Python可以找到所需的PyQGIS模块。
- en: There's more…
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This recipe uses the default QGIS paths on each platform. If you aren't sure
    which PyQGIS path is for your system, you can figure this out from the Python
    console in QGIS.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方使用每个平台的默认QGIS路径。如果您不确定哪个PyQGIS路径适用于您的系统，您可以从QGIS中的Python控制台找出这一点。
- en: Finding the PyQGIS path on Windows
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Windows上查找PyQGIS路径
- en: 'The libraries on Windows are stored in a different location than in the case
    of other platforms. To locate the path, you can check the current working directory
    of the Python console:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Windows上的库存储位置与其他平台不同。要定位路径，您可以检查Python控制台当前的工作目录：
- en: Start QGIS.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动QGIS。
- en: Select **Python Console** from the **Plugins** menu, which appears in the lower-right
    corner of the QGIS application window, as shown in the following screenshot:![Finding
    the PyQGIS path on Windows](img/00002.jpeg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从QGIS应用程序窗口的右下角出现的**插件**菜单中选择**Python控制台**，如图所示：![在Windows上查找PyQGIS路径](img/00002.jpeg)
- en: 'Use the `os` module to get the current working directory:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`os`模块获取当前工作目录：
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Verify that the current working directory of the Python console is returned.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证Python控制台当前的工作目录是否返回。
- en: Finding the location of the QGIS Python installation on other platforms
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在其他平台上查找QGIS Python安装的位置
- en: 'Perform the following steps to find the path needed for this recipe on all
    the platforms besides Windows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以找到除Windows之外所有平台所需的路径：
- en: Start QGIS.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动QGIS。
- en: Start the QGIS **Python Console**.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动QGIS **Python控制台**。
- en: 'Use the `sys` module to locate the PyQGIS path:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sys`模块定位PyQGIS路径：
- en: '[PRE9]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Python will return a list of paths.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python将返回一个路径列表。
- en: Find the path that ends in `/python`, which is the location of the Python installation
    used by QGIS
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到以`/python`结尾的路径，这是QGIS使用的Python安装位置
- en: Using the QGIS Python console for interactive control
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用QGIS Python控制台进行交互式控制
- en: The QGIS Python console allows you to interactively control QGIS. You can test
    out ideas or just do some quick automation. The console is the simplest way to
    use the QGIS Python API.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS Python控制台允许您交互式地控制QGIS。您可以测试想法或进行一些快速自动化。控制台是使用QGIS Python API的最简单方式。
- en: How to do it…
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the following steps, we''ll open the QGIS Python console, create a vector
    layer in memory, and display it on the map:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下步骤中，我们将打开QGIS Python控制台，在内存中创建一个矢量图层，并在地图上显示它：
- en: Start QGIS.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动QGIS。
- en: From the **Plugins** menu, select **Python Console**.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**插件**菜单中选择**Python控制台**。
- en: 'The following code will create a point on the map canvas:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码将在地图画布上创建一个点：
- en: '[PRE10]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works…
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'This example uses a `memory` layer to avoid interacting with any data on disk
    or a network to keep things simple. Notice that when we declare the layer type,
    we add the parameter for the **Coordinate Reference System** (**CRS**) as EPSG:4326\.
    Without this declaration, QGIS will prompt you to choose one. There are three
    parts or levels of abstraction to create even a single point on the map canvas,
    as shown here:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例使用一个`内存`图层来避免与磁盘或网络上的任何数据交互，以保持事情简单。请注意，当我们声明图层类型时，我们添加了**坐标参考系统**（**CRS**）参数为
    EPSG:4326。如果没有这个声明，QGIS 将提示您选择一个。创建地图画布上的单个点甚至需要三个部分或抽象级别，如下所示：
- en: First, create a layer that is of the type geometry. Next, set up a data provider
    to accept the data source.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，创建一个几何类型的图层。然后，设置一个数据提供者以接受数据源。
- en: Then, create a generic feature object, followed by the point geometry.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，创建一个通用的要素对象，接着是点几何。
- en: Next, stack the objects together and add them to the map.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，将对象堆叠在一起并将它们添加到地图中。
- en: The layer type is `memory`, meaning that you can define the geometry and the
    attributes inline in the code rather than in an external data source. In this
    recipe, we just define the geometry and skip the defining of any attributes.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图层类型是`内存`，这意味着您可以在代码中而不是在外部数据源中内联定义几何形状和属性。在此配方中，我们只定义几何形状并跳过定义任何属性。
- en: Using the Python ScriptRunner plugin
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python ScriptRunner 插件
- en: The QGIS Python ScriptRunner plugin provides a middle ground for QGIS automation,
    between the interactive console and the overhead of plugins. It provides a script
    management dialog that allows you to easily load, create, edit, and run scripts
    for large-scale QGIS automation.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS Python ScriptRunner 插件为 QGIS 自动化提供了一个中间地带，介于交互式控制台和插件开销之间。它提供了一个脚本管理对话框，允许您轻松加载、创建、编辑和运行脚本，以实现大规模的
    QGIS 自动化。
- en: Getting ready
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Install the **ScriptRunner** plugin using the QGIS plugin manager. Then, run
    the plugin from the **Plugin** menu to open the **ScriptRunner** dialog. Configure
    a default editor to edit scripts using the following steps:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 QGIS 插件管理器安装**ScriptRunner**插件。然后，从**插件**菜单运行插件以打开**ScriptRunner**对话框。按照以下步骤配置默认编辑器以编辑脚本：
- en: Find the gear icon that represents the **ScriptRunner Preferences** settings
    dialog box and click on it.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到代表**ScriptRunner 首选设置**对话框的齿轮图标，并点击它。
- en: In the **General Options** section, check the **Edit Scripts Using:** checkbox.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**常规选项**部分，勾选**使用以下方式编辑脚本**复选框。
- en: Click on the **…** button to browse to the location of a text editor on your
    system.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**…**按钮浏览到您系统上的文本编辑器位置。
- en: Click on the **Open** button.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**打开**按钮。
- en: Click on the **OK** button in the **Preferences** dialog.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**首选项**对话框中点击**OK**按钮。
- en: How to do it…
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: In the **ScriptRunner** dialog, click on the **New Script** icon, as shown in
    the following screenshot:![How to do it…](img/00003.jpeg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**ScriptRunner**对话框中，点击下面的截图所示的**新建脚本**图标：![如何操作…](img/00003.jpeg)
- en: Browse to the directory where you can save your script, name the script, and
    save it.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到可以保存您的脚本的位置，命名脚本，并保存它。
- en: Verify that the new script is loaded in **ScriptRunner**.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证新脚本是否已加载到**ScriptRunner**中。
- en: Right-click (or control-click on a Mac) on the script name in ScriptRunner and
    select **Edit Script in External Editor**.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ScriptRunner 中的脚本名称上右键单击（或在 Mac 上控制单击）并选择**在外部编辑器中编辑脚本**。
- en: 'In the editor, replace the template code with the following code:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器中，将模板代码替换为以下代码：
- en: '[PRE11]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Click on the Run Script icon, which is represented by a green-colored arrow.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击代表绿色箭头的运行脚本图标。
- en: Close the **ScriptRunner** plugin.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**ScriptRunner**插件。
- en: Verify that the memory layer polygon was added to the QGIS map, as shown in
    the following screenshot:![How to do it…](img/00004.jpeg)
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证内存图层多边形是否已添加到 QGIS 地图中，如下面的截图所示：![如何操作…](img/00004.jpeg)
- en: How it works…
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: ScriptRunner is a simple but powerful idea. It allows you to build a library
    of automation scripts and use them from within QGIS, but without the overhead
    of building a plugin or a standalone application. All the Python and system path
    variables are set correctly and inherited from QGIS; however, you must still import
    the QGIS and Qt libraries.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: ScriptRunner 是一个简单但强大的想法。它允许您构建自动化脚本库，并在 QGIS 内部使用它们，但无需构建插件或独立应用程序的开销。所有 Python
    和系统路径变量都设置正确，并从 QGIS 继承；然而，您仍然必须导入 QGIS 和 Qt 库。
- en: Setting up your QGIS IDE
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置您的 QGIS IDE
- en: The Eclipse IDE with the PyDev plugin is cross-platform, has advanced debugging
    tools, and is free.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 配备PyDev插件的Eclipse IDE是跨平台的，具有高级调试工具，并且是免费的。
- en: Note
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can refer to [http://pydev.org/manual_101_install.html](http://pydev.org/manual_101_install.html)
    in order to install PyDev correctly.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以参考[http://pydev.org/manual_101_install.html](http://pydev.org/manual_101_install.html)以正确安装PyDev。
- en: This tool makes an excellent PyQGIS IDE. Eclipse allows you to have multiple
    Python interpreters configured for different Python environments. When you install
    PyDev, it automatically finds the installed system Python installations. On Windows,
    you must also add the Python interpreter installed with PyQGIS. On all platforms,
    you must tell PyDev where the PyQGIS libraries are.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此工具是一个出色的PyQGIS IDE。Eclipse允许您为不同的Python环境配置多个Python解释器。当您安装PyDev时，它将自动找到已安装的系统Python安装。在Windows上，您还必须添加与PyQGIS一起安装的Python解释器。在所有平台上，您都必须告诉PyDev
    PyQGIS库的位置。
- en: Getting ready
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe uses Eclipse and PyDev. You can use the latest version of either
    package that is supported by your operating system. All platforms besides Windows
    rely on the system Python interpreter. So, there is an extra step in Windows to
    add the QGIS Python interpreter.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方使用Eclipse和PyDev。您可以使用操作系统支持的最新版本的任一包。除了Windows之外的所有平台都依赖于系统Python解释器。因此，在Windows上添加QGIS
    Python解释器需要额外的一步。
- en: How to do it…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: The following steps will walk you through how to add the QGIS-specific Python
    interpreter to Eclipse in order to support the running standalone QGIS applications
    or to debug QGIS plugins.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导您如何将QGIS特定的Python解释器添加到Eclipse中，以便支持运行独立的QGIS应用程序或调试QGIS插件。
- en: Adding the QGIS Python interpreter on Windows
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Windows上添加QGIS Python解释器
- en: 'The process used to add the QGIS Python interpreter to Eclipse on Windows is
    different from the process used on Linux. The following steps describe how to
    set up the interpreter on the Windows version of Eclipse:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上添加QGIS Python解释器到Eclipse的过程与在Linux上使用的过程不同。以下步骤描述了如何在Windows版本的Eclipse上设置解释器：
- en: Open Eclipse.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Eclipse。
- en: From the **Window** menu, select **Preferences**. On OS X, you must click on
    the **Eclipse** menu to find the preferences menu.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**窗口**菜单中选择**首选项**。在OS X上，您必须点击**Eclipse**菜单以找到首选项菜单。
- en: In the pane on the left-hand side of the **Preferences** window, click on the
    plus sign next to **PyDev**.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**首选项**窗口的左侧面板中，点击**PyDev**旁边的加号。
- en: From the list of PyDev preferences, select **Interpreter Python**.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从PyDev首选项列表中选择**解释器 Python**。
- en: In the pane labelled Python Interpreters, click on the **New** button.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标记为Python解释器的面板中，点击**新建**按钮。
- en: In the **Select interpreter** dialog, name the interpreter `PyQGIS`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择解释器**对话框中，将解释器命名为`PyQGIS`。
- en: Browse to the location of the QGIS Python interpreter called `python.exe` within
    the `bin` folder of the QGIS program folder. On OS X and Linux, you use can use
    the system Python installation. On Windows, Python is included with QGIS. The
    default location on Windows is `C:\Program Files\QGIS Brighton\bin\python.exe`,
    as shown in the following screenshot:![Adding the QGIS Python interpreter on Windows](img/00005.jpeg)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到QGIS程序文件夹中的`bin`文件夹内名为`python.exe`的QGIS Python解释器位置。在OS X和Linux上，您可以使用系统Python安装。在Windows上，Python包含在QGIS中。Windows上的默认位置如以下截图所示：![在Windows上添加QGIS
    Python解释器](img/00005.jpeg)
- en: When you click on the **OK** button, Eclipse will attempt to automatically add
    every Python library it finds to the Python path for this interpreter configuration.
    We need to control which libraries are added to prevent conflicts. Click on the
    **Deselect All button** and then click on **OK**:![Adding the QGIS Python interpreter
    on Windows](img/00006.jpeg)
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您点击**确定**按钮时，Eclipse将尝试自动将找到的每个Python库添加到该解释器配置的Python路径中。我们需要控制添加哪些库以防止冲突。点击**取消选择全部**按钮，然后点击**确定**：![在Windows上添加QGIS
    Python解释器](img/00006.jpeg)
- en: Eclipse will issue a warning dialog because you haven't selected any core libraries.
    Click on the **Proceed anyways** button, as shown here:![Adding the QGIS Python
    interpreter on Windows](img/00007.jpeg)
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Eclipse将显示一个警告对话框，因为您尚未选择任何核心库。点击**继续**按钮，如以下截图所示：![在Windows上添加QGIS Python解释器](img/00007.jpeg)
- en: Adding the PyQGIS module paths to the interpreter
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将PyQGIS模块路径添加到解释器
- en: 'Apart from adding the Python interpreter, you must also add the module paths
    needed by PyQGIS using the following steps. These steps will require you to switch
    back and forth between QGIS and Eclipse:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 除了添加 Python 解释器外，你还必须使用以下步骤添加 PyQGIS 需要的模块路径。这些步骤将需要你在 QGIS 和 Eclipse 之间来回切换：
- en: Start QGIS.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 QGIS。
- en: Start the QGIS **Python Console** from the **Plugins** menu.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**插件**菜单启动 QGIS **Python 控制台**。
- en: 'Use the `sys` module to locate the PyQGIS Python path, as described in the
    previous recipe, *Setting the environment variables*:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `sys` 模块定位 PyQGIS Python 路径，如前一个食谱中所述，*设置环境变量*：
- en: '[PRE12]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We also want to add the PyQGIS API. Next, find that path using the QGIS **Python
    Console** by typing the following command:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还希望添加 PyQGIS API。接下来，使用 QGIS **Python 控制台**输入以下命令来查找该路径：
- en: '[PRE13]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: For each path in the returned lists, click on the **New Folder** button in Eclipse's
    **Libraries** pane for your QGIS interpreter, and browse to that folder until
    all the paths have been added. If a given folder does not exist on your system,
    simply ignore it, as shown here:![Adding the PyQGIS module paths to the interpreter](img/00008.jpeg)
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于返回列表中的每个路径，在 Eclipse 的 QGIS 解释器**库**面板中点击**新建文件夹**按钮，浏览到该文件夹，直到所有路径都已添加。如果系统上不存在某个文件夹，只需忽略它，如图所示：![将
    PyQGIS 模块路径添加到解释器](img/00008.jpeg)
- en: Click on the **OK** button in the **Preferences** dialog.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**首选项**对话框中点击**确定**按钮。
- en: Adding the PyQGIS API to the IDE
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将 PyQGIS API 添加到 IDE
- en: 'To take full advantage of Eclipse''s features, including code completion, we
    will add the QGIS and Qt4 modules to the PyQGIS Eclipse interpreter preferences.
    The following steps will allow Eclipse to suggest the possible methods and properties
    of QGIS objects as you type; this feature is known as **autocomplete**:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用 Eclipse 的功能，包括代码补全，我们将向 PyQGIS Eclipse 解释器首选项添加 QGIS 和 Qt4 模块。以下步骤将允许
    Eclipse 在你输入时建议 QGIS 对象的可能方法和属性；这个功能被称为**自动完成**：
- en: In the PyDev preferences for the PyQGIS Interpreter, select the **Forced Builtins**
    tab, as shown in the following screenshot:![Adding the PyQGIS API to the IDE](img/00009.jpeg)
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 PyDev 的 PyQGIS 解释器首选项中，选择**强制内置**选项卡，如图所示：![将 PyQGIS API 添加到 IDE](img/00009.jpeg)
- en: Click on the **New** button.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建**按钮。
- en: In the **Builtin to add** dialog, type `qgis`:![Adding the PyQGIS API to the
    IDE](img/00010.jpeg)
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**内置要添加**对话框中，输入 `qgis`：![将 PyQGIS API 添加到 IDE](img/00010.jpeg)
- en: Click on the **OK** button.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮。
- en: Adding environment variables
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加环境变量
- en: You will also need to create a `PATH` variable, which points to the QGIS binary
    libraries, DLLs on Windows, and other libraries needed by QGIS at runtime on all
    platforms.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要创建一个指向 QGIS 二进制库、Windows 上的 DLL 和所有平台在运行时所需的库的 `PATH` 变量。
- en: In the **PyDev preferences** dialog, ensure that the **PyQGIS** interpreter
    is selected in the list of interpreters.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**PyDev 首选项**对话框中，确保在解释器列表中选择了**PyQGIS**解释器。
- en: Select the **Environment** tab.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**环境**选项卡。
- en: Click on the **New** button.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建**按钮。
- en: In the **Name** field, enter **PATH**.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在**名称**字段中，输入**PATH**。
- en: 'For the **Value** field, add the path to the QGIS program directory and to
    any QGIS directories containing binaries separated by a semicolon. The following
    is an example from a Windows machine:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**值**字段中，添加 QGIS 程序目录和包含二进制的任何 QGIS 目录的路径，这些路径由分号分隔。以下是一个来自 Windows 机器的示例：
- en: '[PRE14]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works…
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Eclipse and PyDev use only the information you provide to run a script in the
    Eclipse workspace. This approach is very similar to the popular Python tool **virtualenv**,
    which provides a clean environment when writing and debugging code to ensure that
    you don't waste time troubleshooting issues caused by the environment.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse 和 PyDev 仅使用你提供的信息在 Eclipse 工作区中运行脚本。这种方法与流行的 Python 工具 **virtualenv**
    非常相似，它提供了一个干净的环境，以确保你在编写和调试代码时不会浪费时间在调试由环境引起的问题上。
- en: Debugging QGIS Python scripts
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试 QGIS Python 脚本
- en: In this recipe, we will configure Eclipse to debug QGIS Python scripts.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将配置 Eclipse 以调试 QGIS Python 脚本。
- en: How to do it…
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Both QGIS and Eclipse must be configured for debugging so that the two pieces
    of software can communicate. Eclipse **attaches** itself to QGIS in order to give
    you insights into the Python scripts running in QGIS. This approach allows you
    to run scripts in a controlled way that can pause execution while you monitor
    the program to catch bugs as they occur.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS和Eclipse都必须配置为调试，以便这两款软件能够通信。Eclipse会**附加**到QGIS上，以便您了解在QGIS中运行的Python脚本。这种方法允许您以受控的方式运行脚本，可以在您监控程序以捕获错误时暂停执行。
- en: Configuring QGIS
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 QGIS
- en: The following steps will add two plugins to QGIS, which allows Eclipse to communicate
    with QGIS. One plugin, **Plugin Reloader**, allows you to reload a QGIS plugin
    into memory without restarting QGIS for faster testing. The second plugin, **Remote
    Debug**, connects QGIS to Eclipse.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将为QGIS添加两个插件，这允许Eclipse与QGIS通信。一个插件是**插件重载器**，允许您在不重启QGIS的情况下将QGIS插件重新加载到内存中，以便更快地进行测试。第二个插件是**远程调试**，它将QGIS连接到Eclipse。
- en: '**Remote Debug** is an experimental plugin, so you must ensure that experimental
    plugins are visible to the QGIS plugin manager in the list of available plugins.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**远程调试**是一个实验性插件，因此您必须确保实验性插件在可用插件列表中可见，以便QGIS插件管理器可以访问。'
- en: Start QGIS.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动QGIS。
- en: Under the **Plugins** menu, select **ManageandInstallPlugins**…
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**插件**菜单下，选择**管理并安装插件**…
- en: In the left pane of the **Plugins** dialog, select the **Settings** tab.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**插件**对话框的左侧面板中，选择**设置**选项卡。
- en: Scroll down in the **Settings** window and ensure that the **Show also experimental
    plugins** checkbox is checked, as shown in the following screesnhot:![Configuring
    QGIS](img/00011.jpeg)
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设置**窗口中向下滚动，并确保已勾选**显示实验性插件**复选框，如下截图所示：![配置 QGIS](img/00011.jpeg)
- en: Click on the **OK** button.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮。
- en: Select the tab labeled **All** in the pane on the left-hand side of the **Plugins**
    window.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**插件**窗口左侧的面板中选择标签为**所有**的选项卡。
- en: In the **Search** dialog at the top of the window, search for **Plugin Reloader**.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在窗口顶部的**搜索**对话框中，搜索**插件重载器**。
- en: Select **Plugin Reloader** from the search results and then click on the **Install
    Plugin** button.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从搜索结果中选择**插件重载器**，然后点击**安装插件**按钮。
- en: Next, search for the **Remote Debug** plugin and install it as well.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，搜索**远程调试**插件并安装它。
- en: Finally, install the **HelloWorld** plugin as well.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，安装**HelloWorld**插件。
- en: Configuring Eclipse
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 Eclipse
- en: 'Now that QGIS is configured for debugging in Eclipse, we will configure Eclipse
    to complete the debugging communication loop, as shown in the following steps:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在QGIS已配置为在Eclipse中进行调试，我们将配置Eclipse以完成调试通信循环，具体步骤如下：
- en: Start Eclipse.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Eclipse。
- en: In the **File** menu, select **New** and then click on **Project**.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**文件**菜单中，选择**新建**，然后点击**项目**。
- en: Select **General** and then click on **Project** from the **NewProject** dialog.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**新建项目**对话框中，选择**通用**，然后点击**项目**。
- en: Click on the **Next>** button.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步>**按钮。
- en: Give the project the name **HelloWorldPlugin**.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给项目命名为**HelloWorldPlugin**。
- en: Click on the **Finish** button.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮。
- en: Select the new **HelloWorldPlugin** project in project explorer and select **New**;
    then, click on **Folder** from the **File** menu.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目资源管理器中选择新的**HelloWorldPlugin**项目，然后选择**新建**；接着，从**文件**菜单中选择**文件夹**。
- en: In the **New Folder** dialog, click on the **Advanced>>** button.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**新建文件夹**对话框中，点击**高级>>**按钮。
- en: Choose the **Link to alternate location (Linked Folder)** radio button.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**链接到备用位置（链接文件夹）**单选按钮。
- en: 'Click on the **Browse** button and browse to the location of the `HelloWorldPlugin`
    folder, as shown in the following screenshot:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**浏览**按钮，浏览到`HelloWorldPlugin`文件夹的位置，如下截图所示：
- en: Tip
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can find the location of the HelloWorld plugin from within the QGIS plugin
    manager.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以从QGIS插件管理器中找到HelloWorld插件的存放位置。
- en: '![Configuring Eclipse](img/00012.jpeg)'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![配置 Eclipse](img/00012.jpeg)'
- en: Click on the **Finish** button.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮。
- en: Testing the debugger
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试调试器
- en: 'The previous parts of this recipe configured Eclipse and QGIS to work together
    in order to debug QGIS plugins. In this section, we will test the configuration
    using the simplest possible plugin, **HelloWorld**, to run Eclipse using the **Debug
    Perspective**. We will set up a break point in the plugin to pause the execution
    and then monitor plugin execution from within Eclipse, as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱的前几部分配置了 Eclipse 和 QGIS 以协同工作以调试 QGIS 插件。在本节中，我们将使用最简单的插件 **HelloWorld**
    来测试配置，使用 **Debug Perspective** 运行 Eclipse。我们将在插件中设置一个断点以暂停执行，然后在 Eclipse 内部监控插件执行，如下所示：
- en: Under the `HelloWorld` folder, open the file `HelloWorld.py`.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `HelloWorld` 文件夹下打开文件 `HelloWorld.py`。
- en: From the Eclipse **Window** menu, select **OpenPerspective** and then click
    on **Other…**
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Eclipse **窗口** 菜单中选择 **OpenPerspective**，然后点击 **Other…**
- en: From the **OpenPerspective** dialog, select **Debug**.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **OpenPerspective** 对话框中选择 **调试**。
- en: Click on the **OK** button.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **OK** 按钮。
- en: Scroll to the first line of the `hello_world()` function and double-click on
    the left-hand side of the line number to set a break point, which is displayed
    as a green-icon:![Testing the debugger](img/00013.jpeg)
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到 `hello_world()` 函数的第一行，并在行号左侧双击以设置断点，它显示为绿色图标：![测试调试器](img/00013.jpeg)
- en: From the **Pydev** menu, select **Start Debug Server**.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Pydev** 菜单中选择 **Start Debug Server**。
- en: 'Verify that the server is running by looking for a message in the Debug console
    at the bottom of the window, similar to the following:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在窗口底部的调试控制台中查找类似以下的消息来验证服务器正在运行：
- en: '[PRE15]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Switch over to QGIS.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 QGIS。
- en: From the QGIS **Plugins** menu, select **RemoteDebug** and then select the **RemoteDebug**
    command.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 QGIS **插件** 菜单中选择 **RemoteDebug**，然后选择 **RemoteDebug** 命令。
- en: 'Verify that the QGIS status bar in the lower-left corner of the window displays
    the following message:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证窗口左下角的 QGIS 状态栏显示以下信息：
- en: '[PRE16]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Now, select **HelloWorld** from the QGIS **Plugins** menu and then select **HelloWorld**.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从 QGIS **插件** 菜单中选择 **HelloWorld**，然后选择 **HelloWorld**。
- en: Switch back to Eclipse.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换回 Eclipse。
- en: Verify that the `hello_world()` function is highlighted at the break point.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 `hello_world()` 函数在断点处被突出显示。
- en: From the **Run** menu, select **Resume**.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **运行** 菜单中选择 **继续**。
- en: Switch back to QGIS.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换回 QGIS。
- en: Verify that the **HelloWorld** dialog box has appeared.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 **HelloWorld** 对话框已出现。
- en: How it works…
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The RemoteDebug plugin acts as a client to the PyDev debug server in order to
    send the Python script's execution status from QGIS to Eclipse. While it has been
    around for several versions of QGIS now, it is still considered experimental.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: RemoteDebug 插件作为 PyDev 调试服务器的客户端，用于将 QGIS 中的 Python 脚本执行状态发送到 Eclipse。尽管它已经伴随
    QGIS 几个版本了，但仍被视为实验性的。
- en: The PluginReloader plugin can reset plugins that maintain state as they run.
    The HelloWorld plugin is so simple that reloading is not needed to test it repeatedly.
    However, as you debug more complex plugins, you will need to run it in order to
    reset it before each test. This method is far more efficient and easier to use
    than closing QGIS, editing the plugin code, and then restarting.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: PluginReloader 插件可以重置在运行时维护状态的插件。HelloWorld 插件非常简单，因此不需要重新加载来重复测试。然而，当你调试更复杂的插件时，你需要在每次测试之前运行它以重置它。这种方法比关闭
    QGIS、编辑插件代码然后重新启动要高效得多且易于使用。
- en: Note
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find out more about debugging QGIS, including using other IDEs, at [http://docs.qgis.org/2.6/en/docs/pyqgis_developer_cookbook/ide_debugging.html](http://docs.qgis.org/2.6/en/docs/pyqgis_developer_cookbook/ide_debugging.html).
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [http://docs.qgis.org/2.6/en/docs/pyqgis_developer_cookbook/ide_debugging.html](http://docs.qgis.org/2.6/en/docs/pyqgis_developer_cookbook/ide_debugging.html)
    了解更多关于调试 QGIS 的信息，包括使用其他 IDE。
- en: Navigating the PyQGIS API
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航 PyQGIS API
- en: The QGIS Python API, also known as PyQGIS, allows you to control virtually every
    aspect of QGIS. The ability to find the PyQGIS object you need in order to access
    a particular feature of QGIS is critical to automation.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS Python API，也称为 PyQGIS，允许你控制 QGIS 的几乎所有方面。找到 PyQGIS 对象以便访问 QGIS 的特定功能的能力对于自动化至关重要。
- en: Getting ready
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: The PyQGIS API is based on the QGIS C++ API. The C++ API is kept up to date
    online and is well-documented.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: PyQGIS API 基于 QGIS C++ API。C++ API 在线保持最新，并且有很好的文档记录。
- en: Note
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The QGIS API's web page is located at [http://qgis.org/api/2.6/modules.html](http://qgis.org/api/2.6/modules.html).
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS API 的网页位于 [http://qgis.org/api/2.6/modules.html](http://qgis.org/api/2.6/modules.html)。
- en: Notice the version number, 2.2, in the URL. You can change this version number
    to the version of QGIS you are using in order to find the appropriate documentation.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 注意URL中的版本号，2.2。您可以将此版本号更改为您正在使用的QGIS版本，以便找到适当的文档。
- en: The PyQGIS API documentation is not updated frequently because it is nearly
    identical to the structure of the C++ API. However, the QGIS project on [github.com](http://github.com)
    maintains a list of all the PyQGIS classes for the latest version. The PyQGIS
    2.6 API is located at [https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api](https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: PyQGIS API文档更新不频繁，因为它几乎与C++ API的结构相同。然而，[github.com](http://github.com)上的QGIS项目维护了一个最新版本的PyQGIS类的列表。PyQGIS
    2.6 API位于[https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api](https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api)。
- en: You can locate the documented class in the main C++ API and read about it. Then,
    look up the corresponding Python module and class using the PyQGIS API listing.
    In most cases, the C++ API name for a class is identical in Python.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在主C++ API中找到已记录的类并了解它。然后，使用PyQGIS API列表查找相应的Python模块和类。在大多数情况下，类的C++ API名称与Python中的名称相同。
- en: In this recipe, we'll locate the PyQGIS class that controls labels in QGIS.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们将定位控制QGIS标签的PyQGIS类。
- en: How to do it…
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'We will perform the following steps to see in which PyQGIS module the QGIS
    Label object and QgsLabel are located in:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将执行以下步骤，以查看QGIS标签对象和QgsLabel位于哪个PyQGIS模块中：
- en: Go to the QGIS API page at [http://qgis.org/api/2.6/index.html](http://qgis.org/api/2.6/index.html).
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往QGIS API页面[http://qgis.org/api/2.6/index.html](http://qgis.org/api/2.6/index.html)。
- en: Click on the **Modules** tab.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**模块**标签。
- en: Click on the link **QGIS** **Core** **Library**.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击链接**QGIS** **核心** **库**。
- en: Scroll down the list of modules in alphabetical order until you see **QgsLabel**.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按字母顺序滚动模块列表，直到您看到**QgsLabel**。
- en: Click on the **QgsLabel** link to access the label object documentation.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**QgsLabel**链接以访问标签对象文档。
- en: Now, go to the PyQGIS API listing at [https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api](https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api).
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，前往PyQGIS API列表[https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api](https://github.com/qgis/QGIS/blob/master/python/qsci_apis/Python-2.6.api)。
- en: Scroll down the alphabetical class listing until you see `qgis.core.QgsLabel.LabelField`.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按字母顺序滚动类列表，直到您看到`qgis.core.QgsLabel.LabelField`。
- en: How it works…
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'The QGIS API is divided into five distinct categories, as follows:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS API分为五个不同的类别，如下所示：
- en: Core
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 核心
- en: GUI
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GUI
- en: Analysis
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析
- en: Map composer
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地图编绘
- en: Network analysis
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络分析
- en: Most of the time, it's easy to find the class that targets the functionality
    you need with most of QGIS being contained in the catch-all **Core** module. The
    more you use the API, the quicker you'll be able to locate the objects you need
    for your scripts.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，找到针对您所需功能的类很容易，因为QGIS的大部分功能都包含在通用的**核心**模块中。您使用API的次数越多，您就越快能找到您脚本所需的对象。
- en: There's more…
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: If you're having trouble locating a class containing the keyword you need, you
    can use the search engine on the QGIS API website.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在定位包含所需关键字的类时遇到困难，您可以使用QGIS API网站上的搜索引擎。
- en: Tip
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Beware, however, that the results returned by this search engine may contain
    items you don't need and can even send you looking in the wrong direction because
    of the similar keywords in different modules.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，请注意，此搜索引擎返回的结果可能包含您不需要的项目，甚至可能因为不同模块中相似的关键词而将您引向错误的方向。
- en: Creating a QGIS plugin
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建QGIS插件
- en: Plugins are the best way to extend QGIS, as they can be easily updated and reused
    by other people.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 插件是扩展QGIS的最佳方式，因为它们可以轻松更新并由其他人重用。
- en: Getting ready
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The easiest approach to creating a plugin is to use the **Plugin** **Builder**
    plugin to jumpstart development. You can find it in the main QGIS plugin repository
    and install it.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 创建插件的最简单方法就是使用**插件构建器**插件来快速启动开发。您可以在主QGIS插件仓库中找到它并进行安装。
- en: How to do it…
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps to create a simple plugin that displays a dialog
    box with a custom message:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以创建一个显示自定义消息对话框的简单插件：
- en: Start QGIS.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动QGIS。
- en: From the **Plugins** menu, select **Plugin Builder** and then click on **Plugin
    Builder** under the submenu.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**插件**菜单中选择**插件构建器**，然后在子菜单下点击**插件构建器**。
- en: In the **QGIS Plugin Builder** dialog, name the class `MyPlugin`.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**QGIS插件构建器**对话框中，将类命名为`MyPlugin`。
- en: Name the plugin `My Plugin`.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将插件命名为 `My Plugin`。
- en: Type a short description, such as `A demonstration on building a QGIS Plugin.`
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入简短描述，例如 `一个关于构建 QGIS 插件的演示。`
- en: Enter `myplugin` for the **Module** name.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **模块** 名称输入为 `myplugin`。
- en: Leave the default version numbers as they are.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持默认版本号不变。
- en: Enter `My Plugin` in the **Text for the menu item** field.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **菜单项文本** 字段中输入 `My Plugin`。
- en: Enter your name and email address for author information.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您的姓名和电子邮件地址作为作者信息。
- en: Ensure that the checkbox labelled **Flag the plugin as experimental** is checked,
    as shown in the following screenshot:![How to do it…](img/00014.jpeg)
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保选中了标记为 **将插件标记为实验性** 的复选框，如图所示：![如何操作…](img/00014.jpeg)
- en: Click on the **OK** button.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **确定** 按钮。
- en: 'A file browser dialog will appear; you can choose a folder in which you want
    to create your plugin. Select one of the folders called `plugins` within the `python`
    folder in either the main user directory or the QGIS program directory. The following
    examples are from a Windows machine. You should use the folder in your user directory,
    which is the preferred place for third-party plugins. QGIS standard plugins go
    in the main program directory:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会出现一个文件浏览器对话框；您可以选择一个文件夹来创建您的插件。在主用户目录或 QGIS 程序目录中的 `python` 文件夹中的 `plugins`
    文件夹中选择一个文件夹。以下示例来自 Windows 机器。您应该使用用户目录中的文件夹，这是第三方插件的推荐位置。QGIS 标准插件位于主程序目录中：
- en: '[PRE17]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Close the follow-on **Plugin Builder** information dialog by clicking on the
    **OK** button.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 **确定** 按钮关闭后续的 **插件构建器** 信息对话框。
- en: Using the command prompt, navigate to your new plugin template folder.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令提示符，导航到您的新插件模板文件夹。
- en: 'Use the `pyrcc4` command to compile the resource file:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `pyrcc4` 命令编译资源文件：
- en: '[PRE18]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Tip
  id: totrans-258
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you are on Windows, it is important to use the OSGEO4W shell, which is installed
    along with QGIS, for the Qt compilation tools to work properly.
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您使用的是 Windows，则非常重要，需要使用与 QGIS 一起安装的 OSGEO4W shell，以确保 Qt 编译工具能够正常工作。
- en: In a text editor, such as Windows Notepad or vi on Linux, open the user interface
    XML file named `myplugin_dialog_base.ui`.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中，例如 Windows 记事本或 Linux 上的 vi，打开名为 `myplugin_dialog_base.ui` 的用户界面 XML
    文件。
- en: 'Insert the following XMLfor a custom label near line 31 and just before the
    last `</widget>` tag. Save the file after this edit:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第 31 行附近，在最后一个 `</widget>` 标签之前插入以下 XML 以创建自定义标签。编辑后保存文件：
- en: '[PRE19]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, compile the `ui` file using the `pyuic4` tool:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用 `pyuic4` 工具编译 `ui` 文件：
- en: '[PRE20]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Your plugin is now ready. Restart QGIS.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的插件现在已准备就绪。重新启动 QGIS。
- en: Select **My Plugin** from the **Plugins** menu and then select **My Plugin**
    from the submenu to see the dialog you created within QGIS, as shown here:![How
    to do it…](img/00015.jpeg)
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **插件** 菜单中选择 **My Plugin**，然后从子菜单中选择 **My Plugin**，以查看 QGIS 中创建的对话框，如图所示：![如何操作…](img/00015.jpeg)
- en: How it works…
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: This recipe shows you the bare bones needed to make a working plugin. Although
    we haven't altered it, the code for the plugin's behavior is contained in `myplugin.py`.
    You can change the icon and the GUI, and just recompile any time you want. Note
    that we must compile the `Qt4` portion of the plugin, which creates the dialog
    box. The entire QGIS GUI is built on the `Qt4` library, so the `pyrrc4` compiler
    and `pyuic4` is included to compile the GUI widgets.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方展示了制作一个工作插件所需的基本内容。尽管我们没有对其进行修改，但插件行为的代码包含在 `myplugin.py` 中。您可以更改图标和 GUI，并且随时重新编译。请注意，我们必须编译插件的
    `Qt4` 部分，这会创建对话框。整个 QGIS GUI 都是建立在 `Qt4` 库之上的，因此 `pyrrc4` 编译器和 `pyuic4` 包含在内以编译
    GUI 小部件。
- en: You can download the completed plugin with both the source and compiled `ui`
    and resource files at [https://geospatialpython.googlecode.com/svn/MyPlugin.zip](https://geospatialpython.googlecode.com/svn/MyPlugin.zip).
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 [https://geospatialpython.googlecode.com/svn/MyPlugin.zip](https://geospatialpython.googlecode.com/svn/MyPlugin.zip)
    下载包含源代码和编译后的 `ui` 和资源文件的完整插件。
- en: Note
  id: totrans-270
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find out more about QGIS plugins, including the purpose of the other
    files in the directory, in the QGIS documentation at [http://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/plugins.html](http://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/plugins.html).
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 QGIS 文档中找到更多关于 QGIS 插件的信息，包括目录中其他文件的目的，请参阅 [http://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/plugins.html](http://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/plugins.html)。
- en: There's more…
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多信息…
- en: We have edited the `myplugin_dialog_base.ui` XML file by hand to make a small
    change. However, there is a better way to use Qt Creator. Qt Creator is a fully-fledged,
    open source GUI designer for the Qt framework. It is an easy what-you-see-is-what-you-get
    editor for Qt Widgets, including PyQGIS plugins, which uses the included Qt Designer
    interface. On Windows, Qt Designer can be found in the QGIS program directory
    within the `bin` directory. It is named `designer.exe`. On other platforms, Qt
    Designer is included as part of the qt4-devel package.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经手动编辑了 `myplugin_dialog_base.ui` XML 文件以进行一些小的修改。然而，使用 Qt Creator 有更好的方法。Qt
    Creator 是一个完整的开源 GUI 设计器，用于 Qt 框架。它是一个易于使用的所见即所得编辑器，用于 Qt Widgets，包括 PyQGIS 插件，它使用包含的
    Qt Designer 接口。在 Windows 上，Qt Designer 可以在 QGIS 程序目录中的 `bin` 目录下找到。它被命名为 `designer.exe`。在其他平台上，Qt
    Designer 作为 qt4-devel 软件包的一部分提供。
- en: Note
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: You can also download Qt Creator, which includes Qt Designer, from [http://qt-project.org/downloads](http://qt-project.org/downloads).
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从 [http://qt-project.org/downloads](http://qt-project.org/downloads) 下载
    Qt Creator，其中包含 Qt Designer。
- en: When you run the installer, you can uncheck all the installation options, except
    the **Tools** category to install just the IDE.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行安装程序时，您可以取消选中所有安装选项，除了 **工具** 类别，以仅安装 IDE。
- en: Distributing a plugin
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分发插件
- en: Distributing a QGIS plugin means placing the collection of files on a server
    as a `ZIP` file, with a special configuration file, in order to allow the QGIS
    plugin manager to locate and install the plugin. The QGIS project has an official
    repository, but third-party repositories are also permitted. The official repository
    is very strict regarding how the plugin is uploaded. So, for this recipe, we'll
    set up a simple third-party repository for a sample plugin and test it with the
    QGIS plugin manager to avoid polluting the main QGIS repository with a test project.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 分发 QGIS 插件意味着将文件集合作为一个 `ZIP` 文件放置在服务器上，并包含一个特殊的配置文件，以便 QGIS 插件管理器能够定位和安装插件。QGIS
    项目有一个官方仓库，但也允许第三方仓库。官方仓库对插件的上传方式非常严格。因此，对于这个配方，我们将为示例插件设置一个简单的第三方仓库，并使用 QGIS 插件管理器进行测试，以避免将测试项目污染主
    QGIS 仓库。
- en: Getting ready
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In order to complete this recipe, you'll need a sample plugin and a web-accessible
    directory. You'll also need a `zip` tool such as the free 7-zip program ([http://www.7-zip.org/download.html](http://www.7-zip.org/download.html)).
    You can use the *MyPlugin* example from the *Creating a QGIS plugin* recipe as
    the plugin to distribute. For a web directory, you can use a Google Code repository,
    GitHub repository, or an other online directory you can access. Code repositories
    work well because they are a good place to store a plugin that you are developing.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这个配方，您需要一个示例插件和一个可公开访问的网络目录。您还需要一个 `zip` 工具，例如免费的 7-zip 程序 ([http://www.7-zip.org/download.html](http://www.7-zip.org/download.html))。您可以使用
    *Creating a QGIS plugin* 配方中的 *MyPlugin* 示例作为要分发的插件。对于网络目录，您可以使用 Google Code 仓库、GitHub
    仓库或您可以访问的其他在线目录。代码仓库工作得很好，因为它们是存储您正在开发的插件的好地方。
- en: How to do it…
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the following steps, we will package our plugin, create a server configuration
    file for it, and place it on a server to create a QGIS plugin repository:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下步骤中，我们将打包我们的插件，为其创建一个服务器配置文件，并将其放置在服务器上以创建一个 QGIS 插件仓库：
- en: First, zip up the plugin directory to create a `.ZIP` file.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，将插件目录压缩成 `.ZIP` 文件。
- en: 'Rename the `.ZIP` file to contain the plugin''s version number:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `.ZIP` 文件重命名为包含插件版本号：
- en: '[PRE21]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Upload this file to a publicly accessible web directory.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件上传到公开可访问的网络目录。
- en: Upload the `icon.png` file from your plugin directory to the web directory.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的插件目录中的 `icon.png` 文件上传到网络目录。
- en: 'Next, customize a `plugins.xml` metadata file for your plugin. Most of the
    data you need can be found in the `metatdata.txt` file in your plugin directory.
    The following example provides some guidance:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，为您的插件自定义一个 `plugins.xml` 元数据文件。您需要的绝大多数数据都可以在插件目录中的 `metatdata.txt` 文件中找到。以下示例提供了一些指导：
- en: '[PRE22]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Upload the `plugins.xml` file to your web directory.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `plugins.xml` 文件上传到您的网络目录。
- en: Now, start QGIS and launch the plugins manager by going to the **Plugins** menu
    and selecting **Manage and Install Plugins…**.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，启动 QGIS 并通过访问 **插件** 菜单并选择 **管理并安装插件…** 来启动插件管理器。
- en: In the **Settings** tab of the **plugins settings** dialog, scroll down and
    click on the **Add…** button.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **插件设置** 对话框的 **设置** 选项卡中，向下滚动并点击 **添加…** 按钮。
- en: Give the plugin a name and then add the complete URL to your `plugins.xml` in
    the URL field.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给插件起一个名字，然后在 URL 字段中添加您 `plugins.xml` 的完整 URL。
- en: Click on the **OK** button.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮。
- en: To make things easier, disable the other repositories by selecting the repository
    name, clicking on the **Edit** button, and unchecking the **Enable** checkbox.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使事情更简单，通过选择存储库名称，点击**编辑**按钮，并取消选择**启用**复选框来禁用其他存储库。
- en: Click on the **OK** button.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮。
- en: Click on the **Not Installed** tab.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**未安装**选项卡。
- en: Your test plugin should be the only plugin listed, so select it from the list.
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的测试插件应该是列表中唯一的插件，因此从列表中选择它。
- en: Click on the **Install Plugin** button in the bottom-right corner of the window.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击窗口右下角的**安装插件**按钮。
- en: Click on the **Close** button.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**关闭**按钮。
- en: Go to the **Plugins** menu and select your plugin to ensure that it works.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**插件**菜单并选择您的插件以确保它正常工作。
- en: How it works…
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The QGIS repository concept is simple and effective. The `plugins.xml` file
    contains a `download_url` tag that points to a `ZIP` file plugin on the same server
    or on a different server. The `name` attribute of the `pyqgis_plugin` tag is what
    appears in the QGIS plugin manager.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS 存储库的概念简单而有效。`plugins.xml` 文件包含一个指向同一服务器或不同服务器上 `ZIP` 文件插件的 `download_url`
    标签。`pyqgis_plugin` 标签的 `name` 属性在 QGIS 插件管理器中显示。
- en: Creating a standalone application
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建独立应用程序
- en: QGIS is a complete desktop GIS application. However, with PyQGIS, it can also
    be a comprehensive geospatial Python library to build standalone applications.
    In this recipe, we will build a simple standalone script that creates a map with
    a line on it.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS 是一个完整的桌面 GIS 应用程序。然而，通过 PyQGIS，它也可以成为一个全面的地理空间 Python 库，用于构建独立应用程序。在这个菜谱中，我们将构建一个简单的独立脚本，该脚本创建一个带有线条的地图。
- en: Getting ready
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: All you need to do to get ready is ensure that you have configured Eclipse and
    PyDev for PyQGIS development, as described in the *Setting up your QGIS IDE* recipe.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备，您需要确保已经按照 *设置您的 QGIS IDE* 菜谱中描述的配置了 Eclipse 和 PyDev 以进行 PyQGIS 开发。
- en: How to do it…
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In PyDev, create a new project called `MyMap` with a Python script called `MyMap.py`,
    as follows:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PyDev 中，创建一个名为 `MyMap` 的新项目，包含一个名为 `MyMap.py` 的 Python 脚本，如下所示：
- en: In the Eclipse **File** menu, select **New** and then click on **PyDev Project**.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Eclipse 的**文件**菜单中，选择**新建**然后点击**PyDev 项目**。
- en: In the PyDev project's **Name** field, enter `MyMap`.
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 PyDev 项目的**名称**字段中，输入 `MyMap`。
- en: Next, select the **Python** radio button from the **Project Type** list.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从**项目类型**列表中选择**Python**单选按钮。
- en: From the **Interpreter** pull-down menu, select **PyQGIS**.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**解释器**下拉菜单中选择**PyQGIS**。
- en: Leave the radio button checked for **Add project directory to the PYTHONPATH**.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持**将项目目录添加到 PYTHONPATH**单选按钮选中。
- en: Click on the **Finish** button.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮。
- en: Now, select the project in the PyDev package explorer.
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 PyDev 包资源管理器中选择项目。
- en: From the **File** menu, select **New** and then click on **File**.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**文件**菜单中选择**新建**，然后点击**文件**。
- en: Name the file `myMap.py`.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件命名为 `myMap.py`。
- en: Click on the **Finish** button.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮。
- en: 'Add the following code to the file that is open in the editor:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到编辑器中打开的文件：
- en: '[PRE23]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: From the **Run** menu, select **Run**.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**运行**菜单中选择**运行**。
- en: Verify that the standalone QGIS map appears in a new window, as shown here:![How
    to do it…](img/00016.jpeg)
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认独立的 QGIS 地图在新窗口中显示，如图所示：![如何操作…](img/00016.jpeg)
- en: How it works…
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: This recipe uses as little code as possible to create a map canvas and to draw
    a line in order to demonstrate the skeleton of a standalone application, which
    can be built up further to add more functionality.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 这个菜谱尽可能少地使用代码来创建地图画布并绘制线条，以展示独立应用程序的骨架，可以进一步构建以添加更多功能。
- en: To create the line geometry, we use **Well-Known Text** (**WKT)**, which provides
    a simple way to define the line vertices without creating a bunch of objects.
    Towards the end of this code, we use a workaround for a bug in QGIS 2.2 by **freezing**
    the canvas. When the canvas is frozen, it does not respond to any events which,
    in the case of this bug, prevent the canvas from updating. Once we refresh the
    canvas, we unfreeze it and then repaint it to draw the line. This workaround will
    still work in QGIS 2.4 and 2.6 but is not necessary.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建线条几何形状，我们使用**已知文本**（**WKT**），它提供了一种简单的方法来定义线条顶点，而无需创建大量对象。在这段代码的末尾，我们通过**冻结**画布来解决
    QGIS 2.2 中的一个错误。当画布被冻结时，它不会响应用户事件，在这种情况下，这阻止了画布更新。一旦我们刷新画布，我们解冻它并重新绘制它以绘制线条。这个解决方案在
    QGIS 2.4 和 2.6 中仍然有效，但不是必需的。
- en: There's more...
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'The standalone application can be compiled into an executable that can be distributed
    without installing QGIS, using py2exe or PyInstaller:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 独立的应用程序可以编译成可执行文件，无需安装 QGIS，使用 py2exe 或 PyInstaller：
- en: You can find our more about py2exe at [http://www.py2exe.org](http://www.py2exe.org).
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [http://www.py2exe.org](http://www.py2exe.org) 了解更多关于 py2exe 的信息。
- en: You can learn more about PyInstaller at [https://github.com/pyinstaller/pyinstaller/wiki](https://github.com/pyinstaller/pyinstaller/wiki).
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://github.com/pyinstaller/pyinstaller/wiki](https://github.com/pyinstaller/pyinstaller/wiki)
    了解更多关于 PyInstaller 的信息。
- en: Storing and reading global preferences
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储和读取全局首选项
- en: PyQGIS allows you to store application-level preferences and retrieve them.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: PyQGIS 允许您存储应用程序级别的首选项并检索它们。
- en: Getting ready
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This code can be run in any type of PyQGIS application. In this example, we'll
    run it in the QGIS Python console for an easy demonstration. In this example,
    we'll change the default CRS for new projects and then read the value back from
    the global settings.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码可以在任何类型的 PyQGIS 应用程序中运行。在这个例子中，我们将运行它以进行简单的演示。在这个例子中，我们将更改新项目的默认坐标参考系统（CRS），然后从全局设置中读取该值。
- en: How to do it…
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In this recipe, we will set the default projection used by QGIS for new projects
    using the Python console:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将使用 Python 控制台设置 QGIS 用于新项目的默认投影：
- en: Start QGIS.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 QGIS。
- en: From the **Plugins** menu, select **Python Console**.
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **插件** 菜单中选择 **Python 控制台**。
- en: 'We will need to import the Qt core library, as follows:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要导入 Qt 核心库，如下所示：
- en: '[PRE24]'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'In the Python console, run the following code:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Python 控制台中，运行以下代码：
- en: '[PRE25]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: How it works…
  id: totrans-343
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: This API is actually the Qt API that QGIS relies on for settings. In the QSettings
    object, we specify the NativeFormat for storage, which is the default format for
    the platform. On Windows, the format is the registry; on OS X, it's the `plist`
    files; and on Unix, it's the text files. The other QSettings parameters are the
    **organization** and the **application**, often used as a hierarchy to store information.
    Note that even after changing these settings, it may be that none of the properties
    in the QGIS GUI change immediately. In some cases, such as Windows, the system
    must be restarted for registry changes to take effect. However, everything will
    work programmatically.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 此 API 实际上是 QGIS 依赖的 Qt API，用于设置。在 QSettings 对象中，我们指定存储的 NativeFormat，这是平台的默认格式。在
    Windows 上，格式是注册表；在 OS X 上，是 `plist` 文件；在 Unix 上，是文本文件。其他 QSettings 参数是 **组织**
    和 **应用程序**，通常用作存储信息的层次结构。请注意，即使更改了这些设置，QGIS GUI 中的某些属性也可能不会立即更改。在某些情况下，例如 Windows，必须重新启动系统才能使注册表更改生效。然而，一切都将通过编程方式工作。
- en: There's more…
  id: totrans-345
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: If you want to see all the options that you can change, call the `allKeys()`
    method of QSettings; this will return a list of all the setting names.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想查看可以更改的所有选项，请调用 QSettings 的 `allKeys()` 方法；这将返回所有设置名称的列表。
- en: Storing and reading project preferences
  id: totrans-347
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储和读取项目首选项
- en: The QGIS application settings are stored using the Qt API. However, QGIS project
    settings have their own object. In this recipe, we'll set and read the project
    title and then set and read a custom preference for a plugin.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS 应用程序设置使用 Qt API 存储。然而，QGIS 项目设置有自己的对象。在这个食谱中，我们将设置和读取项目标题，然后设置和读取一个插件的自定义首选项。
- en: Getting ready
  id: totrans-349
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We are going to set a plugin preference using the sample plugin created in the
    previous recipe, *Creating a QGIS plugin*. You can substitute the name of any
    plugin you want, however. We will also run this recipe in the QGIS Python console
    for quick testing, but this code will normally be used in a plugin.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用之前创建的示例插件 *创建 QGIS 插件* 来设置插件首选项。您也可以替换您想要的任何插件名称。我们还将在这个 QGIS Python 控制台中运行此食谱以进行快速测试，但此代码通常用于插件中。
- en: How to do it…
  id: totrans-351
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: In this recipe, we will first write and then read the title of the current project.
    Then, we will create a custom value for a plugin called `splash`, which can be
    used for the plugin startup splash screen if desired.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们首先将写入并读取当前项目的标题。然后，我们将为名为 `splash` 的插件创建一个自定义值，如果需要，可以用于插件的启动动画屏幕。
- en: Start QGIS.
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 QGIS。
- en: From the **Plugins** menu, select **Python Console**.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **插件** 菜单中选择 **Python 控制台**。
- en: 'In the console, run the following code:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制台中，运行以下代码：
- en: '[PRE26]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: How it works…
  id: totrans-357
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: In the first two lines, we change the title of the current active project and
    then echo it back. In the next set of two lines, we set up and read custom settings
    for a plugin. Notice that the `readEntry()` method returns a tuple with the desired
    text and a boolean, acknowledging that the value is set. So, we extract the first
    index to get the text. The read method also allows the default text in case that
    property is not set (rather than throw an exception which must be handled) as
    well as the boolean value `False` to inform you that the default text was used
    because the property was not set. The values you set using this method are stored
    in the project's XML file when you save it.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两行中，我们更改了当前活动项目的标题，然后将其回显。在下一组两行中，我们为插件设置了自定义设置并读取了它们。请注意，`readEntry()` 方法返回一个包含所需文本和布尔值的元组，确认该值已设置。因此，我们提取第一个索引以获取文本。读取方法还允许在属性未设置的情况下使用默认文本（而不是抛出必须处理的异常），以及布尔值
    `False` 来通知你，由于属性未设置，使用了默认文本。使用此方法设置的值在保存项目时存储在项目的 XML 文件中。
- en: There's more…
  id: totrans-359
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: The `QgsProject` object has a number of methods and properties that may be useful.
    The QGIS API documentation details all of them at [http://qgis.org/api/2.6/classQgsProject.html](http://qgis.org/api/2.6/classQgsProject.html).
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '`QgsProject` 对象有多个方法和属性可能很有用。QGIS API 文档详细介绍了它们在[http://qgis.org/api/2.6/classQgsProject.html](http://qgis.org/api/2.6/classQgsProject.html)。'
- en: Accessing the script path from within your script
  id: totrans-361
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你的脚本中访问脚本路径
- en: Sometimes, you need to know exactly where the current working directory is so
    that you can access external resources.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，你需要确切地知道当前的工作目录在哪里，这样你才能访问外部资源。
- en: Getting ready
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This code uses the Python built-in library and can be used in any context. We
    will run this recipe in the QGIS Python console.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码使用 Python 内置库，可以在任何上下文中使用。我们将在这个 QGIS Python 控制台中运行这个菜谱。
- en: How to do it…
  id: totrans-365
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In this recipe, we will get the current working directory of the Python console,
    which can change with configuration:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将获取 Python 控制台当前的工作目录，它可能会随着配置而改变：
- en: Start QGIS.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 QGIS。
- en: From the **Plugins** menu, select **Python Console**.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **插件** 菜单中选择 **Python 控制台**。
- en: 'In the Python console, run the following code:'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Python 控制台中，运行以下代码：
- en: '[PRE27]'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How it works…
  id: totrans-371
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: QGIS relies heavily on file system paths to run the application and to manage
    external data. When writing cross-platform QGIS code, you cannot assume the working
    directory of your script.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS 严重依赖于文件系统路径来运行应用程序和管理外部数据。当编写跨平台的 QGIS 代码时，你不能假设你的脚本的工作目录。
- en: There's more…
  id: totrans-373
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: On his blog, one of the QGIS developers has an excellent post about the various
    aspects of path variables in QGIS beyond just the execution directory; you can
    check it out at [http://spatialgalaxy.net/2013/11/06/getting-paths-with-pyqgis/](http://spatialgalaxy.net/2013/11/06/getting-paths-with-pyqgis/).
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 在他的博客上，一位 QGIS 开发者有一篇关于 QGIS 中路径变量各个方面的优秀文章，而不仅仅是执行目录；你可以在[http://spatialgalaxy.net/2013/11/06/getting-paths-with-pyqgis/](http://spatialgalaxy.net/2013/11/06/getting-paths-with-pyqgis/)查看。
