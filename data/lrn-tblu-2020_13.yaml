- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Understanding the Tableau Data Model, Joins, and Blends
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Tableau数据模型、连接和混合
- en: In this chapter, we'll gain a deeper understanding of how to model and structure
    data with Tableau. We've seen the **Data Source** screen in previous chapters
    and briefly explored how to drag and drop tables to form relationships. Now, we'll
    explore some of Tableau's more complex features to gain a good understanding of
    how Tableau allows you to relate multiple tables together, either logically or
    physically.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入了解如何使用Tableau建模和构建数据。我们在之前的章节中已经看到过**数据源**界面，并简要了解了如何通过拖放表格来建立关系。现在，我们将探索一些Tableau的复杂功能，以便深入了解Tableau如何允许你以逻辑或物理方式将多个表格关联在一起。
- en: We'll start with a broad overview of Tableau's new data model and then examine
    some details of different types of joins and blends. The data model and blending
    apply primarily to Tableau Desktop (and Server), but pay special attention to
    the discussion of joins, as a good understanding of join types will aid you greatly
    when we discuss Tableau preparation in *Chapter 15*, *Taming Data with Tableau
    Prep*.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先对Tableau的新数据模型进行广泛的概述，然后详细研究不同类型的连接和混合。数据模型和混合主要适用于Tableau Desktop（和Server），但请特别注意连接的讨论，因为对连接类型的良好理解将对我们在*第15章*《使用Tableau
    Prep整理数据》中的Tableau准备工作有很大帮助。
- en: The data model is only available in Tableau 2020.2 and later. If you are using
    an older version, the explanation of joins and blends will be directly applicable,
    while the explanation of the data model will serve as inspiration for you to upgrade!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据模型仅在Tableau 2020.2及更高版本中可用。如果你使用的是旧版本，连接和混合的解释将直接适用，而数据模型的解释将为你提供升级的灵感！
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Explanation of the sample data used in this chapter
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章使用的示例数据解释
- en: Exploring the Tableau data model
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Tableau数据模型
- en: Using joins
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用连接
- en: Using blends
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用混合
- en: When to use a data model, joins, or blends
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用数据模型、连接或混合
- en: We'll start by understanding the sample dataset included in the workbook for
    this chapter. This is so that you have a good foundation of knowledge before working
    through the examples.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先了解本章工作簿中包含的示例数据集。这是为了让你在进行示例操作之前，建立一个良好的知识基础。
- en: Explanation of the sample data used in this chapter
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本章使用的示例数据解释
- en: 'For this chapter, we''ll use a sample dataset of patient visits to the hospital.
    The data itself is contained in the Excel file `Hospital Visits.xlsx` in the `Learning
    Tableau\Chapter 13` directory. The tabs of the Excel file represent tables of
    data, just as you might find in any relational database as multiple files, or
    simply as literal tabs in an Excel file! The relationship between those tables
    is illustrated here:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们将使用一个包含患者就诊记录的示例数据集。数据本身存储在`Hospital Visits.xlsx`的Excel文件中，该文件位于`Learning
    Tableau\Chapter 13`目录下。Excel文件中的标签代表数据表，就像你在任何关系型数据库中可能会看到的多个文件一样，或者仅仅是Excel文件中的标签！这些表格之间的关系在这里进行了说明：
- en: '![](img/B16021_13_01.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_01.png)'
- en: 'Figure 13.1: The four tabs of the Excel file illustrated as four tables with
    relationships'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1：Excel文件的四个标签以四个具有关系的表格形式展示
- en: 'Excel does not explicitly define the relationships, but they are shown here
    as they might exist in a relational database using foreign key lookups. Here is
    a brief explanation of the tables and their relationships:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Excel并没有明确定义表之间的关系，但这里展示了它们可能在关系型数据库中通过外键查找的形式存在。下面是对这些表及其关系的简要说明：
- en: '**Hospital Visit**: This is the primary table that records the admission and
    diagnosis of a single patient on a single visit to the hospital. It contains attributes,
    such as **Admit Type** and **Location**, and a measure of **Minutes to Service**.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**医院就诊**：这是记录单个患者在一次就诊中入院和诊断信息的主表。它包含诸如**入院类型**、**地点**等属性，以及**服务等待时间（分钟）**的度量。'
- en: '**Patient**: This table contains additional information for a single patient,
    such as their **Name** and **Birthdate**, and a measure of their **Age at Most
    Recent Admit**.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**患者**：此表包含单个患者的附加信息，如**姓名**、**出生日期**以及其**最近入院时的年龄**的度量。'
- en: '**Discharge Details**: This table gives additional information for the discharge
    of a patient, such as the **Discharge Date** and the **Disposition** (the condition
    under which they were discharged and where they went after being discharged).
    It also contains a measure **How did the patient feel about care? (1-10)** that
    ranks the patient''s feelings about the level of care, with 1 being the lowest
    and 10 being the highest.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**出院详情**：此表提供了有关患者出院的额外信息，如 **出院日期** 和 **处置**（患者出院条件及离开医院后的去向）。它还包含一个度量 **患者对护理感受如何？（1-10）**，其中1表示最低，10表示最高。'
- en: '**Patient & Doctor Interaction**: Thistable defines the interaction between
    a patient and a doctor during the visit. It includes the **Doctor Name**, **Notes**,
    and measures how long the doctor spent with the patient (**Minutes spent with
    Patient**).'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**患者与医生互动**：此表定义了患者在就诊期间与医生之间的互动。它包括 **医生姓名**、**备注** 和衡量医生与患者共度时间的度量（**与患者共度时间（分钟）**）。'
- en: 'The tables relate to each other in different ways. Here are some details:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些表以不同的方式相互关联。以下是一些详细信息：
- en: '**Hospital Visit** to **Patient**: Each visit has a single patient, so **Hospital
    Visit** will always have a **Patient ID** field that points to a single record
    in the **Patient** table. We will also find additional patients in the **Patient**
    table who do not have recorded visits. Perhaps they are historical records from
    a legacy system or the patient''s interaction with the hospital occurred in a
    manner other than a visit.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**住院就诊** 到 **患者**：每次就诊都有一个单独的患者，因此 **住院就诊** 将始终有一个指向 **患者** 表中单个记录的 **患者 ID**
    字段。我们也会在 **患者** 表中找到其他没有记录就诊的患者。也许它们是来自遗留系统的历史记录，或者患者与医院的互动方式并非通过就诊。'
- en: '**Hospital Visit** to **Discharge Details**: Each visit may have a single discharge,
    but some patients may still be in the hospital. In a well-designed data structure,
    we should be able to count on a record in the **Discharge Details** table that
    indicates "still in the hospital." In our Excel data, however, there may or may
    not be a **Discharge Details ID**, meaning there won''t always be a matching **Discharge
    Details** record for every **Hospital Visit**.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**住院就诊** 到 **出院详情**：每次就诊可能只有一个出院记录，但某些患者可能仍然在医院内。在良好设计的数据结构中，我们应该能够依靠 **出院详情**
    表中的记录来指示“仍在医院”。然而，在我们的 Excel 数据中，可能会有或没有 **出院详情 ID**，这意味着并不总是会有一个匹配的 **出院详情**
    记录与每次 **住院就诊** 相对应。'
- en: '**Patient & Doctor Interaction** to **Hospital Visit**: Throughout the patient''s
    visit, there may be one or more doctors who interact with a patient. It''s also
    possible that no doctor records any interaction. So, we''ll sometimes find multiple
    records in the **Patient & Doctor Interaction** that reference a single **Visit
    ID**, sometimes only a single record, and sometimes no records at all for a visit
    that exists in the **Hospital Visit** table.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**患者与医生互动** 到 **住院就诊**：在患者的就诊过程中，可能会有一个或多个医生与患者互动。也可能没有医生记录任何互动。因此，在 **患者与医生互动**
    中，我们有时会找到多条记录参考单个 **就诊 ID**，有时只有一条记录，有时在 **住院就诊** 表中存在就诊但没有任何记录。'
- en: With a solid grasp of the sample data source, let's turn our attention to how
    we might build a data model in Tableau.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握了示例数据源后，让我们转向如何在 Tableau 中构建数据模型。
- en: Exploring the Tableau data model
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Tableau 数据模型
- en: You'll find the data model as a new feature in Tableau 2020.2 and later. Every
    data source will use the data model. Data sources created in previous versions
    will be updated to the data model but will be contained in a single object, so,
    functionally, they will work in the same way as the previous version.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Tableau 2020.2 及更高版本中，您将会发现数据模型作为一个新功能。每个数据源都将使用数据模型。在之前的版本中创建的数据源将会被更新为数据模型，但它们将被包含在一个单一的对象中，因此在功能上，它们将与之前的版本相同地运行。
- en: Previous versions of Tableau allow you to leverage joining tables and blending
    data sources together, and we'll consider those options at the end of this chapter.
    For now, we'll look at creating a data model and understanding the paradigm.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 的早期版本允许您利用连接表和混合数据源，我们将在本章末尾考虑这些选项。现在，我们将专注于创建数据模型并理解这种范式。
- en: Creating a data model
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建数据模型
- en: We've briefly looked at the **Data Source** screen in *Chapter 2*, *Connecting
    to Data in Tableau*. Now, we'll take a deeper look at the concepts behind the
    interface. Feel free to follow along with the following example in the `Chapter
    13 Starter.twb` workbook, or examine the end results in `Chapter 13 Complete.twbx`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*第 2 章*中简要查看了**数据源**屏幕，*在 Tableau 中连接数据*。现在，我们将深入探讨界面背后的概念。你可以随时跟随 `Chapter
    13 Starter.twb` 工作簿中的示例，或者查看 `Chapter 13 Complete.twbx` 中的最终结果。
- en: 'We''ll start by creating a connection to the `Hospital Visits.xlsx` file in
    the `Chapter 13` directory. The **Data Source** screen will look like this upon
    first connecting to the file:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先创建与`Hospital Visits.xlsx`文件的连接，该文件位于`Chapter 13`目录中。首次连接到文件时，**数据源**屏幕将如下所示：
- en: '![](img/B16021_13_02.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_02.png)'
- en: 'Figure 13.2: The Data Source screen lists the tabs in the Excel workbook and
    invites you to start a data model'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2：数据源屏幕列出了 Excel 工作簿中的标签，并邀请你开始构建数据模型。
- en: We'll build the data model by dragging and dropping tables onto the canvas.
    We'll add all four tables. Tableau will suggest relationships for each new table
    added based on any matching field names and types. For our tables, we'll accept
    the default settings because the `ID` fields that indicate the correct relationship
    are identically named and typed.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过拖放表格到画布上来构建数据模型。我们将添加所有四个表。Tableau 会根据任何匹配的字段名称和类型为每个新添加的表建议关系。对于我们的表，我们将接受默认设置，因为指示正确关系的`ID`字段具有相同的名称和类型。
- en: 'The first table added is the root and forms the start of the data model. In
    this example, the order in which you add the tables won''t matter, though you
    may notice a slightly different display depending on which table you start with.
    In the following screenshot, we''ve started with **Hospital Visit** (which is
    the primary table and, therefore, makes sense to be the root table) and then added
    all of the other tables:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个添加的表是根表，构成数据模型的起点。在这个例子中，添加表格的顺序并不重要，尽管你可能会注意到，取决于你从哪个表开始，显示效果会略有不同。在以下截图中，我们从**住院就诊**（这是主要表，因此作为根表是合理的）开始，然后添加了其他所有表：
- en: '![](img/B16021_13_03.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_03.png)'
- en: 'Figure 13.3: All tables have been added to the data model'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3：所有表格都已添加到数据模型中。
- en: You'll notice the **Edit Relationship** dialog box is open for the relationship
    between **Hospital Visit** and **Patient**. Tableau automatically created our
    relationships because the ID fields had the same name and type between both tables.
    If necessary, you could manually edit the relationships to change which fields
    define the relationship.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到**编辑关系**对话框已打开，用于**住院就诊**和**患者**之间的关系。Tableau 自动创建了我们的关系，因为两个表中的 ID 字段具有相同的名称和类型。如果需要，你可以手动编辑这些关系，改变哪些字段定义了关系。
- en: A **relationship** simply defines which fields connect the tables together.
    It does not define exactly how the tables relate to each other. We'll discuss
    the concepts of join types (for example, left join or inner join) later on in
    this chapter, but relationships are not restricted to a certain join type. Instead,
    Tableau will use the appropriate kind of join as well as the correct aggregations
    depending on which fields you use in your view. For the most part, you won't have
    to think about what Tableau is doing behind the scenes, but we'll examine some
    unique behaviors in the next section.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**关系**仅定义了连接表格的字段，而没有定义表格之间的具体关系。我们将在本章后面讨论连接类型的概念（例如，左连接或内连接），但关系不限于某种连接类型。相反，Tableau
    会根据你在视图中使用的字段，选择合适的连接类型以及正确的聚合方式。在大多数情况下，你无需关心 Tableau 在背后做了什么，但我们将在下一节探讨一些独特的行为。'
- en: The ability to write calculations to define relationships is not available in
    2020.2, but is a feature in 2020.3.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2020.2 版本中，无法编写计算来定义关系，但在 2020.3 版本中这是一个功能。
- en: 'Also, notice the **Performance Options** drop-down menu in the relationship
    editor, as shown here:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请注意关系编辑器中的**性能选项**下拉菜单，如下所示：
- en: '![](img/B16021_13_04.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_04.png)'
- en: 'Figure 13.4: The Edit Relationship dialog box includes options to improve performance'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4：编辑关系对话框包含提高性能的选项。
- en: These performance options allow Tableau to generate more efficient queries if
    the nature of the relationship is known. If you do not know the exact nature of
    the relationship, it is best to leave the options in their default settings as
    an incorrect setting can lead to incorrect results.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这些性能选项允许 Tableau 在已知关系性质的情况下生成更高效的查询。如果你不知道关系的确切性质，最好保持默认设置，因为不正确的设置可能导致错误的结果。
- en: 'There are two basic concepts covered by the performance options:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 性能选项涉及的两个基本概念：
- en: '**Cardinality**: This term indicates how many records in one table could potentially
    relate to the records of another table. For example, we know that one visit matches
    to only one patient. However, we also know that manydoctors could potentially
    interact with a patient during one visit.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基数**：这个术语指示一个表中的多少记录可能与另一个表中的记录相关。例如，我们知道一次就诊只对应一个患者。然而，我们也知道在一次就诊中，可能有许多医生会与患者互动。'
- en: '**Referential Integrity**: This term indicates whether we expect all records
    to find a match or whether some records could potentially be unmatched. For example,
    we know (from the preceding description) that there are patients in the **Patient**
    table that will not have a match in the **Hospital Visit** table. We also know
    that some patients will not have discharge records as they are still in the hospital.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参照完整性**：这个术语指示我们是否期望所有记录都能找到匹配项，或者是否某些记录可能无法匹配。例如，我们知道（根据前面的描述）**患者**表中有些患者在**住院记录**表中没有匹配项。我们还知道有些患者可能没有出院记录，因为他们仍然在医院里。'
- en: If Tableau is able to determine constraints from a relational database, those
    constraints will be used. Otherwise, Tableau will set the defaults to **Many**
    and **Some records match**. For the examples in this chapter, we do know the precise
    nature of the relationships (they are described in the previous section), but
    we'll accept the performance defaults as the dataset is small enough that there
    won't be any perceptible performance gain in modifying them.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Tableau 能够从关系型数据库中确定约束条件，它将使用这些约束。否则，Tableau 会将默认设置为**多对多**和**某些记录匹配**。对于本章中的示例，我们确实知道关系的确切性质（它们在前一节中已描述），但由于数据集足够小，修改这些设置不会带来明显的性能提升，因此我们将接受默认的性能设置。
- en: With our initial data model created, let's take a moment to explore the two
    layers of the data model paradigm.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建了初始数据模型后，花点时间探索数据模型范式的两层结构。
- en: Layers of the data model
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据模型的层次
- en: 'A data model consists of two layers:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 数据模型由两层组成：
- en: 'The **logical layer**: A semantic layer made up of logical tables or objects
    that are related. Each logical table might be made up of one or more physical
    tables.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑层**：由相关的逻辑表或对象组成的语义层。每个逻辑表可能由一个或多个物理表组成。'
- en: 'The **physical layer**: A layer made up of the physical tables that come from
    the underlying data source. These tables may be joined or unioned together with
    conventional joins or unions or created from custom SQL statements.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**物理层**：由来自底层数据源的物理表组成的层。这些表可以通过常规的连接或联合操作连接或联合在一起，或通过自定义 SQL 语句创建。'
- en: 'Consider the following screenshot of a canvas containing our four tables:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看以下包含我们四个表的画布截图：
- en: '![](img/B16021_13_05.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_05.png)'
- en: 'Figure 13.5: The logical layer of the data model'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.5：数据模型的逻辑层
- en: 'This initial canvas defines the **logical tables** of the data model. A logical
    table is a collection of data that defines a single structure or object that relates
    to other logical structures of data. Double-click on the **Hospital Visit** table
    on the canvas, and you''ll see another layer beneath the logical layer:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个初始画布定义了数据模型的**逻辑表**。逻辑表是定义单一结构或对象的数据集合，这些结构或对象与其他逻辑数据结构相关。双击画布上的**住院记录**表，你将看到逻辑层下方的另一个层次：
- en: '![](img/B16021_13_06.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_06.png)'
- en: 'Figure 13.6: The physical layer of the physical tables that make up Hospital
    Visit'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.6：构成住院记录的物理表的物理层
- en: This is the physical layer for the logical **Hospital Visit** table. This physical
    layer is made up of physical tables of data—potentially unioned or joined together.
    In this case, we are informed that **Hospital Visit is made of 1 table**. So,
    in this case, the logical layer of **Hospital Visit** is identical to the physical
    layer underneath. In the *Using joins* section of this chapter, we'll explore
    examples of how we might extend the complexity of the physical layer with multiple
    tables while still treating the collection of tables as a single object.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是逻辑**医院访问**表的物理层。这个物理层由数据的物理表组成——可能是联合或连接在一起的。在这种情况下，我们知道**医院访问由1个表组成**。所以，在这种情况下，**医院访问**的逻辑层与下面的物理层是相同的。在本章的*使用连接*部分，我们将探讨如何通过多个表来扩展物理层的复杂性，同时仍将这些表的集合视为一个单一对象。
- en: Go ahead and close the physical layer of **Hospital Visit** with the **X** icon
    in the upper-right corner. Then navigate to the **Analysis** tab of the workbook
    for this chapter, and we'll explore how the data model works in practice.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在请点击右上角的**X**图标，关闭**医院访问**的物理层。然后转到本章工作簿的**分析**标签，我们将探索数据模型如何在实践中工作。
- en: Using the data model
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用数据模型
- en: For the most part, working with the data model will be relatively intuitive.
    If you've worked with previous Tableau versions, you'll notice some slight interface
    changes, and there are a few data model behaviors you should learn to expect.
    Once you are comfortable with them, your analysis will exceed expectations!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分情况下，使用数据模型将会相对直观。如果你曾使用过之前版本的Tableau，你会注意到一些细微的界面变化，并且有些数据模型的行为需要你去习惯。一旦你熟悉了这些，你的分析将超出预期！
- en: The new data pane interface
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 新的数据面板界面
- en: 'One thing you may notice is the difference in the **Data** pane, which will
    look something like this:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到**数据**面板的不同之处，它看起来大致是这样的：
- en: '![](img/B16021_13_07.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_07.png)'
- en: 'Figure 13.7: The Data pane is organized by logical tables and shows a separation
    of dimensions and measures per table'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7：数据面板按逻辑表格组织，并显示每个表格中的维度和度量的分隔
- en: You'll notice that the **Data** pane is organized by logical tables, with fields
    belonging to each table. Measures and dimensions are separated by a thin line
    rather than appearing in different sections as they did previously. This makes
    it easier to find the fields relevant to your analysis and also helps you to understand
    the expected behavior of the data model. Also different from previous versions
    is that each logical table has its own `number of records` field that is named
    using the convention **Table Name (Count)**. You'll find the calculations you
    can add along with **Measure Names**/**Measure Values** at the bottom of the list
    of fields.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，**数据**面板按照逻辑表格组织，每个表格中包含的字段都被列出。度量和维度通过一条细线进行分隔，而不像以前那样出现在不同的部分。这使得查找与分析相关的字段变得更加容易，也有助于你理解数据模型的预期行为。与之前的版本不同的是，每个逻辑表都有一个`记录数量`字段，字段名遵循**表名
    (Count)**的命名规则。你还可以在字段列表的底部找到可以添加的计算以及**度量名称**/**度量值**。
- en: Following this overview of some of the UI changes, let's look at some behaviors
    you can expect from the data model.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在概览了UI的一些变化后，让我们来看一下你可以预期的数据模型行为。
- en: Data model behaviors
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据模型行为
- en: In the **Analysis** tab of the `Starter` workbook, experiment with creating
    different visualizations. Especially note dimensions, what values are shown, and
    how measures are aggregated. We'll walk through a few examples to illustrate (which
    you can replicate in the `Starter` workbook or examine in the `Complete` workbook).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Starter`工作簿的**分析**标签中，尝试创建不同的可视化效果。特别注意维度、显示的值以及度量的聚合方式。我们将通过几个示例进行讲解（你可以在`Starter`工作簿中复制这些示例，或者在`Complete`工作簿中查看）。
- en: 'First, notice that dragging **Name** from the **Patient** table to **Rows**
    reveals 10 patients. It turns out that not all of these patients have hospital
    visits, but when we use one or more dimensions from the same logical table, we
    see the full domain of values in Tableau. That is, we see all the patients, whether
    or not they had visited the hospital. We can verify how many visits each patient
    had by adding the **Hospital Visit (Count)** field, resulting in the following
    view:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，注意到将**姓名**从**病人**表拖到**行**中，会显示10个病人。结果发现，并不是所有病人都有住院记录，但当我们使用来自同一逻辑表的一个或多个维度时，我们会看到Tableau中的完整值域。也就是说，我们会看到所有病人，无论他们是否有过住院记录。我们可以通过添加**住院记录（数量）**字段来验证每个病人的就诊次数，得到以下视图：
- en: '![](img/B16021_13_08.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_08.png)'
- en: 'Figure 13.8: All patients are shown, even those with 0 visits'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.8：所有病人都被显示出来，甚至是那些没有就诊的病人
- en: 'But if we add **Primary Diagnosis** to the table, notice that only 6 out of
    the 10 patients are shown:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果我们在表格中加入**初步诊断**，注意到只有10个病人中的6个被显示出来：
- en: '![](img/B16021_13_09.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_09.png)'
- en: 'Figure 13.9: Only patients with visits are shown; most patients had a single
    visit with a given diagnosis, but one came in twice with the same diagnosis'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.9：只显示有就诊记录的病人；大多数病人只有一次就诊记录且诊断相同，但有一位病人做了两次同样的诊断
- en: 'This highlights another behavior: when you include dimensions from two or more
    tables, only matching values are shown. In essence, when you add **Name** and
    **Primary Diagnosis**, Tableau is showing you patients who exist in both the **Patient**
    and **Hospital Visit** tables. This is great if you want to focus on only patients
    who had visited the hospital.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这突显了另一个行为：当你从两个或更多表格中包含维度时，只有匹配的值才会显示。本质上，当你添加**姓名**和**初步诊断**时，Tableau会展示那些同时存在于**病人**和**住院记录**表中的病人。如果你只想关注曾经去过医院的病人，这是很有用的。
- en: 'But what if you truly want to see all patients and a diagnosis where applicable?
    To accomplish that, simply add a measure from the table of the field where you
    want to see the full domain. In this case, we could add either the **Age at Most
    Recent Admit** or **Patient (Count)** measures, as both come from the **Patient**
    table. Doing so results in the following view:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 那么如果你真的想看到所有病人以及适用的诊断呢？为了实现这一点，只需从表格中添加你想查看完整领域的字段的度量。在这个例子中，我们可以添加**最近一次住院年龄**或**病人（数量）**度量，因为它们都来自**病人**表。这样做会得到如下视图：
- en: '![](img/B16021_13_10.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_10.png)'
- en: 'Figure 13.10: All patients are once again shown'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.10：所有病人再次显示出来
- en: 'Even though the **Age at Most Recent Admit** value is `NULL` for patients who
    have never been admitted, simply adding the measure to the view instructs Tableau
    to show all patients. This demonstrates a third behavior: including a measure
    from the same table as a dimension will force Tableau to show the full domain
    of values for that dimension.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管**最近一次住院年龄**对那些从未住院的病人来说是`NULL`，但只需将该度量添加到视图中，Tableau就会显示所有病人。这展示了第三个行为：从与维度相同的表格中包含度量将迫使Tableau展示该维度的完整值域。
- en: 'Another basic principle of data model behavior is also displayed here. Notice
    that **Age at Most Recent Admit** is shown for each patient and each diagnosis.
    However, Tableau does not incorrectly duplicate the value in totals or subtotals.
    If you were to add subtotals for each patient in the **Age at Most Recent Admit**
    and **Count of Hospital Visit** columns, as has been done in the following view,
    you''ll see that Tableau has the correct values:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这里还展示了数据模型行为的另一个基本原则。请注意，**最近一次住院年龄**显示了每个病人和每个诊断的值。然而，Tableau不会错误地在总计或小计中重复显示该值。如果你为每个病人在**最近一次住院年龄**和**住院记录数量**列中添加小计，正如以下视图所示，你会看到Tableau已经计算出了正确的值：
- en: '![](img/B16021_13_11.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_11.png)'
- en: 'Figure 13.11: Tableau calculates the subtotals correctly, even though traditional
    join behavior would have duplicated the values'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.11：即使传统的连接行为会重复显示值，Tableau也会正确计算小计
- en: 'This final behavior of the data model can be stated as: aggregates are calculated
    at the level of detail defined by the logical table of the measure. This is similar
    to how you might use a **Level of Detail** (**LOD**) expression to avoid a LOD
    duplication, but you didn''t have to write the expression or break your flow of
    thought to solve the problem. The Tableau data model did the hard work for you!'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 数据模型的最终行为可以表述为：聚合是根据度量的逻辑表定义的细节层次来计算的。这类似于你使用**细节级别**（**LOD**）表达式来避免LOD重复的方式，但你无需编写表达式或中断思路来解决问题。Tableau
    数据模型为你完成了繁重的工作！
- en: 'Take some additional time to build out views and visualizations with the data
    model you''ve created. And review the following behaviors so you know what to
    expect and how to control the analysis you want to perform:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 花一些额外的时间，利用你创建的数据模型构建视图和可视化。然后复习以下行为，以便了解预期效果以及如何控制你想执行的分析：
- en: When you use one or more dimensions from the same logical table, you'll see the
    full domain of values in Tableau
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你使用来自同一逻辑表的一个或多个维度时，你将在 Tableau 中看到该维度的完整值域。
- en: When you include dimensions from two or more logical tables, only matching values
    are shown
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你从两个或更多逻辑表中包含维度时，只有匹配的值会被显示。
- en: Including a measure from the same logical table as a dimension will force Tableau
    to show the full domain of values for that dimension (even when the previous behavior
    was in effect)
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果将度量与同一逻辑表中的维度一起使用，Tableau 将强制显示该维度的完整值域（即使之前的行为已生效）。
- en: Aggregates are calculated at the level of detail defined by the logical table
    of the measure
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚合是根据度量的逻辑表定义的细节层次来计算的。
- en: With just a bit of practice, you'll find that the behaviors feel natural, and
    you'll especially appreciate Tableau performing aggregations at the correct level
    of detail.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 只需稍加练习，你会发现这些行为变得很自然，尤其会欣赏 Tableau 在正确的细节层次上执行聚合。
- en: When you first create a new data model, it is helpful to run through a couple
    of quick checks similar to the preceding examples. That will help you gain familiarity
    with the data model as well as help you validate that the relationships are working
    as you expect.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当你首次创建新数据模型时，进行几个类似前面示例的快速检查是很有帮助的。这将帮助你熟悉数据模型，并验证关系是否按预期工作。
- en: We'll now turn our focus to learn how to relate data in the physical layer using
    joins.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将重点学习如何使用连接在物理层中关联数据。
- en: Using joins
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用连接
- en: A **join** at the physical level is a row-by-row matching of the data between
    tables. We'll look at some different types of joins and then consider how to leverage
    them in the physical layer of a data model.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理层中的**连接**是表之间按行逐行匹配数据的过程。我们将看看几种不同类型的连接，然后考虑如何在数据模型的物理层中利用它们。
- en: Types of joins
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接类型
- en: 'In the physical layer, you may specify the following types of joins:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理层中，你可以指定以下几种连接类型：
- en: '**Inner**: Only records that match the join condition from both the table on
    the left and the table on the right will be kept. In the following example, only
    three matching rows are kept in the results:![](img/B16021_13_12.png)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内连接**：只有在左右两表中都满足连接条件的记录才会保留。在下面的示例中，只有三行匹配的记录被保留在结果中：![](img/B16021_13_12.png)'
- en: 'Figure 13.12: Inner join'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 13.12：内连接
- en: '**Left**: All records from the table on the left will be kept. Matching records
    from the table on the right will have values in the resulting table, while unmatched
    records will contain `NULL` values for all fields from the table on the right.
    In the following example, the five rows from the left table are kept, with `NULL`
    results for any values in the right table that were not matched:![](img/B16021_13_13.png)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**左连接**：左表中的所有记录都会被保留。来自右表的匹配记录会在结果表中显示其值，而不匹配的记录则会在右表的所有字段中显示`NULL`值。以下示例中，左表的五行记录被保留，对于右表中未匹配的任何值显示为`NULL`：![](img/B16021_13_13.png)'
- en: 'Figure 13.13: Left join'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 13.13：左连接
- en: '**Right**: All records from the table on the right will be kept. Matching records
    from the table on the left will result in values, while unmatched records will
    contain `NULL` values for all fields from the table on the left. Not every data
    source supports a right join. If it is not supported, the option will be disabled.
    In the following example, the five rows from the right table are kept, with `NULL`
    results for any values from the left table that were not matched:![](img/B16021_13_14.png)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**右连接**：右表中的所有记录都会被保留。左表中匹配的记录会生成值，而未匹配的记录会在左表中显示所有字段的`NULL`值。并非所有数据源都支持右连接。如果不支持，该选项将被禁用。在以下示例中，右表中的五行记录被保留，未匹配的左表字段显示`NULL`值：![](img/B16021_13_14.png)'
- en: 'Figure 13.14: Right join'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图13.14：右连接
- en: '**Full Outer**: All records from tables on both sides will be kept. Matching
    records will have values from the left and the right. Unmatched records will have
    `NULL` values where either the left or the right matching record was not found.
    Not every data source supports a full outer join. If it is not supported, the
    option will be disabled. In the following example, all rows are kept from both
    sides with `NULL` values where matches were not found:![](img/B16021_13_15.png)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全外连接**：两边表中的所有记录都会被保留。匹配的记录将具有来自左边和右边的值。没有匹配的记录将会在左边或右边的匹配记录未找到的地方显示`NULL`值。并非所有数据源都支持全外连接。如果不支持，该选项将被禁用。在以下示例中，来自两边的所有行都被保留，未找到匹配的地方显示`NULL`值：![](img/B16021_13_15.png)'
- en: 'Figure 13.15: Full Outer join'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图13.15：全外连接
- en: '**Spatial**: This joins together records that match based on the **intersection**
    (overlap) of spatial objects (we discussed Tableau''s spatial features in *Chapter
    12*, *Exploring Mapping and Advanced Geospatial Features*). For example, a point
    based on the latitude and longitude might fall inside the complex shape defined
    by a shapefile. Records will be kept for any records where the spatial object
    in one table overlaps with the spatial object specified for the other:![](img/B16021_13_16.png)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间**：这会根据空间对象的**交集**（重叠）将匹配的记录连接在一起（我们在*第12章*“*探索地图和高级地理空间功能*”中讨论了Tableau的空间功能）。例如，一个基于经纬度的点可能位于由Shapefile定义的复杂形状内部。只要一个表中的空间对象与另一个表中指定的空间对象重叠，相关记录就会被保留：![](img/B16021_13_16.png)'
- en: 'Figure 13.16: Spatial join'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图13.16：空间连接
- en: 'When you select spatial objects from the left and right tables, you''ll need
    to specify **Intersects** as the operator between the fields to accomplish a spatial
    join, as shown in *Figure 13.17*:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从左表和右表中选择空间对象时，你需要指定**交集**作为字段之间的操作符，以实现空间连接，如*图13.17*所示：
- en: '![](img/B16021_13_17.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_17.png)'
- en: 'Figure 13.17: Assuming the two fields selected represent spatial objects, the
    Intersects option will be available'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.17：假设选中的两个字段代表空间对象，"交集"选项将可用
- en: With a solid understanding of join types, let's consider how to use them in
    the physical layer of Tableau's data model.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入理解连接类型之后，我们来考虑如何在Tableau的数据模型物理层中使用它们。
- en: Joining tables
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接数据表
- en: Most databases have multiple tables of data that are related in some way. Additionally,
    you are able to join together tables of data across various data connections for
    many different data sources.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数数据库有多个数据表，这些表之间以某种方式相关。此外，你还可以通过各种数据连接将不同数据源中的数据表联合起来。
- en: 'For our examples here, let''s once again consider the tables in the hospital
    database, with a bit of simplification:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这里的示例，我们再次考虑医院数据库中的表，并进行一些简化：
- en: '![](img/B16021_13_18.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_18.png)'
- en: 'Figure 13.18: The primary Hospital Visit table with Patient and Discharge Details
    as they might exist in a relational database'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.18：主医院访问表，包含患者和出院详细信息，可能存在于关系型数据库中
- en: Let's consider how we might build a data source using some joins in the physical
    layer. To follow along, create a new Excel data source in the `Chapter 13 Starter.twbx`
    workbook that references the `Hospital Visits (Joins).xlsx` file in the `Chapter
    13` directory. You may also examine the connection in the `Chapter 13 Complete.twbx`
    workbook.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来考虑如何在物理层中使用一些连接来构建数据源。要跟随示例，请在`Chapter 13 Starter.twbx`工作簿中创建一个新的Excel数据源，引用`Chapter
    13`目录中的`Hospital Visits (Joins).xlsx`文件。你也可以在`Chapter 13 Complete.twbx`工作簿中查看连接。
- en: 'Just as we did before, we''ll start by dragging the **Hospital Visit** table
    onto the data source canvas such that we have a **Hospital Visit** object in the
    logical layer, like this:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所做的那样，我们将首先将**住院记录**表格拖到数据源画布上，以便在逻辑层中创建一个**住院记录**对象，像这样：
- en: '![](img/B16021_13_19.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_19.png)'
- en: 'Figure 13.19: After dragging the table onto the canvas, the Hospital Visit
    object is created in the logical layer'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.19：将表格拖到画布上后，逻辑层中创建了住院记录对象
- en: 'At this point, the logical layer object simply contains a single physical table.
    But we''ll extend that next. Double-click on the **Hospital Visit** object to
    expand the physical layer. It will look like this:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，逻辑层对象仅包含一个物理表格。但接下来我们将扩展它。双击**住院记录**对象以展开物理层。它将看起来像这样：
- en: '![](img/B16021_13_20.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_20.png)'
- en: 'Figure 13.20: The physical layer, which currently consists of a single physical
    table'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.20：当前仅包含一个物理表格的物理层
- en: 'You can extend the physical model by adding additional tables. We''ll do that
    here, by adding **Discharge Detail** and **Patient**. As we add them, Tableau
    will prompt you with a dialog box to adjust the details of the join. It will look
    like this:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加额外的表格来扩展物理模型。我们将在这里进行扩展，添加**出院详情**和**病人**。在添加时，Tableau 会弹出对话框提示你调整连接的详细信息。它将看起来像这样：
- en: '![](img/B16021_13_21.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_21.png)'
- en: 'Figure 13.21: Joining Discharge Detail to Hospital Visit in the physical layer'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.21：在物理层中将出院详情与住院记录连接
- en: The **Join** dialog allows you to specify the join type (**Inner**, **Left**,
    **Right**, or **Full Outer**) and to specify one or more fields on which to join.
    Between the fields, you may select which kind of operator joins the fields. The
    default is equality (**=**; the fields must be equal), but you may also select
    inequality (`<>`; the fields must not be equal), less than (`<`), less than or
    equal to (`<=`), greater than (`>`), or greater than or equal to (`>=`). The type
    of join and the field relationships that define the join will determine how many
    records are returned from the join. We'll take a look at the details in the next
    section.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**连接**对话框允许你指定连接类型（**内连接**、**左连接**、**右连接**或**完全外连接**），并指定一个或多个字段进行连接。在这些字段之间，你可以选择哪种类型的运算符来连接字段。默认是相等（**=**；字段必须相等），但你也可以选择不等（`<>`；字段必须不相等）、小于（`<`）、小于等于（`<=`）、大于（`>`）或大于等于（`>=`）。连接的类型和定义连接的字段关系将决定从连接中返回多少记录。我们将在下一节详细查看这些细节。'
- en: Typically, you'll want to start by dragging the primary table onto the physical
    layer canvas. In this case, **Hospital Visit** contains keys to join additional
    tables. Additional tables should be dragged and dropped after the primary table.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你会希望首先将主表拖到物理层画布上。在这个例子中，**住院记录**包含连接额外表格的键。其他表格应在主表之后被拖放。
- en: For now, accept the fields that Tableau automatically detects as shared between
    the tables (**Discharge Details ID** for **Discharge Details** and **Patient ID**
    for **Patient**). Change the join to **Discharge Details** to a left join. This
    means that all hospital visits will be included, even if there has not yet been
    a discharge. Leave **Patient** as an inner join. This will return only records
    that are shared between the tables so that only patients with visits will be retained.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，接受 Tableau 自动检测到的在表格之间共享的字段（**出院详情 ID** 对应 **出院详情**，**病人 ID** 对应 **病人**）。将**出院详情**的连接改为左连接。这意味着所有住院记录都将被包括在内，即使尚未发生出院。将**病人**保持为内连接。这将仅返回在两个表格之间共享的记录，因此只保留有住院记录的病人。
- en: 'Ultimately, the physical layer for **Hospital Visit** will look like this:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，**住院记录**的物理层将看起来像这样：
- en: '![](img/B16021_13_22.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_22.png)'
- en: 'Figure 13.22: The physical layer is made up of three tables joined together'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.22：物理层由三个连接在一起的表格组成
- en: 'When you close the physical layer, you''ll once again see the logical layer,
    which contains a single object: **Hospital Visit**. That object now contains a
    join icon, indicating that it is made up of joined physical tables. But it remains
    a single object in the logical layer of the data model and looks like this:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当你关闭物理层后，你将再次看到逻辑层，其中包含一个单一对象：**住院记录**。该对象现在包含一个连接图标，表示它是由多个物理表格连接而成。但它仍然是数据模型逻辑层中的一个单一对象，像这样：
- en: '![](img/B16021_13_23.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_23.png)'
- en: 'Figure 13.23: The logical layer contains a single object that is made up of
    three physical tables'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.23：逻辑层包含一个由三个物理表格组成的单一对象
- en: All the joins create what you might think of as one flat table, which can be
    related together with other objects in the data model. Those objects, in turn,
    might each be made up of a single physical table or multiple physical tables joined
    together.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 所有连接会创建你可能认为的一个平面表，它可以与数据模型中的其他对象关联。这些对象反过来可能由单个物理表或多个物理表连接组成。
- en: If you are following along with the example, rename this data source **Hospital
    Visits (Joins)**. We'll leverage this data source for one more example at the
    end of this chapter. In the meantime, let's consider a few additional details
    related to joins.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在跟随示例操作，请将此数据源重命名为**医院就诊（连接）**。我们将在本章结束时再次利用这个数据源进行一个示例。在此期间，让我们考虑一些与连接相关的其他细节。
- en: Other join considerations
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他连接注意事项
- en: We conclude this section with some further possibilities to leverage joins,
    as well as a caution regarding a potential problem that can arise from their use.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本节的结尾总结了利用连接的进一步可能性，并提醒可能会出现的问题。
- en: Join calculations
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接计算
- en: In the previous example, we noted that Tableau **joins** row-by-row based on
    fields in the data. You may come across cases where you need to join based on
    values that are not present in the data but can be derived from the existing data.
    For example, imagine that there is a **Patient Profile** table that would add
    significant value to your dataset. However, it lacks a **Patient ID**and only
    has **First Name** and **Last Name** fields.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们提到 Tableau 基于数据中的字段逐行**连接**。你可能会遇到需要基于数据中没有但可以从现有数据中派生的值进行连接的情况。例如，假设有一个**患者档案**表，它能为你的数据集增加显著的价值。然而，它缺少**患者ID**，只包含**名字**和**姓氏**字段。
- en: 'To join this to our **Patient** table, we can use a **join calculation**. This
    is a calculation that exists only for the purpose of joining tables together.
    To create a join calculation, use the drop-down list of fields in the **Join**
    dialog box and select the final option, **Create Join Calculation**:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要将其连接到我们的**患者**表，我们可以使用**连接计算**。这是一种仅用于连接表的计算。要创建连接计算，请在**连接**对话框中的字段下拉列表中选择最后一个选项，**创建连接计算**：
- en: '![](img/B16021_13_24.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_24.png)'
- en: 'Figure 13.24: You can create a join calculation to aid in forming the correct
    joins'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.24：你可以创建一个连接计算，帮助形成正确的连接
- en: Selecting this option allows you to write row-level calculations that can be
    used in the join. For example, our join calculation might have code like `[First
    Name] + " " + [Last Name]` to return values that match with the **Name** field.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 选择此选项允许你编写可以在连接中使用的行级计算。例如，我们的连接计算可能会像 `[First Name] + " " + [Last Name]` 这样的代码，用于返回与**姓名**字段匹配的值。
- en: Try to avoid joining on text fields, especially in larger datasets for performance
    reasons. Joining on integers is far more efficient. Also, it is entirely possible
    for two separate people to share first and last names, so a real-world dataset
    that followed the structure in this example would be subject to false matches
    and errors.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 尽量避免在文本字段上进行连接，尤其是在较大的数据集上，这样做会影响性能。基于整数进行连接效率更高。而且，两个不同的人可能会共享相同的名字和姓氏，因此如果一个实际数据集遵循本示例中的结构，可能会发生错误匹配和数据错误。
- en: You may also leverage the geospatial functions mentioned in *Chapter 12*, *Exploring
    Mapping and Advanced Geospatial Features*, to create a spatial join between two
    sources, even when one or both lack specific spatial objects on which to join.
    For example, if you have `Latitude` and `Longitude`, you might create a join calculation
    with the code `MAKEPOINT([Latitude], [Longitude])` to find the intersection with
    another spatial object in another table.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以利用*第12章*中提到的地理空间函数，*探索映射和高级地理空间功能*，即使其中一个或两个数据源缺少用于连接的特定空间对象，也能创建空间连接。例如，如果你有`纬度`和`经度`，你可以创建一个连接计算，使用
    `MAKEPOINT([Latitude], [Longitude])` 的代码，找到与另一个表中的空间对象的交集。
- en: Join calculations can also help when you are missing a field for a join. What
    if the data you want to join is in another database or file completely? In this
    scenario, we would consider cross-database joins.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当你缺少用于连接的字段时，连接计算也能提供帮助。如果你想要连接的数据完全位于另一个数据库或文件中呢？在这种情况下，我们会考虑跨数据库连接。
- en: Cross-database joins
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跨数据库连接
- en: With Tableau, you have the ability to join (at the row level) across multiple
    different data connections. Joining across different data connections is referred
    to as a **cross-database join**. For example, you can join SQL Server tables with
    text files or Excel files, or join tables in one database with tables in another,
    even if they are on a different server. This opens up all kinds of possibilities
    for supplementing your data or analyzing data from disparate sources.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Tableau，你可以在行级别进行多个不同数据连接的连接。不同数据连接之间的连接被称为**跨数据库连接**。例如，你可以将SQL Server表与文本文件或Excel文件连接，或将一个数据库中的表与另一个数据库中的表连接，即使它们在不同的服务器上。这为补充数据或分析来自不同来源的数据提供了各种可能性。
- en: 'Consider the hospital data. Though not part of the data included the `Chapter
    13` file set, it would not be uncommon for billing data to be in a separate system
    from patient care data. Let''s say you had a file for patient billing that contained
    data you wanted to include in your analysis of hospital visits. You would be able
    to accomplish this by adding the text file as a data connection and then joining
    it to the existing tables, as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑医院数据。尽管它不属于`第13章`文件集的一部分，但账单数据通常与病人护理数据存在于不同的系统中并不罕见。假设你有一个病人账单文件，其中包含你希望包括在医院就诊分析中的数据。你可以通过将文本文件作为数据连接添加，然后将其与现有的表格进行连接，如下所示：
- en: '![](img/B16021_13_25.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_25.png)'
- en: 'Figure 13.25: Joining tables or files based on separate data connections'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.25：基于不同数据连接的表或文件连接
- en: You'll notice that the interface on the **Data Source** screen includes an **Add**
    link that allows you to add data connections to a data source. Clicking on each
    connection will allow you to drag and drop tables from that connection into the
    **Data Source** designer and specify the joins as you desire. Each data connection
    will be color-coded so that you can immediately identify the source of various
    tables in the designer.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，在**数据源**界面上有一个**添加**链接，允许你向数据源添加数据连接。点击每个连接后，你可以将该连接中的表拖放到**数据源**设计器中，并按需指定连接。每个数据连接都会有颜色编码，以便你可以立即识别设计器中各种表格的来源。
- en: You may also use multiple data sources in the logical layer.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在逻辑层使用多个数据源。
- en: Another consideration with joins is an unintentional error, which we'll consider
    next.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 连接时的另一个考虑因素是无意的错误，我们接下来会讨论这个问题。
- en: The unintentional duplication of data
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据的无意重复
- en: 'Finally, we conclude with a warning about joins—if you are not careful, you
    could potentially end up with a few extra rows or many times the number of records
    than you were expecting. Let''s consider a theoretical example:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们以关于连接的警告作为结尾——如果不小心，你可能会得到多几行或是比预期多很多倍的记录数。我们考虑一个理论上的例子：
- en: 'Let''s say you have a `Visit` table like this:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个像这样的`Visit`表：
- en: '| **Visit ID** | **Patient Name** | **Doctor ID** |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| **Visit ID** | **Patient Name** | **Doctor ID** |'
- en: '| 1 | Kirk | 1 |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 1 | Kirk | 1 |'
- en: '| 2 | Picard | 2 |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| 2 | Picard | 2 |'
- en: '| 3 | Sisko | 3 |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| 3 | Sisko | 3 |'
- en: 'And a `Doctor` table like this:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以及像这样的`Doctor`表：
- en: '| **Doctor ID** | **Doctor Name** |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| **Doctor ID** | **Doctor Name** |'
- en: '| 1 | McCoy |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 1 | McCoy |'
- en: '| 2 | Crusher |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| 2 | Crusher |'
- en: '| 3 | Bashir |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 3 | Bashir |'
- en: '| 2 | Pulaski |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| 2 | Pulaski |'
- en: 'Notice that the value `2` for `Doctor ID` occurs twice in the `Doctor` table.
    Joining the table on equality between the `Doctor ID` value will result in duplicate
    records, regardless of which join type is used. Such a join would result in the
    following dataset:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`Doctor ID`的值`2`在`Doctor`表中出现了两次。在`Doctor ID`值相等的情况下进行连接将会导致重复记录，无论使用何种连接类型。这样的连接将会得到以下数据集：
- en: '| **Visit ID** | **Patient Name** | **Doctor ID** | **Doctor Name** |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| **Visit ID** | **Patient Name** | **Doctor ID** | **Doctor Name** |'
- en: '| 1 | Kirk | 1 | McCoy |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| 1 | Kirk | 1 | McCoy |'
- en: '| 2 | Picard | 2 | Crusher |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| 2 | Picard | 2 | Crusher |'
- en: '| 3 | Sisko | 3 | Bashir |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| 3 | Sisko | 3 | Bashir |'
- en: '| 2 | Picard | 2 | Pulaski |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| 2 | Picard | 2 | Pulaski |'
- en: This will greatly impact your analysis. For example, if you were counting the
    number of rows to determine how many patient visits had occurred, you'd overcount.
    There are times when you may want to intentionally create duplicate records to
    aid in analysis; however, often, this will appear as an unintentional error.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这将大大影响你的分析。例如，如果你在计算行数来确定发生了多少次病人就诊，你会重复计数。有时候你可能故意创建重复记录以帮助分析，但通常，这会表现为无意的错误。
- en: In addition to the danger of unintentionally duplicating data and ending up
    with extra rows, there's also the possibility of losing rows where values you
    expected to match didn't match exactly. Get into the habit of verifying the row
    count of any data sources where you use joins.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 除了不小心重复数据并导致额外行的风险外，还有可能会丢失一些行，因为预期匹配的值没有完全匹配。养成验证使用连接的任何数据源行数的习惯。
- en: A solid understanding of joins will not only help you as you leverage Tableau
    Desktop and Tableau Server, but it will also give you a solid foundation when
    we look at Tableau Prep in *Chapter 15*, *Taming Data with Tableau Prep*. For
    now, let's wrap up this chapter with a brief look at blends.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 深入理解连接不仅能帮助你在使用Tableau Desktop和Tableau Server时更得心应手，还能为我们接下来在*第15章*，*使用Tableau
    Prep整理数据*中学习Tableau Prep打下坚实的基础。现在，让我们通过简要了解数据混合来结束这一章。
- en: Using blends
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用数据混合
- en: '**Data blending** allows you to use data from multiple data sources in the
    same view. Often, these sources may be of different types. For example, you can
    blend data from Oracle with data from Excel. You can blend Google Analytics data
    with a spatial file. Data blending also allows you to compare data at different
    levels of detail. Let''s consider the basics and a simple example.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据混合**使你能够在同一视图中使用来自多个数据源的数据。这些数据源通常可能是不同类型的。例如，你可以将来自Oracle的数据与Excel的数据混合，将Google
    Analytics的数据与空间文件混合。数据混合还允许你在不同的细节级别上比较数据。让我们了解一些基础知识并看一个简单的例子。'
- en: 'Data blending is done at an aggregate level and involves different queries
    sent to each data source, unlike joining, which is done at the row level and (conceptually)
    involves a single query to a single data source. A simple data blending process
    involves several steps, as shown in the following diagram:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 数据混合是在汇总级别进行的，并且涉及向每个数据源发送不同的查询，不同于连接，它是在行级别进行的（从概念上讲）并且涉及向单个数据源发出单一查询。一个简单的数据混合过程包含几个步骤，如下图所示：
- en: '![](img/B16021_13_26.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_26.png)'
- en: 'Figure 13.26: How Tableau accomplishes blending'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.26：Tableau如何实现数据混合
- en: 'We can see the following from the preceding diagram:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述图示中，我们可以看到以下内容：
- en: Tableau issues a query to the primary data source.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Tableau向主数据源发出查询。
- en: The underlying data engine returns aggregate results.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 底层数据引擎返回汇总结果。
- en: Tableau issues another query to the secondary data source. This query is filtered
    based on the set of values returned from the primary data source for dimensions
    that link the two data sources.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Tableau向辅助数据源发出另一个查询。这个查询是基于来自主数据源的维度值集合进行过滤，这些维度将两个数据源连接起来。
- en: The underlying data engine returns aggregate results from the secondary data
    source.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 底层数据引擎从辅助数据源返回汇总结果。
- en: The aggregated results from the primary data source and the aggregated results
    from the secondary data source are blended together in the cache.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主数据源的汇总结果和辅助数据源的汇总结果将在缓存中混合在一起。
- en: It is important to note that data blending is different from joining. Joins
    are accomplished in a single query and results are matched row-by-row. Data blending
    occurs by issuing two separate queries and then blending together the aggregate
    results.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，数据混合不同于连接。连接是在单个查询中完成的，结果逐行匹配。数据混合是通过发出两个独立的查询，然后将汇总结果混合在一起实现的。
- en: There can only be one primary source, but there can be as many secondary sources
    as you desire. *Steps 3* and *4* are repeated for each secondary source. When
    all aggregated results have been returned, Tableau matches the aggregated rows
    based on linking fields.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 只能有一个主数据源，但可以有任意数量的辅助数据源。*步骤3*和*4*将为每个辅助数据源重复执行。当所有汇总结果返回后，Tableau会根据链接字段匹配汇总行。
- en: When you have more than one data source in a Tableau workbook, whichever source
    you use first in a view becomes the primary source for that view.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的Tableau工作簿中有多个数据源时，首先在视图中使用的源将成为该视图的主数据源。
- en: Blending is view-specific. You can have one data source as the primary in one
    view and the same data source as the secondary in another. Any data source can
    be used in a blend, but OLAP cubes, such as in SQL Server Analysis Services, must
    be used as the primary source.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 数据混合是特定于视图的。在一个视图中，你可以将一个数据源作为主数据源，而在另一个视图中，将相同的数据源作为辅助数据源。任何数据源都可以用于数据混合，但像SQL
    Server Analysis Services中的OLAP立方体，必须作为主数据源使用。
- en: In many ways, blending is similar to creating a data model with two or more
    objects. In many cases, the data model will give you exactly what you need without
    using blending. However, you have a lot more flexibility with blending because
    you can change which fields are related at a view level rather than at an object
    level.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多方面，数据混合类似于创建一个包含两个或更多对象的数据模型。在许多情况下，数据模型会提供您所需的所有内容，而无需使用数据混合。然而，使用数据混合您会有更多灵活性，因为您可以在视图级别而不是对象级别更改哪些字段是相关的。
- en: '**Linking fields** are dimensions that are used to match data blended between
    primary and secondary data sources. Linking fields define the level of detail
    for the secondary source. Linking fields are automatically assigned if fields
    match by name and type between data sources.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**关联字段**是用于匹配主数据源和次数据源之间的数据混合的维度。关联字段定义了次级数据源的详细级别。如果数据源之间的字段名称和类型匹配，则会自动分配关联字段。'
- en: 'Otherwise, you can manually assign relationships between fields by selecting,
    from the menu, **Data** | **Edit Blend Relationships**, as follows:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，您可以通过从菜单中选择**数据** | **编辑数据关系**手动分配字段之间的关系，如下所示：
- en: '![](img/B16021_13_27.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_27.png)'
- en: 'Figure 13.27: Defining blending relationships between data sources'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.27：定义数据源之间的混合关系
- en: The **Relationships** window will display the relationships recognized between
    different data sources. You can switch from **Automatic** to **Custom** to define
    your own linking fields.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**关系**窗口将显示不同数据源之间识别的关系。您可以从**自动**切换到**自定义**，以定义您自己的关联字段。'
- en: Linking fields can be activated or deactivated to blend in a view. Linking fields
    used in the view will usually be active by default, while other fields will not.
    You can, however, change whether a linking field is active or not by clicking
    on the link icon next to a linking field in the data pane.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 关联字段可以在视图中启用或禁用。视图中使用的关联字段通常默认是激活的，而其他字段则不是。然而，您可以通过点击数据窗格中关联字段旁的链接图标来更改关联字段的激活状态。
- en: Additionally, use the **Edit Data Relationships** screen to define the fields
    that will be used for **cross-data source filters**. When you use the drop-down
    menu of a field on **Filters** in a view, and select **Apply to Worksheets** |
    **All Using Related Data Sources**, the filter works across data sources.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，使用**编辑数据关系**屏幕定义将用于**跨数据源筛选器**的字段。当您在视图中的**筛选器**字段的下拉菜单中使用并选择**应用于工作表** |
    **所有使用相关数据源**时，筛选器将在数据源之间生效。
- en: Let's take this from the conceptual to the practical with an example.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子将其从概念转化为实际操作。
- en: A blending example
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据混合示例
- en: 'Let''s look at a quick example of blending in action. Let''s say you have the
    following table representing the service goals of various locations throughout
    the hospital when it comes to serving patients:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速看一个数据混合的示例。假设您有以下表格，表示医院中各个位置在为病人服务时的服务目标：
- en: '| **Location** | **Avg. Minutes to Service Goal** |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| **位置** | **平均服务时间目标（分钟）** |'
- en: '| Inpatient Surgery | 30 |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| 住院手术 | 30 |'
- en: '| Outpatient Surgery | 40 |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| 门诊手术 | 40 |'
- en: '| ICU | 30 |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| ICU | 30 |'
- en: '| OBGYN | 25 |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| 产科 | 25 |'
- en: '| Lab | 120 |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| 实验室 | 120 |'
- en: This data is contained in a simple text file, named `Location Goals.txt`, in
    the `Chapter 13` directory. Both the starter and complete workbooks already contain
    a data source defined for the file.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据包含在一个简单的文本文件中，名为`Location Goals.txt`，位于`第13章`目录下。起始工作簿和完整工作簿中已经定义了该文件的数据源。
- en: 'We''ll start by creating a simple bar chart from the **Hospital Visit (Joins)**data
    source you created previously, showing the **Average Minutes to Service by Location** like
    so:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先创建一个简单的条形图，来自您之前创建的**医院就诊（连接）**数据源，显示如下的**按位置计算的平均服务时间（分钟）**：
- en: '![](img/B16021_13_28.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_28.png)'
- en: 'Figure 13.28: Average Minutes to Service by Location'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.28：按位置计算的平均服务时间（分钟）
- en: 'Then, in the **Data** pane, we''ll select the **Location Goals** data source.
    Observe the **Data** pane shown here:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在**数据**窗格中，我们将选择**位置目标**数据源。请观察此处显示的**数据**窗格：
- en: '![](img/B16021_13_29.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_29.png)'
- en: 'Figure 13.29: Hospital Visit (Joins) is shown as the Primary data source and
    Location in the Location Goals data source is indicated as a linking field'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.29：医院就诊（连接）显示为主数据源，而位置目标数据源中的位置被指示为关联字段
- en: The blue checkmark on the **Hospital Visit (Joins)** data source (numbered **1**
    in *Figure 13.29*) indicates that the data source is primary. Tableau recognizes
    **Location** as a linking field and indicates that it is active with a connected
    link icon (numbered **2** in *Figure 13.29*). It is active because you have used
    **Location** from the primary data source in the current view. If you had not,
    Tableau would still show the link, but it would not be active by default. You
    may click on the link icon to switch from active to inactive or vice versa to
    control the level of detail at which aggregations are done in the secondary source.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**医院访问（连接）**数据源上的蓝色勾选标记（在*图13.29*中标记为**1**）表示该数据源是主数据源。Tableau 将**位置**识别为连接字段，并通过一个连接图标（在*图13.29*中标记为**2**）指示该字段为活动状态。它之所以为活动状态，是因为你在当前视图中使用了来自主数据源的**位置**。如果你没有使用，Tableau
    仍然会显示链接，但默认情况下它不会处于活动状态。你可以点击该链接图标，在活动和非活动状态之间切换，进而控制在次级数据源中进行汇总时的详细级别。'
- en: 'For now, click on **Avg. Minutes to Service Goal** in the data pane and select
    **Bullet Graph** from **Show Me**, as indicated here:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击数据窗格中的**服务目标的平均分钟数**，然后从**Show Me**中选择**子弹图**，如图所示：
- en: '![](img/B16021_13_30.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_30.png)'
- en: 'Figure 13.30: You may drag and drop fields from secondary sources into the
    view or use Show Me'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.30：你可以将次级数据源的字段拖放到视图中，或者使用Show Me
- en: 'You may have to right-click on the **Avg. Minutes to Service** axis in the
    view and select the **Swap Reference Line** fields to ensure the goal is the reference
    line and the bar is the actual metric. Your view should now look like this:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要右键单击视图中的**服务的平均分钟数**轴，然后选择**交换参考线**字段，以确保目标是参考线，条形图是实际指标。现在你的视图应该是这样的：
- en: '![](img/B16021_13_31.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_31.png)'
- en: 'Figure 13.31: A view created from a primary source and a secondary source'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.31：由主数据源和次级数据源创建的视图
- en: Notice that both the **Hospital Visits (Joins)** data source and the **Location
    Goals** data source are used in this view. **Hospital Visit (Joins)** is the primary
    data source (indicated by a blue checkmark), while **Location Goals** is the secondary
    source (indicated by the orange checkmark). The **Avg. Minutes to Service Goal**
    field on **Detail** in the **Marks** card is secondary and also indicated by an
    icon with an orange checkmark.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，**医院访问（连接）**数据源和**位置目标**数据源都在此视图中使用。**医院访问（连接）**是主数据源（由蓝色勾选标记指示），而**位置目标**是次级数据源（由橙色勾选标记指示）。**服务目标的平均分钟数**字段在**Marks**卡片中的**Detail**上是次级数据源的，并且也由橙色勾选标记的图标指示。
- en: You may also notice that **Main Hospital** and **Intensive Care** do not have
    goals indicated in the view. Recall that the primary data source is used to determine
    the full list of values shown in the view. **Main Hospital** is in the primary
    source but does not have a match in the secondary source. It is shown in the view,
    but it does not have a secondary source value.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还会注意到**主医院**和**重症监护**在视图中没有显示目标值。回想一下，主数据源用于确定视图中显示的完整值列表。**主医院**在主数据源中存在，但在次级数据源中没有匹配项。它会显示在视图中，但没有次级数据源的值。
- en: '**Intensive Care** also does not have a secondary value. This is because the
    corresponding value in the secondary source is **ICU**. Values must match exactly
    between the primary and secondary sources for a blend to find matches. However,
    blends do also take into account aliases.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '**重症监护**也没有次级数据源的值。这是因为次级数据源中的相应值是**ICU**。主数据源和次级数据源中的值必须完全匹配，数据融合才能找到匹配项。不过，数据融合也会考虑别名的情况。'
- en: An **alias** is an alternate value for a dimension value that will be used for
    display and data blending. Aliases for dimensions can be changed by right-clicking
    on row headers or using the menu on the field in the view or the data pane and
    selecting the **Aliases** option.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '**别名**是维度值的替代值，将用于显示和数据融合。你可以通过右键单击行标题或使用视图或数据窗格中的字段菜单，并选择**别名**选项来更改维度的别名。'
- en: 'We can change the alias of a field by right-clicking on the row header in the
    view and using the **Edit Alias…** option, as shown here:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过右键单击视图中的行标题并使用**编辑别名…**选项来更改字段的别名，如下所示：
- en: '![](img/B16021_13_32.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_32.png)'
- en: 'Figure 13.32: Using the Edit Alias... option'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.32：使用编辑别名...选项
- en: 'If we change the alias to **ICU**, a match is found in the secondary source
    and our view reflects the secondary value:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将别名更改为**ICU**，在次级数据源中找到匹配项，视图中显示的是次级数据源的值：
- en: '![](img/B16021_13_33.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16021_13_33.png)'
- en: 'Figure 13.33: ICU now finds a match in the secondary source'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.33：ICU现在可以在次级数据源中找到匹配项。
- en: A final value for **Location**, **Lab**, only occurs in the `Location Goals.txt`
    source and is, therefore, not shown in this view. If we were to create a new view
    and use **Location Goals** as the primary source, it would show.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '**位置**、**实验室**的最终值仅出现在`Location Goals.txt`源中，因此在此视图中不显示。如果我们创建一个新视图并使用**Location
    Goals**作为主数据源，它将会显示。'
- en: We've covered quite a few options regarding how to relate data in this chapter.
    Let's just take a moment to consider when to use these different techniques.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中我们已经讨论了许多关于如何关联数据的选项。让我们花点时间考虑一下何时使用这些不同的技术。
- en: When to use a data model, joins, or blends
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 何时使用数据模型、连接或混合。
- en: In one sense, every data source you create using the latest versions of Tableau
    will use a data model. Even data sources using one physical table will have a
    corresponding object in the logical layer of a data model. But when should you
    relate tables using the data model, when should you join them together in the
    physical layer, and when should you employ blending?
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 从某种意义上讲，使用最新版本的Tableau创建的每个数据源都将使用数据模型。即使是使用一个物理表的数据源，也会在数据模型的逻辑层中有一个对应的对象。但在何时应通过数据模型关联表，何时应在物理层将其连接在一起，何时应使用混合呢？
- en: Most of the time, there's no single right or wrong answer. However, here are
    some general guidelines to help you think through when it's appropriate to use
    a given approach.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，没有单一的正确或错误答案。然而，这里有一些通用的指导原则，可以帮助你思考何时适合使用某种方法。
- en: 'In general, use a **data model** to relate tables:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，使用**数据模型**来关联表：
- en: When joins would make correct aggregations impossible or require complex LOD
    expressions to get accurate results
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当连接会使正确的聚合变得不可能，或者需要复杂的LOD表达式来获得准确结果时。
- en: When joins would result in the duplication of data
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当连接会导致数据重复时。
- en: When you need flexibility in showing full domains of dimensions versus only
    values that match across relationships
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你需要灵活性来展示维度的完整域，或仅展示在关系中匹配的值时。
- en: When you are uncertain of a data source and wouldn't know what type of join
    to use
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你对数据源不确定，且不知道使用哪种类型的连接时。
- en: 'In general, use **joins** at the physical level:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在物理层面使用**连接**：
- en: When you must use an operator other than equality between fields
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你必须使用除了字段之间的等式以外的操作符时。
- en: When you want to do a spatial join
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你需要进行空间连接时。
- en: When you want to specifically control the type of join used in your analysis
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你想要特定地控制分析中使用的连接类型时。
- en: When the performance of the data model is less efficient than it would be with
    the use of joins
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数据模型的性能比使用连接时效率低时。
- en: 'In general, use **blending** when:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在以下情况下使用**混合**：
- en: You need to relate data sources that cannot be joined or related using a data
    model (such as OLAP cubes)
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要关联无法通过数据模型连接或关联的数据源（例如OLAP立方体）。
- en: You need flexibility to "fix" matching using aliases
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要灵活性来通过别名“修复”匹配。
- en: You need flexibility to adjust which fields define the relationship differently
    in different views
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要灵活性来调整哪些字段在不同视图中定义关系的方式。
- en: As you grow in confidence while using each of these approaches, you'll be able
    to better determine which makes sense in a given circumstance.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你在使用每种方法时的信心增长，你将能够更好地判断在特定情况下哪种方法更合适。
- en: Summary
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: You now have several techniques to turn to when you need to relate tables of
    data together. The data model, a new feature in the latest versions of Tableau,
    gives a new paradigm for relating logical tables of data together. It introduces
    a few new behaviors when it comes to showing the full and partial domains of dimensional
    values, but it also greatly simplifies aggregations by taking into account the
    natural level of detail for the aggregation. In the physical layer, you have the
    option of joining together physical tables.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要将数据表关联在一起时，你现在有几种技术可以选择。数据模型是Tableau最新版本中的一项新功能，它为关联逻辑数据表提供了一种新的范式。它在显示维度值的完整和部分域时引入了一些新的行为，但通过考虑聚合的自然细节级别，它也大大简化了聚合。在物理层面，你可以选择将物理表连接在一起。
- en: We covered the various types of joins and discussed possibilities for using
    join calculations and cross-database joins for ultimate flexibility. We briefly
    discussed how data blending works and saw a practical example. Finally, you examined
    a broad outline of when to turn to each approach. You now have a broad toolset
    to tackle data in different tables or even in different databases or files.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 我们介绍了各种类型的连接，并讨论了使用连接计算和跨数据库连接的可能性，以实现最终的灵活性。我们简要讨论了数据混合的工作原理，并展示了一个实际的例子。最后，您回顾了每种方法的使用时机。现在，您已经拥有了广泛的工具集，能够处理不同表格中的数据，甚至是不同数据库或文件中的数据。
- en: We'll expand that toolset quite a bit more in the next chapter as we look at
    Tableau Prep Builder. Tableau Prep gives you incredible power and sophistication,
    allowing you to bring together data from various sources, clean it, and structure
    it in any way you like!
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将进一步扩展这一工具集，着眼于 Tableau Prep Builder。Tableau Prep 为您提供了强大的功能和高度的复杂性，让您能够将来自各种来源的数据汇聚在一起，清洗数据，并以您喜欢的任何方式进行结构化！
