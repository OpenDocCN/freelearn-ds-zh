- en: Chapter 2. Managing Map Documents and Layers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 管理地图文档和图层
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Referencing the current map document
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引用当前地图文档
- en: Referencing map documents on a disk
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在磁盘上引用地图文档
- en: Getting a list of layers in a map document
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取地图文档中的图层列表
- en: Restricting the list of layers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制图层列表
- en: Zooming in to selected features
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放到选定的要素
- en: Changing the map extent
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改变地图范围
- en: Adding layers to a map document
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将图层添加到地图文档
- en: Inserting layers into a map document
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将图层插入到地图文档中
- en: Updating layer symbology
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新图层符号
- en: Updating layer properties
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新图层属性
- en: Working with time-enabled layers in a data frame
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据框架中处理具有时间功能的图层
- en: Introduction
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: The ArcPy mapping module provides some really exciting features for mapping
    automation, including the ability to manage map documents and layer files, as
    well as the data within these files. Support is provided to automate map export
    and print, to create PDF map books, and publish map documents to ArcGIS Server
    map services. This is an incredibly useful module for accomplishing many of the
    day-to-day tasks performed by GIS analysts.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ArcPy映射模块为地图自动化提供了许多令人兴奋的功能，包括管理地图文档和图层文件以及这些文件中的数据的能力。支持自动化地图导出和打印、创建PDF地图集以及将地图文档发布到ArcGIS
    Server地图服务。这是一个极其有用的模块，可以完成GIS分析师日常执行的大多数任务。
- en: In this chapter, you will learn how to use the ArcPy mapping module to manage
    map documents and layer files. You will also learn how to add and remove geographic
    layers and tables from map document files, insert layers into data frames, and
    move layers around within the map document. Finally, you will learn how to update
    layer properties and symbology.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用ArcPy映射模块来管理地图文档和图层文件。您还将学习如何从地图文档文件中添加和删除地理图层和表格，将图层插入到数据框架中，以及在地图文档中移动图层。最后，您将学习如何更新图层属性和符号。
- en: Referencing the current map document
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用当前地图文档
- en: When running a geoprocessing script from the ArcGIS Python window or a custom
    script tool, you will often need to make a reference to the map document which
    is currently loaded in ArcMap. This is typically the first step in your script
    before you perform geoprocessing operations against layers and tables in a map
    document. In this recipe, you will learn how to reference the current map document
    from your Python geoprocessing script.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当从ArcGIS Python窗口或自定义脚本工具运行地理处理脚本时，您通常会需要引用当前加载在ArcMap中的地图文档。在您对地图文档中的图层和表执行地理处理操作之前，这是脚本中的第一步。在本菜谱中，您将学习如何从您的Python地理处理脚本中引用当前地图文档。
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Before you can actually perform any operations on a map document file, you
    need to make a reference to it in your Python script. This is done by calling
    the `MapDocument()` method on the `arcpy.mapping` module. You can reference either
    the currently running document or a document at a specific location on disk. To
    reference the currently active document, you simply supply the keyword `CURRENT`
    as a parameter to the `MapDocument()` function. This loads the currently active
    document in ArcMap. The following code example shows how a reference to the current
    active document is obtained:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在您实际上对地图文档文件执行任何操作之前，您需要在您的Python脚本中引用它。这是通过在`arcpy.mapping`模块上调用`MapDocument()`方法来完成的。您可以引用当前正在运行的文档或磁盘上特定位置的文档。要引用当前活动文档，您只需将关键字`CURRENT`作为参数提供给`MapDocument()`函数。这将加载ArcMap中当前活动的文档。以下代码示例显示了如何获取当前活动文档的引用：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can only use the `CURRENT` keyword when running a script from the ArcGIS
    Python window or a custom script tool in ArcToolbox. If you attempt to use this
    keyword when running a script from IDLE or any other development environment,
    it won't have access to the map document file that is currently loaded in ArcGIS.
    I should also point out that the `CURRENT` keyword is not case sensitive. You
    could just as easily use `"current"`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您只能在从ArcGIS Python窗口或ArcToolbox中的自定义脚本工具运行脚本时使用`CURRENT`关键字。如果您尝试从IDLE或任何其他开发环境运行脚本时使用此关键字，它将无法访问当前加载在ArcGIS中的地图文档文件。我还应该指出，`CURRENT`关键字不区分大小写。您也可以简单地使用`"current"`。
- en: 'To reference a map document on a local or remote drive, simply supply the path
    to the map document as well as the map document name as a parameter to `MapDocument()`.
    For example, you would reference the `crime.mxd` file in the `c:\data` folder
    with the following reference: `arcpy.mapping.MapDocument("C:/data/crime.mxd")`.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要引用本地或远程驱动器上的地图文档，只需提供地图文档的路径以及地图文档名称作为`MapDocument()`参数即可。例如，您将使用以下引用引用`c:\data`文件夹中的`crime.mxd`文件：`arcpy.mapping.MapDocument("C:/data/crime.mxd")`。
- en: How to do it…
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to access the currently active map document
    in ArcMap:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何在ArcMap中访问当前活动地图文档：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Click on the Python window button located on the main ArcMap toolbar.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击位于主ArcMap工具栏上的Python窗口按钮。
- en: Import the `arcpy.mapping` module by typing the following into the Python window.
    Here, and in future recipes, we'll assign the `arcpy.mapping` module to a variable
    called `mapping`. This will make your code easier to read and cut down on the
    amount of code you have to write. Instead of having to prefix all your code with
    `arcpy.mapping`, you can just refer to it as mapping. It is not required that
    you follow this form, but it does make your code cleaner and faster to write.
    Furthermore, you can name the variable as you wish. For example, instead of calling
    it `mapping` you may call it `MAP` or `mp` or whatever makes sense.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在Python窗口中输入以下内容来导入`arcpy.mapping`模块。在这里，以及未来的菜谱中，我们将`arcpy.mapping`模块分配给一个名为`mapping`的变量。这将使您的代码更容易阅读，并减少您需要编写的代码量。您不需要在所有代码前都加上`arcpy.mapping`前缀，您只需将其称为`mapping`即可。虽然这不是强制性的，但它确实使您的代码更整洁，编写起来更快。此外，您可以按自己的意愿命名变量。例如，您不必将其称为`mapping`，您也可以将其称为`MAP`、`mp`或任何有意义的名称。
- en: '[PRE1]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable by typing the following into the Python Window below the first line
    of code that you added in the last step:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在Python窗口中输入以下内容，引用当前活动文档（`Crime_Ch2.mxd`）并将引用分配给变量：
- en: '[PRE2]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Set a title for map document:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为地图文档设置标题：
- en: '[PRE3]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Save a copy of the map document file with the `saveACopy()` method:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`saveACopy()`方法保存地图文档文件的副本：
- en: '[PRE4]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Navigate to **File** | **Map Document Properties**, in order to view the new
    title you gave to the map document.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**文件** | **地图文档属性**，以查看您为地图文档设置的新标题。
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch2\ReferenceCurrentMapDocument.py`
    solution file.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch2\ReferenceCurrentMapDocument.py`解决方案文件来检查您的工作。
- en: How it works…
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `MapDocument` class has a constructor that creates an instance of this class.
    In object-oriented programming, an **instance** is also known as an **object**.
    The constructor for `MapDocument` can accept either the `CURRENT` keyword or a
    path to a map document file on a local or remote drive. The constructor creates
    an object and assigns it to the variable `mxd`. You can then access the properties
    and methods available on this object using dot notation. In this particular case,
    we printed out the title of the map document file using the `MapDocument.title`
    property and we also used the `MapDocument.saveACopy()` method to save a copy
    of the map document file.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapDocument`类有一个构造函数，用于创建此类的一个实例。在面向对象的编程中，一个**实例**也称为**对象**。`MapDocument`的构造函数可以接受`CURRENT`关键字或本地或远程驱动器上地图文档文件的路径。构造函数创建一个对象并将其分配给变量`mxd`。然后，您可以使用点符号访问此对象上可用的属性和方法。在这种情况下，我们使用`MapDocument.title`属性打印出地图文档文件的标题，我们还使用了`MapDocument.saveACopy()`方法来保存地图文档文件的副本。'
- en: Referencing map documents on a disk
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在磁盘上引用地图文档
- en: In addition to being able to reference the currently active map document file
    in ArcMap, you can also access map document files that are stored on a local or
    remote drive by using the `MapDocument()` constructor. In this recipe, you'll
    learn how to access these map documents.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 除了能够在ArcMap中引用当前活动地图文档文件外，您还可以通过使用`MapDocument()`构造函数访问存储在本地或远程驱动器上的地图文档文件。在本菜谱中，您将学习如何访问这些地图文档。
- en: Getting ready
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As I mentioned earlier, you can also reference a map document file that resides
    somewhere on your computer or a shared server. This is done simply by providing
    a path to the file. This is a more versatile way of obtaining a reference to a
    map document because it can be run outside the ArcGIS Python window. Later, when
    we will discuss parameters in a script, you'll understand that you can make this
    path a parameter so that the script is even more versatile, with the ability to
    input a new path each time it is needed.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如我之前提到的，您还可以引用存储在您的计算机或共享服务器上的地图文档文件。这只需提供文件的路径即可完成。这是一种更灵活的获取地图文档引用的方法，因为它可以在
    ArcGIS Python 窗口之外运行。稍后，当我们讨论脚本中的参数时，您将理解您可以使此路径成为参数，从而使脚本更加灵活，每次需要时都能输入新的路径。
- en: How to do it…
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to access a map document stored on a local
    or remote drive:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何访问存储在本地或远程驱动器上的地图文档：
- en: Open the IDLE development environment from **Start** | **All Programs** | **ArcGIS**
    | **Python 2.7** | **IDLE**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**开始** | **所有程序** | **ArcGIS** | **Python 2.7** | **IDLE**打开 IDLE 开发环境。
- en: Create a new IDLE script window by navigating to **File** | **New Window** from
    the IDLE shell window.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到 IDLE 壳窗口中的**文件** | **新建窗口**创建一个新的 IDLE 脚本窗口。
- en: 'Import `arcpy.mapping`:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`：
- en: '[PRE5]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Reference the copy of the `crime` map document that you created in the last
    recipe:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用您在最后一个配方中创建的`crime`地图文档副本：
- en: '[PRE6]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Print the title of the map document:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印地图文档的标题：
- en: '[PRE7]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Run the script, and you will see the following output:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本，您将看到以下输出：
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch2\ReferenceMapDocumentOnDisk.py`
    solution file.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch2\ReferenceMapDocumentOnDisk.py`解决方案文件来检查您的工作。
- en: How it works…
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The only difference between this recipe and the last one is that we provided
    a reference to a map document file on a local or remote drive rather than using
    the `CURRENT` keyword. This is the recommended way of referencing a map document
    file unless you know for sure that your geoprocessing script will be run inside
    ArcGIS, either in the Python window or as a custom script tool.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 与上一个配方相比，唯一的区别在于我们提供了一个指向本地或远程驱动器上的地图文档文件的引用，而不是使用`CURRENT`关键字。除非您确信您的地处理脚本将在
    ArcGIS 内运行，无论是 Python 窗口还是自定义脚本工具，否则这是引用地图文档文件的推荐方式。
- en: Getting a list of layers in a map document
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取地图文档中的图层列表
- en: Frequently, one of the first steps in a geoprocessing script is to obtain a
    list of layers in the map document. Once obtained, your script may then cycle
    through each of the layers and perform some type of processing. The mapping module
    contains a `ListLayers()` function, which provides the capability of obtaining
    this list of layers. In this recipe, you will learn how to get a list of layers
    contained within a map document.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，地处理脚本中的第一步是获取地图文档中的图层列表。一旦获取，您的脚本可以遍历每个图层并执行某种类型的处理。映射模块包含一个`ListLayers()`函数，它提供了获取此图层列表的能力。在本配方中，您将学习如何获取地图文档中包含的图层列表。
- en: Getting ready
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `arcpy.mapping` module contains various list functions to return lists of
    layers, data frames, broken data sources, table views, and layout elements. These
    list functions normally function as the first step in a multistep process, in
    which the script needs to get one or more items from a list for further processing.
    Each of these list functions returns a Python list, which, as you know from earlier
    in the book, is a highly functional data structure for storing information.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping`模块包含各种列表函数，用于返回图层、数据框架、损坏的数据源、表视图和布局元素的列表。这些列表函数通常作为多步骤过程中的第一步，其中脚本需要从列表中获取一个或多个项目以进行进一步处理。每个这些列表函数都返回一个Python列表，正如您在本书前面的内容中所知，这是一个用于存储信息的高度功能性的数据结构。'
- en: Normally, the list functions are used as a part of a multistep process, in which
    creating a list is only the first step. Subsequent processing in the script will
    iterate over one or more of the items in this list. For example, you might obtain
    a list of layers in a map document and then iterate through each layer looking
    for a specific layer name, which will then be subjected to further geoprocessing.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，列表函数作为多步骤过程的一部分使用，其中创建列表只是第一步。脚本中的后续处理将遍历列表中的一个或多个项目。例如，您可能从地图文档中获取图层列表，然后遍历每个图层以查找特定的图层名称，然后对其进行进一步的地处理。
- en: In this recipe, you will learn how to obtain a list of layers from a map document
    file.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将学习如何从地图文档文件中获取图层列表。
- en: How to do it…
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to get a list of layers from a map document:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从地图文档中获取图层列表：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 ArcMap 主工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE9]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch2.mxd`）并将引用分配给一个变量：
- en: '[PRE10]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Call the `ListLayers()` function and pass a reference to the map document:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `ListLayers()` 函数并传递地图文档的引用：
- en: '[PRE11]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Start a `for` loop and print out the name of each layer in the map document:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个 `for` 循环并打印出地图文档中每个图层的名称：
- en: '[PRE12]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Run the script to see the following output (you can check your work by examining
    the `c:\ArcpyBook\code\Ch2\GetListLayers.py` solution file):'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出（你可以通过检查 `c:\ArcpyBook\code\Ch2\GetListLayers.py` 解决方案文件来验证你的工作）：
- en: '[PRE13]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How it works…
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `ListLayers()` function retrieves a list of layers in a map document, specific
    data frame, or layer file. In this case, we passed a reference to the current
    map document to the `ListLayers()` function, which should retrieve a list of all
    the layers in the map document. The results are stored in a variable called `layers`,
    which is a Python list that can be iterated with a `for` loop. This Python list
    contains one or more `Layer` objects.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayers()` 函数检索地图文档、特定数据框架或图层文件中的图层列表。在这种情况下，我们将当前地图文档的引用传递给 `ListLayers()`
    函数，它应该检索地图文档中所有图层的列表。结果存储在一个名为 `layers` 的变量中，这是一个可以由 `for` 循环迭代的 Python 列表。这个
    Python 列表包含一个或多个 `Layer` 对象。'
- en: There's more…
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: The `ListLayers()` function is only one of the many list functions provided
    by the `arcpy.mapping` module. Each of these functions returns a Python list containing
    data of some type. Some of the other list functions include `ListTableViews()`,
    which returns a list of `Table` objects; `ListDataFrames()`, which returns a list
    of `DataFrame` objects; and `ListBoomarks()`, which returns a list of bookmarks
    in a map document. There are additional list functions, many of which we'll cover
    later in this book.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayers()` 函数是 `arcpy.mapping` 模块提供的许多列表函数之一。这些函数中的每一个都返回一个包含某种类型数据的 Python
    列表。其他一些列表函数包括 `ListTableViews()`，它返回一个 `Table` 对象的列表；`ListDataFrames()`，它返回一个
    `DataFrame` 对象的列表；以及 `ListBookmarks()`，它返回地图文档中的书签列表。还有其他一些列表函数，其中许多我们将在本书的后续章节中介绍。'
- en: Restricting the list of layers
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制图层列表
- en: In the previous recipe, you learned how to get a list of layers by using the
    `ListLayers()` function. There will be times when you will not want a list of
    all the layers in a map document, but rather only a subset of the layers. The
    `ListLayers()` function allows you to restrict the list of layers that is generated.
    In this recipe, you will learn how to restrict the layers returned using a wildcard
    and a specific data frame from the ArcMap table of contents.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的教程中，你学习了如何使用 `ListLayers()` 函数获取图层列表。有时你可能不希望获取地图文档中所有图层的列表，而只想获取图层的一个子集。`ListLayers()`
    函数允许你限制生成的图层列表。在本教程中，你将学习如何通过通配符和特定的数据框架从 ArcMap 内容表中限制返回的图层。
- en: Getting ready
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: By default, if you only pass a reference to the map document or layer file,
    the `ListLayers()` function will return a list of all the layers in these files.
    However, you can restrict the list of layers returned by this function by using
    an optional wildcard parameter or by passing in a reference to a specific data
    frame. A wildcard is a character that will match any character or sequence of
    characters in a search. This will be demonstrated in this recipe.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，如果你只传递地图文档或图层文件的引用，`ListLayers()` 函数将返回这些文件中所有图层的列表。然而，你可以通过使用可选的通配符参数或传递特定数据框架的引用来限制该函数返回的图层列表。通配符是一个字符，它将匹配搜索中的任何字符或字符序列。这将在本教程中演示。
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you're working with a layer file (`.lyr`), you can't restrict layers with
    a data frame. Layer files don't support data frames.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在处理图层文件（`.lyr`），则不能使用数据框架来限制图层。图层文件不支持数据框架。
- en: In this recipe, you will learn how to restrict the list of layers returned by
    `ListLayers()` through the use of a wildcard and data frame.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将学习如何通过使用通配符和数据框架来限制 `ListLayers()` 返回的图层列表。
- en: How to do it…
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to restrict a list of layers from a map document:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从一个地图文档中限制图层列表：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主ArcMap工具栏中点击Python窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE14]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch2.mxd`）并将引用分配给一个变量：
- en: '[PRE15]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Get a list of data frames in the map document and search for a specific data
    frame named `Crime` (please note that text strings can be surrounded by either
    single or double quotation marks):'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取地图文档中的数据框列表并搜索名为`Crime`的特定数据框（请注意，文本字符串可以由单引号或双引号包围）：
- en: '[PRE16]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Call the `ListLayers()` function and pass a reference to the map document,
    a wildcard to restrict the search, and the data frame found in the last step to
    further restrict the search. The `ListLayers()` function should be indented inside
    the `if` statement you just created:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`ListLayers()`函数，并传递地图文档的引用、一个通配符以限制搜索，以及上一步找到的数据框以进一步限制搜索。`ListLayers()`函数应该缩进在刚刚创建的`if`语句内部：
- en: '[PRE17]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Start a for loop and print out the name of each layer in the map document:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个for循环并打印出地图文档中每个图层的名称：
- en: '[PRE18]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The complete script should appear as follows or you can consult the solution
    file at `c:\ArcpyBook\code\Ch2\RestrictLayers.py`:![How to do it…](img/B04314_02_22.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完整的脚本应如下所示，或者你可以查阅位于`c:\ArcpyBook\code\Ch2\RestrictLayers.py`的解决方案文件：![如何做…](img/B04314_02_22.jpg)
- en: 'Run the script to see the following output:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE19]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `ListDataFrames()` function is another list function that is provided by
    `arcpy.mapping`. This function returns a list of all the data frames in a map
    document. We then loop through each of the data frames returned by this function,
    looking for a data frame that has the name `Crime`. If we do find a data frame
    that has this name, we call the `ListLayers()` function, passing in the optional
    wildcard value of `Burg*` as the second parameter, and a reference to the `Crime`
    data frame. The wildcard value passed in as the second parameter accepts any number
    of characters and an optional wildcard character (`*`).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListDataFrames()`函数是`arcpy.mapping`提供的另一个列表函数。此函数返回地图文档中所有数据框的列表。然后我们遍历该函数返回的每个数据框，寻找名为`Crime`的数据框。如果我们找到具有该名称的数据框，我们调用`ListLayers()`函数，将可选通配符值`Burg*`作为第二个参数传递，以及`Crime`数据框的引用。作为第二个参数传递的通配符值接受任意数量的字符和一个可选的通配符字符（`*`）。'
- en: In this particular recipe, we searched for all the layers that begin with the
    characters `Burg` and have a data frame named `Crime`. Any layers found matching
    these restrictions were then printed. Keep in mind that all we did in this case
    was print the layer names, but in most cases, you would be performing additional
    geoprocessing with the use of tools or other functions, and having a shorter list
    will speed up your script and will keep things neat and tidy.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定的菜谱中，我们搜索了所有以字符`Burg`开头并且数据框名为`Crime`的图层。任何符合这些限制的图层都会被打印出来。请注意，在这个例子中，我们只是打印了图层名称，但在大多数情况下，你将使用工具或其他函数执行额外的地理处理，拥有一个更短的列表将加快你的脚本速度，并保持整洁。
- en: Zooming in to selected features
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缩放以查看所选要素
- en: Creating selection sets in ArcMap is a common task. Selection sets are often
    created as the result of an attribute or spatial query, but they can also occur
    when a user manually selects features and sometimes, under some additional circumstances.
    To better visualize selection sets, users often zoom to the extent of the selected
    feature. This can be accomplished programmatically with Python in several ways.
    In this recipe, you will learn how to zoom to all the selected features in a data
    frame as well as an individual layer.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在ArcMap中创建选择集是一个常见任务。选择集通常作为属性或空间查询的结果创建，但也可以在用户手动选择要素时发生，有时在某些其他情况下也会发生。为了更好地可视化选择集，用户通常会缩放到所选要素的范围。这可以通过Python以多种方式编程实现。在这个菜谱中，你将学习如何缩放到数据框中所有所选要素以及单个图层。
- en: Getting ready
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `DataFrame.zoomToSelectedFeatures` property zooms to the extent of all the
    selected features from all the layers in the data frame. Essentially, it performs
    the same operation as the **Selection** | **Zoom to Selected Features** operation.
    One difference is that it will zoom to the full extent of all the layers if no
    features are selected.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame.zoomToSelectedFeatures` 属性将缩放到数据帧中所有选定特征的范围内。本质上，它执行与 **选择** | **缩放到所选特征**
    操作相同的操作。一个区别是，如果没有选择任何特征，它将缩放到所有层的完整范围。'
- en: Zooming to the extent of selected features in an individual layer requires you
    to use the `Layer` object. The `Layer` object includes a `getSelectedExtent()`
    method that you can call to zoom to the extent of the selected records. This returns
    an `Extent` object, which you can then use as a parameter that is passed into
    the `DataFrame.panToExtent()` method.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 缩放到单个图层中选定特征的范围需要您使用 `Layer` 对象。`Layer` 对象包括一个 `getSelectedExtent()` 方法，您可以调用它来缩放到选定记录的范围。这返回一个
    `Extent` 对象，然后您可以使用它作为参数传递给 `DataFrame.panToExtent()` 方法。
- en: How to do it…
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to get and set the active data frame and active
    view ArcMap:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何获取和设置 ArcMap 的活动数据帧和活动视图：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: In the ArcMap **Table Of Contents** pane, make sure that `Crime` is the active
    data frame.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap **目录** 窗格中，确保 `Crime` 是活动数据帧。
- en: In the **Table Of Contents** pane, click on the **List By Selection** button.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **目录** 窗格中，点击 **按选择列表** 按钮。
- en: Make the **Bexar County Boundaries** layer unselectable by clicking on the toggle
    button just to the right of the layer name:![How to do it…](img/B04314_02_20.jpg)
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击图层名称右侧的切换按钮使 **Bexar County Boundaries** 图层不可选择：![如何操作…](img/B04314_02_20.jpg)
- en: Click on the **List By Source** button in the **Table Of Contents** pane. Using
    the **Select Features** tool, drag a box around the cluster of burglaries inside
    the **Northside ISD** boundary. This should select the boundaries of a specific
    school district along with some burglaries as shown in the following diagram:![How
    to do it…](img/B04314_02_21.jpg)
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **目录** 窗格中点击 **按来源列表** 按钮。使用 **选择特征** 工具，在 **Northside ISD** 边界内拖动一个框来包围犯罪集群。这应该会选中特定学区的边界以及一些犯罪，如下面的图所示：![如何操作…](img/B04314_02_21.jpg)
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主 ArcMap 工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE20]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch2.mxd`）并将引用分配给一个变量：
- en: '[PRE21]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Get the active data frame (`Crime`) and zoom to the selected features:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取活动数据帧（`Crime`）并缩放到选定特征：
- en: '[PRE22]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'If no records have been selected, a call to `zoomToSelectedFeatures()` will
    zoom to the extent of all the records in the data frame. Clear the selected features
    by navigating to **Selection** | **Clear Selected Features**. This will clear
    the selection set. Now, execute the same line of code again to see how this affects
    the operation of the `zoomToSelectedFeatures()` method:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有选择任何记录，调用 `zoomToSelectedFeatures()` 将会缩放到数据帧中所有记录的范围。通过导航到 **选择** | **清除所选特征**
    来清除所选特征。这将清除选择集。现在，再次执行相同的代码行，以查看这如何影响 `zoomToSelectedFeatures()` 方法的操作：
- en: '[PRE23]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now, we'll zoom to the extent of the selected features in a specific layer.
    Using the **Select Features** tool, drag a box around the cluster of burglaries
    inside the **Northside ISD** boundary.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将缩放到特定图层中选定特征的范围。使用 **选择特征** 工具，在 **Northside ISD** 边界内拖动一个框来包围犯罪集群。
- en: 'First, get a reference to the `Crime` data frame. Calling the `ListDataFrames()`
    function and passing in a wildcard of `Crime` will return a Python list containing
    a single item. We pull this item out using `[0]`, which returns the first and
    only item in the list:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，获取 `Crime` 数据帧的引用。调用 `ListDataFrames()` 函数并传入 `Crime` 通配符将返回一个包含单个项目的 Python
    列表。我们使用 `[0]` 提取这个项目，它返回列表中的第一个也是唯一的项目：
- en: '[PRE24]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now, we''ll get a reference to the `Burglaries` layer, which contains some
    selected features. The following code uses a wildcard `*` to search for the **Burglaries
    in 2009** layer within the data frame that we referenced in the last line of code.
    The `ListLayers()` function returns a Python list and we use `[0]` to pull out
    the first and only layer containing the word `Burglaries`:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将获取对 `Burglaries` 图层的引用，该图层包含一些选定的要素。以下代码使用通配符 `*` 在我们上一行代码中引用的数据帧内搜索 `**2009年Burglaries**`
    图层。`ListLayers()` 函数返回一个 Python 列表，我们使用 `[0]` 来提取包含单词 `Burglaries` 的第一个也是唯一的图层：
- en: '[PRE25]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Finally, we''ll set the extent of the data frame by getting the extent of the
    selected features in the layer:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将通过获取图层中选定要素的范围来设置数据帧的范围：
- en: '[PRE26]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The complete script for zooming to the selected features of a layer should
    appear as follows or you can consult the solution file at `c:\ArcpyBook\code\Ch2\ZoomSelectedExtent.py`:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缩放到图层选定要素的完整脚本应如下所示，或者您可以查阅位于 `c:\ArcpyBook\code\Ch2\ZoomSelectedExtent.py`
    的解决方案文件：
- en: '[PRE27]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How it works…
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, you learned how to zoom to the extent of all the selected records
    from all the layers in a data frame as well as how to zoom to the extent of all
    the selected records from a specific layer in a data frame. Zooming to the extent
    of all the selected records from all the layers in a data frame simply requires
    that you get a reference to the active data frame and then call `zoomToSelectedFeatures()`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，您学习了如何缩放到数据帧中所有图层的所有选定记录的范围，以及如何缩放到数据帧中特定图层的所有选定记录的范围。要缩放到数据帧中所有图层的所有选定记录的范围，只需获取活动数据帧的引用，然后调用
    `zoomToSelectedFeatures()` 即可。
- en: Zooming to the extent of the selected records within a specific layer requires
    a little more coding. After importing the `arcpy.mapping` module and getting a
    reference to the map document, we then got a reference to the `Crime` data frame.
    Using the `ListLayers()` function we passed in a reference to the data frame as
    well as a wildcard that searched for the layers that begin with the text `Burglaries`.
    The `ListLayers()` function returned a Python list and since we knew that we only
    had one layer that matched the wildcard search, we pulled out the first layer
    and assigned it to a variable called `layer`. Finally, we set the extent of the
    data frame using `layer.getSelectedExtent`.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 将视图缩放到特定图层中选定记录的范围需要更多的编码。在导入 `arcpy.mapping` 模块并获取地图文档的引用后，我们接着获取对 `Crime`
    数据帧的引用。使用 `ListLayers()` 函数，我们传递了数据帧的引用以及一个搜索以文本 `Burglaries` 开头的图层的通配符。`ListLayers()`
    函数返回一个 Python 列表，因为我们知道只有一个图层与通配符搜索匹配，所以我们提取了第一个图层并将其分配给一个名为 `layer` 的变量。最后，我们使用
    `layer.getSelectedExtent` 设置数据帧的范围。
- en: Changing the map extent
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改地图范围
- en: There will be many occasions when you will need to change the map extent. This
    is frequently the case when you are automating the map production process and
    need to create many maps of different areas or features. There are a number of
    ways that the map extent can be changed with `arcpy`. However, for this recipe,
    we'll concentrate on using a definition expression to change the extent.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，您将需要更改地图范围。这在您自动化地图生产过程并需要创建不同区域或特征的许多地图时经常发生。有几种方法可以使用 `arcpy` 来更改地图范围。然而，对于这个菜谱，我们将专注于使用定义表达式来更改范围。
- en: Getting ready
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `DataFrame` class has an `extent` property that you can use to set the geographic
    extent. This is often used in conjunction with the `Layer.definitionQuery` property
    that is used to define a definition query for a layer. In this recipe, you will
    learn how to use these objects and properties to change the map extent.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame` 类有一个 `extent` 属性，您可以使用它来设置地理范围。这通常与用于为图层定义定义查询的 `Layer.definitionQuery`
    属性一起使用。在这个菜谱中，您将学习如何使用这些对象和属性来更改地图范围。'
- en: How to do it...
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to get a list of layers from a map document:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从地图文档中获取图层列表：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主 ArcMap 工具栏中单击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE28]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动的文档（`Crime_Ch2.mxd`）并将引用分配给一个变量：
- en: '[PRE29]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Create a `for` loop that will loop through all the data frames in the map document:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `for` 循环，该循环将遍历地图文档中的所有数据帧：
- en: '[PRE30]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Find the data frame called `Crime` and a specific layer that we''ll apply the
    definition query against:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到名为 `Crime` 的数据框架以及我们将应用定义查询的特定图层：
- en: '[PRE31]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Create a `for` loop that will loop through the layers. There will only be one,
    but we''ll create the loop anyway. In the `for` loop, create a definition query
    and set the new extent of the data frame:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `for` 循环，该循环将遍历图层。只有一个图层，但我们仍然会创建循环。在 `for` 循环中，创建一个定义查询并设置数据框架的新范围：
- en: '[PRE32]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The entire script should appear as follows or you can consult the solution file
    at `c:\ArcpyBook\code\Ch2\ChangeMapExtent.py`:![How to do it...](img/B04314_02_23.jpg)
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示，或者您可以查阅位于 `c:\ArcpyBook\code\Ch2\ChangeMapExtent.py` 的解决方案文件：![如何做到这一点...](img/B04314_02_23.jpg)
- en: Save and run the script. The extent of the data view should update so that it
    visualizes only the features matching the definition expression, as shown in the
    following screenshot:![How to do it...](img/B04314_02_14.jpg)
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并运行脚本。数据视图的范围应更新，以便仅可视化与定义表达式匹配的特征，如下面的截图所示：![如何做到这一点...](img/B04314_02_14.jpg)
- en: How it works...
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This recipe used a definition query on a layer to update the map extent. Near
    the end of the script, you created a new variable called `query` that held the
    definition expression. The definition expression was set up to find school districts
    with a name of **Lackland ISD**. This query string was then applied to the `definitionQuery`
    property. Finally, the `df.extent` property was set to the returned value of `layer.getExtent()`.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 此菜谱使用图层上的定义查询来更新地图范围。在脚本末尾，您创建了一个名为 `query` 的新变量，该变量包含定义表达式。定义表达式被设置为查找名为 **Lackland
    ISD** 的学区。然后，将此查询字符串应用于 `definitionQuery` 属性。最后，将 `df.extent` 属性设置为 `layer.getExtent()`
    返回的值。
- en: Adding layers to a map document
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向地图文档中添加图层
- en: There will be many situations where you will need to add a layer to a map document.
    The mapping module provides this functionality through the `AddLayer()` function.
    In this recipe, you will learn how to add a layer to a map document using this
    function.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 将会有许多需要向地图文档添加图层的情况。映射模块通过 `AddLayer()` 函数提供此功能。在本菜谱中，您将学习如何使用此函数向地图文档添加图层。
- en: Getting ready
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `arcpy.mapping` module provides the ability to add layers or group layers
    into an existing map document file. You can take advantage of the ArcMap *auto-arrange*
    functionality, which automatically places a layer in the data frame for visibility.
    This is essentially the same functionality as is provided by the **Add Data**
    button in ArcMap, which positions a layer in the data frame based on geometry
    type and layer weight rules.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping` 模块提供了将图层或图层组添加到现有地图文档文件的能力。您可以利用 ArcMap 的 *自动排列* 功能，该功能会自动将图层放置在数据框架中以供查看。这基本上与
    ArcMap 中 **添加数据** 按钮提供的功能相同，该按钮根据几何类型和图层权重规则将图层放置在数据框架中。'
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Layers can't be added to a layer file (`.lyr`).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图层不能添加到图层文件（`.lyr`）中。
- en: When adding a layer to a map document, the layer must reference an existing
    layer found in a layer file on disk, the same map document and data frame, the
    same map document with a different data frame, or a completely separate map document.
    A layer can be either a layer in a map document or a layer in a `.lyr` file. To
    add a layer to a map document, you must first create an instance of the `Layer`
    class and then call the `AddLayer()` function, passing in the new layer along
    with the data frame where it should be placed and rules for how it is positioned.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 当向地图文档添加图层时，该图层必须引用磁盘上图层文件中存在的现有图层，同一地图文档和数据框架，同一地图文档的不同数据框架，或完全独立的地图文档。图层可以是地图文档中的图层或
    `.lyr` 文件中的图层。要向地图文档添加图层，您必须首先创建 `Layer` 类的实例，然后调用 `AddLayer()` 函数，传入新图层以及它应该放置的数据框架和其位置规则。
- en: How to do it…
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps to learn how to add a layer to a map document:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何向地图文档添加图层：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 ArcMap 的主工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE33]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch2.mxd`）并将引用分配给变量：
- en: '[PRE34]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Get a reference to the `Crime` data frame, which is the first data frame in
    the list returned by `ListDataFrames()`. The `[0]` value, specified at the end
    of the code, gets the first data frame returned from the `ListDataFrames()` method,
    which returns a list of data frames. Lists are 0-based, so in order to retrieve
    the first data frame, we provide an index of `0`:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对 `Crime` 数据帧的引用，它是 `ListDataFrames()` 方法返回的列表中的第一个数据帧。代码末尾指定的 `[0]` 值获取 `ListDataFrames()`
    方法返回的数据帧列表中的第一个数据帧。列表是从 0 开始计数的，因此为了检索第一个数据帧，我们提供了一个索引 `0`：
- en: '[PRE35]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Create a `Layer` object that references a `.lyr` file:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个引用 `.lyr` 文件的 `Layer` 对象：
- en: '[PRE36]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Add the layer to the data frame:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图层添加到数据帧：
- en: '[PRE37]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: You can consult the solution file at `c:\ArcpyBook\code\Ch2\AddLayersMapDocument.py`.
    Run the script. The `School_Districts.lyr` file will be added to the data frame,
    as shown in the following screenshot:![How to do it…](img/B04314_02_11.jpg)
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以查阅位于 `c:\ArcpyBook\code\Ch2\AddLayersMapDocument.py` 的解决方案文件。运行脚本。`School_Districts.lyr`
    文件将被添加到数据帧中，如下面的截图所示：![如何操作…](img/B04314_02_11.jpg)
- en: How it works…
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In the first two lines, we simply referenced the `arcpy.mapping` module and
    got a reference to the currently active map document. Next, we created a new variable
    called `df`, which held a reference to the `Crime` data frame. This was obtained
    through the `ListDataFrames()` function that returned a list of data frame objects.
    We then used list access to return the first item in the list, which is the `Crime`
    data frame. A new `Layer` instance, called `layer`, was then created from a `layer`
    file stored on disk. This `layer` file was called `School_Districts.lyr`. Finally,
    we called the `AddLayer()` function, passing in the data frame where the layer
    should ideally reside along with a reference to the layer, and a parameter indicating
    that we wanted to use the **auto-arrange** feature. In addition to allowing ArcMap
    to automatically place the layer into the data frame using auto-arrange, you can
    also specifically place the layer at either the top or bottom of the data frame
    or a group layer using the `BOTTOM` or `TOP` position.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两行中，我们简单地引用了 `arcpy.mapping` 模块并获取了对当前活动地图文档的引用。接下来，我们创建了一个名为 `df` 的新变量，它持有对
    `Crime` 数据帧的引用。这是通过返回数据帧对象列表的 `ListDataFrames()` 函数获得的。然后我们使用列表访问返回列表中的第一个项目，即
    `Crime` 数据帧。然后从磁盘上存储的 `layer` 文件创建了一个新的 `Layer` 实例，该实例称为 `layer`。这个 `layer` 文件被称为
    `School_Districts.lyr`。最后，我们调用了 `AddLayer()` 函数，传递了图层应理想地驻留的数据帧的引用以及图层的引用，以及一个参数，表示我们想要使用
    **自动排列** 功能。除了允许 ArcMap 使用自动排列自动将图层放置到数据帧中之外，您还可以使用 `BOTTOM` 或 `TOP` 位置将图层放置在数据帧或组图层的顶部或底部。
- en: There's more…
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In addition to providing the capability of adding a layer to a map document,
    `arcpy.mapping` also provides an `AddLayerToGroup()` function, which can be used
    to add a layer to a group layer. The layer can be added to the top or bottom of
    the group layer or you can use auto-arrange for placement. You may also add layers
    to an empty group layer. However, just as with regular layer objects, group layers
    cannot be added to a layer file.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供将图层添加到地图文档的能力之外，`arcpy.mapping` 还提供了一个 `AddLayerToGroup()` 函数，可以用于将图层添加到组图层。图层可以添加到组图层的顶部或底部，或者您可以使用自动排列进行放置。您还可以将图层添加到空组图层。然而，就像常规图层对象一样，组图层不能添加到图层文件中。
- en: Layers can also be removed from a data frame or group layer. `RemoveLayer()`
    is the function used to remove a layer or group layer. In the event that two layers
    have the same name, only the first is removed, unless your script is set up to
    iterate.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图层也可以从数据帧或组图层中移除。`RemoveLayer()` 函数用于移除图层或组图层。如果两个图层具有相同的名称，则只移除第一个，除非您的脚本已设置为迭代。
- en: Inserting layers into a map document
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将图层插入地图文档
- en: The `AddLayer()` function can be used to add a layer to a map document either
    through auto-arrange or as the first or last layer in a data frame. However, it
    doesn't provide the control you need for inserting a layer in a specific position
    within a data frame. For this added control, you can use the `InsertLayer()` function.
    In this recipe, you will learn how to control the placement of layers that are
    added to a data frame.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`AddLayer()` 函数可用于将图层添加到地图文档中，无论是通过自动排列还是作为数据帧中的第一层或最后一层。然而，它并不提供您在数据帧中插入图层所需的具体控制。为了获得这种额外的控制，您可以使用
    `InsertLayer()` 函数。在本教程中，您将学习如何控制添加到数据帧中的图层的放置。'
- en: Getting ready
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The `AddLayer()` function simply adds a layer into a data frame or a group
    layer and places the layer automatically using auto-arrange. You can choose to
    have the layer placed at the top or bottom of either. The `InsertLayer()` method
    allows you to have more precise positioning of a new layer into a data frame or
    a group layer. It uses a reference layer to specify a location and the layer is
    added either before or after the reference layer, as specified in your code. Since
    `InsertLayer()` requires the use of a reference layer, you can''t use this method
    on an empty data frame. This is illustrated in the following screenshot, where
    **District_Crime_Join** is the reference layer and **School_Districts** is the
    layer to be added. The **School_Districts** layer can be placed either before
    or after the reference layer using `InsertLayer()`:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`AddLayer()`函数简单地将图层添加到数据框或组图层中，并自动使用自动排列放置图层。您可以选择将图层放置在顶部或底部。`InsertLayer()`方法允许您更精确地将新图层定位到数据框或组图层中。它使用引用图层来指定位置，图层被添加到引用图层之前或之后，具体取决于您的代码。由于`InsertLayer()`需要使用引用图层，因此您不能在空数据框上使用此方法。以下截图说明了这一点，其中**District_Crime_Join**是引用图层，**School_Districts**是要添加的图层。使用`InsertLayer()`可以将**School_Districts**图层放置在引用图层之前或之后：'
- en: '![Getting ready](img/B04314_02_1.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/B04314_02_1.jpg)'
- en: How to do it…
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to use `InsertLayer()` to insert a layer into
    a data frame:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`InsertLayer()`将图层插入到数据框中：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主ArcMap工具栏中点击Python窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE38]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动的文档（`Crime_Ch2.mxd`）并将引用分配给一个变量：
- en: '[PRE39]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Get a reference to the `Crime` data frame:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对**Crime**数据框的引用：
- en: '[PRE40]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Define the reference layer:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义引用图层：
- en: '[PRE41]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Define the layer to be inserted relative to the reference layer:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义相对于引用图层的要插入的图层：
- en: '[PRE42]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Insert the layer into the data frame:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图层插入到数据框：
- en: '[PRE43]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: You can consult the solution file at `c:\ArcpyBook\code\Ch2\InsertLayerMapDocument.py`
    to verify the accuracy of your code.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以查阅`c:\ArcpyBook\code\Ch2\InsertLayerMapDocument.py`中的解决方案文件以验证您代码的准确性。
- en: Run the script. The **Crimes2009** feature class will be added as a layer to
    the data frame, as seen in the following screenshot:![How to do it…](img/B04314_02_12.jpg)
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。**Crimes2009**要素类将作为图层添加到数据框中，如下截图所示：![如何操作…](img/B04314_02_12.jpg)
- en: How it works…
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'After obtaining references to the `arcpy.mapping` module, current map document
    file, and the **Crime** data frame, our script then defines a reference layer.
    In this case, we used the `ListLayers()` function with a wildcard of `Burglaries*`,
    and the **Crime** data frame to restrict the list of layers returned to only one
    item. This item should be the **Burglaries in 2009** layer. We used Python list
    access with a value of `0` to retrieve this layer from the list and assigned it
    to a Layer object. Next, we defined the `insert` layer, a new `Layer` object that
    references the **Crimes2009** feature class from the `CityOfSanAntonio` geodatabase.
    Finally, we called the `InsertLayer()` function passing in the data frame, reference
    layer, layer to be inserted, and keyword indicating that the layer to be inserted
    should be placed before the reference layer. This is illustrated in the following
    screenshot:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取到`arcpy.mapping`模块、当前地图文档文件和**Crime**数据框的引用后，我们的脚本定义了一个引用图层。在这种情况下，我们使用`ListLayers()`函数和一个通配符`Burglaries*`以及**Crime**数据框来限制返回的图层列表只包含一个项目。这个项目应该是**2009年入室盗窃**图层。我们使用Python列表访问并设置值为`0`来从列表中检索此图层并将其分配给一个图层对象。接下来，我们定义了`insert`图层，一个新的`Layer`对象，它引用了`CityOfSanAntonio`地理数据库中的**Crimes2009**要素类。最后，我们调用`InsertLayer()`函数，传入数据框、引用图层、要插入的图层以及一个关键字，表示要插入的图层应该放在引用图层之前。这如下面的截图所示：
- en: '![How it works…](img/B04314_02_2.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理…](img/B04314_02_2.jpg)'
- en: There's more…
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: You can also reposition a layer that is already in a data frame or a group layer.
    The `MoveLayer()` function provides the ability to reposition the layer within
    a data frame or a group layer. Movement of a layer must be within the same data
    frame. You can't move a layer from one data frame to another. Just as with `InsertLayer()`,
    `MoveLayer()` uses a reference layer to reposition the layer.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以重新定位已经位于数据框架或组图层中的图层。`MoveLayer()` 函数提供了在数据框架或组图层内重新定位图层的功能。图层的移动必须在同一数据框架内进行。你不能将图层从一个数据框架移动到另一个数据框架。就像
    `InsertLayer()` 一样，`MoveLayer()` 使用参考图层来重新定位图层。
- en: Updating layer symbology
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新图层符号
- en: There may be times when you will want to change the symbology of a layer in
    a map document. This can be accomplished through the use of the `UpdateLayer()`
    function, which can be used to change the symbology of a layer as well as various
    properties of a layer. In this recipe, you will use the `UpdateLayer()` function
    to update the symbology of a layer.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候你可能需要更改地图文档中图层的符号。这可以通过使用 `UpdateLayer()` 函数来实现，该函数可以用来更改图层的符号以及图层的各种属性。在本例中，你将使用
    `UpdateLayer()` 函数来更新图层的符号。
- en: Getting ready
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The `arcpy.mapping` module also gives you the capability of updating layer
    symbology from your scripts by using the `UpdateLayer()` function. For example,
    you might want your script to update a layer''s symbology from a graduated color
    to a graduated symbol, as illustrated in the following screenshot. `UpdateLayer()`
    can also be used to update various layer properties, but the default functionality
    is to update the symbology. Since `UpdateLayer()` is a robust function that is
    capable of altering both symbology and properties, you do need to understand the
    various parameters that can be supplied as an input:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping` 模块还通过使用 `UpdateLayer()` 函数，使你能够在脚本中更新图层符号。例如，你可能希望你的脚本将图层的符号从渐变色更改为渐变符号，如图下截图所示。`UpdateLayer()`
    也可以用来更新各种图层属性，但默认功能是更新符号。由于 `UpdateLayer()` 是一个强大的函数，能够更改符号和属性，因此你需要了解可以提供的各种输入参数：'
- en: '![Getting ready](img/B04314_02_3.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/B04314_02_3.jpg)'
- en: How to do it…
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to update the symbology of a layer using `UpdateLayer()`:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用 `UpdateLayer()` 更新图层的符号：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主 ArcMap 工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE44]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch2.mxd`）并将引用分配给一个变量：
- en: '[PRE45]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Get a reference to the `Crime` data frame:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对 `Crime` 数据框架的引用：
- en: '[PRE46]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Define the layer that will be updated:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将要更新的图层：
- en: '[PRE47]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Define the layer that will be used to update the symbology:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义用于更新符号的图层：
- en: '[PRE48]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Call the `UpdateLayer()` function to update the symbology:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `UpdateLayer()` 函数来更新符号：
- en: '[PRE49]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: You can consult the solution file at `c:\ArcpyBook\code\Ch2\UpdateLayerSymbology.py`
    to verify the accuracy of your code.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以查阅位于 `c:\ArcpyBook\code\Ch2\UpdateLayerSymbology.py` 的解决方案文件，以验证你代码的准确性。
- en: Run the script. The **Crime Density by School District** layer will now be symbolized
    with graduated symbols instead of graduated colors, as shown in the following
    screenshot:![How to do it…](img/B04314_02_13.jpg)
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。现在**学区犯罪密度**图层将使用渐变符号而不是渐变色进行符号化，如图下截图所示：![如何操作…](img/B04314_02_13.jpg)
- en: How it works…
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: In this recipe, we used the `UpdateLayer()` function to update the symbology
    of a layer. We didn't update any properties, but we'll do so in the next recipe.
    The `UpdateLayer()` function requires that you pass several parameters including
    a data frame, layer to be updated, and a reference layer from which the symbology
    will be pulled and applied to update the layer. In our code, the `updateLayer`
    variable holds a reference to the **Crime Density by School District** layer,
    which will have its symbology updated. The source layer from which the symbology
    will be pulled and applied to the updated layer is a layer file (`CrimeDensityGradSym.lyr`),
    containing graduated symbols.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们使用了`UpdateLayer()`函数来更新图层的符号。我们没有更新任何属性，但在下一个菜谱中我们会这样做。`UpdateLayer()`函数要求您传递多个参数，包括数据框架、要更新的图层以及一个参考图层，从该图层中提取符号并将其应用到更新图层。在我们的代码中，`updateLayer`变量引用了**按学区划分的犯罪密度**图层，其符号将被更新。从该图层提取符号并将其应用到更新图层的源图层是一个图层文件（`CrimeDensityGradSym.lyr`），包含渐变符号。
- en: To update the symbology for a layer, you must first ensure that the update layer
    and the source layer have the same geometry (point, line, or polygon). You also
    need to check that the attribute definitions are the same in some cases, depending
    upon the renderer. For example, graduated color symbology and graduated symbols
    are based on a particular attribute. In this case, both the layers had polygon
    geometry and a `CrimeDens` field containing crime density information.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新图层的符号，您必须首先确保更新图层和源图层具有相同的几何形状（点、线或多边形）。在某些情况下，您还需要检查属性定义是否相同，这取决于渲染器。例如，渐变色符号和渐变符号基于特定的属性。在这种情况下，两个图层都具有多边形几何形状，并且包含犯罪密度信息的`CrimeDens`字段。
- en: 'Once we had references to both the layers, we called the `UpdateLayer()` function,
    passing in the data frame and layers along with a fourth parameter that indicated
    that we''re updating symbology only. We supplied a `True` value as this fourth
    parameter, indicating that we were only updating the symbology and not properties:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了两个图层的引用，我们就调用了`UpdateLayer()`函数，传递了数据框架和图层，以及一个第四个参数，表示我们只更新符号。我们提供了`True`值作为这个第四个参数，表示我们只更新符号，而不更新属性：
- en: '[PRE50]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: There's more...
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `UpdateLayer()` function also provides the ability to remove one layer and
    add another layer in its place. The layers can be completely unrelated, so there
    is no need to ensure that the geometry type and attribute field are the same as
    you would when redefining the symbology of a layer. This switching of layers essentially
    executes a call to `RemoveLayer()` and then a call to `AddLayer()` as one operation.
    To take advantage of this functionality, you must set the `symbology_only` parameter
    to `False`.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '`UpdateLayer()`函数还提供了替换一个图层并添加另一个图层的功能。图层可以完全不相关，因此不需要确保几何类型和属性字段与重新定义图层符号时相同。这种图层切换本质上执行了一个对`RemoveLayer()`的调用，然后是一个对`AddLayer()`的调用，作为一个操作。要利用此功能，您必须将`symbology_only`参数设置为`False`。'
- en: Updating layer properties
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新图层属性
- en: In the previous recipe, you learned how to update the symbology of a layer.
    As I mentioned, `UpdateLayer()` can also be used to update various properties
    of a layer, such as field aliases, query definitions, and others. In this recipe,
    you will use `UpdateLayer()` to alter various properties of a layer.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的菜谱中，您学习了如何更新图层的符号。正如我提到的，`UpdateLayer()`也可以用来更新图层的各种属性，如字段别名、查询定义等。在这个菜谱中，您将使用`UpdateLayer()`来更改图层的各种属性。
- en: Getting ready
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can also use the `UpdateLayer()` function to update a limited number of
    layer properties. Specific layer properties, such as field aliases, selection
    symbology, query definitions, label fields, and others, can be updated using `UpdateLayer()`.
    A common scenario is to have a layer in many map documents that needs to have
    a specific property changed across all the instances of the layer in all map documents.
    To accomplish this, you will have to use ArcMap to modify the layer with the appropriate
    properties and save it to a layer file. This layer file then becomes the source
    layer, which will be used to update the properties of another layer called `update_layer`.
    In this recipe, you'll use ArcMap to alter the properties of a layer, save to
    a layer file (`.lyr`) and then use Python to write a script that uses `UpdateLayer()`
    to apply the properties to another layer.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 `UpdateLayer()` 函数来更新有限数量的图层属性。特定的图层属性，例如字段别名、选择符号、查询定义、标签字段等，可以使用 `UpdateLayer()`
    进行更新。一个常见的场景是，在许多地图文档中有一个图层需要更改所有地图文档中该图层实例的特定属性。为了实现这一点，您将不得不使用 ArcMap 修改具有适当属性的图层并将其保存到图层文件中。然后，该图层文件将成为源图层，它将被用来更新另一个名为
    `update_layer` 的图层的属性。在这个菜谱中，您将使用 ArcMap 修改图层的属性，将其保存到图层文件（`.lyr`）中，然后使用 Python
    编写一个脚本，该脚本使用 `UpdateLayer()` 将属性应用到另一个图层。
- en: How to do it…
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to update layer properties with `UpdateLayer()`:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用 `UpdateLayer()` 更新图层属性：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap. For this recipe, you will
    be working with the **Burglaries in 2009** feature class, as shown in the following
    screenshot:![How to do it…](img/B04314_02_4.jpg)
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。对于这个菜谱，您将使用 **2009 年入室盗窃**要素类，如图下所示：![如何操作…](img/B04314_02_4.jpg)
- en: Double-click on the **Burglaries in 2009** feature class in the **Crime** data
    frame to display the **Layer Properties** window, as shown in the following screenshot.
    Each of the tabs represents properties that can be set for this layer:![How to
    do it…](img/B04314_02_5.jpg)
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 **Crime** 数据框中的 **2009 年入室盗窃**要素类以显示 **图层属性** 窗口，如图下所示。每个选项卡代表可以为此图层设置的属性：![如何操作…](img/B04314_02_5.jpg)
- en: Click on the **General** tab and change the value in the **Layer Name:** textbox
    to the name, as shown in the following screenshot:![How to do it…](img/B04314_02_8.jpg)
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **常规** 选项卡，并将 **图层名称** 文本框中的值更改为名称，如图下所示：![如何操作…](img/B04314_02_8.jpg)
- en: Click on the **Definition Query** tab and define the query, as shown in the
    following screenshot. You can use the **Query Builder…** button to define the
    query or simply type in the query:![How to do it…](img/B04314_02_6.jpg)
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **定义查询** 选项卡并定义查询，如图下所示。您可以使用 **查询构建器…** 按钮定义查询或直接输入查询：![如何操作…](img/B04314_02_6.jpg)
- en: Change the alias of the `OFFDESC` field to `Offense Description`, as shown in
    the next screenshot.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `OFFDESC` 字段的别名更改为 `Offense Description`，如图下所示。
- en: Click on the **Fields** tab in **Layer Properties** and make visible only those
    fields that are selected with a checkmark in the following screenshot. This is
    done by unchecking the fields that you see in the following screenshot:![How to
    do it…](img/B04314_02_7.jpg)
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **图层属性** 中点击 **字段** 选项卡，并仅使以下截图中所选的字段可见。这是通过取消选中以下截图中的字段来完成的：![如何操作…](img/B04314_02_7.jpg)
- en: Click on **OK** to dismiss the **Layer Properties** dialog.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **确定** 关闭 **图层属性** 对话框。
- en: In the data frame, right-click on **Burglaries – No Forced Entry** and select
    **Save as Layer File**.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据框中，右键单击 **Burglaries – No Forced Entry** 并选择 **另存为图层文件**。
- en: Save the file as `c:\ArcpyBook\data\BurglariesNoForcedEntry.lyr`.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为 `c:\ArcpyBook\data\BurglariesNoForcedEntry.lyr`。
- en: Right-click on the **Burglaries – No Forced Entry** layer and select **Remove**.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 **Burglaries – No Forced Entry** 图层并选择 **删除**。
- en: Using the **Add Data** button in ArcMap, add the `Crimes2009` feature class
    from the `CityOfSanAntonio` geodatabase. The feature class will be added to the
    data frame, as shown in the following screenshot:![How to do it…](img/B04314_02_9.jpg)
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 中的 **添加数据** 按钮添加来自 `CityOfSanAntonio` 地理数据库的 `Crimes2009` 要素类。要素类将被添加到数据框中，如图下所示：![如何操作…](img/B04314_02_9.jpg)
- en: Open the Python window in ArcMap.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 Python 窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE51]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`) and assign the reference
    to a variable:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch2.mxd`）并将引用分配给变量：
- en: '[PRE52]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Get a reference to the `Crime` data frame:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取 `Crime` 数据框的引用：
- en: '[PRE53]'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Define the layer that will be updated:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将更新的图层：
- en: '[PRE54]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Define the layer that will be used to update the properties:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将用于更新属性的图层：
- en: '[PRE55]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Call the `UpdateLayer()` function to update the symbology:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`UpdateLayer()`函数来更新符号：
- en: '[PRE56]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: You can consult the solution file at `c:\ArcpyBook\code\Ch2\UpdateLayerProperties.py`
    to verify the accuracy of your code.
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以查阅位于`c:\ArcpyBook\code\Ch2\UpdateLayerProperties.py`的解决方案文件以验证代码的准确性。
- en: Run the script.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: The **Crimes2009** layer will be updated with the properties associated with
    the `BurglariesNoForcedEntry.lyr` file. This is illustrated in the following screenshot.
    Turn on the layer to view the definition query that has been applied. You can
    also open the **Layer Properties** dialog to view the property changes that have
    been applied to the **Crimes2009** feature class:![How to do it…](img/B04314_02_10.jpg)
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Crimes2009**图层将更新与`BurglariesNoForcedEntry.lyr`文件关联的属性。如图下截图所示。打开图层以查看已应用的定义查询。您还可以打开**图层属性**对话框以查看已应用到**Crimes2009**要素类的属性更改：![如何操作…](img/B04314_02_10.jpg)'
- en: Working with time-enabled layers in a data frame
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在数据帧中处理时间启用图层
- en: In this recipe, you will learn how to time-enable a layer and data frame. You
    will then write a script that cycles through the time range for the layer and
    exports a PDF map showing crimes through time in seven-day intervals.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，您将学习如何为图层和数据帧启用时间。然后，您将编写一个脚本，该脚本循环遍历图层的时间范围，并以七天为间隔导出显示犯罪历史的PDF地图。
- en: Getting ready
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `DataFrameTime` object provides access to time management operations for
    time-enabled layers in a data frame. This object is returned when you reference
    the `DataFrame.time` property, and includes properties for retrieving the current
    time, end time, start time, time step interval, and others that are established
    by using the **Time Slider Options** dialog box and then saved with the map document.
    One or more layers in a data frame must be time-enabled for this functionality
    to be operational.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrameTime`对象提供了对数据帧中时间启用图层的时间管理操作的访问。当您引用`DataFrame.time`属性时返回此对象，并包括用于检索当前时间、结束时间、开始时间、时间步长间隔以及其他通过使用**时间滑块选项**对话框并保存到地图文档中设置的属性。数据帧中必须有一个或多个图层启用时间，此功能才能正常工作。'
- en: How to do it...
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to work with time-enabled layers:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何处理时间启用图层：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: In the ArcMap **Table Of Contents** make sure `Crime` is the active data frame.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap的**内容表**中，确保`Crime`是活动数据帧。
- en: Open the **Layer Properties** dialog box for **Burglaries in 2009** by right-clicking
    on the layer and selecting **Properties**. Select the **Time** tab, as shown in
    the following screenshot:![How to do it...](img/B04314_02_15.jpg)
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击图层并选择**属性**打开**2009年入室盗窃**的**图层属性**对话框。选择**时间**选项卡，如图下截图所示：![如何操作...](img/B04314_02_15.jpg)
- en: Enable time for the layer by clicking on the **Enable time on this layer** checkbox.
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过点击**在此图层上启用时间**复选框来为图层启用时间。
- en: Under **Time properties**, select **Each feature has a single time field** for
    **Layer Time:**. Select the **SPLITDT** field for the **Time Field:**. Define
    a **Time Step Interval:** of **7.00 Days**, as shown in the following screenshot:![How
    to do it...](img/B04314_02_16.jpg)
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**时间属性**下，为**图层时间**选择**每个要素有一个单独的时间字段**。选择**时间字段**为**SPLITDT**字段。定义**时间步长间隔**为**7.00
    天**，如图下截图所示：![如何操作...](img/B04314_02_16.jpg)
- en: 'Define the **Layer Time Extent:** by clicking the **Calculate** button, circled
    in the following screenshot:'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过点击以下截图中的**计算**按钮定义**图层时间范围**，如图所示：
- en: '![How to do it...](img/B04314_02_19.jpg)'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/B04314_02_19.jpg)'
- en: Check the **Time Step Interval:** field. You may need to reset that to **7 Days**.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查**时间步长间隔**字段。您可能需要将其重置为**7 天**。
- en: Click on **Apply** and then **OK**.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用**然后**确定**。
- en: In the ArcMap **Tools** toolbar, select the time slider options button to display
    the **Time Slider Options** dialog as shown in the following screenshot:![How
    to do it...](img/B04314_02_17.jpg)
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap的**工具**工具栏中，选择时间滑块选项按钮以显示如图下截图所示的**时间滑块选项**对话框：![如何操作...](img/B04314_02_17.jpg)
- en: On the **Time Display** tab of the **Time Slider Options** dialog, make sure
    **Time step interval:** is set to **7.0 days.** If not, set it to **7.0 days**.
    Do the same for the **Time window:** option.![How to do it...](img/B04314_02_18.jpg)
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**时间显示**选项卡的**时间滑块选项**对话框中，确保**时间步长间隔**设置为**7.0天**。如果不是，请将其设置为**7.0天**。同样操作**时间窗口**选项。![如何操作...](img/B04314_02_18.jpg)
- en: Click on **OK**.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**。
- en: Save your map document. It's very important that you save the time-enabled data
    with your map document. The code you write next won't work unless you do so.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的地图文档。保存与地图文档关联的时间启用数据非常重要。除非这样做，否则你编写的代码将无法工作。
- en: Open the Python Window.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE57]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Reference the currently active document (`Crime_Ch2.mxd`), and assign the reference
    to a variable:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动的文档（`Crime_Ch2.mxd`），并将引用分配给一个变量：
- en: '[PRE58]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Retrieve the `Crime` data frame:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取`Crime`数据帧：
- en: '[PRE59]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Generate the `DataFrameTime` object:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成`DataFrameTime`对象：
- en: '[PRE60]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Set the `DataFrameTime.currentTime` property to the `DataFrameTime.startTime`
    property:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`DataFrameTime.currentTime`属性设置为`DataFrameTime.startTime`属性：
- en: '[PRE61]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Start a `while` loop that will loop through the time while the `currentTime`
    is less than or equal to the `endTime`:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动一个`while`循环，该循环将在`currentTime`小于或等于`endTime`时循环：
- en: '[PRE62]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Inside the while loop, create a file for each PDF that will be created, export
    the PDF, and reset the `currentTime` property. The entire `while` loop should
    appear as follows:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在while循环内部，为每个将要创建的PDF文件创建一个文件，导出PDF，并重置`currentTime`属性。整个`while`循环应如下所示：
- en: '[PRE63]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: The entire script should appear as follows. You can consult the solution file
    at `c:\ArcpyBook\code\Ch2\TimeEnabledLayers.py` to verify the accuracy of your
    code:![How to do it...](img/B04314_02_24.jpg)
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示。你可以查阅位于`c:\ArcpyBook\code\Ch2\TimeEnabledLayers.py`的解决方案文件来验证你代码的准确性：![如何操作...](img/B04314_02_24.jpg)
- en: How it works…
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `DataFrameTime` object provides access to time management operations in
    a data frame. Several properties of `DataFrameTime`, including `currentTime`,
    `startTime`, `endTime`, and `timeStepInterval`, are used in this recipe. Initially,
    we set the `currentTime` property equal to the `startTime` property. The initial
    `startTime` was calculated when you set the **Time Step Interval:** properties
    in ArcMap. The `while` loop was set up to loop as long as the `currentTime` property
    is greater than the `endTime` property. Inside the loop, we created a `fileName`
    variable that is set to the `currentTime` property, plus an extension of `.pdf`.
    We then called the `ExportToPDF()` function, passing in a path and the filename.
    This should ideally export the page layout view to the PDF file. Finally, we updated
    the `currentTime` property by the `timeStepInterval` property that was set to
    **7.0 days** in in the **Time Step Interval:** properties dialog.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrameTime`对象提供了对数据帧中时间管理操作的访问。在这个菜谱中使用了`DataFrameTime`的几个属性，包括`currentTime`、`startTime`、`endTime`和`timeStepInterval`。最初，我们将`currentTime`属性设置为`startTime`属性。初始`startTime`是在你设置ArcMap中的**时间步长间隔**属性时计算的。`while`循环被设置为在`currentTime`属性大于`endTime`属性时循环。在循环内部，我们创建了一个`fileName`变量，将其设置为`currentTime`属性，并添加一个`.pdf`扩展名。然后我们调用`ExportToPDF()`函数，传入路径和文件名。理想情况下，这将导出页面布局视图到PDF文件。最后，我们通过将**时间步长间隔**属性中设置的**7.0天**更新`currentTime`属性。'
