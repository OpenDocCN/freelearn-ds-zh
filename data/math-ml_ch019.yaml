- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Topology, Limits, and Continuity
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 拓扑、极限和连续性
- en: 'In the previous chapter, we learned all (that’s relevant to us) about numbers,
    sequences, and series. These are the foundational objects of calculus: numbers
    define sequences, sequences define limits, and limits define almost every quantity
    that interests us. However, there’s a snag. Let’s look ahead and take a look at
    the definition of the derivative:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了所有（与我们相关的）关于数字、序列和级数的知识。这些是微积分的基础对象：数字定义序列，序列定义极限，极限定义了几乎所有我们感兴趣的量。然而，这里有一个难点。让我们往前看，看看导数的定义：
- en: '![ ′ f-(x-)−-f(y) f (y) = xli→my x − y ](img/file1079.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![ ′ f-(x-)−-f(y) f (y) = xli→my x − y ](img/file1079.png)'
- en: 'If you’re feeling a sense of déjà vu, don’t be surprised. We looked at this
    exact formula in the introduction of the previous chapter as well, and we are
    much closer to understanding it. We have learned about limits, but there seems
    to be an issue: limits were defined in terms of sequences, and the expression
    lim[x→y]whatever(x) does not seem to be it.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感到有些似曾相识，别感到惊讶。我们在上一章的引言中也看到了这个公式，而且我们离理解它已经更近了。我们已经学习了极限，但似乎存在一个问题：极限是通过序列来定义的，而表达式lim[x→y]whatever(x)似乎并不是极限的定义。
- en: What is it, then? This is what we’ll learn in this chapter, starting with the
    topology of real numbers. Let’s go!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这到底是什么呢？这是我们将在本章学习的内容，从实数的拓扑开始。我们出发吧！
- en: 11.1 Topology
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.1 拓扑
- en: According to the [Cambridge English Dictionary](https://dictionary.cambridge.org/dictionary/english/topology),
    the word “topology” means
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[剑桥英语词典](https://dictionary.cambridge.org/dictionary/english/topology)，"拓扑"一词的意思是
- en: the way the parts of something are organized or connected.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 某物的各个部分是如何组织或连接的。
- en: From a mathematical perspective, topology studies the local properties of structures
    and spaces.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 从数学角度看，拓扑研究结构和空间的局部属性。
- en: In machine learning, we are often interested in global properties like minima
    and maxima but only have local tools to search for them. One example is the derivative
    of functions. Derivatives describe the slope of the tangent plane, and as Figure [11.1](#)
    illustrates, this doesn’t change if the function is modified away from the point
    where the derivative is taken.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习中，我们通常关注的是像最小值和最大值这样的全局属性，但我们只有局部工具来寻找它们。一个例子是函数的导数。导数描述了切平面的斜率，正如图[11.1](#)所示，如果函数在导数求取的点附近发生变化，斜率并不会改变。
- en: '![PIC](img/file1080.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1080.png)'
- en: 'Figure 11.1: The derivatives of two functions are equal if the functions are
    equal in any small interval around the point'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1：如果两个函数在某个点周围的任何小区间内相等，则它们的导数也相等。
- en: In mathematics, local properties are handled in terms of sequences and neighborhoods.
    We learned about sequences in the last chapter, and now we will tackle the subject
    of neighborhoods.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在数学中，局部属性是通过序列和邻域来处理的。我们在上一章学习了序列，现在我们将探讨邻域的概念。
- en: 'We are going to focus on three fundamental aspects:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将关注三个基本方面：
- en: open and closed sets,
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开集合和闭集合，
- en: the behavior of sequences within sets,
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合中序列的行为，
- en: and their smallest and largest elements, upper and lower bounds.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及它们的最小元素和最大元素，上界和下界。
- en: Our main goal with mathematical analysis is to understand gradient descent,
    a fundamental tool for training models. To do that, we need to understand limits.
    For that, we need understand sequences and real numbers, leading us deep into
    the rabbit hole where we are now.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进行数学分析的主要目标是理解梯度下降，这是训练模型的基本工具。为了做到这一点，我们需要理解极限。为此，我们需要理解序列和实数，这将把我们带入当前所处的深奥领域。
- en: Think of it as learning the Python language versus learning TensorFlow or PyTorch.
    Since we want to do machine learning, we ultimately want to learn a high-level
    framework. However, if we lack the understanding of the basic keywords in Python,
    like import or def, we are not ready to learn and productively use advanced tools.
    Sequences, open and closed sets, limits, and others are the fundamental building
    blocks of mathematical analysis, the language of optimization.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，学习Python语言和学习TensorFlow或PyTorch的区别。由于我们想做机器学习，最终我们想学习一个高级框架。然而，如果我们没有掌握Python的基本关键字，比如import或def，我们就不准备学习并有效使用这些高级工具。序列、开集合、闭集合、极限等是数学分析的基础构件，而数学分析则是优化的语言。
- en: 11.1.1 Open and closed sets
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.1 开集合和闭集合
- en: Let’s start our discussion with open and closed sets! (In this chapter, when
    we refer to something as a subset or set, it is implicitly assumed to be within
    ℝ.)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从开集和闭集的讨论开始！(在本章中，当我们提到子集或集合时，隐含假定它是在 ℝ 中。)
- en: Definition 45\. (Open and closed sets)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 45.（开集和闭集）
- en: Let A ⊆ℝ be a subset of the real numbers.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让 A ⊆ℝ 为实数的子集。
- en: (a) A is open if for every x ∈A, there is a 𝜀/span>0 such that (x−𝜀,x + 𝜀) ⊆A.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 如果对于每一个 x ∈A，都存在一个 𝜀/span>0，使得 (x−𝜀,x + 𝜀) ⊆A，则 A 是开的。
- en: (b) A is closed if its complement ℝ ∖A is open.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 如果 A 是闭的，则它的补集 ℝ ∖A 是开的。
- en: Before we start analyzing the properties of open and closed sets, here are some
    key examples for building up useful mental models.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始分析开集和闭集的性质之前，这里有一些关键示例，以帮助建立有用的思维模型。
- en: 'Example 1\. Intervals of the form (a,b) = {x ∈ℝ : a/span>x/span>b} are open.
    This can be easily seen by picking any x ∈ (a,b) and letting 𝜀 = min{jx −aj∕2,jx
    −bj∕2}. Essentially, we take the distance from the closest endpoint and cut that
    in half. Any point that is closer to x than the half-distance of the closest endpoint
    will also be in (a,b).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '示例 1. 形式为 (a,b) = {x ∈ℝ : a/span>x/span>b} 的区间是开的。通过选择任何 x ∈ (a,b) 并令 𝜀 = min{jx
    −aj∕2,jx −bj∕2}，可以很容易地看出这一点。本质上，我们取距离最近端点的距离并将其减半。任何比距离最近端点的一半还要接近 x 的点也将位于 (a,b)
    中。'
- en: 'Example 2\. Intervals of the form [a,b] = {x ∈ℝ : a ≤x ≤b} are closed. Indeed,
    its complement is ℝ ∖ [a,b] = (−∞,a) ∪ (b,∞). Using the reasoning above, it is
    easy to see that (−∞,a) ∪ (b,∞) is open.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '示例 2. 形式为 [a,b] = {x ∈ℝ : a ≤x ≤b} 的区间是闭的。事实上，它的补集是 ℝ ∖ [a,b] = (−∞,a) ∪ (b,∞)。根据上述推理，很容易看出
    (−∞,a) ∪ (b,∞) 是开集。'
- en: 'Example 3\. Intervals of the form (a,b] = {x ∈ℝ : a/span>x ≤b} are neither
    open nor closed. To see that it is not open, observe that no interval containing
    b is fully within (a,b], since b is an endpoint. For similar reasons, its complement
    ℝ ∖ (a,b] = (−∞,a] ∪ (b,∞) is not open.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '示例 3. 形式为 (a,b] = {x ∈ℝ : a/span>x ≤b} 的区间既不是开集也不是闭集。要看它不是开的，观察到没有一个包含 b 的区间完全位于
    (a,b] 内，因为 b 是端点。出于类似的原因，它的补集 ℝ ∖ (a,b] = (−∞,a] ∪ (b,∞) 也不是开的。'
- en: An important takeaway from the last example is that if a set is not closed,
    it doesn’t mean that it is open and vice versa.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个例子中的一个重要结论是，如果一个集合不是闭的，并不意味着它是开的，反之亦然。
- en: We can rephrase the definition of openness by introducing the concept of neighborhoods.
    The neighborhoods of a given point x are the open intervals (a,b) containing x.
    With this terminology, any set A is open if, for any x ∈A, there exists a neighborhood
    of x that is fully contained within A. From this aspect, openness means that there
    is still “room to move” from any point.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过引入邻域的概念来重新表述开集的定义。给定点 x 的邻域是包含 x 的开区间 (a,b)。使用这个术语，如果对于任何 x ∈A，存在一个包含
    x 的邻域完全位于 A 内，则集合 A 是开的。从这个角度来看，开集意味着从任何点出发，仍然有“活动的空间”。
- en: The most fundamental property of open and closed sets is their behavior under
    union and intersection. As this holds for any collection of open and closed sets,
    we need to introduce a new notation here. Recall that if we have the sets A[1],…,A[n],
    their union can be abbreviated as
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 开集和闭集的最基本性质是它们在并集和交集下的行为。由于这一点适用于任何开集和闭集的集合，我们需要在此引入一种新的符号。回顾一下，如果我们有集合 A[1],…,A[n]，它们的并集可以简写为
- en: '![∪nk=1Ak = A1 ∪⋅⋅⋅∪ An. ](img/file1081.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![∪nk=1Ak = A1 ∪⋅⋅⋅∪ An. ](img/file1081.png)'
- en: This is denoted similarly for the intersection. If we have countable sets, we
    can even write
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 交集也可以类似表示。如果我们有可数集，可以写成
- en: '![⋃∞ Ak, k=1 ](img/file1082.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![⋃∞ Ak, k=1 ](img/file1082.png)'
- en: but what can we do if we have an uncountable collection of sets? Say, ![Ac =
    [0,c] ](img/file1083.png) for all ![c ∈ (0,∞ ) ](img/file1084.png). In this case,
    we use the expression
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有不可数集合的集合，我们该怎么做呢？假设 ![Ac = [0,c] ](img/file1083.png) 对所有 ![c ∈ (0,∞ ) ](img/file1084.png)
    都成立。在这种情况下，我们使用表达式
- en: '![⋃ Ac. c> ](img/file1085.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![⋃ Ac. c> ](img/file1085.png)'
- en: For a general set ![Γ ](img/file1086.png), we talk about the collection of sets
    defined by ![{Aγ }γ∈ Γ ](img/file1087.png), and the union/intersection
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一般集合 ![Γ ](img/file1086.png)，我们讨论由 ![{Aγ }γ∈ Γ ](img/file1087.png) 定义的集合，以及其并集/交集
- en: '![ ⋃ A , ⋂ A . γ∈Γ γ γ∈Γ γ ](img/file1088.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![ ⋃ A , ⋂ A . γ∈Γ γ γ∈Γ γ ](img/file1088.png)'
- en: Now, let’s see our first theorem!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看第一个定理！
- en: Theorem 66\.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 66.
- en: Let ![{Aγ} γ∈ Γ ](img/file1089.png) be an arbitrary collection of sets.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 令 ![{Aγ} γ∈ Γ ](img/file1089.png) 为任意集合的集合。
- en: (a) If each ![A γ ](img/file1090.png) is open, then
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 如果每个 ![A γ ](img/file1090.png) 都是开的，则
- en: '![ ⋃ A γ∈Γ γ ](img/file1091.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![ ⋃ A γ∈Γ γ ](img/file1091.png)'
- en: is also open.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 也是开的。
- en: (b) If each ![Aγ ](img/file1092.png) is closed, then
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 如果每个 ![Aγ ](img/file1092.png) 都是闭集，则
- en: '![ ⋂ Aγ γ∈Γ ](img/file1093.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![ ⋂ Aγ γ∈Γ ](img/file1093.png)'
- en: is also closed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 也是闭集。
- en: Proof. (a) Suppose that A[γ],γ ∈ Γ are open sets and let x ∈∪[γ∈Γ]A[γ]. Because
    x is in the union, there is some γ[0] ∈ Γ such that x ∈ A[γ[0]]. Because A[γ[0]]
    is open, there is a small neighborhood (a,b) of x such that (a,b) ⊆A[γ[0]]. Because
    of this, (a,b) ⊆∪[γ∈Γ]A[γ], which is what we had to show.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。（a）假设 A[γ], γ ∈ Γ 是开集，并且设 x ∈ ∪[γ∈Γ] A[γ]。因为 x 在并集中，所以存在某个 γ[0] ∈ Γ，使得 x
    ∈ A[γ[0]]。由于 A[γ[0]] 是开集，因此存在一个以 x 为中心的小邻域 (a,b)，使得 (a,b) ⊆ A[γ[0]]。因此，(a,b) ⊆
    ∪[γ∈Γ] A[γ]，这就是我们需要证明的内容。
- en: (b) Now let A[γ],γ ∈ Γ be closed sets. In this case, De Morgan’s laws (Theorem [153](ch037.xhtml#x1-377003r153))
    imply that ℝ ∖ (∩[γ∈Γ]A[γ]) = ∪[γ∈Γ](ℝ ∖A[γ]). Since each A[γ] is closed, ℝ ∖A[γ]
    is open. As we have previously seen, the union of open sets is open.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: （b）现在设 A[γ], γ ∈ Γ 是闭集。在这种情况下，德·摩根定律（定理 [153](ch037.xhtml#x1-377003r153)）表明，ℝ
    ∖ (∩[γ∈Γ] A[γ]) = ∪[γ∈Γ] (ℝ ∖ A[γ])。由于每个 A[γ] 都是闭集，因此 ℝ ∖ A[γ] 是开集。正如我们之前所见，开集的并集仍然是开集。
- en: The closedness and openness of a set influence its behavior regarding set sequences.
    The first fundamental result regarding this is Cantor’s axiom.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 集合的闭合性和开集性影响其在集合序列中的行为。关于这一点的第一个基本结果就是康托尔公理。
- en: Theorem 67\. (Cantor’s axiom)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 67.（康托尔公理）
- en: Let I[n] = [a[n],b[n]] ⊆ ℝ be a sequence of intervals such that I[n+1] ⊆ I[n]
    for every n ∈ℕ. Then, the intersection ∩[n=1]^∞I[n] is nonempty.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 设 I[n] = [a[n], b[n]] ⊆ ℝ 为一列区间，满足对于每个 n ∈ ℕ，I[n+1] ⊆ I[n]。则交集 ∩[n=1]^∞ I[n]
    非空。
- en: This seemingly simple proposition is a profound property of real numbers, one
    that ultimately follows from their mathematical construction. Cantor’s axiom is
    not true, for instance, if we talk about subsets of ℚ instead of ℝ. Think about
    a sequence of rational numbers a[n] →π that approximates π from below, and another
    sequence b[n] →π that approximates π from above, that is,
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这个看似简单的命题是实数的一个深刻特性，最终来源于它们的数学构造。例如，如果我们讨论的是 ℚ 的子集而不是 ℝ，那么康托尔公理就不成立。考虑一个从下方逼近π的有理数序列
    a[n] → π，以及一个从上方逼近π的序列 b[n] → π，也就是说，
- en: '![an <π <bn, an,bn ∈ ℚ. ](img/file1094.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![an <π <bn, an,bn ∈ ℚ. ](img/file1094.png)'
- en: The intersection of the intervals [a[n],b[n]] only contains π, which is not
    rational. Thus, in the space of rational numbers, ∩[n=1]^∞[a[n],b[n]] = ∅, therefore
    Cantor’s axiom doesn’t hold there.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 区间 [a[n], b[n]] 的交集仅包含 π，而 π 不是有理数。因此，在有理数空间中，∩[n=1]^∞ [a[n], b[n]] = ∅，因此康托尔公理在这里不成立。
- en: 'There is an old proverb about losing the war because of a nail in a horseshoe.
    It goes something like this:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有一句古老的谚语，说的是因为一颗钉子丢失了战斗。大意是这样的：
- en: For want of a nail the shoe was lost. For want of a shoe the horse was lost.
    For want of a horse the rider was lost. For want of a rider the message was lost.
    For want of a message the battle was lost. For want of a battle the kingdom was
    lost. And all for the want of a horseshoe nail.
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 因为缺少一颗钉子，鞋子丢失了。因为缺少一只鞋，马丢失了。因为缺少一匹马，骑士丢失了。因为缺少一位骑士，消息丢失了。因为缺少一条消息，战斗丢失了。因为缺少一场战斗，王国丢失了。所有这一切都是因为缺少一颗马蹄铁钉。
- en: Think about Cantor’s axiom as the nail in the horseshoe. Without it, we can’t
    talk about taking limits of sequences. Without limits, there are no gradients.
    Without gradients, there is no gradient descent, and consequently, we can’t fit
    machine learning models.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 将康托尔公理看作是马蹄铁中的钉子。没有它，我们无法讨论序列的极限。没有极限，就没有梯度。没有梯度，就没有梯度下降，因此我们无法拟合机器学习模型。
- en: 11.1.2 Distance and topology
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.2 距离与拓扑
- en: Originally, we defined open sets in terms of small open intervals like (x −𝜀,x
    + 𝜀). We called a set open if you could squeeze in such a small interval for each
    of its points. By taking a step of abstraction, we can rephrase the definition
    in terms of norms (Definition [7](ch008.xhtml#x1-40015r7)).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，我们通过类似 (x − 𝜖, x + 𝜖) 这样的开区间定义开集。我们称一个集合为开集，如果对其中的每个点都能找到一个这样的小区间。通过抽象化，我们可以将定义重新表述为范数（定义
    [7](ch008.xhtml#x1-40015r7)）。
- en: From this viewpoint, an interval (x−𝜀,x + 𝜀) is the same as a one-dimensional
    open ball. Given a normed space V with the norm j ⋅j, the ball of radius r/span>0
    centered at x is defined by
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个角度看，区间 (x − 𝜖, x + 𝜖) 与一维开球是相同的。给定一个带范数 j ⋅ j 的范数空间 V，半径为 r/span>0 且以 x 为中心的球定义为
- en: '![B(x,r) := {y ∈ V : ∥x − y∥ <r}. ](img/file1095.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![B(x,r) := {y ∈ V : ∥x − y∥ <r}. ](img/file1095.png)'
- en: Equivalently, a ball of radius r is the set of points with distance less than
    r from the center point. In the Euclidean spaces ℝ^n, with the norm ∥x∥ = ![∘
    -2---------2 x1 + ⋅⋅⋅+ x n](img/file1096.png), this matches our intuitive understanding.
    This is illustrated in Figure [11.2](#).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 等价地，半径为 r 的球体是与中心点距离小于 r 的所有点的集合。在欧几里得空间 ℝ^n 中，使用范数 ∥x∥ = ![∘ -2---------2 x1
    + ⋅⋅⋅+ x n](img/file1096.png)，这与我们的直观理解相符。此内容在图 [11.2](#)中进行了说明。
- en: '![PIC](img/file1097.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1097.png)'
- en: 'Figure 11.2: Balls, from one to three dimensions'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.2：球体，从一维到三维
- en: However, in one dimension, the Euclidean norm simplifies to ∥x∥ = jxj. Thus,
    we have
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在一维中，欧几里得范数简化为 ∥x∥ = jxj。因此，我们有
- en: '![B (x,r) = {y ∈ ℝ : |x − y| <r} = (x − r,x+ r). ](img/file1098.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![B (x,r) = {y ∈ ℝ : |x − y| <r} = (x − r,x+ r). ](img/file1098.png)'
- en: We don’t often think about the interval (x −𝜀,x + 𝜀) as the one-dimensional
    ball B(x,𝜀). However, making this connection will make it easy to later extend
    the topology of ℝ to ℝ^n, which is where we want to work eventually.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常不将区间 (x −𝜀,x + 𝜀) 视为一维球体 B(x,𝜀)。然而，建立这种联系将使得以后将 ℝ 的拓扑扩展到 ℝ^n 变得容易，而这正是我们最终希望工作的地方。
- en: With norms and balls, we can rephrase the definition of open sets in the following
    way.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 利用范数和球体，我们可以用以下方式重新表述开集的定义。
- en: Definition 46\. (Open sets, second take)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 46.（开集，第二版）
- en: Let A ⊆ℝ be a subset of the real numbers.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 设 A ⊆ℝ 是实数集合的一个子集。
- en: A is open if for every x ∈A, there is a one-dimensional ball B(x,𝜀) of radius
    𝜀 centered around x such that B(x,𝜀) ⊆A.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对于每个 x ∈A，存在一个以 x 为中心、半径为 𝜀 的一维球体 B(x,𝜀)，使得 B(x,𝜀) ⊆A，则 A 是开集。
- en: Thus, in a sense, open sets are determined by open balls.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，从某种意义上说，开集是由开球确定的。
- en: 11.1.3 Sets and sequences
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.3 集合与序列
- en: Closed sets can be characterized in terms of their sequences. The following
    theorem shows an equivalent definition of closed sets, giving us a helpful way
    of thinking about them.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 闭集可以通过它们的序列来刻画。以下定理给出了闭集的等价定义，为我们提供了一种有用的思考方式。
- en: Theorem 68\. (Characterization of closed sets with sequences)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 68.（用序列刻画闭集）
- en: Let A ⊆ℝ be a set. The following are equivalent.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 设 A ⊆ℝ 是一个集合。以下是等价的。
- en: (a) A is closed.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: (a) A 是闭集。
- en: (b) If {a[n]}[n=1]^∞⊆A is a convergent sequence, then lim[n→∞]a[n] ∈A.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 如果 {a[n]}[n=1]^∞⊆A 是一个收敛序列，那么 lim[n→∞]a[n] ∈A。
- en: 'Proof. To prove that the two statements are equivalent, we have to show two
    things: that (a) implies (b) and that (b) implies (a). Don’t worry if this proof
    seems too complicated when you read it the first time. If you don’t understand
    it right away, I suggest thinking about A as a closed interval and drawing a figure.
    You can also skip it since I will refer back to this fact every time we need it
    later.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。为了证明这两个命题等价，我们需要证明两点：即 (a) 推出 (b)，以及 (b) 推出 (a)。如果你第一次阅读这个证明时觉得它很复杂，不用担心。如果你不能立即理解，建议将
    A 看作一个闭区间并画一个图。你也可以跳过这个部分，因为我会在以后的每次需要时再提到这个事实。
- en: 'First, let’s see that (a) implies (b). Thus, suppose that A is closed and {a[n]}[n=1]^∞
    ⊆ A is a convergent sequence, a := lim[n→∞]a[n]. We have to show that a ∈A, and
    we are going to do this by contradiction. The plan is the following: assume that
    a![∕∈](img/file1099.png)A and deduce that {a[n]} must eventually leave A.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们来看 (a) 如何推导出 (b)。假设 A 是闭集，且 {a[n]}[n=1]^∞ ⊆ A 是一个收敛序列，设 a := lim[n→∞]a[n]。我们需要证明
    a ∈A，并且将通过反证法来证明。证明的思路如下：假设 a![∕∈](img/file1099.png)A，并推导出 {a[n]} 必定最终离开 A。
- en: Indeed, suppose that a ∈ℝ ∖A. Because A is closed, ℝ ∖A is open, so there is
    a small neighborhood (a −𝜀,a + 𝜀) ⊆ℝ ∖A. In plain English, this means that we
    can separate a from A. This contradicts the fact that {a[n]} ⊆ A and a[n] → a,
    because according to the definition of convergence (Definition [39](ch018.xhtml#x1-166003r39)),
    eventually all members of the sequence have to fall into (a −𝜀,a + 𝜀). This is
    a contradiction, so a ∈A.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，假设 a ∈ℝ ∖A。由于 A 是闭集，ℝ ∖A 是开集，因此存在一个小的邻域 (a −𝜀,a + 𝜀) ⊆ℝ ∖A。通俗来说，这意味着我们可以将
    a 与 A 分开。这与 {a[n]} ⊆ A 且 a[n] → a 的事实相矛盾，因为根据收敛的定义（定义 [39](ch018.xhtml#x1-166003r39)），最终序列中的所有成员都必须落入
    (a −𝜀,a + 𝜀) 中。由于产生了矛盾，因此 a ∈A。
- en: Second, we will show that (b) implies (a), that is, if the limit of every convergent
    sequence of A is also in A, then the set is closed. Our goal is to show that ℝ
    ∖A is open. More precisely, if x ∈ ℝ ∖A, we want to find a small neighborhood
    (x −𝜀,x + 𝜀) that is disjointed from A. Again, we can show this via contradiction.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们将证明 (b) 推出 (a)，即如果 A 中每个收敛序列的极限也在 A 中，那么该集合是闭集。我们的目标是证明 ℝ ∖A 是开集。更精确地说，如果
    x ∈ ℝ ∖A，我们希望找到一个与 A 不相交的小邻域 (x −𝜀,x + 𝜀)。同样，我们可以通过反证法来证明这一点。
- en: Suppose that no matter how small 𝜀 > 0 is, we can find an a ∈ A∩(x−𝜀,x+𝜀). Thus,
    we can define a sequence {a[n]}[n=1]^∞ such that a[n] ∈A ∩ (x − 1∕n,x + 1∕n).
    Due to the construction lim[n→∞]a[n] = a, and as A is closed to taking limits
    according to the premise (b), this would imply that a ∈A, which is a contradiction.
    This is what we had to show.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 假设无论𝜖 > 0有多小，我们都可以找到一个a ∈ A∩(x−𝜖,x+𝜖)。因此，我们可以定义一个序列{a[n]}[n=1]^∞，使得a[n] ∈A ∩
    (x − 1∕n,x + 1∕n)。由于构造过程，lim[n→∞]a[n] = a，而根据前提(b)的规定，A是闭合的，因此这意味着a ∈A，这与假设矛盾。这就是我们需要证明的内容。
- en: This result also explains the origins of the terminology closed. A closed set
    is such because it is closed to limits.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这个结果也解释了“闭集”术语的来源。闭集之所以被称为“闭集”，是因为它对极限是闭合的。
- en: 11.1.4 Bounded sets
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.4 有界集合
- en: From a (very) high-level view, machine learning can be described as an optimization
    problem. For inputs x and predictions y, we are looking at a parametrized family
    of functions f(x,w), where our parameters are condensed in the variable w.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个（非常）高层次的角度来看，机器学习可以被描述为一个优化问题。对于输入x和预测y，我们考虑一个参数化的函数族f(x,w)，其中我们的参数集中在变量w中。
- en: Given a set of samples and observations, our goal is to find the minimum of
    the set
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一组样本和观察值，我们的目标是找到这个集合的最小值。
- en: '{Loss(*f*(**x**, **w**), **y**) : **w** ∈ ℝ^(a very large number)} ⊆ ℝ, (11.1)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '{Loss(*f*(**x**, **w**), **y**) : **w** ∈ ℝ^(一个非常大的数字)} ⊆ ℝ, (11.1)'
- en: and the parameter configuration w where the optimum is attained. To make sure
    that our foundations are not missing this building block, we are going to take
    some time to study this.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以及参数配置w，其中最优解达到。为了确保我们的基础不缺少这一构建块，我们将花些时间研究这个问题。
- en: Definition 47\. (Bounded sets)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 定义47\. （有界集合）
- en: Let A ⊆ℝ.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 设A ⊆ℝ。
- en: (a) A is bounded from below if there is an m ∈ ℝ such that m/span>x for all
    x ∈A. The number m is called a lower bound.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 如果存在一个m ∈ ℝ，使得对于所有x ∈ A都有m ≤ x，则称A从下方有界。这个值m称为下界。
- en: (b) A is bounded from above if there is an M ∈ ℝ such that x/span>M for all
    x ∈A. Similar to before, M is called an upper bound.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 如果存在一个M ∈ ℝ，使得对于所有x ∈ A都有x ≤ M，则称A从上方有界。类似之前，M称为上界。
- en: (c) A is bounded if it is bounded from above and below.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: (c) 如果一个集合从上界和下界都有界，则称其为有界的。
- en: 'Being bounded means that we can include the set in a large interval [m,M].
    For optimization, there are a few essential quantities that are related to bounds:
    minimal and maximal elements, smallest upper bounds, and largest lower bounds.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 有界意味着我们可以将该集合包含在一个大区间[m, M]中。对于优化问题，有一些与界限相关的重要量：最小和最大元素、最小上界和最大下界。
- en: Let’s start with formalizing the concept of the smallest and largest elements
    within a set.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从形式化集合中最小和最大元素的概念开始。
- en: Definition 48\. (Minimal and maximal elements)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 定义48\. （最小元素和最大元素）
- en: Let A ⊆ℝ.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 设A ⊆ℝ。
- en: (a) m ∈ A is called the minimal element of A if for every a ∈ A, m ≤ a holds.
    The minimal element is denoted by m = minA.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 如果对于每个a ∈ A，都有m ≤ a，那么m ∈ A称为A的最小元素。最小元素记作m = minA。
- en: (b) M ∈A is called the maximal element of A if for every a ∈A, a ≤M holds. The
    maximal element is denoted by M = maxA.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 如果对于每个a ∈ A，都有a ≤ M，那么M ∈ A称为A的最大元素。最大元素记作M = maxA。
- en: As usual, let’s see some examples.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如常见，让我们看一些例子。
- en: Example 1\. The set A = [0,1] ∪ [2,3] has both minimal and maximal elements.
    Its minimal element is 0, and its maximal element is 3.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 示例1\. 集合A = [0,1] ∪ [2,3]既有最小元素，也有最大元素。它的最小元素是0，最大元素是3。
- en: 'Example 2\. The set A = {![1n](img/file1102.png) : n ∈ℕ} has no minimal element.
    0 is the largest lower bound, but since it is not in the set, it is not a minimal
    element.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '示例2\. 集合A = {![1n](img/file1102.png) : n ∈ℕ}没有最小元素。0是最大的下界，但由于它不在集合中，因此不是最小元素。'
- en: The key takeaway is that minimal and maximal elements do not necessarily exist.
    To avoid the inconvenience, we need related quantities that always exist.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 关键的结论是，最小元素和最大元素不一定存在。为了避免不便，我们需要一些始终存在的相关量。
- en: These will be the infimum and supremum.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这些将是下确界和上确界。
- en: Definition 49\. (Infimum and supremum)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 定义49\. （下确界和上确界）
- en: Let A ⊆ℝ.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 设A ⊆ℝ。
- en: (a) inf A ∈ℝ is the largest lower bound of A if m ≤ inf A holds for every lower
    bound m. This is called the infimum.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: (a) inf A ∈ℝ是A的最大下界，如果对于每个下界m都有m ≤ inf A。这个值叫做下确界。
- en: (b) supA ∈ℝ is the smallest upper bound of A if M ≥ supA holds for every upper
    bound M. This is called the supremum.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: (b) supA ∈ℝ是A的最小上界，如果对于每个上界M，都有M ≥ supA。这个值叫做上确界。
- en: We won’t go into great detail here, but the infimum and supremum always exist.
    However, it is essential to note that there is a sequence {a[n]}[n=1]^∞⊆A such
    that a[n] → inf A. (This is true for the supremum as well.)
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里不打算深入讨论，但下确界和上确界总是存在的。然而，必须注意的是，存在一个序列 {a[n]}[n=1]^∞ ⊆ A，使得 a[n] → inf
    A。（对上确界同样成立。）
- en: 11.1.5 Compact sets
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.5 紧致集
- en: With the concept of infimum and supremum, we can formalize the optimization
    problem for machine learning described by ([11.1](ch019.xhtml#bounded-sets)) as
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 通过下确界和上确界的概念，我们可以将机器学习中的优化问题形式化，描述为([11.1](ch019.xhtml#bounded-sets))：
- en: '![inf {Loss(f (x, w),y) : w ∈ ℝn }, ](img/file1103.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![inf {Loss(f (x, w), y) : w ∈ ℝn }, ](img/file1103.png)'
- en: where this number represents the smallest possible value of the loss function
    and w is the parameter of our model.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，这个数字表示损失函数的最小可能值，而 w 是我们模型的参数。
- en: However, there is a significant issue with the w ∈ℝ^n part. First, our parameter
    space is high-dimensional. In practice, n can be in the millions. Besides that,
    we are looking at an unbounded parameter space, where such an optimum might not
    even exist. Finally, is there even a parameter w where the infimum is attained?
    After all, this is what we are primarily interested in.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，w ∈ ℝ^n 部分存在一个显著问题。首先，我们的参数空间是高维的。在实际应用中，n 可能达到百万级别。除此之外，我们正在处理一个无界的参数空间，在这个空间中，可能根本不存在这样的最优解。最后，是否存在一个参数
    w 使得下确界得以实现？毕竟，这正是我们最关心的问题。
- en: 'We can restrict the parameter space to a closed and bounded set to fix these
    issues. These sets are so prevalent that they have their own name: compact sets.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将参数空间限制在一个闭且有界的集合上，以解决这些问题。这些集合非常常见，以至于有了专门的名称：紧致集。
- en: Definition 50\. (Compact sets)
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 50. （紧致集）
- en: The set A ⊆ℝ is compact if it is bounded and closed.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 集合 A ⊆ ℝ 是紧致的，当且仅当它是有界的并且是闭集。
- en: We love compact sets. Even though their definition seems straightforward, these
    two properties have profound consequences regarding optimization. At this point,
    we are not ready to talk about this in detail, but we can find minima or maxima
    in practice because continuous functions behave nicely on compact sets.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们喜欢紧致集。尽管它们的定义看似简单，但这两条性质对于优化有着深远的影响。目前，我们还不准备详细讨论这个问题，但实际上我们可以在紧致集上找到最小值或最大值，因为连续函数在紧致集上表现得很好。
- en: 'There is a key result about compact sets that will constantly resurface during
    our studies of functions: the Bolzano-Weierstrass theorem.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 关于紧致集有一个关键结果，它将在我们研究函数的过程中不断浮现：博尔扎诺-魏尔施特拉斯定理。
- en: Theorem 69\. (Bolzano-Weierstrass)
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 69. （博尔扎诺-魏尔施特拉斯定理）
- en: In a compact set, every sequence has a convergent subsequence.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在紧致集中，每个序列都有一个收敛的子序列。
- en: Proof. Let A ⊆ ℝ be a compact set, and {a[n]}[n=1]^∞ be an arbitrary sequence
    in A.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。设 A ⊆ ℝ 是一个紧致集，{a[n]}[n=1]^∞ 是 A 中的一个任意序列。
- en: Because A is compact, there exists an interval I[1] := [m,M] that contains A
    in its entirety. By cutting this interval in half, we obtain [m,(m+M)∕2] and [(m+M)∕2,M].
    At least one of these will contain infinitely many points from {a[n]}; let that
    be I[2]. Repeating this process will yield a sequence of closed intervals I[1]
    ⊇I[2] ⊇I[3]…. The length of I[k] is (M −m)∕2^(k−1), so eventually these will get
    really small.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 A 是紧致的，存在一个区间 I[1] := [m, M]，它包含 A 的所有元素。通过将这个区间一分为二，我们得到 [m, (m+M) / 2]
    和 [(m+M) / 2, M]。至少有一个区间包含 {a[n]} 中的无限多个点；设该区间为 I[2]。重复这个过程会得到一系列闭区间 I[1] ⊇ I[2]
    ⊇ I[3] ……。区间 I[k] 的长度是 (M − m) / 2^(k − 1)，因此这些区间最终会变得非常小。
- en: Due to the construction of these intervals, we can also define a subsequence
    {a[n[k]]}[k=1]^∞ by selecting a[n[k]] such that a[n[k]] ∈I[k].
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些区间的构造，我们还可以通过选择 a[n[k]] 使得 a[n[k]] ∈ I[k] 来定义一个子序列 {a[n[k]]}[k=1]^∞。
- en: According to Cantor’s axiom (Theorem [67](ch019.xhtml#x1-185005r67)), ∩[k=1]^∞I[k]
    is nonempty, so let a ∈∩[k=1]^∞I[k]. Because both a[n[k]] and a are elements of
    I[k], we have
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 根据康托尔公理（定理 [67](ch019.xhtml#x1-185005r67)），∩[k=1]^∞ I[k] 是非空的，所以设 a ∈ ∩[k=1]^∞
    I[k]。由于 a[n[k]] 和 a 都是 I[k] 的元素，我们有：
- en: '![ M − m |a − ank| ≤ --k−1--, k ∈ ℕ. 2 ](img/file1104.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![ M − m |a − ank| ≤ --k−1--, k ∈ ℕ. 2 ](img/file1104.png)'
- en: This shows that lim[k→∞]a[n[k]] = a, which is what we had to show.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明 lim[k→∞] a[n[k]] = a，这正是我们需要证明的。
- en: The technique we used here is called lion catching. How does a mathematician
    catch a lion in the desert? By cutting the desert in half. The lion will be located
    in one half or the other. This section can be cut in half repeatedly until the
    area becomes smaller. Thus, the lion will be trapped there eventually.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用的技巧叫做“捕狮术”。一个数学家如何在沙漠中捕捉一只狮子？通过将沙漠一分为二。狮子将位于其中的一半。这个区间可以不断对半切割，直到面积变得非常小。最终，狮子就会被困在其中。
- en: Now that we understand the topological structure of real numbers and the relation
    to convergent sequences, we can move forward and finally talk about the limit
    of functions!
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们理解了实数的拓扑结构以及与收敛序列的关系，我们可以继续讨论函数的极限！
- en: 11.2 Limits
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.2 极限
- en: Recall that in Section [10.2](ch018.xhtml#sequences) about sequences, we defined
    limits of convergent sequences. Intuitively, limits capture the notion that eventually,
    all elements get as close to the limit as we wish. This concept can be extended
    to functions as well.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾在章节 [10.2](ch018.xhtml#sequences) 中关于序列的内容，我们定义了收敛序列的极限。从直观上看，极限捕捉了这样一个概念：最终，所有元素都可以接近极限值到任意精度。这个概念也可以扩展到函数。
- en: Definition 51\. (Limits of functions)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 51.（函数的极限）
- en: 'Let f : ℝ →ℝ be an arbitrary function. We say that'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '令 f : ℝ →ℝ 为任意函数。我们说'
- en: '![ lim f (x ) = a x→x0 ](img/file1105.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![ lim f (x ) = a x→x0 ](img/file1105.png)'
- en: if for every sequence x[n] →x[0], where x[n] does not equal x[0] for all n,
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对于每个序列 x[n] →x[0]，其中所有 n 的 x[n] 不等于 x[0]，
- en: '![nl→im∞ f(xn) = a ](img/file1106.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![nl→im∞ f(xn) = a ](img/file1106.png)'
- en: holds.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 继续成立。
- en: Right off the bat, there are two essential things to note.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，有两件事需要注意。
- en: The limit of a function is defined in terms of limits of sequences. If all possible
    sequences of the form {f(x[n])} with x[n] → x[0] have the same limit, then lim[x→x[0]]f(x)
    is defined as the common limit.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 函数的极限是通过序列的极限来定义的。如果所有可能的序列 {f(x[n])}，其中 x[n] → x[0]，都具有相同的极限，则 lim[x→x[0]]f(x)
    定义为这个共同的极限。
- en: With ∞-divergent sequences, limits at ±∞ are defined.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于无穷大发散的序列，定义 ±∞ 处的极限。
- en: Here is a figure that helps visualize the process.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一张帮助可视化该过程的图。
- en: '![PIC](img/file1107.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1107.png)'
- en: 'Figure 11.3: Illustration of limits: as x[n] gets closer to 0, f(x[n]) gets
    closer to lim[n→∞]f(x[n])'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3：极限的说明：当 x[n] 越来越接近 0 时，f(x[n]) 越来越接近 lim[n→∞]f(x[n])
- en: To further illustrate the concept of limits for functions, let’s see some examples.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步说明函数极限的概念，下面是一些例子。
- en: Example 1\. Define the function
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 1. 定义函数
- en: '![ ( |{1 if x = 0, f(x) = |(0 otherwise, ](img/file1108.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{1 if x = 0, f(x) = |(0 otherwise, ](img/file1108.png)'
- en: illustrated by Figure [11.4](#). In other words, f(x) is 0 everywhere except
    at 0, where it is 1.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如图 [11.4](#) 所示。换句话说，f(x) 在 0 处为 1，其他地方为 0。
- en: '![PIC](img/file1109.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file1109.png)'
- en: 'Figure 11.4: Plot of f(x)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.4：f(x) 的图像
- en: Does lim[x→0]f(x) exist? Yes. Because for any sequence x[n] → 0 that is not
    0, the limit lim[n→∞]f(x[n]) = 0\. On the other hand, note that lim[x→0]f(x)≠f(0).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: lim[x→0]f(x) 是否存在？是的。因为对于任意不为 0 的序列 x[n] → 0，极限 lim[n→∞]f(x[n]) = 0。另一方面，注意到
    lim[x→0]f(x)≠f(0)。
- en: Example 2\. For our second example, define
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2. 对于我们的第二个例子，定义
- en: '![L(U,V ) = {f : U → V | f is linear}](img/equation_(18).png)(11.2)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![L(U,V ) = {f : U → V | f is linear}](img/equation_(18).png)(11.2)'
- en: 'This is the (in)famous Dirichlet function, which is hard to imagine and impossible
    to plot: its value is 1 at rationals and 0 at irrationals. Not surprisingly, lim[x→x[0]]D(x)
    does not exist for all x[0], because rational and irrational numbers are “dense”:
    every number x[0] can be obtained as a limit of rationals and as a limit of irrationals.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这是著名的（或不太著名的）狄里希雷函数，难以想象且无法绘制图像：它在有理数时取值为 1，在无理数时取值为 0。毫不奇怪，lim[x→x[0]]D(x)
    对于所有 x[0] 都不存在，因为有理数和无理数是“稠密的”：每个数 x[0] 都可以通过有理数和无理数的极限得到。
- en: Since limits of functions are defined as the common limit of sequences, many
    of its properties are inherited from sequences. How sequences behave under operations
    (Theorem [57](ch018.xhtml#x1-167006r57)) determines how function limits behave.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 由于函数的极限是作为序列的共同极限来定义的，因此它的许多性质来自于序列。序列在运算下的行为（定理 [57](ch018.xhtml#x1-167006r57)）决定了函数极限的行为。
- en: Theorem 70\. (Operations and limits)
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 70.（运算与极限）
- en: Let f and g be two functions.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 令 f 和 g 为两个函数。
- en: (a)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: (a)
- en: '![xli→mx0 f(x)+ g(x) = xli→mx0 f(x)+ xli→mx0 g(x), ](img/file1111.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![xli→mx0 f(x)+ g(x) = xli→mx0 f(x)+ xli→mx0 g(x), ](img/file1111.png)'
- en: (b)
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: (b)
- en: '![ lim cf(x) = c lim f(x) for all c ∈ ℝ, x→x0 x→x0 ](img/file1112.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![ lim cf(x) = c lim f(x) for all c ∈ ℝ, x→x0 x→x0 ](img/file1112.png)'
- en: (c)
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: (c)
- en: '![lim f(x)g(x) = lim f (x ) lim g(x), x→x0 x→x0 x→x0 ](img/file1113.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![lim f(x)g(x) = lim f (x ) lim g(x), x→x0 x→x0 x→x0 ](img/file1113.png)'
- en: (d) If f(x)≠0 in some small interval (x[0] − 𝜀,x[0] + 𝜀) around x[0] and lim[x→x[0]]f(x)≠0,
    then
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: (d) 如果在某小区间 (x[0] − 𝜖,x[0] + 𝜖) 内，f(x)≠0，且 lim[x→x[0]]f(x)≠0，那么
- en: '![ lim -1---= -----1------. x→x0 f(x) limx →x0 f(x) ](img/file1114.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![ lim -1---= -----1------. x→x0 f(x) limx →x0 f(x) ](img/file1114.png)'
- en: Proof. This follows directly from Theorem [57](ch018.xhtml#x1-167006r57).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 证明：这直接来自定理 [57](ch018.xhtml#x1-167006r57)。
- en: Similarly as we have seen for convergent sequences, (a) and (b) above are referred
    to as the linearity of limits.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于我们在收敛序列中看到的，(a) 和 (b) 被称为极限的线性。
- en: Remember how the big and small O notation (Definition [41](ch018.xhtml#x1-171003r41))
    expressed asymptotic properties of sequences? We have a similar tool for functions
    as well.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 记得大 O 和小 o 符号（定义 [41](ch018.xhtml#x1-171003r41)）是如何表示序列的渐近性质的吗？我们对于函数也有类似的工具。
- en: Definition 52\. (Big and small O notation for functions)
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 52.（函数的大 O 和小 o 符号）
- en: 'Let f : ℝ →ℝ and g : ℝ →ℝ be two arbitrary functions. We say that'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '设 f : ℝ →ℝ 和 g : ℝ →ℝ 为任意函数。我们说'
- en: (a) g(x) = O(f(x)) as x → a if there is a constant C such that for some δ/span>0,
    we have jg(x)j ≤Cf(x) for all x ∈ (a −δ,a) ∪ (a,a + δ). Similarly, g(x) = O(f(x))
    as x →∞ if there is a constant C and a cutoff number N such that jg(x)j ≤Cf(x)
    holds for all x/span>N.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 当 x → a 时，g(x) = O(f(x)) 如果存在一个常数 C，使得对于某个 δ >0，所有 x ∈ (a −δ, a) ∪ (a, a
    + δ) 中都有 |g(x)| ≤ C |f(x)|。类似地，当 x →∞ 时，g(x) = O(f(x)) 如果存在一个常数 C 和一个截断数 N，使得对于所有
    x > N，都有 |g(x)| ≤ C |f(x)|。
- en: (b) g(x) = o(f(x)) as x →a if for any 𝜀/span>0, there is a δ/span>0 such that
    we have jg(x)j ≤𝜀f(x) for all x ∈ (a−δ,a) ∪ (a,a + δ). Similarly, g(x) = o(f(x))
    as x →∞ if for any 𝜀/span>0, there is a cutoff number N such that jg(x)j ≤𝜀f(x)
    for all x/span>N.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 当 x →a 时，g(x) = o(f(x)) 如果对于任意 𝜖 >0，都存在一个 δ >0 使得对于所有 x ∈ (a−δ,a) ∪ (a,a
    + δ)，都有 |g(x)| ≤ 𝜖 |f(x)|。类似地，当 x →∞ 时，g(x) = o(f(x)) 如果对于任意 𝜖 >0，都存在一个截断数 N，使得对于所有
    x > N，都有 |g(x)| ≤ 𝜖 |f(x)|。
- en: 11.2.1 Equivalent definitions of limits
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.2.1 极限的等价定义
- en: 'If you have a sharp eye (and some experience in mathematics), you might have
    already posed the question: won’t showing convergence of {f(x[n])} for all sequences
    x[n] →x[0] be difficult?'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你眼光敏锐（并且有一定的数学经验），你可能已经提出了这样一个问题：对于所有序列 x[n] → x[0]，证明 {f(x[n])} 的收敛性会不会很困难？
- en: Indeed, it is often not the most convenient way to think about function limits.
    Another equivalent definition expresses limits in terms of smaller and smaller
    neighborhoods around the point in question.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，考虑函数极限时，这通常不是最方便的思考方式。另一种等价的定义是通过描述围绕给定点越来越小的邻域来表达极限。
- en: Theorem 71\. (Limits as error terms)
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 71.（极限作为误差项）
- en: 'Let f : ℝ →ℝ be an arbitrary function and x[0] ∈ℝ. Then, the following are
    equivalent.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '设 f : ℝ →ℝ 为任意函数，且 x[0] ∈ℝ。那么，以下等价。'
- en: (a) lim[x→x[0]]f(x) = a.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: (a) lim[x→x[0]]f(x) = a。
- en: (b) For every 𝜀/span>0, there exists a small neighborhood (x[0] −δ,x[0] + δ)
    around x[0] such that for every x ∈ (x[0] −δ,x[0]) ∪ (x[0],x[0] + δ),
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 对于每个 𝜖 >0，存在一个围绕 x[0] 的小邻域 (x[0] −δ, x[0] + δ)，使得对于每个 x ∈ (x[0] −δ, x[0])
    ∪ (x[0], x[0] + δ)，
- en: '![|f (x )− a| <𝜀 ](img/file1115.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![|f (x )− a| <𝜖 ](img/file1115.png)'
- en: holds.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 成立。
- en: Proof. (a) ⇒ (b). We are going to do this indirectly, so we assume that (a)
    holds and (b) is not true. The negation of (b) states that there is a 𝜀 >0 such
    that for every δ >0, there is an x ∈ (x[0] −δ,x[0]) ∪ (x[0],x[0] + δ) such that
    |f(x) −a|𝜀. (If you don’t see why this is the negation, check out the Appendix
    A about logic.)
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。（a）⇒（b）。我们将采用间接证明法，因此假设（a）成立而（b）不成立。（b）的否定表明存在一个 𝜖 >0，使得对于每个 δ >0，都有一个 x
    ∈ (x[0] −δ, x[0]) ∪ (x[0], x[0] + δ)，使得 |f(x) −a| ≥ 𝜖。（如果你不明白为什么这是否定，查阅附录 A 中关于逻辑的内容。）
- en: Now we define a sequence that will contradict (a). If we select δ = 1∕n, we
    can let x[n] be the one in (x[0] −δ,x[0]) ∪ (x[0],x[0] + δ) such that |f(x[n])
    −a| 𝜀, as guaranteed by our assumption that (b) is false. Due to its construction,
    {f(x[n])}[n=1]^∞ does not converge to a. This contradicts (a), which completes
    our indirect proof.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们定义一个序列来与 (a) 矛盾。如果我们选择 δ = 1∕n，可以让 x[n] 位于 (x[0] −δ, x[0]) ∪ (x[0], x[0]
    + δ) 中，使得 |f(x[n]) −a| < 𝜖，这一点由我们假设 (b) 错误所保证。由于该序列的构造，{f(x[n])}[n=1]^∞ 不收敛于 a。这与
    (a) 矛盾，从而完成了我们的间接证明。
- en: (b) ⇒ (a). Let {x[n]}[n=1]^∞ be an arbitrary sequence that converges to x[0].
    If n is large enough (that is, larger than some cutoff index N), x[n] will fall
    into (x[0] −δ,x[0] + δ), where δ >0 is an arbitrary small constant. Since (b)
    says that |f(x[n]) −a| 𝜀 here for all such n, we have lim[n→∞]f(x[n]) = a by the
    definition of convergence (Definition [39](ch018.xhtml#x1-166003r39)).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: (b) ⇒ (a)。设 {x[n]}[n=1]^∞ 是一个收敛于 x[0] 的任意序列。如果 n 足够大（即大于某个截断指数 N），则 x[n] 会落入
    (x[0] −δ, x[0] + δ)，其中 δ >0 是任意小常数。由于 (b) 表明对于所有这样的 n 都有 |f(x[n]) −a| < 𝜖，按照收敛的定义（定义
    [39](ch018.xhtml#x1-166003r39)），我们有 lim[n→∞]f(x[n]) = a。
- en: In plain English, this theorem says that f(x) gets arbitrarily close to lim[x→x[0]]f(x)
    if x is close enough to x[0]. Definitions similar to (b) are called epsilon-delta
    definitions.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 用简单的英语来说，这个定理表明，如果 x 足够接近 x[0]，那么 f(x) 会无限接近 lim[x→x[0]]f(x)。类似于 (b) 的定义称为 epsilon-delta
    定义。
- en: There is yet another equivalent definition that, although it might seem trivial,
    is a useful mental model when thinking about limits.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一个等价的定义，尽管看似微不足道，但在思考极限时，它是一个有用的思维模型。
- en: Theorem 72\.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 72.
- en: 'Let f : ℝ →ℝ be an arbitrary function and x[0] ∈ℝ. Then, the following are
    equivalent.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '设 f : ℝ →ℝ 为任意函数，x[0] ∈ℝ。则，以下是等价的。'
- en: (a) lim[x→x[0]]f(x) = a.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: （a） lim[x→x[0]]f(x) = a。
- en: (b) There exists a function error(x) such that lim[x→x[0]]error(x) = 0 and
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: （b）存在一个函数 error(x)，使得 lim[x→x[0]]error(x) = 0 并且
- en: '![f(x) = a+ error(x). ](img/file1118.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![f(x) = a+ error(x). ](img/file1118.png)'
- en: Proof. (a) ⇒ (b). Due to how limits behave with respect to operations (Theorem [70](ch019.xhtml#x1-190011r70)),
    it is easy to see that
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。（a）⇒（b）。由于极限在操作上的行为（定理 [70](ch019.xhtml#x1-190011r70)），很容易看出
- en: '![error(x) := f(x)− a ](img/file1120.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![error(x) := f(x)− a ](img/file1120.png)'
- en: satisfies the requirements.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 满足要求。
- en: '(b) ⇒ (a). Again, this is trivial because of the linearity of the limit operation:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: （b）⇒（a）。同样，由于极限操作的线性，这一点也显而易见：
- en: '![lim f (x ) = lim (a+ error(x )) = a. x→x0 x→x0 ](img/file1122.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![lim f (x ) = lim (a+ error(x )) = a. x→x0 x→x0 ](img/file1122.png)'
- en: This is what we had to show.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们要证明的。
- en: Often, we don’t need to know the exact limits of a function; it is enough to
    know that the limit is above or below a specific bound.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们不需要知道函数的确切极限；知道极限在某个特定的上下界之上或之下就足够了。
- en: To give a specific example, we will look slightly ahead and talk about differentiation.
    I’ll explain everything in detail in the next chapter, but the derivative of a
    function f at the point x[0] is defined as the limit
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给出一个具体的例子，我们将稍微提前谈一下微分。我将在下一章详细解释所有内容，但函数 f 在点 x[0] 处的导数定义为极限
- en: '![ f (x )− f(x0) lx→imx0 ---x-−-x----. 0 ](img/file1123.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![ f (x )− f(x0) lx→imx0 ---x-−-x----. 0 ](img/file1123.png)'
- en: If the function is increasing, we have
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 如果函数是递增的，我们有
- en: '![f(x) − f(x ) ----------0- ≥ 0, x − x0 ](img/file1124.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![f(x) − f(x ) ----------0- ≥ 0, x − x0 ](img/file1124.png)'
- en: which, given the things we are about to see, implies that the derivative is
    positive.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们接下来要看到的内容，这意味着导数是正的。
- en: Without any further ado, let’s see the result!
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 不再废话，让我们看看结果！
- en: Theorem 73\. (The transfer principle for functions)
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 73.（函数的转移原则）
- en: 'Let f : ℝ → ℝ be an arbitrary function. If f(x) ≥ α for all x ∈ (a −δ,a) ∪
    (a,a + δ) and some δ/span> constant and α ∈ℝ lower bound, then lim[x→a]f(x) ≥α
    if the limit exists.'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '设 f : ℝ → ℝ 为任意函数。如果对于所有 x ∈ (a −δ,a) ∪ (a,a + δ) 和某个常数 δ/span>，以及 α ∈ℝ 的下界，f(x)
    ≥ α，则当极限存在时，lim[x→a]f(x) ≥ α。'
- en: Proof. Due to the definition of function limits, this is the immediate consequence
    of the transfer principle for convergent sequences (Theorem [58](ch018.xhtml#x1-167010r58)).
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 证明。由于函数极限的定义，这是收敛序列的转移原则（定理 [58](ch018.xhtml#x1-167010r58)）的直接结果。
- en: There are a couple of special limits that come up all the time in calculations.
    These are the building blocks for calculating more complicated limits, as they
    can often be reduced to a form for which the limit is known.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个特殊的极限经常出现在计算中。这些是计算更复杂极限的基础，因为它们通常可以简化为已知极限的形式。
- en: We won’t include the proofs here, as they are not that useful for our purposes
    (which is understanding how machine learning algorithms work).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会在这里包含证明，因为它们对我们理解机器学习算法的目的并没有太大帮助。
- en: Theorem 74\. (a)
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 74.（a）
- en: lim[*x*→0] sin x x = 1. (11.3)
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: lim[*x*→0] sin x x = 1. (11.3)
- en: (b)
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: （b）
- en: lim[*x* → 0] *x* log *x* = 0. (11.4)
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: lim[*x* → 0] *x* log *x* = 0. (11.4)
- en: (c)
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: （c）
- en: lim[*x* → ∞] *x*^k e^(−ax) = 0, a ∈ (0, ∞), k = 0, 1, 2, … (11.5)
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: lim[*x* → ∞] *x*^k e^(−ax) = 0, a ∈ (0, ∞), k = 0, 1, 2, … (11.5)
- en: With the extension of limits from sequences to functions, we saw that if the
    limit exists, it is not necessarily equal to the function’s value at the given
    point. However, when it does, the function is much easier to handle. This is called
    continuity, and this is what we’ll discuss next.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 随着极限从序列扩展到函数，我们看到，如果极限存在，它不一定等于函数在给定点的值。然而，当它存在时，函数就变得更容易处理。这称为连续性，接下来我们将讨论这个问题。
- en: 11.3 Continuity
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.3 连续性
- en: If I asked you to conjure up a random function from your mind, I am almost certain
    that you would come up with one that is both continuous and differentiable. (unless
    you have weird tastes, as many mathematicians do).
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我让你从脑海中想出一个随机函数，我几乎可以确定你会想出一个既连续又可微的函数。（除非你有奇怪的口味，像许多数学家一样）。
- en: 'However, the vast majority of functions are neither. In terms of cardinality,
    if you count all real functions f : ℝ→ℝ, it turns out that there are 2^c of them
    in total, but the subset of continuous ones have cardinality c. It is hard to
    imagine such quantities: c and 2^c are both infinite, but, well, 2^c is more infinite.
    Yeah, I know. Set theory is weird. (Recall that c denotes the cardinality of the
    set of real numbers. If you would like a refresher on the topic, check out the
    set theory appendix Appendix C.)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '然而，绝大多数函数既不是连续的也不是可微的。从基数的角度来看，如果你计算所有实数函数f : ℝ→ℝ，结果表明总共有2^c个函数，但其中连续的子集的基数是c。很难想象这样的数量：c和2^c都是无限的，但，嗯，2^c比c更无限。是的，我知道。集合论很奇怪。（回想一下，c表示实数集合的基数。如果你想复习这个话题，可以查阅集合论附录C。）'
- en: Overall, as we shall see, continuity and differentiability allow us to do meaningful
    work with functions. For instance, the usual gradient descent-based optimization
    for neural networks doesn’t work if the loss function and the layers are not differentiable.
    That alone would throw a huge wrench into the cogs of machine learning since this
    is used all the time in the deep learning part of the field.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，正如我们将看到的，连续性和可微性使我们能够对函数进行有意义的操作。例如，通常基于梯度下降的神经网络优化方法，如果损失函数和层不是可微的，就无法工作。仅这一点就足以使机器学习的齿轮卡住，因为在该领域的深度学习部分中，这种方法被频繁使用。
- en: This section explores how these concepts work together and ultimately enable
    us to train neural networks. So, let’s dive straight into the deep water and precisely
    define the notion of continuity!
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 本节探讨这些概念如何协同工作，并最终使我们能够训练神经网络。因此，让我们直接跳入深水区，精确定义连续性的概念！
- en: Definition 53\. (Continuity)
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 定义53\.（连续性）
- en: 'Let f : ℝ →ℝ be an arbitrary function. We say that f is continuous at a if'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '设f : ℝ →ℝ为任意函数。我们说f在a处连续，当且仅当'
- en: '![lxim→a f(x) = f (a ) ](img/file1127.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![lxim→a f(x) = f (a ) ](img/file1127.png)'
- en: holds.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 成立。
- en: In other words, continuity means that if x is close to y, then f(x) will also
    be close to f(y). This is how most of our mental models work. This is also what
    we want from many machine learning models. For example, if f is a model that takes
    images and decides if they feature a cat or not, we would expect that after changing
    a few pixels on x, the prediction would stay the same. (However, this is definitely
    not the case in general, which is exploited by certain adversarial attacks.)
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，连续性意味着如果x接近y，那么f(x)也会接近f(y)。这就是我们大多数心智模型的工作方式。这也是我们希望许多机器学习模型具备的特性。例如，如果f是一个模型，它接受图像并判断其中是否有猫，我们希望在改变x的几个像素之后，预测结果保持不变。（然而，一般来说，情况并非如此，这被某些对抗性攻击所利用。）
- en: We can rephrase the above definition by unpacking the limits. If you think it
    through a bit, it is easy to see that continuity of f at a is equivalent to
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过展开极限来重新表述上述定义。如果你稍加思考，就会发现f在a处连续等价于
- en: '![ lim f(a ) = f ( lim a ) n→ ∞ n n→∞ n ](img/file1128.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![ lim f(a ) = f ( lim a ) n→ ∞ n n→∞ n ](img/file1128.png)'
- en: for all convergent sequences a[n] →a. In other words, the limit and function
    application are interchangeable. We are going to use this very frequently.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有收敛序列a[n] →a。换句话说，极限和函数应用是可以互换的。我们将非常频繁地使用这一点。
- en: As usual, we’ll see some examples first. We’ll revisit the ones we saw Section [11.2](ch019.xhtml#limits).
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，我们首先会看到一些例子。我们将回顾在第[11.2](ch019.xhtml#limits)节中看到的例子。
- en: Example 1\. Let’s revisit
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 示例1\. 让我们重新回顾一下
- en: '![ (| {1 if x = 0, f(x) = | (0 otherwise. ](img/file1129.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![ (| {1 if x = 0, f(x) = | (0 otherwise. ](img/file1129.png)'
- en: While f(x) is not continuous at 0 since lim[x→0]f(x) = 0≠f(0), as we have seen
    before, f(x) is continuous everywhere else (since it is constant 0).
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管f(x)在0处不连续，因为lim[x→0]f(x) = 0≠f(0)，但正如我们之前所见，f(x)在其他地方是连续的（因为它是常数0）。
- en: Note that even though the function is not continuous at 0, the limit does exist!
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，尽管该函数在0处不连续，但极限是存在的！
- en: Example 2\. What about the Dirichlet function D(x)? (See ([11.2](#)) for the
    definition.) Since the limit doesn’t even exist, this is a nowhere near a continuous
    function.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2\. 那么Dirichlet函数D(x)怎么样？（见[11.2](#)节中的定义。）由于极限甚至不存在，它根本不是连续函数。
- en: Example 3\. Define
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 示例3\. 定义
- en: '![ ( |{ f(x) = x if x ∈ ℚ, |( − x otherwise. ](img/file1130.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ f(x) = x if x ∈ ℚ, |( − x otherwise. ](img/file1130.png)'
- en: Surprisingly, f(x) is continuous at 0, but nowhere else. As you can see, (almost)
    nothing is off the table with continuity. Functions, in general, can be wild objects,
    and without certain regularity conditions, optimizing them is extremely hard.
    In essence, this chapter aims to understand when and how we can optimize functions
    that we used to do when training a machine learning model.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊讶的是，f(x) 在 0 处连续，但在其他地方都不连续。正如你所看到的，关于连续性，几乎没有什么是不可行的。一般来说，函数可以是复杂的对象，没有一定的规律性条件，优化它们是非常困难的。本章的核心目标是理解我们如何在训练机器学习模型时优化这些函数。
- en: One final example!
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个例子！
- en: Example 4\. We call a function an elementary function if it can be obtained
    by taking a finite sum, product, and combination of
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 4\. 我们称一个函数为初等函数，如果它可以通过有限次的求和、乘积和组合得到。
- en: constant functions,
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常数函数，
- en: power functions x,x²,x³,…,
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 幂函数 x, x², x³,…，
- en: n-th root functions x^(1∕2),x^(1∕3),x^(1∕4),…,
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: n 次根函数 x^(1∕2), x^(1∕3), x^(1∕4),…，
- en: exponential functions a^x,
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指数函数 a^x，
- en: logarithms log [a]x,
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数函数 log [a]x，
- en: trigonometric and inverse trigonometric functions sinx,cosx,arcsinx,arccosx,
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三角函数和反三角函数 sinx, cosx, arcsinx, arccosx，
- en: hyperbolic and inverse hyperbolic functions sinhx,coshx,sinh^(−1)x,cosh^(−1)x.
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双曲函数和反双曲函数 sinhx, coshx, sinh^(−1)x, cosh^(−1)x。
- en: For instance,
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，
- en: '![ 2 x 1-−-3x-+√-5x4 f(x) = sin(x + e )− 2x − x ](img/file1131.png)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![ 2 x 1-−-3x-+√-5x4 f(x) = sin(x + e )− 2x − x ](img/file1131.png)'
- en: is an elementary function. Elementary functions are continuous wherever they
    are defined. This is going to be extremely useful for us since showing the continuity
    of a complicated function like f(x) is hard with the definition alone. This way,
    if it is elementary, we know it is continuous. This will also be true for multivariate
    functions (like a neural network).
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 是一个初等函数。初等函数在其定义域内都是连续的。这对我们来说非常有用，因为仅通过定义来展示像 f(x) 这样复杂函数的连续性是困难的。这样，如果它是初等的，我们知道它是连续的。这对多元函数（如神经网络）也同样适用。
- en: 11.3.1 Properties of continuous functions
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.3.1 连续函数的性质
- en: A typical pattern in mathematics, as you have seen when discussing the properties
    of convergent sequences in Theorem [57](ch018.xhtml#x1-167006r57), is to study
    certain properties on basic building blocks first, then show how it behaves with
    respect to operations.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 数学中的典型模式，正如你在讨论收敛序列的性质时所看到的定理[57](ch018.xhtml#x1-167006r57)，是首先研究基本构建块的某些属性，然后展示它们在操作下的表现。
- en: We are going to follow a similar pattern to the previous example regarding the
    continuity of elementary functions.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按照与前一个示例类似的模式，讨论初等函数的连续性。
- en: Theorem 75\.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 75\。
- en: Let f and g be two functions.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 设 f 和 g 为两个函数。
- en: (a) If f and g are continuous at a, then f + g and fg are also continuous at
    a.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 如果 f 和 g 在 a 处连续，则 f + g 和 fg 也在 a 处连续。
- en: (b) If f and g are continuous at a and g(a)≠0, then f∕g is also continuous at
    a.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 如果 f 和 g 在 a 处连续，且 g(a)≠0，则 f∕g 也在 a 处连续。
- en: (c) If g is continuous at a and f is continuous at g(a), then f ∘g is also continuous
    at a.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: (c) 如果 g 在 a 处连续，且 f 在 g(a) 处连续，则 f ∘ g 也在 a 处连续。
- en: Proof. (a) and (b) follow directly from the properties of limits (Theorem [70](ch019.xhtml#x1-190011r70)).
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 证明：(a) 和 (b) 直接来自极限的性质（定理[70](ch019.xhtml#x1-190011r70)）。
- en: To see (c), we simply let {a[n]}[n=1]^∞ be a sequence that converges to a. Then,
    assuming that f is continuous at g(a) and g is continuous at a, we have
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 为了看清 (c)，我们只需令 {a[n]}[n=1]^∞ 是一个收敛到 a 的序列。然后，假设 f 在 g(a) 处连续，且 g 在 a 处连续，我们有：
- en: '![lim f(g(an)) = f( lim g(an )) = f(g( lim an)) = f (g(a )), n→∞ n→ ∞ n→ ∞
    ](img/file1132.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![lim f(g(an)) = f( lim g(an )) = f(g( lim an)) = f (g(a )), n→∞ n→ ∞ n→ ∞
    ](img/file1132.png)'
- en: which shows the continuity of f ∘g at a.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了 f ∘ g 在 a 处的连续性。
- en: 'So far, we have only defined continuity at a single point. In general, a function
    f : ℝ →ℝ is continuous on the set A simply if it is continuous at its every point.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '到目前为止，我们只定义了单点的连续性。一般来说，函数 f : ℝ →ℝ 在集合 A 上连续，当且仅当它在集合 A 的每个点上连续。'
- en: We have arrived at the point that partly explains why we love continuous functions
    and compact sets.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经到达了一个部分解释我们为何喜爱连续函数和紧集的点。
- en: 'The reason is simple: functions that are continuous on compact sets are bounded
    there and attain their optima.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 原因很简单：在紧集上连续的函数在该集合内有界并且能达到它们的最优值。
- en: Theorem 76\.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 76\。
- en: Let f be continuous on a compact set K. There exists α,β ∈K such that f(α) ≤f(x)
    ≤f(β) holds for all x ∈K.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 设 f 在紧集 K 上连续。存在 α, β ∈K，使得对于所有 x ∈K，f(α) ≤ f(x) ≤ f(β)。
- en: 'Let {α[n]}[n=1]^∞ ⊆ K be a sequence such that f(α[n]) → inf{f(x) : x ∈K}. (This
    is guaranteed to exist, as follows from the properties of infimum and supremum.)'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '设 {α[n]}[n=1]^∞ ⊆ K 是一个序列，使得 f(α[n]) → inf{f(x) : x ∈K}。（由于下确界和上确界的性质，这一定存在。）'
- en: Now, according to the Bolzano-Weierstrass theorem (Theorem [69](ch019.xhtml#x1-189006r69)),
    {α[n]}[n=1]^∞ has a convergent subsequence {α[n[k]]}[k=1]^∞ with lim[k→∞]α[n[k]]
    = α. Since K is compact, α ∈K. (Recall that a compact set is closed, and closed
    sets contain the limits of their convergent sequences, as Theorem [68](ch019.xhtml#x1-187002r68)
    implies.)
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，根据博尔扎诺-魏尔施特拉斯定理（定理 [69](ch019.xhtml#x1-189006r69)），{α[n]}[n=1]^∞ 有一个收敛的子序列
    {α[n[k]]}[k=1]^∞，且 lim[k→∞]α[n[k]] = α。由于 K 是紧的，α ∈K。（回想一下，紧集是闭集，且闭集包含其收敛序列的极限，正如定理
    [68](ch019.xhtml#x1-187002r68) 所暗示的。）
- en: Because f is continuous, we have
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 f 是连续的，我们有
- en: '![f(α) = f( lim αnk) = lim f(αnk) = inf{f (x) : x ∈ K }, k→ ∞ k→ ∞ ](img/file1133.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![f(α) = f( lim αnk) = lim f(αnk) = inf{f (x) : x ∈ K }, k→ ∞ k→ ∞ ](img/file1133.png)'
- en: which is what we had to show. An identical argument shows the existence of a
    β ∈K such that f(x) ≤f(β) for all x ∈K.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 这正是我们需要证明的。通过相同的论证，可以证明存在一个 β ∈K，使得对所有 x ∈K，f(x) ≤ f(β)。
- en: This statement is not true for sets that are not closed and bounded. For example,
    f(x) = ![1 x](img/file1134.png) is continuous on (0,1], but has no upper bound.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命题对于那些不是闭合且有界的集合不成立。例如，f(x) = ![1 x](img/file1134.png) 在(0,1]上是连续的，但没有上界。
- en: 11.4 Summary
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.4 总结
- en: I admit, the fine details of topology, limits, and continuity can feel complex
    and abstract. However, in my experience, taking the hardest path is the most rewarding,
    especially when learning technical topics. To sum up, we’ve learned
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 我承认，拓扑、极限和连续性的细节可能显得复杂和抽象。然而，根据我的经验，走最难的路往往是最有收获的，尤其是在学习技术性话题时。总之，我们已经学到了
- en: what topology is,
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是拓扑，
- en: what it has to do with sequences and limits,
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它与序列和极限有什么关系，
- en: how to take limits of functions,
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何求取函数的极限，
- en: and finally, what a continuous function is.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，什么是连续函数。
- en: 'Now that we are familiar with all the above, we are ready to tackle a subject
    at the heart of machine learning: differentiation. We’ll look at how to analyze
    functions and what makes a function “behave nicely.”'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经掌握了上述所有内容，准备好攻克机器学习核心内容之一：微分。我们将研究如何分析函数以及什么样的函数“表现良好”。
- en: If you think through what machine learning is really about, you’ll find that
    it is quite straightforward from a bird’s eye view. In essence, all we want to
    do is 1\. Design parameterized functions to explain the relationships between
    data and observations and 2\. Find the parameters that best fit our data.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仔细思考机器学习的本质，你会发现从宏观角度来看，它其实非常简单。实质上，我们想做的就是：1. 设计参数化函数来解释数据和观察之间的关系；2. 找到最适合我们数据的参数。
- en: To find models that are expressive enough yet easy to work with, we need to
    restrict ourselves to functions that satisfy certain properties. The two most
    important are continuity and differentiability. Now that we have seen what continuity
    is, we can move on to study differentiable functions.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找到既具有表达能力又易于处理的模型，我们需要将自己限制在满足某些性质的函数中。最重要的两个性质是连续性和可微性。既然我们已经了解了什么是连续函数，我们可以继续学习可微函数。
- en: In the following chapters, we will exclusively deal with univariate real functions.
    This is to introduce concepts without adding many layers of complexity at once.
    In later chapters, we will slowly turn toward multivariate functions, and by the
    time we get to machine learning, we will have mastered their use.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将专门讨论单变量实函数。这样做是为了引入概念，而不一次性增加太多复杂性。在后续章节中，我们会逐步转向多变量函数，到机器学习部分时，我们将掌握它们的使用。
- en: 11.5 Problems
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.5 问题
- en: Problem 1\. Which of the following subsets of ℝ are open, closed, or neither?
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 1。以下哪些 ℝ 的子集是开集、闭集，或者既不是开集也不是闭集？
- en: (a) ℤ (b) ℚ (c) ∩[n=1]^∞(−![n1](img/file1135.png),![1n](img/file1136.png)) (d)
    ∪[n=1]^∞[0,1 −![1 n](img/file1137.png)]
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: （a）ℤ （b）ℚ （c）∩[n=1]^∞(−![n1](img/file1135.png),![1n](img/file1136.png)) （d）∪[n=1]^∞[0,1
    −![1 n](img/file1137.png)]
- en: Problem 2\. Let ![A ⊆ ℝ ](img/file1138.png) be an arbitrary set. Show that there
    exists a sequence ![{an} ∞n=1 ⊆ A ](img/file1139.png) such that
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 2。设 ![A ⊆ ℝ ](img/file1138.png) 是一个任意集合。证明存在一个序列 ![{an} ∞n=1 ⊆ A ](img/file1139.png)，使得
- en: '![lnim→∞ an = sup A. ](img/file1140.png)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![lnim→∞ an = sup A. ](img/file1140.png)'
- en: (An identical statement is true for ![inf A ](img/file1141.png) as well, which
    can be shown in the same way.)
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: （对 ![inf A ](img/file1141.png) 也成立，并且可以通过相同的方式证明。）
- en: Problem 3\. Let D(x) be the Dirichlet function, defined by
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 3。设 D(x) 为狄利克雷函数，定义为
- en: '![ ( |{ D (x) = 1 if x ∈ ℚ, |( 0 otherwise. ](img/file1142.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![ ( |{ D (x) = 1 如果 x ∈ ℚ, |( 0 否则。 ](img/file1142.png)'
- en: Give a mathematically rigorous proof that the limit lim[x→x[0]]D(x) does not
    exist for any x[0] ∈ℝ.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 给出一个数学上严格的证明，证明对于任何 x[0] ∈ ℝ，极限 lim[x→x[0]]D(x) 不存在。
- en: Problem 4\. Let X be an arbitrary set, and let τ ⊆P(X) be a collection of its
    subsets. (Recall that P(A) denotes all subsets of A.) The structure (X,τ) is called
    a topological space, if
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 问题 4\. 设 X 为任意集合，且 τ ⊆ P(X) 为其子集的集合。（回顾一下，P(A) 表示 A 的所有子集。）结构 (X, τ) 称为拓扑空间，如果
- en: ∅∈τ and X ∈τ,
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ∅∈τ 且 X ∈τ，
- en: For any collection of sets in τ, the union is also in τ,
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 τ 中的任何集合，其并集也在 τ 中。
- en: For any finite collection of sets in τ, the intersection is also in τ.
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 τ 中的任何有限集合，其交集也在 τ 中。
- en: The sets in τ are called open sets. Show that the following are topological
    spaces.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: τ中的集合称为开集。证明以下是拓扑空间。
- en: '(a) X is any set, τ = {∅,X}. (b) X is any set, τ = P(X). (c) (ℕ,τ), where τ
    = {S ⊆ℕ : 0![∕∈](img/file1143.png)τ}.'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '(a) X 是任意集合，τ = {∅, X}。 (b) X 是任意集合，τ = P(X)。 (c) (ℕ, τ)，其中 τ = {S ⊆ ℕ : 0![∕∈](img/file1143.png)τ}。'
- en: 'Problem 5\. Let f : ℝ →ℝ be an arbitrary function. Show that f is continuous
    at x[0] if and only if for every 𝜀/span>0 there exists a δ/span>0 such that for
    any x ∈ (x[0] −δ,x[0] + δ), jf(x) −f(x[0])j/span>𝜀.'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '问题 5\. 设 f : ℝ → ℝ 为任意函数。证明 f 在 x[0] 处连续当且仅当对于每个 𝜖/span>0，存在 δ/span>0，使得对于任意
    x ∈ (x[0] − δ, x[0] + δ)，|f(x) − f(x[0])|/span>𝜖。'
- en: The above is an equivalent definition of continuity, called the epsilon-delta
    definition.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 上述是连续性的等价定义，称为ε-δ定义。
- en: 'Problem 6\. Let f : ℝ →ℝ be an arbitrary function. Show that f is continuous
    everywhere if and only if the set'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '问题 6\. 设 f : ℝ → ℝ 为任意函数。证明 f 在每个点处连续当且仅当下述集合'
- en: '![f(X ) = {f(x) : x ∈ X } ](img/file1144.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![f(X ) = {f(x) : x ∈ X } ](img/file1144.png)'
- en: is open for every open set X!
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个开集 X 都是开集！
- en: Join our community on Discord
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区
- en: Read this book alongside other users, Machine Learning experts, and the author
    himself. Ask questions, provide solutions to other readers, chat with the author
    via Ask Me Anything sessions, and much more. Scan the QR code or visit the link
    to join the community. [https://packt.link/math](https://packt.link/math)
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本书，与其他用户、机器学习专家以及作者本人一起讨论。提问，向其他读者提供解决方案，参加“问我任何问题”环节，与作者互动，更多精彩内容等你来参与。扫描二维码或访问链接加入社区。[https://packt.link/math](https://packt.link/math)
- en: '![PIC](img/file1.png)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/file1.png)'
