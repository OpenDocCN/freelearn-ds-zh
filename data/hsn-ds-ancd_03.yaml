- en: Data Basics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据基础
- en: In this chapter, we'll first discuss sources of open data, which includes the
    **University of California at Irvine** (**UCI**) Machine Learning Depository,
    the Bureau of Labor Statistics, the Census Bureau, Professor French's Data Library,
    and the Federal Reserve's Data Library. Then, we will show you several ways of
    inputting data, how to deal with missing values, sorting, choosing a subset, merging
    different datasets, and data output. For different languages, such as Python,
    R, and Julia, several relevant packages for data manipulation will be introduced
    as well. In particular, the Python `pandas` package will be discussed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先讨论开放数据的来源，其中包括**加利福尼亚大学欧文分校**（**UCI**）机器学习数据存储库、劳工统计局、人口普查局、French教授的数据图书馆和联邦储备的数据图书馆。然后，我们将展示几种数据输入的方法，如何处理缺失值、排序、选择子集、合并不同数据集以及数据输出。对于不同的编程语言，如Python、R和Julia，我们还将介绍几种与数据处理相关的包，尤其是Python的`pandas`包。
- en: 'In this chapter, the following topics will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Sources of data
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据来源
- en: Introduction to the Python pandas package
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python pandas包简介
- en: Several ways to inputting packages
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多种输入包的方法
- en: Introduction to the Quandl data delivery platform
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Quandl数据交付平台简介
- en: Dealing with missing data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理缺失数据
- en: Sorting data, as well as how to slice, dice, and merge various datasets
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排序数据，以及如何切片、切块和合并不同的数据集
- en: 'Introduction to Python packages: `cbsodata` and `datadotword`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python包介绍：`cbsodata`和`datadotword`
- en: 'Introduction to R packages: `dslabs`, `haven`, and `foreign`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R包介绍：`dslabs`、`haven`和`foreign`
- en: Generating Python datasets
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成Python数据集
- en: Generating R datasets
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成R数据集
- en: Sources of data
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据来源
- en: For users in the area of data science and business analytics, one important
    issue is the source of data, or simply where to get data. When working at a company,
    the obvious source of data is one's own company, such as sales, cost of raw materials,
    the salary of managers and other employees, the related information of suppliers
    and clients, estimations of future sales, the cost of raw materials, and so on.
    It is a good idea to find some data for learning purposes, and this is especially
    true for full-time students.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据科学和商业分析领域的用户，一个重要的问题是数据的来源，或者简单来说，数据从哪里来。在公司工作时，显而易见的数据来源是公司本身，比如销售数据、原材料成本、管理人员和其他员工的薪资、供应商和客户的相关信息、未来销售的预测、原材料成本等等。找到一些用于学习的数据是个好主意，尤其对全日制学生来说尤其如此。
- en: 'Generally speaking, there are two types of data: **public** and **private**.
    Private or proprietary databases are quite expensive. A typical example is the
    **Center for Research in Security Prices** (**CRSP**) database, a financial database
    generated and maintained by the University of Chicago. This database has daily,
    weekly, monthly, and annual trading data for all stocks listed on stock exchanges
    in the US from 1926 onward.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通常来说，数据分为两类：**公共**和**私有**。私有或专有数据库通常非常昂贵。一个典型的例子是**安全价格研究中心**（**CRSP**）数据库，这是一个由芝加哥大学生成和维护的金融数据库。该数据库包含自1926年以来所有在美国证券交易所上市的股票的每日、每周、每月和年度交易数据。
- en: The second type of data is public or free data. For users in various data science
    or business analytics programs, this type of data is more than enough. For example,
    the UCI offers many useful datasets for machine learning that can be used for
    testing and learning purposes. This offers great benefits to new learners in the
    area of data science. Later in the chapter, several lists of free data will be
    offered for learners in data science, economics, and finance and accounting.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类数据是公共或免费的数据。对于各类数据科学或商业分析程序的用户而言，这类数据已经足够。例如，UCI提供了许多有用的机器学习数据集，供测试和学习使用。这为数据科学领域的新学习者带来了巨大的好处。本章稍后将为数据科学、经济学以及金融和会计领域的学习者提供几个免费数据的列表。
- en: UCI machine learning
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UCI机器学习
- en: 'The UCI maintains 413 datasets, as of 1/10/2018, for machine learning: [http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php).
    The following screenshot shows the top three downloaded datasets:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2018年1月10日，UCI共维护了413个用于机器学习的数据集：[http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php)。以下截图显示了下载量排名前三的数据集：
- en: '![](img/c71cd339-196b-4f81-af74-26a055043229.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c71cd339-196b-4f81-af74-26a055043229.png)'
- en: 'For the number one downloaded dataset called **Iris**, we have the following
    information:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下载量第一的数据集**鸢尾花**，我们有以下信息：
- en: '![](img/b4ea2960-8525-4cf7-b584-5055d9a608bf.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b4ea2960-8525-4cf7-b584-5055d9a608bf.png)'
- en: The beauty of these datasets is that they give quite detailed information such
    as the source, the creator or donator, a description, and even citations.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据集的美妙之处在于它们提供了详细的信息，比如来源、创建者或捐赠者、描述，甚至是引用。
- en: 'The following table shows several potential public data sources for users in
    the area of data science and business analytics:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下表展示了数据科学和商业分析领域用户潜在的公共数据来源：
- en: '| **Name** | **Web page** | **Data types** |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **网页** | **数据类型** |'
- en: '| UCI |  [http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php)  |
    Data for machine learning |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| UCI | [http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php)
    | 机器学习数据 |'
- en: '| World Health Organization |  [http://www.who.int/en/](http://www.who.int/en/)  |
    Healthcare data |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 世界卫生组织 | [http://www.who.int/en/](http://www.who.int/en/) | 医疗数据 |'
- en: '| Amazon Web Services | [https://aws.amazon.com/cn/datasets/?nc1=h_ls](https://aws.amazon.com/cn/datasets/?nc1=h_ls)
    | Web usage |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 亚马逊云服务 | [https://aws.amazon.com/cn/datasets/?nc1=h_ls](https://aws.amazon.com/cn/datasets/?nc1=h_ls)
    | 网络使用 |'
- en: '| Data.gov (US Government Open Data) | [https://www.data.gov/](https://www.data.gov/)
    | Agriculture, climate, consumer, and so on |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| Data.gov（美国政府开放数据） | [https://www.data.gov/](https://www.data.gov/) | 农业、气候、消费者等
    |'
- en: '| GitHub | [https://github.com/caesar0301/awesome-public-datasets](https://github.com/caesar0301/awesome-public-datasets)
    | Many datasets offered by individuals |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| GitHub | [https://github.com/caesar0301/awesome-public-datasets](https://github.com/caesar0301/awesome-public-datasets)
    | 个人提供的多个数据集 |'
- en: '| Open data network | [https://www.opendatanetwork.com/](https://www.opendatanetwork.com/)
    | Many useful datasets |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 开放数据网络 | [https://www.opendatanetwork.com/](https://www.opendatanetwork.com/)
    | 许多有用的数据集 |'
- en: '| Government health data | [https://www.healthdata.gov/](https://www.healthdata.gov/)
    | Healthcare-related datasets |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 政府健康数据 | [https://www.healthdata.gov/](https://www.healthdata.gov/) | 与医疗相关的数据集
    |'
- en: '| Google public data | [https://www.google.com/publicdata/directory](https://www.google.com/publicdata/directory)
    | World development indicators |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 谷歌公共数据 | [https://www.google.com/publicdata/directory](https://www.google.com/publicdata/directory)
    | 世界发展指标 |'
- en: 'Table 3.1: Potential sources of open data for data science and business analytics'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.1：数据科学和商业分析领域潜在的开放数据来源
- en: 'After we go to [https://www.data.gov/](https://www.data.gov/), we can see the
    following choices related to **Agriculture**, **Climate**, **Consumer**, **Ecosystems**,
    **Education**, and the like:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们访问 [https://www.data.gov/](https://www.data.gov/) 时，可以看到以下与**农业**、**气候**、**消费者**、**生态系统**、**教育**等相关的选项：
- en: '![](img/003fd049-ae65-419e-a2ba-78a9777ecc80.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/003fd049-ae65-419e-a2ba-78a9777ecc80.png)'
- en: 'The next table shows the potential sources of open data for users in the area
    of economics:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下一表展示了经济领域用户潜在的开放数据来源：
- en: '| **Name** | **Web page** | **Data types** |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **网页** | **数据类型** |'
- en: '| Federal reserve economic data |  [https://www.federalreserve.gov/datadownload/Choose.aspx?rel=H15](https://www.federalreserve.gov/datadownload/Choose.aspx?rel=H15)  |
    Interest rates and rates for AAA/AA rated bonds |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 美联储经济数据 | [https://www.federalreserve.gov/datadownload/Choose.aspx?rel=H15](https://www.federalreserve.gov/datadownload/Choose.aspx?rel=H15)
    | 利率和AAA/AA级债券的利率 |'
- en: '| Census bureau |  [http://www.census.gov/](http://www.census.gov/) [https://www.census.gov/about/index.html](https://www.census.gov/about/index.html)
    | Census data |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 人口普查局 | [http://www.census.gov/](http://www.census.gov/) [https://www.census.gov/about/index.html](https://www.census.gov/about/index.html)
    | 人口普查数据 |'
- en: '| US. dept. treasure |  [http://www.treas.gov](http://www.treas.gov)  | US
    treasure yield |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 美国财政部 | [http://www.treas.gov](http://www.treas.gov) | 美国财政收益 |'
- en: '| Bureau of labor statistics |  [http://www.bls.gov/](http://www.bls.gov/)  [http://download.bls.gov/](http://download.bls.gov/)  |
    Inflation, employment, unemployment, pay and benefits, and so on |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 劳工统计局 | [http://www.bls.gov/](http://www.bls.gov/) [http://download.bls.gov/](http://download.bls.gov/)
    | 通货膨胀、就业、失业、薪酬和福利等 |'
- en: '| Bureau of economic analysis |  [http://www.bea.gov/](http://www.bea.gov)  |
    GDP, personal income outlays, corporate profit, and so on |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 经济分析局 | [http://www.bea.gov/](http://www.bea.gov) | GDP、个人收入支出、企业利润等 |'
- en: '| National bureau of economic research |  [http://www.nber.org/](http://www.nber.org/)  |
    Business cycles, vital statistics, reports of presidents, and so on |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 国家经济研究局 | [http://www.nber.org/](http://www.nber.org/) | 经济周期、重要统计、总统报告等
    |'
- en: 'Table 3.2: Potential sources of open data for economics'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.2：经济学领域潜在的开放数据来源
- en: 'After going to the Federal Reserve economic data and clicking Data on the menu,
    we can see the following entries:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 进入美联储经济数据后，点击菜单中的数据，我们可以看到以下内容：
- en: '![](img/267c0005-8bda-4f67-b203-b14ede16c632.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/267c0005-8bda-4f67-b203-b14ede16c632.png)'
- en: 'The following table offers free data for users in the areas of finance and
    accounting:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下表提供了金融和会计领域用户可以使用的免费数据：
- en: '| **Name** | **Web page** | **Data types** |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **网页** | **数据类型** |'
- en: '| Yahoo!Finance | [http://finance.yahoo.com](http://finance.yahoo.com) | Historical
    pricing data, options, balance sheets, and income statements |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| Yahoo!Finance | [http://finance.yahoo.com](http://finance.yahoo.com) | 历史定价数据、期权、资产负债表和收入报表
    |'
- en: '| Google Finance |  [http://www.google.com/finance](http://www.google.com/finance)  |
    Current and historical trading prices |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| Google Finance | [http://www.google.com/finance](http://www.google.com/finance)
    | 当前及历史交易价格 |'
- en: '| Marketwatch | [http://www.marketwatch.com](http://www.marketwatch.com) |
    Financial statements |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| Marketwatch | [http://www.marketwatch.com](http://www.marketwatch.com) |
    财务报表 |'
- en: '| SEC filing | [http://www.sec.gov/edgar.shtml](http://www.sec.gov/edgar.shtml)
    | Balance sheets, income statements, holdings, and so on |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| SEC文件 | [http://www.sec.gov/edgar.shtml](http://www.sec.gov/edgar.shtml)
    | 资产负债表、收入报表、持股情况等 |'
- en: '| Professor French''s data library |  [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)  |
    Fama/French factors, market index, risk-free rate, industry classification, and
    so on |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 法国教授的数据库 | [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)
    | Fama/French因子、市场指数、无风险利率、行业分类等 |'
- en: 'Table 3.3: Potential sources of open data for finance and accounting'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.3：金融与会计领域的潜在开放数据源
- en: 'From Professor French''s data library, we could download the famous Fama/French''s
    three-factor time series:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从法国教授的数据库中，我们可以下载著名的Fama/French三因子时间序列：
- en: '[PRE0]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the previous code, the input file called `ff3monthly.csv` is a modified copy
    of `*F-F_Research_Data_Factor.csv*` made by removing the second part of the annual
    data and adding a `Date` as the header. Note that `*F-F_Research_Data_Factor.csv*`
    is from the ZIP file called `*F-F_Research_Data_Factor_CSV.zip*`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，输入文件`ff3monthly.csv`是经过修改的`*F-F_Research_Data_Factor.csv*`副本，修改内容为移除了年度数据的第二部分，并添加了`Date`作为表头。请注意，`*F-F_Research_Data_Factor.csv*`来自名为`*F-F_Research_Data_Factor_CSV.zip*`的ZIP文件。
- en: Introduction to the Python pandas package
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python pandas包简介
- en: 'The Python pandas package is very useful when dealing with data. The pandas
    package is a wonderful tool for data preprocessing, which is essential for data
    analysis. There is a humorous way of describing the importance of data cleaning:
    "*A data scientist spends 80% of their time cleaning the data and the other 20%
    complaining about cleaning the data"*. To test if the package is preinstalled,
    we can type `import pandas as pd` after we launch Python. If we don''t see any
    error messages, it means that the package was preinstalled. If we do, then we
    can use `conda install pandas` to install the package. To find all available functions,
    we could use the following three lines of Python code:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Python的pandas包在处理数据时非常有用。pandas包是一个非常棒的数据预处理工具，对于数据分析至关重要。有一种幽默的说法来形容数据清洗的重要性：“*数据科学家80%的时间都在清洗数据，剩下20%的时间在抱怨清洗数据*”。要测试该包是否已预安装，我们可以在启动Python后输入`import
    pandas as pd`。如果没有出现错误信息，说明该包已预安装。如果出现错误，则可以使用`conda install pandas`来安装该包。要查找所有可用的功能，我们可以使用以下三行Python代码：
- en: '![](img/71f2655d-31c4-409f-bbf5-cb04951fbc49.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/71f2655d-31c4-409f-bbf5-cb04951fbc49.png)'
- en: 'To find out about the usage or examples of individual functions, the `help()`
    function can be used. For example, for the `to_pickle` functionality shown at
    the bottom of the previous screenshot, we type `help(pd.to_pickle)`, shown in
    the first line here:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解某个函数的用法或示例，可以使用`help()`函数。例如，对于之前截图底部显示的`to_pickle`功能，我们可以输入`help(pd.to_pickle)`，如下第一行所示：
- en: '![](img/dc7aa636-acb0-452e-9a91-fd761b4159ad.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc7aa636-acb0-452e-9a91-fd761b4159ad.png)'
- en: Several ways to input data
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 几种数据输入方式
- en: 'First, let''s look at how to input a **Comma Separated Value** (**CSV**) file.
    The input dataset is the most popular one from UCI Machine Learning Data Depository.
    The location is [http://archive.ics.uci.edu/ml/machine-learning-databases/iris/bezdekIris.data](http://archive.ics.uci.edu/ml/machine-learning-databases/iris/bezdekIris.data);
    you can refer to the following screenshot as well:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们来看一下如何输入**逗号分隔值**（**CSV**）文件。输入的数据集是来自UCI机器学习数据存储库的最受欢迎的数据集。该数据集的位置是[http://archive.ics.uci.edu/ml/machine-learning-databases/iris/bezdekIris.data](http://archive.ics.uci.edu/ml/machine-learning-databases/iris/bezdekIris.data)；你还可以参考以下的截图：
- en: '![](img/65a83bee-7fbe-4883-a790-13a5700d952c.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65a83bee-7fbe-4883-a790-13a5700d952c.png)'
- en: Inputting data using R
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 R 输入数据
- en: 'The R code is shown here:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示了R代码：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The `dim()`, `head()`, and `tail()` functions can be used to look at the size
    and the first and last several observations of the dataset, shown here:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`dim()`、`head()`和`tail()`函数查看数据集的大小以及前几个和最后几个观察值，如下所示：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, we can use other R functions to input data from an external
    data file. Those functions include the `read.table()`, `read.delim()`, and `read.fwf()`
    functions. To find out all functions starting with `read.`, we could apply the
    `apropos()` function, shown here:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，我们可以使用其他R函数从外部数据文件输入数据。这些函数包括`read.table()`、`read.delim()`和`read.fwf()`函数。为了查找所有以`read.`开头的函数，我们可以应用`apropos()`函数，见下方：
- en: '[PRE3]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To find out the exact usage of individual functions, we use the `help()` function.
    For example, after issuing `help (read.fwf)`, we can find information about this
    specific function, shown in the screenshot in the first several lines:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查找单个函数的具体用法，我们使用`help()`函数。例如，在输入`help(read.fwf)`后，我们可以找到关于此特定函数的信息，见下图的前几行：
- en: '![](img/b914ce15-02c4-44c4-9341-6029dd71ed00.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b914ce15-02c4-44c4-9341-6029dd71ed00.png)'
- en: Inputting data using Python
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 输入数据
- en: 'Similarly, we can use Python to retrieve the data, as shown in the code here:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以使用 Python 来检索数据，如以下代码所示：
- en: '[PRE4]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After retrieving data, the `print(data.head(2))` function can be used to see
    the first two instances:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 获取数据后，可以使用`print(data.head(2))`函数查看前两个实例：
- en: '[PRE5]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'When typing `pd.read.csv()`, we can find the definitions of all input variables,
    shown in the following screenshot. Again, to save space, only the first several
    input variables are shown:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当输入`pd.read.csv()`时，我们可以找到所有输入变量的定义，如下图所示。为了节省空间，仅显示了前几个输入变量：
- en: '![](img/05dd6a84-7d4b-4a74-952c-7dbc6f1e75c0.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/05dd6a84-7d4b-4a74-952c-7dbc6f1e75c0.png)'
- en: 'To prevent a future potential change in terms of a dataset link, we have a
    backup dataset located at the author''s website, shown in the following Python
    code:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止未来数据集链接发生变化，我们在作者的网站上有一个备份数据集，以下是相应的 Python 代码：
- en: '[PRE6]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following table shows several functions included in the pandas package
    that we could use to retrieve data:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了 pandas 包中一些可以用于检索数据的函数：
- en: '| **Function** | **Description** |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| **函数** | **描述** |'
- en: '| `read_clipboard` | Read text from clipboard and pass to `read_table` |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `read_clipboard` | 从剪贴板读取文本并传递给`read_table` |'
- en: '| `read_csv` | Read a CSV file into `DataFrame` |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `read_csv` | 将CSV文件读取到`DataFrame` |'
- en: '| `read_excel` | Read an Excel table into a pandas `DataFrame` |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `read_excel` | 将Excel表格读取到pandas `DataFrame` |'
- en: '| `read_feather` | Load a feather-format object from the file path |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `read_feather` | 从文件路径加载一个 feather 格式的对象 |'
- en: '| `read_fwf` | Read a table of formatted lines with fixed-width into `DataFrame`
    |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `read_fwf` | 读取固定宽度格式的行表格到`DataFrame` |'
- en: '| `read_gbq` | Load data from Google BigQuery |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `read_gbq` | 从 Google BigQuery 加载数据 |'
- en: '| `read_hdf` | Retrieve a pandas object stored in a file |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `read_hdf` | 检索存储在文件中的pandas对象 |'
- en: '| `read_html` | Read HTML tables into a list of `DataFrame` objects |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `read_html` | 将HTML表格读取到`DataFrame`对象列表中 |'
- en: '| `read_json` | Convert a JSON string into a pandas object |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `read_json` | 将 JSON 字符串转换为 pandas 对象 |'
- en: '| `read_msgpack` | Load a `msgpack` pandas object from the specified file path
    |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `read_msgpack` | 从指定的文件路径加载一个`msgpack` pandas 对象 |'
- en: '| `read_pickle` | Load a `pickled` pandas object (or any other `pickled` object)
    from the specified file path |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `read_pickle` | 从指定的文件路径加载一个`pickled` pandas 对象（或任何其他`pickled`对象） |'
- en: '| `read_sas` | Read SAS files stored as either XPORT or SAS7BDAT format files
    |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `read_sas` | 读取存储为XPORT或SAS7BDAT格式的SAS文件 |'
- en: '| `read_sql` | Read an SQL query or database table into a `DataFrame` |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `read_sql` | 将SQL查询或数据库表读取到`DataFrame` |'
- en: '| `read_sql_query` | Read an SQL query into a `DataFrame` |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `read_sql_query` | 将SQL查询读取到`DataFrame` |'
- en: '| `read_sql_table` | Read an SQL database table into a `DataFrame` |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `read_sql_table` | 将SQL数据库表读取到`DataFrame` |'
- en: '| `read_stata` | Read a Stata file into a `DataFrame` |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `read_stata` | 将 Stata 文件读取到`DataFrame` |'
- en: '| `read_table` | Read a general delimited file into a `DataFrame` |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `read_table` | 读取一个通用分隔符文件到`DataFrame` |'
- en: Table 3.4 Functions included in the Python pandas module for inputting data
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3.4 输入数据时 Python pandas 模块中包含的函数
- en: 'To find out detailed information on each of the preceding functions, we use
    the `help()` function. For example, if we want to get more information about the
    `read_sas()` function, we issue the following commands:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取前面提到的每个函数的详细信息，我们使用`help()`函数。例如，如果我们想了解更多关于`read_sas()`函数的信息，我们可以执行以下命令：
- en: '[PRE7]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The corresponding output, the top part only, is shown here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的输出，仅显示顶部部分，如下所示：
- en: '![](img/aa299345-1e1a-4976-95d6-ef8c4107a87b.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa299345-1e1a-4976-95d6-ef8c4107a87b.png)'
- en: Introduction to the Quandl data delivery platform
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Quandl数据交付平台介绍
- en: 'Quandl is a data delivery platform that includes many free datasets. Its website
    is [https://www.quandl.com](https://www.quandl.com). The following are a few programs
    written in R or Python to download data from the platform. The following program
    retrieves the latest `50` trading days'' data for **International Business Machine**
    (**IBM**):'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Quandl是一个数据交付平台，包含许多免费的数据集。其官网是[https://www.quandl.com](https://www.quandl.com)。以下是一些用R或Python编写的程序，用于从该平台下载数据。以下程序检索**国际商业机器公司**（**IBM**）最新的`50`个交易日的数据：
- en: '[PRE8]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Note that we just need to issue the first two lines in the code once. The following
    code would get the data for a Chinese company with a ticker symbol of `601628`.
    Obviously, `DY4` is for Chinese data:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们只需在代码中执行前两行一次。接下来的代码将获取一个中国公司（股票代码为`601628`）的数据。显然，`DY4`代表中国数据：
- en: '[PRE9]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The corresponding output is shown here:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的输出如下所示：
- en: '![](img/23e43492-56dc-4814-bd72-17cc94bed33e.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23e43492-56dc-4814-bd72-17cc94bed33e.png)'
- en: 'For the following R program, we assume that the Quandl application key is contained
    in the `myQuandlKey` variable. Later in the chapter, we explain how to get a Quandl
    application key:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下的R程序，我们假设Quandl应用程序密钥保存在`myQuandlKey`变量中。本章后面将解释如何获取Quandl应用程序密钥：
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'For Python, we have the following code to download the **Gross Domestic Product**
    (**GDP**) from `Quandl`:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python，我们有以下代码从`Quandl`下载**国内生产总值**（**GDP**）：
- en: '[PRE11]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The format of the output dataset is a pandas data frame. `Quandl` can also
    return data as a `numpy` array, shown here:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 输出数据集的格式是pandas数据框。`Quandl`也可以返回`numpy`数组形式的数据，如下所示：
- en: '[PRE12]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following table shows patterns for different sources of data from the Quandl
    data platform:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了来自Quandl数据平台的不同数据源的模式：
- en: '| **Pattern** | **Example** | **Explanation** |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| **模式** | **示例** | **解释** |'
- en: '| WIKI | `WIKI/IBM` | End-of-day US stock prices |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| WIKI | `WIKI/IBM` | 美国股票收盘价 |'
- en: '| DY4 | `DYE/60618` | Chinese data |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| DY4 | `DYE/60618` | 中国数据 |'
- en: '| FRED | `FRED/GDP` | Federal Reserve economic data |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| FRED | `FRED/GDP` | 美国联邦储备经济数据 |'
- en: '| EIA | `EIA/PET_RWTC_D` | US Department of Energy |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| EIA | `EIA/PET_RWTC_D` | 美国能源部 |'
- en: '| NSE | `NSE/OIL` | Oil prices |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| NSE | `NSE/OIL` | 石油价格 |'
- en: '| ZEP | `ZEP/ibm` | Zacks equity prices, dividend history (US) |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| ZEP | `ZEP/ibm` | Zacks股票价格，股息历史（美国） |'
- en: '| CBOE | `CBOE/VXU2018` | Chicago Board Options Exchange |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| CBOE | `CBOE/VXU2018` | 芝加哥期权交易所 |'
- en: 'Table 3.5: Patterns for different types/courses of data on the Quandl platform'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.5：Quandl平台上不同类型/数据源的模式
- en: 'As of 1/10/2017, in terms of the limitation set by Quandl, see the following
    table. For free subscribers, users need to register with Quandl to get a Quandl
    application key:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2017年10月1日，按照Quandl设置的限制，请参见以下表格。对于免费订阅者，用户需要注册Quandl以获取Quandl应用程序密钥：
- en: '| **Type of user** | **Max calls (every 10 min.)** | **Max calls every day**
    | **Concurrent Limit** |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| **用户类型** | **最大调用次数（每10分钟）** | **最大每日调用次数** | **并发限制** |'
- en: '| Anonymous | 20 | 50 | 1 call |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| 匿名 | 20 | 50 | 1次调用 |'
- en: '| Free subscribers | 2,000 | 50,000 | 1 + 1 in the queue |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 免费订阅者 | 2,000 | 50,000 | 队列中1 + 1 |'
- en: '| Premium | 5,000 | 720,000 | No limit |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| 高级会员 | 5,000 | 720,000 | 无限制 |'
- en: 'Table 3.6: Max number of calls every 10 min and every day for Quandl users'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.6：Quandl用户每10分钟和每天最大调用次数
- en: 'The next program shows how to retrieve Walmart data for free subscribers, as
    in, those with a Quandl application key. Being a free subscriber means that you
    register with Quandl without paying any fees:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个程序展示了如何为免费订阅者（即拥有Quandl应用程序密钥的用户）检索沃尔玛数据。成为免费订阅者意味着你可以在不支付任何费用的情况下注册Quandl：
- en: '[PRE13]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output is shown here:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/84731c2b-144a-469c-aa5c-9a63abfd11d5.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84731c2b-144a-469c-aa5c-9a63abfd11d5.png)'
- en: The second line of `quandl.ApiConfig.api_key = 'YOUR_API_KEY'` indicates that
    a user has to enter his/her Quandl application key.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`quandl.ApiConfig.api_key = ''YOUR_API_KEY''`的第二行表示用户必须输入其Quandl应用程序密钥。'
- en: Dealing with missing data
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理缺失数据
- en: 'First, let''s look at the missing codes for different languages:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看不同语言的缺失代码：
- en: '| **Languages** | **Missing code** | **Explanation or examples** |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| **语言** | **缺失代码** | **解释或示例** |'
- en: '| R | `NA` | `NA` stands for Not Available |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| R | `NA` | `NA`代表不可用 |'
- en: '| Python | `nan` | `import scipy as sp``misingCode=sp.nan` |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| Python | `nan` | `import scipy as sp``misingCode=sp.nan` |'
- en: '| Jullia | `missing` | `julia> missing + 5``missing` |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| Jullia | `missing` | `julia> missing + 5``missing` |'
- en: '| Octave | `NaN` | Same for MATLAB as well |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| Octave | `NaN` | MATLAB也是如此 |'
- en: 'Table 3.7: Missing codes for R, Python, Julia, and Octave'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.7：R、Python、Julia 和 Octave 的缺失代码
- en: 'For R, the missing code is `NA`. Here are several functions we could use to
    remove those missing observations, shown in an example:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 对于R，缺失代码是`NA`。以下是几个我们可以使用的函数来删除这些缺失的观察值，示例展示如下：
- en: '[PRE14]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In the previous example, we removed 145 missing values by using the R function
    called `na.exclude()`. We could also use the `apropos()` function to find more
    functions dealing with missing code in R, as shown here:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个示例中，我们通过使用R中的`na.exclude()`函数删除了145个缺失值。我们还可以使用`apropos()`函数查找更多处理缺失代码的函数，如下所示：
- en: '[PRE15]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'For Python, we have the following example, First, let’s generate a dataset
    called `z.csv`, see the R code given next. For the program, we generate `100`
    zeros as our missing values:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python，我们有以下示例，首先，让我们生成一个名为`z.csv`的数据集，参见接下来的R代码。对于该程序，我们生成`100`个零作为缺失值：
- en: '[PRE16]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following Python program checks missing values for `5` columns, replace
    them with `NaN` or with the averages of each columns:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python程序检查`5`列中的缺失值，并将其替换为`NaN`或每列的平均值：
- en: '[PRE17]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The related output is shown here:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下所示：
- en: '![](img/140582de-3c76-48c3-947a-bfcb02099356.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/140582de-3c76-48c3-947a-bfcb02099356.png)'
- en: 'At this stage, we just know that for the first five columns, zero represents
    a missing value. The code of `print((x[[1,2,3,4,5]] == 0).sum())` shows the number
    of zeros for five columns. For instance, there are five zeros for the first column.
    We could use `scipy.NaN` to replace those zeros, as shown here:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段，我们只知道前五列中的零表示缺失值。`print((x[[1,2,3,4,5]] == 0).sum())`的代码显示了五列中零的数量。例如，第一列有五个零。我们可以使用`scipy.NaN`来替换这些零，如下所示：
- en: '[PRE18]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The output with zeros is replaced with `sp.NaN`, as shown here:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 输出中的零已被`sp.NaN`替换，如下所示：
- en: '![](img/fd1d4f34-5969-4b55-8971-989f0c910a44.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd1d4f34-5969-4b55-8971-989f0c910a44.png)'
- en: 'If we plan to use the mean to replace those `NaN`s, we have the following code:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们计划使用均值来替换这些`NaN`，我们可以使用以下代码：
- en: '[PRE19]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output is shown here:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/88843bec-924a-4ce9-9ba0-4d39fcc46330.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/88843bec-924a-4ce9-9ba0-4d39fcc46330.png)'
- en: Data sorting
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据排序
- en: 'In R, we have several ways to sort data. The easiest way is to use the `sort()`
    function (see the code for the simplest one-dimensional data):'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，我们有多种方式进行数据排序。最简单的方式是使用`sort()`函数（请参见用于最简单一维数据的代码）：
- en: '[PRE20]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Let''s look at another way to sort data. The dataset used is called `nyseListing`,
    which is included in the R package called `fImport`, shown here:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看另一种排序数据的方法。使用的数据集叫做`nyseListing`，它包含在R包`fImport`中，如下所示：
- en: '[PRE21]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output is shown here:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/95064081-0de2-49c6-a728-2b001d668452.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95064081-0de2-49c6-a728-2b001d668452.png)'
- en: 'In total, we have `3,387` observations, each with `4` variables. The dataset
    is sorted by `Symbol`, as in the tickers of individual stocks. Assume that we
    want to sort them by `Name`, as shown here:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有`3,387`个观察值，每个观察值有`4`个变量。数据集按`Symbol`排序，就像是各个股票的代码一样。假设我们希望按`Name`排序，如下所示：
- en: '[PRE22]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The output shows that the dataset is indeed sorted by company `Name`:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示数据集确实是按公司`Name`排序的：
- en: '![](img/9ef74209-741e-4e13-9c80-81a3cdf650c0.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ef74209-741e-4e13-9c80-81a3cdf650c0.png)'
- en: 'In the following example, we sort by `ID` first, then by `RET`:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们首先按`ID`排序，然后按`RET`排序：
- en: '[PRE23]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Our simple output dataset is shown here:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的简单输出数据集如下所示：
- en: '![](img/1a51c911-769d-4cfd-a6a4-185109c797fa.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1a51c911-769d-4cfd-a6a4-185109c797fa.png)'
- en: 'To sort the data according to `ID` and `RET`, we could use `order(ID,RET)`,
    shown here:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 为了按`ID`和`RET`排序数据，我们可以使用`order(ID,RET)`，如下所示：
- en: '[PRE24]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The following screenshot shows that the output dataset was sorted correctly:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示输出数据集已正确排序：
- en: '![](img/637557cb-2dda-4b71-835c-cf4eea18af5e.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/637557cb-2dda-4b71-835c-cf4eea18af5e.png)'
- en: 'If we want to sort according to decreasing order, we could add `decreasing=TRUE`:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望按降序排序，可以添加`decreasing=TRUE`：
- en: '[PRE25]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'To sort data in Python, see the following code:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Python中排序数据，参见以下代码：
- en: '[PRE26]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The output is shown here:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/e0a2ab0c-f7b4-4243-b924-bdade33694bc.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0a2ab0c-f7b4-4243-b924-bdade33694bc.png)'
- en: Slicing and dicing datasets
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 切片和切割数据集
- en: 'Our first example is to pick all stocks listed on the NYSE by using an R dataset
    called `marketCap.Rdata`, shown in the code here:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个例子是使用一个名为`marketCap.Rdata`的R数据集来选取所有在纽约证券交易所上市的股票，代码如下：
- en: '[PRE27]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The associated output is shown here:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下所示：
- en: '[PRE28]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We have various ways to choose a subset of the R dataset called `.marketCap`.
    Note that there is a dot in front of `.marketCap`:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有多种方法可以选择R数据集`.marketCap`的子集。请注意，`.marketCap`前面有一个点：
- en: '[PRE29]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: A Python dataset is downloadable at [http://canisius.edu/~yany/python/marketCap.pkl](http://canisius.edu/~yany/python/marketCap.pkl).
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从[http://canisius.edu/~yany/python/marketCap.pkl](http://canisius.edu/~yany/python/marketCap.pkl)下载一个Python数据集。
- en: Merging different datasets
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合并不同的数据集
- en: 'First, let''s generate some hypothetical datasets. Then we will try to merge
    them according to certain rules. The easiest way is to use Monte Carlo simulation
    to generate those datasets:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们生成一些假设的数据集。然后，我们将尝试根据一定的规则将它们合并。最简单的方法是使用蒙特卡洛模拟来生成这些数据集：
- en: '[PRE30]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In the code, the first line sets up a random seed which will guarantee that
    any user will get the same random numbers if he/she uses the same random seed.
    The `runif()` function is used to get random numbers from a uniform distribution.
    In a sense, the preceding code would generate 2-year returns for five stocks.
    The `dim()` and `head()` function can be used to see the dimensions of the dataset
    and its first couple of lines, as shown here:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码中，第一行设置了一个随机种子，这将保证任何用户如果使用相同的随机种子，都会得到相同的随机数。`runif()`函数用于从均匀分布中生成随机数。从某种意义上讲，前面的代码将生成五只股票的2年期回报率。`dim()`和`head()`函数可以用来查看数据集的维度和前几行数据，代码如下：
- en: '[PRE31]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Similarly, we could get the market returns, shown in the code here:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以获取市场回报，代码如下：
- en: '[PRE32]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To make the merge more interesting, we deliberately make the market returns
    longer, shown here along with its dimensions and the first several lines:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使合并更有趣，我们故意将市场回报时间延长，代码如下，同时显示其维度和前几行数据：
- en: '[PRE33]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'To merge them, we have the following code:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 要合并它们，我们有以下代码：
- en: '[PRE34]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: To find out more about the R `merge()` function, just type `help(merge)` and
    we can then specify inner merge, left-merge, right-merge, and out merge. The default
    setting in the previous case is called inner merge, as in picking up observations
    that only exist in both datasets.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于R语言`merge()`函数的信息，只需键入`help(merge)`，然后我们可以指定内连接、左连接、右连接和外连接。在前面的例子中，默认设置是内连接，即选择两个数据集中都存在的观察值。
- en: 'The following Python program shows this concept clearly:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python程序清楚地展示了这一概念：
- en: '[PRE35]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The related output is shown here:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下所示：
- en: '![](img/5bb67bd0-c2df-42c7-83d0-4fc7ff12963d.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5bb67bd0-c2df-42c7-83d0-4fc7ff12963d.png)'
- en: Data output
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据输出
- en: 'In the previous section, by using the R language, we generated a data asset
    called `final`. To save it to a CSV file, we could use the `write.csv()` or `write.table()`
    functions, shown in the code here:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们使用R语言生成了一个名为`final`的数据资产。要将其保存为CSV文件，我们可以使用`write.csv()`或`write.table()`函数，代码如下：
- en: '[PRE36]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The separator for the `write.csv()` function is a comma, while we can specify
    our own separator for the `write.table()` function. To find out the other R functions
    starting with `write`, we could use the `apropos()` function, shown here:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '`write.csv()`函数的分隔符是逗号，而我们可以为`write.table()`函数指定自己的分隔符。要查找其他以`write`开头的R函数，我们可以使用`apropos()`函数，代码如下：'
- en: '[PRE37]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'For the following Python program, we export Fama-French monthly factors to
    three different output formats, pickle, CSV, and text files:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下Python程序，我们将Fama-French每月因子导出到三种不同的输出格式：pickle、CSV和文本文件：
- en: '[PRE38]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Introduction to the cbsodata Python package
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`cbsodata` Python包简介'
- en: 'To install the `cbsodata` Python package, perform the following steps:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`cbsodata` Python包，请执行以下步骤：
- en: 'We can use one of the following commands:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令之一：
- en: '[PRE39]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'For more detailed instructions about how to install the Python package, please
    see [Chapter 6](c812a40e-eb24-4bb8-8af5-1cfe1834ec77.xhtml), *Managing Packages*:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何安装Python包的详细说明，请参见[第6章](c812a40e-eb24-4bb8-8af5-1cfe1834ec77.xhtml)，*管理包*：
- en: 'The next program shows one example of using the package:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一段程序展示了使用该包的一个示例：
- en: '[PRE40]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The corresponding output is shown in the following screenshot:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相应的输出如下所示：
- en: '![](img/fde9f01d-fefc-452a-b70f-ad7d69f6fd64.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fde9f01d-fefc-452a-b70f-ad7d69f6fd64.png)'
- en: The last line in the screenshot gives the name of the dataset. In the previous
    example, we used the dataset with the name `82070ENG`.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 截图中的最后一行给出了数据集的名称。在之前的例子中，我们使用的数据集名称为`82070ENG`。
- en: 'To find out all the names of lists, we use the `get_table_list()` function;
    see the following code:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了找出所有列表的名称，我们使用`get_table_list()`函数；请参见以下代码：
- en: '[PRE41]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Introduction to the datadotworld Python package
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: datadotworld Python 包介绍
- en: 'To install the `datadotworld` Python package, follow these steps:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 `datadotworld` Python 包的步骤如下：
- en: 'First, we have to install the package. To do so, we could try one of the following
    lines:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须安装该包。为此，我们可以尝试以下其中一行命令：
- en: '[PRE42]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'After the package is successfully installed, we can use the `dir()` function
    to list all its functions, as shown in this screenshot:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 包成功安装后，我们可以使用 `dir()` 函数列出该包的所有函数，如下所示：
- en: '![](img/25a19cd1-b50f-4874-82d9-3f4988eab715.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25a19cd1-b50f-4874-82d9-3f4988eab715.png)'
- en: 'A user has to get an APK token at [https://data.world/settings/advaned](https://data.world/settings/advaned)
    in order to run a Python program. Without such a token, we might get the following
    error message if we run a `datadotworld` function:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户必须在[https://data.world/settings/advaned](https://data.world/settings/advaned)获取一个
    APK token 才能运行 Python 程序。如果没有该 token，我们在运行`datadotworld`函数时可能会遇到以下错误信息：
- en: '![](img/3ea234b5-69f9-4596-91fc-231c81930ef4.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ea234b5-69f9-4596-91fc-231c81930ef4.png)'
- en: 'According to the error message, we must run the following configure command:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据错误信息，我们必须运行以下配置命令：
- en: '![](img/fca01243-dd8c-4d98-b2d2-5aa81962e6d8.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fca01243-dd8c-4d98-b2d2-5aa81962e6d8.png)'
- en: 'Now we can use the Python package as shown in the following Python program:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以像下面的 Python 程序一样使用 Python 包：
- en: '[PRE43]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The related output is shown here:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相关输出如下所示：
- en: '![](img/637c8877-b3e3-4edb-abac-8ff37216cacd.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/637c8877-b3e3-4edb-abac-8ff37216cacd.png)'
- en: Introduction to the haven and foreign R packages
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: haven 和 foreign R 包介绍
- en: The R package called `haven` is for import and export from SPSS, Stata and SAS
    files. The package is for** Labelled Data Utility Functions**, which is a collection
    of many small functions dealing with labelled data, such as reading and writing
    data between R and other statistical software packages such as `SAS`, `SPSS`,
    or `Stata`, and working with labelled data.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`haven` R 包用于导入和导出 SPSS、Stata 和 SAS 文件。该包是 **标签数据工具函数**（Labelled Data Utility
    Functions），这是一个处理标签数据的许多小函数集合，例如在 R 与其他统计软件包如 `SAS`、`SPSS` 或 `Stata` 之间读写数据，并处理标签数据。'
- en: 'This includes easy ways to get, set, and change value and variable label attributes,
    convert labelled vectors into factors or numeric values (and vice versa), and
    deal with multiple declared missing values. The following example is about writing
    several specific outputs:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 这包括获取、设置和更改值及变量标签属性的简便方法，转换标签向量为因子或数值（反之亦然），以及处理多个声明的缺失值。以下示例展示了写入几个特定输出：
- en: '[PRE44]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Another R package called `foreign` can be used to read SPSS, and SAS data.
    Here is one example. First, let''s download a SPSS dataset called `airline_passanges.sav`
    at [http://calcnet.mth.cmich.edu/org/spss/Prj_airlinePassengers.htm](http://calcnet.mth.cmich.edu/org/spss/Prj_airlinePassengers.htm).
    Assume that the related SPCC data is saved under `c:/temp`:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个叫做`foreign`的 R 包可以用来读取 SPSS 和 SAS 数据。这里有一个示例。首先，我们下载一个名为`airline_passanges.sav`的
    SPSS 数据集，下载地址为[http://calcnet.mth.cmich.edu/org/spss/Prj_airlinePassengers.htm](http://calcnet.mth.cmich.edu/org/spss/Prj_airlinePassengers.htm)。假设相关的
    SPCC 数据保存在 `c:/temp` 目录下：
- en: '[PRE45]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Introduction to the dslabs R package
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dslabs R包介绍
- en: 'The `dslabs` R package is short for **Data Science Labs**. The package includes
    several datasets, such as the dataset called `murders` for US gun murders by state
    for 2010:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '`dslabs` R 包是 **数据科学实验室**（Data Science Labs）的简称。该包包括多个数据集，例如包含2010年美国各州枪支谋杀数据的`murders`数据集：'
- en: '[PRE46]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The following table shows the datasets included in the package:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了该包中包含的数据集：
- en: '| **Name of dataset** | **Description** |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| **数据集名称** | **描述** |'
- en: '| [admissions](http://127.0.0.1:23636/library/dslabs/html/admissions.html)
    | Gender bias among graduate school admissions to UC Berkeley |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| [admissions](http://127.0.0.1:23636/library/dslabs/html/admissions.html)
    | 加州大学伯克利分校研究生入学性别偏见 |'
- en: '| [divorce_margarine](http://127.0.0.1:23636/library/dslabs/html/divorce_margarine.html)
    | Divorce rate and margarine consumption data |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| [divorce_margarine](http://127.0.0.1:23636/library/dslabs/html/divorce_margarine.html)
    | 离婚率与人造黄油消费数据 |'
- en: '| [ds_theme_set](http://127.0.0.1:23636/library/dslabs/html/ds_theme_set.html)
    | dslabs theme set |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| [ds_theme_set](http://127.0.0.1:23636/library/dslabs/html/ds_theme_set.html)
    | dslabs 主题设置 |'
- en: '| [gapminder](http://127.0.0.1:23636/library/dslabs/html/gapminder.html) |
    Gapminder data |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| [gapminder](http://127.0.0.1:23636/library/dslabs/html/gapminder.html) |
    Gapminder 数据 |'
- en: '| [heights](http://127.0.0.1:23636/library/dslabs/html/heights.html) | Self-Reported
    heights |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| [heights](http://127.0.0.1:23636/library/dslabs/html/heights.html) | 自报身高
    |'
- en: '| [murders](http://127.0.0.1:23636/library/dslabs/html/murders.html) | US gun
    murders by state for 2010 |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| [murders](http://127.0.0.1:23636/library/dslabs/html/murders.html) | 2010年美国各州的枪支谋杀案件
    |'
- en: '| [na_example](http://127.0.0.1:23636/library/dslabs/html/na_example.html)
    | Count data with some missing values |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| [na_example](http://127.0.0.1:23636/library/dslabs/html/na_example.html)
    | 包含一些缺失值的计数数据 |'
- en: '| [oecd](http://127.0.0.1:23636/library/dslabs/html/gapminder.html) | Gapminder
    data |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| [oecd](http://127.0.0.1:23636/library/dslabs/html/gapminder.html) | Gapminder
    数据 |'
- en: '| [opec](http://127.0.0.1:23636/library/dslabs/html/gapminder.html) | Gapminder
    data |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| [opec](http://127.0.0.1:23636/library/dslabs/html/gapminder.html) | Gapminder
    数据 |'
- en: '| [outlier_example](http://127.0.0.1:23636/library/dslabs/html/outlier_example.html)
    | Adult male heights in feet with outliers |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| [outlier_example](http://127.0.0.1:23636/library/dslabs/html/outlier_example.html)
    | 带有离群值的成年男性身高（英尺） |'
- en: '| [polls_us_election_2016](http://127.0.0.1:23636/library/dslabs/html/polls_us_election_2016.html)
    | Fivethirtyeight 2016 poll data |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| [polls_us_election_2016](http://127.0.0.1:23636/library/dslabs/html/polls_us_election_2016.html)
    | Fivethirtyeight 2016年选举民调数据 |'
- en: '| [raw_data_research_funding_rates](http://127.0.0.1:23636/library/dslabs/html/research_funding_rates.html)
    | Gender bias in research funding in the Netherlands |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| [raw_data_research_funding_rates](http://127.0.0.1:23636/library/dslabs/html/research_funding_rates.html)
    | 荷兰研究资金中的性别偏见 |'
- en: '| [reported_heights](http://127.0.0.1:23636/library/dslabs/html/reported_heights.html)
    | Self-reported Heights |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| [reported_heights](http://127.0.0.1:23636/library/dslabs/html/reported_heights.html)
    | 自报身高 |'
- en: '| [research_funding_rates](http://127.0.0.1:23636/library/dslabs/html/research_funding_rates.html)
    | Gender bias in research funding in the Netherlands |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| [research_funding_rates](http://127.0.0.1:23636/library/dslabs/html/research_funding_rates.html)
    | 荷兰研究资金中的性别偏见 |'
- en: '| [results_us_election_2016](http://127.0.0.1:23636/library/dslabs/html/polls_us_election_2016.html)
    | Fivethirtyeight 2016 poll fata |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| [results_us_election_2016](http://127.0.0.1:23636/library/dslabs/html/polls_us_election_2016.html)
    | Fivethirtyeight 2016年选举民调数据 |'
- en: '| [rfalling_object](http://127.0.0.1:23636/library/dslabs/html/rfalling_object.html)
    | Simulated falling object data |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| [rfalling_object](http://127.0.0.1:23636/library/dslabs/html/rfalling_object.html)
    | 模拟的下落物体数据 |'
- en: '| [take_poll](http://127.0.0.1:23636/library/dslabs/html/take_poll.html) |
    Models results from taking a poll |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| [take_poll](http://127.0.0.1:23636/library/dslabs/html/take_poll.html) |
    从民调中获得的模型结果 |'
- en: '| [us_contagious_diseases](http://127.0.0.1:23636/library/dslabs/html/us_contagious_diseases.html)
    | Contagious disease data for US states |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| [us_contagious_diseases](http://127.0.0.1:23636/library/dslabs/html/us_contagious_diseases.html)
    | 美国各州的传染病数据 |'
- en: Table 3.8 Datasets included in the R package called dslabs
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.8 包含在R包dslabs中的数据集
- en: Generating Python datasets
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成Python数据集
- en: 'To generate a Python dataset, we use the `Pandas to_pickle` functionality.
    The dataset we plan to use is called `adult.pkl`, as shown in the following screenshot:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成Python数据集，我们使用`Pandas to_pickle`功能。我们计划使用的数据集名为`adult.pkl`，如以下截图所示：
- en: '![](img/4103314a-8b1a-4e19-8957-b36c8bb097da.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4103314a-8b1a-4e19-8957-b36c8bb097da.png)'
- en: 'The related Python code is given here:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 相关的Python代码如下所示：
- en: '[PRE47]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'To show the first several lines of observations, we use the `x.head()` functionality,
    shown in the following screenshot:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示前几行的观察数据，我们使用`x.head()`功能，如以下截图所示：
- en: '![](img/5d80694f-a4d1-4b52-bedc-00ec3403ce5f.png)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d80694f-a4d1-4b52-bedc-00ec3403ce5f.png)'
- en: Note that the backup dataset is available at the author's website, downloadable
    at [http://canisius.edu/~yany/data/adult.data.txt](http://canisius.edu/~yany/data/adult.data.txt).
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，备份数据集可以从作者网站获取，下载地址为[http://canisius.edu/~yany/data/adult.data.txt](http://canisius.edu/~yany/data/adult.data.txt)。
- en: Generating R datasets
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成R数据集
- en: 'Here, we show you how to generate an R dataset called `iris.RData` by using
    the R `save()` function:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们展示如何通过使用R的`save()`函数生成一个名为`iris.RData`的R数据集：
- en: '[PRE48]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'To upload the function, we use the `load()` function:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传该函数，我们使用`load()`函数：
- en: '[PRE49]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Note that the extension of `.RData` is not critical. The second way to save
    R data is to apply an R function called `saveRDS()`, shown in the code here:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`.RData`扩展名并不是关键。保存R数据的第二种方法是使用R函数`saveRDS()`，以下代码展示了如何使用：
- en: '[PRE50]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The corresponding function to load the dataset is called `readRDS()`. Another
    important property when using the rds dataset is that we can assign another more
    convenient name, shown in the code that follows. In this case, we call it `abc`
    instead of `ff3monthly`:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 加载数据集的相应函数是`readRDS()`。使用rds数据集时，另一个重要特性是我们可以为其分配一个更方便的名称，如以下代码所示。在这个例子中，我们将其命名为`abc`而不是`ff3monthly`：
- en: '[PRE51]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Summary
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we first discussed sources of open data, which included The
    Bureau of Labor Statistics, the Census Bureau, Professor French's data library,
    the Federal Reserve's data library, and the UCI Machine Learning Depository. After
    that, we showed you how to input data; how to deal with missing data; how to sort,
    slice, and dice the datasets; and how to merge different datasets. Data output
    was discussed in detail. For different languages, such as Python, R, and Julia,
    several relevant packages for data manipulation were introduced and discussed.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先讨论了开放数据的来源，其中包括劳工统计局、人口普查局、French教授的数据图书馆、联邦储备银行的数据图书馆以及UCI机器学习数据仓库。之后，我们展示了如何输入数据；如何处理缺失数据；如何对数据集进行排序、切片和筛选；以及如何合并不同的数据集。数据输出的内容也进行了详细讨论。对于不同的编程语言，如Python、R和Julia，我们介绍并讨论了与数据处理相关的几个包。
- en: In [Chapter 4](fa744362-086d-4d82-9e32-5733918d1d38.xhtml), *Data Visualization*,
    we will discuss data visualization in R, Python, and Julia separately. To make
    our visual presentation more eye catching, we will show how you to generate simple
    graphs and bar charts, as well as how to add trend lines and legends. Other explanations
    will include how to save graphs to an external file, and we will discuss several
    packages related to data visualization in R, Python, and Julia.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](fa744362-086d-4d82-9e32-5733918d1d38.xhtml)，*数据可视化*，我们将分别讨论R、Python和Julia中的数据可视化。为了使我们的视觉展示更加引人注目，我们将展示如何生成简单的图形和条形图，以及如何添加趋势线和图例。其他说明将包括如何将图形保存到外部文件，并且我们将讨论与R、Python和Julia中的数据可视化相关的多个包。
- en: Review questions and exercises
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复习问题与练习
- en: What is the difference between open data and proprietary databases?
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开放数据和专有数据库之间有什么区别？
- en: Is it enough for learners in the area of data science to use open data?
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于数据科学领域的学习者来说，使用开放数据是否足够？
- en: Where can we access open public data?
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在哪里可以访问开放的公共数据？
- en: From The UCI Data Depository, [http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php),
    download a dataset called `Wine`. Write a program in R to import it.
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从UCI数据仓库，[http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php)，下载名为`Wine`的数据集。用R编写程序导入该数据集。
- en: From the UCI Data Depository, download a dataset called `Forest Fire`. Write
    a program in Python to import it.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从UCI数据仓库下载名为`Forest Fire`的数据集。用Python编写程序导入该数据集。
- en: 'From the UCI Data Depository, download a dataset called `Bank Marketing`. Write
    a program in Octave to import it. Answer the following questions: 1) How many
    banks? and 2) What is the cost?'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从UCI数据仓库下载名为`Bank Marketing`的数据集。用Octave编写程序导入该数据集。回答以下问题：1）有多少银行？2）成本是多少？
- en: How can we find all R functions with `read.` as their leading letters? (Note
    that there is a dot after `read.`)
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何找到所有以`read.`开头的R函数？（注意`read.`后有一个点）
- en: How can we find more information on an R function called `read.xls()`?
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何找到更多关于R函数`read.xls()`的信息？
- en: 'Explain the differences between two R functions: `save()` and `saveRDS()`.'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释两个R函数：`save()`和`saveRDS()`之间的区别。
- en: Find more information about the `read_clipboard()` function included in the
    Python pandas package.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找更多关于Python pandas包中`read_clipboard()`函数的信息。
- en: What is the Quandl platform? What kinds of data could we download from Quandl?
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Quandl平台是什么？我们可以从Quandl下载哪些类型的数据？
- en: Write both R and Python programs to download GDP (Gross Domestic Product) data
    from the Quandl platform.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写R和Python程序，从Quandl平台下载GDP（国内生产总值）数据。
- en: When loading an R dataset, what is the difference between using the `load()`
    function and the `readRDS()` function?
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在加载R数据集时，使用`load()`函数和`readRDS()`函数有什么区别？
- en: 'After uploading the Python pandas package, explain why we have the following
    error message:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传Python pandas包后，解释为什么我们会看到以下错误信息：
- en: '![](img/b5fb4549-6c1d-4469-92fb-c2a78eb33378.png)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b5fb4549-6c1d-4469-92fb-c2a78eb33378.png)'
- en: 'First, download a ZIP file called `bank-fall.zip` at [http://archive.ics.uci.edu/ml/datasets/Bank+Marketing](http://archive.ics.uci.edu/ml/datasets/Bank+Marketing).
    Unzip the file to get a CSV file; see the related code that follows:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，下载一个名为`bank-fall.zip`的ZIP文件，网址为[http://archive.ics.uci.edu/ml/datasets/Bank+Marketing](http://archive.ics.uci.edu/ml/datasets/Bank+Marketing)。解压文件以获取一个CSV文件；请参见以下相关代码：
- en: '![](img/e347f686-a7b8-4809-874f-1babfb9ae8ae.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e347f686-a7b8-4809-874f-1babfb9ae8ae.png)'
- en: 'Generate an R dataset called `bank.Rata` and `bank.rds` and answer the following
    questions: a) What is the average age? b) What percentage of people are married?
    c) Is the default probability of those who are married higher than those who are
    single?'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个名为`bank.Rata`和`bank.rds`的 R 数据集，并回答以下问题：a) 平均年龄是多少？ b) 有多少人已婚？ c) 已婚人士的违约概率是否高于单身人士？
- en: How do we merge two datasets in R?
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何在 R 中合并两个数据集？
- en: Write a Python program to download IBM's daily data from Quandl and merge it
    with Fama-French three-factor. To get a Fama-French daily factor time series we
    could go to [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)
    or download a dataset at [http://canisius.edu/~yany/python/data/ffDaily.pkl](http://canisius.edu/~yany/python/data/ffDaily.pkl).
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个 Python 程序，从 Quandl 下载 IBM 的每日数据，并将其与 Fama-French 三因子模型数据合并。要获取 Fama-French
    每日因子时间序列，我们可以访问[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)或下载数据集[http://canisius.edu/~yany/python/data/ffDaily.pkl](http://canisius.edu/~yany/python/data/ffDaily.pkl)。
- en: Generate both R and Python datasets for monthly Fama-French-Charhart four factors.
    Both time series, can be downloaded from Professor French's data library.
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成 R 和 Python 数据集，包含每月的 Fama-French-Charhart 四因子数据。这两个时间序列可以从 French 教授的数据库下载。
- en: Write a Python program to merge FRED/GDP data with market index data.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个 Python 程序，将 FRED/GDP 数据与市场指数数据合并。
