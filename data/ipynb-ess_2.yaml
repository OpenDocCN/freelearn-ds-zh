- en: Chapter 2. The Notebook Interface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。笔记本界面
- en: The IPython notebook has an extensive user interface that makes it appropriate
    for the creation of richly formatted documents. In this chapter, we will thoroughly
    explore the notebook's capabilities. We will also consider the pitfalls and best
    practices of using the notebook.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: IPython笔记本具有广泛的用户界面，适合创建丰富格式的文档。本章将全面探索笔记本的功能。我们还将考虑使用笔记本时的陷阱和最佳实践。
- en: 'In this chapter, the following topics will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Notebook editing and navigation, which includes cell types; adding, deleting,
    and moving cells; loading and saving notebooks; and keyboard shortcuts
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记本的编辑与浏览，包括单元格类型；添加、删除和移动单元格；加载和保存笔记本；以及键盘快捷键
- en: IPython magics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPython魔法命令
- en: Interacting with the operating system
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与操作系统交互
- en: Running scripts, loading data, and saving data
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行脚本、加载数据和保存数据
- en: Embedding images, video, and other media with IPython's rich display system
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用IPython的丰富显示系统嵌入图片、视频和其他媒体
- en: Editing and navigating a notebook
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑和浏览笔记本
- en: 'When we open a notebook (by either clicking on its name in the dashboard or
    creating a new notebook), we see the following in the browser window:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们打开一个笔记本（通过点击仪表板中的名称或创建一个新笔记本）时，浏览器窗口中将显示如下内容：
- en: '![Editing and navigating a notebook](img/8341OS_02_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![编辑和浏览笔记本](img/8341OS_02_01.jpg)'
- en: 'In the preceding screenshot, from the top to the bottom, we see the following
    components:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的截图中，从上到下，我们看到以下组件：
- en: The **Title** bar (area marked **1**) that contains the name of the notebook
    (in the preceding example, we can see **Chapter 2**) and information about the
    notebook version
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标题**栏（标记为**1**的区域），其中包含笔记本的名称（在上面的例子中，我们可以看到**第2章**）以及有关笔记本版本的信息'
- en: The **Menu** bar (area marked **2**) looks like a regular application menu
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**菜单**栏（标记为**2**的区域）看起来像一个常规的应用程序菜单'
- en: The **Toolbar** (area marked **3**) is used for quick access to the most frequently
    used functionality
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具栏**（标记为**3**的区域）用于快速访问最常用的功能'
- en: In the area marked **4**, an empty computation cell is shown
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在标记为**4**的区域，显示一个空的计算单元格
- en: 'Starting with IPython Version 2.0, the notebook has two modes of operation:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从IPython版本2.0开始，笔记本有两种操作模式：
- en: '**Edit**: In this mode, a single cell comes into focus and we can enter text,
    execute code, and perform tasks related to that single cell. The Edit mode is
    activated by clicking on a cell or pressing the *Enter* key.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编辑**：在此模式下，单个单元格被聚焦，我们可以在该单元格中输入文本、执行代码并执行与该单元格相关的任务。通过点击单元格或按*Enter*键激活编辑模式。'
- en: '**Command**: In this mode, we perform tasks related to the whole notebook structure,
    such as moving, copying, cutting, and pasting cells. A series of keyboard shortcuts
    are available to make these operations more efficient. The Command mode is activated
    by clicking anywhere on the notebook, outside any cell, or by pressing the *Esc*
    key.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令**：在此模式下，我们执行与整个笔记本结构相关的任务，如移动、复制、剪切和粘贴单元格。可以使用一系列键盘快捷键来提高这些操作的效率。通过点击笔记本中的任何地方，单元格之外，或按*Esc*键来激活命令模式。'
- en: 'When we open a notebook, it''s in the Command mode. Let''s enter into the Edit
    mode in our new notebook. For this, either click on the empty cell or hit *Enter*.
    The notebook''s appearance will change slightly, as shown in the following screenshot:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们打开一个笔记本时，它处于命令模式。让我们进入新笔记本的编辑模式。为此，可以点击空白单元格或按*Enter*键。笔记本的外观会发生轻微变化，如下图所示：
- en: '![Editing and navigating a notebook](img/8341OS_02_02.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![编辑和浏览笔记本](img/8341OS_02_02.jpg)'
- en: Notice the thick border around the selected cell and the small pencil icon on
    the top-right corner of the notebook menu. These indicate that the notebook is
    in the Edit mode.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意所选单元格周围的粗边框以及笔记本菜单右上角的小铅笔图标。这些表示笔记本处于编辑模式。
- en: In the upcoming subsections, we will explore each of the notebook modes in detail.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的子章节中，我们将详细探讨每种笔记本模式。
- en: Getting help and interrupting computations
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取帮助和中断计算
- en: The notebook is a complex tool that integrates several different technologies.
    It is unlikely that new (or even experienced) users will be able to memorize all
    the commands and shortcuts. The **Help** menu in the notebook has links to relevant
    documentation that should be consulted as often as necessary.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本是一个复杂的工具，集成了多种不同的技术。新用户（甚至是有经验的用户）不太可能记住所有命令和快捷键。笔记本中的**帮助**菜单提供了相关文档的链接，应该根据需要经常参考。
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Newcomers may want to visit the Notebook Interface Tour, which is available
    at [http://nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/User%20Interface.ipynb](http://nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/User%20Interface.ipynb),
    to get started.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 新手可能想访问笔记本界面导览，可以在[http://nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/User%20Interface.ipynb](http://nbviewer.ipython.org/github/ipython/ipython/blob/2.x/examples/Notebook/User%20Interface.ipynb)上找到，作为入门帮助。
- en: 'It is also easy to get help on any object (including functions and methods).
    For example, to access help on the `sum()` function, run the following line of
    code in a cell:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，获取任何对象（包括函数和方法）的帮助也很容易。例如，要访问`sum()`函数的帮助，可以在单元格中运行以下代码：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Appending `??` to an object's name will provide more detailed information. Incidentally,
    just running `?` by itself in a cell displays information about IPython features.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在对象名称后附加`??`将提供更详细的信息。顺便提一下，只在单元格中运行`?`会显示有关 IPython 特性的相关信息。
- en: The other important thing to know right from the start is how to interrupt a
    computation. This can be done through the **Kernel** menu, where the kernel process
    running the notebook code can be interrupted and restarted. The kernel can also
    be interrupted by clicking on the **Stop** button on the toolbar.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要从一开始就了解的重要事项是如何中断计算。这可以通过**内核**菜单完成，在这里可以中断并重新启动运行笔记本代码的内核进程。也可以通过点击工具栏上的**停止**按钮来中断内核。
- en: The Edit mode
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑模式
- en: 'The Edit mode is used to enter text in cells and to execute code. Let''s type
    some code in the fresh notebook we created. As usual, we want to import `NumPy`
    and `matplotlib` to the current namespace, so we enter the following magic command
    in the first cell:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑模式用于在单元格中输入文本并执行代码。让我们在新创建的笔记本中输入一些代码。像往常一样，我们希望将`NumPy`和`matplotlib`导入到当前命名空间，因此我们在第一个单元格中输入以下魔法命令：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Press *Shift* + *Enter* or click on the Play button on the toolbar to execute
    the code. Notice that either of the options causes a new cell to be added under
    the current cell.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 按*Shift* + *Enter* 或点击工具栏上的播放按钮来执行代码。注意，无论选择哪种方式，都会在当前单元格下方添加一个新单元格。
- en: 'Just to have something concrete to work with, let''s suppose we want to compute
    the interest accumulated in an investment. Type the following code in three successive
    cells:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有一些具体的内容可以操作，假设我们想计算一项投资所积累的利息。请在连续三个单元格中输入以下代码：
- en: 'In cell 1, enter the following command lines:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单元格 1 中，输入以下命令行：
- en: '[PRE2]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In cell 2, enter the following command lines:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单元格 2 中，输入以下命令行：
- en: '[PRE3]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In cell 3, enter the following command lines**:**
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单元格 3 中，输入以下命令行**：**
- en: '[PRE4]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, perform the following steps:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，执行以下步骤：
- en: Run cell 1 and cell 2 in the usual way by pressing *Shift* + *Enter*.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按*Shift* + *Enter* 以常规方式运行单元格 1 和单元格 2。
- en: Run cell 3 by pressing *Ctrl* + *Enter* instead.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 而是通过按*Ctrl* + *Enter* 来运行单元格 3。
- en: Notice that cell 3 continues to be selected after being executed. Keep pressing
    *Ctrl* + *Enter* while having cell 3 selected. The plot will be updated each time
    to display the return on the investment for a different 5-year period.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在执行后，单元格 3 继续被选中。保持按住*Ctrl* + *Enter*，并确保选中单元格 3。每次都会更新图表，以显示不同 5 年期的投资回报。
- en: 'This is how the code works:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的工作原理如下：
- en: In cell 1, we defined a function that computes the return on investment for
    given principal, interest rate, and number of years.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单元格 1 中，我们定义了一个函数，用于计算给定本金、利率和年数的投资回报。
- en: In cell 2, we set actual values for the principal and interest, and then initialized
    variables to define the period for which we want to do the computation.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单元格 2 中，我们设置了本金和利息的实际值，并初始化了变量，以定义我们希望进行计算的时间段。
- en: Cell 3 computed the amount returned for a period of 5 years and plotted the
    results.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元格 3 计算了 5 年期的回报金额并绘制了结果。
- en: 'Then, the variables `tstart` and `tend` were updated. The command lines are
    as follows:'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，变量`tstart`和`tend`被更新。命令行如下：
- en: '[PRE5]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The effect is that, the next time the cell gets updated, time advances to the
    next 5-year period. So, by repeatedly pressing *Ctrl* + *Enter*, we can quickly
    see how the investment grows in successive 5-year periods.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 其效果是，下次更新单元格时，时间会推进到下一个 5 年期。因此，通过反复按*Ctrl* + *Enter*，我们可以快速查看投资在连续 5 年期中的增长情况。
- en: There is a third way to run commands in a cell. Select cell 2 again by clicking
    on it. Then, press *Alt* + *Enter* in Windows or *Option* + *Enter* on a Mac.
    This will run cell 2 and insert a new cell under it. Leave the new cell alone
    for a while. We don't really need that cell, and we will learn how to delete it
    in the next subsection.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 还有第三种方法可以运行单元格中的命令。再次点击单元格2，然后在Windows中按下*Alt* + *Enter*，或者在Mac上按*Option* +
    *Enter*。这将运行单元格2，并在其下插入一个新单元格。暂时忽略这个新单元格。我们不需要这个单元格，下一节中我们将学习如何删除它。
- en: 'So, there are three ways to run the contents of a cell:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，运行单元格内容有三种方法：
- en: Pressing *Shift* + *Enter* or the Play button on the toolbar. This will run
    the cell and select the next cell (create a new cell if at the end of the notebook).
    This is the most usual way to execute a cell.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按下*Shift* + *Enter*或工具栏上的播放按钮。这将运行单元格并选择下一个单元格（如果在笔记本的末尾，则创建一个新单元格）。这是执行单元格的最常用方法。
- en: Pressing *Ctrl* + *Enter*. This will run the cell and keep the same cell selected.
    It's useful when we want to repeatedly execute the same cell. For example, if
    we want to make modifications to the existing code.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按下*Ctrl* + *Enter*。这将运行单元格并保持选择当前单元格。我们想要反复执行同一个单元格时这非常有用。例如，如果我们想对现有代码进行修改。
- en: Pressing *Alt* + *Enter*. This will run the cell and insert a new cell immediately
    below it.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按下*Alt* + *Enter*。这将运行单元格并立即在其下插入一个新单元格。
- en: 'Another useful feature of the Edit mode is **tab completion**. Select an empty
    cell and type the following command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑模式的另一个有用特点是**Tab自动补全**。选择一个空单元格并输入以下命令：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Then, press the *Tab* key. A list of suggested completions appears. Using the
    arrow keys of the keyboard or the mouse, we can select `amount_values` and then
    press *Enter* to accept the completion.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按下*Tab*键。将会出现一个建议补全列表。使用键盘的箭头键或鼠标，我们可以选择`amount_values`，然后按*Enter*接受补全。
- en: 'A very important feature of IPython is easy access to help information. Click
    on an empty cell and type:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: IPython的一个非常重要的特点是可以轻松访问帮助信息。点击一个空单元格并输入：
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Then, press *Shift* + *Tab*. A tooltip containing information about the `linspace`
    function will appear. More information can be obtained by clicking on the **+**
    symbol at the top-right of the tooltip window. By clicking on the **^** symbol,
    the information is displayed in an information area at the bottom of the notebook.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按*Shift* + *Tab*。将会出现一个包含`linspace`函数信息的工具提示。点击工具提示窗口右上角的**+**符号，可以获得更多信息。点击**^**符号，信息会显示在笔记本底部的信息区域。
- en: Tip
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The *Tab* and *Shift* + *Tab* features are the most useful ones of the notebook;
    be sure to use them often!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*Tab*和*Shift* + *Tab*功能是笔记本中最有用的功能；一定要经常使用它们！'
- en: The Command mode
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命令模式
- en: 'The number of shortcuts available in the Command mode is substantially larger
    than those available in the Edit mode. Fortunately, it is not necessary to memorize
    all of them at once, since most actions in the Command mode are also available
    in the menu. In this section, we will only describe some common features of the
    Command mode. The following table lists some of the useful shortcuts for editing
    cells; the other shortcuts will be described later:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令模式中可用的快捷键远远多于编辑模式中的快捷键。幸运的是，并不需要一次性记住所有快捷键，因为命令模式中的大部分操作在菜单中也有提供。在本节中，我们只会描述一些命令模式的常见功能。以下表格列出了编辑单元格的一些有用快捷键；其他快捷键将稍后介绍：
- en: '| Shortcut | Action |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 快捷键 | 动作 |'
- en: '| --- | --- |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| *Enter* | Activates the Edit mode |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| *Enter* | 激活编辑模式 |'
- en: '| *Esc* | Activates the Command mode |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| *Esc* | 激活命令模式 |'
- en: '| *H* | Displays the list of keyboard shortcuts |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| *H* | 显示键盘快捷键列表 |'
- en: '| *S* or *Ctrl* + *S* | Saves the notebook |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| *S* 或 *Ctrl* + *S* | 保存笔记本 |'
- en: '| *A* | Inserts a cell above |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| *A* | 在当前单元格上方插入一个单元格 |'
- en: '| *B* | Inserts a cell below |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| *B* | 在当前单元格下方插入一个单元格 |'
- en: '| *D* (press twice) | Deletes the cell |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| *D*（按两次） | 删除单元格 |'
- en: '| *Z* | Undoes the last delete |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| *Z* | 撤销上一次删除 |'
- en: '| *Ctrl* + *K* | Moves the cell up |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| *Ctrl* + *K* | 将单元格向上移动 |'
- en: '| *Ctrl* + *J* | Moves the cell down |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| *Ctrl* + *J* | 将单元格向下移动 |'
- en: '| *X* | Cuts the content of the cell |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| *X* | 剪切单元格内容 |'
- en: '| *C* | Copies the content of the cell |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| *C* | 复制单元格的内容 |'
- en: '| *V* | Pastes the content of the cell below the current cell |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| *V* | 将当前单元格下方的内容粘贴到此单元格 |'
- en: '| *Shift* + *V* | Pastes the content of the cell above the current cell |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| *Shift* + *V* | 将当前单元格上方的内容粘贴到此单元格 |'
- en: Note
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One of the most common (and frustrating) mistakes when using the notebook is
    to type something in the wrong mode. Remember to use *Esc* to switch to the Command
    mode and *Enter* to switch to the Edit mode. Also, remember that clicking on a
    cell automatically places it in the Edit mode, so it will be necessary to press
    *Esc* to go to the Command mode.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用笔记本时，最常见（也是最让人沮丧）的错误之一是输入错误的模式。记得使用*Esc*切换到命令模式，使用*Enter*切换到编辑模式。同时，记得点击单元格会自动进入编辑模式，所以需要按*Esc*回到命令模式。
- en: 'Go ahead and try some of the editing shortcuts in the sample notebook. Here
    is one example that you can try:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 继续尝试示例笔记本中的一些编辑快捷键。以下是一个你可以尝试的示例：
- en: Press *Esc* to go to the Command mode.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Esc*进入命令模式。
- en: Use the arrow keys to move to the empty cell we created between cell 2 and cell
    3 in the previous subsection.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用箭头键移动到我们在上一节中在单元格2和单元格3之间创建的空单元。
- en: Press *D* twice. This will cause the cell to be deleted. To get the cell back,
    press *Z*.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*D*两次，这会删除该单元。要恢复单元，按*Z*。
- en: Note
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Notice that some of the shortcuts do not conform to the usual shortcuts in other
    software. For example, the shortcuts for cutting, copying, and pasting cells are
    not preceded by the *Ctrl* key.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一些快捷键与其他软件中的常规快捷键不同。例如，剪切、复制和粘贴单元格的快捷键并不以*Ctrl*键为前缀。
- en: Cell types
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单元类型
- en: So far, we have used the notebook cells only to enter code. We can, however,
    use cells to enter the explanatory text and give structure to the notebook. The
    notebook uses the **Markdown** language to allow easy insertion of rich text in
    a cell. Markdown was created by John Gruber for plain text editing of HTML. See
    the project page at [http://daringfireball.net/projects/markdown/basics](http://daringfireball.net/projects/markdown/basics)
    for the basics of the syntax.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只使用笔记本单元输入代码。然而，我们也可以使用单元格输入解释性文本并为笔记本提供结构。笔记本使用**Markdown**语言来轻松地在单元格中插入丰富文本。Markdown是John
    Gruber为HTML的纯文本编辑而创建的。请参阅项目页面[http://daringfireball.net/projects/markdown/basics](http://daringfireball.net/projects/markdown/basics)，了解语法的基本知识。
- en: Let's see how it works in the notebook. If you created any other cells to experiment
    with the keyboard shortcuts in the previous section, delete them now so that the
    notebook only has the `%pylab inline` cell and the three cells where the interest
    computation is done.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在笔记本中看看它是如何工作的。如果你在上一节中创建了其他单元来尝试快捷键，现在删除它们，以便笔记本中只剩下`%pylab inline`单元和三个进行兴趣计算的单元。
- en: Click on the `%pylab inline` cell and insert a cell right below it. You can
    either use the menu, or go to the Command mode (using the *Esc* key) and use the
    shortcut key *B*.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 点击`%pylab inline`单元并在其下方插入一个新单元。你可以使用菜单，或者进入命令模式（使用*Esc*键），然后使用快捷键 *B*。
- en: 'We now want to convert the new cell type to Markdown. There are three ways
    to do that. Start by clicking on the cell to select it, and then perform one of
    the following steps:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在想将新的单元格类型转换为Markdown。有三种方法可以做到这一点。首先点击选中单元格，然后执行以下步骤之一：
- en: Click on the notebook menu item **Cell**, select **Cell Type**, and then click
    on **Markdown** as shown in the following screenshot
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击笔记本菜单项**单元格**，选择**单元格类型**，然后点击**Markdown**，如下图所示。
- en: Select **Markdown** from the drop-down box on the notebook's toolbar
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从笔记本工具栏的下拉框中选择**Markdown**。
- en: Go to the Command mode by pressing *Esc* and then press *M*
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按*Esc*进入命令模式，然后按*M*。
- en: '![Cell types](img/8341OS_02_03.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![单元类型](img/8341OS_02_03.jpg)'
- en: 'Notice that once the cell is converted to Markdown, it is automatically in
    the Edit mode. Now, enter the following in the new Markdown cell (be careful to
    leave an extra blank line where indicated):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一旦单元转换为Markdown，它会自动进入编辑模式。现在，在新的Markdown单元中输入以下内容（小心在指示的地方留出额外的空行）：
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After the text is entered, press *Shift* + *Enter* to execute the cell. Instead
    of using the IPython interpreter to evaluate the cell, the notebook runs it through
    the Markdown interpreter and the cell is rendered using HTML, producing the output
    displayed in the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 输入文本后，按*Shift* + *Enter*执行该单元。笔记本将通过Markdown解释器而不是IPython解释器来运行该单元，单元会通过HTML呈现，产生以下截图中显示的输出：
- en: '![Cell types](img/8341OS_02_04.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![单元类型](img/8341OS_02_04.jpg)'
- en: 'In this example, we use the following Markdown features:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们使用了以下Markdown功能：
- en: Text is entered normally and a new paragraph is indicated by letting an extra
    blank line within the text.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本通常输入，并且通过在文本中留出额外的空行来指示新段落。
- en: Italics are indicated by enclosing the text between asterisks, as in `*compound
    interest*`.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 斜体通过将文本包裹在星号之间表示，如 `*复利*`。
- en: Formulae enclosed in double dollar (`$$`) signs, as in `$$R = Pe^{rt}$$`, are
    displayed centered in the page.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用双美元符号（`$$`）包围的公式，如 `$$R = Pe^{rt}$$`，会居中显示在页面上。
- en: An unordered list is indicated by lines starting with a dash (`-`). It is important
    to leave blank lines before and after the list.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无序列表通过以破折号（`-`）开头的行表示。重要的是，在列表前后留出空行。
- en: A single dollar (`$`) sign causes the formula to be typeset inline.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个美元符号（`$`）会导致公式内联排版。
- en: 'Hyperlinks are specified in the following format: `[corresponding Wikipedia
    entry]( http://en.wikipedia.org/wiki/Compound_interest)`.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超链接的格式如下：[对应的维基百科条目]( http://en.wikipedia.org/wiki/Compound_interest)。
- en: In a Markdown cell, mathematical formulae can be entered in **LaTeX**, which
    is an extensive language for technical typesetting that is beyond the scope of
    this book. Fortunately, we don't need to use the full-fledged formatting capabilities
    of LaTeX, but only the formula-editing features. A good quick introduction to
    LaTeX can be found at [http://en.wikibooks.org/wiki/LaTeX/Mathematics](http://en.wikibooks.org/wiki/LaTeX/Mathematics).
    Learning a bit of LaTeX is very useful, since it is also used in other Python
    libraries. For instance, `matplotlib` allows LaTeX to be used in plot titles and
    axis labels. In the notebook, LaTeX is rendered by MathJax, a LaTeX interpreter
    implemented in JavaScript by Davide Cervone. Visit [http://www.mathjax.org/](http://www.mathjax.org/)
    for details.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Markdown 单元格中，数学公式可以使用**LaTeX**输入，LaTeX 是一种广泛用于技术排版的语言，超出了本书的范围。幸运的是，我们不需要使用
    LaTeX 的完整排版功能，而只需使用其公式编辑功能。可以在[http://en.wikibooks.org/wiki/LaTeX/Mathematics](http://en.wikibooks.org/wiki/LaTeX/Mathematics)找到
    LaTeX 的简明入门教程。学习一些 LaTeX 是非常有用的，因为它也被用于其他 Python 库。例如，`matplotlib` 允许在图表标题和坐标轴标签中使用
    LaTeX。在笔记本中，LaTeX 由 MathJax 渲染，MathJax 是一个由 Davide Cervone 用 JavaScript 实现的 LaTeX
    解释器。详细信息请访问 [http://www.mathjax.org/](http://www.mathjax.org/)。
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To edit the contents of a Markdown cell once it has been displayed, simply double-click
    on the cell. After the edits are done, run the cell using *Shift* + *Enter* to
    render it again.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要编辑已经显示的 Markdown 单元格的内容，只需双击该单元格。编辑完成后，使用 *Shift* + *Enter* 运行该单元格以重新渲染它。
- en: 'To add structure to the notebook, we can add headings of different sizes. Let''s
    add a global heading to our notebook:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给笔记本添加结构，我们可以添加不同大小的标题。让我们为我们的笔记本添加一个全局标题：
- en: 'Add a new cell at the very top of the notebook and change its type to **Heading
    1**. Recall that there are three alternatives to do this:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在笔记本的最顶部添加一个新单元格，并将其类型更改为 **标题 1**。回想一下，有三种方法可以做到这一点：
- en: By navigating to **Cell** | **Cell Type**
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过导航到 **单元格** | **单元格类型**
- en: Using the **Cell Type** dropdown on the toolbar
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用工具栏上的 **单元格类型** 下拉菜单
- en: Using the keyboard shortcut *1* in the Command mode
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令模式下使用快捷键 *1*
- en: Enter a title for the notebook and run the cell using *Shift* + *Enter*.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为笔记本输入一个标题，并使用 *Shift* + *Enter* 运行该单元格。
- en: The notebook supports six heading sizes, from **Heading 1** (the largest) to
    **Heading 6** (the smallest).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 该笔记本支持六种标题大小，从**标题 1**（最大）到**标题 6**（最小）。
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Markdown language also allows the insertion of headings, using the hash
    (`#`) symbol. Even though this saves typing, we recommend the use of the Heading
    1 to Heading 6 cells. Having the headings in separate cells keeps the structure
    of the notebook when it is saved. This structure is used by the `nbconvert` utility.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown 语言还允许插入标题，使用井号（`#`）符号。尽管这种方式可以节省输入，但我们建议使用标题 1 到标题 6 单元格。将标题放在单独的单元格中可以保持笔记本的结构，尤其是在保存时。这个结构会被
    `nbconvert` 工具使用。
- en: 'The following table summarizes the types of cells we considered so far:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格总结了我们目前考虑过的单元格类型：
- en: '| Cell type | Command mode shortcuts | Use |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| 单元格类型 | 命令模式快捷键 | 用途 |'
- en: '| --- | --- | --- |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Code | *Y* | This allows you to edit and write new code to the IPython interpreter.
    The Default language is Python. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 代码 | *Y* | 这允许你编辑并写入新代码到 IPython 解释器。默认语言是 Python。 |'
- en: '| Markdown | *M* | This allows you to write an explanatory text. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| Markdown | *M* | 这允许你编写解释性文本。 |'
- en: '| Heading 1 to Heading 6 | Keys *1* to *6* | This allows you to structure the
    document |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 标题 1 到 标题 6 | 键位 *1* 到 *6* | 这允许你对文档进行结构化 |'
- en: '| Raw NBConvert | *R* | The content of this cell remains unmodified when the
    notebook is converted to a different format |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| Raw NBConvert | *R* | 当笔记本转换为其他格式时，该单元格的内容保持不变 |'
- en: IPython magics
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IPython 魔法命令
- en: 'Magics are special instructions to the IPython interpreter that perform specialized
    actions. There are two types of magics:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 魔法是 IPython 解释器的特殊指令，用于执行特定的操作。魔法有两种类型：
- en: '**Line-oriented**: This type of magics start with a single percent (`%`) sign'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面向行的**：这种类型的魔法以一个百分号（`%`）开头。'
- en: '**Cell-oriented**: This type of magics start with double percent (`%%`) signs'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面向单元格的**：这种类型的魔法以两个百分号（`%%`）开头。'
- en: 'We are already familiar with one of the magic command, that is, `%pylab inline`.
    This particular magic does two of the following things: it imports `NumPy` and
    `matplotlib`, and sets up the notebook for inline plots. To see one of the other
    options, change the cell to `%pylab`.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经熟悉其中一个魔法命令，即 `%pylab inline`。这个特定的魔法执行了以下两件事：它导入了 `NumPy` 和 `matplotlib`，并将笔记本设置为内联图表。要查看其他选项，将单元格更改为
    `%pylab`。
- en: 'Run this cell and then run the cell that produces the plot again. Instead of
    drawing the graph inline, IPython will now open a new window with the plot as
    shown in the following screenshot:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这个单元格，然后再运行生成图表的单元格。IPython 不再直接在内联中绘制图形，而是会打开一个新窗口，显示如下截图中的图表：
- en: '![IPython magics](img/8341OS_02_05.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![IPython 魔法](img/8341OS_02_05.jpg)'
- en: This window is interactive and you can resize the graph, move it, and save it
    to a file from here.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这个窗口是交互式的，你可以调整图表的大小、移动它，并从这里保存到文件。
- en: 'Another useful magic is `%timeit`, which records the time it takes to run a
    line of Python code. Run the following code in a new cell in the notebook:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的魔法是 `%timeit`，它记录运行一行 Python 代码所花费的时间。在一个新的单元格中运行以下代码：
- en: '[PRE9]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output will be something like this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是如下所示：
- en: '[PRE10]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: To obtain a better estimate, the command is run 10,000 times and the runtime
    is averaged. This is done three times and the best result is reported.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得更精确的估算，命令会运行 10,000 次，并计算平均运行时间。这会进行三次，并报告最好的结果。
- en: 'The `%timeit` magic is also available in the Edit mode. To demonstrate this,
    run the following command in a cell:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`%timeit` 魔法在编辑模式下也可以使用。为了演示这一点，运行以下命令：'
- en: '[PRE11]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the next cell, run the following command:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个单元格中，运行以下命令：
- en: '[PRE12]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The preceding code computes a list with the returns for 100,000 different values
    of the interest rate, but uses plain Python code only. The reported time for this
    code is displayed in the following output:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码计算了 100,000 个不同利率值的返回值列表，但仅使用了普通的 Python 代码。该代码的运行时间将在以下输出中显示：
- en: '[PRE13]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Let''s now rewrite the same computation using `NumPy` arrays. Run the following
    command in a cell:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `NumPy` 数组重写相同的计算。运行以下命令：
- en: '[PRE14]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In the next cell, run the following command:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个单元格中，运行以下命令：
- en: '[PRE15]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now, the runtime is displayed in the following output:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行时将在以下输出中显示：
- en: '[PRE16]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: When comparing the two outputs, we can see the speed gain obtained using `NumPy`.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 比较这两个输出后，我们可以看到使用 `NumPy` 获得的速度提升。
- en: 'To list all magics that are available, run the following command in a cell:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有可用的魔法，运行以下命令：
- en: '[PRE17]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once you have the list of all magics, you can inquire about a particular one
    by running a cell with the magic name appended by a question mark: `%pylab?`.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你拥有了所有魔法的列表，你可以通过运行一个带有魔法名称后加问号的单元格来查询特定的魔法：`%pylab?`。
- en: This will display the information about the `%pylab` magic in a separate window
    at the bottom of the browser.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把有关 `%pylab` 魔法的信息显示在浏览器底部的一个单独窗口中。
- en: 'Another interesting feature is the capability to run code that is written in
    other languages. Just to illustrate the possibilities, we''ll see how to accelerate
    the code using Cython, because Cython compiles Python code into C. Let''s write
    a function that computes approximations of areas bounded by a sine curve. Here
    is how we could define the function in pure Python:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的功能是能够运行用其他语言编写的代码。为了说明这些可能性，我们将展示如何使用 Cython 加速代码，因为 Cython 可以将 Python
    代码编译成 C 代码。让我们编写一个函数，计算由正弦曲线所围成的区域的近似值。下面是如何在纯 Python 中定义这个函数：
- en: '[PRE18]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We will approximate the area by taking the average of the left and right endpoint
    rules (which is equivalent to the Trapezoidal rule). The code is admittedly inefficient
    and unpythonic. Notice in particular that we use the Python library version of
    the `sin()` function, instead of the `NumPy` implementation. The `NumPy` implementation,
    in this case, actually yields a slower code due to the repeated conversions between
    lists and arrays.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过取左端点法和右端点法的平均值来近似计算面积（这等同于梯形法则）。代码确实效率低下且不符合 Python 风格。特别要注意的是，我们使用的是 Python
    库版本的 `sin()` 函数，而不是 `NumPy` 的实现。在这个例子中，`NumPy` 的实现实际上会导致更慢的代码，因为在列表和数组之间的转换频繁发生。
- en: 'To run a simple test, execute the following command in a cell:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行一个简单的测试，在单元格中执行以下命令：
- en: '[PRE19]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We get the following output after running the preceding cell:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前面的单元格后，我们得到了以下输出：
- en: '[PRE20]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The output makes sense, since the actual value of the area is 2\. Let''s now
    time the execution using the following command:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是合理的，因为面积的实际值是 2。现在，我们来使用以下命令计算执行时间：
- en: '[PRE21]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We will get the following output:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '[PRE22]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Let''s now implement the same function in Cython. Since the Cython magic is
    in an extension module, we need to load that module first. We will load the extension
    module using the following command:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来用 Cython 实现相同的功能。由于 Cython 魔法是通过扩展模块实现的，我们需要先加载这个模块。我们将使用以下命令加载扩展模块：
- en: '[PRE23]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we will define the Cython function. We will not discuss the syntax in
    detail, but notice that it is pretty similar to Python (the main difference in
    this example is that we must declare the variables to specify their C type):'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将定义 Cython 函数。我们不会详细讨论语法，但请注意，它与 Python 非常相似（在这个例子中，主要的区别是我们必须声明变量以指定它们的
    C 类型）：
- en: '[PRE24]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Test the preceding function using the following command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令测试前面的函数：
- en: '[PRE25]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'After running the preceding function, we get the same output as earlier:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前面的函数后，我们得到的输出与之前相同：
- en: '[PRE26]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Let''s now time the function using the following command:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们来使用以下命令计算该函数的执行时间：
- en: '[PRE27]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The runtime is displayed in the following output:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 运行时显示在以下输出中：
- en: '[PRE28]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We see that the Cython code runs in about 30 percent of the total time taken
    by the Python code. It is important to emphasize that this is not the recommended
    way to speed up this code. A simpler solution would be to use `NumPy` to vectorize
    the computation:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到 Cython 代码的执行时间大约是 Python 代码总时间的 30%。需要强调的是，这不是加速这段代码的推荐方法。一种更简单的解决方案是使用
    `NumPy` 来矢量化计算：
- en: '[PRE29]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The time after running the preceding code is displayed in the following output:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前面的代码后，以下输出显示了时间：
- en: '[PRE30]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: There is a lesson here; when we try to speed up the code, the first thing to
    try is to always write it using `NumPy` arrays, taking the advantage of vectorized
    functions. If further speedups are needed, we can use specialized libraries such
    as **Numba** and **NumbaPro** (which will be discussed later in this book) to
    accelerate the code. In fact, these libraries provide a simpler approach to compile
    the code into C than using Cython directly.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个经验教训：当我们试图加速代码时，首先要尝试的是总是使用 `NumPy` 数组编写代码，利用矢量化函数的优势。如果需要进一步加速，我们可以使用像
    **Numba** 和 **NumbaPro**（本书后面会讨论）这样的专用库来加速代码。事实上，这些库提供了一种比直接使用 Cython 更简单的将代码编译为
    C 的方法。
- en: Interacting with the operating system
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与操作系统交互
- en: Any code with some degree of complexity will interact with the computer's operating
    system when files must be opened and closed, scripts must be run, or online data
    must be accessed. Plain Python already has a lot of tools to access these facilities,
    and IPython and the notebook add another level of functionality and convenience.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 任何具有一定复杂性的代码，在必须打开和关闭文件、运行脚本或访问在线数据时，都会与计算机的操作系统交互。普通的 Python 已经有很多工具可以访问这些功能，而
    IPython 和笔记本则提供了更多的功能和便利性。
- en: Saving the notebook
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存笔记本
- en: 'The notebook is autosaved in periodic intervals. The default interval is 2
    minutes, but this can be changed in the configuration files or using the `%autosave`
    magic. For example, to change the autosave interval to 5 minutes, run the following
    command:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本会定期自动保存。默认的间隔时间是 2 分钟，但可以在配置文件中修改或使用 `%autosave` 魔法进行更改。例如，要将自动保存间隔改为 5 分钟，可以运行以下命令：
- en: '[PRE31]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Notice that the time is entered in seconds. To disable the autosave feature,
    run the following command:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，时间单位为秒。要禁用自动保存功能，运行以下命令：
- en: '[PRE32]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: We can also save the notebook using the **File** menu or by clicking on the
    disk icon on the toolbar. This creates a **checkpoint**. Checkpoints are stored
    in a hidden folder and can be restored from the **File** menu. Notice that only
    the latest checkpoint is made available.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用**File**菜单或点击工具栏上的磁盘图标来保存笔记本。这将创建一个**检查点**。检查点存储在一个隐藏文件夹中，可以通过**File**菜单恢复。请注意，只有最新的检查点会被提供。
- en: 'Notebooks are saved as plain text files with the `.ipynb` extension, using
    JSON. JSON is a format widely used for information exchange in web applications,
    and is documented in [http://www.json.org/](http://www.json.org/). This makes
    it easy to exchange notebooks with other people: simply give them the `.ipynb`
    file, and it can then be copied to the appropriate working directory. The next
    time the notebook server is opened in that directory, the new notebook will be
    available (or the directory list can be refreshed from the dashboard). Also, since
    JSON is in a plain text format, it can be easily versioned.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本以`.ipynb`扩展名保存为纯文本文件，使用JSON格式。JSON是一种广泛用于Web应用程序信息交换的格式，相关文档可以参考[http://www.json.org/](http://www.json.org/)。这使得与他人交换笔记本变得非常简单：只需将`.ipynb`文件给他们，他们就可以将其复制到适当的工作目录中。下次在该目录中打开笔记本服务器时，新笔记本将可用（或者可以从仪表板刷新目录列表）。此外，由于JSON是纯文本格式，它也可以轻松进行版本管理。
- en: Converting the notebook to other formats
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将笔记本转换为其他格式
- en: Notebooks can be converted to other formats using the `nbconvert` utility. This
    is a command-line utility. So, to use it, open a terminal window in the directory
    that contains your notebook files.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本可以使用`nbconvert`工具转换为其他格式。该工具是一个命令行工具。因此，要使用它，请在包含笔记本文件的目录中打开终端窗口。
- en: Tip
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Windows users can press *Shift* and right-click on the name of the directory
    that contains the notebook files and then select **Open command window here**.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Windows用户可以按*Shift*键并右键单击包含笔记本文件的目录名称，然后选择**在此处打开命令窗口**。
- en: 'Open a shell window and enter the following line:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个shell窗口并输入以下命令：
- en: '[PRE33]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: You must, of course, replace `Chapter 2.ipynb` with the name of the file that
    contains your notebook. The file name must be enclosed by quotes.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你必须将`Chapter 2.ipynb`替换为包含你的笔记本的文件名。文件名必须用引号括起来。
- en: The preceding command will convert the notebook to a static HTML page that can
    be directly placed in a web server.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将把笔记本转换为静态HTML页面，可以直接放置在Web服务器上。
- en: Note
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: An alternative way to publish notebooks on the Web is to use the site [http://nbviewer.ipython.org/](http://nbviewer.ipython.org/).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种在Web上发布笔记本的方法是使用网站[http://nbviewer.ipython.org/](http://nbviewer.ipython.org/)。
- en: 'It is also possible to create a slideshow with `nbconvert` using the following
    command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用以下命令，通过`nbconvert`创建幻灯片放映：
- en: '[PRE34]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: However, to get a decent presentation, we must first specify its structure in
    the notebook. To do so, go to the notebook and select **Slide show** on the **Cell**
    toolbar drop-down list. Then, determine for each cell if it should be a slide,
    a sub-slide, or a fragment.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了获得良好的展示效果，我们必须首先在笔记本中指定其结构。为此，请进入笔记本并在**Cell**工具栏下拉列表中选择**幻灯片放映**。然后，确定每个单元格是否应该是幻灯片、子幻灯片或片段。
- en: To view the slide show, you need to install the `reveal.js` file in the same
    directory as the web page containing the presentation. You can download this file
    from [https://github.com/hakimel/reveal.js](https://github.com/hakimel/reveal.js).
    If necessary, rename the directory that contains all the files to `reveal.js`.
    We are then ready to open the HTML file that contains the presentation.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看幻灯片放映，需要将`reveal.js`文件安装到与包含展示文档的网页相同的目录中。你可以从[https://github.com/hakimel/reveal.js](https://github.com/hakimel/reveal.js)下载该文件。如有必要，将包含所有文件的目录重命名为`reveal.js`。然后，我们就可以打开包含展示内容的HTML文件。
- en: It is also possible to convert notebooks to LaTeX and PDF. However, this requires
    the installation of packages not included in Anaconda.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以将笔记本转换为LaTeX和PDF格式。但是，这需要安装一些Anaconda中没有包含的包。
- en: Running shell commands
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行shell命令
- en: 'We can run any shell command from the notebook by starting a cell with an exclamation
    (`!`) mark. For example, to obtain a directory listing in Windows, run the following
    command in a cell:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在单元格前加上感叹号（`!`）来运行任何shell命令。例如，要在Windows中获取目录列表，可以在单元格中运行以下命令：
- en: '[PRE35]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The equivalent command in Linux or OS X is the following:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux或OS X中的等效命令如下：
- en: '[PRE36]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'You can enter command lines of any complexity in the cell. For example, the
    following line would compile the famous "Hello, world!" program every student
    of C has to try:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在单元格中输入任何复杂的命令行。例如，以下命令将编译每个C语言学生都要尝试的经典"Hello, world!"程序：
- en: '[PRE37]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Of course, this will not run correctly in your computer unless you have the
    C compiler, `cc`, installed and the `hello.c` file with the proper code.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，除非你安装了C编译器`cc`并且有适当代码的`hello.c`文件，否则在你的电脑上运行时不会正常工作。
- en: 'Instead of using shell commands directly, a lot of the same functionality is
    provided by magic commands. For example, a directory listing (in any operating
    system) is obtained by running the following command:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 代替直接使用Shell命令，许多相同的功能可以通过魔法命令实现。例如，获取目录列表（在任何操作系统中）可以通过运行以下命令：
- en: '[PRE38]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The following table shows a list of some of the most commonly used magics to
    interact with the system:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格展示了一些常用的魔法命令，用于与系统交互：
- en: '| Magic | Purpose |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| Magic | 用途 |'
- en: '| --- | --- |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `%cd` | Changes the directory |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| `%cd` | 更改目录 |'
- en: '| `%pwd` | Prints the current directory |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| `%pwd` | 打印当前目录 |'
- en: '| `%ls` | Lists the current directory contents |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| `%ls` | 列出当前目录的内容 |'
- en: '| `%mkdir` | Creates a new directory |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| `%mkdir` | 创建一个新目录 |'
- en: '| `%rmdir` | Removes a directory |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| `%rmdir` | 删除目录 |'
- en: '| `%echo` | Prints a string |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| `%echo` | 打印字符串 |'
- en: '| `%alias` | Creates an alias |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| `%alias` | 创建别名 |'
- en: 'The `%echo` magic is frequently used to print values of environment variables.
    For example, to print the contents of the `PATH` environment variable in Windows,
    run the following command:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`%echo`魔法命令常用于打印环境变量的值。例如，要打印Windows中`PATH`环境变量的内容，可以运行以下命令：'
- en: '[PRE39]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'In Linux or OS X, use the following command:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux或OS X中，使用以下命令：
- en: '[PRE40]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The `%alias` magic creates an alias for frequently used commands. For example,
    to define a macro that displays the `PATH` value in Windows, execute the following
    command:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`%alias`魔法命令可以为常用命令创建别名。例如，要定义一个显示Windows中`PATH`值的宏，可以执行以下命令：'
- en: '[PRE41]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'In Linux or OS X, use the following command:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux或OS X中，使用以下命令：
- en: '[PRE42]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'After the preceding command is defined, we can run the following command to
    display the path:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义了前面的命令后，我们可以运行以下命令来显示路径：
- en: '[PRE43]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'To make entering commands even easier, a feature called **automagic** allows
    line-oriented magics to be entered without the `%` symbol (as shown in the preceding
    command). For example, to create a directory, we can simply enter the following
    command:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让输入命令更加便捷，名为**automagic**的功能允许直接输入面向行的魔法命令，而无需使用`%`符号（如前面所示的命令）。例如，要创建一个目录，我们可以直接输入以下命令：
- en: '[PRE44]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'If we change our mind, we can remove the directory using the following command:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们改变主意，可以使用以下命令删除该目录：
- en: '[PRE45]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The automagic feature is controlled by the `%automagic` magic. For example,
    use the following command to turn automagic off:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: automagic功能由`%automagic`魔法控制。例如，使用以下命令关闭automagic：
- en: '[PRE46]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Running scripts, loading data, and saving data
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行脚本、加载数据和保存数据
- en: When working with projects of some complexity, it is common to have the need
    to run scripts written by others. It is also always necessary to load data and
    save results. In this section, we will describe the facilities that IPython provides
    for these tasks.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理一些复杂项目时，通常需要运行其他人编写的脚本。加载数据和保存结果也是必不可少的。在本节中，我们将描述IPython为这些任务提供的功能。
- en: Running Python scripts
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行Python脚本
- en: 'The following Python script generates a plot of a solution of the Lorenz equations,
    a famous example in the theory of chaos. If you are typing the code, do not type
    it in a cell in the notebook. Instead, use a text editor and save the file with
    the name `lorenz.py` in the same directory that contains the notebook file. The
    code is as follows:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python脚本生成一个洛伦兹方程解的图形，这是混沌理论中的一个著名例子。如果你正在输入代码，请不要在笔记本的单元格中输入，而是使用文本编辑器，将文件保存为`lorenz.py`，并放在包含笔记本文件的同一目录中。代码如下：
- en: '[PRE47]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, go to the notebook and run a cell using the following command:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，转到笔记本并使用以下命令运行一个单元格：
- en: '[PRE48]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'This will run the script and produce a plot of the solution, as shown in the
    following figure:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这将运行脚本并生成解的图形，如下图所示：
- en: '![Running Python scripts](img/8341OS_02_06.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![运行Python脚本](img/8341OS_02_06.jpg)'
- en: The `%run` magic executes the script in the notebook's namespace so that all
    global variables, functions, and classes defined in the script are made available
    in the current notebook.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`%run`魔法命令在笔记本的命名空间中执行脚本，因此脚本中定义的所有全局变量、函数和类都会在当前笔记本中可用。'
- en: 'It is also possible to use the `%load` magic for the same purpose:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用 `%load` 魔法来实现相同的目的：
- en: '[PRE49]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: The difference is that `%load` does not immediately run the script, but places
    its code in a cell. It can then be run from the cell it was inserted in. A slightly
    annoying behavior of the `%load` magic is that it inserts a new cell with the
    script code even if there already is one from a previous use of `%load`. The notebook
    has no way of knowing if the user wants to overwrite the code in the existing
    cell, so this is the safest behavior. However, unwanted code must be deleted manually.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 不同之处在于，`%load` 不会立即运行脚本，而是将其代码放入一个单元格中。然后可以从插入的单元格中运行该代码。`%load` 魔法的一个稍显恼人的行为是，即使之前已经使用
    `%load` 插入了一个单元格，它仍会插入一个包含脚本代码的新单元格。笔记本无法知道用户是否希望覆盖现有单元格中的代码，因此这是最安全的行为。然而，不需要的代码必须手动删除。
- en: 'The `%load` magic also allows code to be loaded directly from the web by providing
    a URL as input:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`%load` 魔法还允许通过提供 URL 作为输入直接从网上加载代码：'
- en: '[PRE50]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: This will load the code for a box plot example from the matplotlib site to a
    cell. To display the image, the script must be run in the cell.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 这将从 matplotlib 网站加载一个箱线图示例的代码到一个单元格中。要显示图像，必须在该单元格中运行脚本。
- en: Running scripts in other languages
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行其他语言脚本
- en: 'We can also run scripts written in other languages directly in the notebook.
    The following table contains some of the supported languages:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以直接在笔记本中运行用其他语言编写的脚本。以下表格列出了一些支持的语言：
- en: '| Cell magic | Language |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| 单元魔法 | 语言 |'
- en: '| --- | --- |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `%%HTML` or `%%html` | HTML |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| `%%HTML` 或 `%%html` | HTML |'
- en: '| `%%SVG` or `%%svg` | **Scaled Vector Graphics Language** (**SVGL**) |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| `%%SVG` 或 `%%svg` | **缩放矢量图形语言**（**SVGL**） |'
- en: '| `%%bash` | The Bash scripting language, which is available in Unix-like systems
    such as Ubuntu and Mac OS X |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| `%%bash` | Bash 脚本语言，适用于类 Unix 系统，如 Ubuntu 和 Mac OS X |'
- en: '| `%%cmd` | MS Windows command-line language |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| `%%cmd` | MS Windows 命令行语言 |'
- en: '| `%%javascript` | JavaScript |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| `%%javascript` | JavaScript |'
- en: '| `%%latex` | LaTeX, the scientific-oriented document preparation language
    |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| `%%latex` | LaTeX，面向科学的文档准备语言 |'
- en: '| `%%perl` | The PERL scripting language |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| `%%perl` | PERL 脚本语言 |'
- en: '| `%%powershell` | The MS Windows PowerShell language |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| `%%powershell` | MS Windows PowerShell 语言 |'
- en: '| `%%python2` or `%%python3` | Run a script written in a version of Python
    different than the one the notebook is running |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| `%%python2` 或 `%%python3` | 运行一个与笔记本运行的 Python 版本不同的脚本 |'
- en: '| `%%ruby` | The Ruby scripting language |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| `%%ruby` | Ruby 脚本语言 |'
- en: 'Now, let''s see some examples of scripts in some of these languages. Run the
    following code in a cell:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一些这些语言的脚本示例。在一个单元格中运行以下代码：
- en: '[PRE51]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: This displays a graphic composition with basic shapes, described using SVG.
    SVG is an HTML standard, so this code will run in modern browsers that support
    the standard.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示一个由基本形状组成的图形，使用 SVG 描述。SVG 是 HTML 标准，因此此代码将在支持该标准的现代浏览器中运行。
- en: 'To illustrate the use of JavaScript, let''s first define (in a computation
    cell) an HTML element that can be easily accessed:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示 JavaScript 的使用，让我们首先在一个计算单元中定义一个可以轻松访问的 HTML 元素：
- en: '[PRE52]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Run this cell. The message "Hello, world!" in the size `h1` is displayed. Then
    enter the following commands in another cell:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此单元格。大小为 `h1` 的 "Hello, world!" 消息将被显示。然后在另一个单元格中输入以下命令：
- en: '[PRE53]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: When the second cell is run, the color of the text of the "Hello, world!" message
    changes from black to blue.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 当第二个单元格运行时，"Hello, world!" 消息的文本颜色会从黑色变为蓝色。
- en: 'The notebook can actually run any scripting language that is installed in your
    system. This is done using the `%%script` cell magic. As an example, let''s run
    some code in the **Julia** scripting language. Julia is a new language for technical
    computing and can be downloaded from [http://julialang.org/](http://julialang.org/).
    The following example assumes that Julia is installed and can be accessed with
    the `julia` command (this requires that the executable for the language interpreter
    is in the operating system''s path). Enter the following code in a cell and run
    it:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 该笔记本实际上可以运行系统中已安装的任何脚本语言。这是通过使用 `%%script` 单元魔法实现的。举个例子，让我们运行一些 **Julia** 脚本语言的代码。Julia
    是一种新的技术计算语言，可以从 [http://julialang.org/](http://julialang.org/) 下载。以下示例假设已安装 Julia，并且可以通过
    `julia` 命令访问（这需要语言解释器的可执行文件在操作系统的路径中）。在一个单元格中输入以下代码并运行：
- en: '[PRE54]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'The preceding code defines a function (written in `julia`) that computes the
    factorial of an integer, and then prints the factorial of 10\. The following output
    is produced:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码定义了一个函数（用`julia`编写），该函数计算一个整数的阶乘，并打印出10的阶乘。以下是输出结果：
- en: '[PRE55]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: The first line is a message from the `julia` interpreter and the second is the
    factorial of 10.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行是来自`julia`解释器的消息，第二行是10的阶乘。
- en: Loading and saving data
  id: totrans-292
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据的加载和保存
- en: The manner in which data is loaded or saved is dependent on both the nature
    of the data and the format expected by the application that is using the data.
    Since it's impossible to account for all combinations of data structure and application,
    we will only cover the most basic methods of loading and saving data using `NumPy`
    in this section. The recommended way to load and save structured data in Python
    is to use specialized libraries that have been optimized for each particular data
    type. When working with tabular data, for example, we can use **pandas**, as described
    in [Chapter 4](ch04.html "Chapter 4. Handling Data with pandas"), *Handling Data
    with pandas*.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的加载或保存方式取决于数据的性质以及使用数据的应用程序所期望的格式。由于无法涵盖所有数据结构和应用程序的组合，本节将仅介绍使用`NumPy`加载和保存数据的最基本方法。Python中推荐的加载和保存结构化数据的方式是使用针对每种特定数据类型优化的专业库。例如，在处理表格数据时，我们可以使用**pandas**，正如在[第4章](ch04.html
    "第4章. 使用pandas处理数据")中所描述的，*使用pandas处理数据*。
- en: 'A single array can be saved with a call to the `save()` function of `NumPy`.
    Here is an example:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过调用`NumPy`的`save()`函数来保存单个数组。以下是一个示例：
- en: '[PRE56]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'This code generates an array of random values with five rows and 10 columns,
    prints it, and then saves it to a file named `random_array.npy`. The `.npy` format
    is specific for `NumPy` arrays. Let''s now delete the variable containing the
    array using the following command:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码生成一个包含五行十列的随机值数组，打印出来，并将其保存到名为`random_array.npy`的文件中。`.npy`格式是专门用于`NumPy`数组的。现在，让我们使用以下命令删除包含该数组的变量：
- en: '[PRE57]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Running a cell with the preceding commands will produce an error, since we
    request the variable `A` to be displayed after it has been deleted. To restore
    the array, run the following command in a cell:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 运行包含上述命令的单元格会产生一个错误，因为我们请求显示变量`A`时，它已经被删除。要恢复该数组，请在一个单元格中运行以下命令：
- en: '[PRE58]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'It is also possible to save several arrays to a single compressed file, as
    shown in the following example:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以将多个数组保存到一个压缩文件中，下面是一个示例：
- en: '[PRE59]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Notice how keyword arguments are given to specify names for the saved arrays
    in disk. The arrays are now saved to a file in the `.npz` format. The data can
    be recovered from disk using the `load()` function, which can read files in both
    formats used by `NumPy`:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 注意如何使用关键字参数来指定保存到磁盘的数组的名称。这些数组现在已经以`.npz`格式保存到文件中。可以使用`load()`函数从磁盘恢复数据，该函数能够读取`NumPy`使用的两种格式的文件：
- en: '[PRE60]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'If the file passed to `load()` is of the `.npz` type, the returned value is
    an object of the `NpzFile` type. This object does not read the data immediately.
    Reading is delayed to the point where the data is required. To figure out which
    arrays are stored in the file, execute the following command in a cell:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递给`load()`的文件是`.npz`类型，那么返回值是一个`NpzFile`类型的对象。这个对象不会立即读取数据。数据读取会延迟，直到需要使用数据时为止。要查看文件中存储了哪些数组，请在一个单元格中执行以下命令：
- en: '[PRE61]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'In our example, the preceding command produces the following output:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，上述命令会产生以下输出：
- en: '[PRE62]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'To assign the arrays to variables, use the Python dictionary access notation
    as follows:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 要将数组分配给变量，请使用Python字典访问符号，方法如下：
- en: '[PRE63]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The preceding code produces the plot of half of a parabola:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码生成了半个抛物线的图像：
- en: '![Loading and saving data](img/8341OS_02_07.jpg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![数据加载与保存](img/8341OS_02_07.jpg)'
- en: The rich display system
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 丰富的显示系统
- en: In an exciting development, recent versions of IPython include the capability
    to display images, video, sound, and other media directly in the notebook. The
    classes that support the display system are in the `IPython.display` module. In
    this section, we will discuss some of the supported formats.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个令人兴奋的发展中，IPython的最新版本包括了在笔记本中直接显示图像、视频、声音和其他媒体的功能。支持显示系统的类位于`IPython.display`模块中。在本节中，我们将讨论一些支持的格式。
- en: Images and YouTube videos
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图片和YouTube视频
- en: 'Images can be loaded either from the local filesystem or from the web. To display
    the image contained in the `character.png` file, for example, run the following
    command in a cell:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 图像可以从本地文件系统或网络加载。例如，要显示 `character.png` 文件中的图像，可以在单元格中运行以下命令：
- en: '[PRE64]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'It is also possible to store the image in a variable to be displayed at a later
    time:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以将图像存储在变量中，以便稍后显示：
- en: '[PRE65]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: The `character.png` file can be downloaded from the web page of this book.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '`character.png` 文件可以从本书的网页下载。'
- en: 'To display the image, we can use either `img` or `display(img)`. The following
    image is displayed:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示图像，我们可以使用 `img` 或 `display(img)`。下面的图像会被显示：
- en: '![Images and YouTube videos](img/8341OS_02_08.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![图片和 YouTube 视频](img/8341OS_02_08.jpg)'
- en: 'To load an image from the Web, simply give its URL as an argument:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 要从网络加载图像，只需将其 URL 作为参数提供：
- en: '[PRE66]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The preceding command line loads the image of a flower:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令行加载了一张花朵的图像：
- en: '![Images and YouTube videos](img/8341OS_02_09.jpg)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![图片和 YouTube 视频](img/8341OS_02_09.jpg)'
- en: 'By default, images are embedded in the notebook so that they can be viewed
    offline. To insert a link to the image, use the following command:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，图像被嵌入在笔记本中，以便可以离线查看。要插入指向图像的链接，请使用以下命令：
- en: '[PRE67]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: The image will be displayed as shown in the preceding example, but this time
    only a link to the image is inserted in the notebook. This results in a smaller
    size for the notebook file, but there is a caveat! If the image is changed online,
    the change will be reflected in the notebook.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 图像将像前面的示例那样显示，但这次只会在笔记本中插入指向图像的链接。这会使笔记本文件的大小变小，但有一个警告！如果图像在网上发生变化，变化将会反映到笔记本中。
- en: 'It is also very easy to embed video directly from YouTube. The following code
    displays a beautiful animation of the Mandelbrot set:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以很容易地直接从 YouTube 嵌入视频。以下代码展示了曼德尔布罗集合的美丽动画：
- en: '[PRE68]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: HTML
  id: totrans-331
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML
- en: 'To finish this section, we present an extended example using IPython''s capability
    to display HTML. The goal of the example is to build and display an HTML table
    of mathematical curves. We start by generating the plots and saving them to disk:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这一部分，我们展示一个使用 IPython 显示 HTML 功能的扩展示例。这个例子的目标是构建并显示一个数学曲线的 HTML 表格。我们从生成图形并将其保存到磁盘开始：
- en: '[PRE69]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'The cell starts with the `%matplotlib` magic with no arguments, since we don''t
    want the graphics to be inserted online (they will still be generated in an external
    viewer). We then define the `fcts` list holding the curves we want to plot. Each
    curve is specified by a tuple with two elements: the name of a function and the
    actual object representing the function. Then, the plots are generated in a loop.
    The Python code here is somewhat more complex than what we have seen so far, and
    the `matplotlib` functions used will be explained in detail in the next chapter.
    For now, just notice the call at the end of the cell:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 该单元格从没有参数的 `%matplotlib` 魔法命令开始，因为我们不希望将图形嵌入在线（它们仍然会在外部查看器中生成）。接着，我们定义了包含我们要绘制的曲线的
    `fcts` 列表。每条曲线由一个包含两个元素的元组指定：一个是函数的名称，另一个是表示该函数的实际对象。然后，图表将在循环中生成。这里的 Python 代码比我们迄今为止看到的要复杂一些，`matplotlib`
    中使用的函数将在下一章中详细解释。现在，只需注意单元格结尾的调用：
- en: '[PRE70]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: The preceding command saves the figure file to the disk, using the `.png` format.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令将图形文件保存到磁盘，使用 `.png` 格式。
- en: 'Next, we generate the HTML to create the table and store it in the `html_string`
    variable as follows:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们生成 HTML 来创建表格，并将其存储在 `html_string` 变量中，如下所示：
- en: '[PRE71]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: The HTML code is generated one piece at a time. We start by adding the `<table>`
    element in the first line of the cell. Then, in the loop, we generate one row
    of the table per iteration. To make the code more readable, we add only one HTML
    element in each line of code.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 代码是逐步生成的。我们从在单元格的第一行添加 `<table>` 元素开始。然后，在循环中，每次迭代生成一行表格。为了使代码更易读，我们在每一行代码中只添加一个
    HTML 元素。
- en: 'We can then print the HTML we generated to check if it is correct:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以打印我们生成的 HTML 以检查它是否正确：
- en: '[PRE72]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The preceding command produces the following output:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令产生了以下输出：
- en: '[PRE73]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'This seems to be correct, so we are ready to render the HTML:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎是正确的，因此我们准备渲染 HTML：
- en: '[PRE74]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'If all is correct, the following table of curves will be displayed:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正确，以下曲线表格将会显示：
- en: '![HTML](img/8341OS_02_10.jpg)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
  zh: '![HTML](img/8341OS_02_10.jpg)'
- en: 'At the end of the example, don''t forget to run the following command to restore
    the inline graphics:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例结束时，不要忘记运行以下命令以恢复内联图形：
- en: '[PRE75]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: The IPython HTML display object is extremely powerful, as shown in the preceding
    example. HTML5-rich media, such as sound and video, can also be embedded; although,
    the support for all formats currently varies from browser to browser.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: IPython HTML显示对象功能非常强大，如前面的示例所示。HTML5丰富媒体，如声音和视频，也可以嵌入其中；不过，当前对所有格式的支持因浏览器而异。
- en: Summary
  id: totrans-351
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we went through a comprehensive tour of the IPython Notebook
    Interface. We covered features that are used daily when working with the notebook,
    such as navigation, magics, interacting with the operating system, running scripts,
    and loading and saving data. We finished with a discussion of how to display richly
    formatted data in the notebook.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们全面介绍了IPython Notebook界面。我们涵盖了日常使用的功能，如导航、魔法命令、与操作系统的交互、运行脚本以及加载和保存数据。最后，我们讨论了如何在笔记本中显示丰富格式的数据。
- en: In the next chapter, you will learn how to use the `matplotlib` library to produce
    presentation-quality scientific graphs and data displays, with an emphasis on
    interactive graphs.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，你将学习如何使用`matplotlib`库生成高质量的科学图表和数据展示，重点介绍交互式图表。
