- en: <st c="0">Preface</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">前言</st>
- en: <st c="8">In the second chapter of this book, we explore the concept of the
    “loop invariant,” which refers to an attribute within a changing process that
    remains constant.</st> <st c="171">If we look at human progress since the Industrial
    Revolution, despite the volatility and constant change, we can identify a few
    unchanging attributes.</st> <st c="322">One is our drive to automate more and
    more, and the other is our systematic approach to problem-solving, which took
    a formal direction with the invention of the digital computer.</st> <st c="501">This
    is what we now</st> <st c="521">call algorithms.</st>
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8">在本书的第二章中，我们探讨了“循环不变式”的概念，这指的是在一个变化的过程中保持不变的属性。</st> <st c="171">如果我们回顾自工业革命以来的人类进步，尽管有波动和不断变化，我们依然能够识别出一些不变的属性。</st>
    <st c="322">其中之一是我们推动自动化的动力，另一个是我们解决问题的系统化方法，这一方法随着数字计算机的发明而走向了正式化。</st> <st c="501">这就是我们现在</st>
    <st c="521">所称的算法。</st>
- en: <st c="537">This book is another contribution to the world of algorithms.</st>
    <st c="600">It’s not meant to replace the existing and remarkable works that I
    have enjoyed reading and teaching.</st> <st c="702">Instead, it offers an alternative
    approach to learning algorithms by merging theoretical concepts with practical
    applications.</st> <st c="829">It also represents the culmination of 30 years
    of experience in research, industry, and academia, particularly in computer science
    and artificial intelligence, as well as 12 years of continuous teaching of algorithms</st>
    <st c="1046">to students.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="537">本书是对算法领域的又一贡献。</st> <st c="600">它并不意味着取代那些我在阅读和教学中一直享受的现有杰出作品。</st>
    <st c="702">相反，它通过将理论概念与实际应用相结合，提供了一种学习算法的替代方法。</st> <st c="829">它还代表了我在研究、工业和学术界，特别是在计算机科学和人工智能领域，30年经验的积累，以及12年持续教授算法</st>
    <st c="1046">给学生的经验。</st>
- en: <st c="1058">If it were possible, I would add my students as co-authors, because
    I have learned more from their challenging questions than I could ever teach them.</st>
    <st c="1210">Their inquiries have pushed me to uncover the deeper explanations
    and logic behind every aspect of algorithms.</st> <st c="1321">Yes, I do mean
    every aspect.</st> <st c="1350">Algorithms are about making human-made machines
    function correctly and deliver the results we expect.</st> <st c="1452">Here,
    nothing short of a logical process and behavior</st> <st c="1506">is acceptable.</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1058">如果可能的话，我会把我的学生作为合著者，因为我从他们提出的挑战性问题中学到的东西，远超过我能教给他们的。</st> <st c="1210">他们的提问推动我去发现每个算法方面背后的更深层次的解释和逻辑。</st>
    <st c="1321">是的，我的确是指每一个方面。</st> <st c="1350">算法的目的是使人类制造的机器正确运行，并提供我们预期的结果。</st>
    <st c="1452">在这里，只有逻辑过程和行为</st> <st c="1506">是可以接受的。</st>
- en: <st c="1520">This book does not claim to cover every aspect or topic in the
    vast field of algorithms.</st> <st c="1610">Instead, it narrows its focus to the
    design and analysis of algorithms, seeking to address the essential questions
    we must always consider when evaluating them.</st> <st c="1771">First and foremost,
    can we prove that the algorithm functions correctly and as intended?</st> <st
    c="1860">It’s crucial to establish that the algorithm reliably produces the expected
    results for all</st> <st c="1952">possible inputs.</st>
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1520">本书并不声称涵盖算法领域的每一个方面或主题。</st> <st c="1610">相反，它将重点放在算法的设计与分析上，旨在解决我们在评估算法时必须始终考虑的核心问题。</st>
    <st c="1771">首先，最重要的是，我们能否证明算法能正确运行并按预期执行？</st> <st c="1860">确定算法能够可靠地为所有</st>
    <st c="1952">可能的输入生成预期结果，这是至关重要的。</st>
- en: <st c="1968">Next, we must ask how we can ensure the algorithm consistently
    behaves as we anticipate.</st> <st c="2058">This involves scrutinizing its logic,
    understanding its steps, and confirming that each part contributes to the overall
    goal.</st> <st c="2184">Finally, we need to consider whether the algorithm terminates
    within an acceptable timeframe.</st> <st c="2278">No matter how elegantly an algorithm
    is designed, if it doesn’t complete its task efficiently, it becomes impractical
    for real-world use.</st> <st c="2416">By concentrating on these fundamental questions,
    this book aims to guide you through the process of designing robust, reliable,
    and</st> <st c="2548">efficient algorithms.</st>
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1968">接下来，我们必须问自己，如何确保算法始终按照预期的方式运行。</st> <st c="2058">这需要我们仔细审视其逻辑，理解其步骤，并确认每个部分都能为整体目标做出贡献。</st>
    <st c="2184">最后，我们需要考虑算法是否能够在可接受的时间内终止。</st> <st c="2278">无论算法设计得多么优雅，如果它不能高效地完成任务，那么它在现实世界中的应用就变得不切实际。</st>
    <st c="2416">通过集中关注这些基本问题，本书旨在引导你设计出健壮、可靠且</st> <st c="2548">高效的算法。</st>
- en: <st c="2569">Who this book is for</st>
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2569">本书适合谁阅读</st>
- en: <st c="2590">The primary audience for this book is mid-career software engineers,
    developers, information technology professionals, and research scientists.</st>
    <st c="2735">It serves as a practical manual for understanding and applying algorithms
    effectively in various</st> <st c="2832">professional contexts</st>*<st c="2853">.</st>*
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2590">本书的主要读者群体是中级软件工程师、开发人员、信息技术专业人士以及研究科学家。</st> <st c="2735">它作为一本实用手册，帮助读者在各种</st>
    <st c="2832">专业领域</st>*<st c="2853">有效理解和应用算法。</st>*
- en: <st c="2854">Although this book was not initially intended as a textbook, given
    its lack of exercises—which may be included in a future edition – it provides
    numerous examples that enhance learning.</st> <st c="3041">We believe it can be
    used as a primary or secondary textbook for courses such as Design and Analysis
    of Algorithms for students in computer science, software engineering, and other
    related engineering programs.</st> <st c="3252">The author, who has been teaching
    these courses for over a decade, wrote this book to tackle the challenges that
    often arise when explaining complex</st> <st c="3401">algorithmic concepts.</st>
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2854">虽然本书最初并非作为教科书编写，但考虑到其缺乏习题——这些习题可能会在未来版本中加入——它提供了许多示例，能够增强学习效果。</st>
    <st c="3041">我们认为它可以作为计算机科学、软件工程以及其他相关工程专业的学生，在“算法设计与分析”课程中的主要或辅助教材。</st> <st
    c="3252">作者在教授这些课程已有十多年，写这本书是为了应对在讲解复杂的</st> <st c="3401">算法概念时经常遇到的挑战。</st>
- en: <st c="3422">While the book is geared toward readers who have some familiarity
    with algorithms and a background in mathematics or engineering, certain chapters
    have broader appeal.</st> *<st c="3591">Chapters 1</st>* <st c="3601">through</st>
    *<st c="3609">5</st>*<st c="3611">, as well as</st> *<st c="3624">Chapters 8,
    9</st>*<st c="3637">, and</st> *<st c="3643">14,</st>* <st c="3646">discuss interesting
    real-life decision-making scenarios, making them accessible and engaging for a
    wider audience beyond the</st> <st c="3772">technical field.</st>
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3422">虽然本书主要面向对算法有所了解并且有数学或工程背景的读者，但某些章节具有更广泛的吸引力。</st> *<st c="3591">第一章</st>*
    <st c="3601">到</st> *<st c="3609">第五章</st>*<st c="3611">，以及</st> *<st c="3624">第八章、第九章</st>*<st
    c="3637">和</st> *<st c="3643">第十四章</st>*， <st c="3646">讨论了有趣的现实决策场景，使这些章节对于技术领域之外的更广泛受众也具有可读性和吸引力。</st>
- en: <st c="3788">What this book covers</st>
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="3788">本书内容</st>
- en: '[*<st c="3810">Chapter 1</st>*](B22248_01.xhtml#_idTextAnchor014)*<st c="3820">,
    Introduction to Algorithm Analysis,</st>* <st c="3858">offers a foundational understanding
    of algorithms as structured and systematic tools for problem-solving.</st> <st
    c="3964">It introduces the essential concepts of algorithm design and explores
    the dual nature of computer systems, distinguishing between hardware and software.</st>
    <st c="4117">The chapter also emphasizes the importance of algorithm analysis,
    focusing on both correctness and efficiency, setting the stage for a deeper exploration
    of algorithmic techniques in</st> <st c="4300">subsequent chapters.</st>'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="3810">第一章</st>*](B22248_01.xhtml#_idTextAnchor014)*<st c="3820">,
    算法分析导论,</st>* <st c="3858">提供了关于算法的基础性理解，将其视为有结构和系统化的解决问题工具。</st> <st c="3964">它介绍了算法设计的基本概念，并探讨了计算机系统的双重特性，区分硬件和软件。</st>
    <st c="4117">本章还强调了算法分析的重要性，聚焦于正确性和效率，为后续章节更深入的算法技术探索奠定了基础。</st> <st c="4300">随后的章节将进一步展开这一主题。</st>'
- en: '[*<st c="4320">Chapter 2</st>*](B22248_02.xhtml#_idTextAnchor023)*<st c="4330">,
    Mathematical Induction and Loop Invariant for Algorithm Correctness,</st>* <st
    c="4401">discusses the mathematical foundations necessary for proving the correctness
    of algorithms.</st> <st c="4493">It introduces mathematical induction as a fundamental
    technique and extends this concept with loop invariants to ensure the reliability
    of iterative processes.</st> <st c="4653">The chapter provides practical examples
    to illustrate these principles, establishing a strong basis for validating algorithms
    and ensuring they produce correct results in</st> <st c="4824">all scenarios.</st>'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="4320">第2章</st>*](B22248_02.xhtml#_idTextAnchor023)*<st c="4330">,
    算法正确性的数学归纳法与循环不变式,</st>* <st c="4401">讨论了证明算法正确性所需的数学基础。</st> <st c="4493">它将数学归纳法作为一种基本技巧，并通过循环不变式扩展这一概念，以确保迭代过程的可靠性。</st>
    <st c="4653">本章提供了实际的示例，以说明这些原理，为验证算法提供了坚实的基础，确保它们在</st> <st c="4824">所有场景下产生正确的结果。</st>'
- en: '[*<st c="4838">Chapter 3</st>*](B22248_03_split_000.xhtml#_idTextAnchor033)*<st
    c="4848">, Rate of Growth for Complexity Analysis,</st>* <st c="4890">explores
    the concept of algorithm efficiency and how running times scale with input size.</st>
    <st c="4980">It introduces various growth rates, from constant to factorial time,
    and explains how to represent and compare them using asymptotic notations such
    as Big O, Omega, and Theta.</st> <st c="5156">This chapter lays the groundwork
    for understanding and predicting algorithm performance, helping you make informed
    decisions when designing or selecting algorithms for</st> <st c="5324">different
    tasks.</st>'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="4838">第3章</st>*](B22248_03_split_000.xhtml#_idTextAnchor033)*<st c="4848">,
    复杂度分析中的增长率,</st>* <st c="4890">探讨了算法效率的概念以及运行时间如何随着输入规模的变化而变化。</st> <st c="4980">本章介绍了各种增长率，从常数时间到阶乘时间，并解释了如何使用渐近符号（如大O符号、Ω符号和Θ符号）来表示和比较它们。</st>
    <st c="5156">本章为理解和预测算法性能奠定了基础，帮助你在为</st> <st c="5324">不同任务设计或选择算法时做出明智的决策。</st>'
- en: '[*<st c="5340">Chapter 4</st>*](B22248_04.xhtml#_idTextAnchor051)*<st c="5350">,
    Recursion and Recurrence Functions,</st>* <st c="5387">introduces the concept
    of recurrence functions, essential for analyzing the complexity of recursive algorithms.</st>
    <st c="5500">The chapter explores two primary types of recurrence functions: subtractive
    and divide-and-conquer, detailing how each impacts the efficiency of algorithms.</st>
    <st c="5657">Through practical examples such as merge sort and binary search,
    it demonstrates the application of recurrence relations in</st> <st c="5781">real-world
    scenarios.</st>'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="5340">第4章</st>*](B22248_04.xhtml#_idTextAnchor051)*<st c="5350">,
    递归与递归函数,</st>* <st c="5387">介绍了递归函数的概念，这是分析递归算法复杂度的关键。</st> <st c="5500">本章探讨了两种主要类型的递归函数：减法型和分治型，详细讲解了它们如何影响算法的效率。</st>
    <st c="5657">通过像归并排序和二分查找这样的实际例子，展示了递归关系在</st> <st c="5781">现实场景中的应用。</st>'
- en: '[*<st c="5802">Chapter 5</st>*](B22248_05_split_000.xhtml#_idTextAnchor062)*<st
    c="5812">, Solving Recurrence Functions,</st>* <st c="5844">discusses in detail
    the techniques for analyzing the performance of recursive algorithms.</st> <st
    c="5934">It introduces key methods such as the substitution method, the master
    theorem, and recursion trees to solve recurrence relations that arise in divide-and-conquer
    and other recursive algorithms.</st> <st c="6128">The chapter explains how to
    apply these methods to determine the asymptotic complexity of an algorithm, highlighting
    the strengths and limitations of</st> <st c="6278">each approach.</st>'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="5802">第5章</st>*](B22248_05_split_000.xhtml#_idTextAnchor062)*<st c="5812">,
    递归函数求解,</st>* <st c="5844">详细讨论了分析递归算法性能的技巧。</st> <st c="5934">本章介绍了关键方法，如代入法、主定理和递归树，用于求解在分治法和其他递归算法中出现的递归关系。</st>
    <st c="6128">本章解释了如何应用这些方法来确定算法的渐近复杂度，并突出了</st> <st c="6278">每种方法的优缺点。</st>'
- en: '[*<st c="6292">Chapter 6</st>*](B22248_06.xhtml#_idTextAnchor081)*<st c="6302">,
    Sorting Algorithms,</st>* <st c="6324">explores the fundamental techniques for
    arranging data in a specific order, offering a comprehensive overview of both
    iterative and recursive sorting methods.</st> <st c="6483">The chapter begins
    with a detailed examination of comparison-based algorithms, highlighting their
    operational principles and time complexities.</st> <st c="6627">It further explores
    advanced sorting techniques such as merge sort, explaining the divide-and-conquer
    approach and its implications for stability and efficiency.</st> <st c="6789">Additionally,
    the chapter introduces non-comparison-based</st> <st c="6847">sorting algorithms.</st>'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="6292">第6章</st>*](B22248_06.xhtml#_idTextAnchor081)*<st c="6302">，排序算法，</st>*
    <st c="6324">探讨了将数据按特定顺序排列的基本技术，全面概述了迭代和递归排序方法。</st> <st c="6483">本章从详细分析基于比较的算法开始，重点介绍其操作原理和时间复杂度。</st>
    <st c="6627">接着，进一步探讨了高级排序技术，如归并排序，解释了分治法及其对稳定性和效率的影响。</st> <st c="6789">此外，本章介绍了非基于比较的</st>
    <st c="6847">排序算法。</st>'
- en: '[*<st c="6866">Chapter 7</st>*](B22248_07_split_000.xhtml#_idTextAnchor103)*<st
    c="6876">, Search Algorithms,</st>* <st c="6897">begins by examining different
    types of search algorithms, including linear and sublinear methods, highlighting
    their characteristics and performance.</st> <st c="7047">The chapter then introduces
    the concept of hashing, explaining how hash functions can be used to achieve constant-time</st>
    <st c="7166">search operations.</st>'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="6866">第7章</st>*](B22248_07_split_000.xhtml#_idTextAnchor103)*<st c="6876">，搜索算法，</st>*
    <st c="6897">首先考察了不同类型的搜索算法，包括线性和亚线性方法，突出它们的特点和性能。</st> <st c="7047">接着，本章介绍了哈希的概念，解释了哈希函数如何实现常数时间的</st>
    <st c="7166">搜索操作。</st>'
- en: '[*<st c="7184">Chapter 8</st>*](B22248_08.xhtml#_idTextAnchor118)*<st c="7194">,
    Symbiotic Relationship Between Sort and Search,</st>* <st c="7244">provides an
    overview of the interconnected nature of sorting and searching algorithms.</st>
    <st c="7331">It examines how sorting can significantly enhance the efficiency
    of search operations and explores scenarios where sorting is advantageous.</st>
    <st c="7471">The chapter presents a comprehensive analysis of the trade-offs between
    the cost of sorting and the benefits of faster searching, using real-world examples
    to highlight</st> <st c="7640">these dynamics.</st>'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="7184">第8章</st>*](B22248_08.xhtml#_idTextAnchor118)*<st c="7194">，排序与搜索的共生关系，</st>*
    <st c="7244">概述了排序和搜索算法之间的相互关系。</st> <st c="7331">本章考察了排序如何显著提高搜索操作的效率，并探讨了排序在特定情况下的优势。</st>
    <st c="7471">本章通过真实世界的例子，全面分析了排序成本与更快搜索所带来的好处之间的权衡，突出了</st> <st c="7640">这些动态关系。</st>'
- en: '[*<st c="7655">Chapter 9</st>*](B22248_09.xhtml#_idTextAnchor129)*<st c="7665">,
    Randomized Algorithms,</st>* <st c="7690">is about the use of randomness in algorithm
    design to tackle problems that deterministic approaches may struggle to solve
    efficiently.</st> <st c="7825">Through various case studies, including the hiring
    problem and the birthday paradox, this chapter demonstrates how randomized algorithms
    can effectively navigate uncertainty and enhance</st> <st c="8011">decision-making
    processes.</st>'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="7655">第9章</st>*](B22248_09.xhtml#_idTextAnchor129)*<st c="7665">，随机化算法，</st>*
    <st c="7690">讨论了在算法设计中使用随机性，解决确定性方法可能难以高效解决的问题。</st> <st c="7825">通过多种案例研究，包括招聘问题和生日悖论，本章展示了随机化算法如何有效应对不确定性并增强</st>
    <st c="8011">决策过程。</st>'
- en: '[*<st c="8037">Chapter 10</st>*](B22248_10.xhtml#_idTextAnchor149)*<st c="8048">,
    Dynamic Programming,</st>* <st c="8071">begins with the fundamental principles
    that distinguish dynamic programming from other methods, such as divide-and-conquer
    and greedy algorithms.</st> <st c="8217">The chapter presents dynamic programming
    through detailed examples.</st> <st c="8285">This chapter provides a thorough
    understanding of dynamic programming’s advantages and limitations, preparing you
    for its practical application in various</st> <st c="8440">problem-solving scenarios.</st>'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="8037">第10章</st>*](B22248_10.xhtml#_idTextAnchor149)*<st c="8048">，动态规划，</st>*
    <st c="8071">从动态规划与其他方法（如分治法和贪心算法）之间的基本区别开始讲解。</st> <st c="8217">本章通过详细的实例介绍了动态规划。</st>
    <st c="8285">本章深入理解了动态规划的优势与局限，为在各种</st> <st c="8440">问题解决场景中的实际应用做好准备。</st>'
- en: '[*<st c="8466">Chapter 11</st>*](B22248_11.xhtml#_idTextAnchor164)*<st c="8477">,
    Landscape of Data Structures,</st>* <st c="8509">explores how different types
    of data structures, such as linear and non-linear, static and dynamic, as well
    as those supporting sequential and random access, can significantly impact algorithm
    performance.</st> <st c="8715">This foundational knowledge sets the stage for
    a more in-depth exploration of specific data structures and their algorithmic
    applications in the</st> <st c="8860">following chapters.</st>'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="8466">第11章</st>*](B22248_11.xhtml#_idTextAnchor164)*<st c="8477">,
    数据结构的概貌,</st>* <st c="8509">探讨了不同类型的数据结构，如线性和非线性、静态和动态，以及支持顺序访问和随机访问的结构，这些结构显著影响算法性能。</st>
    <st c="8715">这些基础知识为进一步深入探讨特定数据结构及其算法应用铺平了道路。</st> <st c="8860">随后的章节。</st>'
- en: '[*<st c="8879">Chapter 12</st>*](B22248_12.xhtml#_idTextAnchor187)*<st c="8890">,
    Linear Data Structures,</st>* <st c="8916">provides an in-depth exploration of
    fundamental structures such as arrays, linked lists, stacks, queues, and deques.</st>
    <st c="9033">This chapter will guide you through the essential operations and
    characteristics of each data structure, highlighting their unique benefits and
    trade-offs.</st> <st c="9189">It also introduces advanced concepts such as</st>
    <st c="9234">skip lists.</st>'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="8879">第12章</st>*](B22248_12.xhtml#_idTextAnchor187)*<st c="8890">,
    线性数据结构,</st>* <st c="8916">深入探讨了数组、链表、栈、队列和双端队列等基本结构。</st> <st c="9033">本章将引导您了解每种数据结构的基本操作和特性，突显它们的独特优势和权衡。</st>
    <st c="9189">还介绍了跳表等高级概念。</st>'
- en: '[*<st c="9245">Chapter 13</st>*](B22248_13.xhtml#_idTextAnchor200)*<st c="9256">,
    Non-Linear Data Structures,</st>* <st c="9286">discusses non-linear data structures.</st>
    <st c="9324">The chapter begins with an exploration of the general properties
    that distinguish non-linear structures from linear ones.</st> <st c="9446">It
    covers two major categories – graphs and trees – examining their types, properties,
    and applications.</st> <st c="9551">The chapter concludes by introducing heaps,
    a specialized form of binary trees, demonstrating their significance in sorting
    algorithms and</st> <st c="9690">priority queues.</st>'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="9245">第13章</st>*](B22248_13.xhtml#_idTextAnchor200)*<st c="9256">,
    非线性数据结构,</st>* <st c="9286">讨论非线性数据结构。</st> <st c="9324">本章首先探讨了区分非线性结构与线性结构的一般特性。</st>
    <st c="9446">涵盖了两大类别——图和树——分析它们的类型、特性和应用。</st> <st c="9551">本章最后介绍了堆，一种特殊形式的二叉树，展示了它们在排序算法和</st>
    <st c="9690">优先队列中的重要性。</st>'
- en: '[*<st c="9706">Chapter 14</st>*](B22248_14.xhtml#_idTextAnchor222)*<st c="9717">,
    Tomorrow’s Algorithms,</st>* <st c="9742">explores the cutting-edge trends that
    are defining the future of computing.</st> <st c="9818">The chapter categorizes
    these emerging trends into three key areas: scalability, context awareness, and
    moral responsibility.</st> <st c="9944">It explores how algorithms are evolving
    to address the demands of large-scale data processing, adapt to dynamic environments,
    and</st> <st c="10074">operate ethically.</st>'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[*<st c="9706">第14章</st>*](B22248_14.xhtml#_idTextAnchor222)*<st c="9717">,
    明日算法,</st>* <st c="9742">探讨正在定义计算未来的前沿趋势。</st> <st c="9818">本章将这些新兴趋势分为三个关键领域：可扩展性、上下文感知和道德责任。</st>
    <st c="9944">探讨了算法如何演变以应对大规模数据处理的需求、适应动态环境，并</st> <st c="10074">以道德方式运作。</st>'
- en: <st c="10092">To get the most out of this book</st>
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="10092">为了从本书中获取最大收益</st>
- en: <st c="10125">To effectively use the code in this book, you will need the latest
    version of Python and a suitable</st>**<st c="10225">integrated development environment</st>**
    *<st c="10260">(</st>***<st c="10262">IDE</st>***<st c="10265">)</st>* <st c="10268">for
    developing and testing the code.</st> <st c="10305">We recommend using the Anaconda
    Python environment due to its ease of use and comprehensive package management.</st>
    <st c="10417">Anaconda comes with many pre-installed libraries and tools that
    are useful for algorithm development and analysis.</st> <st c="10532">You can
    download and install Anaconda from the official</st> <st c="10588">website:</st>[<st
    c="10596">https://www.anaconda.com/download</st>](https://www.anaconda.com/download)*<st
    c="10630">.</st>*
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10125">为了有效使用本书中的代码，你需要安装最新版本的 Python 和适合的</st>**<st c="10225">集成开发环境</st>**
    *<st c="10260">(</st>***<st c="10262">IDE</st>***<st c="10265">)</st>* <st c="10268">来开发和测试代码。</st>
    <st c="10305">我们推荐使用 Anaconda Python 环境，因为它易于使用，并且具有全面的包管理功能。</st> <st c="10417">Anaconda
    附带了许多预安装的库和工具，这些库和工具对于算法开发和分析非常有用。</st> <st c="10532">你可以从官方</st> <st c="10588">网站下载并安装
    Anaconda：</st>[<st c="10596">https://www.anaconda.com/download</st>](https://www.anaconda.com/download)*<st
    c="10630">。</st>*
- en: <st c="10631">Once installed, you can use Anaconda’s IDE (Spyder) or Jupyter
    Notebook to run the code examples provided in this book.</st> <st c="10752">Both
    tools offer an interactive environment that is particularly helpful for learning
    and experimenting with algorithms.</st> <st c="10873">Additionally, you may want
    to explore other IDEs such as PyCharm or Visual Studio Code, which offer powerful
    features for</st> <st c="10995">Python development.</st>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10631">安装完成后，你可以使用 Anaconda 的 IDE（Spyder）或 Jupyter Notebook 来运行本书中提供的代码示例。</st>
    <st c="10752">这两个工具都提供了交互式环境，非常适合学习和实验算法。</st> <st c="10873">此外，你还可以尝试其他 IDE，如
    PyCharm 或 Visual Studio Code，它们提供了强大的功能用于</st> <st c="10995">Python 开发。</st>
- en: '**<st c="11014">If you are using the digital version of this book, we advise
    you to type the code yourself or access the code from the book’s GitHub repository
    (a link is available in the next section).</st> <st c="11202">Doing so will help
    you avoid any potential errors related to the copying and pasting</st>** **<st
    c="11287">of code.</st>**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="11014">如果你使用的是本书的数字版，我们建议你亲自输入代码，或者从本书的 GitHub 仓库中获取代码（链接将在下一节提供）。</st>
    <st c="11202">这样做可以帮助你避免复制粘贴</st>** **<st c="11287">代码时可能出现的错误。</st>**'
- en: <st c="11295">Download the example code files</st>
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="11295">下载示例代码文件</st>
- en: <st c="11327">You can download the example code files for this book from GitHub
    at</st> [<st c="11397">https://github.com/PacktPublishing/Efficient-Algorithm-Design</st>](https://github.com/PacktPublishing/Efficient-Algorithm-Design)<st
    c="11458">. If there’s an update to the code, it will be updated in the</st> <st
    c="11520">GitHub repository.</st>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11327">你可以从 GitHub 上下载本书的示例代码文件，地址是</st> [<st c="11397">https://github.com/PacktPublishing/Efficient-Algorithm-Design</st>](https://github.com/PacktPublishing/Efficient-Algorithm-Design)<st
    c="11458">。如果代码有更新，将会在</st> <st c="11520">GitHub 仓库中更新。</st>
- en: <st c="11538">We also have other code bundles from our rich catalog of books
    and videos available at</st> [<st c="11626">https://github.com/PacktPublishing/</st>](https://github.com/PacktPublishing/)<st
    c="11661">. Check</st> <st c="11669">them out!</st>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11538">我们还有其他的代码包，来自我们丰富的图书和视频目录，可以在</st> [<st c="11626">https://github.com/PacktPublishing/</st>](https://github.com/PacktPublishing/)<st
    c="11661">找到。</st> <st c="11669">快去看看吧！</st>
- en: <st c="11678">Conventions used</st>
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="11678">使用的约定</st>
- en: <st c="11695">There are a number of text conventions used throughout</st> <st
    c="11751">this book.</st>
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11695">本书中使用了若干文本约定。</st>
- en: '`<st c="11761">Code in text</st>`<st c="11774">: Indicates code words in text,
    database table names, folder names, filenames, file extensions, pathnames, dummy
    URLs, user input, and Twitter/X handles.</st> <st c="11929">Here is an example:
    “In the preceding function, the running time depends on the number of times the</st>
    `<st c="12029">for i in range(1, n + 1):</st>` <st c="12054">loop</st> <st c="12060">is
    executed.”</st>'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`<st c="11761">文中的代码</st>`<st c="11774">：表示文本中的代码字、数据库表名、文件夹名称、文件名、文件扩展名、路径名、虚拟
    URL、用户输入和 Twitter/X 账号。</st> <st c="11929">例如：“在上面的函数中，运行时间取决于</st> `<st c="12029">for
    i in range(1, n + 1):</st>` <st c="12054">循环</st> <st c="12060">执行的次数。”</st>'
- en: <st c="12073">A block of code is set</st> <st c="12097">as follows:</st>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12073">一段代码块的格式如下：</st>
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="12244">Any command-line input or output is written</st> <st c="12289">as
    follows:</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12244">任何命令行输入或输出格式如下：</st>
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**<st c="12332">Bold</st>**<st c="12337">: Indicates a new term, an important
    word, or words that you see onscreen.</st> <st c="12413">For instance, words in
    menus or dialog boxes appear in</st> **<st c="12468">bold</st>**<st c="12472">.
    Here is an example: “In</st> [*<st c="12498">Chapter 13</st>*](B22248_13.xhtml#_idTextAnchor200)<st
    c="12508">, we will discuss a search algorithm based on a specific data structure
    called</st> **<st c="12587">Binary Search</st>** **<st c="12601">Trees</st>**
    <st c="12606">(</st>**<st c="12608">BSTs</st>**<st c="12612">).”</st>'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="12332">粗体</st>**<st c="12337">：表示新术语、重要词汇或屏幕上出现的词语。</st> <st c="12413">例如，菜单或对话框中的词语会显示为</st>
    **<st c="12468">粗体</st>**<st c="12472">。例如：“在</st> [*<st c="12498">第13章</st>*](B22248_13.xhtml#_idTextAnchor200)<st
    c="12508">中，我们将讨论基于一种特定数据结构的搜索算法，称为</st> **<st c="12587">二分查找</st>** **<st c="12601">树</st>**
    <st c="12606">(</st>**<st c="12608">BSTs</st>**<st c="12612">)。”</st>'
- en: <st c="12616">Tips or important notes</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12616">提示或重要说明</st>
- en: <st c="12640">Appear like this.</st>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12640">呈现如下。</st>
- en: <st c="12658">Get in touch</st>
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="12658">联系我们</st>
- en: <st c="12671">Feedback from our readers is</st> <st c="12701">always welcome.</st>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12671">我们非常欢迎读者的反馈。</st> <st c="12701">您的反馈对我们非常重要。</st>
- en: '**<st c="12716">General feedback</st>**<st c="12733">: If you have questions
    about any aspect of this book, email us at</st> [<st c="12801">customercare@packtpub.com</st>](mailto:customercare@packtpub.com)
    <st c="12826">and mention the book title in the subject of</st> <st c="12872">your
    message.</st>'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="12716">一般反馈</st>**<st c="12733">：如果你对本书的任何方面有疑问，请通过电子邮件联系我们，邮箱地址为</st>
    [<st c="12801">customercare@packtpub.com</st>](mailto:customercare@packtpub.com)
    <st c="12826">并在邮件主题中注明书名。</st>'
- en: '**<st c="12885">Errata</st>**<st c="12892">: Although we have taken every care
    to ensure the accuracy of our content, mistakes do happen.</st> <st c="12988">If
    you have found a mistake in this book, we would be grateful if you would report
    this to us.</st> <st c="13083">Please visit</st> [<st c="13096">www.packtpub.com/support/errata</st>](http://www.packtpub.com/support/errata)
    <st c="13127">and fill in</st> <st c="13140">the form.</st>'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="12885">勘误</st>**<st c="12892">：虽然我们已尽力确保内容的准确性，但仍可能出现错误。</st> <st
    c="12988">如果你在本书中发现错误，请向我们报告。</st> <st c="13083">请访问</st> [<st c="13096">www.packtpub.com/support/errata</st>](http://www.packtpub.com/support/errata)
    <st c="13127">并填写</st> <st c="13140">表单。</st>'
- en: '**<st c="13149">Piracy</st>**<st c="13156">: If you come across any illegal
    copies of our works in any form on the internet, we would be grateful if you would
    provide us with the location address or website name.</st> <st c="13327">Please
    contact us at</st> [<st c="13348">copyright@packt.com</st>](mailto:copyright@packt.com)
    <st c="13367">with a link to</st> <st c="13383">the material.</st>'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="13149">盗版</st>**<st c="13156">：如果你在互联网上发现我们作品的任何非法复制品，请提供该位置地址或网站名称，我们将不胜感激。</st>
    <st c="13327">请通过</st> [<st c="13348">copyright@packt.com</st>](mailto:copyright@packt.com)
    <st c="13367">与我们联系，并提供该材料的链接。</st>'
- en: '**<st c="13396">If you are interested in becoming an author</st>**<st c="13440">:
    If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, please</st> <st c="13565">visit</st> [<st c="13571">authors.packtpub.com</st>](http://authors.packtpub.com)<st
    c="13591">.</st>'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="13396">如果你有兴趣成为作者</st>**<st c="13440">：如果你在某个领域拥有专长，并且有兴趣撰写或参与撰写一本书，请</st>
    <st c="13565">访问</st> [<st c="13571">authors.packtpub.com</st>](http://authors.packtpub.com)<st
    c="13591">。</st>'
- en: <st c="13592">Share Your Thoughts</st>
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="13592">分享你的想法</st>
- en: <st c="13612">Once you’ve read</st> *<st c="13630">Efficient Algorithm Design</st>*<st
    c="13656">, we’d love to hear your thoughts!</st> <st c="13691">Please</st> [<st
    c="13698">click here to go straight to the Amazon review page</st>](https://packt.link/r/1-835-08926-7)
    <st c="13749">for this book and share</st> <st c="13774">your feedback.</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13612">一旦你阅读了</st> *<st c="13630">高效算法设计</st>*<st c="13656">，我们很希望听到你的想法！</st>
    <st c="13691">请</st> [<st c="13698">点击这里直接访问Amazon评论页面</st>](https://packt.link/r/1-835-08926-7)
    <st c="13749">并分享</st> <st c="13774">你的反馈。</st>
- en: <st c="13788">Your review is important to us and the tech community and will
    help us make sure we’re delivering excellent</st> <st c="13897">quality content.</st>
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13788">您的评价对我们以及技术社区至关重要，能够帮助我们确保提供优质的</st> <st c="13897">内容。</st>
- en: <st c="13913">Download a free PDF copy of this book</st>
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="13913">下载本书的免费PDF副本</st>
- en: <st c="13951">Thanks for purchasing</st> <st c="13974">this book!</st>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13951">感谢购买</st> <st c="13974">本书！</st>
- en: <st c="13984">Do you like to read on the go but are unable to carry your print</st>
    <st c="14050">books everywhere?</st>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13984">你喜欢在路上阅读但无法随身携带印刷版的</st> <st c="14050">书籍吗？</st>
- en: <st c="14067">Is your eBook purchase not compatible with the device of</st>
    <st c="14125">your choice?</st>
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14067">你购买的电子书与你选择的设备不兼容吗？</st>
- en: <st c="14137">Don’t worry, now with every Packt book you get a DRM-free PDF
    version of that book at</st> <st c="14224">no cost.</st>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14137">别担心，现在每本 Packt 的书都可以免费获得不带 DRM 的 PDF 版本。</st>
- en: <st c="14232">Read anywhere, any place, on any device.</st> <st c="14274">Search,
    copy, and paste code from your favorite technical books directly into</st> <st
    c="14352">your application.</st>
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14232">随时随地，在任何设备上阅读。</st> <st c="14274">直接从你喜爱的技术书籍中搜索、复制和粘贴代码到</st>
    <st c="14352">你的应用程序。</st>
- en: <st c="14369">The perks don’t stop there, you can get exclusive access to discounts,
    newsletters, and great free content in your</st> <st c="14485">inbox daily</st>
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14369">福利不止于此，你还可以在你的</st> <st c="14485">收件箱每天获取独家折扣、新闻简报和优质免费内容</st>
- en: <st c="14496">Follow these simple steps to get</st> <st c="14530">the benefits:</st>
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14496">按照以下简单步骤获取</st> <st c="14530">这些福利：</st>
- en: <st c="14543">Scan the QR code or visit the</st> <st c="14574">link below</st>
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="14543">扫描二维码或访问下面的</st> <st c="14574">链接</st>
- en: '![](img/B22248_QR_Free_PDF.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22248_QR_Free_PDF.jpg)'
- en: '[<st c="14586">https://packt.link/free-ebook/9781835886823</st>](https://packt.link/free-ebook/9781835886823)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[<st c="14586">https://packt.link/free-ebook/9781835886823</st>](https://packt.link/free-ebook/9781835886823)'
- en: <st c="14629">Submit your proof</st> <st c="14648">of purchase</st>
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="14629">提交你的购买</st> <st c="14648">凭证</st>
- en: <st c="14659">That’s it!</st> <st c="14671">We’ll send your free PDF and other
    benefits to your</st> <st c="14723">email directly</st>
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="14659">就这样！</st> <st c="14671">我们将把免费的 PDF 和其他福利直接发送到你的</st> <st c="14723">电子邮箱</st>
