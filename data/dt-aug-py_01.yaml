- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Data Augmentation Made Easy
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据增强简化
- en: Data augmentation is essential for developing a successful **deep learning**
    (**DL**) project. However, data scientists and developers often overlook this
    crucial step. It is no secret that you will spend the majority of your project
    time gathering, cleaning, and augmenting the dataset in a real-world DL project.
    Thus, learning how to expand the dataset without purchasing new data is essential.
    This book covers standard and advanced techniques for extending image, text, audio,
    and tabular datasets. Furthermore, you will learn about data biases and learn
    how to code on **Jupyter** **Python Notebooks**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 数据增强对开发成功的**深度学习**（**DL**）项目至关重要。然而，数据科学家和开发者往往忽视了这一关键步骤。在一个实际的 DL 项目中，你将花费大部分时间来收集、清理和增强数据集，这一点不是什么秘密。因此，学习如何在不购买新数据的情况下扩展数据集是非常必要的。本书涵盖了扩展图像、文本、音频和表格数据集的标准和高级技术。此外，你还将了解数据偏差，并学习如何在**Jupyter**
    **Python 笔记本**中编写代码。
- en: '[*Chapter 1*](B17990_01.xhtml#_idTextAnchor016)will introduce various data
    augmentation concepts, set up the coding environment, and create the foundation
    class. Later chapters will explain various techniques in detail, including Python
    coding. The effective use of data augmentation has proven to be the deciding factor
    between success and failure in **machine learning** (**ML**). Many real-world
    ML projects stay in the conceptual phase because of insufficient data for training
    the ML model. Data augmentation is a cost-effective technique that can increase
    the size of the dataset, lower the training error rate, and produce a more accurate
    prediction and forecast.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B17990_01.xhtml#_idTextAnchor016)将介绍各种数据增强概念，设置编码环境，并创建基础类。后续章节将详细解释各种技术，包括
    Python 编程。数据增强的有效应用已经被证明是**机器学习**（**ML**）成功与失败之间的决定性因素。许多现实世界的 ML 项目停留在概念阶段，原因是缺乏足够的数据来训练
    ML 模型。数据增强是一种成本效益高的技术，可以增加数据集的大小，降低训练误差率，并生成更准确的预测。'
- en: Fun fact
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 趣味事实
- en: The car gasoline analogy is helpful for students who first learn about data
    augmentation and **artificial intelligence** (**AI**). You can think of data for
    the AI engine as the gasoline and data augmentation as the additive, such as the
    Chevron Techron fuel cleaner, that makes your car engine run faster, smoother,
    and further without extra petrol.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 汽车汽油类比对首次学习数据增强和**人工智能**（**AI**）的学生非常有帮助。你可以将 AI 引擎的“数据”看作是汽油，将数据增强看作是添加剂，比如雪佛龙的
    Techron 燃油清洁剂，它能使你的汽车引擎在不增加额外油料的情况下运转得更快、更平稳、行驶得更远。
- en: In this chapter, we’ll define the data augmentation role and the limitations
    of extending data without changing its integrity. We’ll briefly discuss the different
    types of input data, such as image, text, audio, and tabular data, and the challenges
    in supplementing it. Finally, we’ll set up the system requirements and the programming
    style in the accompanying Python notebook.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将定义数据增强的作用以及在不改变数据完整性的情况下扩展数据的局限性。我们将简要讨论不同类型的输入数据，如图像、文本、音频和表格数据，以及补充数据时面临的挑战。最后，我们将在随附的
    Python 笔记本中设置系统要求和编程风格。
- en: I designed this book to be a hands-on journey. It will be most effective to
    read a chapter, run the code, re-read the part of the chapter that confused you,
    and jump back to hacking the code until you firmly understand the concept or technique
    that was presented.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我设计这本书是为了让读者进行动手实践。最有效的学习方法是：阅读一章，运行代码，重新阅读让你困惑的部分，再跳回去修改代码，直到你牢固掌握所介绍的概念或技术。
- en: You are encouraged to change or add new code to the Python notebook. The primary
    purpose of this book is interactive learning. So, if something goes wrong, download
    a fresh copy from the book's GitHub. The surest method to learn is to make mistakes
    and create something new.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励你修改或添加新的代码到 Python 笔记本中。这本书的主要目的是互动式学习。所以，如果遇到问题，可以从本书的 GitHub 下载一个新的副本。学习的最佳方式就是犯错并创造新东西。
- en: Data augmentation is an iterative process. There is no fixed recipe. In other
    words, depending on the dataset, you select augmented functions and jiggle the
    parameters. A subject domain expert may provide insight into how much distortion
    is acceptable. By the end of this chapter, you will know the general rules for
    data augmentation, what type of input data can be augmented, the programming style,
    and how to set up a Python Notebook online or offline.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数据增强是一个迭代过程，没有固定的方案。换句话说，根据数据集的不同，你可以选择增强函数并调整参数。领域专家可能会提供关于多少失真是可以接受的见解。在本章结束时，你将了解数据增强的一般规则、可以增强的输入数据类型、编程风格，以及如何在线或离线设置Python笔记本。
- en: 'In particular, this chapter covers the following primary topics:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章主要涵盖以下主题：
- en: Data augmentation role
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据增强的作用
- en: Data input types
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据输入类型
- en: Python Notebook
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python笔记本
- en: Programming styles
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程风格
- en: Let’s start with the data augmentation role.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从数据增强的作用开始。
- en: Data augmentation role
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据增强的作用
- en: Data is paramount in any AI project. This is especially true when using the
    **artificial neural network** (**ANN**) algorithm, also known as **DL**. The success
    or failure of a DL project is primarily due to the input data quality.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 数据在任何AI项目中都是至关重要的。这在使用**人工神经网络**（**ANN**）算法时尤其如此，也被称为**深度学习**（**DL**）。一个深度学习项目的成败主要取决于输入数据的质量。
- en: One primary reason for the significance of data augmentation is that it is relatively
    too easy to develop an AI for prediction and forecasting, and those models require
    robust data input. With the remarkable advancement in developing, training, and
    deploying a DL project, such as using the **FastAI** framework, you can create
    a world-class DL model in a handful of Python code lines. Thus, expanding the
    dataset is an effective option to improve the DL model’s accuracy over your competitor.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据增强之所以重要，主要原因之一是开发一个用于预测和预报的AI相对容易，而这些模型需要强大的数据输入。随着开发、训练和部署深度学习项目的显著进步，例如使用**FastAI**框架，你可以在几行Python代码中创建一个世界级的深度学习模型。因此，扩展数据集是提高深度学习模型准确性、超越竞争对手的有效方式。
- en: The traditional method of acquiring additional data is difficult, expensive,
    and impractical. Sometimes, the only available option is to use data augmentation
    techniques to extend the dataset.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的获取额外数据的方法困难、昂贵且不切实际。有时，唯一可行的选择就是使用数据增强技术来扩展数据集。
- en: Fun fact
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 趣闻
- en: Data augmentation methods can increase the data’s size tenfold. For example,
    it is relatively challenging to acquire additional skin cancer images. Thus, using
    a random combination of image transformations, such as vertical flip, horizontal
    flip, rotating, and skewing, is a practical technique that can expand the skin
    cancer photo data.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 数据增强方法可以将数据量增加十倍。例如，获取额外的皮肤癌图像相对困难。因此，使用随机组合的图像变换技术，如垂直翻转、水平翻转、旋转和扭曲，是一种可以扩展皮肤癌照片数据的实用方法。
- en: Without data augmentation, sourcing new skin cancer photos and labeling them
    is expensive and time-consuming. The **International Skin Imaging Collaboration**
    (**ISIC**) is the authoritative data source for skin diseases, where a team of
    dermatologists verified and classified the images. ISIC made the datasets available
    to the public to download for free. If you can’t find a particular dataset from
    ISIC, it is difficult to find other means, as accessing hospital or university
    labs to acquire skin disease images is laced with legal and logistic blockers.
    After obtaining the photos, hiring a team of dermatologists to classify the pictures
    to correct diseases would be costly.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有数据增强，获取新的皮肤癌照片并进行标注既昂贵又耗时。**国际皮肤成像合作组织**（**ISIC**）是皮肤病的权威数据来源，由一组皮肤科医生验证和分类这些图片。ISIC将数据集免费提供给公众下载。如果你无法从ISIC找到特定的数据集，找到其他途径将非常困难，因为访问医院或大学实验室获取皮肤病图像涉及法律和后勤障碍。获取照片后，聘请皮肤科医生团队对图像进行分类以纠正疾病会非常昂贵。
- en: Another example of the impracticality of attaining additional images instead
    of augmentation is when you download photos from social media or online search
    engines. Social media is a rich source of image, text, audio, and video data.
    Search engines, such as **Google** or **Bing**, make it relatively easy to download
    additional data for a project, but copyrights and legal usage are a quagmire.
    Most images, texts, audio, and videos on social media, such as **YouTube**, **Facebook**,
    **TikTok**, and **Twitter**, are not clearly labeled as copyrights or public domain
    material.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是，通过增强获得额外图片的不可行性，例如当你从社交媒体或在线搜索引擎下载照片时。社交媒体是图像、文本、音频和视频数据的丰富来源。搜索引擎，如**Google**或**Bing**，使得下载额外数据用于项目相对容易，但版权和法律使用问题则是一个泥潭。大多数社交媒体上的图像、文本、音频和视频，如**YouTube**、**Facebook**、**TikTok**和**Twitter**，并未明确标注是否具有版权或属于公有领域。
- en: Furthermore, social media promotes popular content, not unfavorable or obscure
    material. For example, let’s say you want to add more images of parrots to your
    parrot classification AI system. Online searches will return a lot of blue-and-yellow
    macaws, red-and-green macaws, or sulfur-crested cockatoos, but not as many Galah,
    Kea, or the mythical Norwegian-blue parrot – a fake parrot from the Monty Python
    comedy skit.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，社交媒体推动流行内容，而非不受欢迎或冷门的素材。例如，假设你想为你的鹦鹉分类AI系统添加更多的鹦鹉图片。在线搜索会返回大量的蓝黄金刚鹦鹉、红绿金刚鹦鹉或白顶凤头鹦鹉，但不会有那么多的吉拉鹦鹉、凯阿鹦鹉或神话中的挪威蓝鹦鹉——这是一只来自蒙提·派森喜剧小品的假鹦鹉。
- en: Insufficient data for AI training is exacerbated for text, audio, and tabular
    data types. Generally, obtaining additional text, audio, and tabular data is expensive
    and time-consuming. There are strong copyright laws protecting text data. Audio
    files are less common online, and tabular data is primarily from private company
    databases.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: AI训练所需数据不足的问题在文本、音频和表格数据类型中尤为严重。通常，获取额外的文本、音频和表格数据既昂贵又费时。文本数据受到强有力的版权保护。音频文件在网络上较为稀少，而表格数据主要来自私人公司数据库。
- en: The following section will define the four commonly used data types.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分将定义四种常用的数据类型。
- en: Data input types
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据输入类型
- en: 'The four data input types are self-explanatory, but it is worth clearly defining
    the data input types and what is out of scope:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 四种数据输入类型是不言自明的，但值得明确界定这些数据输入类型及其不包括的内容：
- en: Image definition
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像定义
- en: Text definition
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本定义
- en: Audio definition
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 音频定义
- en: Tabular data definition
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格数据定义
- en: '![Figure 1.1 – Image, text, tabular, and audio augmentation](img/B17990_01_01.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 图像、文本、表格和音频增强](img/B17990_01_01.jpg)'
- en: Figure 1.1 – Image, text, tabular, and audio augmentation
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 图像、文本、表格和音频增强
- en: '*Figure 1**.1* provides a sneak peek at image, text, tabular and audio augmentation.
    Later in this book, you will learn how to implement augmentation methods.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1**.1* 提供了图像、文本、表格和音频增强的预览。在本书的后续章节中，你将学习如何实现增强方法。'
- en: Let’s get started with images.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从图像开始吧。
- en: Image definition
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像定义
- en: Image is a large category because you can represent almost anything as an image,
    such as people, landscapes, animals, plants, and various objects around us. Pictures
    can also represent action, such as sports, sign language, yoga poses, and many
    more. One particularly creative use of images is capturing a computer mouse’s
    movement over time to predict whether a user is a computer hacker or not.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图像是一个大类别，因为几乎任何事物都可以通过图像来表示，比如人、风景、动物、植物和我们周围的各种物体。图片还可以表现动作，比如运动、手语、瑜伽姿势等等。图像的一个特别富有创意的用法是通过捕捉计算机鼠标的运动轨迹来预测用户是否为黑客。
- en: The techniques for increasing the number of pictures are horizontal flip, vertical
    flip, enlarge, zoom in, zoom out, skew, warp, and lighting. Humans are experts
    at processing images. Thus, if a picture is slightly distorted or darkened, you
    can still tell that it is the same image. However, this is not the same for a
    computer. AI represents a color picture as a three-dimensional array of float
    numbers – the width, height, and RGB as depth. Any image distortion will yield
    an array with different values.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 增加图片数量的技巧包括水平翻转、垂直翻转、放大、缩小、拉伸、扭曲和光照。人类在处理图像方面是专家。因此，即使图片稍微失真或变暗，你仍然可以辨认出它是同一张图像。然而，对于计算机而言情况并非如此。AI将彩色图片表示为一个三维数组，包含宽度、高度和RGB作为深度。任何图像失真都会导致一个包含不同值的数组。
- en: Graphs, such as time series data charts, and mathematical equation plots, such
    as 3D topology plots, are outside the scope of image augmentation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图形，例如时间序列数据图表和数学方程图，如3D拓扑图，不在图像增强的范围内。
- en: Fun fact
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: You can eliminate the **overfitting** problem in DL image classification training
    by creatively using data augmentation methods.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过创造性地使用数据增强方法来消除深度学习（DL）图像分类训练中的**过拟合**问题。
- en: Text augmentation has different concerns than image augmentation. Let’s take
    a look.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 文本增强与图像增强有不同的关注点。我们来看看。
- en: Text definition
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本定义
- en: The primary text input data is in English, but the same techniques for text
    augmentation can be applied to other West Germanic languages. Python lessons use
    English as the text input data.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的文本输入数据是英文，但相同的文本增强技术也可以应用于其他西日耳曼语言。Python 课程使用英文作为文本输入数据。
- en: The techniques for supplementing the text input are back translation, easy data
    augmentation, and albumentation. A few methods might be counterintuitive at first
    glance, such as deleting or swamping words in a sentence. However, it is an acceptable
    practice because, in the real world, not everyone writes perfect English.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 补充文本输入的技术包括回译、简单数据增强和albumentation。有些方法乍看之下可能违反直觉，例如删除或交换句子中的单词。然而，这是一种可接受的做法，因为在现实生活中，并非每个人都写完美的英语。
- en: For example, movie reviewers on the **American Multi-Cinema** (**AMC**) website
    write incomplete or grammatically incorrect sentences. They omit verbs or use
    inappropriate words. As a rule of thumb, you should not expect perfect English
    for text input data in many NLP projects.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**美国多厅影院**（**AMC**）网站上的电影评论员写的句子通常不完整或语法错误。他们省略动词或使用不合适的词汇。一般来说，你不应期望在许多自然语言处理（NLP）项目中，文本输入数据会是完美的英语。
- en: If an NLP model is trained in perfect English as text input data, it could cause
    bias against typical online reviewers. In other words, the NLP model will predict
    inaccurately when deployed to a real-world audience. For example, in sentiment
    analysis, the AI system will predict whether a movie review has a positive or
    negative sentiment. Suppose you trained the system using a perfect English dataset.
    In that case, the AI system might forecast a **false positive** or **false negative**
    when people write a short line with misspelled words and grammatical errors.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个NLP模型以完美的英语作为文本输入数据进行训练，这可能会导致对典型在线评论员的偏见。换句话说，当部署到实际用户时，NLP模型可能会预测不准确。例如，在情感分析中，AI系统将预测一篇电影评论是否为积极或消极情绪。假设你使用完美的英语数据集来训练系统。那么，当人们写下一些带有拼写错误和语法错误的简短评论时，AI系统可能会预测出**假阳性**或**假阴性**。
- en: Language translation, ideograms, and hieroglyphs are outside the scope of this
    book. Now, let’s look at audio augmentation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 语言翻译、表意文字和象形文字不在本书的讨论范围内。现在，让我们来看看音频增强。
- en: Audio definition
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音频定义
- en: Audio input data can be any sound wave recording such as music, speech, and
    natural sounds. Sound wave attributes such as amplitude and frequency are represented
    as graphs, which are technically images, but you can’t use any image augmentation
    methods for audio input data.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 音频输入数据可以是任何声音波形的记录，如音乐、语音和自然声音。声音波形的属性，如振幅和频率，以图形的形式表示，这些图形在技术上是图像，但你不能对音频输入数据使用任何图像增强方法。
- en: 'The techniques for expanding audio input are split into two types: **waveform**
    and **spectrograph**. For raw audio, the transformation methods range from time-shifting
    and pitch scaling to random gain, while for spectrographs, the functions are time
    masking, time stretching, pitch scaling, and many others.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展音频输入的技术分为两种类型：**波形**和**频谱图**。对于原始音频，转换方法包括时间偏移、音高缩放和随机增益，而对于频谱图，功能包括时间遮蔽、时间拉伸、音高缩放等许多其他方法。
- en: Speech in a language other than English is outside the scope of this book. This
    is not due to technical difficulties but rather because this book is written in
    English. Writing about the aftermath effects of switching to a different language
    would be problematic.Audio augmentation is demanding, but tabular data is even
    more challenging to expand.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用非英语语言的语音不在本书的讨论范围内。这并不是因为技术上的困难，而是因为本书是用英语写成的。讨论切换到其他语言后的后果会有问题。音频增强很有挑战性，但表格数据的扩展更加困难。
- en: Tabular data definition
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表格数据定义
- en: Tabular data is information in a relational database, spreadsheet, or text file
    in **comma-separated values** (**CSV**) format. Tabular data augmentation is a
    fast-growing field in ML and DL. The tabular data augmentation techniques are
    transforming, interacting, mapping, and extraction.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 表格数据是关系数据库、电子表格或文本文件中的信息，格式通常为**逗号分隔值**（**CSV**）。表格数据增强是 ML 和 DL 领域的一个快速发展方向。表格数据增强技术包括转换、交互、映射和提取。
- en: Fun challenge
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: Here is a thought experiment. Can you think of data types other than image,
    text, audio, and tabular? A hint is *Casablanca* and *Blade Runner*.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个思维实验。除了图像、文本、音频和表格数据外，你能想到其他数据类型吗？一个提示是 *卡萨布兰卡* 和 *银翼杀手*。
- en: There are two parts to this chapter. The first half discussed the various concepts
    and techniques; what follows is hands-on Python coding on a Python Notebook. The
    book will use this learn-then-code pattern in all the chapters. It is time to
    get your hands dirty and write Python code.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 本章分为两部分。前半部分讨论了各种概念和技巧；接下来的部分是基于 Python Notebook 的实践编码。本书将在所有章节中使用这种“学习-然后编码”的模式。现在是时候动手编写
    Python 代码了。
- en: Python Notebook
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python Notebook
- en: '**Jupyter Notebook** is an open source web application that is the de facto
    choice for AI, ML, and data scientists. Jupyter Notebook supports multiple computer
    languages, and the most popular is Python.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**Jupyter Notebook** 是一个开源网页应用程序，是 AI、ML 和数据科学家的事实标准选择。Jupyter Notebook 支持多种编程语言，其中最受欢迎的是
    Python。'
- en: Throughout this book, the term **Python Notebook** will be used synonymously
    for **Jupyter Notebook**, **JupyterLab**, and **Google Colab** **Jupyter Notebook**.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，**Python Notebook** 这个术语将与 **Jupyter Notebook**、**JupyterLab** 和 **Google
    Colab** **Jupyter Notebook** 同义使用。
- en: For Python developers, there are many choices of **integrated development environment**
    (**IDE**) platforms, such as **Integrated Development and Learning Environment**
    (**IDLE**), PyCharm, Microsoft Visual Studio, Atom, Sublime, and many more. Still,
    a Python Notebook is the preferred choice for AI, ML, and data scientists. It
    is an interactive IDE fit for exploring, coding, and deploying AI projects.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Python 开发者来说，有很多集成开发环境（**IDE**）平台可供选择，例如**集成开发和学习环境**（**IDLE**）、PyCharm、Microsoft
    Visual Studio、Atom、Sublime 等等。然而，Python Notebook 是 AI、ML 和数据科学家首选的工具。它是一个互动式的
    IDE，适合探索、编写和部署 AI 项目。
- en: Fun fact
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: The easiest learning method is reading this book, running the code, and hacking
    it. This book cannot cover all scenarios; therefore, you must be comfortable with
    hacking the code so that it matches your real-world dataset. The Python Notebook
    is designed for interactivity. It gives us the freedom to play, explore, and make
    mistakes.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的学习方法是阅读本书，运行代码并进行修改。本书无法覆盖所有场景，因此你必须熟悉修改代码，使其适应你的实际数据集。Python Notebook 旨在实现交互性，赋予我们自由去玩、探索并犯错。
- en: 'Python Notebook is the development tool of choice, and in particular, we will
    review the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Python Notebook 是开发工具的首选，特别是，我们将回顾以下内容：
- en: Google Colab
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Colab
- en: Python Notebook options
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python Notebook 选项
- en: Installing Python Notebook
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Python Notebook
- en: Let’s begin with Google Colab.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 Google Colab 开始。
- en: Google Colab
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google Colab
- en: '**Google Colab Jupyter Notebook** with Python is one of the popular options
    for developing AI and ML projects. All you need is a Gmail account.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Colab Jupyter Notebook** 配合 Python 是开发 AI 和 ML 项目的流行选择。你只需要一个 Gmail
    账户。'
- en: Colab can be found at [https://colab.research.google.com/](https://colab.research.google.com/).
    The free Colab version is sufficient for the code in this book; the Pro+ version
    enables more CPU and GPU RAM.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Colab 可以通过 [https://colab.research.google.com/](https://colab.research.google.com/)
    访问。本书中的代码使用免费版本的 Colab 足够了，Pro+ 版本提供更多的 CPU 和 GPU RAM。
- en: 'After logging in to Colab, you can retrieve this book’s Python Notebooks from
    the following GitHub URL: https://github.com/PacktPublishing/data-augmentation-with-python.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 登录 Colab 后，你可以从以下 GitHub URL 获取本书的 Python Notebooks：[https://github.com/PacktPublishing/data-augmentation-with-python](https://github.com/PacktPublishing/data-augmentation-with-python)。
- en: 'You can start using Colab by using one of the following options:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下任意一种方式开始使用 Colab：
- en: 'The *first method* of opening a Python Notebook is copying it from GitHub.
    From Colab, go to the `.``ipynb`) file:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 Python Notebook 的*第一种方法*是从 GitHub 复制它。从 Colab 中，转到 `.ipynb` 文件：
- en: '![Figure 1.2 – Loading a Python Notebook from GitHub](img/B17990_01_02.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 从 GitHub 加载 Python Notebook](img/B17990_01_02.jpg)'
- en: Figure 1.2 – Loading a Python Notebook from GitHub
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 从 GitHub 加载 Python Notebook
- en: 'The *second method* of opening a Python Notebook is auto-loading it from GitHub.
    Go to the GitHub link mentioned previously and click on the Python Notebook (`ipynb`)
    file. Click the blue-colored **Open in Colab** button, as shown in *Figure 1**.3*;
    it should be on the first line of the Python Notebook. It will launch Colab and
    load in the Python Notebook automatically:'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 Python Notebook的*第二种方法*是通过 GitHub 自动加载。前往之前提到的 GitHub 链接并点击 Python Notebook
    (`ipynb`) 文件。点击蓝色的**在 Colab 中打开**按钮，如*图 1.3*所示；它应该出现在 Python Notebook 的第一行。这将启动
    Colab 并自动加载 Python Notebook：
- en: '![Figure 1.3 – Loading a Python Notebook from Colab](img/B17990_01_03.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 从 Colab 加载 Python Notebook](img/B17990_01_03.jpg)'
- en: Figure 1.3 – Loading a Python Notebook from Colab
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – 从 Colab 加载 Python Notebook
- en: Ensure you save a copy of the Python Notebook to your local Google Drive by
    clicking on the **File** menu and selecting the **Save a copy in Drive** option.
    Afterward, close the original and use the copy version.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保通过点击**文件**菜单并选择**将副本保存到 Drive**选项，将 Python Notebook 保存到本地 Google Drive。之后，关闭原文件并使用副本版本。
- en: 'The *third method* of opening a Python Notebook is by downloading a copy from
    GitHub. Upload the Python Notebook to Colab by clicking on the **File** menu,
    choosing **Open Notebook**, then clicking on the **Upload** tab, as shown in *Figure
    1**.4*:'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 Python Notebook 的*第三种方法*是通过从 GitHub 下载副本。通过点击**文件**菜单，选择**打开 Notebook**，然后点击**上传**选项卡，将
    Python Notebook 上传到 Colab，如*图 1.4*所示：
- en: '![Figure 1.4 – Loading a Python Notebook by uploading it to Colab](img/B17990_01_04.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – 通过上传到 Colab 加载 Python Notebook](img/B17990_01_04.jpg)'
- en: Figure 1.4 – Loading a Python Notebook by uploading it to Colab
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 通过上传到 Colab 加载 Python Notebook
- en: Fun fact
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: For a quick overview of Colab’s features, go to [https://colab.research.google.com/notebooks/basic_features_overview.ipynb](https://colab.research.google.com/notebooks/basic_features_overview.ipynb).
    For a tutorial on how to use a Python Notebook, go to [https://colab.research.google.com/github/cs231n/cs231n.github.io/blob/master/jupyter-notebook-tutorial.ipynb](https://colab.research.google.com/github/cs231n/cs231n.github.io/blob/master/jupyter-notebook-tutorial.ipynb).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 若要快速了解 Colab 的功能，请访问[https://colab.research.google.com/notebooks/basic_features_overview.ipynb](https://colab.research.google.com/notebooks/basic_features_overview.ipynb)。有关如何使用
    Python Notebook 的教程，请访问[https://colab.research.google.com/github/cs231n/cs231n.github.io/blob/master/jupyter-notebook-tutorial.ipynb](https://colab.research.google.com/github/cs231n/cs231n.github.io/blob/master/jupyter-notebook-tutorial.ipynb)。
- en: 'Choosing **Colab** follows the same rationale as selecting an IDE: it is based
    mainly on your preferences. The following section describes additional Python
    Notebook options.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**Colab**的理由与选择 IDE 相同：主要基于您的偏好。以下部分描述了额外的 Python Notebook 选项。
- en: Additional Python Notebook options
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他 Python Notebook 选项
- en: Python notebooks are available in free and paid versions from many online companies,
    such as Microsoft, Amazon, Kaggle, Paperspace, and others. Using more than one
    vendor is typical because a Python Notebook behaves the same way across multiple
    vendors. However, it is similar to choosing an IDE – once selected, we tend to
    stay in the same environment.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Python Notebooks 提供免费版和付费版，许多在线公司提供，例如 Microsoft、Amazon、Kaggle、Paperspace 等。使用多个供应商是常见的做法，因为
    Python Notebook 在不同供应商间表现相同。然而，这就像选择 IDE 一样——一旦选择了一个，通常会继续在同一个环境中工作。
- en: 'You can use the following feature criteria to select a Python Notebook:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下功能标准来选择一个 Python Notebook：
- en: Easy to set up. Can you load and run a Python Notebook in 15 minutes?
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于设置。您能在 15 分钟内加载并运行一个 Python Notebook 吗？
- en: A free version where you can run the Python Notebooks in this book.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种免费的版本，您可以在此书中运行 Python Notebooks。
- en: Free CPU and GPU.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 免费的 CPU 和 GPU。
- en: Free permanent storage for the Python Notebooks and versioning.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python Notebooks 和版本的免费永久存储。
- en: Easy access to GitHub.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松访问 GitHub。
- en: Easy to upload and download the Python Notebooks to and from the local disk
    drive.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于上传和下载 Python Notebooks 到本地磁盘驱动器。
- en: Option to upgrade to a paid version for faster and additional RAM in terms of
    CPU and GPU.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级到付费版以获得更快的处理速度和更多的 CPU 与 GPU 内存。
- en: 'The choice of Python Notebook is based on your needs, preferences, or familiarity.
    You don’t have to use Google Colab for the lessons in this book. This book’s Python
    Notebooks will run on, but are not limited to, the following vendors:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 Python Notebook 的方式取决于您的需求、偏好或熟悉程度。您不必在本书的学习中使用 Google Colab。本书中的 Python
    Notebooks 可以在以下供应商上运行，但不限于这些：
- en: Google Colab
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Colab
- en: Kaggle Notebooks
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kaggle Notebooks
- en: Deepnote
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Deepnote
- en: Amazon SageMaker Studio Lab
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon SageMaker Studio Lab
- en: Paperspace Gradient
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paperspace Gradient
- en: DataCrunch
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataCrunch
- en: Microsoft Notebooks in Visual Studio Code
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio Code 中的 Microsoft Notebooks
- en: The cloud-based options depend on having fast internet access at all times,
    so if internet access is a problem, you might want to install the Python Notebook
    locally on your laptop/computer. The installation process is straightforward.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 基于云的选项依赖于始终有快速的互联网连接，因此如果网络连接是一个问题，你可能需要在笔记本电脑/计算机上本地安装 Python Notebook。安装过程非常简单。
- en: Installing Python Notebook
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Python Notebook
- en: 'Python Notebook can be installed on a local desktop or laptop for Windows,
    Mac, and Linux. The advantages of the online version are as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Python Notebook 可以在 Windows、Mac 和 Linux 的本地桌面或笔记本上安装。在线版本的优势如下：
- en: Fully customizable
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全可定制
- en: No limit on runtime – that is, no timeout on the Python Notebook during long
    training sessions
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无运行时限制——即在长时间训练过程中，Python Notebook 不会超时
- en: No rules or arbitrary limitations
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有规则或随意的限制
- en: 'The disadvantage is that you have to set up and maintain the environment. For
    example, you must do the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点是你必须设置并维护环境。例如，你需要做以下操作：
- en: Install Python and Jupyter Notebook
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Python 和 Jupyter Notebook
- en: Install and configure the NVIDIA graphic card (optional for data augmentation)
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装并配置 NVIDIA 显卡（对于数据增强可选）
- en: Maintain and update dozens of dependency Python libraries
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护和更新几十个依赖的 Python 库
- en: Upgrade the disk drive, CPU, and GPU RAM
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级硬盘驱动器、CPU 和 GPU 内存
- en: 'Installing Python Notebook is easy, requiring just one console or terminal
    command, but first, check the Python version. Type the following command in the
    terminal or console application:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Python Notebook 很简单，只需要一个控制台或终端命令，但首先要检查 Python 版本。在终端或控制台应用中输入以下命令：
- en: '[PRE0]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You should have version 3.7.0 or later. If you don’t have Python 3 or have an
    older version, install Python from [https://www.python.org/downloads/](https://www.python.org/downloads/).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该安装 3.7.0 或更高版本。如果你没有 Python 3 或安装的是较旧版本，请从 [https://www.python.org/downloads/](https://www.python.org/downloads/)
    安装 Python。
- en: 'Install JupyterLab using `pip`, which contains Python Notebook. On a Windows,
    Mac, or Linux laptop, use the following command for all three OSs:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `pip` 安装 JupyterLab，其中包含 Python Notebook。在 Windows、Mac 或 Linux 笔记本上，使用以下命令适用于所有三种操作系统：
- en: '[PRE1]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you don’t like `pip`, use `conda`:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不喜欢 `pip`，可以使用 `conda`：
- en: '[PRE2]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Other than `pip` and `conda`, you can use `mamba`:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 `pip` 和 `conda`，你还可以使用 `mamba`：
- en: '[PRE3]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Start JupyterLab or Python Notebook with the following command:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令启动 JupyterLab 或 Python Notebook：
- en: '[PRE4]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The result of installing Python Notebook on a Mac is as follows:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Mac 上安装 Python Notebook 的结果如下：
- en: '![Figure 1.5 – Jupyter Notebook on a local MacBook](img/B17990_01_05.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图1.5 – 本地 MacBook 上的 Jupyter Notebook](img/B17990_01_05.jpg)'
- en: Figure 1.5 – Jupyter Notebook on a local MacBook
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – 本地 MacBook 上的 Jupyter Notebook
- en: 'The next step is cloning this book’s Python Notebook from the respective GitHub
    link. You can use the GitHub desktop app, the GitHub command on the terminal command
    line, or the Python Notebook using the magic character exclamation point (`!`)
    and standard GitHub command, as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是从相应的 GitHub 链接克隆本书的 Python Notebook。你可以使用 GitHub 桌面应用程序、终端命令行上的 GitHub 命令，或者使用带有魔法字符感叹号（`!`）和标准
    GitHub 命令的 Python Notebook，具体如下：
- en: '[PRE5]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Regardless of whether you choose the cloud-based options, such as Google Colab
    or Kaggle, or work offline, the Python Notebook code will work the same. The following
    section will dive into the Python Notebook programming style and introduce you
    to Pluto.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择基于云的选项（如 Google Colab 或 Kaggle）还是离线工作，Python Notebook 代码都能一样运行。接下来的部分将深入探讨
    Python Notebook 编程风格，并介绍 Pluto。
- en: Programming styles
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编程风格
- en: The coding style is the standard, tried-and-true method of object-oriented programing
    and is the variable naming convention for functions and variables.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 编码风格是面向对象编程的标准、经过验证的方法，并且是函数和变量的命名约定。
- en: Fun fact
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 趣味事实
- en: The majority of Python code you find on blogs and websites is snippets. Therefore,
    they are not very helpful in studying fundamental topics such as data augmentation.
    In addition, Python on a Notebook induces lazy practices because programmers think
    each Notebook’s code cell is a separate snippet from the whole. In reality, the
    entire Python Notebook is one program. Chief among the benefits of using best
    programming practices is that it’s easier to learn and retain knowledge. A programming
    style may include many standard best practices, but it is also unique to your
    programming style. Use it to your advantage by learning new concepts and techniques
    faster, such as how to write data augmentation code.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数你在博客和网站上找到的 Python 代码只是代码片段。因此，它们在学习像数据增强这样的基础主题时帮助不大。此外，在 Notebook 上使用 Python
    会导致懒惰的编程习惯，因为程序员认为每个 Notebook 的代码单元都是一个与整体分开的片段。实际上，整个 Python Notebook 是一个程序。使用最佳编程实践的主要好处之一是，它能帮助你更容易地学习和记住知识。一种编程风格可能包括许多标准的最佳实践，但它也独具个性。通过这种方式，你可以更快地学习新概念和技巧，比如如何编写数据增强代码。
- en: 'There are quite a few topics in this section. In particular, we will cover
    the following concepts:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包含了不少主题，特别是我们将覆盖以下几个概念：
- en: Source control
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码管理
- en: The `PackTDataAug` class
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PackTDataAug` 类'
- en: Naming convention
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名规范
- en: Extend base class
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展基础类
- en: Referencing library
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引用库
- en: Exporting Python code
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出 Python 代码
- en: Pluto
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pluto
- en: Let’s begin with source control.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从源代码管理开始。
- en: Source control
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 源代码管理
- en: The first rule of programming is to manage the source code version. It will
    help you answer questions such as, *What did you code last week?*, *What was fixed
    yesterday?*, *What new feature was added today?*, and *How do I share my code
    with* *my team?*
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 编程的第一条规则是管理源代码版本。这将帮助你回答以下问题：*你上周写了什么代码？*、*昨天修复了什么？*、*今天添加了什么新功能？* 和 *如何与我的团队共享代码？*
- en: The Git process manages the source code for one person or a team. Among many
    of Git's virtues is the freedom to make mistakes. In other words, Git allows you
    to try something new or break the code because you can always roll back to a previous
    version.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Git 过程管理一个人或一个团队的源代码。Git 的诸多优点之一是它允许犯错误。换句话说，Git 允许你尝试新的东西或破坏代码，因为你始终可以回滚到先前的版本。
- en: For source control, **GitHub** is a popular website, and **Bitbucket** comes
    in second place. You can use the Git process from a command-line terminal or Git
    applications, such as GitHub Desktop.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 对于源代码管理，**GitHub** 是一个流行的网站，而 **Bitbucket** 排名第二。你可以通过命令行终端或 Git 应用程序（如 GitHub
    Desktop）使用 Git 过程。
- en: 'Google Colab has a built-in Git feature. You have seen how easy it is to load
    a Python Notebook on Google Colab, and saving it is just as easy. In Git, you
    must commit and push. The steps are as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Google Colab 内置了 Git 功能。你已经看到将 Python Notebook 加载到 Google Colab 上是多么简单，保存它也同样容易。在
    Git 中，你必须进行提交并推送。步骤如下：
- en: From the **Colab** menu, click on **File**.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Colab** 菜单中，点击 **文件**。
- en: Select **Save a copy** **in GitHub**.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **保存副本** **到 GitHub**。
- en: Enter your GitHub URL in the **Repository** field and select the code branch.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **仓库** 字段中输入你的 GitHub URL 并选择代码分支。
- en: Enter the commit message.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入提交信息。
- en: 'Click **OK**:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **确定**：
- en: '![Figure 1.6 – Google Colab – saving to GitHub](img/B17990_01_06.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – Google Colab – 保存到 GitHub](img/B17990_01_06.jpg)'
- en: Figure 1.6 – Google Colab – saving to GitHub
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – Google Colab – 保存到 GitHub
- en: '*Figure 1**.6* shows the interface between Google Colab Python Notebook and
    GitHub. Next, we’ll look at the base class, `PacktDataAug`.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1.6* 显示了 Google Colab Python Notebook 和 GitHub 之间的界面。接下来，我们将查看基础类 `PacktDataAug`。'
- en: The PacktDataAug class
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PacktDataAug 类
- en: The code for the base class is neither original nor unique to this book. It
    is standard Python code for constructing an object-oriented class. The name of
    the object is different for every project. For this book, the name of the class
    is `PacktDataAug`.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 基础类的代码既不是原创的，也不是本书独有的。它是构建面向对象类的标准 Python 代码。对象的名称在每个项目中都不同。对于本书来说，类的名称是 `PacktDataAug`。
- en: Every chapter begins with this base class, and we will add new methods to the
    object using a Python decorator as we learn new concepts and techniques for augmenting
    data.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章都以这个基础类开始，随着我们学习新概念和数据增强技巧，我们将使用 Python 装饰器向对象添加新方法。
- en: This exercise's Python code is in the Python Notebooks and on this book’s GitHub
    repository. Thus, I will not copy or display the complete code in this book. I
    will show relevant code lines, explain their significance, and rely on you to
    study the entire code in the Python Notebooks.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 本练习的 Python 代码在 Python Notebooks 和本书的 GitHub 仓库中。因此，我不会在本书中复制或展示完整代码。我会展示相关代码行，解释其意义，并依赖你在
    Python Notebooks 中学习整个代码。
- en: 'The definition of the base class is as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 基类的定义如下：
- en: '[PRE6]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`PacktDataAug` is inherent from the based `Object` class, and the definition
    has two optional parameters:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`PacktDataAug`继承自基础的`Object`类，定义中有两个可选参数：'
- en: The `name` parameter is a string, and it is the name of your object. It has
    no essential function other than labeling your object.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`参数是一个字符串，它表示你的对象的名称。它没有其他实质性功能，仅用于标记对象。'
- en: '`is_verbose` is a Boolean that tells the object to print the object information
    during instantiation.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`is_verbose`是一个布尔值，指示对象在实例化时是否打印对象信息。'
- en: The next topic we will cover is the code naming convention.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分我们将讨论代码命名规范。
- en: Naming convention
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命名规范
- en: 'The code naming convention is as follows:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 代码命名规范如下：
- en: The function’s name will begin with an action verb, such as `print_`, `fetch_`,
    or `say_`.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数的名称将以动词开头，如`print_`、`fetch_`或`say_`。
- en: A function that returns a Boolean value begins with `is_` or `has_`.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回布尔值的函数以`is_`或`has_`开头。
- en: Variable names begin with a noun, not an action verb.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量名称以名词开头，而不是动词。
- en: There is a heated discussion in the Python community on whether to use camelCase
    – for example, `fetchKaggleData()` – or use lowercase with underscores – for example,
    `fetch_kaggle_data()`. This book uses lowercase with underscores.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python社区关于是否使用驼峰命名法——例如`fetchKaggleData()`——还是使用小写字母加下划线——例如`fetch_kaggle_data()`——展开了激烈的讨论。本书采用小写字母加下划线的命名方式。
- en: Functions or variables that begin with underscores are temporary variables or
    helper functions – for example, `_image_auto_id`, `_drop_images()`, and `_append_full_path()`.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以单下划线开头的函数或变量是临时变量或辅助函数——例如`_image_auto_id`、`_drop_images()`和`_append_full_path()`。
- en: Variable or function abbreviations are sparingly used because the descriptive
    name is easier to understand. In addition, Colab has auto-complete functionality.
    Thus, it makes using long, descriptive names easier to type with fewer typos.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量或函数的缩写很少使用，因为描述性名称更容易理解。此外，Colab 有自动补全功能，因此使用长而描述性的名称可以更容易输入且减少打错字的机会。
- en: 'The code for instantiating a base class is standard Python code. I used `pluto`
    as the object name, but you can choose any name:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化基类的代码是标准的 Python 代码。我使用了`pluto`作为对象名称，但你可以选择任何名称：
- en: '[PRE7]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output is as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE8]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The base class comes with two simple helper methods. They are both for printing
    pretty – that is, making the printing of status or output messages neatly centered.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 基类带有两个简单的辅助方法。它们都用于打印美观的输出——也就是将状态或输出信息整齐地居中打印。
- en: The `self._ph()` method prints the header line with an equal number of dashes
    on both sides of the colon character, while the `self._pp()` function takes two
    parameters, one for the left-hand side and the other for the right-hand side.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`self._ph()`方法打印带有等长破折号的头部行，破折号两侧各有一个冒号字符，而`self._pp()`函数有两个参数，一个用于左侧，另一个用于右侧。'
- en: 'You have already seen the result of instantiating pluto with the default parameter
    of `is_verbose=True`. As standard practice, I will not print the complete code
    in this book. I am relying on you to view and run the code in the Python Notebook,
    but I will make an exception for this chapter and show you the snippet of code
    for the `is_verbose` option. This demonstrates how easy it is to read Python code
    in the Python Notebook. The snippet is as follows:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到过使用`is_verbose=True`默认参数实例化`pluto`的结果。作为标准做法，我不会在本书中打印完整代码。我依赖你在 Python
    Notebook 中查看和运行代码，但在这一章中我会破例，展示`is_verbose`选项的代码片段。这展示了在 Python Notebook 中阅读 Python
    代码是多么容易。代码片段如下：
- en: '[PRE9]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Fun fact
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 趣味小贴士
- en: This book’s primary goal is to help you write clean and easy-to-understand code
    and not write compact code that may lead to obfuscation.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的主要目标是帮助你编写干净且易于理解的代码，而不是编写可能导致混淆的紧凑代码。
- en: Another powerful programming technique is using a Python decorator to extend
    the base class.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个强大的编程技巧是使用 Python 装饰器扩展基类。
- en: Extend base class
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展基类
- en: This book has been designed as an interactive journey where you learn and discover
    new data augmentation concepts and techniques sequentially, from image, text,
    and audio data to tabular data. The object, `pluto`, will acquire new methods
    as the journey progresses. Thus, having a technique to extend the class with new
    functions is essential. In contrast, providing the fully built class at the beginning
    of this book would not allow you to embark on the learning journey. Learning by
    exploration helps you retain knowledge longer compared to learning by memorization.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 本书被设计为一个互动式的学习旅程，您将逐步学习和发现新的数据增强概念和技术，从图像、文本和音频数据到表格数据。随着旅程的推进，对象`pluto`将获得新的方法。因此，拥有一种扩展类并添加新功能的技术至关重要。相比之下，若在本书开始时就提供完全构建好的类，您将无法开始学习之旅。通过探索式学习，您能比通过死记硬背更长时间地保持知识。
- en: The `@add_method()` decorator function extends any class with a new function.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`@add_method()`装饰器函数能够为任何类扩展新功能。'
- en: Here is an excellent example of extending the base class. The root cause of
    Python’s most common and frustrating error is having a different library version
    from the class homework or code snippet copy from the Python community. Python
    data scientists seldom write code from scratch and rely heavily on existing libraries.
    Thus, printing the Python library versions on a local or cloud-based server would
    save hours of aggravating debugging sessions.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这是扩展基类的一个出色示例。Python中最常见且令人沮丧的错误根本原因是库版本与类作业或从Python社区复制的代码片段不同。Python数据科学家很少从零开始编写代码，而是大量依赖现有的库。因此，在本地或云服务器上打印Python库版本，将节省数小时烦人的调试时间。
- en: 'To resolve this issue, we can extend the `PacktDataAug` class or use the journey
    metaphor of teaching Pluto a new trick. The new method, `say_sys_info()`, prints
    this book’s expected system library version on the left-hand side and the actual
    library version on your local or remote servers on the right-hand side. The decorator’s
    definition for extending the Pluto class is as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决此问题，我们可以扩展`PacktDataAug`类，或者使用将Pluto教会新技能的旅程隐喻。新的方法`say_sys_info()`将在左侧打印本书预期的系统库版本，在您的本地或远程服务器上打印实际的库版本。扩展Pluto类的装饰器定义如下：
- en: '[PRE10]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'After running the aforementioned code cell, you can ask Pluto to print the
    library version using the following command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行上述代码单元后，您可以使用以下命令让Pluto打印出库版本：
- en: '[PRE11]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The results are as follows:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE12]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If your result contains libraries that are older versions than this book’s expected
    value, you might run into bugs while working through the lessons. For example,
    the **Pillow** (**PIL**) library version is 7.1.2, which is lower than the book’s
    expected version of 9.0.0.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的结果包含比本书预期版本更旧的库版本，在学习过程中可能会遇到错误。例如，**Pillow**（**PIL**）库的版本是7.1.2，低于本书预期的9.0.0版本。
- en: 'To correct this issue, run the following code line in the Notebook to install
    the 9.0.0 version:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，请在Notebook中运行以下代码行来安装9.0.0版本：
- en: '[PRE13]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Rerunning `pluto.say_sys_info()` should now show the **PIL** version as 9.0.0.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 重新运行`pluto.say_sys_info()`应该会显示**PIL**版本为9.0.0。
- en: Fun challenge
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: Extend Pluto with a new function to display the system’s GPU total RAM and available
    free RAM. The function name can be `fetch_system_gpu_ram()`. A hint is to use
    the `torch` library and the `torch.to cuda.memory_allocated()` and `torch.cuda.memory_reserved()`
    functions. You can use this technique to extend any Python library class. For
    example, to add a new function to the `numpy` library, you can use the `@``add_method(numpy)`
    decorator.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展Pluto类，新增一个函数来显示系统的GPU总RAM和可用的空闲RAM。该函数名可以是`fetch_system_gpu_ram()`。提示：可以使用`torch`库以及`torch.to
    cuda.memory_allocated()`和`torch.cuda.memory_reserved()`函数。您可以使用这种技巧扩展任何Python库类。例如，要向`numpy`库添加新函数，可以使用`@add_method(numpy)`装饰器。
- en: There are a few more programming-style topics. Next, you’ll discover how best
    to reference a library.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些编程风格的话题。接下来，您将学习如何最佳地引用库。
- en: Referencing a library
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用库
- en: 'Python is a flexible language when it comes to importing libraries. There are
    aliases and direct imports. Here are a few examples of importing the same function
    – that is, `plot()`:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Python是一种灵活的语言，支持导入库时使用别名或直接导入。以下是导入相同函数`plot()`的一些例子：
- en: '[PRE14]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The salient point is that all these examples are valid, and that is both good
    and bad. It enables flexibility, but at the same time, sharing code snippets online
    or maintaining code can lead to frustration when they break. Python often gives
    an unintelligible error message when the system cannot locate the function. To
    fix this bug, you need to know which library to upgrade. The problem is compounded
    when many libraries use the same function name, such as the `imread()` method,
    which appears in at least four libraries.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 关键点是所有这些示例都是有效的，这既好又坏。它提供了灵活性，但同时，当在线分享代码片段或维护代码时，出现问题时会让人感到沮丧，因为Python经常在系统无法找到函数时给出难以理解的错误信息。要修复这个问题，你需要知道需要升级哪个库。当许多库使用相同的函数名时，问题变得更加复杂，例如`imread()`方法，它至少出现在四个库中。
- en: 'By adhering to this book’s programming style, when the `imread()` method fails,
    you know which library needs to be upgraded or, in rare conditions, downgraded.
    The code is as follows:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循本书的编程风格，当`imread()`方法失败时，你就知道需要升级或在极少数情况下降级哪个库。代码如下：
- en: '[PRE15]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '`matplotlib` might need to be upgraded, or equally, you might be using the
    wrong `imread()` method. It could be from `cv2.imread()`.'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib`可能需要升级，或者你可能正在使用错误的`imread()`方法。它可能来自`cv2.imread()`。'
- en: The next concept is exporting. It may not strictly belong to the programming
    style, but it is necessary if you wish to reuse and add extra functions to this
    chapter’s code.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个概念是导出。它可能不严格属于编程风格的一部分，但如果你希望重用并为本章的代码添加额外功能，它是必要的。
- en: Exporting Python code
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导出Python代码
- en: This book ensures that every chapter has its own Python Notebook. The advanced
    image, text, and audio chapters need the previous chapter's code. Thus, it is
    necessary to export the selected Python code cells from the Python Notebook.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 本书确保每一章都有自己的Python Notebook。高级的图像、文本和音频章节需要上一章的代码。因此，需要从Python Notebook中导出选定的Python代码单元。
- en: The Python Notebook has both markup and code cells, and not all code cells must
    be exported. You only need to export code cells that define new functions. For
    the code cells that you want to export to a Python file, use the Python Notebook
    `%%writefile file_name.py` magic command at the beginning of the code cells and
    `%%writefile -a file_name.py` to append additional code to the file. `file_name`
    is the name of the Python file – for example, `pluto_chapter_1.py`.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: Python Notebook既有标记单元也有代码单元，并不是所有的代码单元都需要导出。你只需要导出那些定义新函数的代码单元。对于你希望导出到Python文件的代码单元，在代码单元的开头使用Python
    Notebook中的`%%writefile file_name.py`魔法命令，并使用`%%writefile -a file_name.py`将额外的代码追加到文件中。`file_name`是Python文件的名称——例如，`pluto_chapter_1.py`。
- en: The last and best part of the programming style is introducing **Pluto** as
    your coding companion.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 编程风格中最后也是最重要的部分是将**Pluto**引入作为你的编程伴侣。
- en: Pluto
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pluto
- en: 'Pluto uses a whimsical idea of teaching by including dialogs with an imaginary
    digital character. We can give Pluto tasks to complete. It has a friendly tone,
    and sometimes the author addresses you directly. It moves away from the direct
    lecturing format. There are scholarly papers that explain how lecturing in monologue
    is not the optimal method for learning new concepts, such as the article *Why
    Students Learn More From Dialogue- Than Monologue-Videos: Analyses of Peer Interactions*
    by Michelene T. H. Chi, Seokmin Kang, and David L. Yaghmourian that was published
    by the *Journal of the Learning Sciences* in 2016.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 'Pluto采用了一种异想天开的教学方式，通过与虚拟数字角色的对话来进行教学。我们可以给Pluto分配任务。它的语气友好，有时作者会直接与你对话。它摒弃了直接讲授的方式。有学术论文解释了单口相声式讲授不是学习新概念的最佳方法，例如Michelene
    T. H. Chi、Seokmin Kang和David L. Yaghmourian于2016年在《学习科学杂志》上发表的文章*Why Students
    Learn More From Dialogue- Than Monologue-Videos: Analyses of Peer Interactions*。'
- en: You are most likely reading this book alone rather than engaging in a group,
    learning how to write augmentation code together. Thus, creating an imaginary
    companion as the instantiated object might infuse imagination. It makes writing
    and reading more accessible – for example, the `pluto.fetch_kaggle_data()` function
    is self-explanatory, and little additional documentation is needed. It simplifies
    Python code to a common subject and action-verb-sentence format.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 你很可能是独自阅读本书，而不是与小组一起学习如何编写增强代码。因此，创建一个虚拟伴侣作为实例化对象可能会激发想象力。它让编写和阅读变得更容易——例如，`pluto.fetch_kaggle_data()`函数一目了然，几乎不需要额外文档。它将Python代码简化为一个常见的主题和动词句式。
- en: Fun challenge
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: Change the object name from `pluto = PackTDataAug("Pluto")` to `hanna =` `PackTDataAug("Hanna")`.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象名称从`pluto = PackTDataAug("Pluto")`更改为`hanna =` `PackTDataAug("Hanna")`。
- en: '**Fair warning**: Do not choose your beloved cat as the object’s name because
    felines will not listen to any commands. Imagine asking your cat to play fetch.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**友情提醒**：不要选择你心爱的猫作为对象名称，因为猫咪不会听从任何命令。想象一下，问你的猫玩接飞盘游戏。'
- en: Summary
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned that data augmentation is essential for achieving
    higher accuracy prediction in DL and generative AI. Data augmentation is an economical
    option for extending a dataset without the difficulty of purchasing and labeling
    new data.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学到了数据增强在深度学习（DL）和生成式AI中对于提高预测准确性至关重要。数据增强是一种经济的方式，可以在不需要购买和标注新数据的情况下扩展数据集。
- en: The four input data types are image, text, audio, and tabular. Each data type
    faces different challenges, techniques, and limitations. Furthermore, the dataset
    dictates which functions and parameters are suitable. For example, people’s faces
    and aerial photographs are image datasets, but you can’t expand the data by vertically
    flipping people’s images; however, you can vertically flip aerial photos.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 四种输入数据类型分别是图像、文本、音频和表格。每种数据类型面临不同的挑战、技术和局限性。此外，数据集决定了哪些函数和参数是合适的。例如，人脸和航拍照片是图像数据集，但你不能通过垂直翻转人脸图像来扩展数据；然而，你可以垂直翻转航拍照片。
- en: In the second part of this chapter, you used **Python notebooks** to reinforce
    your learning of these augmentation concepts. This involved selecting a Python
    Notebook as the default IDE to access a cloud-based platform, such as **Google
    Colab** or **Kaggle**, or installing the Python Notebook locally on your laptop.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第二部分，你使用了**Python笔记本**来加深对这些增强概念的理解。你选择了Python笔记本作为默认的IDE，以便访问基于云的平台，如**Google
    Colab**或**Kaggle**，或者在你的笔记本电脑上本地安装Python笔记本。
- en: The *Programming styles* section lay the foundation for the Python Notebook’s
    structure. It touched on **GitHub** as a form of source control, using base classes,
    extending base classes, long library function names, exporting to Python, and
    introducing Pluto.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '*编程风格*部分为Python笔记本的结构奠定了基础。它提到了**GitHub**作为一种源代码管理形式，使用基类、扩展基类、长函数名、导出到Python以及引入Pluto。'
- en: This chapter laid the foundation with Pluto as the main object. Pluto does not
    start with complete data augmentation functions – he begins with a minimum structure,
    and as he learns new data augmentation concepts and techniques from chapter to
    chapter, he will add new methods to his arsenal.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 本章以Pluto作为主要对象奠定了基础。Pluto并没有从完整的数据增强功能开始——他从一个最小的结构开始，并随着每一章学习新的数据增强概念和技术，逐步将新方法添加到他的工具库中。
- en: By the end of this book, Pluto and you will learn techniques regarding how to
    augment image, text, audio, and tabular data. In other words, you will learn how
    to write a powerful image, text, audio, and tabular augmentation class from scratch
    using real-world data, which you can reuse in future data augmentation projects.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 到本书结束时，Pluto和你将学到关于如何增强图像、文本、音频和表格数据的技术。换句话说，你将学会如何从零开始编写强大的图像、文本、音频和表格增强类，使用真实世界的数据，这些类可以在未来的数据增强项目中复用。
- en: Throughout this chapter, there were *fun facts* and *fun challenges*. Pluto
    hopes you will take advantage of what’s been provided and expand your experience
    beyond the scope of this chapter.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中有*有趣的事实*和*有趣的挑战*。Pluto希望你能利用提供的内容，拓展你的经验，超越本章的范围。
- en: In [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038), *Biases in Data Augmentation*,
    Pluto and you will explore how data augmentation can increase biases. Using data
    biases as a guiding principle to data augmentation is an often-overlooked technique.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第2章*](B17990_02.xhtml#_idTextAnchor038)，*数据增强中的偏差*中，Pluto和你将探讨数据增强如何增加偏差。将数据偏差作为数据增强的指导原则是一个常被忽视的技巧。
