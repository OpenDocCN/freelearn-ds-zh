- en: Chapter 3. Finding and Fixing Broken Data Links
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章. 查找和修复损坏的数据链接
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Finding broken data sources in your map document and layer files
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的地图文档和图层文件中查找损坏的数据源
- en: Fixing broken data sources with MapDocument.findAndReplaceWorkspacePaths()
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MapDocument.findAndReplaceWorkspacePaths() 修复损坏的数据源
- en: Fixing broken data sources with MapDocument.replaceWorkspaces()
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MapDocument.replaceWorkspaces() 修复损坏的数据源
- en: Fixing individual layer and table objects with replaceDataSource()
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `replaceDataSource()` 修复单个图层和表对象
- en: Finding broken data sources in all map documents in a folder
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在文件夹中的所有地图文档中查找损坏的数据源
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: It is not uncommon for your GIS data sources to move, migrate to a new data
    format, or be deleted. The result can be broken data sources in many map documents
    or layer files. These broken data sources can't be used until they're fixed, which
    can be an overwhelming process if the same changes need to be made across numerous
    map documents. You can automate the process of finding and fixing these data sources
    using `arcpy.mapping`, without ever having to open the affected map documents.
    Finding broken data sources is a simple process requiring the use of the `ListBrokenDataSources()`
    function, which returns a Python list of all broken data sources in a map document
    or layer file. Typically, this function is used as the first step in a script
    that iterates through the list and fixes the data source. Fixing broken data sources
    can be made in an individual data layer or across all layers in a common workspace.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 GIS 数据源移动、迁移到新的数据格式或被删除的情况并不少见。结果可能导致许多地图文档或图层文件中的数据源损坏。这些损坏的数据源在修复之前无法使用，如果需要在多个地图文档中进行相同的更改，这可能是一个令人难以承受的过程。你可以使用
    `arcpy.mapping` 自动化查找和修复这些数据源的过程，而无需打开受影响的地图文档。查找损坏的数据源是一个简单的过程，需要使用 `ListBrokenDataSources()`
    函数，该函数返回一个包含地图文档或图层文件中所有损坏数据源的 Python 列表。通常，该函数用作脚本中的第一步，该脚本遍历列表并修复数据源。可以在单个数据层或公共工作空间中的所有图层上修复损坏的数据源。
- en: Finding broken data sources in your map document and layer files
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你的地图文档和图层文件中查找损坏的数据源
- en: Broken data sources are a very common problem with map document files. You can
    use `arcpy.mapping` to identify data sources that have moved, been deleted, or
    changed in their format.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 损坏的数据源是地图文档文件中一个非常普遍的问题。你可以使用 `arcpy.mapping` 识别已移动、已删除或格式更改的数据源。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'In ArcMap, a broken data connection is signified by a red exclamation point
    just before the layer name. This is illustrated in the following screenshot. The
    `ListBrokenDataSources()` function in `arcpy.mapping` returns a list of layer
    objects from a map document or layer file that have a broken data connection:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ArcMap 中，损坏的数据连接由图层名称前的红色感叹号表示。以下截图展示了这一点。`arcpy.mapping` 中的 `ListBrokenDataSources()`
    函数返回来自地图文档或图层文件的具有损坏数据连接的图层对象列表：
- en: '![Getting ready](img/B04314_03_1.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/B04314_03_1.jpg)'
- en: How to do it…
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Follow these steps to learn how to find broken data sources in a map document
    file.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下步骤学习如何在地图文档文件中查找损坏的数据源。
- en: Open `C:\ArcpyBook\Ch3\Crime_BrokenDataLinks.mxd` in ArcMap.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch3\Crime_BrokenDataLinks.mxd`。
- en: 'You will see that each of the data sources have been broken. In this case,
    the data has been moved to another folder, but you''d see the same indicator if
    the data had been deleted or migrated to a different format. For example, it is
    not uncommon to convert data from a personal geodatabase to a file geodatabase:'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会看到每个数据源都已损坏。在这种情况下，数据已移动到另一个文件夹，但如果数据被删除或迁移到不同的格式，你也会看到相同的指示器。例如，将数据从个人地理数据库转换为文件地理数据库的情况并不少见：
- en: '![How to do it…](img/B04314_03_2.jpg)'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/B04314_03_2.jpg)'
- en: Close ArcMap.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭 ArcMap。
- en: Open **IDLE** and create a new script window.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 **IDLE** 并创建一个新的脚本窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE0]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Reference the `Crime_BrokenDataLinks.mxd` map document file:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用 `Crime_BrokenDataLinks.mxd` 地图文档文件：
- en: '[PRE1]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Get a list of the broken data sources:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取损坏数据源的列表：
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Iterate the list and print out the layer names:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遍历列表并打印出图层名称：
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output will be printed as follows:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE4]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Save your script as `FindFixBrokenData.py` in the `c:\ArcpyBook\Ch3` folder.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的脚本保存为 `FindFixBrokenData.py`，位于 `c:\ArcpyBook\Ch3` 文件夹中。
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch3\FindFixBrokenData.py`
    solution file.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过检查 `c:\ArcpyBook\code\Ch3\FindFixBrokenData.py` 解决方案文件来检查你的工作。
- en: How it works…
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The `ListBrokenDataSources()` function returns a Python list of `Layer` objects
    that have a broken data source. We then use a `for` loop to iterate this list
    and perform some sort of action for each layer. In this case, we printed out the
    layer names simply to illustrate the data returned by this function. In a later
    recipe, we'll build on this code by fixing these broken data sources.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListBrokenDataSources()` 函数返回一个包含具有损坏数据源的 `Layer` 对象的 Python 列表。然后我们使用一个 `for`
    循环来遍历这个列表并对每个图层执行某种操作。在这种情况下，我们简单地打印出图层名称，只是为了说明该函数返回的数据。在后面的菜谱中，我们将在此基础上构建代码，修复这些损坏的数据源。'
- en: There's more…
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In addition to returning a list of broken data sources from a map document file,
    the `ListBrokenDataSources()` function can also find broken data sources in a
    (`.lyr`) layer file. Simply pass the path to the layer file to have the function
    examine the file for broken data sources. Keep in mind that these functions are
    not needed with `Map` or `Layer` packages, since the data is bundled with these
    files unlike a layer file.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 除了从一个地图文档文件中返回损坏的数据源列表之外，`ListBrokenDataSources()` 函数还可以在（`.lyr`）图层文件中找到损坏的数据源。只需传递图层文件的路径，让函数检查文件中的损坏数据源。请注意，使用
    `Map` 或 `Layer` 包时不需要这些函数，因为这些数据与这些文件捆绑在一起，而图层文件则不同。
- en: Fixing broken data sources with MapDocument.findAndReplaceWorkspacePaths()
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 MapDocument.findAndReplaceWorkspacePaths() 修复损坏的数据源
- en: The `MapDocument.findAndReplaceWorkspacePaths()` method is used to perform global
    find and replace workspace paths for all the layers and tables in a map document.
    You can also replace the paths to multiple workspace types at once. For example,
    you might pass personal and file geodatabase workspace types at the same time.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapDocument.findAndReplaceWorkspacePaths()` 方法用于在地图文档的所有图层和表中执行全局查找和替换工作空间路径。您还可以一次性替换多个工作空间类型的路径。例如，您可能同时传递个人和文件地理数据库工作空间类型。'
- en: Getting ready
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We need to cover some definitions before examining the methods used to fix datasets.
    You'll see these terms used frequently when discussing the methods used to fix
    broken data sources, so you'll need to understand what they mean in this context.
    A **workspace** is simply a container for data. This can be a folder (in the case
    of shapefiles), personal geodatabase, file geodatabase, or an ArcSDE connection.
    A workspace provides the system path to the workspace. In the case of file geodatabases,
    this would include the name of the geodatabase. A **dataset** is simply a feature
    class or table within a workspace, and finally, a **data** **source** is the combination
    of the workspace and dataset names. Don't confuse a dataset with a feature dataset.
    The former is just a generic term for data, while the latter is an object within
    a geodatabase that serves as a container for feature classes and other datasets.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查修复数据集的方法之前，我们需要介绍一些定义。当讨论修复损坏数据源的方法时，您会经常看到这些术语的使用，因此您需要了解它们在这个上下文中的含义。**工作空间**只是一个数据容器。这可以是文件夹（在形状文件的情况下），个人地理数据库，文件地理数据库或
    ArcSDE 连接。工作空间提供了工作空间的系统路径。在文件地理数据库的情况下，这包括地理数据库的名称。**数据集**是工作空间内的一个要素类或表，最后，**数据源**是工作空间和数据集名称的组合。不要将数据集与要素数据集混淆。前者是一个通用的数据术语，而后者是地理数据库中的一个对象，它作为要素类和其他数据集的容器。
- en: There are three `arcpy.mapping` classes involved in fixing broken data sources.
    They are `MapDocument`, `Layer`, and `TableView`. Each class contains methods
    that can be used to fix data sources. In this recipe, we'll examine how you can
    use the `findAndReplaceWorkspacePaths()` method in the `MapDocument` class to
    perform global find and replace operations in the layers and tables of a map document.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在修复损坏的数据源中涉及三个 `arcpy.mapping` 类。它们是 `MapDocument`、`Layer` 和 `TableView`。每个类都包含可以用来修复数据源的方法。在这个菜谱中，我们将检查如何使用
    `MapDocument` 类中的 `findAndReplaceWorkspacePaths()` 方法在地图文档的图层和表中执行全局查找和替换操作。
- en: How to do it…
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to fix layers and tables in a map document
    using `findAndReplaceWorkspacePaths()`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用 `findAndReplaceWorkspacePaths()` 修复地图文档中的图层和表：
- en: Open `c:\ArcpyBook\Ch3\Crime_BrokenDataLinks.mxd` in ArcMap.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `c:\ArcpyBook\Ch3\Crime_BrokenDataLinks.mxd`。
- en: Right-click on any of the layers and select **Properties**.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击任何图层并选择**属性**。
- en: Go to the **Source** tab and you will notice that the location for the layer
    is `ArcpyBook\Ch3\Data\OldData\CityOfSanAntonio.gdb`. This is a file geodatabase
    but the location no longer exists. It has moved to the `C:\ArcpyBook\data` folder.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 **源** 选项卡，您将注意到图层的位置是 `ArcpyBook\Ch3\Data\OldData\CityOfSanAntonio.gdb`。这是一个文件地理数据库，但位置已不再存在。它已移动到
    `C:\ArcpyBook\data` 文件夹。
- en: Open **IDLE** and create a new script window.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 **IDLE** 并创建一个新的脚本窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE5]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Reference the `Crime_BrokenDataLinks.mxd` map document file:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用 `Crime_BrokenDataLinks.mxd` 地图文档文件：
- en: '[PRE6]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use `MapDocument.findAndReplaceWorkspacePaths()` to fix the source path for
    each data source in the map document. The `findAndReplaceWorksapcePaths()` method
    accepts the old path as the first parameter and the new path as the second parameter:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `MapDocument.findAndReplaceWorkspacePaths()` 来修复地图文档中每个数据源的原生路径。`findAndReplaceWorksapcePaths()`
    方法接受旧路径作为第一个参数，新路径作为第二个参数：
- en: '[PRE7]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Save the results to a new `.mxd` file:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将结果保存到新的 `.mxd` 文件中：
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Save the script as `C:\ArcpyBook\Ch3\MapDocumentFindReplaceWorkspacePath.py`.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本保存为 `C:\ArcpyBook\Ch3\MapDocumentFindReplaceWorkspacePath.py`。
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch3\MapDocumentFindReplaceWorkspacePath.py`
    solution file.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查 `c:\ArcpyBook\code\Ch3\MapDocumentFindReplaceWorkspacePath.py` 解决方案文件来检查您的作品。
- en: Run the script.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: In ArcMap, open the `C:\ArcpyBook\Ch3\Crime_DataLinksFixed.mxd` file. You will
    notice that all the data sources get fixed, as shown in the following screenshot:![How
    to do it…](img/B04314_03_3.jpg)
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch3\Crime_DataLinksFixed.mxd` 文件。您将注意到所有数据源都得到了修复，如下面的截图所示：![如何操作…](img/B04314_03_3.jpg)
- en: How it works…
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The `MapDocument.findAndReplaceWorkspacePaths()` method performs global find
    and replace workspace paths for all layers and tables in a map document. You can
    replace the paths for multiple workspace types at once.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapDocument.findAndReplaceWorkspacePaths()` 方法在地图文档中的所有图层和表中执行全局查找和替换工作空间路径。您可以一次性替换多个工作空间类型的路径。'
- en: There's more…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: The `Layer` and `TableView` objects also have a `findAndReplaceWorkspacePaths()`
    method that performs the same type of operation. The difference is that this method,
    in the `Layer` and `TableView` objects, is used to fix an individual broken data
    source rather than a global find, along with the replacement of all broken data
    sources in a map document.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`Layer` 和 `TableView` 对象也有一个 `findAndReplaceWorkspacePaths()` 方法，它执行相同类型的操作。区别在于，在这个
    `Layer` 和 `TableView` 对象中，该方法用于修复单个损坏的数据源，而不是全局查找，以及替换地图文档中所有损坏的数据源。'
- en: Fixing broken data sources with MapDocument.replaceWorkspaces()
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 MapDocument.replaceWorkspaces() 修复损坏的数据源
- en: During the course of normal GIS operations, it is a fairly common practice to
    migrate data from one file type to another. For example, many organizations migrate
    data from older personal geodatabase formats to the new file geodatabase types,
    or perhaps even enterprise ArcSDE geodatabases. You can automate the process of
    updating your datasets to a different format with `MapDocument.replaceWorkspaces()`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在正常的 GIS 操作过程中，将数据从一种文件类型迁移到另一种文件类型是一种相当常见的做法。例如，许多组织将数据从较旧的个人地理数据库格式迁移到新的文件地理数据库类型，或者甚至迁移到企业
    ArcSDE 地理数据库。您可以使用 `MapDocument.replaceWorkspaces()` 方法自动化将您的数据集更新到不同格式的过程。
- en: Getting ready
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: '`MapDocument.replaceWorkspaces()` is similar to `MapDocument.findAndReplaceWorkspacePaths()`,
    but it also allows you to switch from one workspace type to another. For example,
    you can switch from a file geodatabase to a personal geodatabase. However, it
    only works in one workspace at a time. In this recipe, we''ll use `MapDocument.replaceWorkspaces()`
    to switch our data source from a file geodatabase to a personal geodatabase.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapDocument.replaceWorkspaces()` 方法类似于 `MapDocument.findAndReplaceWorkspacePaths()`，但它还允许您从一个工作空间类型切换到另一个工作空间类型。例如，您可以从文件地理数据库切换到个人地理数据库。然而，它一次只能在一个工作空间中工作。在这个菜谱中，我们将使用
    `MapDocument.replaceWorkspaces()` 来将我们的数据源从文件地理数据库切换到个人地理数据库。'
- en: How to do it…
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to fix broken data sources using `MapDocument.replaceWorkspaces()`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用 `MapDocument.replaceWorkspaces()` 修复损坏的数据源：
- en: Open `c:\ArcpyBook\Ch3\Crime_DataLinksFixed.mxd` in ArcMap.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `c:\ArcpyBook\Ch3\Crime_DataLinksFixed.mxd`。
- en: Notice that all of the layers and tables are loaded from a file geodatabase
    called `CityOfSanAntonio.gdb`, as shown in the following screenshot:![How to do
    it…](img/B04314_03_4.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，所有图层和表都是从名为 `CityOfSanAntonio.gdb` 的文件地理数据库中加载的，如下面的截图所示：![如何操作…](img/B04314_03_4.jpg)
- en: Open **IDLE** and create a new script window.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 **IDLE** 并创建一个新的脚本窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE9]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Reference the `Crime_DataLinksFixed.mxd` map document file:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用 `Crime_DataLinksFixed.mxd` 地图文档文件：
- en: '[PRE10]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Call the `replaceWorkspaces()` method, passing a reference to the old geodatabase
    type as well as the new geodatabase type:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `replaceWorkspaces()` 方法，传递旧地理数据库类型和新地理数据库类型的引用：
- en: '[PRE11]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Save a copy of the map document file:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存地图文档文件的副本：
- en: '[PRE12]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Save the script as `c:\ArcpyBook\Ch3\MapDocumentReplaceWorkspaces.py`.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本保存为 `c:\ArcpyBook\Ch3\MapDocumentReplaceWorkspaces.py`。
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch3\MapDocumentReplaceWorkspaces.py`
    solution file.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查 `c:\ArcpyBook\code\Ch3\MapDocumentReplaceWorkspaces.py` 解决方案文件来验证您的操作。
- en: Run the script.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: In ArcMap, open the `c:\ArcpyBook\Ch3\Crime_DataLinksUpdated.mxd` file. As shown
    in the following screenshot, all data sources now reference a personal geodatabase
    (note the `.mdb` extension):![How to do it…](img/B04314_03_5.jpg)
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `c:\ArcpyBook\Ch3\Crime_DataLinksUpdated.mxd` 文件。如图所示，所有数据源现在都引用了一个个人地理数据库（注意
    `.mdb` 扩展名）![如何操作…](img/B04314_03_5.jpg)
- en: How it works…
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The `MapDocument.replaceWorkspaces()` method accepts several parameters including
    old and new workspace paths along with the old and new workspace types. Paths
    to the workspaces are self-explanatory, but some discussion of the workspace types
    is helpful. The workspace types are passed into the method as string keywords.
    In this case, the old workspace type was a file geodatabase so its keyword is
    `FILEGDB_WORKSPACE`. The new workspace type is `ACCESS_WORKSPACE`, which indicates
    a personal geodatabase. Personal geodatabases are stored in Microsoft Access files.
    There are a number of different workspace types that can store GIS data. Make
    sure you provide the workspace type that is appropriate for your dataset. The
    following is a list of valid workspace types (many people still work with shapefiles
    so, in this case, the workspace type would be `SHAPEFILE_WORKSPACE`):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapDocument.replaceWorkspaces()` 方法接受多个参数，包括旧工作空间路径和新工作空间路径，以及旧工作空间类型和新工作空间类型。工作空间的路径是自解释的，但关于工作空间类型的讨论可能会有所帮助。工作空间类型作为字符串关键字传递到方法中。在这种情况下，旧工作空间类型是文件地理数据库，因此其关键字是
    `FILEGDB_WORKSPACE`。新工作空间类型是 `ACCESS_WORKSPACE`，表示个人地理数据库。个人地理数据库存储在 Microsoft
    Access 文件中。有几种不同类型的工作空间可以存储 GIS 数据。请确保您提供适合您数据集的工作空间类型。以下是一个有效工作空间类型的列表（许多人仍在使用形状文件，因此在这种情况下，工作空间类型将是
    `SHAPEFILE_WORKSPACE`）：'
- en: '`ACCESS_WORKSPACE`: This is a personal geodatabase or Access workspace'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ACCESS_WORKSPACE`: 这是一个个人地理数据库或 Access 工作空间'
- en: '`ARCINFO_WORKSPACE`: This is an ArcInfo coverage workspace'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARCINFO_WORKSPACE`: 这是一个 ArcInfo 覆盖工作空间'
- en: '`CAD_WORKSPACE`: This is a CAD file workspace'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CAD_WORKSPACE`: 这是一个 CAD 文件工作空间'
- en: '`EXCEL_WORKSPACE`: This is an Excel file workspace'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EXCEL_WORKSPACE`: 这是一个 Excel 文件工作空间'
- en: '`FILEGDB_WORKSPACE`: This is a file geodatabase workspace'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FILEGDB_WORKSPACE`: 这是一个文件地理数据库工作空间'
- en: '`NONE`: This is used to skip a parameter'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NONE`: 这用于跳过一个参数'
- en: '`OLEDB_WORKSPACE`: This is an OLE database workspace'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OLEDB_WORKSPACE`: 这是一个 OLE 数据库工作空间'
- en: '`PCCOVERAGE_WORKSPACE`: This is a PC ARC/INFO Coverage workspace'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PCCOVERAGE_WORKSPACE`: 这是一个 PC ARC/INFO 覆盖工作空间'
- en: '`RASTER_WORKSPACE`: This is a raster workspace'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RASTER_WORKSPACE`: 这是一个栅格工作空间'
- en: '`SDE_WORKSPACE`: This is an SDE geodatabase workspace'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SDE_WORKSPACE`: 这是一个 SDE 地理数据库工作空间'
- en: '`SHAPEFILE_WORKSPACE`: This is a shapefile workspace'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SHAPEFILE_WORKSPACE`: 这是一个形状文件工作空间'
- en: '`TEXT_WORKSPACE`: This is a text file workspace'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TEXT_WORKSPACE`: 这是一个文本文件工作空间'
- en: '`TIN_WORKSPACE`: This is a TIN workspace'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TIN_WORKSPACE`: 这是一个 TIN 工作空间'
- en: '`VPF_WORKSPACE`: This is a VPF workspace'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VPF_WORKSPACE`: 这是一个 VPF 工作空间'
- en: Tip
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When switching workspaces via the `replaceWorkspaces()` method, the dataset
    names must be identical. For example, a shapefile called `Highways.shp` can be
    redirected to a file geodatabase workspace only if the dataset name in the file
    geodatabase is also called `Highways`. Use the `replaceDataSource()` method on
    the `layer` or `TableView` objects if the dataset name is different.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当通过 `replaceWorkspaces()` 方法切换工作空间时，数据集名称必须相同。例如，一个名为 `Highways.shp` 的形状文件只能重定向到文件地理数据库工作空间，如果文件地理数据库中的数据集名称也称为
    `Highways`。如果数据集名称不同，请在 `layer` 或 `TableView` 对象上使用 `replaceDataSource()` 方法。
- en: Fixing individual layer and table objects with replaceDataSource()
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `replaceDataSource()` 方法修复单个图层和表格对象
- en: The previous recipes in this chapter have used various methods on the `MapDocument`
    object to fix broken data links. The `Layer` and `TableView` objects also have
    methods that can be used to fix broken data links at the individual object level
    rather than working on all datasets in a map document file. This recipe discusses
    the repairing of `Layer` and `TableView` objects.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 本章前面的食谱使用了`MapDocument`对象的各种方法来修复损坏的数据链接。`Layer`和`TableView`对象也有方法可以在单个对象级别修复损坏的数据链接，而不是在地图文档文件中的所有数据集中工作。本食谱讨论了`Layer`和`TableView`对象的修复。
- en: Getting ready
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Both the `Layer` and `TableView` classes have a `replaceDataSource()` method.
    This method changes the workspace path, workspace type, and/or dataset name for
    a single layer or table. In this recipe, you'll write a script that changes the
    workspace path and workspace type for a single layer. The `replaceDataSource()`
    method is available for the `Layer` and `TableView` classes. In the case of a
    layer, it can either be in a map document or layer file. For a table, it can refer
    to the map document only, since `TableView` objects can't be contained inside
    a layer file.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`Layer`和`TableView`类都有一个`replaceDataSource()`方法。此方法可以更改单个图层或表的 workspace 路径、工作空间类型和/或数据集名称。在本例中，你将编写一个脚本，更改单个图层的
    workspace 路径和工作空间类型。`replaceDataSource()`方法适用于`Layer`和`TableView`类。对于图层，它可以在地图文档或图层文件中，对于表格，它只能引用地图文档，因为`TableView`对象不能包含在图层文件中。'
- en: How to do it…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to fix individual `Layer` and `TableView` objects
    in a map document using `replaceDataSource()`:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`replaceDataSource()`方法在地图文档中修复单个`Layer`和`TableView`对象：
- en: 'Open c`:\ArcpyBook\Ch3\Crime_DataLinksLayer.mxd` in ArcMap. The Crime data
    frame contains a layer called **Burglary**, which is a feature class in the `CityOfSanAntonio`
    file geodatabase. You''re going to replace this feature class with a shapefile
    layer containing the same data:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`c:\ArcpyBook\Ch3\Crime_DataLinksLayer.mxd`。犯罪数据框架包含一个名为**盗窃**的图层，它位于`CityOfSanAntonio`文件地理数据库中的要素类。你将用包含相同数据的
    shapefile 图层替换这个要素类：
- en: '![How to do it…](img/B04314_03_6.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/B04314_03_6.jpg)'
- en: Open **IDLE** and create a new script window.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**IDLE**并创建一个新的脚本窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE13]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Reference the `Crime_DataLinksLayer.mxd` map document file:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用`Crime_DataLinksLayer.mxd`地图文档文件：
- en: '[PRE14]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Get a reference to the `Crime` data frame:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取`Crime`数据框架的引用：
- en: '[PRE15]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Find the **Burglary** layer and store it in a variable:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到**盗窃**图层并将其存储在一个变量中：
- en: '[PRE16]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Call the `replaceDataSource()` method on the `Layer` object and pass the path
    to the shapefile. A keyword will indicate that this will be a shapefile workspace,
    and it also indicates the name of the shapefile:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Layer`对象上调用`replaceDataSource()`方法并传递 shapefile 的路径。一个关键字将指示这将是一个 shapefile
    工作空间，并且它也指明了 shapefile 的名称：
- en: '[PRE17]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Save the results to a new map document file:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将结果保存到新的地图文档文件：
- en: '[PRE18]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save the script as `c:\ArcpyBook\Ch3\LayerReplaceDataSource.py`.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本保存为`c:\ArcpyBook\Ch3\LayerReplaceDataSource.py`。
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch3\LayerReplaceDataSource.py`
    solution file.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过检查`c:\ArcpyBook\code\Ch3\LayerReplaceDataSource.py`解决方案文件来验证你的工作。
- en: Run the script.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: Open `C:\ArcpyBook\Ch3\Crime_DataLinksNewLayer.mxd` in ArcMap. You should see
    that the **Burglary** layer now references a new workspace:![How to do it…](img/B04314_03_7.jpg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch3\Crime_DataLinksNewLayer.mxd`。你应该能看到**盗窃**图层现在引用了一个新的工作空间：![如何操作…](img/B04314_03_7.jpg)
- en: Right-click on the **Burglary** layer and select **Properties**.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**盗窃**图层并选择**属性**。
- en: Click on the **Source** tab and note the new workspace, workspace type, and
    dataset name:![How to do it…](img/B04314_03_8.jpg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**源**选项卡并注意新的工作空间、工作空间类型和数据集名称：![如何操作…](img/B04314_03_8.jpg)
- en: How it works…
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `replaceDataSource()` method accepts two required parameters and two optional
    parameters. The first two parameters define the workspace path and workspace type
    for the layer that will be used as the replacement. The third parameter, `dataset_name`,
    is an optional parameter that defines the name of the dataset that will be used
    as the replacement layer. This name must be an exact match. For example, in this
    recipe, we passed in a `dataset_name` attribute as `Burglaries_2009`, which is
    the name of the shapefile that will now be used as the replacement layer in the
    data frame. If a name is not provided, the method will attempt to replace the
    dataset by finding a table with the same name as the current layer's dataset property.
    The final optional parameter is `validate`. By default, this value is set to `True`.
    When set to `True`, a workspace will only be updated if the `workspace_path` value
    is a valid workspace. If it is not a valid workspace, then the workspace will
    not be replaced. If it's set to `False`, the method will set the source to match
    `workspace_path`, regardless of whether it is a valid match or not. This can result
    in a broken data source, but can be useful if you are creating or modifying a
    map document in preparation for data that does not yet exist.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`replaceDataSource()`方法接受两个必需参数和两个可选参数。前两个参数定义了用作替换的图层的工作空间路径和工作空间类型。第三个参数`dataset_name`是一个可选参数，它定义了用作替换层的数据集名称。此名称必须完全匹配。例如，在本菜谱中，我们传递了一个`dataset_name`属性作为`Burglaries_2009`，这是现在将用作数据框中替换层的shapefile的名称。如果没有提供名称，则方法将尝试通过查找与当前图层的数据集属性同名的表来替换数据集。最后一个可选参数是`validate`。默认情况下，此值设置为`True`。当设置为`True`时，只有当`workspace_path`值是有效的工作空间时，工作空间才会更新。如果不是有效的工作空间，则工作空间将不会被替换。如果设置为`False`，则方法将设置源以匹配`workspace_path`，无论它是否是有效的匹配。这可能会导致损坏的数据源，但在创建或修改地图文档以准备尚未存在的数据时可能很有用。'
- en: There's more…
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `Layer` and `TableView` classes also contain a `findAndReplaceWorkspacePath()`
    method. This method is very similar to the `MapDocument.findAndReplaceWorkspacePaths()`
    method. The only difference is that it works against a single `Layer` or `TableView`
    class instead of iterating the entire map document or layer file.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`Layer`和`TableView`类还包含一个`findAndReplaceWorkspacePath()`方法。此方法与`MapDocument.findAndReplaceWorkspacePaths()`方法非常相似。唯一的区别是它针对单个`Layer`或`TableView`类而不是迭代整个地图文档或图层文件。'
- en: Finding broken data sources in all map documents in a folder
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在文件夹中的所有地图文档中查找损坏的数据源
- en: A common scenario in many organizations involves the movement of data from one
    workspace to another or from one workspace type to another. When this happens,
    any map documents or layers that reference these data sources become broken. Finding
    each of these data sources can be a huge task if undertaken manually. Fortunately,
    you can create a geoprocessing script that will find all broken data sources in
    a folder or list of folders.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多组织中，一个常见的场景涉及数据从一个工作空间移动到另一个工作空间，或者从一个工作空间类型移动到另一个工作空间。当这种情况发生时，任何引用这些数据源的地图文档或图层都会损坏。如果手动执行，查找每个这些数据源可能是一项巨大的任务。幸运的是，您可以创建一个地理处理脚本，该脚本将查找文件夹或文件夹列表中的所有损坏数据源。
- en: Getting ready
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, you will learn how to recursively search directories for map
    document files, find any broken data sources within these map documents, and write
    the names of the broken data layers to a file.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，您将学习如何递归搜索目录以查找地图文档文件，查找这些地图文档中的任何损坏数据源，并将损坏数据层的名称写入文件。
- en: How to do it...
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to find all broken data sources in all map
    documents in a folder:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何在文件夹中的所有地图文档中查找所有损坏的数据源：
- en: Open **IDLE** and create a new script window.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**IDLE**并创建一个新的脚本窗口。
- en: 'Import the `arcpy` and `os` packages:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy`和`os`包：
- en: '[PRE19]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Open a file that you will use to write the broken layer names:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个文件，用于写入损坏的图层名称：
- en: '[PRE20]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Pass a path to the `c:\ArcpyBook` folder to use in the `os.walk()` method along
    with a `for` loop to walk the directory tree:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将路径传递给`c:\ArcpyBook`文件夹，以便在`os.walk()`方法和`for`循环中一起使用，以遍历目录树：
- en: '[PRE21]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Inside the `for` loop, create a second `for` loop that loops through all the
    files returned and create a new `filename` variable. Remember to indent the `for`
    loop inside the first `for` loop:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`for`循环内部，创建一个第二个`for`循环，该循环遍历所有返回的文件并创建一个新的`filename`变量。请记住在第一个`for`循环内部缩进`for`循环：
- en: '[PRE22]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Following the last line of code that you added, test the file extension to
    see if it is a map document file. If so, create a new map document object instance
    using the path, write the map document name, get a list of broken data sources,
    loop through each of the broken data sources, and write to the file:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您添加的最后一行代码之后，测试文件扩展名以查看它是否是地图文档文件。如果是，使用路径创建一个新的地图文档对象实例，写入地图文档名称，获取损坏数据源列表，遍历每个损坏数据源，并将它们写入文件：
- en: '[PRE23]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add a `print` statement to indicate that you are done and close the file:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个 `print` 语句来指示您已完成并关闭文件：
- en: '[PRE24]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The entire script should appear as follows:![How to do it...](img/B04314_03_10.jpg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：![如何做...](img/B04314_03_10.jpg)
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch3\ListBrokenDataSources.py`
    solution file.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查 `c:\ArcpyBook\code\Ch3\ListBrokenDataSources.py` 解决方案文件来验证您的作品。
- en: Run the script to generate the file.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以生成文件。
- en: Open the file to see the results. Your output will vary depending upon the path
    you've defined. The following screenshot shows my output file:![How to do it...](img/B04314_03_9.jpg)
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开文件查看结果。您的输出将取决于您定义的路径。以下截图显示了我的输出文件：![如何做...](img/B04314_03_9.jpg)
- en: How it works...
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This script uses a combination of methods from the Python `os` package and the
    `arcpy.mapping` package. The `os.walk()` method walks a directory tree and returns
    the path, a list of directories, and a list of files for each directory starting
    with a root directory that you have defined as the `c:\ArcpyBook` directory. This
    root directory could have been any directory. The `os.walk()` method returns a
    three item tuple consisting of the root directory, a list of directories immediately
    contained within that root, as well as a list of files immediately contained within
    the root. We then loop through this list of files and test each one to see if
    it contains the `.mxd` string, which indicates a map document file. Files identified
    as map documents have their filenames written to a text file, and a new `MapDocument`
    object instance is created. The `ListBrokenDataSources()` method is then used
    with a reference to the map document to generate a list of broken data sources
    within the file, and these broken data sources are written to the file as well.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本结合了来自 Python `os` 包和 `arcpy.mapping` 包的方法。`os.walk()` 方法遍历目录树，并返回从您定义的 `c:\ArcpyBook`
    目录开始的根目录的路径、目录列表和文件列表。这个根目录可以是任何目录。`os.walk()` 方法返回一个包含三个元素的元组，分别是根目录、该根目录内直接包含的目录列表以及该根目录内直接包含的文件列表。然后我们遍历这个文件列表，测试每个文件是否包含
    `.mxd` 字符串，这表示一个地图文档文件。被识别为地图文档的文件将它们的文件名写入一个文本文件，并创建一个新的 `MapDocument` 对象实例。然后使用对地图文档的引用调用
    `ListBrokenDataSources()` 方法，以生成文件内的损坏数据源列表，并将这些损坏数据源也写入文件。
