- en: Building Your Technology Stack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建你的技术栈
- en: Technology choices have lasting consequences. A project's technology stack determines
    the functional and nonfunctional capabilities of your system, so it is critical
    to make thoughtful choices. The bidirectional link between technologies and requirements
    opens up an analytical approach for choosing between different technologies by
    matching their features against the project's needs. In this chapter, we will
    see how we can use software design practices to form project-specific technology
    stacks and see what technologies should constitute the core technology stack that's
    shared among all of your projects. We will also explore an approach that compares
    different technologies so that you can make a rational choice between apparently
    similar options.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 技术选择具有持久的影响。一个项目的技术栈决定了你系统的功能性和非功能性能力，因此做出慎重的选择至关重要。技术与需求之间的双向链接为通过对比技术特性与项目需求来选择不同技术提供了一种分析方法。在本章中，我们将看到如何利用软件设计实践来形成项目特定的技术栈，并且看到应该构成所有项目共享的核心技术栈的技术。我们还将探索一种方法，比较不同的技术，以便你可以在看似相似的选项之间做出理性的选择。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: Defining the elements of the technology stack
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义技术栈的元素
- en: Choosing between core- and project-specific technologies
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择核心技术与项目特定技术之间的取舍
- en: Comparing tools and products
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较工具和产品
- en: Defining the elements of a technology stack
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义技术栈的元素
- en: A technology stack is a set of tools that your team uses to deliver products
    and finish projects. When choosing technologies, you start by defining their goals
    and thoroughly documenting all the requirements. From there, you and your team
    can see what technologies will help you to reach the end goal.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 技术栈是你的团队用来交付产品和完成项目的一组工具。在选择技术时，你首先需要定义它们的目标，并全面记录所有的需求。从那里，你和你的团队可以清楚地了解哪些技术能帮助你实现最终目标。
- en: 'Shaping a technology stack goes toe-to-toe with designing software architecture,
    so the engineers on your team should start by drafting a system design that will
    meet everyone''s requirements. Software architecture is a wide and deeply technical
    topic, so we won''t discuss it in depth in this chapter. Instead, we will present
    an overview of the necessary steps when it comes to choosing the best technologies
    for reaching specific goals. Let''s get started:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 构建技术栈与设计软件架构并行进行，因此你团队的工程师应从草拟一个能满足所有需求的系统设计开始。软件架构是一个广泛且深奥的技术话题，因此我们在本章中不会深入讨论。相反，我们将概述在选择最适合特定目标的技术时需要遵循的必要步骤。让我们开始吧：
- en: Collect the requirements and define the goals clearly.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集需求并明确地定义目标。
- en: 'Choose a set of architecture views for your project. An architecture view contains
    visual and textual descriptions of some of the aspects of the system. The most
    prominent examples of architecture views are as follows:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你的项目选择一组架构视图。架构视图包含了系统某些方面的视觉和文本描述。以下是架构视图的几个突出示例：
- en: '**Infrastructure view**:Represents the physical parts of the system. Servers,
    storage arrays, and networks are documented inside this view.'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施视图**：表示系统的物理部分。服务器、存储阵列和网络等都记录在此视图中。'
- en: '**Component view**: Represents the logical components of the software system
    that you are going to build. The component view should define the isolated parts
    of the system and the interfaces that they communicate through.'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件视图**：表示你将要构建的软件系统的逻辑组件。组件视图应定义系统的独立部分以及它们之间的通信接口。'
- en: '**Deployment view**: Matches the logical representation of the component view
    with the physical reality of the infrastructure view. The deployment view should
    describe how the system components will be delivered to the corresponding hardware.'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署视图**：将组件视图的逻辑表示与基础设施视图的物理现实相匹配。部署视图应描述系统组件如何交付到相应的硬件上。'
- en: '**Other views**: Different methodologies for designing software architecture
    define many useful views. For example, the ArchiMate 2.1 specification defines
    18 architecture views that can be useful for different stakeholders. For the sake
    of brevity, we will cover only the main views that can affect the technology stack
    and omit the others.'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他视图**：不同的软件架构设计方法定义了许多有用的视图。例如，ArchiMate 2.1 规范定义了18个架构视图，这些视图对于不同的利益相关者非常有用。为了简洁起见，我们将只讨论那些可能影响技术栈的主要视图，其他视图将省略。'
- en: Define a list of necessary functions for technologies that you will use for
    the development and operations of your system based on the requirements and software
    design that has been produced by your team. Don't forget to include cross-cutting
    technologies that will optimize the experimentation, development, delivery, and
    operations of your system. Cross-cutting technologies may not help you find any
    specific functional requirements but will be beneficial to the project in general.
    Experimental tracking frameworks, data version control systems, and **Continuous
    Integration**/**Continuous Deployment** (**CI**/**CD**) servers are all examples
    of cross-cutting technologies.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据团队已产生的需求和软件设计，定义开发和运营系统时所需技术功能的列表。不要忘记包括那些能够优化系统实验、开发、交付和运营的横向技术。横向技术可能不会帮助你发现任何特定的功能需求，但它们对项目整体是有益的。例如，实验追踪框架、数据版本控制系统和**持续集成**/**持续部署**（**CI**/**CD**）服务器都是横向技术的例子。
- en: 'As an example, let''s build a technology stack for a customer churn prediction
    system. Our customer has defined the following list of requirements for the churn
    prediction module. We''ll omit the technical details so that we can focus on the
    overall process:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个示例，我们构建一个客户流失预测系统的技术栈。我们的客户已定义以下流失预测模块的需求列表。我们将省略技术细节，以便专注于整体流程：
- en: Process the data from the marketing database. This contains customer information.
    The size of the dataset is under 5 GB of raw data.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理来自营销数据库的数据，其中包含客户信息。数据集的大小不超过5 GB的原始数据。
- en: Train the churn prediction model on a weekly basis, every Monday. We should
    consider customers that have made no purchases for a month as churned.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每周一对客户流失预测模型进行训练。我们应当将一个月内未进行购买的客户视为流失客户。
- en: Notify the team about the potential customer churn by using remote API calls.
    The service should be available on business days.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过远程API调用通知团队潜在的客户流失情况。该服务应在工作日内可用。
- en: 'Decomposition classifies every requirement into two categories: **functional
    requirement** (**FR**) and **nonfunctional requirement** (**NFR**). FRs includes
    all the requirements that are related to the functions of the system that affect
    core use cases and end users. NFRs includes all the requirements that apply to
    the system in general and define a set of constraints in which the system will
    work. Service-level agreements and availability requirements are good examples
    of NFRs.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 分解将每个需求分类为两种类型：**功能需求**（**FR**）和**非功能需求**（**NFR**）。功能需求包括所有与系统功能相关的需求，这些功能影响核心用例和最终用户。非功能需求包括所有适用于系统的一般性需求，并定义系统运行的约束条件。服务级别协议和可用性要求是非功能需求的典型例子。
- en: 'The team has decomposed customer requirements into the following list:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 团队已经将客户需求分解成以下列表：
- en: '**FR**:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**FR**：'
- en: '**FR1**: The system must be integrated with the customer''s marketing database.'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR1**：系统必须与客户的营销数据库进行集成。'
- en: '**FR2**: The system must provide a customer churn prediction model. We can
    consider customers that have made no purchases for a month as churned.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR2**：系统必须提供一个客户流失预测模型。我们可以将一个月内未进行购买的客户视为流失客户。'
- en: '**FR3**: The system must call a remote API to notify the marketing department
    about potential customer churn.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR3**：系统必须调用远程API，通知营销部门潜在的客户流失情况。'
- en: '**FR4**: The model should be executed every Monday.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR4**：模型应每周一执行一次。'
- en: '**NFR**:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**NFR**：'
- en: '**NFR1**: The system should handle processing 5 GB of data every week.'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NFR1**：系统应能够每周处理5 GB的数据。'
- en: '**NFR2**: The API should be available on business days.'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NFR2**：API应在工作日内可用。'
- en: 'Based on this requirements list, the team has come up with the following system
    design, which has been drawn in ArchiMate 2.1 notation using the Archi software
    ([https://www.archimatetool.com/](https://www.archimatetool.com/)):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这一需求列表，团队提出了以下系统设计，该设计采用ArchiMate 2.1符号，通过Archi软件绘制（[https://www.archimatetool.com/](https://www.archimatetool.com/)）：
- en: '![](img/3ac1874f-587f-4e17-a53c-fc3f74c5f810.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ac1874f-587f-4e17-a53c-fc3f74c5f810.png)'
- en: 'The preceding diagram consists of two levels: the infrastructure and software
    implementation.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 上图由两个层次组成：基础设施层和软件实现层。
- en: 'The software level describes the relationships between different components
    and services:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 软件层描述了不同组件和服务之间的关系：
- en: '**Raw customer data: **Represents the raw data that''s used by the churn prediction
    system.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始客户数据：**代表流失预测系统所使用的原始数据。'
- en: '**Model training pipeline: **Represents a set of data processing and model
    training steps, grouped as a software component.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型训练管道：** 表示一组数据处理和模型训练步骤，作为一个软件组件进行分组。'
- en: '**Model prediction pipeline: **Represents the component that''s responsible
    for taking trained models to make churn predictions and generate customer churn
    alerts.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型预测管道：** 代表负责使用训练过的模型进行流失预测并生成客户流失警报的组件。'
- en: '**Scheduler: **Orchestrates the work of other components by running pipelines
    based on a schedule.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调度器：** 按照预定的计划运行管道，协调其他组件的工作。'
- en: '**Customer churn alerts:** Notification events about potential customer churn.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户流失警报：** 关于潜在客户流失的通知事件。'
- en: '**Marketing CRM system: **The customer''s CRM system, which has already been
    deployed and used in production.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**营销 CRM 系统：** 客户的 CRM 系统，已经部署并投入生产使用。'
- en: '**Notification API: **A service that allows us to create notifications about
    customers inside the CRM system.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通知 API：** 一个服务，允许我们在 CRM 系统中创建关于客户的通知。'
- en: 'The infrastructure level, which describes the physical allocation of software
    to specific hardware resources, has three components:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施层，描述软件如何分配到特定硬件资源的物理结构，共有三部分：
- en: '**Marketing database server**'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**营销数据库服务器**'
- en: '**Model server**'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型服务器**'
- en: '**CRM server**'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CRM 服务器**'
- en: 'The preceding software architecture diagram omits many technical details for
    the sake of simplicity since our goal is to demonstrate how to make technology
    choices. The core idea of the following text is not to deepen your knowledge of
    the vast area of software architecture, but to give you a general feel for the
    process where requirements flow into sound technology choices. Understanding this
    process can help you guide your team of experts toward an efficient technology
    stack choice. The project did not seem very complicated to the team, and the task
    was fairly standard for them. The team has decided to use a general set of cross-cutting
    technologies that they use for every project as a corporate standard:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 上述软件架构图为了简化起见，省略了许多技术细节，因为我们的目标是展示如何做出技术选择。接下来文本的核心思想不是加深你对软件架构这一广阔领域的知识，而是让你大致了解需求如何转化为合理的技术选择。理解这一过程可以帮助你引导你的专家团队做出高效的技术栈选择。项目对团队来说并不复杂，这项任务对他们来说相当标准。团队决定采用一套他们每个项目都使用的跨领域技术，作为公司标准：
- en: Python as a programming language
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 作为编程语言
- en: Git for source version control
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git 用于源代码版本控制
- en: '**Data version control** (**DVC**) for data version control'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据版本控制** (**DVC**) 用于数据版本控制'
- en: GitLab CI/CD as a CI/CD server
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitLab CI/CD 作为 CI/CD 服务器
- en: Jupyter Notebook for data analysis and visualization
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter Notebook 用于数据分析和可视化
- en: 'To implement FR, they have decided to use the following technologies:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实施 FR，团队决定使用以下技术：
- en: '**FR1**: The SQLAlchemy library for database access.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR1**：用于数据库访问的 SQLAlchemy 库。'
- en: '**FR2**: scikit-learn as a machine learning library.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR2**：作为机器学习库的 scikit-learn。'
- en: '**FR3**: Requests for API calls. The team has also decided to use a separate
    database to store prediction results and model execution logs.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR3**：API 调用请求。团队还决定使用单独的数据库来存储预测结果和模型执行日志。'
- en: '**FR4**: The team has decided to use cron (a popular Unix scheduler that can
    run commands based on a predefined scheduling table) as the main scheduling solution.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FR4**：团队决定使用 cron（一个流行的 Unix 调度程序，可以根据预定的调度表运行命令）作为主要的调度解决方案。'
- en: 'To implement NFR, they have decided to do the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实施 NFR，团队决定执行以下操作：
- en: '**NFR1**: Perform load tests and determine the minimum necessary server configuration
    for model training. From the team''s previous experience, a virtual server with
    8 CPU, 1 GB RAM, and 15 GB HDD should be sufficient, so they set this configuration
    as a baseline for tests.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NFR1**：进行负载测试，并确定模型训练所需的最低服务器配置。从团队之前的经验来看，一台具有 8 核 CPU、1 GB 内存和 15 GB 硬盘的虚拟服务器应该足够，因此他们将该配置作为测试的基准。'
- en: '**NFR2**: The team has decided to request more detailed information on API
    usage and ask how many requests they can expect per day. It turns out that the
    API will be executed up to 10 times a day, so a single API server should suffice
    for this availability requirement.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NFR2**：团队决定请求更详细的 API 使用信息，并询问每天预计的请求次数。结果发现，该 API 每天最多执行 10 次，因此单台 API 服务器就足以满足这一可用性要求。'
- en: 'In this section, we have explored how to develop a project-specific technology
    stack. However, there is another important dimension where technology choice matters:
    your team''s expertise and skills. In the next section, we will look at the relationship
    between the team and project technology stacks.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了如何开发一个项目特定的技术栈。然而，还有另一个重要的维度是技术选择的关键：团队的专业知识和技能。在下一节中，我们将研究团队与项目技术栈之间的关系。
- en: Choosing between core- and project-specific technologies
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在核心技术与项目特定技术之间做出选择
- en: 'Technology choices should help with project requirement realization, but it
    is also crucial to take your team''s expertise and capabilities into account,
    as well as the constraints. For example, if your team consists entirely of Python
    developers, choosing Julia as a primary programming language may be a bad idea,
    even if the team sees it as a better fit for the project:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 技术选择应有助于实现项目需求，但同样重要的是要考虑团队的专业知识和能力，以及各种限制。例如，如果你的团队完全由 Python 开发者组成，即使团队认为
    Julia 更适合该项目，选择 Julia 作为主要编程语言可能仍然是个糟糕的主意：
- en: All of the team members will spend time learning a new language, practically
    destroying all productivity gains from using the technology.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有团队成员都会花时间学习一门新语言，从而几乎破坏了使用该技术所带来的所有生产力提升。
- en: The team's conclusions may be over-optimistic because of their lack of experience
    with the new technology.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于团队成员对新技术缺乏经验，团队的结论可能过于乐观。
- en: Those two risks abate if your team pursues a growth mindset and gains new knowledge
    continuously, but they never vanish completely.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果团队持续培养成长型思维，并不断获得新知识，那么这两种风险会有所减缓，但永远不会完全消失。
- en: The core expertise in your team puts limits on what technologies you can use
    in projects. If you want more options, it is important to develop a team technology
    stack separately. Continuous internal research processes should keep your core
    technology step up to date. Project-specific technology stacks can be formed by
    adapting the core technology stack for your project's requirements.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 团队的核心专业知识限制了项目中可以使用的技术。如果你希望拥有更多选择，单独开发一个团队技术栈就显得至关重要。持续的内部研究过程应确保你的核心技术栈保持最新。项目特定的技术栈可以通过调整核心技术栈以满足项目需求来形成。
- en: 'We can view the internal technology research process as a separate long-running
    project, which is best managed by using Kanban:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将内部技术研究过程视为一个独立的长期项目，最好通过使用看板（Kanban）来管理：
- en: Someone on the team spots a potentially useful technology.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 团队中的某个成员发现了一项潜在有用的技术。
- en: The experienced team members do a quick review of this technology. If the technology
    looks promising, they put it into the internal research backlog.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有经验的团队成员会迅速评估这项技术。如果技术看起来有前景，他们会将其放入内部研究积压任务中。
- en: Once the team manager decides that some time can be invested in internal research
    processes, they start a backlog grooming session. There, the team prioritizes
    tasks in the backlog and enriches their definitions according to the **specific
    measurable achievable relevant time-bound** (**SMART**) criteria.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦团队经理决定可以投入时间进行内部研究过程，他们便开始整理积压任务。在此过程中，团队根据**具体、可衡量、可实现、相关、时限**（**SMART**）标准来确定任务的优先级，并丰富任务定义。
- en: The assignee takes a single task from the backlog and tries to finish it as
    quickly as possible. If they encounter a blocking problem, it should be instantly
    reported and solved, preferably with the help of other team members.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 责任人从积压任务中选择一个单独的任务，并尽量快速完成。如果遇到阻塞问题，应立即报告并解决，最好在其他团队成员的帮助下完成。
- en: Once the research has been done, the assignee reports the results in the form
    of a document or a talk so that the team can decide on whether they will include
    the technology in the core technology stack.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦研究完成，责任人会以文档或讲座的形式报告研究结果，以便团队决定是否将该技术纳入核心技术栈。
- en: If the decision is positive, it is crucial to create an educational program
    for wider internal technology adoption. The main result of this task is to prepare
    a workshop, guide, instruction booklet, or some other educational material that
    new and existing team members can use to familiarize themselves with the technology.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果决策是积极的，那么制定一个广泛的内部技术采纳教育计划就变得至关重要。此任务的主要成果是准备一个研讨会、指南、说明书或其他教育材料，以便新旧团队成员可以用来熟悉这项技术。
- en: The core technology stack should not include overly specific technologies that
    are applicable to only a small set of projects. The sole purpose of this content
    is to help your team form a technological basis that solves the majority of requirements
    that arise in your projects. The more widely focused your team is, the more general
    the core technology stack should be. If the entire team is building a specific
    product, then project-specific and core technology stacks start to merge into
    a single entity.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 核心技术栈不应包含仅适用于少数项目的过于具体的技术。本文的唯一目的是帮助你的团队构建一个能够解决大多数项目需求的技术基础。你的团队关注的范围越广，核心技术栈应该越通用。如果整个团队正在构建特定的产品，那么项目特定的技术栈与核心技术栈将开始合并为一个整体。
- en: 'The process of adapting the core technology stack into a new project is as
    follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将核心技术栈适配到新项目的过程如下：
- en: Determine a set of project requirements.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定一组项目需求。
- en: See what requirements are satisfied by the core technology stack.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看核心技术栈满足的需求。
- en: If some requirements are violated by the core technology stack, search for alternatives.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果核心技术栈违反了某些需求，寻找替代方案。
- en: If some requirements are not met by the core technology stack, search for additions
    that can be integrated into the core technology stack.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果核心技术栈无法满足某些需求，寻找可以集成到核心技术栈中的补充技术。
- en: At the end of the project, evaluate the new technologies that were added to
    the project and decide whether they are a good fit for the core technology stack.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目结束时，评估新添加到项目中的技术，判断它们是否适合核心技术栈。
- en: Using these processes, you can turn often chaotic and desire-driven technology
    choices into a consistent and logical series of steps that lead to meaningful
    decisions. However, even the most deliberate requirement decompositions may leave
    your team wondering which technology to choose because there are many intersections
    and alternatives between different frameworks, libraries, and platforms. In the
    next section, we will explore how we can choose from a variety of technologies.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些流程，你可以将常常混乱且需求驱动的技术选择转化为一系列一致且合乎逻辑的步骤，从而做出有意义的决策。然而，即使是最细致的需求分解，仍然可能让你的团队在选择技术时感到困惑，因为不同框架、库和平台之间有许多交叉点和替代方案。在接下来的部分，我们将探讨如何从多种技术中做出选择。
- en: Comparing tools and products
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较工具和产品
- en: '*Should we choose R or Python?* *What''s better, TensorFlow or PyTorch?* A
    list of endless quarrels about which is the best X for doing Y can be found all
    over the internet. Those discussions are ceaseless simply because there is no
    silver bullet in the technology world. Every team of professionals has their specific
    use cases, which makes a certain technology choice work for them. There is no
    technology that will equally satisfy everyone.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们应该选择R还是Python？* *TensorFlow和PyTorch哪个更好？* 在互联网上可以找到关于做Y时选择X最好的无休止争论。那些讨论之所以不断进行，是因为技术世界没有万金油。每个专业团队都有其特定的使用案例，这使得某些技术选择对他们有效。没有任何一种技术能够满足所有人的需求。'
- en: X versus Y disputes often happen inside project teams, which is the most unproductive
    activity engineers can spend their time on. If you try to transition from X versus
    Y debates to searching for technologies that fit your specific needs (which are
    clearly stated, classified, and documented), you will get far more useful results
    in less time. Choosing the most modern or fashionable technologies is the closest
    analogy for playing Russian roulette for data scientists and software engineers.
    Let's explore how we can make thoughtful decisions about technology stacks.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: X与Y的争论常常发生在项目团队内部，这也是工程师们最浪费时间的活动。如果你试图将X与Y的辩论转变为寻找适合你具体需求的技术（这些需求已经明确、分类并文档化），你将在更短的时间内获得更有用的结果。选择最现代或最时尚的技术，对数据科学家和软件工程师来说，就像是玩俄罗斯轮盘。让我们探讨如何做出有关技术栈的深思熟虑的决策。
- en: To make meaningful technology choices, you need to make the process more systematic.
    First, you need to derive a set of comparison criteria that will allow you to
    benchmark different technologies and provide a template for research activities.
    These criteria should test different dimensions or groups of requirements that
    make the technology useful in your specific case.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做出有意义的技术选择，你需要让这个过程更加系统化。首先，你需要制定一套比较标准，允许你对不同技术进行基准测试，并为研究活动提供模板。这些标准应该考察不同维度或需求群体，确保技术在你的具体案例中是有用的。
- en: Let's examine the specifics of comparing different technologies by looking at
    a case study.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过案例研究来审视比较不同技术的具体细节。
- en: Case study – forecasting demand for a logistics company
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究 – 预测物流公司的需求
- en: Let's imagine that we need to choose a time series forecasting framework for
    our project. Our team works primarily in Python and has to provide a tool that
    will provide forecasts for time series data. The main goal of this system is to
    forecast demand on a set of given products that are shipped by the company. The
    team has discovered that there are many different forecasting frameworks.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们需要为我们的项目选择一个时间序列预测框架。我们的团队主要使用Python，并需要提供一个能够为时间序列数据提供预测的工具。该系统的主要目标是预测公司运输的一组给定产品的需求。团队发现有很多不同的预测框架可供选择。
- en: 'To choose between these products, the team has created the following comparison
    criteria:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在这些产品之间做出选择，团队制定了以下比较标准：
- en: '| **ID** | **Requirement** **definition** | **Substantiation** | **Score**
    | **Priority** |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| **ID** | **需求** **定义** | **理由** | **评分** | **优先级** |'
- en: '| **Ease of development** |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| **开发难易度** |'
- en: '| D1 | Compatible with Python | Python is the major programming language for
    the team. | 3 | Mandatory |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| D1 | 与Python兼容 | Python是团队的主要编程语言。 | 3 | 必须 |'
- en: '| D2 | Compatible with scikit-learn interfaces | The team has good expertise
    in the `scikit-learn` library. It would be beneficial if the time-series forecasting
    library were compatible with `scikit-learn`. | 2 | Important |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| D2 | 与scikit-learn接口兼容 | 团队在`scikit-learn`库方面有丰富的经验。如果时间序列预测库能够与`scikit-learn`兼容，将会是一个有利的功能。
    | 2 | 重要 |'
- en: '| D3 | Has good documentation |  | 1 | Supplementary |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| D3 | 拥有良好的文档 |  | 1 | 补充 |'
- en: '| D4 | Forecasting can be done in under 10 lines of code |  | 1 | Supplementary
    |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| D4 | 可以在不到10行代码内完成预测 |  | 1 | 补充 |'
- en: '| D5 | Can handle timeseries as a native data type | The framework should work
    with raw time series data so that the team doesn''t spend additional time on dataset
    preparation and feature engineering. | 2 | Important |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| D5 | 可以将时间序列作为原生数据类型处理 | 该框架应能处理原始时间序列数据，这样团队就不需要在数据集准备和特征工程上花费额外的时间。 | 2
    | 重要 |'
- en: '| **Forecasting algorithm requirements** |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| **预测算法要求** |'
- en: '| F1 | Does not require manual hyperparameter tuning | Since the library will
    be used with a large number of time series, manual model tuning is not practical.
    The tool should support automated hyperparameter tuning or be robust when it comes
    to which hyperparameter is chosen, thus providing good forecasts with the default
    settings. | 3 | Mandatory |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| F1 | 无需手动调优超参数 | 由于该库将用于大量时间序列，手动调优模型不切实际。该工具应支持自动化的超参数调优，或者在选择超参数时具备良好的鲁棒性，从而在默认设置下提供良好的预测结果。
    | 3 | 必须 |'
- en: '| F2 | Provides several forecasting methods | The availability of several forecasting
    methods will allow us to evaluate several models and choose the one that fits
    the best for each specific time series. | 1 | Supplementary |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| F2 | 提供多种预测方法 | 提供多种预测方法将使我们能够评估多个模型，并选择最适合每个特定时间序列的模型。 | 1 | 补充 |'
- en: '| F3 | Works with seasonal time series | All the time series in the customer
    data have seasonal patterns. | 3 | Mandatory |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| F3 | 支持季节性时间序列 | 客户数据中的所有时间序列都有季节性模式。 | 3 | 必须 |'
- en: '| F4 | Provides confidence bounds, along with forecasts | Confidence intervals
    can be used to provide uncertainty bounds for each forecast, which the customer
    considers a useful feature. | 2 | Important |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| F4 | 提供置信区间以及预测值 | 置信区间可用于为每个预测提供不确定性范围，这是客户认为一个有用的功能。 | 2 | 重要 |'
- en: '| **Performance and data requirements** |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| **性能和数据要求** |'
- en: '| P1 | Forecasts for time series with 100 data points can be done in under
    15 seconds | A large number of time series limits the total amount of time we
    can spend on a single time series. | 2 | Important |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| P1 | 可以在15秒内预测具有100个数据点的时间序列 | 大量的时间序列限制了我们在单一时间序列上可以花费的总时间。 | 2 | 重要 |'
- en: '| P2 | Can handle time series with a variable length and empty data | Data
    quality is not ideal and some gaps are present in the data. Some items have more
    historical data than others. | 2 | Important |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| P2 | 可以处理具有可变长度和缺失数据的时间序列 | 数据质量不理想，数据中存在一些缺口。一些项目的历史数据比其他项目多。 | 2 | 重要 |'
- en: 'The preceding comparison table consists of the following columns:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 上述比较表包含以下列：
- en: '**ID**: This can be used as a short identifier in the technology comparison
    table (provided next).'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ID**：这可以作为技术比较表中的简短标识符（下文提供）。'
- en: '**Requirement definition**: This should describe the capability of interest.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**需求定义**：这应该描述感兴趣的能力。'
- en: '**Substitution**: This should provide the motivation behind the requirement.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**替代方案**：这应该提供需求背后的动机。'
- en: '**Score**: This shows the relative importance of the requirement and will be
    used to summarize each requirement category.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**得分**：显示需求的相对重要性，并将用于总结每个需求类别。'
- en: '**Priority**: This indicates the necessity of each requirement and will provide
    additional scores for each technology.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优先级**：表示每个需求的必要性，并将为每项技术提供额外的得分。'
- en: 'Next, the team has prepared a list of frameworks to compare, as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，团队已经准备了一个框架比较列表，如下所示：
- en: '**Pmdarima** ([https://www.alkaline-ml.com/pmdarima/](https://www.alkaline-ml.com/pmdarima/))'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pmdarima** ([https://www.alkaline-ml.com/pmdarima/](https://www.alkaline-ml.com/pmdarima/))'
- en: '**statsmodels.tsa** ([https://www.statsmodels.org/stable/tsa.html](https://www.statsmodels.org/stable/tsa.html))'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**statsmodels.tsa** ([https://www.statsmodels.org/stable/tsa.html](https://www.statsmodels.org/stable/tsa.html))'
- en: '**Prophet** ([https://github.com/facebook/prophet](https://github.com/facebook/prophet))'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Prophet** ([https://github.com/facebook/prophet](https://github.com/facebook/prophet))'
- en: '**LightGBM** ([https://lightgbm.readthedocs.io/en/latest/](https://lightgbm.readthedocs.io/en/latest/))
    and **tsfresh** ([https://tsfresh.readthedocs.io/en/latest/](https://tsfresh.readthedocs.io/en/latest/))'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LightGBM** ([https://lightgbm.readthedocs.io/en/latest/](https://lightgbm.readthedocs.io/en/latest/))
    和 **tsfresh** ([https://tsfresh.readthedocs.io/en/latest/](https://tsfresh.readthedocs.io/en/latest/))'
- en: 'The team has also come up with the following comparison table:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 团队还制定了以下比较表格：
- en: '|  |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '|  |'
- en: '|  | **Framework** | **D1 (M)** | **D2 (I)** | **D3 (S)** | **D4 (S)** | **D5
    (I)** | **F1 (M)** | **F2 (S)** | **F3 (M)** | **F4 (I)** | **P1 (I)** | **P2
    (I)** | **pmdarima** | 3 | 2 | 0 | 2 | 3 | 3 | 0 | 3 | 2 | 0 | 0 | **statsmodels.tsa**
    | 3 | 0 | 2 | 0 | 3 | 0 | 1 | 3 | 2 | 2 | 0 | **Prophet** | 3 | 0 | 2 | 2 | 3
    | 3 | 0 | 3 | 2 | 0 | 2 | **LightGBM** and **tsfresh** | 3 | 2 | 2 | 0 | 0 | 0
    | 0 | 3 | 0 | 2 | 0 |  |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '|  | **框架** | **D1 (M)** | **D2 (I)** | **D3 (S)** | **D4 (S)** | **D5 (I)**
    | **F1 (M)** | **F2 (S)** | **F3 (M)** | **F4 (I)** | **P1 (I)** | **P2 (I)**
    | **pmdarima** | 3 | 2 | 0 | 2 | 3 | 3 | 0 | 3 | 2 | 0 | 0 | **statsmodels.tsa**
    | 3 | 0 | 2 | 0 | 3 | 0 | 1 | 3 | 2 | 2 | 0 | **Prophet** | 3 | 0 | 2 | 2 | 3
    | 3 | 0 | 3 | 2 | 0 | 2 | **LightGBM** 和 **tsfresh** | 3 | 2 | 2 | 0 | 0 | 0 |
    0 | 3 | 0 | 2 | 0 |  |'
- en: '|  |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '|  |'
- en: 'This table can be further summarized to give you the following final results:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 该表格还可以进一步总结，给出以下最终结果：
- en: '| **Framework** | **Ease of development score** | **Forecasting algorithm requirements
    score** | **Performance and data requirements score** | **Mandatory requirements
    satisfied** | **Important requirements satisfied** | **Supplementary requirements
    satisfied** |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| **框架** | **开发难度得分** | **预测算法要求得分** | **性能和数据要求得分** | **满足强制性要求** | **满足重要要求**
    | **满足补充要求** |'
- en: '| **pmdarima** | 10/12 | 8/9 | 0/4 | 3/3 | 3/5 | 1/3 |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| **pmdarima** | 10/12 | 8/9 | 0/4 | 3/3 | 3/5 | 1/3 |'
- en: '| **statsmodels.tsa** | 8/12 | 6/9 | 2/4 | 2/3 | 3/5 | 2/3 |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| **statsmodels.tsa** | 8/12 | 6/9 | 2/4 | 2/3 | 3/5 | 2/3 |'
- en: '| **Prophet** | 10/12 | 8/9 | 2/4 | 3/3 | 3/5 | 2/3 |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| **Prophet** | 10/12 | 8/9 | 2/4 | 3/3 | 3/5 | 2/3 |'
- en: '| **LightGBM** and **tsfresh** | 7/12 | 3/9 | 2/4 | 2/3 | 2/5 | 1/3 |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **LightGBM** 和 **tsfresh** | 7/12 | 3/9 | 2/4 | 2/3 | 2/5 | 1/3 |'
- en: If you wish, you can use weighted averages to summarize each framework's score
    into a single number. However, remember that simplifying complex decisions into
    one number can lead to errors if this is done incorrectly.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果愿意，你可以使用加权平均法将每个框架的得分总结为一个数字。然而，请记住，简化复杂决策为一个数字如果做得不对，可能会导致错误。
- en: These research results show that Prophet comes up as a better choice according
    to the initial requirements. However, the results do not mean that Prophet is
    the best choice for every application. Technology choices should be biased and
    opinionated since no technology can be the best fit for every project. For example,
    the ranking could be entirely different if the team took the desired average metric
    value into consideration. In this setting, other frameworks could have won because
    they provided more accurate models.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这些研究结果表明，根据初步需求，Prophet被认为是更好的选择。然而，这些结果并不意味着Prophet是所有应用的最佳选择。技术选择应该有一定的偏向和观点，因为没有任何技术能适用于所有项目。例如，如果团队考虑了期望的平均指标值，排名可能会完全不同。在这种情况下，其他框架可能会因为提供了更准确的模型而获胜。
- en: Summary
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have seen how we can choose a technology based on its requirements
    rather than the hype surrounding it. We also explored how to structure requirements
    and derive the main elements of a technology stack from software architecture.
    Finally, we discussed the difference between core and project-specific technology
    stacks and examined an analytical approach to comparing different technologies.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到了如何根据技术的需求来选择技术，而不是根据其周围的炒作。我们还探讨了如何构建需求，并从软件架构中推导出技术栈的主要元素。最后，我们讨论了核心技术栈和项目特定技术栈之间的区别，并考察了一种分析方法来比较不同的技术。
- en: The next chapter will conclude this book; congratulations on finishing it!
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将会总结本书的内容；恭喜你完成了本书的阅读！
