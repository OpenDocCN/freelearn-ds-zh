- en: Multiuser Jupyter Notebooks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多用户 Jupyter Notebooks
- en: Jupyter Notebooks have the inherent ability to be modifiable by users when the
    user enters data or makes a selection. However, there is an issue with the standard
    implementation of the Notebook server software that does not account for more
    than one person working with a Notebook at the same time. The Notebook server
    software is the underlying Jupyter software that displays the page and interacts
    with the user—it follows the directions in your Notebook for display and interaction.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebooks 本身具有可被用户修改的能力，当用户输入数据或做出选择时，Notebook 会做出相应变化。然而，标准的 Notebook
    服务器软件存在一个问题，它没有考虑到同时有多个用户在同一个 Notebook 上工作。Notebook 服务器软件是底层的 Jupyter 软件，负责显示页面并与用户交互——它根据你的
    Notebook 中的指令进行显示和交互。
- en: A Notebook server, really a specialized internet web server, typically creates
    a new path or thread of execution for each user to allow for multiple users. A
    problem arises when a lower-level subroutine, used for all instances, does not
    properly account for multiple users where each has their own set of data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 Notebook 服务器，实际上是一个专用的互联网 Web 服务器，通常会为每个用户创建一个新的执行路径或线程，以便支持多个用户。当一个较低级别的子例程用于所有实例时，如果没有正确考虑每个用户拥有自己一组数据的情况，就会出现问题。
- en: Note that some of the coding/installs in this chapter may not work in a Windows
    environment.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，本章中的一些代码/安装可能在 Windows 环境下无法运行。
- en: 'In this chapter we will explore the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下内容：
- en: Give an example of the issue that occurs when multiple users access the same
    Notebook in a standard Jupyter installation
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 给出一个例子，说明在标准 Jupyter 安装中，当多个用户同时访问同一个 Notebook 时会发生的问题。
- en: Use a new version of Jupyter, JupyterHub, that was built by extending Jupyter
    to specifically address the multiple user problem
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用新版本的 Jupyter，JupyterHub，它是通过扩展 Jupyter 特别为解决多用户问题而开发的。
- en: Also use Docker, a tool to allow for multiple instances of any software, in
    order to address the issue
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另外，使用 Docker，一种允许多个软件实例同时运行的工具，以解决这个问题。
- en: A sample interactive Notebook
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个示例交互式 Notebook
- en: For this chapter, we will use a simple Notebook that asks the user for some
    information, and displays certain information.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用一个简单的 Notebook，要求用户提供一些信息，并显示特定的信息。
- en: 'For example, we could have a script like this (taken from the previous [Chapter
    9](1cc377b7-32f9-4de4-92f8-da73293b2d0b.xhtml), *Interactive Widgets*):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以有一个像这样的脚本（取自前面章节 [第9章](1cc377b7-32f9-4de4-92f8-da73293b2d0b.xhtml)，*交互式小部件*）：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The script presents a textbox to the user with the original value of the box
    containing the `Hello World` string. As the user interacts with the input field
    and changes the value, then the value of the `x` variable in the script changes
    accordingly and is displayed on screen. For example, I have changed the value
    to letter `A`:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本向用户展示一个文本框，文本框内的原始值为 `Hello World` 字符串。当用户与输入字段互动并修改其值时，脚本中的 `x` 变量的值也会相应变化，并显示在屏幕上。例如，我将值更改为字母
    `A`：
- en: '![](img/95189c02-c525-470c-9c6f-96e9c00acae7.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95189c02-c525-470c-9c6f-96e9c00acae7.png)'
- en: 'We can see the multiuser problem: if we just open the same page in another
    browser window (copy the URL, open a new browser window, paste in the URL, and
    hit the *Enter* key), we get the exact same display. The new window should have
    started with a new script, just prompting you with the default `Hello World` message.
    However, since the Jupyter server software is only expecting one user, there is
    only one copy of the `x` variable, so it displays its value.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到多用户问题：如果我们在另一个浏览器窗口中打开相同的页面（复制 URL，打开新浏览器窗口，粘贴 URL，按下*Enter*键），我们会看到完全相同的显示。新窗口应该从一个新的脚本开始，只是提示你默认的
    `Hello World` 信息。然而，由于 Jupyter 服务器软件只期望一个用户，因此只有一个 `x` 变量的副本，所以它显示了它的值。
- en: JupyterHub
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JupyterHub
- en: Once Jupyter Notebooks were shared, it became obvious that the multiuser problem
    had to be solved. A new version of the Jupyter software was developed called **JupyterHub**.
    JupyterHub was specifically designed to handle multiple users, giving each user
    their own set of variables to work with. Actually, the system will give each user
    a whole new instance of the Jupyter software to each user—a **brute-force** approach,
    but it works.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Jupyter Notebooks 被共享，显然需要解决多用户问题。于是开发了一个新的 Jupyter 软件版本，叫做**JupyterHub**。JupyterHub
    专门设计用来处理多个用户，每个用户都有自己的一组变量来操作。实际上，系统会为每个用户提供一个全新的 Jupyter 软件实例——这是一种**强力方法**，但它有效。
- en: When JupyterHub starts, it begins a hub or controlling agent. The hub will start
    an instance of a listener or proxy for Jupyter requests. When the proxy gets requests
    for Jupyter, it turns them over to the hub. If the hub decides this is a new user,
    it will generate a new instance of the Jupyter server and attach all further interactions
    between that user and Jupyter to their own version of the server.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当 JupyterHub 启动时，它会启动一个中心或控制代理。该中心将启动一个用于处理 Jupyter 请求的监听器或代理。当代理接收到 Jupyter
    的请求时，它将它们交给中心处理。如果中心判断这是一个新用户，它将为他们生成一个新的 Jupyter 服务器实例，并将所有后续的用户与 Jupyter 的交互附加到他们自己的服务器版本上。
- en: Installation
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: 'JupyterHub requires Python 3.3 or better, and we will use the Python tool `pip3`
    to install JupyterHub. You can check the version of Python you are running by
    just entering `Python` on a command line and the prologue will echo out the current
    version. For example, see the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: JupyterHub 需要 Python 3.3 或更高版本，并且我们将使用 Python 工具 `pip3` 来安装 JupyterHub。您可以通过在命令行中输入
    `Python` 来检查您正在运行的 Python 版本，前言将回显当前版本。例如，请参阅以下内容：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you need to upgrade to a new version, refer to the instructions on [http://python.org](http://python.org)
    since they are specific to the operating system and version of Python.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要升级到新版本，请参考 [http://python.org](http://python.org) 上的说明，因为它们针对操作系统和 Python
    版本有具体的要求。
- en: 'JupyterHub is installed much like other software using the following commands:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: JupyterHub 的安装方式与其他软件类似，使用以下命令：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'First, installing the proxy. `-g` on the proxy install means to make that software
    available to all users:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，安装代理。在代理安装中 `-g` 表示将该软件对所有用户可用：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, we install JupyterHub:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们安装 JupyterHub：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Operation
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作
- en: 'We can now start JupyterHub directly from the command line:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以直接从命令行启动 JupyterHub：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This results in the following display that will appear in the command console
    window:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致在命令控制台窗口中显示以下内容：
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Notice that the script completed, and a window did not open for you in your
    default browser as it would have in the standard Jupyter installation.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，脚本已完成，但默认情况下不会为您在浏览器中打开窗口，就像标准 Jupyter 安装中那样。
- en: More important is the last line of output (which is also printed on screen in
    red), `Refusing to run JupyterHub without SSL`. JupyterHub is specifically built
    to account for multiple users logging in and using a single Notebook, so it is
    complaining that it is expected to have SSL running (to secure user interactions).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是最后一行的输出（也以红色打印在屏幕上），`拒绝在没有 SSL 的情况下运行 JupyterHub`。JupyterHub 特别构建用于多用户登录和使用单个
    Notebook，因此它在抱怨期望它具有运行 SSL（以确保用户交互安全）。
- en: 'The last half of the last line gives us a clue as to what to do—we need to
    tell JupyterHub that we are not using a certificate/SSL. We can do that with the
    `--no-ssl` argument, as in the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一行的后半部分提示我们应该怎么做 —— 我们需要告诉 JupyterHub 我们没有使用证书/SSL。我们可以使用 `--no-ssl` 参数来做到这一点，如下所示：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This results in the expected outcome in the console, and leaves the server
    still running:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致在控制台中显示预期的结果，并使服务器继续运行：
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If we now go to that URL shown (`http://127.0.0.1:8000/`[)](http://127.0.0.1:8000/))
    on the last line of the output, we get to a login screen for JupyterHub:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果现在我们访问最后一行输出中显示的 URL（`http://127.0.0.1:8000/`[)](http://127.0.0.1:8000/)），我们将进入
    JupyterHub 的登录界面：
- en: '![](img/5fac8f6f-82a7-40b7-899f-b42e16f53726.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5fac8f6f-82a7-40b7-899f-b42e16f53726.png)'
- en: So, we have avoided requiring SSL, but we still need to configure the users
    for the system.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经避免了需要 SSL，但我们仍然需要为系统配置用户。
- en: 'The JupyterHub software uses a configuration file to determine how it should
    work. You can generate a configuration file using JupyterHub, providing default
    values using the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: JupyterHub 软件使用配置文件来确定其工作方式。您可以使用 JupyterHub 生成配置文件，并使用以下命令提供默认值：
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The generated configuration file has close to 500 lines available. The start
    of the sample file is as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的配置文件可用近 500 行。示例文件的开头如下所示：
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'As you can see, most of the configuration settings are prefixed with a sharp
    (`#`) denoting that they are commented out. The setting that is mentioned is the
    default value that will be applied. If you needed to change one of the settings,
    you would remove the prefix sharp symbol and change the right-hand side of the
    equal sign (`=`) to your new value. By the way, this is a good way to test out
    changes: make one change; save the file; try out your change; continue with additional
    changes. As you progress, if one change does not work as expected, you need to
    just replace the prefix sharp symbol and you are back to a working position.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，大多数配置设置前面都有一个井号（`#`），表示它们已被注释掉。提到的设置是将要应用的默认值。如果您需要更改某个设置，您需要去掉前面的井号并更改等号（`=`）右侧的值。顺便说一下，这是一种测试更改的好方法：进行一次更改，保存文件，尝试更改，继续进行其他更改。如果过程中某个更改未按预期工作，您只需恢复井号前缀即可恢复到工作状态。
- en: 'We will look at several of the configuration options available. It is interesting
    to note that many of the settings in this file are Python settings, not particular
    to JupyterHub. The list of items includes those shown here:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看一些可用的配置选项。值得注意的是，文件中的许多设置是 Python 设置，而不是特定于 JupyterHub 的。项目列表包括此处显示的项目：
- en: '| **Area** | **Description** |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| **区域** | **描述** |'
- en: '| `JupyterHub` | Settings for JupyterHub itself |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `JupyterHub` | JupyterHub 本身的设置 |'
- en: '| `LoggingConfigurable` | Logging information layout |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `LoggingConfigurable` | 日志信息布局 |'
- en: '| `SingletonConfigurable` | A configurable that only allows one instance |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `SingletonConfigurable` | 仅允许一个实例的可配置项 |'
- en: '| `Application` | Date format and logging level |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `Application` | 日期格式和日志级别 |'
- en: '| `Security` | SSL certificate |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `Security` | SSL 证书 |'
- en: '| `Spawner` | How the hub starts new instances of Jupyter for new users |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `Spawner` | Hub 如何为新用户启动新的 Jupyter 实例 |'
- en: '| `LocalProcessSpawner` | Uses popen to start local processes as users |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `LocalProcessSpawner` | 使用 popen 作为用户启动本地进程 |'
- en: '| `Authenticator` | The primary API is one method, `authenticate` |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `Authenticator` | 主要 API 是一个方法 `authenticate` |'
- en: '| `PAMAuthenticator` | Interaction with Linux to login |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `PAMAuthenticator` | 与 Linux 交互以登录 |'
- en: '| `LocalAuthenticator` | Checks for local users, and can attempt to create
    them if they exist |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `LocalAuthenticator` | 检查本地用户，并且如果用户存在，可以尝试创建它们 |'
- en: Continuing with operations
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正在继续操作
- en: I made no changes to the configuration file to get my installation up and running.
    By default, the configuration uses the PEM system, which will hook into the operating
    system you are running on to pass in credentials (as if they were logging into
    the machine) for validation.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有更改配置文件就使我的安装正常运行。默认情况下，配置使用 PEM 系统，它会连接到您正在运行的操作系统，以传入凭据（就像登录到机器一样）进行验证。
- en: 'If you are seeing the `JupyterHub single-user server requires notebook >= 4.0` message
    in the console log when trying to log in to your JupyterHub installation, you
    need to update the base Jupyter using the command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在尝试登录到您的 JupyterHub 安装时，控制台日志中出现了 `JupyterHub single-user server requires
    notebook >= 4.0` 消息，您需要使用以下命令更新基础 Jupyter：
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will update your base Jupyter to the latest version, currently 4.1.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把您的基础 Jupyter 更新到最新版本，目前是 4.1。
- en: If you do not have `pip3` installed, you need to upgrade to Python 3 or better.
    See the documentation at [http://python.org](http://python.org) regarding the
    steps to be taken for your system.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有安装 `pip3`，您需要升级到 Python 3 或更高版本。有关您的系统需要采取的步骤，请参阅 [http://python.org](http://python.org)
    上的文档。
- en: 'Now, you can start JupyterHub using this following command line:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以使用以下命令行启动 JupyterHub：
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Log in to the login screen (shown previously) using the same credentials you
    use to log in to the machine (remember JupyterHub is using PEM, which calls into
    your operating system to validate credentials). You will end up in something that
    looks very much like your standard Jupyter home page:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您登录机器时使用的相同凭据登录到登录页面（如前所示）（记住 JupyterHub 使用 PEM，它会调用您的操作系统来验证凭据）。您将进入一个非常像标准
    Jupyter 首页的页面：
- en: '![](img/1abdd1d2-e0c6-4eab-b1e0-2a06d59ebb96.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1abdd1d2-e0c6-4eab-b1e0-2a06d59ebb96.png)'
- en: 'It looks very similar, except there are now two additional buttons in the top
    right of the screen:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 它看起来非常相似，只是现在屏幕右上角有两个额外的按钮：
- en: Control Panel
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制面板
- en: Logout
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注销
- en: Clicking on the Logout button logs you out of JupyterHub and redirects you to
    the login screen.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 单击注销按钮将您从 JupyterHub 注销并重定向到登录页面。
- en: 'Clicking on the Control Panel button brings you to a new screen with two options,
    shown as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 点击控制面板按钮会带你进入一个新屏幕，提供两个选项，如下所示：
- en: Stop My Server
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止我的服务器
- en: My Server
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的服务器
- en: '![](img/84688a22-6847-4380-abe5-3181dfe5b590.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84688a22-6847-4380-abe5-3181dfe5b590.png)'
- en: 'Clicking on the Stop My Server button stops your Jupyter installation and brings
    you to a page with one button: My Server (as shown in the following section).
    You may also have noticed the changes that have occurred in the console log of
    your command line:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“停止我的服务器”按钮会停止你的 Jupyter 安装，并带你进入一个只包含一个按钮的页面：我的服务器（如下节所示）。你可能还注意到命令行控制台日志中发生的变化：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](img/67f342c6-ec25-48ef-82b8-2fa350c05948.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/67f342c6-ec25-48ef-82b8-2fa350c05948.png)'
- en: 'Clicking on the My Server button brings you back to the Jupyter home page.
    If you had hit the Stop My Server button earlier, then the underlying Jupyter
    software would be restarted, as you may notice in the console output (which I
    have shown as follows):'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“我的服务器”按钮将带你回到 Jupyter 首页。如果你之前点击过“停止我的服务器”按钮，那么底层的 Jupyter 软件将会重新启动，正如你在控制台输出中可能会注意到的那样（如下所示）：
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: JupyterHub summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JupyterHub 概述
- en: So, in summary, with JupyterHub we have an installation of Jupyter that will
    maintain a separate instance of the Jupyter software for each user and thereby
    avoid any collision on variable values. The software knows whether to instantiate
    a new instance of Jupyter since the user logs in to the application and the system
    maintains a user list.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，通过 JupyterHub，我们安装了一个 Jupyter 实例，它会为每个用户保持一个独立的 Jupyter 软件实例，从而避免变量值的冲突。软件能够识别是否需要实例化新的
    Jupyter 实例，因为用户会登录应用程序，而系统会维护用户列表。
- en: Docker
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker
- en: Docker is another mechanism that can be used to allow multiple users of the
    same Notebook without collision. Docker is a system that allows you to construct
    sets of applications into an image that can be run in a container. Docker runs
    in most environments. Docker allows for many instances of an image to be run in
    the same machine, but to maintain a separate address space. So, each user of a
    Docker image has their own instance of the software and their own set of data/variables.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 是另一种可以让多个用户共享同一个 Notebook 而不发生冲突的机制。Docker 是一个允许你将应用程序集成成镜像并在容器中运行的系统。Docker
    适用于大多数环境。Docker 允许在同一台机器上运行多个镜像实例，但保持独立的地址空间。因此，Docker 镜像的每个用户都有自己的软件实例和独立的数据/变量集。
- en: Each image is a complete stack of software necessary to run, for example, a
    web server, web application(s), APIs, and more.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 每个镜像是运行所需软件的完整堆栈，例如，Web 服务器、Web 应用程序、API 等。
- en: It is not a large leap to think of an image of your Notebook. The image contains
    Jupyter server code and your Notebook. The result is a completely intact unit
    that does not share any space with another's instance.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Notebook 的镜像进行思考并不是一件难事。该镜像包含 Jupyter 服务器代码和你的 Notebook，结果是一个完全独立的单元，不与其他实例共享任何空间。
- en: Installation
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: Installing Docker involves downloading the latest file (the `docker.dmg` file
    for a macOS and the `.exe` file install for Windows) and then copying the Docker
    applications into your `Applications` folder. **Docker QuickStart** **Terminal**
    is the go-to application of use to most developers. Docker QuickStart will start
    Docker on your local machine, allocate an IP address / port number for addressing
    the Docker application(s), and bring you into the Docker Terminal. Once QuickStart
    has completed, if you have installed your image, you could access your application
    (in this case, your Jupyter Notebook).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Docker 涉及下载最新的文件（macOS 的 `docker.dmg` 文件和 Windows 的 `.exe` 安装文件），然后将 Docker
    应用程序复制到你的 `Applications` 文件夹中。**Docker QuickStart** **终端** 是大多数开发者使用的主要应用程序。Docker
    QuickStart 会在本地机器上启动 Docker，为 Docker 应用程序分配一个 IP 地址 / 端口号，并进入 Docker 终端。一旦 QuickStart
    完成，如果你已安装镜像，你可以访问你的应用程序（在本例中是 Jupyter Notebook）。
- en: From the Docker Terminal, you can load images, remove images, check status,
    and more.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Docker 终端，你可以加载镜像、删除镜像、检查状态等。
- en: Starting Docker
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动 Docker
- en: 'If you run `Docker QuickStart`, you will be brought to the Docker Terminal
    window with a display like the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你运行 `Docker QuickStart`，你将进入 Docker 终端窗口，显示类似于以下内容：
- en: '[PRE15]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: (The odd graphic near the end of the display is a character representation of
    a whale—the logo for Docker.)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: （显示末尾附近的奇怪图形是鲸鱼的字符表示——Docker 的标志。）
- en: 'You can see the following from the output:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从输出中看到以下内容：
- en: The Docker machine was started—the Docker machine controls the images that are
    running in your space
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 机器已启动——Docker 机器控制着在你的空间中运行的镜像。
- en: If you are using certificates, the certificates are copied into your Docker
    space
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你正在使用证书，证书将被复制到你的 Docker 空间中。
- en: Lastly, it tells you the IP address to use when accessing your Docker instances—it
    should be the IP address of the machine you are using
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，它会告诉你在访问 Docker 实例时使用的 IP 地址——应该是你正在使用的机器的 IP 地址。
- en: Building your Jupyter image for Docker
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Docker 构建你的 Jupyter 镜像
- en: Docker knows about images that contain the entire software stack necessary to
    run an application. We need to build an image with a Notebook and place this in
    Docker.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 知道包含运行应用程序所需整个软件堆栈的镜像。我们需要构建一个包含 Notebook 的镜像，并将其放入 Docker 中。
- en: 'We need to download all of the Jupyter-Docker coding necessary. In the Docker
    Terminal window, we run the following command:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要下载所有必要的 Jupyter-Docker 编码。在 Docker 终端窗口中，我们运行以下命令：
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This is a large download that will take some time. It is downloading and installing
    all of the possibly necessary components needed to run Jupyter in an image. Remember
    that each image is completely self-contained so each image has ALL of the software
    needed to run Jupyter.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个较大的下载过程，需要一些时间。它正在下载并安装运行 Jupyter 所需的所有可能组件。请记住，每个镜像都是完全自包含的，所以每个镜像都有运行
    Jupyter 所需的全部软件。
- en: 'Once the download is complete, we can start an image for our Notebook using
    a command such as the following:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，我们可以使用以下命令启动一个 Notebook 镜像：
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '`docker run`: The command to Docker to start executing an image.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker run`：告诉 Docker 执行一个镜像的命令。'
- en: '`-d`: Runs the image as a server (daemon) that will continue running until
    manually stopped by the user.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-d`：将镜像作为服务器（守护进程）运行，直到用户手动停止。'
- en: '`-p 8888:8888`: Exposes the internal port `8888` to external users with the
    same port address. Notebooks use port `8888` by default already, so we are saying
    just expose the same port.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p 8888:8888`：将内部端口 `8888` 暴露给外部用户，使用相同的端口地址。Notebook 默认已经使用端口 `8888`，所以我们只是表示暴露相同的端口。'
- en: '`-v /disk-directory:/virtual-notebook`: Takes the Notebook from the `disk-directory`
    and exposes it as the `virtual-notebook` name.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-v /disk-directory:/virtual-notebook`：将来自 `disk-directory` 的 Notebook 以 `virtual-notebook`
    名称暴露出来。'
- en: 'The last argument is to use `all-spark-notebook` as the basis for this image.
    In my case, I used the following command:'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后的参数是使用 `all-spark-notebook` 作为该镜像的基础。在我的例子中，我使用了以下命令：
- en: '[PRE18]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The big hex number displayed is the image identifier. We can make sure the
    image is running using the `docker ps -l` command that lists out the images in
    our Docker:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的长 hex 数字是镜像标识符。我们可以使用 `docker ps -l` 命令检查镜像是否正在运行，这个命令会列出我们 Docker 中的所有镜像：
- en: '[PRE19]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The parts of the display are as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的部分如下：
- en: The first name `b59...` is the assigned ID of the container. Each image in Docker
    is assigned to a container.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个名称 `b59...` 是容器的分配 ID。Docker 中的每个镜像都被分配给一个容器。
- en: The image is `jupyter/all-spark-notebook`, and it contains all of the software
    needed to run your Notebook.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 镜像是 `jupyter/all-spark-notebook`，它包含运行 Notebook 所需的所有软件。
- en: The command is telling Docker to start the image.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该命令告诉 Docker 启动镜像。
- en: 'The port access point is as we expected: `8888`.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口访问点是我们预期的：`8888`。
- en: Lastly, Docker assigns random names to every running image `modest_bardeen` (not
    sure why they do this).
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，Docker 为每个正在运行的镜像分配随机名称 `modest_bardeen`（不确定为什么这么做）。
- en: 'If we try to access Docker Jupyter at this point, we will be asked to set up
    security for the system, as in this display:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们此时尝试访问 Docker Jupyter，我们将被要求为系统设置安全性，如此显示所示：
- en: '**![](img/bd6c29f8-ecfb-4afe-a91c-2a4f0bbe1b98.png)**'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/bd6c29f8-ecfb-4afe-a91c-2a4f0bbe1b98.png)**'
- en: 'Once we have set up security, we should be able to access the Notebook from
    a browser at `http:// 127.0.0.1:8888`. We saw the preceding IP address when Docker
    started (`0.0.0.0`) and we are using port `8888` as we specified:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们设置好安全性，我们应该能够通过浏览器访问 Notebook，地址为 `http:// 127.0.0.1:8888`。我们在 Docker 启动时看到过前面的
    IP 地址（`0.0.0.0`），并且我们使用的是指定的端口 `8888`：
- en: '**![](img/312cafba-1a33-43c6-8aad-01f904ed7bec.png)**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/312cafba-1a33-43c6-8aad-01f904ed7bec.png)**'
- en: 'You can see the URL in the top-left corner. Beneath that, we have a standard
    empty Notebook. The Docker image used has all of the latest versions, so you do
    not have to do anything special to get updated software or components for your
    Notebook. You can see the language options available by pulling down the New menu:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在左上角看到 URL。在其下方，我们有一个标准的空 Notebook。所使用的 Docker 镜像包含了所有最新版本，因此你无需做任何额外操作就能获取更新的软件或组件。你可以通过下拉
    "New" 菜单来查看可用的语言选项：
- en: '**![](img/40a025d2-d91b-4f11-b81a-084e30b8a581.png)**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/40a025d2-d91b-4f11-b81a-084e30b8a581.png)**'
- en: Docker summary
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker 总结
- en: We have installed Docker, and we have created an image with our Notebook. We
    have also placed the Docker image into Docker, and we have accessed our Docker
    Notebook image.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经安装了 Docker，并且创建了一个包含我们的 Notebook 的镜像。我们还将该 Docker 镜像放入 Docker 中，并且访问了我们的
    Docker Notebook 镜像。
- en: Summary
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to expose a Notebook so that multiple users
    can use a Notebook at the same time. We saw an example of an error occurring.
    We installed a Jupyter server that addresses the problem, and we used Docker to
    alleviate the issue as well.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何暴露一个 Notebook，以便多个用户可以同时使用该 Notebook。我们看到了一个错误发生的例子。我们安装了一个解决该问题的
    Jupyter 服务器，并且使用 Docker 来缓解这个问题。
- en: In the next chapter, we will look at some upcoming feature enhancements for
    Jupyter.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将会看看 Jupyter 的一些即将发布的功能增强。
