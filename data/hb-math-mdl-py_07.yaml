- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Kalman Filter
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卡尔曼滤波器
- en: In a dynamic system, there is uncertain information. To capture the uncertainty,
    yet another mathematical tool, called the Kalman filter, comes into play. One
    can utilize the Kalman filter to optimally estimate the system’s next state, and
    it is ideal for continuously changing systems. It is especially useful for handling
    noisy sensor data by collating sensor data to best estimate the parameter of interest.
    In other words, the Kalman filter is an estimator of the system’s states in the
    presence of imprecise and uncertain measurements. It is mostly useful for the
    estimation of unobserved variables in real time.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在动态系统中，存在不确定信息。为了捕捉这些不确定性，另一个数学工具——卡尔曼滤波器应运而生。我们可以利用卡尔曼滤波器来最优地估算系统的下一个状态，它特别适用于不断变化的系统。它对于处理噪声传感器数据尤其有用，通过对传感器数据的整合来最佳估算感兴趣的参数。换句话说，卡尔曼滤波器是在不精确和不确定的测量条件下，对系统状态进行估算的工具。它主要用于实时估算未观察到的变量。
- en: The Kalman filter algorithm is widely used in signal processing, target tracking,
    navigation, and control applications. In tracking and control systems, an accurate
    and precise estimation of location and velocity, which are hidden (unknown) states,
    is a challenge. The uncertainty in the measurement of hidden states is attributed
    to external factors, such as atmospheric effects and thermal noise. The Kalman
    filter is an algorithm to estimate the hidden states of a dynamic system and predict
    the future state of the system based on past estimations. It is named after Rudolf
    E. Kalman, who published his famous paper on a recursive solution to a discrete
    data linear-filtering problem in 1960.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 卡尔曼滤波算法广泛应用于信号处理、目标跟踪、导航和控制等领域。在跟踪和控制系统中，位置和速度的准确精确估算是一个挑战，因为它们是隐藏（未知）状态。隐藏状态测量中的不确定性通常归因于外部因素，如大气效应和热噪声。卡尔曼滤波器是一种估算动态系统隐藏状态并根据过去的估算预测系统未来状态的算法。它以
    Rudolf E. Kalman 的名字命名，他在1960年发表了关于离散数据线性滤波问题的递归解决方案的著名论文。
- en: A system is governed by a set of equations, and this set is called a dynamic
    model or state space model. If a system’s current state and the dynamic model
    are known, the subsequent state can be estimated. The uncertainty in the dynamic
    model is influenced by external factors and is called process noise. This is the
    error or misalignment between the equations of motion and the actual motion of
    the system. The random error or uncertainty in measurement is called measurement
    noise. In order to improve the estimation of the future state of the system, it
    becomes essential to account for process noise as well as measurement noise. The
    Kalman filter takes both of these uncertainties into account.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一个系统由一组方程控制，这组方程称为动态模型或状态空间模型。如果已知系统的当前状态和动态模型，就可以估算出后续状态。动态模型中的不确定性受外部因素的影响，称为过程噪声。这是运动方程与系统实际运动之间的误差或偏差。测量中的随机误差或不确定性被称为测量噪声。为了提高对系统未来状态的估算，必须考虑过程噪声和测量噪声。卡尔曼滤波器会同时考虑这两种不确定性。
- en: 'Any measured (or computed) parameter is an estimate and it can be significantly
    improved by the usage of multiple sensors. In this regard, two terms, namely,
    accuracy and precision, have to be understood well as they cannot be used interchangeably.
    Accuracy indicates the closeness of the measurement to the true value, while precision
    indicates the variability in measurements of the same parameter. Accuracy and
    precision form the basis of an estimate of a hidden state of the system. *Figure
    7**.1* shows the high accuracy and high precision of an estimate:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 任何测量（或计算）的参数都是一个估算值，通过使用多个传感器，可以显著提高估算精度。在这方面，有两个术语需要明确理解，它们不能互换使用，分别是准确度和精度。准确度表示测量值与真实值之间的接近程度，而精度表示相同参数测量值的变异性。准确度和精度构成了对系统隐藏状态估算的基础。*图
    7.1* 显示了高精度和高准确度的估算：
- en: '![Figure 7.1: High accuracy and high precision of measurement](img/Figure_07_01_B18943.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1：高精度和高准确度的测量](img/Figure_07_01_B18943.jpg)'
- en: 'Figure 7.1: High accuracy and high precision of measurement'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1：高精度和高准确度的测量
- en: Unbiased systems have no or significantly low built-in systematic error (bias)
    and, hence, are high-accuracy systems. Real systems are biased and have process
    noise. High-precision systems have low variance (or low uncertainty). The influence
    of variance can be reduced by averaging (smoothing) measurements. The more measurements,
    the closer the estimate to the true value. A **probability distribution function**
    (**PDF**) describes a measurement as it is a random variable. The dispersion in
    distribution (*Figure 7**.2*) shows the measurement noise. In a low-precision
    and low-accuracy system, the estimates are neither close to each other nor to
    the true value and they will be spread all over the four quadrants of spatial
    coordinates.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 无偏系统没有或只有极低的内建系统误差（偏差），因此是高精度系统。实际系统是有偏的，并且有过程噪声。高精度系统具有低方差（或低不确定性）。通过对测量值进行平均（平滑），可以减小方差的影响。测量次数越多，估算值越接近真实值。**概率分布函数**（**PDF**）将测量值描述为一个随机变量。分布的离散度（*图
    7.2*）显示了测量噪声。在低精度和低准确度系统中，估计值既不彼此接近，也不接近真实值，且将分布在空间坐标的四个象限中。
- en: '![Figure 7.2: Measurement distribution](img/Figure_07_02_B18943.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.2：测量分布](img/Figure_07_02_B18943.jpg)'
- en: 'Figure 7.2: Measurement distribution'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2：测量分布
- en: 'Now that the concepts of a measurement and its precision and accuracy are clear,
    we will discuss how the Kalman filter works. This chapter covers topics that are
    essentially the component steps of this estimation algorithm, concluding with
    an illustrative Python code:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经清楚了测量值的概念及其精度和准确度，我们将讨论卡尔曼滤波器是如何工作的。本章涵盖了这一估算算法的基本步骤，最后会给出一个示范的 Python
    代码：
- en: Computation of measurements
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量值的计算
- en: Filtration of measurements
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量值的滤波
- en: Implementation of the Kalman filter
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卡尔曼滤波器的实现
- en: The Kalman filter will be tested out with an example to estimate the position
    (displacement) and velocity of a moving object using Python in the last section.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 卡尔曼滤波器将在最后一节中通过一个示例进行测试，用 Python 来估算一个移动物体的位置（位移）和速度。
- en: Computation of measurements
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量值的计算
- en: We will start with a flow diagram of the Kalman filter algorithm, shown in *Figure
    7**.3a*. The Kalman filter requires an initial guess to start with. This input
    can be a very rough estimate. So, step 0 is the initial guess and step 1 is the
    measurement of the state variable.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从卡尔曼滤波器算法的流程图开始，如*图 7.3a*所示。卡尔曼滤波器需要一个初始猜测来开始，这个输入可以是一个非常粗略的估计。因此，步骤 0 是初始猜测，步骤
    1 是状态变量的测量。
- en: '![Figure 7.3a: Flow diagram of the Kalman filter](img/Figure_07_03_B18943.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.3a：卡尔曼滤波器的流程图](img/Figure_07_03_B18943.jpg)'
- en: 'Figure 7.3a: Flow diagram of the Kalman filter'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3a：卡尔曼滤波器的流程图
- en: When the input is a measured value, the output is the current state estimated
    using the state update equation in step 2, which is calculated from the predicted
    value of the current state and the residual scaled (updated) by a factor called
    the Kalman gain. The Kalman gain takes the input measurement uncertainty into
    account, the residual being the difference between the measured and predicted
    values. This update and estimate make the second step in the algorithm.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当输入是测量值时，输出是使用步骤 2 中的状态更新方程估算的当前状态，该状态是根据当前状态的预测值和由一个叫做卡尔曼增益的因子缩放（更新）的残差计算出来的。卡尔曼增益考虑了输入测量的不确定性，残差是测量值和预测值之间的差异。这一更新和估算构成了算法中的第二步。
- en: 'The output from step 2 is fed to predict the next state of the system. The
    state for the next iteration is predicted using the dynamic model. The prediction
    in step 3 is basically an extrapolation of the current state utilizing the set
    of equations of dynamism. This continues for several iterations and the Kalman
    gain is calculated at each iteration. An illustrative example of tracking the
    values (true, measured, estimated, and predicted) of a constant velocity aircraft
    in one dimension is shown in *Figure 7**.3b*, which also exemplifies a univariate
    Kalman filter:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 2 的输出被用来预测系统的下一状态。下一次迭代的状态通过动态模型来预测。步骤 3 中的预测基本上是利用动态方程组对当前状态的外推。这一过程会持续多个迭代，每次迭代都会计算卡尔曼增益。*图
    7.3b* 中展示了一个示例，追踪了一个常速飞机在一维空间中的值（真实值、测量值、估计值和预测值），这也举例了一个单变量卡尔曼滤波器：
- en: '![Figure 7.3b: Estimated and predicted values (positions) of constant velocity
    aircraft](img/Figure_07_04_B18943.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.3b：常速飞机的估算值和预测值（位置）](img/Figure_07_04_B18943.jpg)'
- en: 'Figure 7.3b: Estimated and predicted values (positions) of constant velocity
    aircraft'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3b：恒速飞行器的估计值和预测值（位置）
- en: It is evident from the figure that the estimation algorithm (Kalman filter)
    has a smoothing effect on the measurements and converges toward the true value
    with an increasing number of iterative steps. The next section describes the filtration
    of random variables in the form of measurements to optimize the uncertainty in
    the estimate.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从图中可以看出，估计算法（卡尔曼滤波器）对测量值具有平滑作用，并且随着迭代步数的增加，估计值逐渐趋近于真实值。下一节描述了如何以测量形式对随机变量进行滤波，以优化估计中的不确定性。
- en: Filtration of measurements
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量值的滤波
- en: 'The Kalman filter has inputs and outputs like any filter. The inputs are noisy
    and inaccurate measurements, while the outputs are much less noisy and more accurate
    estimates. Mathematically speaking, the inputs to the filter are a measured value
    and measurement covariance matrix. The dynamic system model is the state transition
    matrix (representing equations) and process noise covariance matrix, the Kalman
    gain is internal and dependent on the system, and the outputs from the filter
    are the state variable and state covariance matrix. This is illustrated in *Figure
    7**.4a*:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 卡尔曼滤波器具有与任何滤波器相似的输入和输出。输入是噪声大且不准确的测量值，而输出则是噪声较小、估计更准确的值。从数学角度来看，滤波器的输入是测量值和测量协方差矩阵。动态系统模型是状态转移矩阵（表示方程）和过程噪声协方差矩阵，卡尔曼增益是内部的，并且依赖于系统，滤波器的输出是状态变量和状态协方差矩阵。如*图
    7.4a*所示：
- en: '![Figure 7.4a: Input and output of the Kalman filter](img/Figure_07_05_B18943.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.4a：卡尔曼滤波器的输入和输出](img/Figure_07_05_B18943.jpg)'
- en: 'Figure 7.4a: Input and output of the Kalman filter'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4a：卡尔曼滤波器的输入和输出
- en: When an estimate is propagated in time, the future state is inherently uncertain
    and hence, the error covariance matrix grows with time. The dynamic model (equations
    of motion) is approximate; the process noise (uncertainty) adds to the existing
    noise, and this is represented by the process noise covariance matrix. The estimate
    needs to be converted from the state space to the measurement space and this conversion
    is done via another matrix (state-to-measurement). For Kalman filters applied
    to linear systems discussed in this chapter, this transformation matrix is simple,
    whereas the transformation can be complex for non-linear (or extended) Kalman
    filters. If the system is non-linear, a non-linear state estimator or filter is
    utilized. For example, extended Kalman filters do a linearization of the distribution
    around the mean of the current estimate and use it in the predict and update states
    of the algorithm.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当估计值在时间上传播时，未来状态本质上是不可确定的，因此，误差协方差矩阵会随着时间的推移而增长。动态模型（运动方程）是近似的，过程噪声（不确定性）会增加已有的噪声，这由过程噪声协方差矩阵表示。估计值需要从状态空间转换到测量空间，这一转换是通过另一个矩阵（状态到测量矩阵）完成的。对于本章讨论的应用于线性系统的卡尔曼滤波器，这一变换矩阵较为简单，而对于非线性（或扩展）卡尔曼滤波器，变换可能会更为复杂。如果系统是非线性的，则使用非线性状态估计器或滤波器。例如，扩展卡尔曼滤波器会对当前估计的均值附近的分布进行线性化，并将其应用于算法的预测和更新状态。
- en: The Kalman gain is computed in each iteration and it determines the influence
    of the input measurement (new information) on the estimate. If the input measurement
    is very noisy, the Kalman gain will trust its current state estimate more than
    the input. The Kalman filter has the ability to recognize how to appropriately
    put weights on its current estimate and a new input measurement at each time step
    to produce an optimal estimate.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 卡尔曼增益在每次迭代中计算，并决定输入测量（新信息）对估计的影响。如果输入测量非常嘈杂，卡尔曼增益会更多依赖当前的状态估计而非输入。卡尔曼滤波器能够在每个时间步长上识别如何适当地对当前估计和新的输入测量赋予权重，从而生成最优估计。
- en: '![Figure 7.4b: Kalman filtering in the form of distribution functions](img/Figure_07_06_B18943.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.4b：以分布函数形式表示的卡尔曼滤波](img/Figure_07_06_B18943.jpg)'
- en: 'Figure 7.4b: Kalman filtering in the form of distribution functions'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4b：以分布函数形式表示的卡尔曼滤波
- en: To summarize, the Kalman filter is an optimal filter that treats two random
    variables (prior estimate and measurement) to estimate the current state variable,
    as shown in *Figure 7**.4b*, by minimizing the uncertainty. If we have a prior
    distribution with a high variance and a measured distribution with a lower variance,
    the Kalman filter combines the two to estimate a distribution with a higher peak
    and narrower variance than the prior.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，卡尔曼滤波器是一种最优滤波器，它通过最小化不确定性来处理两个随机变量（先验估计和测量），以估计当前状态变量，如*图 7.4b*所示。如果我们有一个高方差的先验分布和一个低方差的测量分布，卡尔曼滤波器将两者结合起来，估计出一个比先验分布峰值更高、方差更窄的分布。
- en: In the following section, the computation and filtration of measurements leveraging
    the Kalman filter estimation algorithm are implemented with Python code.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，将实现基于卡尔曼滤波估计算法的测量计算与滤波过程，并使用Python代码。
- en: Implementation of the Kalman filter
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卡尔曼滤波器的实现
- en: 'In this illustrative example, time-series data is used as input and the Kalman
    filter provides estimates at each time step. The example is of a moving vehicle
    for which initializations of velocity, displacement, and acceleration are made.
    Acceleration values at different time steps are also incorporated. The kinematic
    equation, which relates displacement, velocity, and acceleration of the vehicle,
    yields the true values:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，使用时间序列数据作为输入，卡尔曼滤波器在每个时间步骤提供估计值。该示例展示了一辆移动的车辆，并进行了速度、位移和加速度的初始化。不同时间步的加速度值也被包含在内。描述车辆位移、速度和加速度之间关系的运动学方程式提供了真实值：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Random noise (error) is added to the true values in the form of small perturbations,
    and measurements are determined:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 随机噪声（误差）以小扰动的形式添加到真实值中，并确定了测量值：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can compare the true values with the measured values of displacement. On
    running the following piece of code, we obtain a visual comparison (*Figure 7**.5*).
    Similarly, we can make a visual comparison of true values with the measured values
    of velocity as well:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将真实值与位移的测量值进行比较。运行以下代码后，我们得到一个视觉对比（*图 7.5*）。类似地，我们也可以对真实值和速度的测量值进行视觉对比：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Figure 7.5: True values versus measurements for displacement](img/Figure_07_07_B18943.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.5：位移的真实值与测量值](img/Figure_07_07_B18943.jpg)'
- en: 'Figure 7.5: True values versus measurements for displacement'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5：位移的真实值与测量值
- en: 'We are, therefore, done with the computation of measurements. Next is the filtration
    of measurements for which the noisy data is fed into the Kalman filter. Displacement
    and velocity are initialized and the error covariance (`Q`) is estimated. The
    transition matrix (`A`) is also used wherein it is assumed acceleration of the
    vehicle is unknown. The measurement error (`R`) is higher than the estimation
    error due to noise in the data. `H` in the following code yields states and `P`
    is the error matrix:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经完成了测量值的计算。接下来是测量值的滤波过程，其中噪声数据被输入到卡尔曼滤波器中。初始化了位移和速度，并估计了误差协方差（`Q`）。同时使用了转移矩阵（`A`），假设车辆的加速度是未知的。由于数据中的噪声，测量误差（`R`）高于估计误差。以下代码中的`H`提供了状态，`P`是误差矩阵：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can now compare the true values with an estimated value of displacement
    as well as velocity. On running the following piece of code, we obtain a visual
    comparison (*Figure 7**.6*) of only displacement:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以将真实值与位移和速度的估计值进行比较。运行以下代码后，我们得到一个仅关于位移的视觉对比（*图 7.6*）：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 7.6: True values versus estimated values of displacement](img/Figure_07_08_B18943.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.6：位移的真实值与估计值](img/Figure_07_08_B18943.jpg)'
- en: 'Figure 7.6: True values versus estimated values of displacement'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6：位移的真实值与估计值
- en: 'It is evident that the Kalman filter provides estimates of the displacement
    of a moving vehicle that are very close to the true values when used on noisy
    data. The example of a moving vehicle used in the algorithm implementation is
    illustrated in *Figure 7**.7*:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 显而易见，当使用卡尔曼滤波器处理带噪数据时，它能够提供与真实值非常接近的位移估计。算法实现中使用的移动车辆示例如*图 7.7*所示：
- en: '![Figure 7.7: Optimal state estimate of a moving vehicle](img/Figure_07_09_B18943.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.7：移动车辆的最优状态估计](img/Figure_07_09_B18943.jpg)'
- en: 'Figure 7.7: Optimal state estimate of a moving vehicle'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.7：移动车辆的最优状态估计
- en: Though synthetic data was utilized in the Python code, the usage and application
    are generic, and the algorithm works for a dynamic system provided the matrices
    governing the system dynamics are set up properly.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在Python代码中使用了合成数据，但该算法的使用和应用是通用的，只要系统动态的矩阵设置得当，该算法就能有效作用于动态系统。
- en: Summary
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the Kalman filter – the estimation and prediction
    algorithm utilized to solve problems in signal processing, navigation, and control
    systems. There are linear and univariate (one-dimensional) Kalman filters in which
    the system dynamics are assumed to be linear. Many dynamic processes, however,
    have more than one dimension, and in such cases, we utilize multivariate and mostly
    non-linear (or extended) Kalman filters. For example, the state vector that describes
    a moving object’s position and velocity in space is six-dimensional, and a non-linear
    Kalman filter is utilized to determine the displacement (and velocity) in space
    of such an object. Also, the Kalman filter consumes low computational power (leading
    to a shorter runtime) due to the usage of matrices in its operation that occupy
    less computer memory. The Kalman filter is arguably the best estimation algorithm
    with noisy data as it mitigates the uncertainty by combining the information we
    have and providing us with a distribution we can feel more confident about.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了卡尔曼滤波器——一种用于解决信号处理、导航和控制系统问题的估计与预测算法。卡尔曼滤波器包括线性和单变量（即一维）滤波器，其中假设系统动态是线性的。然而，许多动态过程具有多维度，在这种情况下，我们使用多变量且通常是非线性的（或扩展的）卡尔曼滤波器。例如，描述一个运动物体的位置和速度的状态向量是六维的，而非线性卡尔曼滤波器被用来确定此类物体在空间中的位移（和速度）。此外，由于卡尔曼滤波器在操作中使用占用较少计算机内存的矩阵，它消耗的计算资源较少（从而减少运行时间）。卡尔曼滤波器被认为是在噪声数据下最好的估计算法，因为它通过结合我们已有的信息，提供了一个更具信心的分布，从而减轻了不确定性。
- en: The next chapter is the last one in this part (*Mathematical Tools*) of the
    book and is about the Markov chain, an algorithm to sample states from a population
    with a complex probability distribution. It is a probabilistic tool to traverse
    a system of states. In other words, it randomly walks across a graph and helps
    predict the next state just from knowledge of the present.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章是本书这一部分（*数学工具*）的最后一章，内容是关于马尔可夫链的，它是一种从具有复杂概率分布的总体中采样状态的算法。它是一个用于遍历状态系统的概率工具。换句话说，它在图上随机行走，并帮助根据当前知识预测下一个状态。
