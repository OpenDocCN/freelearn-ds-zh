- en: The pandas Library Architecture
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 库架构
- en: 'In this chapter, we examine the various libraries that are available to pandas
    users. This chapter is intended to be a short guide to help the user to navigate
    and find their way around the various modules and libraries that pandas provides.
    It gives a breakdown of how the library code is organized, and it gives a brief
    description of the various modules. It will be most valuable to users who are
    interested in seeing the inner workings of pandas , as well as to those who wish
    to make contributions to the code base. We will also briefly demonstrate how you
    can improve performance using Python extensions. The various topics that will
    be discussed are as follows:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨 pandas 用户可以使用的各种库。本章旨在成为一本简短的指南，帮助用户浏览和了解 pandas 提供的各种模块和库。它详细描述了库代码的组织结构，并简要介绍了各种模块。这对于希望了解
    pandas 内部工作原理的用户，以及希望为代码库做出贡献的用户，将是非常有价值的。我们还将简要演示如何使用 Python 扩展来提高性能。以下是本章将讨论的各个主题：
- en: Introduction to the pandas library hierarchy
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 库层次结构简介
- en: Description of pandas modules and files
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 模块和文件的描述
- en: Improving performance using Python extensions
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Python 扩展提高性能
- en: Understanding the pandas file hierarchy
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 pandas 文件层次结构
- en: 'Generally, upon installation, pandas is installed as a Python module in a standard
    location for third-party Python modules. In the following table, you will see
    the standard installation location for Unix/ macOS and the Windows platform:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在安装时，pandas 会作为 Python 模块安装在第三方 Python 模块的标准位置。在下表中，您可以看到 Unix/macOS 和
    Windows 平台的标准安装位置：
- en: '| **Platform** | **Standard installation location** | **Example** |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| **平台** | **标准安装位置** | **示例** |'
- en: '| Unix/macOS | `prefix/lib/pythonX.Y/site-packages` | `/usr/local/lib/python2.7/site-packages`
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| Unix/macOS | `prefix/lib/pythonX.Y/site-packages` | `/usr/local/lib/python2.7/site-packages`
    |'
- en: '| Windows | `prefix\Lib\site-packages` | `C:\Python27\Lib\site-packages` |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| Windows | `prefix\Lib\site-packages` | `C:\Python27\Lib\site-packages` |'
- en: 'If Python installation was done with Anaconda, then the pandas module can be
    found in the Anaconda directory, within a similar file path: `Anaconda3\pkgs\pandas-0.23.4-py37h830ac7b_0\Lib\site-packages\pandas`.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果通过 Anaconda 安装 Python，那么 pandas 模块可以在 Anaconda 目录下找到，类似的文件路径为：`Anaconda3\pkgs\pandas-0.23.4-py37h830ac7b_0\Lib\site-packages\pandas`。
- en: 'Now that we have had a look at the module on third-party Python modules, we
    will understand the file hierarchy. There are eight types of file in the installed
    Pandas library. The installed files follow a specific hierarchy, which is described
    here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了第三方 Python 模块部分，接下来将了解文件层次结构。已安装的 Pandas 库包含八种类型的文件。这些文件遵循特定的层次结构，下面描述了这一结构：
- en: '`pandas/core`: This contains files for fundamental data structures, such as
    Series/DataFrames and related functionalities.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/core`：该文件包含用于基本数据结构（如 Series/DataFrame）及相关功能的文件。'
- en: '`pandas/src`: This contains Cython and C code for implementing fundamental
    algorithms.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/src`：该文件包含用于实现基本算法的 Cython 和 C 代码。'
- en: '`pandas/io`: This contains input/output tools for handling different file formats,
    such as flat files, Excel, HDF5, and SQL.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/io`：该文件包含处理不同文件格式的输入/输出工具，如平面文件、Excel、HDF5 和 SQL。'
- en: '`pandas/tools`: This contains auxiliary data algorithms, merge and join routines,
    concatenation, pivot tables, and more. This module primarily serves data-manipulation
    operations.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/tools`：该文件包含辅助数据算法、合并和连接例程、拼接、透视表等。该模块主要用于数据操作。'
- en: '`pandas/sparse`: This contains sparse versions of data structures, such as
    series, DataFrame, Panels, and more.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/sparse`：该文件包含稀疏版本的数据结构，如系列、DataFrame、Panels 等。'
- en: '`pandas/stats`: This contains linear and panel regression, moving window regression,
    and several other statistical functions. This should be replaced by functionality
    in statsmodels.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/stats`：该文件包含线性回归、面板回归、移动窗口回归以及其他一些统计函数。它应该被 statsmodels 中的功能所替代。'
- en: '`pandas/util`: This contains utilities and development and testing tools.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/util`：该文件包含实用工具以及开发和测试工具。'
- en: '`pandas/rpy`: This contains the RPy2 interface for connecting to R, thereby
    widening the scope of analytical operations on data.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas/rpy`：该文件包含 RPy2 接口，用于连接 R，从而扩展数据分析操作的范围。'
- en: 'For more information, see: [http://pandas.pydata.org/developers.html](http://pandas.pydata.org/developers.html).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参见：[http://pandas.pydata.org/developers.html](http://pandas.pydata.org/developers.html)。
- en: Description of pandas modules and files
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 模块和文件的描述
- en: In this section, we provide brief descriptions of the various sub-modules and
    files that make up the pandas library.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们简要描述了构成 pandas 库的各个子模块和文件。
- en: pandas/core
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/core
- en: 'The module contains the core submodules of pandas. They are discussed as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块包含了 pandas 的核心子模块，具体讨论如下：
- en: '`api.py`: This imports some key modules and warnings for later use, such as
    indexing, `groupby`, and reshaping functions.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`api.py`：该模块导入了一些关键模块和警告信息，以供后续使用，例如索引、`groupby` 和重塑函数。'
- en: '`apply.py`: This module contains classes that help to apply a function to a
    DataFrame or series.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`apply.py`：该模块包含一些类，帮助将函数应用到 DataFrame 或 series 上。'
- en: '`arrays`: This isolates pandas'' exposure to `numpy`—that is, all direct `numpy`
    usage. The `base.py` submodule of array handles all array-oriented operations,
    such as the `ndarray` value, shape, and `ndim`, while the `categorical.py` submodule
    caters specifically for categorical values.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`arrays`：该模块隔离了 pandas 对 `numpy` 的依赖——即所有直接使用 `numpy` 的操作。`array` 子模块中的 `base.py`
    处理所有面向数组的操作，例如 `ndarray` 值、形状和 `ndim`，而 `categorical.py` 子模块专门处理分类值。'
- en: '`base.py`: This defines fundamental classes such as `StringMixin` and `PandasObject`,
    which is the base class for various pandas objects, such as `Period`, `PandasSQLTable`,
    `sparse.array.SparseArray`/`SparseList`, `internals.Block`, `internals.BlockManager`,
    `generic.NDFrame`, `groupby.GroupBy`, `base.FrozenList`, `base.FrozenNDArray`,
    `io.sql.PandasSQL`, `io.sql.PandasSQLTable`, `tseries.period.Period`, `FrozenList`,
    `FrozenNDArray: IndexOpsMixin`, and `DatetimeIndexOpsMixin`.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`base.py`：该模块定义了诸如 `StringMixin` 和 `PandasObject` 等基础类，`PandasObject` 是多个 pandas
    对象的基类，例如 `Period`、`PandasSQLTable`、`sparse.array.SparseArray`/`SparseList`、`internals.Block`、`internals.BlockManager`、`generic.NDFrame`、`groupby.GroupBy`、`base.FrozenList`、`base.FrozenNDArray`、`io.sql.PandasSQL`、`io.sql.PandasSQLTable`、`tseries.period.Period`、`FrozenList`、`FrozenNDArray:
    IndexOpsMixin` 和 `DatetimeIndexOpsMixin`。'
- en: '`common.py`: This defines common utility methods for handling data structures.
    For example, the `isnull` object detects missing values.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`common.py`：该模块定义了处理数据结构的常用工具方法。例如，`isnull` 对象用于检测缺失值。'
- en: '`config.py`: This is the module for handling package-wide configurable objects.
    It defines the following classes: `OptionError`, `DictWrapper`, `CallableDynamicDoc`,
    `option_context`, and `config_init`.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.py`：该模块用于处理整个包的可配置对象。它定义了以下类：`OptionError`、`DictWrapper`、`CallableDynamicDoc`、`option_context`
    和 `config_init`。'
- en: '`datetools.py`: This is a collection of functions that deal with dates in Python.
    It also utilizes some functions from the `tseries` module of pandas.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`datetools.py`：这是一个处理 Python 中日期的函数集合。它还利用了 pandas 中 `tseries` 模块的一些函数。'
- en: '`frame.py`: This defines the pandas DataFrame class and its various methods.
    DataFrame inherits from NDFrame (see the following). It borrows functions from
    several submodules under the `pandas-core` module to define the functional aspects
    of a DataFrame.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`frame.py`：该模块定义了 pandas 的 DataFrame 类及其各种方法。DataFrame 继承自 NDFrame（见下文）。它从
    `pandas-core` 模块下的多个子模块借用函数，来定义 DataFrame 的功能性操作。'
- en: '`generic.py`: This defines the generic NDFrame base class, which is a base
    class for pandas DataFrame, series, and panel classes. NDFrame is derived from
    `PandasObject`, which is defined in `base.py`. An NDFrame can be regarded as an
    N-dimensional version of a pandas DataFrame. For more information on this, go
    to [http://nullege.com/codes/search/pandas.core.generic.NDFrame](http://nullege.com/codes/search/pandas.core.generic.NDFrame).'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generic.py`：该模块定义了通用的 NDFrame 基类，这是 pandas 中 DataFrame、series 和 panel 类的基类。NDFrame
    继承自 `PandasObject`，后者在 `base.py` 中定义。NDFrame 可以视为 pandas DataFrame 的 N 维版本。有关更多信息，请访问
    [http://nullege.com/codes/search/pandas.core.generic.NDFrame](http://nullege.com/codes/search/pandas.core.generic.NDFrame)。'
- en: '`categorical.py`: This defines categorical, which is a class that derives from
    `PandasObject` and represents categorical variables ''a'' la R/S-plus. (We will
    expand your knowledge on this a bit more later).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categorical.py`：该模块定义了 `categorical`，它是从 `PandasObject` 派生的一个类，用于表示类似于 R/S-plus
    的分类变量（稍后我们会进一步扩展这一点）。'
- en: '`groupby.py`: This defines various classes that enable the `groupby` functionality:'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby.py`：该模块定义了多种类，用于实现 `groupby` 功能：'
- en: '**Splitter classes**: This includes `DataSplitter`, `ArraySplitter`, `SeriesSplitter`,
    `FrameSplitter`, and `NDFrameSplitter`.'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Splitter 类**：包括 `DataSplitter`、`ArraySplitter`、`SeriesSplitter`、`FrameSplitter`
    和 `NDFrameSplitter`。'
- en: '**Grouper/grouping classe**s: This includes `Grouper`, `GroupBy`, `BaseGrouper`,
    `BinGrouper`, `Grouping`, `SeriesGroupBy`, and `NDFrameGroupBy`.'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Grouper/grouping 类**：包括 `Grouper`、`GroupBy`、`BaseGrouper`、`BinGrouper`、`Grouping`、`SeriesGroupBy`
    和 `NDFrameGroupBy`。'
- en: '`ops.py`: This defines an internal API for arithmetic operations on `PandasObjects`.
    It defines functions that add arithmetic methods to objects. It defines a `_create_methods`
    metamethod, which is used to create other methods using arithmetic, comparison,
    and Boolean method constructors. The `add_methods` method takes a list of new
    methods, adds them to the existing list of methods, and binds them to their appropriate
    classes. The `add_special_arithmetic_methods`, `add_flex_arithmetic_methods`,
    `call _create_methods`, and `add_methods` are used to add arithmetic methods to
    a class.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ops.py`：此文件定义了一个内部API，用于对`PandasObjects`执行算术运算。它定义了为对象添加算术方法的函数。它定义了一个`_create_methods`元方法，用于通过算术、比较和布尔方法构造器创建其他方法。`add_methods`方法接受一个新方法列表，将它们添加到现有方法列表中，并将它们绑定到适当的类。`add_special_arithmetic_methods`、`add_flex_arithmetic_methods`、`call
    _create_methods`和`add_methods`用于向类中添加算术方法。'
- en: It defines the `_TimeOp` class, which is a wrapper for datetime-related arithmetic
    operations. It contains wrapper functions for arithmetic, comparison, and Boolean
    operations on series, DataFrame, and panel functions: `_arith_method_SERIES(..)`,
    `_comp_method_SERIES(..)`, `_bool_method_SERIES(..)`, `_flex_method_SERIES(..)`,
    `_arith_method_FRAME(..)`, `_comp_method_FRAME(..)`, `_flex_comp_method_FRAME(..)`,
    `_arith_method_PANEL(..)`, and `_comp_method_PANEL(..)`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 它定义了`_TimeOp`类，这是一个用于日期时间相关算术运算的封装类。它包含了对series、DataFrame和panel函数进行算术、比较和布尔操作的封装函数：`_arith_method_SERIES(..)`、`_comp_method_SERIES(..)`、`_bool_method_SERIES(..)`、`_flex_method_SERIES(..)`、`_arith_method_FRAME(..)`、`_comp_method_FRAME(..)`、`_flex_comp_method_FRAME(..)`、`_arith_method_PANEL(..)`和`_comp_method_PANEL(..)`。
- en: '`index.py`: This defines the index class and its related functionality. Index
    is used by all pandas objects—series, DataFrame, and panel—to store axis labels.
    Underneath it is an immutable array that provides an ordered set that can be sliced.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.py`：此文件定义了索引类及其相关功能。Index是所有pandas对象（如series、DataFrame和panel）用来存储轴标签的工具。它下面是一个不可变的数组，提供一个有序的集合，可以进行切片操作。'
- en: '`indexing.py`: This module contains a series of functions and classes that
    make multi-indexing easier.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`indexing.py`：此模块包含一系列函数和类，使得多重索引操作更加简便。'
- en: '`missing.py`: This defines techniques such as masking and interpolation to
    handle missing data.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`missing.py`：此文件定义了诸如掩蔽和插值等技术，用于处理缺失数据。'
- en: '`internals.py`: This defines multiple object classes. These are listed as follows:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`internals.py`：此文件定义了多个对象类，具体如下所示：'
- en: '`Block`: This is a homogeneously typed N-dimensional `numpy.ndarray` object
    with additional functionality for pandass—for example, it uses `__slots__` to
    restrict the attributes of the object to `ndim`, `values`, and `_mgr_locs`. It
    acts as the base class for other Block subclasses.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Block`：这是一个同质类型的N维`numpy.ndarray`对象，具有额外的pandas功能——例如，它使用`__slots__`来限制对象的属性为`ndim`、`values`和`_mgr_locs`。它作为其他Block子类的基类。'
- en: '`NumericBlock`: This is the base class for blocks with the numeric type.'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NumericBlock`：这是一个用于处理数值类型区块的基类。'
- en: '`FloatOrComplexBlock`: This is the base class for `FloatBlock` and `ComplexBlock`
    that inherits from `` `NumericBlock` ``'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FloatOrComplexBlock`：这是`FloatBlock`和`ComplexBlock`的基类，继承自`` `NumericBlock`
    ``。'
- en: '`ComplexBlock`: This is the class that handles the Block objects with the complex
    type.'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ComplexBlock`：这是处理复数类型区块对象的类。'
- en: '`FloatBlock`: This is the class that handles the Block objects with the float
    type.'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FloatBlock`：这是处理浮动类型区块对象的类。'
- en: '`IntBlock`: This is the class that handles the Block objects with the integer
    type.'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IntBlock`：这是处理整数类型区块对象的类。'
- en: '`TimeDeltaBlock`, `BoolBlock`, and `DatetimeBlock`: These are the block classes
    for timedelta, Boolean, and datetime.'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeDeltaBlock`、`BoolBlock`和`DatetimeBlock`：这些是处理时间差、布尔值和日期时间的区块类。'
- en: '`ObjectBlock`: This is the class that handles block objects for user-defined
    objects.'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ObjectBlock`：这是处理用户定义对象的区块类。'
- en: '`SparseBlock`: This is the class that handles sparse arrays of the same type.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseBlock`：这是处理相同类型稀疏数组的类。'
- en: '`BlockManager`: This is the class that manages a set of block objects. It is
    not a public API class.'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BlockManager`：这是管理一组区块对象的类，它不是公开的API类。'
- en: '`SingleBlockManager`: This is the class that manages a single block.'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SingleBlockManager`：这是管理单个区块的类。'
- en: '`JoinUnit`: This is the utility class for block objects.'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`JoinUnit`：这是一个区块对象的实用类。'
- en: '`nanops.py`: This submodule has a set of classes and functionalities for exclusively
    handling NaN values.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nanops.py`：这个子模块包含一组用于专门处理NaN值的类和功能。'
- en: '`ops.py`: This defines arithmetic operations for pandas objects. It is not
    a public API.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ops.py`：该文件定义了 pandas 对象的算术运算。它不是公开 API。'
- en: '`panel.py`, `panel4d.py`, and `panelnd.py`: These provide the functionality
    for the pandas panel object.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`panel.py`、`panel4d.py` 和 `panelnd.py`：这些提供了 pandas 面板对象的功能。'
- en: '`resample.py`: This defines a custom `groupby` class for time-interval grouping
    and aggregation.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resample.py`：该文件定义了用于时间间隔分组和聚合的自定义 `groupby` 类。'
- en: '`series.py`: This defines the pandas Series class and the various methods that
    Series inherits from NDFrame and `IndexOpsMixin` to accommodate 1-dimensional
    data structures and 1-dimensional time series data.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`series.py`：该文件定义了 pandas Series 类及其从 NDFrame 和 `IndexOpsMixin` 继承的各种方法，以适应一维数据结构和一维时间序列数据。'
- en: '`sorting.py`: This defines all necessary utilities for sorting.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sorting.py`：该文件定义了排序所需的所有工具。'
- en: '`sparse.py`: This defines the import for handling sparse data structures. Sparse
    data structures are compressed in that data points matching NaN or missing values
    are omitted. For more information on this, go to [http://pandas.pydata.org/pandas-docs/stable/sparse.html](http://pandas.pydata.org/pandas-docs/stable/sparse.html).'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sparse.py`：该文件定义了处理稀疏数据结构的导入。稀疏数据结构通过省略匹配 NaN 或缺失值的数据点来进行压缩。有关此的更多信息，请访问 [http://pandas.pydata.org/pandas-docs/stable/sparse.html](http://pandas.pydata.org/pandas-docs/stable/sparse.html)。'
- en: '`strings.py`: These have various functions, such as `str_replace`, `str_contains`,
    and `str_cat`, for handling strings manipulations.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strings.py`：这些函数用于处理字符串操作，如 `str_replace`、`str_contains` 和 `str_cat`。'
- en: '`window.py`: This helps in the windowing of data structures and computing aggregates
    in a rolling window.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`window.py`：该模块帮助对数据结构进行窗口处理并计算滚动窗口中的聚合值。'
- en: 'The following diagram gives an overview of the structure of the Pandas core:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示概述了 Pandas 核心的结构：
- en: '![](img/bcfb4a6b-c2cc-4288-acd4-85c133bf8dee.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bcfb4a6b-c2cc-4288-acd4-85c133bf8dee.png)'
- en: Now, let's move on to the next submodule.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续下一个子模块。
- en: pandas/io
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/io
- en: 'This module contains various modules for data I/O. These are as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块包含多个数据 I/O 模块，具体如下：
- en: '`api.py`: This defines various imports for the data I/O API.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`api.py`：该文件定义了数据 I/O API 的各种导入。'
- en: '`common.py`: This defines the common functionality for the I/O API.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`common.py`：该文件定义了 I/O API 的通用功能。'
- en: '`clipboards.py`: This contains cross-platform clipboard methods to enable the
    copy and paste functions from the keyboard. The pandas I/O API includes functions
    such as `pandas.read_clipboard()` and `pandas.to_clipboard(..)`.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clipboards.py`：该文件包含跨平台剪贴板方法，支持通过键盘启用复制和粘贴功能。pandas I/O API 包含如 `pandas.read_clipboard()`
    和 `pandas.to_clipboard(..)` 等函数。'
- en: '`date_converters.py`: This defines date conversion functions.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_converters.py`：该文件定义了日期转换函数。'
- en: '`excel.py`: This module parses and converts Excel data. This defines the `ExcelFile`
    and `ExcelWriter` classes.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`excel.py`：该模块用于解析和转换 Excel 数据。它定义了`ExcelFile`和`ExcelWriter`类。'
- en: '`feather_format.py`: This module reads and writes data in Feather format.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`feather_format.py`：该模块读取和写入 Feather 格式的数据。'
- en: '`gbq.py` : This is the module for Google''s BigQuery.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gbq.py`：这是用于 Google BigQuery 的模块。'
- en: '`html.py`: This is the module for dealing with HTML I/O.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`html.py`：这是用于处理 HTML I/O 的模块。'
- en: '`json.py`: This is the module for dealing with JSON I/O in pandas. This defines
    the `Writer`, `SeriesWriter`, `FrameWriter`, `Parser`, `SeriesParser`, and `FrameParser`
    classes.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`json.py`：这是用于处理 pandas 中 JSON I/O 的模块。它定义了 `Writer`、`SeriesWriter`、`FrameWriter`、`Parser`、`SeriesParser`
    和 `FrameParser` 类。'
- en: '`msgpack`: This module reads and writes data to `msgpack` format.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msgpack`：该模块读取和写入 `msgpack` 格式的数据。'
- en: '`packer.py`: This is an `msgpack` serializer support for reading and writing
    pandas data structures to disk.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packer.py`：该文件是一个`msgpack`序列化程序，支持将 pandas 数据结构读写到磁盘。'
- en: '`parquet.py`: This module reads and writes data in Parquet format.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parquet.py`：该模块读取和写入 Parquet 格式的数据。'
- en: '`parsers.py`: This is the module that defines various functions and classes
    that are used in parsing and processing files to create pandas DataFrames. All
    of the three `read_*` functions discussed in the following list have multiple
    configurable options for reading. For more details, see [http://bit.ly/1EKDYbP](http://bit.ly/1EKDYbP):'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parsers.py`：这是定义用于解析和处理文件以创建 pandas DataFrame 的各种函数和类的模块。以下列出的三个 `read_*`
    函数都有多种可配置选项用于读取。详细信息，请参见 [http://bit.ly/1EKDYbP](http://bit.ly/1EKDYbP)：'
- en: '`read_csv(..)`: This defines the `pandas.read_csv()` function that is used
    to read the contents of a CSV file into a DataFrame.'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_csv(..)`：该函数定义了 `pandas.read_csv()`，用于将 CSV 文件的内容读入 DataFrame。'
- en: '`read_table(..)`: This reads a tab-separated table file into a DataFrame.'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_table(..)`：这个方法用于将制表符分隔的表文件读取到 DataFrame 中。'
- en: '`read_fwf(..)`: This reads a fixed-width format file into a DataFrame.'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_fwf(..)`：这个方法用于将固定宽度格式的文件读取到 DataFrame 中。'
- en: '`TextFileReader`: This is the class that is used for reading text files.'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TextFileReader`：这是用于读取文本文件的类。'
- en: '`ParserBase`: This is the base class for parser objects.'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ParserBase`：这是解析器对象的基类。'
- en: '`CParserWrapper`, `PythonParser`: These are the parser for C and Python respectively.
    They both inherit from `ParserBase`.'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CParserWrapper`、`PythonParser`：这些分别是 C 和 Python 的解析器。它们都继承自`ParserBase`。'
- en: '`FixedWidthReader`: This is the class for reading fixed-width data. A fixed-width
    data file contains fields in specific positions within the file.'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FixedWidthReader`：这是用于读取固定宽度数据的类。固定宽度数据文件包含在文件中特定位置的字段。'
- en: '`FixedWithFieldParser`: This is the class for parsing fixed-width fields that
    have been inherited from `PythonParser`.'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FixedWithFieldParser`：这是用于解析固定宽度字段的类，该类继承自`PythonParser`。'
- en: '`pickle.py`: This provides methods for pickling (serializing) pandas objects.
    These are as follows:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pickle.py`：该模块提供了方法来 pickle（序列化）pandas 对象，方法如下：'
- en: '`to_pickle(..)`: This serializes an object to file.'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_pickle(..)`：该方法用于将对象序列化到文件。'
- en: '`read_pickle(..)`: This reads serialized objects from a file into a pandas
    object. It should only be used with trusted sources.'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_pickle(..)`：这个方法用于从文件中读取序列化的对象到 pandas 对象。仅应使用受信任的源。'
- en: '`pytables.py`: This is an interface for PyTables module for reading and writing
    pandas data structures to files on disk.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pytables.py`：这是用于 PyTables 模块的接口，用于将 pandas 数据结构读写到磁盘上的文件。'
- en: '`sql.py`: This is a collection of classes and functions that enable the retrieval
    of data from relational databases that attempts to be database-agnostic. These
    classes and functions are as follows:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sql.py`：这是一个类和函数的集合，旨在从关系型数据库中检索数据，并尽量做到与数据库无关。以下是这些类和函数：'
- en: '`PandasSQL`: This is the base class for interfacing pandas with SQL. It provides
    dummy `read_sql` and `to_sql` methods that must be implemented by subclasses.'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PandasSQL`：这是用于将 pandas 与 SQL 接口的基类。它提供了虚拟的`read_sql`和`to_sql`方法，这些方法必须由子类实现。'
- en: '`PandasSQLAlchemy`: This is the subclass of `PandasSQL` that enables conversions
    between DataFrame and SQL databases using SQLAlchemy.'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PandasSQLAlchemy`：这是`PandasSQL`的子类，能够使用SQLAlchemy在 DataFrame 和 SQL 数据库之间进行转换。'
- en: '`PandasSQLTable`: This maps pandas tables (DataFrame) to SQL tables.'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PandasSQLTable`：这是将 pandas 表（DataFrame）映射到 SQL 表的类。'
- en: '`pandasSQL_builder(..)`: This returns the correct PandasSQL subclass based
    on the provided parameters.'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandasSQL_builder(..)`：根据提供的参数返回正确的 PandasSQL 子类。'
- en: '`PandasSQLTableLegacy`: This class is the legacy support version of `PandasSQLTable.`'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PandasSQLTableLegacy`：这是`PandasSQLTable`的遗留支持版本。'
- en: '`PandasSQLLegacy`: This class is the legacy support version of `PandasSQLTable`.'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PandasSQLLegacy`：这是`PandasSQLTable`的遗留支持版本。'
- en: '`get_schema(..)`: This gets the SQL database table schema for a given frame.'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_schema(..)`：这个方法用于获取给定数据框架的 SQL 数据库表架构。'
- en: '`read_sql_table(..)`: This reads an SQL database table into a DataFrame.'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_sql_table(..)`：这个方法用于将 SQL 数据库表读取到 DataFrame 中。'
- en: '`read_sql_query(..)`: This reads an SQL query into a DataFrame.'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_sql_query(..)`：这个方法用于将 SQL 查询读取到 DataFrame 中。'
- en: '`read_sql(..)`: This reads an SQL query/table into a DataFrame.'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read_sql(..)`：这个方法用于将 SQL 查询/表读取到 DataFrame 中。'
- en: '`stata.py`: This contains tools for processing Stata files into pandas DataFrames.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stata.py`：这个模块包含用于将 Stata 文件处理为 pandas DataFrame 的工具。'
- en: '`sas`: This module contains submodules that help to read data from SAS outputs.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sas`：此模块包含子模块，用于从 SAS 输出中读取数据。'
- en: '`S3.py`: This module provides remote connectivity to S3 buckets.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`S3.py`：这个模块提供与 S3 存储桶的远程连接功能。'
- en: pandas/tools
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/tools
- en: 'The details of the module are as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块的详细信息如下：
- en: '`plotting.py`: This serves as a wrapper for the plotting module and has been
    deprecated in the recent version.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plotting.py`：这是用于绘图模块的包装器，最近版本中已被弃用。'
- en: '`merge.py`: This provides functions for combining series, DataFrame, and panel
    objects, such as `merge(..)` and `concat(..)`, and has been deprecated in the
    recent version.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`merge.py`：这个模块提供用于合并序列、DataFrame 和面板对象的函数，如`merge(..)`和`concat(..)`，并在最近的版本中已被弃用。'
- en: pandas/util
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/util
- en: 'This `pandas/util` is the module that provides utility functionalities. The
    details of this module are as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 该`pandas/util`是提供实用功能的模块，模块的详细信息如下：
- en: '`testing.py`: This provides the `assertion`, `debug`, `unit test`, and other
    classes/functions for use in testing. It contains many special assert functions
    that make it easier to check whether series, DataFrame, or panel objects are equivalent.
    Some of these functions include `assert_equal(..)`, `assert_series_equal(..)`,
    `assert_frame_equal(..)`, and `assert_panelnd_equal(..)`. The `pandas.util.testing`
    module is especially useful to the contributors of the pandas code base. It defines
    a `util.TestCase` class. It also provides utilities for handling locales, console
    debugging, file cleanup, comparators, and so on for testing by potential code
    base contributors.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`testing.py`：该文件提供了用于测试的`assertion`、`debug`、`unit test`和其他类/函数。它包含许多特殊的断言函数，使得检查系列、DataFrame或面板对象是否相等变得更加容易。一些这些函数包括`assert_equal(..)`、`assert_series_equal(..)`、`assert_frame_equal(..)`和`assert_panelnd_equal(..)`。`pandas.util.testing`模块对pandas代码库的贡献者尤其有用，它定义了一个`util.TestCase`类，还为潜在的代码库贡献者提供了处理区域设置、控制台调试、文件清理、比较器等的工具。'
- en: '`doctools.py`: This submodule has the `TablePlotter` class, which helps to
    define a layout for DataFrames.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`doctools.py`：该子模块包含`TablePlotter`类，用于为DataFrame定义布局。'
- en: '`validators.py`: This submodule helps to validate arguments passed to functions.
    For instance, it helps to evaluate the argument length, the default values, and
    argument values.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validators.py`：该子模块帮助验证传递给函数的参数。例如，它帮助评估参数的长度、默认值和参数值。'
- en: '`print_versions.py`: This defines the `get_sys_info()` function, which returns
    a dictionary of systems information and the `show_versions(..)` function, which
    displays the versions of available Python libraries.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`print_versions.py`：该文件定义了`get_sys_info()`函数，它返回系统信息字典；以及`show_versions(..)`函数，它显示可用Python库的版本。'
- en: '`misc.py`: This defines a couple of miscellaneous utilities.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`misc.py`：该文件定义了一些杂项工具。'
- en: '`decorators.py`: This defines some decorator functions and classes.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decorators.py`：该文件定义了一些装饰器函数和类。'
- en: The substitution and appender classes are decorators that perform substitution
    and appending on function docstrings. For more information on Python decorators,
    go to [http://www.artima.com/weblogs/viewpost.jsp?thread=240808](http://www.artima.com/weblogs/viewpost.jsp?thread=240808).
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换和附加类是对函数文档字符串进行替换和附加的装饰器。有关Python装饰器的更多信息，请访问[http://www.artima.com/weblogs/viewpost.jsp?thread=240808](http://www.artima.com/weblogs/viewpost.jsp?thread=240808)。
- en: '`test_decorators.py`: This submodule provides decorators to test objects.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`test_decorators.py`：该子模块提供了用于测试对象的装饰器。'
- en: pandas/tests
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/tests
- en: This `pandas/tests` is the module that provides many tests for various objects
    in pandas. The names of the specific library files are fairly self-explanatory,
    and I will not go into further details here; instead, I invite the reader to explore.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`pandas/tests`是提供pandas中各种对象测试的模块。具体的库文件名基本上是自解释的，这里我不再进一步详细说明；而是邀请读者自行探索。
- en: pandas/compat
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/compat
- en: 'Functionalities related to compatibility are explained as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 与兼容性相关的功能如下所述：
- en: '`chainmap.py` and `chainmap_impl.py`: These provide a `ChainMap` class that
    can group multiple `dicts` or mappings to produce a single view that can be updated.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chainmap.py`和`chainmap_impl.py`：这些文件提供了一个`ChainMap`类，可以将多个`dict`或映射组合在一起，产生一个可以更新的单一视图。'
- en: '`pickle_compat.py`: This provides functionality for pickling pandas objects
    in versions that are earlier than 0.12.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pickle_compat.py`：该文件提供了在0.12版本之前的pandas对象序列化功能。'
- en: pandas/computation
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/computation
- en: 'This `pandas/computation` is the module that provides functionality for computation
    and is discussed as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`pandas/computation`是提供计算功能的模块，具体内容如下：
- en: '`expressions.py`: This provides fast expression evaluation through `numexpr`.
    The `numexpr` function is used to accelerate certain numerical operations. It
    uses multiple cores as well as smart chunking and caching speedups. It defines
    the `evaluate(..)` and `where(..)` methods. This module has been deprecated in
    the most recent version of pandas; the alternative usage will be through `pandas.get_option`.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`expressions.py`：该文件通过`numexpr`提供快速的表达式计算。`numexpr`函数用于加速某些数值操作。它使用多个核心以及智能分块和缓存加速。它定义了`evaluate(..)`和`where(..)`方法。该模块在最新版本的pandas中已被弃用，替代用法将通过`pandas.get_option`实现。'
- en: For more information on `numexpr`, go to [https://code.google.com/p/numexpr/](https://code.google.com/p/numexpr/).
    For information on the usage of this module, go to [http://pandas.pydata.org/pandas-docs/version/0.15.0/computation.html](http://pandas.pydata.org/pandas-docs/version/0.15.0/computation.html).
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关 `numexpr` 的更多信息，请访问 [https://code.google.com/p/numexpr/](https://code.google.com/p/numexpr/)。有关此模块的使用，请访问
    [http://pandas.pydata.org/pandas-docs/version/0.15.0/computation.html](http://pandas.pydata.org/pandas-docs/version/0.15.0/computation.html)。
- en: pandas/plotting
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/plotting
- en: 'The `pandas/plotting` is the module that takes care of all of the plotting
    functionalities pandas offers:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas/plotting` 是处理所有 pandas 绘图功能的模块：'
- en: '`compat.py`: This module checks for version compatibility.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compat.py`：此模块检查版本兼容性。'
- en: '`converter.py`: This module helps process datetime values for plotting. It
    helps to execute functions such as autoscaling of time series axes and formatting
    ticks for datetime axes.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`converter.py`：此模块有助于处理用于绘图的日期时间值。它可以执行自动缩放时间序列轴和格式化日期时间轴刻度等功能。'
- en: '`core.py`: This defines classes that help in creating plots, such as bar plots,
    scatter plots, hex bin plots, and box plots.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`core.py`：此文件定义了一些帮助创建图形的类，如条形图、散点图、六边形箱形图和箱线图。'
- en: '`misc.py`: This provides a set of plotting functions that take a series or
    DataFrame as an argument. This module contains the following submodules for performing
    miscellaneous tasks, such as plotting scatter matries and Andrews curve:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`misc.py`：此文件提供了一组绘图函数，可以将系列或 DataFrame 作为参数。此模块包含以下子模块，用于执行各种杂项任务，如绘制散点矩阵和
    Andrews 曲线：'
- en: '`scatter_matrix(..)`: This draws a matrix of scatter plots.'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scatter_matrix(..)`：此函数绘制散点图矩阵。'
- en: '`andrews_curves(..)`: This plots multivariate data as curves that are created
    using samples as coefficients for a Fourier series.'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`andrews_curves(..)`：此函数将多变量数据绘制为曲线，这些曲线使用样本作为傅里叶级数的系数。'
- en: '`parallel_coordinates(..)`: This is a plotting technique that allows you to
    see clusters in data and visually estimate statistics.'
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parallel_coordinates(..)`：这是一种绘图技术，可以帮助你观察数据中的聚类并直观估算统计量。'
- en: '`lag_plot(..)`: This is used to check whether a dataset or a time series is
    random.'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lag_plot(..)`：此函数用于检查数据集或时间序列是否为随机的。'
- en: '`autocorrelation_plot(..)`: This is used for checking randomness in a time
    series.'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocorrelation_plot(..)`：此函数用于检查时间序列中的随机性。'
- en: '`bootstrap_plot(..)`: This plot is used to determine the uncertainty of a statistical
    measure, such as mean or median, in a visual manner'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bootstrap_plot(..)`：此图用于以可视化的方式确定统计量（如均值或中位数）的不确定性。'
- en: '`radviz(..)`: This plot is used to visualize multivariate data.'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`radviz(..)`：此图用于可视化多变量数据。'
- en: '`style.py`: This provides a set of styling options for the plot.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`style.py`：此文件提供了一组绘图样式选项。'
- en: '`timeseries.py`: This defines auxiliary classes for time series plots.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeseries.py`：此文件定义了时间序列绘图的辅助类。'
- en: '`tools.py`: This contains some helper functions that create a table layout
    from DataFrames and series.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tools.py`：此文件包含一些辅助函数，用于从 DataFrame 和系列创建表格布局。'
- en: pandas/tseries
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas/tseries
- en: 'This section deals with the `pandas/tseries` module, which gives pandas its
    functionality to work with time series data:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容涉及 `pandas/tseries` 模块，它赋予 pandas 处理时间序列数据的功能：
- en: '`api.py`: This is a set of convenience imports.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`api.py`：这是一个方便的导入集合。'
- en: '`converter.py`: This defines a set of classes that are used to format and convert.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`converter.py`：此文件定义了一组用于格式化和转换的类。'
- en: '`datetime`: Upon importing pandas, this registers a set of unit converters
    with `matplotlib`. This is done via the `register()` function, as follows:'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`datetime`：导入 pandas 后，它会通过 `register()` 函数将一组单位转换器注册到 `matplotlib`。具体方法如下：'
- en: '[PRE0]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`Converter`: This class includes `TimeConverter`, `PeriodConverter`, and `DateTimeConverter`.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Converter`：此类包括 `TimeConverter`、`PeriodConverter` 和 `DateTimeConverter`。'
- en: '`Formatters`: This class includes `TimeFormatter`, `PandasAutoDateFormatter`,
    and `TimeSeries_DateFormatter`.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Formatters`：此类包括 `TimeFormatter`、`PandasAutoDateFormatter` 和 `TimeSeries_DateFormatter`。'
- en: '`Locators`: This class includes `PandasAutoDateLocator`, `MilliSecondLocator`,
    and `TimeSeries_DateLocator`.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Locators`：此类包括 `PandasAutoDateLocator`、`MilliSecondLocator` 和 `TimeSeries_DateLocator`。'
- en: The `Formatter` and `Locator` classes are used for handling ticks in `matplotlib`
    plotting.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`Formatter` 和 `Locator` 类用于处理 `matplotlib` 绘图中的刻度。'
- en: '`frequencies.py`: This defines the code for specifying frequencies—daily, weekly,
    quarterly, monthly, annual, and so on—of time series objects. This submodule depends
    on the `dtypes` submodule of the pandas/core module.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`frequencies.py`：此文件定义了指定时间序列对象频率的代码——如每日、每周、每季度、每月、每年等。此子模块依赖于 pandas/core
    模块的 `dtypes` 子模块。'
- en: '`holiday.py`: This defines functions and classes for handling holidays—`Holiday`,
    `AbstractHolidayCalendar`, and `USFederalHolidayCalendar` are among the classes
    defined.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`holiday.py`：该文件定义了处理假期的函数和类——如 `Holiday`、`AbstractHolidayCalendar` 和 `USFederalHolidayCalendar`
    等类。'
- en: '`offsets.py`: This defines various classes, including offsets that deal with
    time-related periods. These classes are explained as follows:'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offsets.py`：该文件定义了各种类，包括处理与时间相关的偏移类。这些类的具体说明如下：'
- en: '`DateOffset`: This is an interface for classes that provide the time period
    functionality, such as `Week`, `WeekOfMonth`, `LastWeekOfMonth`, `QuarterOffset`,
    `YearOffset`, `Easter`, `FY5253`, and `FY5253Quarter`.'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DateOffset`：这是一个接口，供提供时间段功能的类使用，如 `Week`、`WeekOfMonth`、`LastWeekOfMonth`、`QuarterOffset`、`YearOffset`、`Easter`、`FY5253`
    和 `FY5253Quarter`。'
- en: '`BusinessMixin`: This is the mixin class for business objects to provide functionality
    with time-related classes. This is inherited by the `BusinessDay` class. The `BusinessDay`
    subclass is derived from `BusinessMixin` and `SingleConstructorOffset`, and provides
    an offset on business days.'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BusinessMixin`：这是一个混合类，用于商业对象提供与时间相关的功能。它被 `BusinessDay` 类继承。`BusinessDay`
    子类继承自 `BusinessMixin` 和 `SingleConstructorOffset`，并提供在工作日上的偏移。'
- en: '`MonthOffset`: This is the interface for classes that provide the functionality
    for month time periods, such as `MonthEnd`, `MonthBegin`, `BusinessMonthEnd`,
    and `BusinessMonthBegin`.'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MonthOffset`：这是提供月时间段功能的类的接口，如 `MonthEnd`、`MonthBegin`、`BusinessMonthEnd`
    和 `BusinessMonthBegin`。'
- en: '`MonthEnd` and `MonthBegin`: These provide a date offset of one month at the
    end or the beginning.'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MonthEnd` 和 `MonthBegin`：这两个提供了在月末或月初的日期偏移，偏移量为一个月。'
- en: '`BusinessMonthEnd` and `BusinessMonthBegin`: These provide a date offset of
    one month at the end or the beginning of a business day calendar.'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BusinessMonthEnd` 和 `BusinessMonthBegin`：这两个提供了在商业日历的月末或月初的日期偏移，偏移量为一个月。'
- en: '`YearOffset`: This offset is subclassed by classes that provide year- period
    functionality—`YearEnd`, `YearBegin`, `BYearEnd`, and `BYearBegin`.'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YearOffset`：这个偏移量是由提供年周期功能的类继承的——如 `YearEnd`、`YearBegin`、`BYearEnd` 和 `BYearBegin`。'
- en: '`YearEnd` and `YearBegin`: These provide a date offset of one year at the end
    or the beginning.'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YearEnd` 和 `YearBegin`：这两个提供了在年末或年初的日期偏移，偏移量为一年。'
- en: '`BYearEnd` and `BYearBegin`: These provide a date offset of one year at the
    end or the beginning of a business day calendar.'
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BYearEnd` 和 `BYearBegin`：这两个提供了在商业日历的结束或开始时的日期偏移，偏移量为一年。'
- en: '`Week`: This provides an offset of one week.'
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Week`：它提供了一个星期的偏移。'
- en: '`WeekDay`: This provides mapping from a weekday (for example, Tue) to any day
    of the week (for example, =2).'
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WeekDay`：它提供了从星期几（例如，Tue）到一周中的任何一天（例如，=2）的映射。'
- en: '`WeekOfMonth` and `LastWeekOfMonth`: This describes dates in a week of the
    month.'
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WeekOfMonth` 和 `LastWeekOfMonth`：这描述了每个月中某周的日期。'
- en: '`QuarterOffset`: This is subclassed by classes that provide quarterly period
    functionality—`QuarterEnd`, `QuarterrBegin`, `BQuarterEnd`, and `BQuarterBegin`.'
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QuarterOffset`：这是提供季度周期功能的类的基类——如 `QuarterEnd`、`QuarterBegin`、`BQuarterEnd`
    和 `BQuarterBegin`。'
- en: '`QuarterEnd`, `QuarterrBegin`, `BQuarterEnd`, and `BQuarterBegin`: These are
    the same as for `Year*` classes, except the period is a quarter instead of a year.'
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QuarterEnd`、`QuarterBegin`、`BQuarterEnd` 和 `BQuarterBegin`：这些类与 `Year*` 类似，不同之处在于其周期是季度，而不是年份。'
- en: '`FY5253` and `FY5253Quarter`: These classes describe a 52- and 53-week fiscal
    year respectively. This is also known as a 4-4-5 calendar.'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FY5253` 和 `FY5253Quarter`：这些类分别描述了52周和53周的财政年度，也称为4-4-5日历。'
- en: '`Easter`: This is `DateOffset` for the Easter holiday.'
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Easter`：这是 `DateOffset` 类，用于复活节假期。'
- en: '`Tick`: This is the base class for the time unit classes, such as `Day`, `Hour`,
    `Minute`, `Second`, `Milli`, `Micro`, and `Nano`.'
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Tick`：这是时间单位类的基类，例如 `Day`、`Hour`、`Minute`、`Second`、`Milli`、`Micro` 和 `Nano`。'
- en: '`plotting.py`: This imports the `tsplot(..)` submodule from the `pandas-plotting`
    module.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plotting.py`：该文件从 `pandas-plotting` 模块导入 `tsplot(..)` 子模块。'
- en: Next, we will see how we can improve the performance of Python codes using Python
    extensions.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到如何使用 Python 扩展来提高 Python 代码的性能。
- en: Improving performance using Python extensions
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 扩展提高性能
- en: One of the gripes of Python and pandas users is that the ease of use and expressiveness
    of the language and module comes with a significant downside—the performance.
    This happens especially when it comes to numeric computing.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Python 和 pandas 用户的一个抱怨是，虽然语言和模块的易用性和表达性非常强大，但也伴随着显著的缺点——性能。这种情况尤其在数值计算时显现。
- en: According to programming benchmark standards, Python is often slower than compiled
    languages, such as C/C++, for many algorithms or data structure operations. An
    example of this would be binary-tree operations. In one simulation experiment,
    Python3 ran 104 times slower than the fastest C++ implementation of an *n*-body
    simulation calculation.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 根据编程基准标准，Python 在许多算法或数据结构操作上通常比编译语言（如 C/C++）慢。例如，在一个模拟实验中，Python3 的运行速度比最快的
    C++ 实现的 *n* 体模拟计算慢了 104 倍。
- en: So, how can we solve this legitimate, yet vexing problem? We can mitigate this
    slowness in Python while maintaining the things that we like—clarity and productivity.
    This can be done by writing the parts of our code that are performance-sensitive-for
    example, numeric processing, algorithms in C/C++-and having them called by our
    Python code by writing a Python extension module. For more details, go to [http://docs.python.org/2/extending/extending.html](http://docs.python.org/2/extending/extending.html).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何解决这个合法却令人烦恼的问题呢？我们可以在保持 Python 中我们喜爱的东西——清晰性和生产力——的同时，减缓 Python 的运行速度。我们可以通过编写代码中的性能敏感部分（例如，数字处理、算法等）为
    C/C++ 代码，并通过编写 Python 扩展模块让 Python 调用这些代码来实现。更多详细信息，请访问 [http://docs.python.org/2/extending/extending.html](http://docs.python.org/2/extending/extending.html)。
- en: Python extension modules enable us to make calls out to user-defined C/C++ code
    or library functions from Python, which enables us to boost our code performance
    and benefit from the ease of using Python.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Python 扩展模块使我们能够从 Python 调用用户定义的 C/C++ 代码或库函数，从而提高代码性能，并享受 Python 使用的便利。
- en: 'To help us to understand what a Python extension module is, let''s consider
    what happens in Python when a module has been imported. An import statement *imports*
    a module, but what does this really mean? There are three possibilities, which
    are as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们理解 Python 扩展模块是什么，让我们考虑在 Python 中导入一个模块时发生了什么。导入语句*导入*一个模块，但这究竟意味着什么呢？有三种可能性，具体如下：
- en: Some Python extension modules are linked to the interpreter when it is built.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些 Python 扩展模块在构建解释器时与之链接。
- en: 'An import causes Python to load a `.pyc` file into memory. The `.pyc` files
    contain Python `bytecode`, as shown in the following code snippet:'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入语句会导致 Python 加载 `.pyc` 文件到内存中。`.pyc` 文件包含 Python 的 `字节码`，如以下代码片段所示：
- en: '[PRE1]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The import statement causes a Python extension module to be loaded into memory.
    The `.``so` (shared object) file is comprised of machine code, as shown in the
    following code snippet:'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入语句会导致 Python 扩展模块加载到内存中。`.so`（共享对象）文件包含了机器码，如以下代码片段所示：
- en: '[PRE2]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We will focus on the third possibility as this is the most common. Even though
    we are dealing with a binary-shared object compiled from C, we can import it as
    a Python module. This shows the power of Python extensions—applications can import
    modules from Python machine code or machine code and the interface is the same.
    Cython and SWIG are the two most popular methods of writing extensions in C and
    C++. In writing an extension, we wrap up C/C++ machine code and turn it into Python
    extension modules that behave like pure Python code. In this brief discussion,
    we will only focus on Cython, as it was designed specifically for Python.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重点讨论第三种可能性，因为这是最常见的情况。即使我们处理的是从 C 编译出来的二进制共享对象，我们仍然可以将其作为 Python 模块导入。这展示了
    Python 扩展的强大——应用程序可以从 Python 机器码或机器码导入模块，接口是相同的。Cython 和 SWIG 是用 C 和 C++ 编写扩展的两种最流行的方法。在编写扩展时，我们将
    C/C++ 机器码封装起来，并将其转化为表现得像纯 Python 代码的 Python 扩展模块。在这次简短的讨论中，我们将只关注 Cython，因为它是专为
    Python 设计的。
- en: Cython is a superset of Python that was designed to significantly improve Python's
    performance by allowing us to call externally compiled code in C/C++, as well
    as declare types on variables.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: Cython 是 Python 的一个超集，旨在通过允许我们调用外部编译的 C/C++ 代码，并声明变量的类型，显著提高 Python 的性能。
- en: The Cython command generates an optimized C/C++ source file from a Cython source
    file and compiles this optimized C/C++ source into a Python extension module.
    It offers built-in support for NumPy and combines C's performance with Python's
    usability.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: Cython 命令从 Cython 源文件生成优化的 C/C++ 源文件，并将此优化后的 C/C++ 源文件编译成 Python 扩展模块。它为 NumPy
    提供了内置支持，并将 C 的性能与 Python 的可用性结合起来。
- en: 'We will give a quick demonstration of how we can use Cython to significantly
    speed up our code. Let''s define a simple Fibonacci function:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将快速演示如何使用 Cython 显著加速我们的代码。让我们定义一个简单的斐波那契函数：
- en: '[PRE3]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using the `timeit` module, we see that it takes 18.2 µs per loop.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `timeit` 模块，我们发现每次循环需要 18.2 微秒。
- en: 'Let''s now rewrite the function in Cython, specifying types for the variables
    by going through the following steps:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过以下步骤，在 Cython 中重写函数，并为变量指定类型：
- en: 'First, we import the Cython magic function to iPython as follows:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们在 iPython 中导入 Cython 魔法函数，如下所示：
- en: '[PRE4]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, we rewrite our function in Cython, specifying types for our variables:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们在 Cython 中重写我们的函数，并为我们的变量指定类型：
- en: '[PRE5]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let''s time our new Cython function:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们测试一下我们新的 Cython 函数的执行时间：
- en: '[PRE6]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We can see that the Cython version is 57 times faster than the pure Python version!
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到，Cython 版本比纯 Python 版本快了 57 倍！
- en: 'For more information on writing Python extensions using Cython/SWIG or other
    options, please refer to the following sources:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用 Cython/SWIG 或其他选项编写 Python 扩展的更多信息，请参考以下来源：
- en: Pandas documentation, entitled *Enhancing Performance*, at [http://pandas.pydata.org/pandas-docs/stable/enhancingperf.html](http://pandas.pydata.org/pandas-docs/stable/enhancingperf.html)
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pandas 文档，标题为 *提升性能*，链接：[http://pandas.pydata.org/pandas-docs/stable/enhancingperf.html](http://pandas.pydata.org/pandas-docs/stable/enhancingperf.html)
- en: ScipPy lecture notes, entitled *Interfacing with C*, at [https://scipy-lectures.github.io/advanced/interfacing_with_c/interfacing_with_c.html](https://scipy-lectures.github.io/advanced/interfacing_with_c/interfacing_with_c.html)
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ScipPy 讲义，标题为 *与 C 接口*，链接：[https://scipy-lectures.github.io/advanced/interfacing_with_c/interfacing_with_c.html](https://scipy-lectures.github.io/advanced/interfacing_with_c/interfacing_with_c.html)
- en: Cython documentation at [http://docs.cython.org/index.html](http://docs.cython.org/index.html)
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cython 文档，链接：[http://docs.cython.org/index.html](http://docs.cython.org/index.html)
- en: SWIG documentation at [http://www.swig.org/Doc2.0/SWIGDocumentation.html](http://www.swig.org/Doc2.0/SWIGDocumentation.html)
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SWIG 文档，链接：[http://www.swig.org/Doc2.0/SWIGDocumentation.html](http://www.swig.org/Doc2.0/SWIGDocumentation.html)
- en: Summary
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: To summarize this chapter, we took a tour of the library hierarchy of pandas
    in an attempt to illustrate the internal guts of the library. This understanding
    will be useful for building custom modules from pandas code or improving the functionalities
    of pandas as an open source contributor. We also touched on the benefits of speeding
    up our code performance by using a Python extension module.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 总结本章内容，我们浏览了 pandas 库的层次结构，试图说明该库的内部构造。理解这些内容对于从 pandas 代码构建自定义模块或作为开源贡献者改进
    pandas 的功能将非常有帮助。我们还讨论了通过使用 Python 扩展模块来加速代码性能的好处。
- en: In the next chapter, we will see how pandas compares to other data analysis
    tools in terms of various analysis operations.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到 pandas 与其他数据分析工具在各种分析操作方面的比较。
