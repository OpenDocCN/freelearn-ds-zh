- en: Introducing Arcade
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Arcade
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下食谱：
- en: Applying prebuilt Arcade expressions
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用预构建的 Arcade 表达式
- en: Creating an Arcade labeling expression
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Arcade 标签表达式
- en: Creating an Arcade symbology expression
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Arcade 符号表达式
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Over the years, Esri products have supported many different expression and scripting
    languages. These have included AML, Avenue, JScript, VB Script, SQL, and Python.
    Some of these languages were developed by Esri, such as AML and Avenue, while
    others were common IT industry languages, such as JScript, VB Script, Python,
    and SQL. Each of these were suited to specific uses on the desktop, servers, or
    online. However, now we find ourselves regularly having to work in all these environments
    at the same time. We create a map in ArcGIS Pro on our desktop, then publish to
    ArcGIS Enterprise, and later access it through the web on a mobile device.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，Esri 产品支持了许多不同的表达式和脚本语言。这些包括 AML、Avenue、JScript、VB Script、SQL 和 Python。其中一些语言是由
    Esri 开发的，如 AML 和 Avenue，而其他则是常见的 IT 行业语言，如 JScript、VB Script、Python 和 SQL。每一种都适合桌面、服务器或在线上的特定用途。然而，现在我们发现自己经常需要同时在这些环境中工作。我们在桌面上的
    ArcGIS Pro 中创建地图，然后发布到 ArcGIS 企业，稍后通过移动设备上的网络访问它。
- en: This has begun to cause a problem as we work through these environments. Sometimes
    things we create that work great on the desktop do not translate to server or
    internet environments. This is often true for labels and symbology. So, to help
    bridge that gap, Esri has developed what they are calling a new expression language,
    Arcade.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们在这几个环境中工作，这已经开始引起问题。有时我们在桌面上创建的可以很好地工作的事物，在服务器或互联网环境中却无法转换。标签和符号通常就是这样。因此，为了帮助弥合这一差距，Esri
    开发了一种他们称之为新的表达式语言，即 Arcade。
- en: Arcade is a lightweight and portable language that can be used across the ArcGIS
    platform. This means expressions you create in ArcGIS Pro will also work in ArcGIS
    Server, Portal, and ArcGIS Online. It can be used to control and display labels,
    perform mathematical calculations, manipulate symbology, and more. What makes
    Arcade unique is its inclusion of geometry types.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Arcade 是一种轻量级且便携的语言，可以在 ArcGIS 平台上使用。这意味着你在 ArcGIS Pro 中创建的表达式也可以在 ArcGIS Server、门户和
    ArcGIS Online 中使用。它可以用来控制并显示标签、执行数学计算、操作符号化，等等。Arcade 的独特之处在于它包含了几何类型。
- en: It was created from the beginning with that in mind, unlike other languages
    such as Python, which had to be customized to work with geometry.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它从一开始就是为此而设计的，与 Python 等其他语言不同，后者必须进行定制才能与几何形状一起工作。
- en: What is the difference between an expression language and other programming
    or scripting languages? The primary difference is that an expression language
    cannot be used to create standalone apps or add-ins. It must be used inside of
    another application such as ArcGIS Pro. So Arcade is not as flexible as a scripting
    language like Python. Having said that, the expressions you can create with Arcade
    can be very complex, including multiple lines of code. For this reason, you may
    see Arcade expressions also referred to as scripts.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式语言与其他编程或脚本语言之间的区别是什么？主要区别在于表达式语言不能用来创建独立的程序或插件。它必须用于另一个应用程序内部，例如 ArcGIS Pro。因此，Arcade
    不像 Python 这样的脚本语言那样灵活。话虽如此，你可以用 Arcade 创建的表达式可以非常复杂，包括多行代码。因此，你可能会看到 Arcade 表达式也被称为脚本。
- en: 'The syntax for Arcade is similar to other scripting languages such as Python
    or VB Script. For example, to indicate a text string, you simply enclose the desired
    string in single quotes. So, if you were creating an Arcade labeling expression
    and were to include `Lot Number` in the expression, those words would display
    as part of the label, as illustrated in the following screenshot:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Arcade 的语法类似于其他脚本语言，例如 Python 或 VB Script。例如，要表示一个文本字符串，你只需用单引号将所需的字符串括起来。所以，如果你正在创建一个
    Arcade 标签表达式，并想在表达式中包含 `Lot Number`，这些单词将作为标签的一部分显示，如下面的截图所示：
- en: '![](img/a6dc3948-5a76-49c8-9b3e-71b02e8b61e9.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/a6dc3948-5a76-49c8-9b3e-71b02e8b61e9.png)'
- en: Sample of an Arcade expression for labeling a parcel with lot number
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 包含地块编号的 Arcade 标签表达式示例
- en: If you have ever created any labeling expressions in ArcGIS Pro or even in ArcMap,
    then the syntax shown in the graphic should look somewhat familiar. It is not
    that much different from Python or VB Script expressions. So, if you are already
    familiar with those, you should be able to pick up Arcade fairly quickly.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾在 ArcGIS Pro 或 ArcMap 中创建过任何标签表达式，那么图中显示的语法应该看起来有些熟悉。它与 Python 或 VB Script
    表达式并没有太大的不同。所以，如果你已经熟悉那些，你应该能够很快地掌握 Arcade。
- en: 'A few things you should know about Arcade syntax: first, it is not case sensitive,
    unlike Python. So a variable named Parcel is the same as parcel. To comment within
    your code, you can use either `//` for single-line comments or `/* */` for multiple-line
    comments.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该了解的关于 Arcade 语法的一些事项：首先，它与 Python 不同，Arcade 语法不区分大小写。因此，名为 Parcel 的变量与 parcel
    相同。要在代码中添加注释，你可以使用 `//` 进行单行注释，或者使用 `/* */` 进行多行注释。
- en: 'The following is an example of a single-line comment:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个单行注释的示例：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following is an example of multiple-line comments:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个多行注释的示例：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Lastly, variables may be declared within Arcade expressions and reassigned
    with new values, as illustrated in the following code block:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以在 Arcade 表达式中声明变量，并使用以下代码块中的新值重新分配，如下所示：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Arcade is still very new. It first came out with the release of ArcGIS 10.5
    and ArcGIS Pro 1.4\. With each new release of ArcGIS and ArcGIS Pro, Esri increases
    the capabilities of Arcade. This means you can expect to do more and more with
    this new expression language as time goes on. If you would like to take a deeper
    dive into Arcade, you may want to go to [https://developers.arcgis.com/arcade/](https://developers.arcgis.com/arcade/).
    This is Esri's primary resource for information about Arcade.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Arcade 仍然非常新。它首次在 ArcGIS 10.5 和 ArcGIS Pro 1.4 的发布中推出。随着 ArcGIS 和 ArcGIS Pro
    的每个新版本发布，Esri 都会增加 Arcade 的功能。这意味着随着时间的推移，你可以期待使用这种新的表达式语言做更多的事情。如果你想深入了解 Arcade，你可能想访问
    [https://developers.arcgis.com/arcade/](https://developers.arcgis.com/arcade/)。这是
    Esri 关于 Arcade 的主要信息资源。
- en: In this chapter, you will be introduced to Arcade and how it works in ArcGIS
    Pro. You will start by exploring existing expressions  and learn how you can apply
    them in your projects. Then you will begin creating your own Arcade expressions.
    You will start by creating a labeling expression. Then you will learn how to create
    symbology expressions.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解 Arcade 以及它在 ArcGIS Pro 中的工作方式。你将从探索现有表达式开始，并学习如何在你的项目中应用它们。然后你将开始创建你自己的
    Arcade 表达式。你将从创建一个标签表达式开始。然后你将学习如何创建符号表达式。
- en: Applying prebuilt Arcade expressions
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用预构建的 Arcade 表达式
- en: One of the nice things about creating Arcade expressions is that you can save
    them so that they can be used in other maps or scenes, or even with other layers
    in the same map. These expression files have a `.lxp` file extension. This also
    allows you to easily share expressions with others, so you do not have to reinvent
    the wheel every time you need to make use of an Arcade expression.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Arcade 表达式的一个优点是你可以保存它们，以便在其他地图或场景中，甚至在同一地图中的其他图层中使用。这些表达式文件具有 `.lxp` 文件扩展名。这也允许你轻松与他人共享表达式，因此你不必每次需要使用
    Arcade 表达式时都重新发明轮子。
- en: In this recipe, you will examine and apply a couple of existing Arcade expressions
    to layers within a map. You will start with a labeling expression that labels
    parcels with their **parcel identification number** (**PIN**) and the mapped acreage.
    Then you will examine another one that controls the visibility of a layer.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将检查并应用一些现有的 Arcade 表达式到地图中的图层。你将从为地块添加 **地块识别号**（**PIN**）和地图面积标签的标签表达式开始。然后你将检查另一个控制图层可见性的表达式。
- en: Getting ready
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe will require you to access an ArcGIS Pro license and have the sample
    data installed. This recipe is able to be completed at all ArcGIS Pro license
    levels. You will also need a web browser that supports HTML 5 and JavaScript.
    This includes current versions of Chrome, Edge, Firefox, and Safari. Internet
    Explorer 11 or newer is also acceptable. Other browsers may also work but have
    not been tested by Esri.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个菜谱将要求你访问 ArcGIS Pro 许可证并安装示例数据。这个菜谱可以在所有 ArcGIS Pro 许可证级别完成。你还需要一个支持 HTML
    5 和 JavaScript 的网络浏览器。这包括当前版本的 Chrome、Edge、Firefox 和 Safari。Internet Explorer
    11 或更新的版本也是可接受的。其他浏览器也可能工作，但尚未由 Esri 测试。
- en: How to do it...
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'You will start by launching ArcGIS Pro and opening the Arcade project located
    in `C:\Student\ArcGISProCookbook\Chapter11\Arcade` using skills you have learned
    in previous recipes. The project should open with a map of the City of Thomaston,
    zoomed in to an area near the city center, as illustrated in the following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将首先启动 ArcGIS Pro 并打开位于 `C:\Student\ArcGISProCookbook\Chapter11\Arcade` 的 Arcade
    项目，使用你在前面的菜谱中学到的技能。项目应该打开一个显示 Thomaston 市地图，并放大到市中心附近的区域，如下面的截图所示：
- en: '![](img/1917f585-6e3b-42d7-a89e-8f3f53a48d18.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1917f585-6e3b-42d7-a89e-8f3f53a48d18.png)'
- en: City of Thomasville map
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Thomaston 市地图
- en: In the Contents pane, select the Parcels layer so the Feature Layer contextual
    menu appears in the ribbon.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内容面板中，选择包裹图层，以便在工具栏中显示要素图层上下文菜单。
- en: You will notice that none of the parcels in the map are labeled, so you need
    to turn on labeling for the layer. Click on the Labeling tab in the ribbon.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会注意到地图中的所有包裹都没有标签，因此你需要为该图层打开标签功能。点击工具栏中的标签选项卡。
- en: 'Click on the Label button located in the Layer group on the Labeling tab. This
    will turn on the labels for the parcels, as shown in the following screenshot:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击标签选项卡中图层组中的标签按钮。这将打开包裹的标签，如下面的截图所示：
- en: '![](img/16f9dff4-2cfc-443f-be55-533702b76499.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/16f9dff4-2cfc-443f-be55-533702b76499.png)'
- en: Now you can see that each parcel contains a label that identifies one attribute
    associated with each parcel. If you look at the setting for the Field in the Label
    Class group in the Label tab, you will see it is displaying the values found in
    the PIN field. This is the tax parcel identification number. What you want to
    do is label each parcel with not only its PIN but also with its mapped acreage.
    Luckily, someone has already created an expression file that will do just that.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到每个包裹都有一个标签，用于标识与每个包裹相关的一个属性。如果你查看标签选项卡中标签类组中字段的设置，你会看到它正在显示 PIN 字段中的值。这是税收包裹识别号。你想要做的是不仅为每个包裹标注其
    PIN，还要标注其地图面积。幸运的是，有人已经创建了一个表达式文件，可以做到这一点。
- en: You can also right-click on a layer in the Contents pane and select Label from
    the menu to turn labeling on and off for a specific layer.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在内容面板中右键单击一个图层，从菜单中选择标签来为特定图层打开或关闭标签功能。
- en: 'In the Labeling tab, click on the Expression button located to the right of
    the Field option in the Label Class group, as illustrated in the following screenshot.
    This will open the Label Class pane where you create labeling expressions:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标签选项卡中，点击位于标签类组中字段选项右侧的表达式按钮，如下面的截图所示。这将打开标签类面板，在那里你可以创建标签表达式：
- en: '![](img/186bd37b-8f17-414e-84b5-75fe6f7119db.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/186bd37b-8f17-414e-84b5-75fe6f7119db.png)'
- en: In the Label Class pane, set the Language to Arcade using the drop-down arrow.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标签类面板中，使用下拉箭头将语言设置为 Arcade。
- en: Look at the labeling expression now. It should read $feature.PIN.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在查看标签表达式。它应该读取 `$feature.PIN`。
- en: $feature is one of two global variables used by Arcade. It allows you to access
    or call information associated with the features in the target layer. In this
    example, it is letting you access the PIN field in the attribute table. You can
    also use it to access geometry information such as area, length, and coordinates.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`$feature` 是 Arcade 使用的两个全局变量之一。它允许你访问或调用与目标图层中的要素相关联的信息。在这个例子中，它允许你访问属性表中的
    PIN 字段。你也可以用它来访问几何信息，如面积、长度和坐标。'
- en: Below the Expression area, click on the Import button, which resembles a file
    folder. This will open the Import window.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表达式区域下方，点击导入按钮，它看起来像是一个文件夹。这将打开导入窗口。
- en: 'In the Import window, navigate to `C:\Student\ArcGISProCookbook\Chapter11`
    and select Label Parcels with PIN and Acres.lxp. Then click OK. This will import
    the expression into the Expression area in the Label Class pane. Now your Label
    Class pane should look similar to the following screenshot:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导入窗口中，导航到 `C:\Student\ArcGISProCookbook\Chapter11` 并选择 Label Parcels with PIN
    and Acres.lxp。然后点击确定。这将导入表达式到标签类面板中的表达式区域。现在你的标签类面板应该看起来类似于下面的截图：
- en: '![](img/46de96a0-cc76-4ff7-a827-aa5227ee9e1e.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/46de96a0-cc76-4ff7-a827-aa5227ee9e1e.png)'
- en: 'Now that you have imported the expression into the Label Class pane, let’s
    take a look at it. This expression is set up to do a lot, as shown in the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经将表达式导入到标签类面板中，让我们来看看它。这个表达式设置好了要做很多事情，如下所示：
- en: '![](img/dea7b81d-8ef8-40a4-a8ae-d2754161abb0.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dea7b81d-8ef8-40a4-a8ae-d2754161abb0.png)'
- en: 'The expression starts with a text string, which will be displayed in the label.
    This is identified by the use of the single quotes enclosing the text string.
    That is followed by a +, which acts as a connector to the next part of the expression.
    The expression then retrieves the value for each parcel found in the PIN field
    of the layers attribute table. That value is then displayed after the Parcel No:
    text string from the first part of the expression. This is then followed by the
    TextFormatting variable, which creates a new line so that the following parts
    of the expression are displayed in another line. After that, the expression displays
    another text string, Acreage. Lastly, the expression retrieves the values for
    each parcel found in the Map_AC field of the attribute table. However, it does
    not just display the exact value. This expression takes it a step forward and
    rounds the values to two decimal places. It does this by invoking the round mathematical
    function and limiting it to two decimal places. The two decimal place limit is
    applied using the value after the field name.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '表达式以一个文本字符串开始，它将在标签中显示。这是通过使用包含文本字符串的单引号来识别的。之后是一个加号（+），它作为表达式下一部分的连接符。然后表达式检索每个在图层属性表的
    PIN 字段中找到的包裹的值。该值随后显示在表达式的第一部分中的 Parcel No: 文本字符串之后。然后是 TextFormatting 变量，它创建一个新行，以便表达式的后续部分在另一行中显示。之后，表达式显示另一个文本字符串，面积。最后，表达式检索在属性表的
    Map_AC 字段中找到的每个包裹的值。然而，它不仅仅显示确切值。这个表达式更进一步，将值四舍五入到两位小数。它是通过调用 round 数学函数并将其限制为两位小数来实现的。两位小数的限制是通过字段名后的值来应用的。'
- en: Now that you know how this expression is supposed to work, let’s apply it and
    then compare the results we see in this map to the explanation just provided.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道这个表达式应该如何工作，让我们应用它，然后比较我们在地图中看到的与刚刚提供的解释的结果。
- en: Click on the Apply button at the bottom of the Label Class pane to apply the
    expression you just imported.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击标签类面板底部的应用按钮，以应用你刚刚导入的表达式。
- en: 'Notice how the labels in the map change and answer the question ahead:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意地图中的标签是如何变化的，并回答以下问题：
- en: '**Question:** Did the labels change so that they now match the description
    of how the expression is supposed to work?'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 标签是否已经更改，现在它们是否与表达式的预期工作描述相匹配？'
- en: '**Answer:**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：**'
- en: 'If your map looks like the following screenshot, then yes, the expression performed
    exactly as described:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的地图看起来像下面的截图，那么是的，表达式执行得完全如描述所述：
- en: '![](img/d038af0b-a63a-489c-b2c8-311dd934ecc0.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d038af0b-a63a-489c-b2c8-311dd934ecc0.png)'
- en: Results of labeling expression being applied
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 应用标签表达式的结果
- en: To a new user, this expression may seem complicated. However, it is a fairly
    simple one. These expressions can be much more complex, as you will find out next.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于新用户来说，这个表达式可能看起来很复杂。然而，它相当简单。这些表达式可以更加复杂，正如你将在下一部分中发现的那样。
- en: Close the Label Class pane and save your project.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭标签类面板并保存你的项目。
- en: Select the Streets layer in the Contents pane. Turn on the labels for this layer
    using skills you have learned earlier in this recipe. If you cannot remember,
    refer to *step 4*. The street names should appear in the map.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内容面板中选择街道层。使用你在本食谱中之前学到的技能打开此层的标签。如果你不记得，请参考*步骤 4*。街道名称应该会出现在地图上。
- en: Since you are working for the City, you want to make it possible to easily identify
    streets belonging to the City. To do this, your City streets need to be labeled
    in red and appear in a bold font. One of your co-workers has created an Arcade
    expression that will do that.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你为城市工作，你希望能够轻松地识别属于城市的街道。为此，你的城市街道需要用红色标注并以粗体字体显示。你的一个同事已经创建了一个 Arcade 表达式来完成这项工作。
- en: Click on the Expression button in the Label Class group on the Labeling tab,
    as you did previously in this recipe. This will open the Label Class pane.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击标签选项卡上的标签类组中的表达式按钮，就像你在本食谱中之前做的那样。这将打开标签类面板。
- en: In the Label Class pane, ensure the Language is set to Arcade. Then click on
    the Import button located near the bottom of the pane. You may remember that its
    icon resembles a file folder.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标签类面板中，确保语言设置为 Arcade。然后点击面板底部的导入按钮。你可能记得它的图标类似于文件夹。
- en: 'In the Import window that opens, navigate to `C:\Student\ArcGISProCookbook\Chapter11`
    using the skills you have learned and select the City Streets Labels Red.lxp file.
    Then click OK. You should now see the following expression appear in the Label
    Class pane:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在打开的导入窗口中，使用您学到的技能导航到 `C:\Student\ArcGISProCookbook\Chapter11` 并选择 City Streets
    Labels Red.lxp 文件。然后点击确定。现在您应该会在标签类面板中看到以下表达式：
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Click the Apply button to apply the expression logic to the labels. Look at
    how the labels change. Some of the street names now appear in a bold red font.
    Those are the streets that belong to the City.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击应用按钮将表达式逻辑应用于标签。看看标签是如何变化的。一些街道名称现在以粗体红色字体显示。这些是属于城市的街道。
- en: 'Let''s take a moment to examine how the expression accomplishes this. As you
    read this explanation, refer to the following diagram to help you better understand
    what is happening. It starts by defining a variable on the first line, which reads
    the road type from the Feature_TY field in the layer attribute table:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们花一点时间来检查表达式是如何实现这一点的。在阅读这个解释的同时，请参考以下图表以帮助您更好地理解正在发生的事情。它首先在第一行定义了一个变量，该变量从图层属性表中的
    Feature_TY 字段读取道路类型：
- en: '![](img/e5aa98a5-0638-4857-a9f5-3b60d8390da1.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e5aa98a5-0638-4857-a9f5-3b60d8390da1.png)'
- en: 'Once the variable is defined, the expression moves into a logic block that
    evaluates the value from the variable. It does this using an `if` statement. If
    the variable value for the feature is equal to City Street, then it returns a
    label for the feature from the Road_Name field in the attribute table, in bold
    red text. Otherwise, it just labels it with the value in the Road_Name field normally.
    The end result is a map with labels that look like those in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定义了变量，表达式就会移动到一个逻辑块中，该逻辑块会评估变量的值。它是通过使用 `if` 语句来做到这一点的。如果特征的变量值等于 City Street，那么它就会从属性表中的
    Road_Name 字段返回一个特征标签，以粗体红色文字显示。否则，它就会用 Road_Name 字段中的值正常标注。最终结果是像以下截图中的地图那样带有标签：
- en: '![](img/020636dd-ddd0-4112-bd62-a2cac562bde5.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/020636dd-ddd0-4112-bd62-a2cac562bde5.png)'
- en: Results of labeling expression using if statements
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 if 语句的标注表达式结果
- en: As you can see, some road names appear in red and bold while others are black
    and normal. Those that are red and bold belong to the City.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，一些道路名称以红色和粗体显示，而其他则以黑色和正常显示。那些红色和粗体的属于城市。
- en: Close the Label Class pane and save your project.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭标签类面板并保存您的项目。
- en: Close ArcGIS Pro.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭 ArcGIS Pro。
- en: You have now explored two Arcade expressions, so hopefully you are beginning
    to get some idea of how it works and what you can do with it. The first expression
    you used was fairly simple but still powerful. It labeled the parcels in the City
    of Thomaston with a PIN and the acreage on two different lines. The second expression
    you used included logic that controlled how features would be labeled. This is
    a much more complex expression. This is just the tip of the iceberg.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经探索了两个 Arcade 表达式，所以希望您开始对它是如何工作的以及您可以做什么有了一些了解。您使用的第一个表达式相当简单，但仍然很强大。它用
    PIN 和两行不同的面积标注了 Thomaston 市的地块。您使用的第二个表达式包含了控制特征标注方式的逻辑。这是一个更复杂的表达式。这只是冰山一角。
- en: As you will learn later in this chapter, Arcade not only works with labels but
    can also be used to control symbology. This further increases the value of Arcade.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您将在本章后面学到的那样，Arcade 不仅与标签一起工作，还可以用于控制符号。这进一步增加了 Arcade 的价值。
- en: Creating an Arcade labeling expression
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Arcade 标注表达式
- en: You have now had the opportunity to explore a couple of Arcade expressions.
    This has given you a chance to begin learning Arcade’s syntax as well as some
    of the things you can do with these expressions. Now it is time for you to start
    building your own.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在有机会探索了几种 Arcade 表达式。这给了您一个机会开始学习 Arcade 的语法以及您可以使用这些表达式做的一些事情。现在，您应该开始构建自己的表达式了。
- en: In this recipe, you will create an Arcade expression that will label the streets
    in Trippville with their name. This will require you to concatenate two separate
    fields that make up the full street name.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，您将创建一个 Arcade 表达式，用于标注 Trippville 的街道名称。这需要您连接两个组成完整街道名称的字段。
- en: Getting ready
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you need to have completed the previous recipe in this
    chapter as well as all those in [Chapter 1](45fda239-2b00-4355-9553-6c6c2b69b0ab.xhtml),
    *ArcGIS Pro Capabilities and Terminology*. This will ensure you have the knowledge
    and skills needed to complete this recipe.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此菜谱，您需要完成本章中此前的菜谱以及[第 1 章](45fda239-2b00-4355-9553-6c6c2b69b0ab.xhtml)，*ArcGIS
    Pro 功能和术语*中的所有菜谱。这将确保您具备完成此菜谱所需的知识和技能。
- en: This recipe can be completed with any ArcGIS Pro license level and no extensions
    are required. You will need to ensure you have installed the sample data before
    you begin.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 此菜谱适用于任何 ArcGIS Pro 许可级别，并且不需要任何扩展。在开始之前，您需要确保已安装示例数据。
- en: How to do it...
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: To start, you will need to launch ArcGIS Pro and open the Arcade project you
    used in the previous recipe. This project should appear in your list of recently
    opened projects.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您需要启动 ArcGIS Pro 并打开您在先前菜谱中使用的 Arcade 项目。该项目应出现在您最近打开的项目列表中。
- en: When the project opens, you should see the map of the City of Thomaston you
    were working with in the previous recipe. Close that map by clicking on the small
    X located in the tab at the top of the map view. This will reduce the computer's
    resources being used by ArcGIS Pro since you will not be working with that map
    in this recipe.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当项目打开时，您应该会看到您在先前菜谱中工作的 Thomaston 市地图。通过单击位于地图视图顶部标签上的小 X 关闭该地图。这将减少 ArcGIS
    Pro 使用的计算机资源，因为您在此菜谱中不会使用该地图。
- en: 'In the Catalog pane, right-click on the City of Trippville map and select Open
    from the menu that appears. This will open the map you will be using for this
    recipe. The map should look similar to the screenshot that follows. If not, use
    the Trippville Labeling Streets bookmark to zoom to this area:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在目录窗格中，右键单击 Trippville 市地图，并从出现的菜单中选择打开。这将打开您将用于此菜谱的地图。地图应类似于以下截图。如果不是，请使用 Trippville
    Labeling Streets 书签缩放到此区域：
- en: '![](img/de3e23a9-9199-419a-939c-cfc7e90c3061.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/de3e23a9-9199-419a-939c-cfc7e90c3061.png)'
- en: The newly opened Trippville map
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 新打开的 Trippville 地图
- en: Notice the streets already appear to be labeled with names. However, if you
    look closely, you should notice the names are not complete. They are missing the
    street type, such as road, avenue, or court. Let's see if you can figure out why
    that is happening.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意街道似乎已经用名称进行了标记。然而，如果您仔细观察，应该会注意到名称并不完整。它们缺少街道类型，例如道路、大道或庭院。让我们看看您是否能弄清楚这是为什么。
- en: Select the Streets layer in the Contents pane. Then click on the Labeling tab
    that appears in the ribbon.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内容窗格中选择 Streets 图层。然后在功能区中出现的标签选项卡上单击。
- en: 'Look at the value assigned to the Field option in the Label Class group and
    answer the questions:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看标签类组中分配给字段选项的值，并回答问题：
- en: '**Question**: What field is being used to label the Streets layer?'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题**：正在使用哪个字段来标记 Streets 图层？'
- en: '**Answer**:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案**：'
- en: '**Question**: Is this a single field or an expression?'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题**：这是一个单一字段还是一个表达式？'
- en: '**Answer**:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案**：'
- en: As you can see, the Streets layer is only using the NAME field to label the
    streets in the map with their name. While this single field would appear to contain
    the data needed to label the streets with their name, based on what you are seeing
    in the map, it is not the complete name. You need to examine the attribute table
    next to determine if there is another field that contains the street type information.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，Streets 图层仅使用 NAME 字段来在地图上用名称标记街道。虽然这个单一的字段似乎包含标记街道所需的数据，但根据您在地图上看到的情况，这不是完整的名称。您需要检查属性表以确定是否还有包含街道类型信息的其他字段。
- en: Right-click on the Streets layer in the Contents pane. Then select Attribute
    Table from the menu that appears. This will open the Attribute Table for the Streets
    layer, so you can examine it.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内容窗格中右键单击 Streets 图层。然后从出现的菜单中选择属性表。这将打开 Streets 图层的属性表，以便您可以检查它。
- en: Locate the NAME field in the table. Then examine the values it contains.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表中定位 NAME 字段。然后检查它包含的值。
- en: 'Next, examine the other fields and see if you can determine one that contains
    the street type. Then answer the questions:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，检查其他字段，看看您是否能确定包含街道类型的字段。然后回答问题：
- en: '**Question**: Is there a field in the Attribute Table that is used to store
    the street type?'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题**：属性表中是否有用于存储街道类型的字段？'
- en: '**Answer**:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案**：'
- en: '**Question**: If so, what is it?'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题**：如果是这样，那是什么？'
- en: '**Answer**:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案**：'
- en: After examining the table, you should have determined that the TYPE field is
    used to store the street type. It is not abnormal for the road name information
    to be broken down into separate fields. This is often true of the centerline data
    used as a geocoding source for E911/Emergency Response, address assignment, or
    general address location.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 检查完表格后，你应该已经确定TYPE字段用于存储街道类型。道路名称信息被分解到单独的字段中并不异常。这在用作E911/应急响应、地址分配或一般地址定位的地理编码源的中心线数据中通常是正确的。
- en: Now you know that in order to label each street with its full name, you will
    need to pull values from two separate fields. With that knowledge you can now
    create your expression.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道了为了标注每条街道的完整名称，你需要从两个不同的字段中提取值。有了这个知识，你现在可以创建你的表达式。
- en: Close the Attribute Table for the Streets layer. This will free up some screen
    real estate, so you can see more of the map.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭街道层的属性表。这将释放一些屏幕空间，这样你就可以看到更多的地图。
- en: If necessary, select the Streets layer in the Contents pane and click on the
    Labeling tab in the ribbon.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，在内容面板中选择街道层，然后在功能区中点击标签选项卡。
- en: Click on the Expression button located next to the Field value in the Label
    Class group on the Label tab. This will open the Label Class pane, so you can
    build your expression.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击标签选项卡中标签类组旁边位于字段值旁边的表达式按钮。这将打开标签类面板，这样你就可以构建你的表达式。
- en: In the Label Class pane, ensure your Language is set to Arcade using the drop-down
    arrow.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标签类面板中，确保使用下拉箭头将你的语言设置为Arcade。
- en: In the Expression area, you should already see the expression that is being
    used to label the streets based on values in the NAME field.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表达式区域，你应该已经看到了用于根据NAME字段中的值标注街道的表达式。
- en: 'In the Expression area, add the following:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表达式区域，添加以下内容：
- en: '[PRE4]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Once you have completed the expression, click on the Verify button at the bottom
    right-hand side of the Expression area. It looks like a green check mark.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你完成了表达式，点击表达式区域右下角的验证按钮。它看起来像绿色的勾号。
- en: Once you validate your expression, it should say the Expression is valid in
    green lettering below the Expression area. Now click the Apply button to see how
    the expression you created labels the streets.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你验证了你的表达式，它应该在表达式区域下方以绿色字母显示“表达式有效”。现在点击应用按钮，看看你创建的表达式如何标注街道。
- en: 'The expression you created is now indeed labeling the streets with both the
    name and type. However, if you look closely you will see that the two values are
    running together, as illustrated in the following diagram:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你创建的表达式现在确实正在用名称和类型对街道进行标注。然而，如果你仔细看，你会看到两个值是连在一起的，如下面的图所示：
- en: '![](img/67566028-1c9a-410d-afd9-5ed3dfa1cb04.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/67566028-1c9a-410d-afd9-5ed3dfa1cb04.png)'
- en: The space between the values is missing so that they are running together. You
    need to adjust your expression so that it adds the space between the two values.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 两个值之间的空间缺失，因此它们看起来是连在一起的。你需要调整你的表达式，以便在两个值之间添加空格。
- en: 'Return your attention to the Label Class pane and your expression. To add a
    space between the values in the two fields, you will need to add a string representing
    the space. Click in the expression just after the `+` and type the following:
    `“ “+`. There should be a space between the quotation marks. Your expression should
    now be:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的注意力转回到标签类面板和你的表达式上。要在两个字段中的值之间添加空格，你需要添加一个表示空格的字符串。在表达式中的`+`符号之后点击，并输入以下内容：`“
    “+`。引号之间应该有一个空格。现在你的表达式应该是这样的：
- en: '[PRE5]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Validate your expression once again. If it is valid, click the Apply button
    to see the results of your revised expression.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次验证你的表达式。如果它是有效的，点击应用按钮以查看修改后的表达式的结果。
- en: 'Arcade supports the use of several operators within its expressions. The operators
    perform basic logic functions in the expressions you create. Some of the common
    operators include:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Arcade支持在其表达式中使用多个运算符。这些运算符在创建的表达式中执行基本逻辑功能。一些常见的运算符包括：
- en: '`+`: The plus sign adds two numbers together or concatenates two fields or
    strings'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+`：加号用于将两个数字相加或将两个字段或字符串连接起来'
- en: '`-`: This subtraction or minus sign subtracts one number from another'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-`：这个减号或减号从另一个数字中减去一个数字'
- en: '`==`: The double equals sign is the proper syntax for equals'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`==`：双等号是等于的正确语法'
- en: '`!=`: The exclamation point with the equals sign means not equal to'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`!=`：感叹号加等号表示不等于'
- en: '`++`: The double plus signs increment values by one'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`++`：双加号用于递增值'
- en: '`--`: The double minus signs decrements the values by one'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--`：双减号将值减一'
- en: These are just a few of the operators you can use in Arcade. Go to [https://developers.arcgis.com/arcade/guide/logic/](https://developers.arcgis.com/arcade/guide/logic/)
    to see a complete list.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是您可以在Arcade中使用的运算符中的一小部分。请访问[https://developers.arcgis.com/arcade/guide/logic/](https://developers.arcgis.com/arcade/guide/logic/)以查看完整的列表。
- en: 'You should now see that a space exists between the name and the type, as illustrated
    in the following diagram:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该看到名称和类型之间存在一个空格，如下面的图所示：
- en: '![](img/24211457-fea0-40a6-90ed-60d996798e29.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/24211457-fea0-40a6-90ed-60d996798e29.png)'
- en: Congratulations on creating an Arcade expression! This is a very simple expression
    that concatenates the values in two fields together along with a string to create
    a single label. Let's take this to the next level and write another expression,
    which will change the color of the label based on the condition of the street.
    If you remember when you examined the attribute table for the Streets layer, there
    was a field that identified the condition of the road as either good, fair, or
    poor.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜您创建了一个Arcade表达式！这是一个非常简单的表达式，它将两个字段中的值与一个字符串连接起来，以创建一个单独的标签。让我们将其提升到下一个层次，并编写另一个表达式，该表达式将根据街道的条件更改标签的颜色。如果您还记得当您检查Streets层的属性表时，有一个字段用于识别道路的条件，是良好、一般还是较差。
- en: So, let's write a new expression, which will apply a green label to those streets
    in good condition, a black label to those in fair condition, and a red bold label
    to those in poor condition. You will start by defining two variables in your expression;
    one for the street name, which will use the expression you just created, and another
    for the condition.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们编写一个新的表达式，该表达式将为条件良好的街道应用绿色标签，为条件一般的街道应用黑色标签，为条件较差的街道应用红色粗体标签。您将首先在表达式中定义两个变量；一个用于街道名称，它将使用您刚刚创建的表达式，另一个用于条件。
- en: Save your project before continuing.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在继续之前，请保存您的项目。
- en: 'In the Label Class pane, you will define a variable called `name`, which will
    use the expression you just created. In the Expression area, update your expression
    so it now reads:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标签类面板中，您将定义一个名为`name`的变量，它将使用您刚刚创建的表达式。在表达式区域，更新您的表达式，使其现在读取如下：
- en: '[PRE6]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Press the *Enter* key to start a new code line. Then define another variable
    which refers to the street condition in the Condition field. Type the following
    on the new code line you started:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*Enter*键以开始新的代码行。然后在条件字段中定义另一个变量，该变量引用街道条件。在您开始的新代码行上键入以下内容：
- en: '[PRE7]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Your Label Class pane should now look like the following:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您的标签类面板现在应该看起来如下所示：
- en: '![](img/05ed179d-f6c0-4596-bd17-2ae29317bb19.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/05ed179d-f6c0-4596-bd17-2ae29317bb19.png)'
- en: You have defined two variables in your expression now, name and cond. This allows
    you to use the variable in place of the full value the variable represents. This
    makes it easier for you to type and avoid syntax errors. Now it is time to add
    the logic that will evaluate the condition of each street and label it accordingly.
    You will use an `if` statement to do this, as you saw in the last expression you
    used in the previous recipe.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在在表达式中定义了两个变量，名称和cond。这允许您使用变量代替变量所代表的完整值。这使得您在输入时更加方便，并避免语法错误。现在，是时候添加评估每条街道条件的逻辑，并相应地对其进行标记了。您将使用`if`语句来完成此操作，就像您在上一个菜谱中使用的上一个表达式一样。
- en: 'Return to the expression area within the Label Class pane and add the following
    code to your expression:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到标签类面板的表达式区域，并将以下代码添加到您的表达式中：
- en: '[PRE8]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Once you have finished typing the additional code into the expression, click
    the Validate button to ensure your syntax is correct.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您将附加代码输入到表达式中，请点击验证按钮以确保您的语法正确。
- en: As you type in each new line, you can use the Validate button to verify your
    syntax. The most common errors are missing quotation marks or brackets. Also,
    make sure to use double equals. If you have trouble writing the code, you can
    import the Trippville Street Name Labels with the Logic Results.lxp file located
    in `C:\Student\ArcGISProCookbook\Chapter11`.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入每一行时，您可以使用验证按钮来验证您的语法。最常见的错误是缺少引号或括号。同时，请确保使用双等号。如果您在编写代码时遇到困难，您可以使用位于`C:\Student\ArcGISProCookbook\Chapter11`的`Logic
    Results.lxp`文件导入Trippville街道名称标签。
- en: If your expression is valid, click on the Apply button so you can see the results
    of your new expanded expression.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的表达式有效，请点击应用按钮，以便您可以看到您新扩展表达式的结果。
- en: 'Once you apply your expression, you should see the labels in your map are now
    displayed in three colors—green, black, and red—as shown in the following screenshot:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用您的表达式，您应该会看到地图中的标签现在以三种颜色——绿色、黑色和红色——显示，如下面的截图所示：
- en: '![](img/6ddc826c-47a0-4038-a5ca-9957092b9414.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6ddc826c-47a0-4038-a5ca-9957092b9414.png)'
- en: This proves your expression is working. It is evaluating each street segment
    and displaying a label based on its condition and the parameters you defined for
    the label based on that condition.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这证明了您的表达式正在工作。它正在评估每个路段，并根据您为该条件定义的参数显示标签。
- en: Close the Label Class pane and save your project.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭标签类面板并保存项目。
- en: Close ArcGIS Pro.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭 ArcGIS Pro。
- en: You have now created two Arcade expressions for labeling streets with their
    names. The first expression you created was fairly basic. You concatenated two
    fields and added a space between the values to create a single label which displayed
    the full name of the streets. This is a very common use of an Arcade expression.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已创建了两个用于标注街道名称的 Arcade 表达式。您创建的第一个表达式相当基础。您将两个字段连接起来，并在值之间添加空格以创建一个单独的标签，该标签显示街道的全名。这是一个非常常见的
    Arcade 表达式用法。
- en: The second expression you created was much more complex. It included logic that
    determined how each label would appear in the map. Using `if` statements, your
    expression looked at the condition of each road segment and evaluated its condition,
    which was either good, fair, or poor. Based on that condition, it then rendered
    a label accordingly. The streets in good condition were labeled with green text.
    Those in fair condition were labeled with a black font. Lastly, those that were
    in bad condition were labeled with a bold red font.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 您创建的第二个表达式要复杂得多。它包括确定每个标签在地图中如何显示的逻辑。使用 `if` 语句，您的表达式检查每个路段的条件并评估其状态，状态可以是良好、一般或较差。基于这个条件，它随后相应地渲染标签。状况良好的街道用绿色文字标注。状况一般的街道用黑色字体标注。最后，状况较差的街道用粗体红色字体标注。
- en: Creating an Arcade symbology expressions
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Arcade 符号化表达式
- en: 'Arcade is not limited to use in labeling. You can also use it to control symbology.
    You may be thinking: why would you want to do that? ArcGIS Pro already has the
    ability to symbolize layers based on one or more fields of information, so that
    is a good question.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Arcade 不仅限于用于标签。您还可以用它来控制符号化。您可能想知道：为什么您想这样做？ArcGIS Pro 已经具有根据一个或多个信息字段符号化图层的能力，所以这是一个好问题。
- en: Arcade allows you to specify symbology based on values that do not exist in
    your database. It allows you to create symbology based on equations or functions.
    For example, you could have roads that have traffic count data and maximum designed
    traffic loads, but you want to symbolize the layers based on the current capacity—is
    it below, at, or over? There is no field identifying capacity. However, it can
    be determined by dividing the current traffic count by the design loads and multiplying
    by 100 to get the capacity percentage. Anything below 100 would be below capacity,
    anything at 100 would be at capacity, and anything above 100 would be over. Arcade
    allows you to build an expression that will do this. The best thing is that as
    the values change in the current traffic count or design traffic load data, the
    symbology is automatically updated and you only have two fields to maintain, not
    three or more.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Arcade 允许您根据数据库中不存在的值来指定符号化。它允许您根据方程或函数创建符号化。例如，您可能有道路具有交通量数据和最大设计交通负荷，但您希望根据当前容量来符号化图层——是低于、等于还是超过？没有字段标识容量。然而，可以通过将当前交通量除以设计负荷并乘以
    100 来确定容量百分比。任何低于 100 的值都表示低于容量，任何等于 100 的值都表示等于容量，任何高于 100 的值都表示超过。Arcade 允许您构建一个表达式来完成这项工作。最好的是，随着当前交通量或设计交通负荷数据的值的变化，符号化会自动更新，您只需维护两个字段，而不是三个或更多。
- en: In this recipe, you will symbolize the Census Block Groups for the Trippville
    area as either low, medium, or high population density.  The density field does
    not exist, so you will use an Arcade expression to determine these values and
    then symbolize the Block Groups accordingly. This will require you to use logic
    expressions similar to those you used in the last recipe.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，您将根据人口密度将 Trippville 区域的普查区块组符号化为低、中或高。密度字段不存在，因此您将使用 Arcade 表达式来确定这些值，然后相应地符号化区块组。这需要您使用与上一个菜谱中使用的类似逻辑表达式。
- en: Getting ready
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: As with the previous recipe, you need to have completed all the previous recipes
    in this chapter and those in [Chapter 1](45fda239-2b00-4355-9553-6c6c2b69b0ab.xhtml),
    *ArcGIS Pro Capabilities and Terminology*. This will ensure you have the required
    knowledge and skills needed to complete this one. You will also need to have ArcGIS
    Pro installed and access to a license. This recipe can be completed with any license
    level of ArcGIS Pro. The sample data also needs to be installed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的菜谱一样，您需要完成本章以及 [第 1 章](45fda239-2b00-4355-9553-6c6c2b69b0ab.xhtml) 中所有之前的菜谱，包括
    *ArcGIS Pro 功能和术语*。这将确保您具备完成此菜谱所需的所需知识和技能。您还需要安装 ArcGIS Pro 并获得许可证访问权限。此菜谱可以使用任何级别的
    ArcGIS Pro 许可证完成。样本数据也需要安装。
- en: How to do it...
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: You will start this recipe by launching ArcGIS Pro and opening the Arcade project
    you worked with in the previous recipe. This project is located in `C:\Student\ArcGISProCookbook\Chapter11\Arcade`.
    The project should appear in your recently opened projects if you have been working
    through the entire chapter.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将开始此菜谱，通过启动 ArcGIS Pro 并打开您在上一菜谱中使用的 Arcade 项目。此项目位于 `C:\Student\ArcGISProCookbook\Chapter11\Arcade`。如果您已经完成了整个章节的工作，则项目应出现在您最近打开的项目中。
- en: The project should open with the City of Trippville map shown in the view area.
    Close this map because you will be working with another one for this recipe.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目应打开带有视图区域中显示的 Trippville 城市地图。关闭此地图，因为您将使用另一个地图来完成此菜谱。
- en: 'In the Catalog pane, expand the Maps folder and right-click on the Trippville
    Census Data map. Select Open from the menu that appears. The new map should be
    displayed in the view area. It should contain four layers: City Limits, Railroads,
    Parcels, and Census Blocks.'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在目录面板中，展开地图文件夹，在 Trippville 人口普查数据地图上右键单击。从出现的菜单中选择打开。新地图应在视图区域中显示。它应包含四个图层：城市界限、铁路、地块和人口普查区块。
- en: In the Contents pane, select the Census Blocks from the list of layers. Then
    click on the Appearance tab in the ribbon.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内容面板中，从图层列表中选择人口普查区块。然后单击工具栏中的外观选项卡上的外观选项卡。
- en: Click on the drop-down arrow located below the Symbology button in the Drawing
    group on the Appearance tab. Select Unique Values from the list presented. This
    will open the Symbology pane.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在外观选项卡上的绘图组中，单击位于符号按钮下方的下拉箭头。从提供的列表中选择唯一值。这将打开符号面板。
- en: 'In the Symbology pane, click on the set an expression button located to the
    right of the Field parameter, as illustrated in the following screenshot. This
    will open the Expression Builder pane:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在符号面板中，单击位于字段参数右侧的设置表达式按钮，如图所示。这将打开表达式构建器面板：
- en: '![](img/4580d7e0-9ac1-40ce-b037-6c00d23c4666.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4580d7e0-9ac1-40ce-b037-6c00d23c4666.png)'
- en: 'The Expression Builder pane should look very similar to the one you used to
    create labels. However, unlike labels, symbology only supports the Arcade language.
    This pane is divided into three basic sections or areas, as shown in the following
    screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式构建器面板应与您用于创建标签的面板非常相似。然而，与标签不同，符号仅支持 Arcade 语言。此面板分为三个基本部分或区域，如下面的截图所示：
- en: '![](img/2dee6fd7-5853-4d83-8e70-6dccb05b02c4.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2dee6fd7-5853-4d83-8e70-6dccb05b02c4.png)'
- en: You can resize this pane to make it easier to work in. Move your mouse pointer
    to the edges of the pane. When your pointer becomes a double-headed arrow, you
    can then drag that edge of the pane in or out as desired.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以调整这个面板的大小，使其更容易工作。将鼠标指针移至面板的边缘。当指针变成双箭头时，您可以按需拖动面板的边缘向内或向外。
- en: The top area is the Title and Language area. Since Arcade is currently the only
    supported language, you do not need to worry about setting this option. The title
    is a name you give your expression. The fields and functions area allows you to
    pick fields and functions from the lists to add to your expression. This can help
    eliminate syntax errors. The bottom area is the Expression area where you build
    your expression as well as reset, validate, import, and export your expression.
    So let's start writing your expression.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部区域是标题和语言区域。由于 Arcade 目前是唯一支持的语言，您无需担心设置此选项。标题是您为表达式赋予的名称。字段和函数区域允许您从列表中选择字段和函数以添加到您的表达式中。这有助于消除语法错误。底部区域是表达式区域，您可以在其中构建表达式，以及重置、验证、导入和导出您的表达式。因此，让我们开始编写您的表达式。
- en: At the top of the Expression Builder pane in the Language and Title Area, title
    your expression Population Density.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表达式构建器面板的语言和标题区域顶部，将您的表达式命名为人口密度。
- en: 'Now move to the Expression area in the pane to begin writing your expression.
    You will start by defining a variable that will calculate the population density.
    First delete the existing expression. Then type the following in its place:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在转到面板中的表达式区域开始编写您的表达式。您将首先定义一个变量来计算人口密度。首先删除现有的表达式。然后在其位置输入以下内容：
- en: '[PRE9]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This variable calculates the population density by dividing the total population
    of the Census block by its area in square miles. This will generate the population
    per square mile. Now you need to create the logic which will evaluate the value
    calculated by the variable to determine if the density is low, medium, or high.
    You will do this with an `if`/`else` statement.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 此变量通过将人口普查区的总人口除以其平方英里面积来计算人口密度。这将生成每平方英里的人口数。现在您需要创建逻辑来评估变量计算出的值，以确定密度是低、中还是高。您将使用
    `if`/`else` 语句来完成此操作。
- en: 'Continue building your expression by adding the following code:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过添加以下代码来继续构建您的表达式：
- en: '[PRE10]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The first line of your `if` statement evaluates whether the variable is less
    than or equal to `1335`. If it is, then it returns a value of Low Density. If
    the variable value does not meet that criteria, it moves to the `else if` line.
    The `else if` line evaluates the variable to see if it is greater than `1335`
    or less than or equal to `1955`. The double `&&` signs in the expression act as
    the word *and*. So, the variable values must meet both operations. If the variable
    value does, then the expression returns `Medium Density`. Lastly, if the variable
    value does not meet any of the requirements in the `if` and `else if` lines, the
    expression returns `High Density`.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 `if` 语句的第一行评估变量是否小于或等于 `1335`。如果是，则返回低密度值。如果变量值不符合该标准，则移动到 `else if` 行。`else
    if` 行评估变量以查看它是否大于 `1335` 或小于或等于 `1955`。表达式中的双 `&&` 符号充当单词 *and* 的作用。因此，变量值必须满足这两个操作。如果变量值满足，则表达式返回中密度。最后，如果变量值不符合
    `if` 和 `else if` 行中的任何要求，则表达式返回高密度。
- en: Verify you have not made any syntax errors by validating your expression. Click
    on the Validate button at the bottom of the expression area to do this. This button
    looks like a green check mark.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过验证您的表达式来确认您没有犯任何语法错误。点击表达式区域底部的验证按钮来完成此操作。此按钮看起来像一个绿色的勾号。
- en: 'If your expression is valid, click the OK button. This will apply your expression
    and change the symbology for the layer. The Census Block layer should now display
    with the three categories you defined in your expression—Low, Medium, and High
    Density, as illustrated:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的表达式有效，点击确定按钮。这将应用您的表达式并更改图层的符号。现在人口普查区图层应该显示您在表达式中定义的三个类别——低、中和高密度，如图所示：
- en: '![](img/74bca285-815a-4cb1-a1df-cb19943a944e.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/74bca285-815a-4cb1-a1df-cb19943a944e.png)'
- en: Results of Arcade symbology expression
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Arcade 符号表达式结果
- en: The colors and scale of your map may be different, but the overall effect should
    be the same. You should see the three categories now shown in the Contents pane
    along with all other values. From this point you can make adjustments to the symbology
    as you would with any other layer. You can change the fill colors and patterns,
    change the order the values appear in within the list, and more. If you want to
    learn more about controlling symbology in ArcGIS Pro, we suggest you check out
    *Learning ArcGIS Pro* from Packt Publishing.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 您的地图颜色和比例可能不同，但整体效果应该相同。您现在应该能在内容面板中看到显示的三个类别，以及所有其他值。从这个点开始，您可以像对任何其他图层一样调整符号。您可以更改填充颜色和图案，更改列表中值出现的顺序，等等。如果您想了解更多关于在
    ArcGIS Pro 中控制符号的信息，我们建议您查看 Packt Publishing 出版的 *Learning ArcGIS Pro*。
- en: Feel free to make any adjustments you wish to the symbology assigned to the
    three values. Once you are done, close the Symbology pane.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随意调整分配给三个值的符号。完成后，关闭符号面板。
- en: Save your project and close ArcGIS Pro.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存您的项目并关闭 ArcGIS Pro。
- en: You have now created your first symbology expression using Arcade. As you have
    seen, a symbology expression is the same syntax-wise as a labeling expression,
    the difference being in how the results of the expression are displayed. With
    a symbology expression, the results change how the features within the layer appear
    in the map. With a labeling expression, the results are displayed as text within
    the map. The true power of these expressions is that they provide you with the
    ability to display different characteristics of your data by combining data, performing
    mathematical functions, and more. So you are not just limited to the exact data
    values.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已使用 Arcade 创建了第一个符号表达式。如您所见，符号表达式在语法上与标签表达式相同，区别在于表达式的结果如何显示。使用符号表达式时，结果会改变图层中特征在地图上的外观。使用标签表达式时，结果以文本形式显示在地图中。这些表达式的真正力量在于，它们通过结合数据、执行数学函数等方式，为您提供显示数据不同特性的能力。因此，您不仅限于精确的数据值。
- en: Esri continues to expand the capabilities of the Arcade language with each new
    release of ArcGIS Pro. You have only touched the tip of the iceberg in terms of
    how you can use this expression language. Remember, it is supported not only in
    ArcGIS Pro but also in ArcGIS Online, ArcGIS Enterprise, and Esri SDKs and APIs.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Esri 继续通过每个新的 ArcGIS Pro 版本扩展 Arcade 语言的性能。在如何使用这种表达式语言方面，您只是触及了冰山一角。请记住，它不仅支持
    ArcGIS Pro，还支持 ArcGIS Online、ArcGIS Enterprise 以及 Esri SDKs 和 APIs。
