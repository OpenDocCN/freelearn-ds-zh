- en: Improving Performance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提升性能
- en: 'Once people are familiar with Tableau’s functionality, they soon run into another
    type of issue: performance. You might all have experienced staring at the screen
    while reading *Loading Data* or *Executing Query*. But don’t worry, we’ve got
    you! If designed accordingly, Tableau dashboards can perform very well, even with
    large amounts of data.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦人们熟悉了 Tableau 的功能，他们很快就会遇到另一种类型的问题：性能。你们可能都曾经在屏幕上盯着 *加载数据* 或 *执行查询* 的字样发呆。但别担心，我们有办法！如果设计得当，Tableau
    仪表盘即使处理大量数据也能表现得非常好。
- en: This chapter will address various aspects of performance with the intent of
    empowering you with techniques to create workbooks that load quickly and respond
    snappily to end user interaction.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖性能的各个方面，旨在让你掌握技术，创建加载快速、响应灵敏的工作簿。
- en: 'In this chapter, we will discuss the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Understanding the performance-recording dashboard
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解性能记录仪表盘
- en: Hardware and on-the-fly techniques
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件和即时技术
- en: Connecting to data sources
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接数据源
- en: Working with extracts
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用提取数据
- en: Using filters wisely
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明智地使用过滤器
- en: Efficient calculations
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效计算
- en: Other ways to improve performance
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升性能的其他方法
- en: As you can see, there are many topics we have to cover with regard to performance
    improvement. Therefore, let’s not lose any time and dive right in. Our first topic
    will be performance recording, which is the first thing you should look at when
    experiencing a drop in performance because it helps you identify the source of
    all the slowness.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们需要覆盖许多与性能提升相关的主题。因此，让我们不要浪费任何时间，直接进入正题。我们的第一个话题将是性能记录，这是你在遇到性能下降时应首先查看的内容，因为它能帮助你找出所有缓慢的根源。
- en: Understanding the performance-recording dashboard
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解性能记录仪表盘
- en: Tableau includes a performance-recording feature as part of the installation
    package and it ships as a dashboard named `PerformanceRecording.twb`. The dashboard
    gives the Tableau author an easy way to understand and troubleshoot performance
    problems. The following exercises and associated discussion points will review
    various aspects of the performance-recording dashboard, including how to generate
    it, how to use it to improve performance, and how it’s constructed.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 包含一个性能记录功能，作为安装包的一部分，它以名为 `PerformanceRecording.twb` 的仪表盘形式提供。该仪表盘为
    Tableau 作者提供了一个简单的方法，用于理解和排查性能问题。以下的练习和讨论将回顾性能记录仪表盘的各个方面，包括如何生成它、如何利用它来提升性能，以及它是如何构建的。
- en: 'Perform the following steps:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Navigate to [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)
    to locate and download the workbook associated with this chapter.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)
    查找并下载与本章相关的工作簿。
- en: Navigate to the `Types of Events` worksheet.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `事件类型` 工作表。
- en: Select **Help** | **Settings and Performance** | **Start Performance Recording**.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **帮助** | **设置与性能** | **开始性能记录**。
- en: Press *F5* on Windows or *Command* + *R* on macOS to refresh the view.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Windows 上按 *F5* 或在 macOS 上按 *Command* + *R* 刷新视图。
- en: 'Select **Help** | **Settings and Performance** | **Stop Performance Recording**.
    A new dashboard will open:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **帮助** | **设置与性能** | **停止性能记录**。这时会打开一个新的仪表盘：
- en: '![](img/B18435_13_01.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_01.png)'
- en: 'Figure 13.1: Performance summary'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.1：性能摘要
- en: 'There are four main parts to be looked at:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 需要关注的四个主要部分：
- en: '**A) Performance Summary** shows the amount of time the dashboard needed to
    execute all the steps that happened between *step 3* (start performance recording)
    and *step 5* (stop performance recording). The slider can be used to filter.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**A) 性能摘要** 显示了仪表盘执行所有步骤所需的时间，这些步骤发生在 *步骤 3*（开始性能记录）和 *步骤 5*（停止性能记录）之间。可以使用滑块进行筛选。'
- en: '**B) Timeline** shows which step happened when and how long it took.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**B) 时间线** 显示了每个步骤发生的时间及其持续时长。'
- en: '**C)** The steps are also color-coded and can be found in the **Events** bar
    chart as well.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**C)** 这些步骤也通过颜色编码，可以在 **事件** 条形图中找到。'
- en: '**D) Query** will only show details when clicking on any event in (**B**) or
    (**C**).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**D) 查询** 仅在点击（**B**）或（**C**）中的任何事件时显示详细信息。'
- en: 'Let’s continue with the next steps:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续进行接下来的步骤：
- en: Drag the **Events** timeline slider in (**A**) to the far left to show all events.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **事件** 时间线滑块拖动到（**A**）的最左侧以显示所有事件。
- en: 'Within **Events Sorted by Time** (**C**), click on any green bar entitled **Executing
    Query**. Note that the **Query** section is now populated by the VizQL belonging
    to the highlighted bar:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**按时间排序的事件**（**C**）中，点击任何标记为**执行查询**的绿色条。注意，**查询**部分现在已显示属于高亮条的VizQL： |
- en: '![](img/B18435_13_02.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_02.png)'
- en: 'Figure 13.2: Events'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2：事件 |
- en: To see the query in its entirety, navigate to the **Query** worksheet and set
    the fit to **Entire View** (by **Query**, Tableau is referring to a VizQL query).
    Note that an especially long query may not be recorded in its entirety. In order
    to see every line of such a query, reference the log files located in **My Tableau
    Repository**.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看完整的查询，导航到**查询**工作表并将视图设置为**整个视图**（在**查询**中，Tableau指的是VizQL查询）。请注意，尤其长的查询可能未被完全记录。为了查看这样的查询的每一行，请参考位于**我的Tableau存储库**中的日志文件。
    |
- en: The preceding steps were intended to provide you with an initial look at what
    the performance-recording dashboard can be used for. I usually use it to check
    whether a particular query took significantly longer than others. I then look
    at the query on the **Query** tab and check which part is affected by reading
    the fields used, try to change it, and then run the performance dashboard again
    to see how things change. Now, let’s look at some more details.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的步骤旨在为你提供初步了解性能记录仪表板的用途。我通常用它来检查某个查询是否比其他查询花费了明显更长的时间。然后，我查看**查询**标签，检查哪个部分受到了影响，通过查看所使用的字段，尝试进行更改，然后再次运行性能仪表板，看看变化如何。现在，让我们来看一些更详细的信息。
    |
- en: 'If you access the **Events** worksheet from the performance-recording dashboard,
    you will see the different events. We will now discuss those events and their
    impact on performance in more detail:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从性能记录仪表板访问**事件**工作表，你将看到不同的事件。接下来，我们将更详细地讨论这些事件及其对性能的影响： |
- en: '| **Event type** | **Performance considerations** |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| **事件类型** | **性能考虑因素** |'
- en: '| Connecting to Data Source | Poor performance when connecting to the data
    source could indicate network latency or database issues, or even outdated drivers.
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 连接数据源 | 连接数据源时的性能差可能表明网络延迟、数据库问题，甚至是驱动程序过时。 |'
- en: '| Generating Extract | Aggregating data and hiding unused columns before you
    extract can increase performance because it will decrease the total column and
    row count, respectively. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 生成提取 | 在提取之前聚合数据并隐藏未使用的列可以提高性能，因为这将分别减少总列数和行数。 |'
- en: '| Compile Query | Compile Query performance problems could indicate database
    issues. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 编译查询 | 编译查询性能问题可能表明数据库存在问题。 |'
- en: '| Executing Query | If a query takes too long, you can improve performance
    by filtering data you don’t need or hiding fields you don’t use. Refer to the
    *Using filters wisely* section in this chapter for more information. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 执行查询 | 如果查询花费时间过长，你可以通过过滤不需要的数据或隐藏不使用的字段来提高性能。有关更多信息，请参考本章的*明智使用过滤器*部分。 |'
- en: '| Sorting Data | Performance issues related to sorting issues may indicate
    too many marks in the view. This sorting issue can also be caused by table calculations
    that depend on sorting data in the view. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 排序数据 | 与排序问题相关的性能问题可能表明视图中标记过多。此排序问题也可能由依赖视图中数据排序的表计算引起。 |'
- en: '| Geocoding | Geocoding performance issues may indicate too many marks in the
    view, internet latency issues, poor hardware, or a poor graphics card. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 地理编码 | 地理编码性能问题可能表明视图中标记过多、互联网延迟、硬件问题或显卡性能差。 |'
- en: '| Blending Data | Blending Data performance may be improved by reducing the
    amount of underlying data or by filtering. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 混合数据 | 混合数据的性能可以通过减少基础数据量或使用过滤来提高。 |'
- en: '| Computing Table Calculations | Since table calculations are typically performed
    locally, complex calculations may tax the end user’s computer. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 计算表计算 | 由于表计算通常是在本地执行的，复杂的计算可能会给终端用户的计算机带来负担。 |'
- en: '| Computing Totals | The Computing Totals performance may be improved by reducing
    the amount of underlying data or by filtering. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 计算总数 | 计算总数的性能可以通过减少基础数据量或使用过滤来提高。 |'
- en: '| Computing Layout | Computing Layout performance issues may be indicative
    of a dashboard with too many worksheets or elements such as images. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 计算布局 | 计算布局性能问题可能表明仪表板中有太多工作表或元素，如图片。 |'
- en: After this overview, which you can always come back to, we will dive a little
    deeper and research what happens when performance recording is activated. Note
    that the following assumes that the author is working on Tableau Desktop and not
    Tableau Server. In *Chapter 14*, *Exploring Tableau Server and Tableau Cloud*,
    we will cover performance recording on Tableau Server.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本概述之后，你可以随时回顾，我们将更深入地研究当启用性能记录时会发生什么。请注意，以下内容假设作者正在使用Tableau Desktop，而不是Tableau
    Server。在*第14章*，*探索Tableau Server和Tableau Cloud*中，我们将介绍Tableau Server上的性能记录。
- en: When recording performance, Tableau initially creates a file in `My Tableau
    Repository\Logs`, named `performance_[timestamp].tab`. Additionally, there is
    a file named `PerformanceRecording_new.twb` located in the Tableau program directory,
    for example, `C:\Program Files\Tableau\Tableau.[version]\Performance`. That file
    is automatically opened once the recording stops, thereby allowing the author
    to peruse the results.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在记录性能时，Tableau会在`My Tableau Repository\Logs`中初步创建一个名为`performance_[timestamp].tab`的文件。此外，还会在Tableau程序目录中创建一个名为`PerformanceRecording_new.twb`的文件，例如`C:\Program
    Files\Tableau\Tableau.[version]\Performance`。一旦停止录制，该文件会自动打开，从而让作者查看结果。
- en: We just learned how we can record performance metrics and use the dashboard
    that ships with Tableau Desktop and Tableau Server (if enabled by admin) on said
    topic. In the next sections, we will guide you step by step through the different
    options that you can consider to improve the overall performance.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚了解了如何记录性能指标并使用随Tableau Desktop和Tableau Server（如果管理员启用）提供的仪表板。在接下来的章节中，我们将一步步指导你如何优化整体性能的不同选项。
- en: Hardware and on-the-fly techniques
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬件和即时技术
- en: Even though Tableau Desktop does not need a lot in terms of hardware, it still
    happens that company desktops or laptops are underpowered, especially if you are
    a so-called business user who does not require programming tools or lots of processing
    power in your day-to-day work.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Tableau Desktop对硬件要求不高，但公司中的桌面电脑或笔记本往往配置不足，尤其是对于那些所谓的业务用户而言，他们的日常工作不需要编程工具或大量的处理能力。
- en: 'Therefore, in this section, we will discuss the technical requirements. As
    per [www.tableau.com](http://www.tableau.com), the latest technical requirements
    are:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们将讨论技术要求。根据[www.tableau.com](http://www.tableau.com)，最新的技术要求如下：
- en: '| **Windows** | Microsoft Windows 8/8.1, Windows 10 (x64), Windows 11 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| **Windows** | Microsoft Windows 8/8.1, Windows 10 (x64), Windows 11 |'
- en: '|  | 2 GB memory |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '|  | 2 GB内存 |'
- en: '|  | 1.5 GB minimum free disk space |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '|  | 至少1.5 GB的可用硬盘空间 |'
- en: '|  | CPUs must support SSE4.2 and POPCNT instruction sets |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '|  | CPU必须支持SSE4.2和POPCNT指令集 |'
- en: '| **Mac** | macOS Catalina 10.15, macOS Big Sur 11.4+, macOS Monterey 12.6+
    (for Tableau 2022.3+), and macOS Ventura (for Tableau 2022.3+) |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| **Mac** | macOS Catalina 10.15，macOS Big Sur 11.4+，macOS Monterey 12.6+（适用于Tableau
    2022.3+），以及macOS Ventura（适用于Tableau 2022.3+） |'
- en: '|  | Intel processors or Apple Silicon processors (using Rosetta) |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '|  | 英特尔处理器或使用Rosetta的Apple Silicon处理器 |'
- en: '|  | 1.5 GB minimum free disk space |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '|  | 至少1.5 GB的可用硬盘空间 |'
- en: Now that we have our basics straight, let us take a look at a feature that can
    slow down your performance unwillingly and how to solve it. Our first on-the-fly
    technique is called auto updates.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经理清了基础内容，接下来让我们看看一个可能会无意间拖慢你性能的功能以及如何解决它。我们第一个即刻使用的技巧叫做自动更新。
- en: Auto updates can be accessed either via the icon located on the toolbar, via
    **Worksheet** | **Auto Updates**, or by using the shortcut key *F10* on Windows
    or *Option* + *Command* + *0* on Mac. Auto updates give the author the option
    of pausing/resuming auto updates for the worksheet and/or for filters and can
    come in very handy if you want to make multiple changes to your layout but want
    to avoid Tableau loading after every change because every load means a new query
    is sent to your underlying data source and has to be processed, which will cost
    processing power. You can simply pause the update, make your changes, and then
    run the update once.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过工具栏上的图标、**工作表** | **自动更新**，或者使用快捷键*F10*（在Windows上）或*Option* + *Command*
    + *0*（在Mac上）来访问自动更新。自动更新为作者提供了暂停/恢复工作表和/或筛选器的自动更新的选项，如果你想多次更改布局而不希望每次更改后Tableau都重新加载（因为每次加载意味着会发送新的查询到底层数据源并进行处理，这会消耗处理能力），这个功能会非常有用。你可以简单地暂停更新，进行更改，然后一次性执行更新。
- en: 'The following exercise demonstrates how this works:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下练习展示了这一过程是如何工作的：
- en: Open the workbook associated with this chapter and navigate to the `Auto Updates`
    worksheet.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开与本章关联的工作簿，并导航到`Auto Updates`工作表。
- en: In the **Data** pane, select the `Superstore` dataset.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**窗格中，选择`超市`数据集。
- en: Place **State** on the **Rows** shelf.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**状态**字段放置在**行**架上。
- en: 'Deselect **Auto Update Worksheet** via the toolbar:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过工具栏取消选择**自动更新工作表**：
- en: '![](img/B18435_13_03.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_03.png)'
- en: 'Figure 13.3: Auto Update Worksheet'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3：自动更新工作表
- en: Place **City** on the **Rows** shelf to the right of **State**. Note that the
    view does not update.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**城市**字段放置在**状态**字段右侧的**行**架上。请注意，视图并未更新。
- en: Enable **Auto Update Worksheet** via the toolbar. The view now updates.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过工具栏启用**自动更新工作表**，视图现在会更新。
- en: Right-click on **State** on the **Rows** shelf and select **Show Filter**.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**状态**字段在**行**架上，选择**显示过滤器**。
- en: Right-click on **City** on the **Rows** shelf and select **Show Filter**.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**城市**字段在**行**架上，选择**显示过滤器**。
- en: 'On the **City** filter, click the drop-down menu and select **Multiple Values**
    **(****list****)** and **Only Relevant Values**:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**城市**过滤器上，点击下拉菜单并选择**多选值**(**列表**)以及**仅相关值**：
- en: '![](img/B18435_13_04.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_04.png)'
- en: 'Figure 13.4: Only Relevant Values'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4：仅相关值
- en: Deselect **Auto Update Filters** as shown in *Figure 13.3*.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选择**自动更新过滤器**，如*图13.3*所示。
- en: In the **State** filter, select only **Alabama**. Note that the **City** filterdoes
    not update.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**状态**过滤器中，仅选择**阿拉巴马**州。请注意，**城市**过滤器没有更新。
- en: Enable **Auto Update Filters** via the toolbar. The **City** filter now updates.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过工具栏启用**自动更新过滤器**，此时**城市**过滤器会更新。
- en: Auto updates can be very helpful. The author may pause auto updates, make multiple
    changes, and then resume auto updates, thereby saving time and increasing performance
    indirectly.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 自动更新非常有用。作者可以暂停自动更新，进行多次修改，然后再恢复自动更新，从而间接节省时间并提高性能。
- en: As a side note, cascading filters such as **Only Relevant Values** or **All
    Values in Context** may not populate when using the pause button or auto updates
    as they are reliant on a query being passed first.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 作为旁注，像**仅相关值**或**上下文中的所有值**等级联过滤器，在使用暂停按钮或自动更新时可能无法填充，因为它们依赖于先传递查询。
- en: The Run Update feature
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行更新功能
- en: 'The **Run Update** icon to the right of the pause/resume auto updates option
    is meant to refresh once, while the user can keep the disabled **Auto Update**
    feature in place. The following brief example should help clarify this option:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 位于暂停/恢复自动更新选项右侧的**执行更新**图标是用来执行一次刷新，而用户可以保持禁用的**自动更新**功能。以下简短示例应该有助于说明此选项：
- en: Duplicate the **previous** worksheet called `Auto Updates` and name the duplicate
    `Run Updates`.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制名为`自动更新`的**上一份**工作表，并将副本命名为`执行更新`。
- en: Pause all updates by clicking on the **Pause Auto Updates** icon.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**暂停自动更新**图标，暂停所有更新。
- en: Select several states at random in the **State** filter.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**状态**过滤器中随机选择几个州。
- en: 'Click on the **Run Update** icon as shown in *Figure 13.5* and select either
    **Update Filters** or **Update Worksheet**. The shortcut key for running an update
    is *F9* on Windows. The shortcut on macOS is *Shift* + *Command* + *0*:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如*图13.5*所示，点击**执行更新**图标并选择**更新过滤器**或**更新工作表**。运行更新的快捷键是Windows的*F9*，macOS上的快捷键是*Shift*
    + *Command* + *0*：
- en: '![](img/B18435_13_05.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_05.png)'
- en: 'Figure 13.5: Running an update'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5：执行更新
- en: Select several more states at random in the **State** filter. Note that auto
    updating is still paused.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**状态**过滤器中，随机选择几个州。请注意，自动更新仍然处于暂停状态。
- en: To repeat, **Run Update** allows the Tableau author to intermittently refresh
    the view while keeping auto updates paused. The two update features that we just
    discussed will make your life as a dashboard developer easier by being able to
    make multiple changes before loading and hence waiting for the refreshed data,
    but if you want to tackle performance issues at their core, you need some more
    tools to hand. The following section will introduce extracts, a really good feature
    for speeding up calculations and rendering in general.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 重申一下，**执行更新**允许Tableau作者在保持自动更新暂停的情况下间歇性地刷新视图。我们刚刚讨论的这两个更新功能将通过在加载数据之前做多次更改，避免等待刷新数据，从而使你作为仪表盘开发者的工作变得更轻松，但如果你想从根本上解决性能问题，你还需要更多的工具。以下部分将介绍提取功能，这对于加速计算和渲染非常有效。
- en: Small extracts
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小型提取
- en: Although extracts will be discussed in more detail in the *Working with extracts*
    section, it seems fitting to mention extracts in the context of performance considerations
    while authoring. Even under optimal conditions, working with large data sources
    can be slow. If constant access to the entire dataset while authoring is not necessary,
    consider creating a small, local extract. Author as much of the workbook as possible
    and then, when all the underlying data is truly needed, point to the original
    data source.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管提取数据将在*使用提取数据*一节中进行更详细的讨论，但在进行创作时提到提取数据似乎是合适的，因为它与性能考虑密切相关。即使在最优条件下，处理大数据源也可能很慢。如果在创作时不需要持续访问整个数据集，可以考虑创建一个小型本地提取。尽可能多地完成工作簿的创作，然后，当所有底层数据确实需要时，再指向原始数据源。
- en: 'The following steps show a brief example of this technique in action:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了该技术的简要示例：
- en: In the workbook associated with this chapter, navigate to the `Small Local Extract`
    worksheet.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本章附带的工作簿中，导航到`Small Local Extract`工作表。
- en: Select **Data** | **New Data Source** to choose a desired data source. This
    exercise assumes `Superstore.xls`, which installs with Tableau, but you can take
    any dataset you like.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**数据** | **新建数据源**，然后选择所需的数据源。这个练习假设使用`Superstore.xls`，它是随着Tableau一起安装的，但你可以选择任何你喜欢的数据集。
- en: Drag any field to the **Text** shelf. In my example, I used `Number` `of` `Records`**,**
    which is a calculated field containing solely the number 1.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将任意字段拖到**文本**货架上。在我的例子中，我使用了`Number` `of` `Records`**，**这是一个只包含数字1的计算字段。
- en: 'Right-click on the data source (for me: `Superstore`) and select **Extract
    Data…**:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击数据源（对我来说是`Superstore`），然后选择**提取数据...**：
- en: '![](img/B18435_13_06.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_06.png)'
- en: 'Figure 13.6: Extracting data'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6：提取数据
- en: 'At the bottom of the **Extract Data…** dialog box, select **Top**, your data
    source, and choose **1000**. In the following figure, **Orders** has been chosen,
    which is one of the two parts of the superstore join:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**提取数据...**对话框的底部，选择**Top**，你的数据源，然后选择**1000**。在下图中，选择了**Orders**，这是超级商店连接的两个部分之一：
- en: '![](img/B18435_13_07.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_07.png)'
- en: 'Figure 13.7: Top rows'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7：前几行
- en: Click the **Extract** button and note that number of records now displays `1000`
    rows.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**提取**按钮，注意记录数现在显示为`1000`行。
- en: In the **Data** pane, right-click on **Superstore** and deselect **Use Extract**.
    Note that **Number of Records** has reverted to its original value.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**窗格中，右键点击**Superstore**，取消选择**使用提取**。请注意，**记录数**已恢复到原始值。
- en: 'By creating a small, local extract, the Tableau author alleviates two performance
    inhibitors: network latency and dataset size.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建一个小的本地提取，Tableau作者缓解了两个性能瓶颈：网络延迟和数据集大小。
- en: This section gave you the knowledge of how to reduce your dataset temporarily
    and the option to get back to the original size, both without leaving the Tableau
    interface. This is a great way to speed up your dashboard-building process and
    avoid long waits. In the next section, we will talk about how to connect to data
    sources to achieve the best possible performance.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了如何临时减少数据集并选择不离开Tableau界面就能恢复到原始大小的选项。这是加快仪表板构建过程并避免长时间等待的好方法。在下一节中，我们将讨论如何连接数据源，以实现最佳性能。
- en: Connecting to data sources
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接数据源
- en: One of the beauties of Tableau is the ease with which you can connect to many
    different data sources in various ways. As mentioned earlier in this book, there
    are many connectors defined in Tableau for interfacing with a variety of data
    sources. Furthermore, this flexibility extends beyond simply connecting to single
    tables or files.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau的一个优点是你可以通过多种方式轻松连接到许多不同的数据源。正如本书前面提到的，Tableau定义了许多连接器，以便与各种数据源接口。此外，这种灵活性不仅限于连接单个表格或文件。
- en: Although Tableau makes it easy to connect to various data sources, it should
    be stressed that Tableau is not an **Extract, Transform, and Load** (**ETL**)
    tool. If complex joins and complex data blending are required to generate useful
    results, it may be advisable to perform ETL work outside of Tableau, for example,
    in Tableau Prep Builder (see *Chapter 3*, *Using Tableau Prep Builder*, for more
    information on this service). ETL work will ideally lead to better data modeling
    and thus easier authoring and quicker performance in Tableau.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Tableau 可以轻松连接到各种数据源，但必须强调的是，Tableau 不是一个**提取、转换和加载**（**ETL**）工具。如果生成有用结果需要复杂的连接和数据混合，建议在
    Tableau 外部进行 ETL 工作，例如在 Tableau Prep Builder 中（有关此服务的更多信息，请参见*第 3 章*，*使用 Tableau
    Prep Builder*）。ETL 工作理想情况下将带来更好的数据建模，从而在 Tableau 中实现更轻松的创作和更快的性能。
- en: 'The four ways in which Tableau connects to data are as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 连接数据的四种方式如下：
- en: Tableau may connect to a single table. This is ideal as it allows the most functionality
    and easiest troubleshooting while enabling Tableau to send the simplest queries
    and thus perform optimally. However, it is not always possible to connect to a
    single table and, although ideal, it is not reasonable to have such a strict limitation.
    The relationship between data sources and reporting tools is constantly changing.
    A reporting tool that is inflexible in the way it can connect to data will likely
    not be successful, no matter how elegant and beautiful the end results.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tableau 可以连接到单个表。这是理想的，因为它提供了最全面的功能和最简单的故障排除，同时使 Tableau 能够发送最简单的查询，从而实现最佳性能。然而，连接到单个表并不总是可能的，尽管这是理想的，但也不合理要求这么严格的限制。数据源与报告工具之间的关系是不断变化的。一个在数据连接方式上不灵活的报告工具，可能不会成功，无论最终结果多么优雅美观。
- en: The second option is relationships, a newer, more flexible way to combine two
    or more datasets. The level of detail will be defined per worksheet rather than
    in the **Data Source** tab, which makes this feature very powerful.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二种选择是关系，这是一个更新且更灵活的方式来结合两个或多个数据集。详细程度将在每个工作表中定义，而不是在**数据源**选项卡中定义，这使得此功能非常强大。
- en: 'The third way in which Tableau may connect to data is via joining. One table
    may not supply all the necessary data, but by joining two or more tables, all
    the needed data may be accessible. As the joins become more and more complex,
    performance may be impacted, and troubleshooting may become difficult. Fortunately,
    Tableau can assume referential integrity and thus work quite efficiently with
    even complex joins. More information can be found here: [https://help.tableau.com/current/pro/desktop/en-us/joins_xbd_perf.htm](https://help.tableau.com/current/pro/desktop/en-us/joins_xbd_perf.htm).'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tableau 连接数据的第三种方式是通过连接。一个表可能无法提供所有必要的数据，但通过连接两个或多个表，所有需要的数据都可以访问。随着连接的复杂性增加，性能可能会受到影响，故障排除也可能变得困难。幸运的是，Tableau
    可以假设引用完整性，从而即使在复杂的连接中也能高效工作。更多信息可以在这里找到：[https://help.tableau.com/current/pro/desktop/en-us/joins_xbd_perf.htm](https://help.tableau.com/current/pro/desktop/en-us/joins_xbd_perf.htm)。
- en: Finally, Tableau may utilize data blending. Data blending often performs admirably,
    provided no more than one of the blended data sources is large and dimensions
    that are used for blending have relatively few members.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，Tableau 可以利用数据混合。只要混合的数据源中不超过一个是大型的，并且用于混合的维度成员相对较少，数据混合通常表现得非常出色。
- en: Relationships should be chosen over joining and joining should be chosen instead
    of blending whenever possible. When blending multiple, large data sources, performance
    can be seriously impacted. The problem is further compounded when blending on
    high-cardinality dimensions. Also, data blending limits some functionality, such
    as the ability to use dimensions, row-level calculations, or LOD expressions,
    from a secondary data source.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能的情况下，应该选择关系而不是连接，选择连接而不是混合。当混合多个大型数据源时，性能可能会受到严重影响。当在高基数维度上进行混合时，问题会更加复杂。此外，数据混合会限制某些功能，例如使用来自二级数据源的维度、行级计算或
    LOD 表达式的能力。
- en: 'However, there are exceptions, two of which are discussed here:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，也有例外，下面讨论了其中两个：
- en: First, data blending is advantageous (and usually necessary) when there is no
    common key shared between two tables.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，当两个表之间没有共享的公共键时，数据混合是有优势的（通常也是必要的）。
- en: Secondly, in some instances, cross-joining will not work, and a data blend is
    required. For example, use data blending when you work with two datasets that
    have different granularities and relationships are not possible or when a cross-database
    join is not possible (for example, to cubes or extract-only connections), or when
    you have big datasets for which a blend will improve performance.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，在某些情况下，交叉连接将无法使用，需要进行数据混合。例如，当你处理两个具有不同粒度且无法建立关系的数据集时，或当交叉数据库连接不可用时（例如，针对数据立方体或仅限提取连接），或者当你处理大型数据集时，混合数据可以提高性能。
- en: 'More info can be found here: [https://help.tableau.com/current/pro/desktop/en-us/multiple_connections.htm](https://help.tableau.com/current/pro/desktop/en-us/multiple_connections.htm).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请访问：[https://help.tableau.com/current/pro/desktop/en-us/multiple_connections.htm](https://help.tableau.com/current/pro/desktop/en-us/multiple_connections.htm)。
- en: For these reasons, consider as a guideline that data blending should normally
    be avoided if a joining option exists.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为指导原则，如果存在连接选项，通常应避免使用数据混合。
- en: '*Chapter 4*, *Learning about Joins, Blends, and Data Structures*, provides
    detailed information about joining and blending. For the purposes of this chapter,
    joining and blending discussions will be limited to performance considerations.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*第四章*，*关于连接、混合和数据结构的学习*，提供了关于连接和混合的详细信息。对于本章而言，连接和混合的讨论将限于性能考虑。'
- en: Working efficiently with large data sources
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高效处理大型数据源
- en: This section will cover some basics of database tuning and ways to work efficiently
    with large data sources. Since the topic is more focused on data sources than
    on Tableau, no exercises are included.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍一些数据库调优的基础知识，以及如何高效地处理大型数据源。由于本主题更多关注数据源而非 Tableau，因此不包含练习。
- en: If you are connecting to large data sources and are experiencing performance
    problems, a conversation with a **database administrator** (**DBA**) may be beneficial.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在连接大型数据源并且遇到性能问题，与**数据库管理员**（**DBA**）的对话可能会有所帮助。
- en: Clear communication coupled with a small amount of database work could dramatically
    improve performance. The conversation should include database-tuning points, such
    as explicitly defining primary and foreign keys, defining columns as *not null*,
    and indexing. Each point will be discussed here.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 清晰的沟通结合少量的数据库工作可以显著提高性能。对话中应包括数据库调优要点，如显式定义主键和外键、将列定义为*not null*以及索引。每个要点将在此讨论。
- en: Defining primary and foreign keys
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义主键和外键
- en: 'Primary and foreign keys are essential for joining tables. A primary key is
    composed of one or more columns in a table. The primary key should be unique for
    every row. Joining on a non-unique, row-level key may lead to erroneous results,
    as explored in *Chapter 4*, *Learning about Joins, Blends, and Data Structures*.
    Explicitly defining primary keys in the database helps to ensure that each key
    value is unique:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 主键和外键对于连接表格至关重要。主键由表中的一列或多列组成，主键应该对每一行都是唯一的。连接时使用非唯一的行级键可能会导致错误的结果，正如在*第四章*，*关于连接、混合和数据结构的学习*中所探讨的那样。在数据库中显式定义主键有助于确保每个键值都是唯一的：
- en: '![](img/B18435_13_08.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_08.png)'
- en: 'Figure 13.8: Database keys'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.8：数据库键
- en: A foreign key is composed of one or more columns in a table that uniquely identify
    rows in another table. This unique identification occurs as a result of the foreign
    key in one table referencing the primary key in another table. Explicitly defining
    foreign keys in the database enables Tableau to bypass many integrity checks,
    thereby improving performance.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 外键由表中的一列或多列组成，唯一标识另一个表中的行。这种唯一标识是因为表中的外键引用了另一个表中的主键。显式定义外键可以使 Tableau 跳过许多完整性检查，从而提高性能。
- en: Defining columns as NOT NULL
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将列定义为 NOT NULL
- en: Tableau has published multiple white papers on performance improvement tips
    and tricks ([https://help.tableau.com/current/pro/desktop/en-us/performance_tips.htm](https://help.tableau.com/current/pro/desktop/en-us/performance_tips.htm))
    that state that programmers and Tableau Desktop do not like `NULL` data. Define
    each column in your tables with an explicit `NOT NULL` if possible.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 已发布多篇关于性能提升技巧和建议的白皮书（[https://help.tableau.com/current/pro/desktop/en-us/performance_tips.htm](https://help.tableau.com/current/pro/desktop/en-us/performance_tips.htm)），其中指出程序员和
    Tableau Desktop 都不喜欢 `NULL` 数据。如果可能，定义每一列时使用显式的 `NOT NULL`。
- en: 'In practice, database admins debate when it is and isn’t appropriate to define
    columns as `NOT NULL`; however, two things are clear:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，数据库管理员就何时定义列为`NOT NULL`进行辩论；然而，有两点是明确的：
- en: A primary or foreign key should be defined as `NOT NULL`. This is self-evident
    since primary and foreign keys must be unique by definition.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主键或外键应该定义为`NOT NULL`。这是显而易见的，因为主键和外键按定义必须是唯一的。
- en: Also, any column that is to be indexed should be defined as `NOT NULL` since,
    otherwise, an index may be unusable.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，任何需要索引的列都应该定义为`NOT NULL`，因为否则索引可能无法使用。
- en: Indexing is discussed more fully in the next section.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 索引将在下一节中更详细地讨论。
- en: Indexing
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: 'Let’s consider the following two questions regarding indexing:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑关于索引的以下两个问题：
- en: What is an index?
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是索引？
- en: What should be indexed?
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该对哪些内容进行索引？
- en: The first of our two questions may be easily answered by a DBA but is likely
    uncharted waters for the average Tableau author. So, to clarify, an index is a
    copy of selected columns in a database table that has been optimized for efficient
    searching. Since these copied columns include pointers to the original columns,
    they can be accessed to quickly find given rows and return the required data.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的两个问题中的第一个可能很容易由数据库管理员（DBA）回答，但对于普通的Tableau作者来说，可能是未知领域。因此，为了澄清，索引是数据库表中选定列的副本，这些副本已经过优化，可以高效地进行搜索。由于这些复制的列包含指向原始列的指针，因此可以通过它们快速找到给定的行并返回所需的数据。
- en: A small example may prove helpful. According to the Boeing Company, the 787
    Dreamliner has about 2.3 million parts. Imagine a table that lists all these parts
    in the **Part_Name** column. Your task is to search this column for every part
    starting with the “fuse” string. On a non-indexed column, this would require the
    examination of every row of data in the database. Such a search could be quite
    slow. Fortunately, indexes can be used to reduce the number of rows searched,
    thus making the process much faster. One type of structured data used for indexing
    is B-tree. A B-tree data structure is sorted. Thus, when accessing an index using
    a B-tree data structure to search for all parts starting with *fuse*, not every
    row has to be considered. Instead, the database can skip straight to *fs* and
    quickly return the desired rows.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的例子可能会有所帮助。根据波音公司，787梦想客机大约有230万个部件。假设有一个表格列出了所有这些部件的**Part_Name**列。你的任务是搜索这个列中以“fuse”字符串开头的每个部件。在没有索引的列上，这将需要检查数据库中每一行的数据。这样的搜索可能会非常慢。幸运的是，可以使用索引来减少搜索的行数，从而加快过程。一种用于索引的结构化数据是B树。B树数据结构是有序的。因此，当使用B树数据结构来访问索引搜索所有以*fuse*开头的部件时，就不必考虑每一行。数据库可以直接跳到*fs*并快速返回所需的行。
- en: 'Now let’s move on to the second question on indexing. What should be indexed?
    This question can be answered succinctly: ideally, all columns used for joining
    or filtering should be indexed in the data source.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续讨论第二个关于索引的问题。应该对哪些内容进行索引？这个问题可以简洁地回答：理想情况下，所有用于连接或筛选的列都应该在数据源中建立索引。
- en: Although there are some basic performance considerations for creating more efficient
    joins in Tableau (for example, avoid an outer join when a left join will suffice),
    join performance is largely determined outside of Tableau. Therefore, it is typically
    more important to index columns used in joins than those used for filtering.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在Tableau中创建更高效连接的基本性能考虑因素（例如，在左连接足够时避免外连接）是存在的，但连接性能主要在Tableau外部决定。因此，通常更重要的是对用于连接的列进行索引，而不是用于筛选的列。
- en: To continue with our discussion of manipulating data sources, the next section
    will cover how Tableau can be used to create summarized datasets through extracting.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续我们关于操作数据源的讨论，下一节将介绍如何使用Tableau通过提取来创建汇总数据集。
- en: Working with extracts
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用提取数据
- en: This section will discuss what a Tableau data extract is as well as how to efficiently
    construct an extract. A colleague of mine recently consulted with a relatively
    small mobile phone service provider. Even though the company was small, the volume
    could be in excess of 1,000,000 calls per day. Management at the company insisted
    on the ability to interface with detailed visualizations of individual calls in
    Tableau workbooks. The performance of the workbooks was, understandably, a problem.
    Was such low-level detail necessary? Might less detail and snappier workbooks
    have led to better business decisions?
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将讨论什么是Tableau数据提取，以及如何高效构建提取。我的一位同事最近与一家相对较小的手机服务提供商进行了咨询。尽管该公司规模较小，但每天的呼叫量可能超过1,000,000次。公司管理层坚持要求能够与Tableau工作簿中的单个呼叫的详细可视化进行交互。工作簿的性能显然成为了一个问题。如此低级别的详细信息是否必要？减少细节并使工作簿更迅速是否可能带来更好的商业决策？
- en: In order to balance business needs with practical performance requirements,
    businesses often need to ascertain what level of detail is genuinely helpful for
    reporting. Often, detailed granularity is not necessary. When such is the case,
    a summary table may provide sufficient business insight while enabling quick performance.
    In the case of the mobile phone service provider, a daily snapshot of call volumes
    may have sufficed. Even an hourly snapshot would have greatly reduced the table
    size and improved Tableau’s performance.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 为了平衡业务需求与实际性能要求，企业通常需要确定哪些层级的细节对于报告真正有帮助。通常情况下，详细的粒度并非必要。当情况是这样时，摘要表可能提供足够的业务洞察，并且能提高性能。在手机服务提供商的案例中，每日的通话量快照可能已经足够了。即使是每小时的快照，也会大大减少表的大小并提高Tableau的性能。
- en: To address this common business need, an extract is a proprietary compressed
    data source created by Tableau Desktop. Since its release, the file extension
    for an extract has changed from `.tde` to the `.hyper` format. Thus, the new format
    makes use of the Hyper engine, which was discussed in *Chapter 1*, *Reviewing
    the Basics*. An extract can be stored locally and accessed by Tableau to render
    visualizations.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 为了满足这一常见的业务需求，提取是由Tableau Desktop创建的专有压缩数据源。自发布以来，提取的文件扩展名已从 `.tde` 更改为 `.hyper`
    格式。因此，新的格式使用了Hyper引擎，Hyper引擎在*第1章*，*回顾基础知识*中已讨论过。提取可以本地存储，并由Tableau访问以渲染可视化。
- en: 'Consider the following points that make an extract file an excellent choice
    for improved performance:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下几点，使得提取文件成为提高性能的优秀选择：
- en: Extracts can be quickly generated at an aggregate level.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取可以在汇总级别上快速生成。
- en: Extracts are a columnar store, which records as sequences of columns.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取是一个列式存储，记录的是列的顺序。
- en: Relational databases typically store data using a **Row Store** methodology.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系型数据库通常使用**行存储**方法存储数据。
- en: In the following example, note that **Row Store** is excellent for returning
    individual rows, whereas **Column Store** is much better for returning aggregated
    data.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，请注意，**行存储**非常适合返回单独的行，而**列存储**则更适合返回汇总数据。
- en: 'Here is an example table:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例表：
- en: '|  | **Table** |  |  |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '|  | **表** |  |  |'
- en: '|  | Instrument | Store | Price |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '|  | 乐器 | 存储 | 价格 |'
- en: '| Row 1 | Selmer Trumpet | North | $3,500 |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| 行 1 | 塞尔梅小号 | 北部 | $3,500 |'
- en: '| Row 2 | Conn French Horn | East | $4,500 |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| 行 2 | 康奈尔法式圆号 | 东部 | $4,500 |'
- en: '| Row 3 | Getzen Trombone | South | $2,500 |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| 行 3 | 盖岑长号 | 南部 | $2,500 |'
- en: '| Row 4 | Miraphone Tuba | West | $9,000 |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| 行 4 | 米拉丰大号 | 西部 | $9,000 |'
- en: 'Here is a **Row Store** table in a database:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个数据库中的**行存储**表：
- en: '| **Row 1** | Selmer Trumpet |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| **行 1** | 塞尔梅小号 |'
- en: '|  | North |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '|  | 北部 |'
- en: '|  | $3,500 |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '|  | $3,500 |'
- en: '| **Row 2** | Conn French Horn |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| **行 2** | 康奈尔法式圆号 |'
- en: '|  | East |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '|  | 东部 |'
- en: '|  | $4,500 |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '|  | $4,500 |'
- en: '| **Row 3** | Getzen Trombone |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| **行 3** | 盖岑长号 |'
- en: '|  | South |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '|  | 南部 |'
- en: '|  | $2,500 |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '|  | $2,500 |'
- en: '| **Row 4** | Miraphone Tuba |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| **行 4** | 米拉丰大号 |'
- en: '|  | West |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '|  | 西部 |'
- en: '|  | $9,000 |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '|  | $9,000 |'
- en: 'Here is a **Column Store** table in a database:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个数据库中的**列存储**表：
- en: '| **Instrument** | Selmer Trumpet |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| **乐器** | 塞尔梅小号 |'
- en: '|  | Conn French Horn |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '|  | 康奈尔法式圆号 |'
- en: '|  | Getzen Trombone |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '|  | 盖岑长号 |'
- en: '|  | Miraphone Tuba |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '|  | 米拉丰大号 |'
- en: '| Store | North |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| 存储 | 北部 |'
- en: '|  | East |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '|  | 东部 |'
- en: '|  | South |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '|  | 南部 |'
- en: '|  | West |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '|  | 西部 |'
- en: '| Price | $3,500 |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| 价格 | $3,500 |'
- en: '|  | $4,500 |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '|  | $4,500 |'
- en: '|  | $2,500 |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '|  | $2,500 |'
- en: '|  | $9,000 |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '|  | $9,000 |'
- en: I hope you could see that in a **Column Store** table, each *n* row of a certain
    attribute makes up for the first row. For example, the first row of `Instrument`,
    the first row of `Store`, and the first row of `Price` all relate to one entry,
    whereas in a **Row Store** table, all rows that belong to the same entry are in
    consecutive order.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望您能看到，在**列存储**表中，每*n*行的某个属性构成了第一行。例如，`Instrument`的第一行、`Store`的第一行和`Price`的第一行都与一个条目相关，而在**行存储**表中，属于同一个条目的所有行是连续的。
- en: To sum up what we have learned so far in this section, extracts use compression
    techniques to reduce file size while maintaining performance and utilize RAM and
    hard drive space for optimal performance. Neither of those two things happens
    when using a live connection to a database—therefore, extracts can improve the
    performance of your dashboard whenever the database can’t.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 总结本节学习的内容，提取文件利用压缩技术来减少文件大小，同时保持性能，并利用 RAM 和硬盘空间以达到最佳性能。而使用与数据库的实时连接时，以上两者都无法实现——因此，当数据库无法提供良好性能时，提取文件可以提升仪表板的性能。
- en: Constructing an extract
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建提取文件
- en: 'This section will discuss extracts from a performance aspect. Other aspects
    of extracts, such as scheduling and incremental refreshes, will not be considered
    here, but you can find more information here: [https://help.tableau.com/current/pro/desktop/en-us/extracting_refresh.htm](https://help.tableau.com/current/pro/desktop/en-us/extracting_refresh.htm).'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将从性能角度讨论提取文件。提取文件的其他方面，如调度和增量刷新，将不在这里讨论，但您可以在此处找到更多信息：[https://help.tableau.com/current/pro/desktop/en-us/extracting_refresh.htm](https://help.tableau.com/current/pro/desktop/en-us/extracting_refresh.htm)。
- en: 'As we discussed in the *Small extracts* section earlier, an extract is created
    via **Data** | **[Data Source]** | **Extract Data**. From the resulting dialog
    box, we can take the following actions:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在*小型提取*部分中讨论的那样，提取文件是通过**数据** | **[数据源]** | **提取数据**创建的。从结果对话框中，我们可以执行以下操作：
- en: '**Filter the extract as needed**: Sometimes, an extract that precisely reflects
    a data source is warranted, but often filtering various fields will still populate
    the extract with the required data while shrinking the size and improving performance.
    To add a filter, simply click **Add...** to access a dialog box identical to the
    **Filter** dialog box used within a worksheet.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**根据需要过滤提取文件**：有时，需要一个精确反映数据源的提取文件，但通常，过滤掉不同的字段仍然可以填充提取文件所需的数据，同时缩小大小并提高性能。要添加过滤器，只需点击**添加...**，即可访问与工作表中使用的**过滤器**对话框相同的对话框。'
- en: '**Aggregate to the level of granularity represented in the view**: Aggregation
    not only reduces the file size but can also be helpful from a security standpoint.
    Without aggregation, an extract is constructed using row-level data. Therefore,
    the Tableau author should note that if the extract is built without choosing to
    aggregate, any sensitive row-level data is accessible:'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚合到视图中表示的粒度级别**：聚合不仅减少文件大小，还可以从安全性角度提供帮助。如果没有聚合，提取文件将使用行级数据构建。因此，Tableau
    作者应注意，如果在构建提取时没有选择聚合，任何敏感的行级数据都可以被访问：'
- en: '![](img/B18435_13_09.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_09.png)'
- en: 'Figure 13.9: Aggregation'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.9：聚合
- en: '**Reduce the number of rows**: As shown in the *Small extracts* section, reducing
    the number of rows can allow the author to create a small, local extract for quick
    workbook building, after which the original data source can be accessed for complete
    analysis:'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少行数**：如在*小型提取*部分所示，减少行数可以让作者创建一个小的、本地的提取文件以便快速构建工作簿，然后可以访问原始数据源进行完整分析：'
- en: '![](img/B18435_13_10.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_10.png)'
- en: 'Figure 13.10: Reducing rows'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.10：减少行数
- en: '**Hide all unused fields**: This option excludes all columns that are not used
    in the workbook from the extract. This can significantly reduce the extract size
    and increase performance:'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隐藏所有未使用的字段**：此选项会排除工作簿中未使用的所有列。这样可以显著减少提取文件的大小并提高性能：'
- en: '![Graphical user interface, text, application, chat or text message'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![图形用户界面、文本、应用程序、聊天或文本消息'
- en: Description automatically generated](img/B18435_13_11.png)
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B18435_13_11.png)
- en: 'Figure 13.11: Hiding fields'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.11：隐藏字段
- en: By taking these four measures, your performance should improve immediately.
    Feel free to test it yourself by using the performance-recording tool and creating
    different extracts of the same data source. Using aggregation and performance-recording
    actions will be discussed next.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 通过采取这四个度量，您的性能应该会立即改善。欢迎使用性能记录工具亲自测试，并创建同一数据源的不同提取。接下来将讨论如何使用聚合和性能记录操作。
- en: Aggregation
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 聚合
- en: 'The following exercise will use two aggregates from a single data source, one
    at the **State** level and the other at the **City** level. These aggregated data
    sources will be used to create two worksheets. Each of these worksheets will be
    placed on a dashboard along with a third worksheet with row-level information.
    Finally, filter actions will be created to tie the three worksheets together.
    The purpose of the exercise is to demonstrate how small extracts might be used
    in conjunction with a larger dataset to create a more performant dashboard:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 以下练习将使用来自单一数据源的两个聚合数据，一个是**州**级别的，另一个是**城市**级别的。这些聚合数据源将用于创建两个工作表。这些工作表将与第三个包含行级信息的工作表一起放置到仪表板上。最后，将创建筛选器操作将这三个工作表联系起来。该练习的目的是演示如何将小规模的数据提取与更大的数据集结合使用，从而创建更高效的仪表板：
- en: Open the workbook associated with this chapter and navigate to the `State Agg`
    worksheet.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开与本章关联的工作簿并转到`State Agg`工作表。
- en: In the **Data** pane, select the `State Agg` data source.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**窗格中，选择`State Agg`数据源。
- en: Create a filled map using state by placing **State** on the **Detail** shelf
    and selecting **Filled Map** from the **Marks** card.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用州创建填充地图，将**州**放到**详细信息**架上，并从**标记**卡中选择**填充地图**。
- en: Right-click on the `State Agg` data source and select **Extract Data**.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`State Agg`数据源并选择**提取数据**。
- en: 'Note that Tableau displays an error stating that it cannot find the referenced
    file. You can either point to the instance of `Superstore` that ships with Tableau
    or you can use the instance provided via the GitHub link: [https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main](https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main).'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，Tableau 会显示一个错误，说明它无法找到引用的文件。您可以指向与 Tableau 一起提供的`Superstore`实例，或者使用通过 GitHub
    链接提供的实例：[https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main](https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main)。
- en: After connecting to the data source, Tableau will display the **Extract Data**
    dialog box. Within the dialog box, select **Aggregate data for visible** **dimensions**
    and **All rows**. Click the **Hide All Unused Fields** button and then click on
    **Extract**:![](img/B18435_13_12.png)
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到数据源后，Tableau会显示**提取数据**对话框。在对话框中，选择**聚合可见维度的数据**和**所有行**。点击**隐藏所有未使用字段**按钮，然后点击**提取**：![](img/B18435_13_12.png)
- en: 'Figure 13.12: Extracting data'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 13.12：提取数据
- en: Note that the resulting extract only contains **State**. Also note that the
    data has been aggregated so that no underlying data is available.
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，结果提取仅包含**州**。还要注意，数据已被聚合，因此没有底层数据可用。
- en: Navigate to the `City Agg` worksheet.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`City Agg`工作表。
- en: In the **Data** pane, select the `City Agg` data source. Note that this data
    source has already been extracted and so only contains **State**, **City**, and
    **Sales**. Also note that the data has been aggregated so that no underlying data
    is available.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**窗格中，选择`City Agg`数据源。请注意，这个数据源已经被提取，因此只包含**州**、**城市**和**销售**。还要注意，数据已经过聚合，因此没有底层数据可用。
- en: Place **City** on the **Rows** shelf, **Sales** on the **Text** shelf, and **State**
    on the **Detail** shelf. Don’t forget to include **State** even though it does
    not display on the view. It must be used so that the dashboard created at the
    end of the exercise works correctly.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**城市**放到**行**架上，**销售**放到**文本**架上，**州**放到**详细信息**架上。即使**州**在视图中没有显示，也不要忘记包括它。必须使用它，以便在练习结束时创建的仪表板能正确工作。
- en: Navigate to the `Row Detail` worksheet and select the `Superstore` dataset.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`Row Detail`工作表并选择`Superstore`数据集。
- en: Create a crosstab view that displays **Customer Name**, **Order ID**, **Row
    ID**, **Profit**, and **Sales**. One quick way to create this view is to double-click
    on each field.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个交叉表视图，显示**客户名称**、**订单 ID**、**行 ID**、**利润**和**销售**。创建这个视图的一种快速方法是双击每个字段。
- en: Navigate to the `Agg Dash` dashboard and place each of the three worksheets
    on the dashboard.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`Agg Dash`仪表板并将三个工作表中的每一个放到仪表板上。
- en: 'Create a blend relationship between **City** and **State** from the **Superstore**
    and **City Agg** data source:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Superstore**和**City Agg**数据源之间创建**City**和**State**的混合关系：
- en: '![](img/B18435_13_13.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_13.png)'
- en: 'Figure 13.13: Blend'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.13：混合
- en: 'Create the following action via **Dashboard** | **Actions** | **Add Action**
    | **Filter**:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过**仪表板** | **操作** | **添加操作** | **筛选**创建以下操作：
- en: '![](img/B18435_13_14.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_14.png)'
- en: 'Figure 13.14: Adding City to Detail action'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.14：添加城市到详细信息操作
- en: 'Create the following action via **Dashboard** | **Actions** | **Add Action**
    | **Filter**:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过**仪表板** | **操作** | **添加操作** | **筛选**创建以下操作：
- en: '![](img/B18435_13_15.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_15.png)'
- en: 'Figure 13.15: Adding State to City action'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.15：添加州到城市操作
- en: After creating these two actions, in the dashboard, click on the **State** field.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建这两个操作后，在仪表板中点击**State**字段。
- en: Then, click on the **City** field.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**City**字段。
- en: Click on a blank portion of the `City Agg` worksheet to exclude all values on
    **Row Detail**.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`City Agg`工作表的空白部分以排除**Row Detail**上的所有值。
- en: Click on a blank portion of the `State Agg` worksheet to exclude all values
    on **City Agg**.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`State Agg`工作表的空白部分以排除**City Agg**上的所有值。
- en: 'Format the dashboard as desired:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要格式化仪表板：
- en: '![](img/B18435_13_16.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_16.png)'
- en: 'Figure 13.16: Action on dashboard'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.16：仪表板上的操作
- en: 'Having completed this exercise, note that the resulting dashboard is performant
    for the following reasons:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本练习后，请注意，生成的仪表板在以下几个方面具有良好的性能：
- en: When the user first opens the dashboard, only **State Agg** displays. This is
    performant for two reasons. First, displaying a single worksheet as opposed to
    every worksheet when opening the dashboard causes fewer initial queries and less
    rendering. Second, accessing a small extract is quicker than accessing a larger
    data source.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户第一次打开仪表板时，只有**State Agg**显示。这有两个原因使得性能较好。首先，打开仪表板时只显示一个工作表，而不是所有工作表，可以减少初始查询次数并减少渲染。其次，访问小的提取数据比访问较大的数据源更快。
- en: Since the `City Agg` worksheet is also accessing a small extract, when the user
    clicks on a state, the **City Agg** worksheet will appear quickly.
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于`City Agg`工作表也在访问一个小的提取数据，当用户点击一个州时，**City Agg**工作表会迅速显示出来。
- en: When the user clicks on **City**, a call is made to the data source that only
    includes the information for that city. A relatively small amount of data is pulled,
    and performance should be good for even larger datasets.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户点击**City**时，会向数据源发送一个仅包含该城市信息的请求。拉取的数据量相对较小，因此即使是较大的数据集，性能也应该很好。
- en: Another aspect of good performance practice, apart from using aggregate extracts,
    should be considered for this exercise. The dashboard contains no quick filters.
    Often, using quick filters on a dashboard is unnecessary. If the worksheets on
    the dashboard can be used to filter, those worksheets can essentially do double
    duty. That is to say, worksheets can provide valuable analysis while simultaneously
    acting as filters for other worksheets on the dashboard. This represents a performance
    improvement over using quick filters since adding quick filters would cause additional
    queries to be sent to the underlying data source.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用汇总提取数据外，良好的性能实践还应该考虑到这一点。仪表板中没有快速筛选器。通常情况下，在仪表板上使用快速筛选器是没有必要的。如果仪表板上的工作表可以用于筛选，那么这些工作表实际上可以起到双重作用。也就是说，工作表不仅能提供有价值的分析，同时还能作为其他工作表的筛选器。这比使用快速筛选器有性能上的优势，因为添加快速筛选器会导致向底层数据源发送额外的查询。
- en: In the preceding dashboard, each worksheet references a different data source.
    Therefore, you may ask, how are the action filters able to function across the
    different data sources? The answer can be found in the filter action dialog box.
    As shown in *Figure 13.14* and *Figure 13.15*, **All** fields are considered **Target
    Filters**. Tableau simply matches any fields of the same name across each data
    source. Extracts can be optimized for even better performance results. We’ll cover
    this in the next section.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的仪表板中，每个工作表都引用了不同的数据源。因此，你可能会问，如何在不同的数据源之间让操作筛选器正常工作？答案可以在筛选操作对话框中找到。如*图
    13.14*和*图 13.15*所示，**所有**字段都被视为**目标筛选器**。Tableau会简单地匹配每个数据源中相同名称的字段。提取数据可以进一步优化，以获得更好的性能结果。我们将在下一节中详细介绍这一点。
- en: Optimizing extracts
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化提取数据
- en: Optimization accelerates performance by materializing calculated fields when
    possible. This means that Tableau generates values for calculated fields in the
    extract so that those values can be looked up instead of calculated. If you were
    to use table calculations, Tableau would have to calculate the values each time
    you change the view.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 优化通过在可能的情况下物化计算字段来加速性能。这意味着 Tableau 会为计算字段生成提取中的值，从而可以查找这些值，而不是每次都计算。如果你使用表计算，Tableau
    将必须每次都计算这些值，改变视图时也不例外。
- en: Note that not all calculated fields are materialized. Fields that are not materialized
    include table calculations, changeable or unstable functions, such as `NOW()`
    and `TODAY()`, and calculated fields using parameters.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，并非所有计算字段都被物化。未物化的字段包括表计算、可变或不稳定的函数，如 `NOW()` 和 `TODAY()`，以及使用参数的计算字段。
- en: 'When an extract is first created, it is automatically optimized. In other words,
    calculated fields are automatically materialized when possible. However, over
    the course of time, calculated fields may be altered that will cause the extract
    to drop materialized fields. At such times, open **Data** | **[Data Source]**
    | **Extract** and click on **Compute** **Calculations Now** in order to regenerate
    the materialized fields:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 当首次创建提取时，它会自动进行优化。换句话说，计算字段会在可能的情况下自动物化。然而，随着时间的推移，计算字段可能会被更改，导致提取丢失物化字段。此时，请打开
    **数据** | **[数据源]** | **提取**，并点击 **立即计算**，以重新生成物化字段：
- en: '![](img/B18435_13_17.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_17.png)'
- en: 'Figure 13.17: Computing calculations'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.17：计算计算
- en: If an extract is set to refresh on Tableau Server, the extract is automatically
    optimized for each refresh.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提取设置为在 Tableau Server 上刷新，则每次刷新时提取都会自动优化。
- en: Finally, if you make use of parameters in your dashboard, check whether you
    can eliminate those and use calculations instead to improve performance. Also,
    split calculations if they can’t be materialized as a whole. Put the part that
    can be materialized in one calculated field and the non-materialized part in another.
    If parts of the calculation can be calculated within the extract creation, you
    will gain performance.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你在仪表板中使用了参数，请检查是否能消除这些参数，并改用计算来提高性能。如果某些计算无法整体物化，请将可以物化的部分放入一个计算字段，将无法物化的部分放入另一个计算字段。如果某些计算可以在提取创建过程中计算出来，性能也会得到提升。
- en: The advantage of using extracts has now been discussed in great detail, so let’s
    move on and see how we can make the most out of filters.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 使用提取的优势已详细讨论过，现在让我们继续探讨如何最大限度地利用筛选器。
- en: Using filters wisely
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 明智地使用筛选器
- en: Filters generally improve performance in Tableau. For example, when using a
    dimension filter to view only the West region, a query is passed to the underlying
    data source, resulting in information being returned for just that region. By
    reducing the amount of data returned, performance improves. This is because less
    data means reduced network bandwidth load, reduced database processing requirements,
    and reduced processing requirements for the local computer.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 筛选器通常可以提高 Tableau 的性能。例如，当使用维度筛选器只查看西部地区时，会向底层数据源发送查询，只返回该地区的信息。通过减少返回的数据量，性能得到了提升。这是因为更少的数据意味着减少了网络带宽负载、减少了数据库处理需求以及减少了本地计算机的处理需求。
- en: Filters can also negatively impact Tableau’s performance. For example, using
    **only relevant values** causes additional queries to be sent to the underlying
    data source, thereby slowing down the response time. Also, creating quick filters
    from high-cardinality dimensions can impair performance.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 筛选器也可能对 Tableau 性能产生负面影响。例如，使用 **仅相关值** 会导致向底层数据源发送额外的查询，从而减慢响应时间。此外，从高基数维度创建快速筛选器也可能会损害性能。
- en: 'Tableau’s filters are executed in a specific order, so keep this in mind when
    using them. The following flowchart, along with a link to an hour-long presentation,
    may help you grasp the concept fully: [https://help.tableau.com/current/pro/desktop/en-us/order_of_operations.htm](https://help.tableau.com/current/pro/desktop/en-us/order_of_operations.htm):'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 的筛选器按照特定顺序执行，因此在使用时需要记住这一点。下面的流程图，以及一个链接到一个小时的演示，可能会帮助你更全面地理解这一概念：[https://help.tableau.com/current/pro/desktop/en-us/order_of_operations.htm](https://help.tableau.com/current/pro/desktop/en-us/order_of_operations.htm)：
- en: '![](img/B18435_13_18.png)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_18.png)'
- en: 'Figure 13.18: Filtering the order of operations'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.18：筛选操作顺序
- en: The rest of this section follows, step by step, the order of operations. By
    the end of it, you will know which filters to use in which situation so as to
    achieve the best performance for your dashboards.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 本节其余部分按照操作顺序逐步介绍。到最后，你将了解在不同情况下应该使用哪些过滤器，从而为你的仪表板实现最佳性能。
- en: Extract filters
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提取过滤器
- en: Extract filters remove data from the extracted data source. Simply put, the
    data isn’t there. Thus, performance is enhanced by reducing the overall amount
    of data. Performance may also be improved since extracted data uses Tableau’s
    proprietary columnar dataset.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 提取过滤器从提取的数据源中删除数据。简单来说，就是数据不存在。因此，通过减少数据的总体量，性能得到了提升。由于提取的数据使用了 Tableau 的专有列式数据集，性能也可能得到进一步提升。
- en: Furthermore, extracts are always flattened, which will have performance advantages
    over connecting to datasets using joins. To create an extract filter, begin by
    selecting **Data** | **[Data Source]** | **Extract Data**. In the resulting dialog
    box, choose to add a filter.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，提取数据源总是被扁平化，这相比于通过连接数据集使用连接操作的方式，在性能上具有优势。要创建提取过滤器，首先选择**数据** | **[数据源]**
    | **提取数据**。在弹出的对话框中，选择添加过滤器。
- en: Data source filters
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据源过滤器
- en: Data source filters are applied throughout the workbook. For example, if you
    create a data source filter that removes all members of the **Country** dimension
    except the USA, the **Country** dimension will only include the USA for all worksheets
    in the workbook.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 数据源过滤器在整个工作簿中应用。例如，如果你创建一个数据源过滤器，移除**国家**维度中所有成员，除了美国，那么在工作簿中的所有工作表中，**国家**维度将仅包含美国。
- en: Data source filters improve performance in the same way as dimension and measure
    filters; that is, data source filters cause Tableau to generate a query to the
    underlying data source, which will limit the data that is returned. Less returned
    data generally results in quicker processing and rendering. A further advantage
    that data source filters offer is ease of authoring. For example, if the Tableau
    author knows in advance that an entire workbook is going to be USA-centric, creating
    a data source filter saves you the trouble of applying a dimension filter to every
    worksheet in the workbook using that data source.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 数据源过滤器以与维度和度量过滤器相同的方式提高性能；即数据源过滤器使 Tableau 向底层数据源生成查询，从而限制返回的数据量。返回的数据越少，通常处理和渲染速度越快。数据源过滤器的另一个优点是易于创建。例如，如果
    Tableau 的作者事先知道整个工作簿将以美国为中心，创建数据源过滤器就能避免在工作簿中使用该数据源的每个工作表上都应用维度过滤器。
- en: Also note that data source filters occur quite early in the process flow. All
    calculations (including calculations using fixed LOD expressions that are rendered
    before dimension and measure filters are triggered) respect data source filters.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要注意的是，数据源过滤器在处理流程中发生得相当早。所有计算（包括使用固定 LOD 表达式的计算，在触发维度和度量过滤器之前进行渲染）都遵守数据源过滤器的规则。
- en: 'To create a data source filter, click the **Data Source** tab located in the
    bottom-left corner of **Tableau Desktop**. Then, click on the **Add** link located
    in the top-right corner of the page:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建数据源过滤器，请点击位于**Tableau Desktop**左下角的**数据源**标签。然后，点击页面右上角的**添加**链接：
- en: '![](img/B18435_13_19.png)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_19.png)'
- en: 'Figure 13.19: Adding filters'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.19：添加过滤器
- en: Context filters
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上下文过滤器
- en: 'A context filter is created simply by right-clicking on a field in the **Filter**
    shelf and selecting **Add to Context**:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 创建上下文过滤器的方法很简单，只需右键点击**过滤器**架上的一个字段，然后选择**添加到上下文**：
- en: '![](img/B18435_13_20.png)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_20.png)'
- en: 'Figure 13.20: Context filters'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.20：上下文过滤器
- en: Dimension and measure filters are independent. Each filter queries the data
    source independently and returns results. A context filter, on the other hand,
    will force dimension and measure filters to depend on it. This behavior can be
    helpful (and necessary) for getting the right answer in some circumstances. For
    instance, if a Tableau author accesses the **Superstore** dataset and uses a filter
    on **Product Names** to return the top-10 selling product names in a single category,
    it will be necessary for **Category** to be defined as a context filter. Otherwise,
    the **Product Names** filter will return the top 10 overall. Because of this,
    context filters improve performance.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 维度和度量过滤器是独立的。每个过滤器独立地查询数据源并返回结果。而上下文过滤器则会迫使维度和度量过滤器依赖于它。在某些情况下，这种行为是有帮助的（甚至是必要的），以获得正确的答案。例如，如果
    Tableau 作者访问**Superstore** 数据集并使用一个关于**产品名称**的过滤器来返回某一类别中的前10大畅销产品名称，那么必须将**类别**定义为上下文过滤器。否则，**产品名称**过滤器将返回总前10名。因此，上下文过滤器能提高性能。
- en: Dimension and measure filters
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维度和度量过滤器
- en: Dimension and measure filters can improve performance. Since either a dimension
    filter or a measure filter will cause Tableau to generate a query to the underlying
    data source, which will limit the data that is returned, performance is improved.
    Simply put, the smaller the returned dataset, the better the performance.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 维度和度量过滤器可以提高性能。由于维度过滤器或度量过滤器都会导致 Tableau 向底层数据源生成查询，从而限制返回的数据，因此性能得以提升。简单来说，返回的数据集越小，性能越好。
- en: However, dimension and measure filters can degrade performance. Since Tableau
    not only generates queries to the underlying data source in order to display visualizations
    but also generates queries to display filters, more displayed filters will slow
    performance. Furthermore, displayed filters on high-cardinality dimensions can
    inhibit performance. (A dimension with many members is referred to as having high
    cardinality.) Consider the example of a filter that displays every customer in
    a dataset. Performance for such a filter might be slow because every customer
    in the underlying dataset must be located and returned, and then Tableau has to
    render and display each of these customers in the filter.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，维度和度量过滤器也可能会降低性能。由于 Tableau 不仅需要生成查询来显示可视化图表，还需要生成查询来显示过滤器，因此显示的过滤器越多，性能越慢。此外，显示在高基数维度上的过滤器会抑制性能。（拥有许多成员的维度被称为高基数维度。）考虑一个示例，假设有一个过滤器显示数据集中的每个客户。由于必须查找并返回底层数据集中的每个客户，之后
    Tableau 还需要渲染并显示这些客户在过滤器中，性能可能会较慢。
- en: 'When using two or more dimension or measure filters on a view, a relevant filter
    may be used to limit the choices that display. For example, if a view includes
    a filter for city and postal code, the latter might be set to show **Only Relevant
    Values**:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 当在视图中使用两个或更多维度或度量过滤器时，可以使用相关过滤器来限制显示的选择。例如，如果视图包含城市和邮政编码过滤器，后者可能设置为仅显示**相关值**：
- en: '![](img/B18435_13_21.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_21.png)'
- en: 'Figure 13.21: Only Relevant Values'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.21：仅显示相关值
- en: This is advantageous to the end user in that it adjusts the number of postal
    codes that display to reflect only those pertinent to the cities selected in the
    first filter. However, using relative filters will cause additional queries to
    be sent to the data source and thus may degrade performance.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 这对最终用户有利，因为它调整显示的邮政编码数量，仅反映与第一个过滤器中选择的城市相关的邮政编码。然而，使用相对过滤器会导致向数据源发送额外的查询，从而可能会降低性能。
- en: Table calculation filters
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表格计算过滤器
- en: Using table calculations as filters does not have the same corresponding performance
    enhancements as dimension or measure filters. As discussed above, dimension and
    measure filters reduce the returned dataset, while table calculation filters do
    not. In the Tableau process flow, table calculations are not rendered until after
    the data is returned from the data source. This means that table calculations
    cannot be used to generate queries to limit returned data. Or, to put it another
    way, table calculation filters cause all data related to a given dimension or
    measure to be returned, after which Tableau executes the filter on the returned
    dataset.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 使用表计算作为过滤器并没有与维度或度量过滤器相同的性能增强。如上所述，维度和度量过滤器减少了返回的数据集，而表计算过滤器则不会。在Tableau的处理流程中，表计算在从数据源返回数据之后才会渲染。这意味着表计算无法用于生成限制返回数据的查询。换句话说，表计算过滤器导致所有与给定维度或度量相关的数据都会返回，之后Tableau在返回的数据集上执行过滤器。
- en: 'To demonstrate this, perform the following steps:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 要演示这一点，请执行以下步骤：
- en: Open the workbook associated with this chapter and navigate to the `Late Filter`
    worksheet.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开与本章关联的工作簿，并导航到`Late Filter`工作表。
- en: In the **Data** pane, select the `Superstore` data source.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Data**窗格中，选择`Superstore`数据源。
- en: 'Create a calculated field named `Cust Name Tbl Calc` with the following code:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Cust Name Tbl Calc`的计算字段，并使用以下代码：
- en: '[PRE0]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Place **Customer Name** on the **Rows** shelf.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Customer Name**放置在**Rows**架上。
- en: Place **Cust Name Tbl Calc** on the **Filters** shelf and constrain to show
    only **Aaron Bergman**.
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Cust Name Tbl Calc**放置在**Filters**架上，并限制仅显示**Aaron Bergman**。
- en: Place **Sales** on the **Text** shelf.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Sales**放置在**Text**架上。
- en: Right-click on **Sales** and select **Quick Table Calculation** | **Rank**.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**Sales**，然后选择**Quick Table Calculation** | **Rank**。
- en: In this exercise, the entire list of customers is returned to Tableau, after
    which Tableau deploys the filter. Essentially, using **Cust Name Tbl Calc** as
    a filter merely hides the underlying data. This is useful because the rank returned
    for **Aaron Bergman** is correct. Merely filtering on **Customer Name** would
    return a rank of **1** for **Aaron Bergman**. Unfortunately, the correct results
    come with a performance hit. Running the performance recorder on this exercise
    will show that the table calculation negatively impacts performance.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，客户列表整体返回到Tableau，之后Tableau部署过滤器。基本上，仅使用**Cust Name Tbl Calc**作为过滤器仅隐藏底层数据。这很有用，因为**Aaron
    Bergman**返回的排名是正确的。仅对**Customer Name**进行过滤将返回**Aaron Bergman**的排名为**1**。不幸的是，正确的结果会带来性能损失。运行此练习的性能记录器将显示，表计算对性能产生了负面影响。
- en: Fortunately, with the advent of LOD calculations, using table calculations as
    filters is often not necessary. LODs are calculated fields that include or exclude
    data independent of the current view. For more information, please refer to *Chapter
    5*, *Introducing Table Calculations*.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，随着LOD计算的出现，通常不需要将表计算作为过滤器使用。LOD是独立于当前视图包含或排除数据的计算字段。有关更多信息，请参阅*第5章*，*介绍表计算*。
- en: Using actions instead of filters
  id: totrans-293
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用动作而不是过滤器
- en: Another way to improve performance might be to use actions instead of filters.
    You can develop a dashboard that shows a high-level overview first and goes into
    detail only once the user selects something. The mechanics are similar to the
    ones we showed in the *Aggregation* section; however, aggregation happens per
    worksheet and not on the data source itself. By selecting a mark in the high-level
    overview, an action will be triggered. The user can dive deeper into details,
    but the level of detail will only be increased step by step. Hence, less data
    has to be loaded at once.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种提高性能的方法可能是使用动作而不是过滤器。您可以开发一个仪表板，首先显示高级概述，仅在用户选择后才进入详细信息。其机制与我们在*聚合*部分展示的机制类似；但是，聚合是在每个工作表而不是数据源本身上进行的。通过在高级概述中选择一个标记，将触发一个动作。用户可以深入了解详情，但详细级别只会逐步增加。因此，一次加载的数据量较少。
- en: 'A very nice presentation regarding this topic can be found at [https://youtu.be/veLlZ1btoms](https://youtu.be/veLlZ1btoms).
    Or if you are interested in learning more about the Hot-Warm-Cold method, feel
    free to read this article: [https://gemshare.org/2019/08/16/hot-warm-cold-data-architecture-best-practices/](https://gemshare.org/2019/08/16/hot-warm-cold-data-architecture-best-practices/).'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此主题的非常精彩的演示可以在[https://youtu.be/veLlZ1btoms](https://youtu.be/veLlZ1btoms)找到。如果你对了解更多关于热-温-冷方法感兴趣，可以阅读这篇文章：[https://gemshare.org/2019/08/16/hot-warm-cold-data-architecture-best-practices/](https://gemshare.org/2019/08/16/hot-warm-cold-data-architecture-best-practices/)。
- en: The next topic we will be discussing involves calculations. How can we write
    a calculation in the most efficient and performant way?
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的主题我们将讨论计算。我们如何以最有效且高性能的方式编写计算？
- en: Efficient calculations
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高效的计算
- en: 'Calculations may be constructed differently and yet accomplish the same thing.
    Look, for instance, at the following example, which shows that an `IF` statement
    can be replaced by simpler code:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 计算的构建方式可能不同，但却能实现相同的结果。例如，看看以下示例，它展示了如何用更简单的代码替代`IF`语句：
- en: '| **Scenario I** | **Scenario II** |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| **情景 I** | **情景 II** |'
- en: '| Create a calculated ﬁeld with the following code:`IF SUM (Profit) > 0 THEN
    ''Profitable'' ELSE ''Unprofitable'' END`Place the calculated ﬁeld on the **Color**
    shelf. | Create a calculated ﬁeld with the following code:`SUM (Profit) > 0`Place
    the calculated ﬁeld on the **Color** shelf.Right-click on **True** and **False**
    in the resulting legend and rename **Proﬁtable** and **Unproﬁtable**. |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| 创建一个计算字段，使用以下代码：`IF SUM(Profit) > 0 THEN ''Profitable'' ELSE ''Unprofitable''
    END` 将计算字段放置到**颜色**架上。 | 创建一个计算字段，使用以下代码：`SUM(Profit) > 0` 将计算字段放置到**颜色**架上。右键点击结果图例中的**True**和**False**，并将它们重命名为**Profitable**和**Unprofitable**。
    |'
- en: Since either of these scenarios will return the desired results, which should
    be used? The deciding factor is performance. This section will explore what to
    do and what to avoid when creating calculated fields in order to maximize performance.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 既然这两种情景都会返回所需结果，那么应该使用哪一个呢？决定因素是性能。本节将探讨在创建计算字段时如何最大化性能，应该做什么以及避免做什么。
- en: Prioritizing code values
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优先考虑代码值
- en: Calculations that use Boolean values or numbers are more performant than those
    that use dates. Calculations that use dates, in turn, are more performant than
    those using strings. This is not only true of Tableau, but also in computer science
    as a whole.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 使用布尔值或数字的计算比使用日期的计算性能更好。使用日期的计算又比使用字符串的计算性能更好。这不仅仅适用于 Tableau，在计算机科学中也是如此。
- en: Based on this information, **Scenario II** listed in the preceding table is
    more performant than **Scenario I**. **Scenario I** causes Tableau to create a
    query that requires the data source engine to handle strings for reporting profitability,
    whereas **Scenario II** sends only 1s and 0s to determine profitability. The third
    step for **Scenario II** (that is, aliasing **True** and **False** to **Profitable**
    and **Unprofitable**) is merely a labeling change that happens after the aggregate
    dataset is returned from the data source, which is quick and easy for Tableau.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这些信息，前表中列出的**情景 II**比**情景 I**性能更好。**情景 I**会导致 Tableau 创建一个查询，要求数据源引擎处理报告盈利能力的字符串，而**情景
    II**则仅发送 1 和 0 来确定盈利能力。**情景 II**的第三步（即将**True**和**False**别名为**Profitable**和**Unprofitable**）只是一个标签更改，发生在从数据源返回汇总数据集之后，这对
    Tableau 来说既快速又简单。
- en: Level-of-detail calculations or table calculations
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 细节级别计算或表计算
- en: 'In some instances, a **level-of-detail** (**LOD**) calculation might be faster
    than a table calculation and vice versa. If you are not sure, try both to see
    which one performs better. You can, of course, run a performance recording too.
    Also, if they’re not really needed, use neither. Refer to the following diagram,
    which explains when to choose which:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，**细节级别**（**LOD**）计算可能比表计算更快，反之亦然。如果不确定，可以尝试两者，看看哪种性能更好。当然，你也可以运行性能记录。如果它们不是真正需要的，那就都不要使用。请参阅下图，了解何时选择哪种计算类型：
- en: '![](img/B18435_13_22.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_22.png)'
- en: 'Figure 13.22: Choosing a calculation type'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.22：选择计算类型
- en: This diagram, along with more advice about selecting a calculation type, can
    be accessed at [https://www.tableau.com/about/blog/2016/4/guide-choosing-right-calculation-your-question-53667](https://www.tableau.com/about/blog/2016/4/guide-choosing-right-calculation-your-question-53667).
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图以及关于选择计算类型的更多建议，可以通过以下链接访问：[https://www.tableau.com/about/blog/2016/4/guide-choosing-right-calculation-your-question-53667](https://www.tableau.com/about/blog/2016/4/guide-choosing-right-calculation-your-question-53667)。
- en: Other ways to improve performance
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高性能的其他方法
- en: To conclude this chapter, let’s consider a few other possibilities for improving
    performance.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 总结本章内容，让我们考虑一些提高性能的其他可能性。
- en: Avoid overcrowding a dashboard
  id: totrans-312
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免让仪表盘过于拥挤
- en: Often, end users want to see everything at once on a dashboard. Although this
    may be perceived as beneficial, it often is not. Consider the inclusion of a large
    crosstab on a dashboard. Does scrolling through pages of details add to the analytical
    value of the dashboard? Perhaps the answer is “no.” Furthermore, an excess of
    information on a dashboard may obscure important insights. Diplomatically arguing
    for leaner dashboards may lead to better decision making as well as better performance.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，最终用户希望在仪表盘上一次性看到所有信息。虽然这可能被认为是有益的，但往往并非如此。考虑在仪表盘上加入一个大型交叉表。浏览大量详细信息是否会增加仪表盘的分析价值？也许答案是“否”。此外，仪表盘上的信息过多可能会掩盖重要的洞察力。委婉地主张简洁的仪表盘可能会带来更好的决策和更佳的性能。
- en: Fixing dashboard sizing
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复仪表盘大小
- en: Dashboards can be set to an exact size or to **Range** or **Automatic**. Exact
    size results in quicker performance because once Tableau Server has rendered a
    view for one end user, that render stays in the cache and can be reused for the
    next end user that accesses that dashboard. **Automatic** and **Range**, on the
    other hand, cause Tableau Server to attempt to determine the resolution size used
    by each end user and render the dashboard accordingly. This means that Tableau
    Server does not use the instance of the dashboard stored in the cache for the
    next end user. This, in turn, impacts performance.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表盘可以设置为精确大小或**范围**或**自动**。精确大小会带来更快的性能，因为一旦 Tableau 服务器为某个最终用户渲染了一个视图，该渲染会保存在缓存中，并可以被下一个访问该仪表盘的用户复用。而**自动**和**范围**则会导致
    Tableau 服务器尝试确定每个最终用户使用的分辨率大小，并相应地渲染仪表盘。这意味着 Tableau 服务器不会使用缓存中存储的仪表盘实例来为下一个最终用户提供服务，这反过来会影响性能。
- en: Use Tableau Prep Builder
  id: totrans-316
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Tableau Prep Builder
- en: 'This has been mentioned before but is very relevant, therefore I will repeat:
    **If complex joins and complex data blending are required to generate useful results,
    it may be advisable to perform ETL work outside of Tableau**, for example, in
    Tableau Prep Builder (see *Chapter 3*, *Using Tableau Prep Builder*, for more
    information on this service). ETL work will ideally lead to better data modeling,
    aggregated data, or data that contains additional columns already that you would
    otherwise have to create in Tableau Desktop, and thus using Prep Builder leads
    to easier authoring and quicker performance in Tableau.'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 之前已经提到过，但仍然非常相关，因此我会重复一遍：**如果需要复杂的连接和复杂的数据混合才能生成有用的结果，那么建议在 Tableau 之外执行 ETL
    工作**，例如，在 Tableau Prep Builder 中（有关此服务的更多信息，请参见*第3章*，*使用 Tableau Prep Builder*）。ETL
    工作理想情况下会导致更好的数据建模、汇总数据，或者包含额外列的数据，这些列本来需要在 Tableau Desktop 中创建，因此使用 Prep Builder
    会使得 Tableau 的创作更简单，性能更快。
- en: Setting expectations
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置期望值
- en: If an end user is expecting near-instantaneous performance, then, of course,
    anything less is disappointing. Explaining in advance that a complicated, detail-oriented
    dashboard may not be performant can help in at least two ways. First, upon explaining
    the likely performance problems, a compromise may be reached that results in the
    creation of a less complicated dashboard that still delivers valuable information.
    Second, if it is absolutely necessary for the dashboard to be complicated and
    detail-oriented, at least the end user has been warned that patience may be needed
    when interfacing it.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 如果最终用户期望接近即时的性能，那么，当然，任何低于此期望的表现都会令人失望。提前解释复杂、注重细节的仪表盘可能无法达到高性能，至少可以从两方面有所帮助。首先，解释可能存在的性能问题后，可能达成妥协，创建一个不那么复杂但仍能传递有价值信息的仪表盘。其次，如果仪表盘的复杂性和注重细节是绝对必要的，至少已经提醒了最终用户，在使用时可能需要耐心等待。
- en: Workbook Optimizer
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作簿优化器
- en: 'Finally, for the lazy ones among us – or one might say – efficient ones, Tableau
    released a fantastic feature not that long ago: the Workbook Optimizer. It checks
    your workbook based on a set of rules and will respond with three types of categories:
    take action, needs review, and passed. Thus, it completes performance checks using
    the well-known RAG (red-amber-green) or traffic light system for you.'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于那些懒人——或者可以说是“高效”的人，Tableau不久前发布了一个非常棒的功能：工作簿优化器。它根据一套规则检查你的工作簿，并会返回三种类型的类别：需要采取行动、需要审核和已通过。因此，它使用广为人知的RAG（红-黄-绿）或交通灯系统为你完成性能检查。
- en: 'At the time of writing, rules include: calculation length, calculation using
    multiple data sources, dashboard size not fixed, filter uses conditional logic,
    filter uses “only relevant values,” live data connections, multiple connections
    in a data source, nested calculations, non-materialized calculations, number of
    data sources, number of filters, number of layout containers, number of LOD calculations,
    number of views in a dashboard, number of workbook sheets, unused data sources,
    unused fields, uses data blending, uses date calculations, and uses grouping.
    I am sure, however, there are more rules to come and it will become increasingly
    easy to have a high-performing dashboard. You can access the Workbook Optimizer
    feature by selecting **Server** | **Run Optimizer**:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，规则包括：计算长度、使用多个数据源进行计算、仪表板大小不固定、筛选器使用条件逻辑、筛选器使用“仅相关值”、实时数据连接、数据源中的多个连接、嵌套计算、非物化计算、数据源数量、筛选器数量、布局容器数量、LOD计算数量、仪表板中的视图数量、工作簿工作表数量、未使用的数据源、未使用的字段、数据混合、日期计算和分组。我相信，未来会有更多的规则出现，且创建高性能仪表板将变得越来越容易。你可以通过选择**服务器**
    | **运行优化器**来访问工作簿优化器功能：
- en: '![](img/B18435_13_23.png)'
  id: totrans-323
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_23.png)'
- en: 'Figure 13.23: Run Optimizer'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.23：运行优化器
- en: You will then be able to drill down per category and see where your dashboard
    needs improvement. For most of the rules, some human intervention is required
    but for some, a click of a button is sufficient, like in *Figure 13.24*. Observe
    the icons below the rule – the wrench indicates that Tableau can fix this for
    you.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 你将能够按类别深入分析，查看哪些地方需要改进。对于大多数规则，仍然需要一些人工干预，但对于某些规则，只需点击一个按钮即可解决，就像在*图13.24*中所示。请注意规则下方的图标——扳手图标表示Tableau可以为你自动修复。
- en: '![](img/B18435_13_24.png)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_24.png)'
- en: 'Figure 13.24: Unused fields'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.24：未使用的字段
- en: For each rule, Tableau also provides a **Learn More** hyperlink that will redirect
    you to one of the Tableau help pages with further explanation.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每条规则，Tableau还提供了一个**了解更多**的超链接，点击后将跳转到Tableau帮助页面，提供进一步的解释。
- en: '![](img/B18435_13_25.png)'
  id: totrans-329
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_13_25.png)'
- en: 'Figure 13.25: Number of data sources'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.25：数据源数量
- en: Isn’t this feature amazing?! From now on, always make sure to use the **Run
    Optimizer** button!
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能是不是很棒？！从现在开始，务必记得使用**运行优化器**按钮！
- en: Summary
  id: totrans-332
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We began this chapter with a discussion of the performance-recording dashboard.
    This was important because many of the subsequent exercises utilized the performance-recording
    dashboard to examine underlying queries. Next, we discussed hardware and on-the-fly
    techniques, where the intent was to communicate hardware considerations for good
    Tableau performance and, in the absence of optimal hardware, techniques for squeezing
    the best possible performance out of any computer.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从本章的性能记录仪表板讨论开始。这一点非常重要，因为许多后续的练习都利用性能记录仪表板来检查底层查询。接下来，我们讨论了硬件和实时技术，目的是传达良好的Tableau性能所需的硬件考虑因素，并在缺乏理想硬件的情况下，使用技术手段从任何计算机中榨取出最佳性能。
- en: Then we covered working with data sources, including joining, blending, and
    efficiently working with data sources. This was followed by a discussion on generating
    and using extracts as efficiently as possible. By focusing on data sources for
    these three sections, we learned best practices and what to avoid when working
    with either remote datasets or extracts. The next sections explored performance
    implications for various types of filters and calculations. Lastly, we looked
    at additional performance considerations, where we explored a few more thoughts
    regarding dashboard performance as well as setting expectations.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们讨论了如何与数据源一起工作，包括连接、融合和高效操作数据源。随后，我们讨论了如何尽可能高效地生成和使用提取文件。通过这三部分内容，我们聚焦于数据源，学习了最佳实践以及在处理远程数据集或提取文件时应避免的错误。接下来的部分则探讨了不同类型的过滤器和计算对性能的影响。最后，我们探讨了其他性能因素，进一步讨论了仪表盘性能以及如何设定期望。
- en: In the next chapter, we will turn our attention to Tableau Server. Tableau Server
    is a dense topic worthy of its own book; therefore, our exploration will be truncated
    to only focus on Tableau Server from the Tableau Desktop author’s perspective.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将关注 Tableau Server。Tableau Server 是一个内容丰富的话题，值得单独成书，因此我们将只从 Tableau
    Desktop 作者的角度来简要探讨 Tableau Server。
- en: Learn more on Discord
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Discord 上了解更多信息
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的 Discord 社区——你可以在这里分享反馈、向作者提问并了解新版本——请扫描下面的二维码：
- en: '[https://packt.link/tableau](https://packt.link/tableau)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/tableau](https://packt.link/tableau)'
- en: '![](img/QR_Code2044012316175764640.png)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code2044012316175764640.png)'
