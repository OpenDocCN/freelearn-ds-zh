- en: Introducing Table Calculations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍表计算
- en: The topic of table calculations in Tableau is so rich and deep that it alone
    could legitimately be the subject of an entire book. Exploring the various options
    that are available for each table calculation function and the various ways that
    table calculations can be applied is an interesting and rewarding endeavor. As
    you review the examples in this chapter, you will undoubtedly encounter techniques
    that you can apply in your day-to-day work; however, you may struggle to understand
    why some of these techniques work. This chapter was written to provide ways of
    thinking about table calculations that will prove useful in your journey toward
    mastering this fascinating topic. Along the way, some practical examples will
    be considered as well.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 中的表计算主题内容丰富而深刻，单独作为一本书的主题也是完全有道理的。探索每个表计算函数可用的不同选项，以及表计算的各种应用方式，既有趣又值得尝试。在你回顾本章中的示例时，毫无疑问，你会遇到一些可以在日常工作中应用的技巧；然而，你可能会困惑为什么有些技巧有效。本章旨在提供一些思考表计算的方法，这些方法将在你掌握这个迷人主题的过程中发挥作用。在此过程中，我们也会考虑一些实际的例子。
- en: 'Of the dozens of blogs, forum posts, conference sessions, articles, and white
    papers reviewed for this chapter, Jonathan Drummy’s blog post ([http://drawingwithnumbers.artisart.org/at-the-level-unlocking-the-mystery-part-1-ordinal-calcs/](http://drawingwithnumbers.artisart.org/at-the-level-unlocking-the-mystery-part-1-ordinal-calcs/)),
    *At the Level – Unlocking the Mystery Part 1: Ordinal Calcs*, was the clearest
    and most insightful for understanding the various nuances of partitioning and
    addressing – the DNA of table calculations. In this chapter, we will discuss the
    following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '在为本章审核的数十篇博客、论坛帖子、会议讲座、文章和白皮书中，Jonathan Drummy 的博客文章（[http://drawingwithnumbers.artisart.org/at-the-level-unlocking-the-mystery-part-1-ordinal-calcs/](http://drawingwithnumbers.artisart.org/at-the-level-unlocking-the-mystery-part-1-ordinal-calcs/)），*At
    the Level – Unlocking the Mystery Part 1: Ordinal Calcs*，是最清晰且最具洞察力的，帮助我们理解分区和寻址的各种细微差别——表计算的DNA。在本章中，我们将讨论以下主题：'
- en: Partition and direction of addressing
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分区和寻址方向
- en: Directional and non-directional addressing
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有方向和无方向的寻址
- en: Exploring each unique table calculation function
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索每个独特的表计算函数
- en: Application of functions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数的应用
- en: Let’s go into more detail and start this chapter off with a general definition
    of table calculations and two resulting questions, which we will answer by the
    end of this chapter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细探讨一下这个章节，并从表计算的一般定义开始，并提出两个相关的问题，我们将在本章结束时解答这两个问题。
- en: Partition and direction of addressing
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分区和寻址方向
- en: As discussed in *Chapter 1*, *Reviewing the Basics*, calculated fields can be
    categorized as either row-level, aggregate-level, or table-level. For row- and
    aggregate-level calculations, the underlying data source engine does most (if
    not all) of the computational work and Tableau merely visualizes the results.
    For table calculations, Tableau also relies on the underlying data source engine
    and the available RAM on your machine to execute computational tasks; however,
    after that work is completed and a dataset is returned, Tableau performs additional
    processing before rendering the results.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如*第一章*《基础回顾》中所讨论的，计算字段可以分为行级、汇总级或表级计算。对于行级和汇总级计算，底层数据源引擎完成大部分（如果不是全部）计算工作，而
    Tableau 仅仅负责可视化结果。对于表计算，Tableau 也依赖底层数据源引擎和你机器上可用的内存来执行计算任务；但是，在这些工作完成并返回数据集之后，Tableau
    还会进行额外的处理，然后再呈现结果。
- en: 'Let us look at the definition of table calculations, as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下表计算的定义，如下所示：
- en: A table calculation is a function performed on a cached dataset that has been
    generated as a result of a query from Tableau to the data source.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 表计算是对缓存数据集执行的一个函数，该数据集是 Tableau 向数据源查询后生成的结果。
- en: Let us consider a couple of points regarding the dataset in the cache mentioned
    in the preceding definition.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下前面定义中提到的缓存数据集的几个要点。
- en: This cache is not simply the returned results of a query. Tableau may adjust
    the returned results. We will consider this in *Chapter 6*, *Utilizing OData,
    Data Densification, Big Data, and Google BigQuery*; Tableau may expand the cache
    through data densification but usually, it is user-driven. In table calculation
    terms, the cache is called a **partition**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这个缓存不仅仅是查询返回的结果。Tableau可能会调整返回的结果。我们将在*第六章*《利用OData、数据密集化、大数据和Google BigQuery》中考虑这个问题；Tableau可能会通过数据密集化扩展缓存，但通常是由用户驱动的。从表计算的角度来看，缓存被称为**分区**。
- en: It is important to consider how the cache is structured. The dataset in the
    cache is the table used in your worksheet and, like all tables, is made up of
    rows and columns. This is particularly important for table calculations since
    a table calculation may be computed as it moves along the cache. The `previous_value()`
    table calculation will change whenever the cache structure changes because it
    will retrieve the value prior to the current one and this is very subjective.
    Is it prior in terms of date, value, or alphabetical order? It is up to you to
    tell Tableau how to structure the cache by using addressing and partitioning.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要考虑缓存的结构。缓存中的数据集是工作表中使用的表，就像所有表一样，它由行和列组成。这对于表计算尤为重要，因为表计算可能会随着缓存的移动而计算。`previous_value()`表计算会在缓存结构发生变化时发生变化，因为它会检索当前值之前的值，而这具有很大的主观性。它是基于日期、值还是字母顺序来确定“先前”的？你需要通过使用地址划分和分区告诉Tableau如何构建缓存。
- en: Most table calculations need to consider the cache structure. Such a table calculation
    is called **directional**. Alternatively, a table calculation may be computed
    based on the entire cache with no consideration for addressing and partitioning.
    The table calculation `total()`,for example, will calculate the total value, which
    does not change when the cache order changes. Another one is `size()`, the `script_`
    and `model` functions. This type of table calculation is called **non-directional**.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数表计算需要考虑缓存结构。这类表计算称为**有方向**。另外，表计算也可以基于整个缓存进行计算，而不考虑地址划分和分区。例如，表计算`total()`会计算总值，而该总值在缓存顺序变化时不会发生变化。另一个例子是`size()`、`script_`和`model`函数。这种类型的表计算被称为**无方向**。
- en: Note that in the Tableau documentation, the dataset in the cache is typically
    referred to as a partition. The structure of this chapter was designed with the
    intent of providing a simple schema for understanding table calculations.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在Tableau文档中，缓存中的数据集通常被称为分区。本章的结构旨在提供一个简单的框架，以帮助理解表计算。
- en: The *Introducing functions* section explores each unique table calculation function.
    The *Application of functions* section explores how table calculations are applied
    to the view via partitioning and addressing dimensions.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*引入函数*部分探讨了每个独特的表计算函数。*函数应用*部分探讨了表计算如何通过分区和地址划分维度应用到视图中。'
- en: Directional and non-directional addressing
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有方向和无方向的地址划分
- en: We will begin this section by listing the different table calculation functions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过列出不同的表计算函数来开始这一部分内容。
- en: 'Tableau offers a wide range of table calculations, but if we narrow our consideration
    to unique groups of table calculation functions, we will discover that there are
    only 11:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau提供了广泛的表计算函数，但如果我们将考虑范围缩小到表计算函数的唯一组，我们将发现只有11个：
- en: '| **Table Calculations** |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **表计算** |'
- en: '| `LOOKUP` |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `LOOKUP` |'
- en: '| `PREVIOUS VALUE` |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `PREVIOUS VALUE` |'
- en: '| `RUNNING` |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `RUNNING` |'
- en: '| `WINDOW` |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `WINDOW` |'
- en: '| `FIRST` |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| `FIRST` |'
- en: '| `INDEX` |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `INDEX` |'
- en: '| `LAST` |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| `LAST` |'
- en: '| `RANK` |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `RANK` |'
- en: '| `SIZE` |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `SIZE` |'
- en: '| `TOTAL` |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `TOTAL` |'
- en: '| `SCRIPT & MODEL` |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `SCRIPT & MODEL` |'
- en: 'As mentioned in *Partition and direction of addressing*, table calculation
    functions operate on the cache and thus might change if the cache data changes,
    depending on the type of table calculation: directional or non-directional. In
    the following exercises, we will see directional and non-directional table calculation
    functions in action.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如*地址划分与方向*中所述，表计算函数在缓存上运行，因此，如果缓存数据发生变化，根据表计算的类型（有方向或无方向），计算结果可能会发生变化。在接下来的练习中，我们将看到有方向和无方向的表计算函数的实际应用。
- en: 'Let us have a closer look at directional and non-directional table calculations:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地了解有方向和无方向的表计算：
- en: Navigate to [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)
    to locate and download the workbook associated with this chapter.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)以查找并下载与本章相关的工作簿。
- en: Navigate to the **Directional/Non-Directional** worksheet.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**定向/非定向**工作表。
- en: 'Create the calculated fields, as shown in the following table:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下表所示创建计算字段：
- en: '| **Name** | **Calculation** | **Notes** |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **名称** | **计算** | **备注** |'
- en: '| `Lookup` | `LOOKUP(SUM([Sales]),-1)` | Notice the `-1` included in this calculation.
    This instructs Tableau to retrieve the value from the previous row. |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `Lookup` | `LOOKUP(SUM([Sales]),-1)` | 请注意，计算中包含了`-1`。这指示Tableau从前一行获取值。
    |'
- en: '| `Size` | `SIZE()` | The `SIZE` function returns the number of rows in the
    partition. Therefore, as can be seen in the following screenshot, the size equals
    the total number of rows. |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `Size` | `SIZE()` | `SIZE`函数返回分区中的行数。因此，正如下图所示，大小等于总行数。 |'
- en: '| `Window Sum` | `WINDOW_SUM(SUM([Sales]))` | The `Window` `sum` functions
    (`WINDOW_SUM(expression, [start, end]`) can operate either directionally or non-directionally.
    Since this example does not include the `[start, end]` option, it operates non-directionally.
    |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `Window Sum` | `WINDOW_SUM(SUM([Sales]))` | `Window` `sum`函数（`WINDOW_SUM(expression,
    [start, end]`)可以定向或非定向操作。由于这个示例没有包括`[start, end]`选项，它是非定向操作的。 |'
- en: '| `Window Sum w/ Start&End` | `WINDOW_SUM(SUM([Sales]),0,1)` | This example
    of a window function is operating directionally, as can be seen by the inclusion
    of the `[start, end]` option. |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `Window Sum w/ Start&End` | `WINDOW_SUM(SUM([Sales]),0,1)` | 这个窗口函数的示例是定向操作的，正如通过包含`[start,
    end]`选项可以看出的那样。 |'
- en: '| `Running Sum` | `RUNNING_SUM(SUM([Sales]))` | By their nature, `RUNNING`
    functions operate directionally since they consider previous rows in order to
    compute. |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `Running Sum` | `RUNNING_SUM(SUM([Sales]))` | 根据其本质，`RUNNING`函数是定向操作的，因为它们需要考虑前面的行进行计算。
    |'
- en: Place **Category** and **Ship Mode** on the **Rows** shelf.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Category**和**Ship Mode**放置到**Rows**架上。
- en: 'Double-click on **Sales**, **Lookup, Size**, **Window Sum**, **Window Sum w/
    Start&End**, and **Running Sum** to populate the view as shown in the following
    screenshot:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**Sales**、**Lookup, Size**、**Window Sum**、**Window Sum w/ Start&End**和**Running
    Sum**，以填充如下图所示的视图：
- en: '![](img/B18435_05_01.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_01.png)'
- en: 'Figure 5.1: Table calculation'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1：表格计算
- en: The table in *Figure 5.1* shows you that the `Size` function and the `Window
    Sum` function are the only two non-directional functions. All others present a
    number depending on the direction. For example, `Lookup` moves down and prints
    the value prior to the actual field. You can change the direction by clicking
    on the triangle of any table calculation field and selecting **Edit Table Calculation**.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*图5.1*中的表格显示，`Size`函数和`Window Sum`函数是唯一的两个非定向函数。其他所有函数都根据方向返回一个数值。例如，`Lookup`向下移动并打印实际字段之前的值。你可以通过点击任何表格计算字段的三角形并选择**编辑表格计算**来更改方向。'
- en: 'This first exercise was an example of two table calculation categories: directional
    and non-directional. Now, we will move on to considering the table calculation
    functions individually. Regretfully, space does not allow us to explore all table
    calculations; however, to gain a working understanding, it should suffice to consider
    all but one of the unique groups of options. The four table calculations that
    begin with `Script_`, as well as the six `Model_` functions, will be covered in
    *Chapter 15*, *Integrating Programming Languages*.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个练习是两个表格计算类别的示例：定向和非定向。现在，我们将逐一考虑表格计算函数。遗憾的是，由于篇幅所限，无法深入探讨所有表格计算；不过，为了获得实际的理解，考虑所有独特的选项组，除了其中一个组，应该足够了。以`Script_`开头的四个表格计算，以及六个`Model_`函数，将在*第15章*，*编程语言整合*中进行讲解。
- en: Although I added a real-world scenario at the end of each section in writing,
    the follow-along exercises focus on demonstrating table calculation functionality
    and considering how each interacts **directionally** or **non-directionally**
    with the dataset in the cache (also known as the **partition**).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我在每个部分的结尾加入了实际场景，但跟随练习侧重于演示表格计算的功能，并考虑每个计算如何与缓存中的数据集（也称为**分区**）**定向**或**非定向**交互。
- en: Exploring each unique table calculation function
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索每个独特的表格计算函数
- en: The following exercises will show us each table calculation individually; at
    the end of each section, you will find my thoughts on a real-world scenario.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下练习将分别展示每个表格计算；在每个部分的末尾，您将看到我对实际场景的想法。
- en: Lookup and Total
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找和总计
- en: The objectives of the following worksheet are to display those customers who
    made purchases in the last two days of 2013 and the associated absolute, as well
    as relative sales for the month of December.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是显示在2013年最后两天内进行购买的客户及其相关的绝对销售额和相对销售额（12月）。
- en: 'In the following table, `LOOKUP` behaves directionally whereas `TOTAL` is non-directional.
    This behavior is easy to notice in the results. Follow these steps in order to
    do so:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的表格中，`LOOKUP`按方向性进行操作，而`TOTAL`是无方向性的。这种行为在结果中容易察觉。请按照以下步骤操作：
- en: In the workbook associated with this chapter, navigate to the **Lookup/Total**
    worksheet.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与本章相关的工作簿中，导航至**查找/总计**工作表。
- en: Drag **Customer Name** and **Order Date** onto the **Rows** shelf. Set **Order
    Date** to **Month/Day/Year** discrete by right-clicking and selecting **Day**
    as well as **Discrete**.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**客户名称**和**订单日期**拖到**行**架上。右键点击**订单日期**，将其设置为**月/日/年**离散格式，并选择**日**和**离散**。
- en: Place **Order Date** on the **Filters** shelf, choose to view only December
    2013, and select **Month/Year** as the date format.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**订单日期**放到**筛选器**架上，选择仅查看2013年12月，并选择**月/年**作为日期格式。
- en: 'Create the following calculated fields:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下计算字段：
- en: '| **Name** | **Calculation** |'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **名称** | **计算** |'
- en: '| `Lookup Intervening Time` | `DATEDIFF(''day'',LOOKUP(Max([Order Date]),0),
    MAKEDATE(2013,12,31))` |'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `查找介入时间` | `DATEDIFF(''day'',LOOKUP(Max([Order Date]),0), MAKEDATE(2013,12,31))`
    |'
- en: '| `% Total Sales` | `SUM(Sales)/TOTAL(SUM([Sales]))` |'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `% 总销售额` | `SUM(Sales)/TOTAL(SUM([Sales]))` |'
- en: Right-click on **% Total Sales** and select **Default Properties** | **Number
    format** to set the number format to percentages with two decimal places.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**% 总销售额**，选择**默认属性** | **数字格式**，将数字格式设置为百分比，并保留两位小数。
- en: Place **Lookup Intervening Time** on the **Filters** shelf and choose a range
    from 0 to 1.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**查找介入时间**放到**筛选器**架上，并选择0到1的范围。
- en: Double-click on **Sales** and **% Total Sales** to place both fields on the
    view.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**销售额**和**% 总销售额**，将这两个字段放到视图中。
- en: 'Format as desired:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要设置格式：
- en: '![](img/B18435_05_02.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_02.png)'
- en: 'Figure 5.2: Total Sales'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2：总销售额
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下前面的工作表是如何运作的：
- en: The filter on **Order Date** ensures that the dataset returned to Tableau only
    includes data from the month of December 2013.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订单日期**的筛选器确保返回给Tableau的数据仅包括2013年12月的数据。'
- en: The **% Total Sales** `SUM(Sales)/TOTAL(SUM([Sales]))` includes the `TOTAL(SUM([Sales]))`
    calculated field, which returns the total sales for the entire dataset. Dividing
    `SUM([Sales])` by this total returns the percentage of the total.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**% 总销售额** `SUM(Sales)/TOTAL(SUM([Sales]))`包括`TOTAL(SUM([Sales]))`计算字段，返回整个数据集的总销售额。将`SUM([Sales])`除以该总额，返回占总销售额的百分比。'
- en: '**Lookup** **Intervening** **Time**: `DATEDIFF(''day`, `LOOKUP(Max([Order`
    `Date])`,`0)`, `MAKEDATE (2013,12,31))` will return an integer that reflects the
    difference between the date returned by the `LOOKUP` function and **12/31/2013**.
    Note that the `LOOKUP` function has an offset of zero. This results in each row
    returning the date associated with that row. This differs from directional and
    non-directional table calculations, which include a `LOOKUP` function with an
    offset of -1, which causes each row in the view to return data associated with
    the previous row.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找** **介入** **时间**：`DATEDIFF(''day'', ''LOOKUP(Max([Order Date]), 0)'', ''MAKEDATE(2013,12,31))`将返回一个整数，反映`LOOKUP`函数返回的日期与**12/31/2013**之间的差异。请注意，`LOOKUP`函数的偏移量为零。这意味着每行返回与该行相关的日期。这与方向性和无方向性的表格计算不同，后者包括带有-1偏移量的`LOOKUP`函数，这导致视图中的每一行返回与前一行相关的数据。'
- en: At first glance, you might think that you could simplify this workbook by removing
    **Lookup Intervening Time** from the **Filters** shelf and adjusting the filter
    on `[Order Date]` to display only the last two days of December. However, if you
    do this, **% Total Sales** will add up to 100% across all rows in the view, which
    would not satisfy the workbook’s objectives. Think of **Lookup Intervening Time**
    as not filtering but hiding all but the last two days in December. This hiding
    ensures that the data necessary to calculate **% Total Sales** is in the dataset
    in cache/partition.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 乍一看，你可能认为可以通过从**筛选器**架上移除**查找中介时间**并调整`[订单日期]`筛选器，仅显示12月的最后两天，来简化此工作簿。然而，如果这样做，**%
    总销售额**将在视图中的所有行中加总为100%，这将无法满足工作簿的目标。可以将**查找中介时间**视为不是筛选，而是隐藏12月除了最后两天以外的所有日期。这样隐藏数据，确保计算**%
    总销售额**所需的数据仍然存在于缓存/分区的数据集中。
- en: 'Real-world scenario: I use **Lookup** more often than **Total**. And both are
    invaluable when working with Tableau. We already saw that you use lookup for changes;
    you can think of a month-to-month comparison of profits, the number of employees
    today versus today last year, website click differences per day of the week, and
    so on.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 实际场景：我比**总计**更常用**查找**。在使用Tableau时，两者都非常重要。我们已经看到你用查找来处理变化；你可以将其视为月度利润对比、今天与去年今天的员工人数对比、按星期几的网页点击差异等等。
- en: For the table calculation total, you can use it every time you want to show
    the total number of something while still showing some level of aggregation in
    your dashboard. The percentage of **Total** in *Figure 5.2* is actually the perfect
    example.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对于表格计算的总计，每次你想在仪表板上显示某个东西的总数，同时又想保持某种程度的聚合时，都可以使用它。**总计**的百分比在*图 5.2*中实际上是一个完美的例子。
- en: Previous Value
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前一个值
- en: The objectives of the following worksheet are to return the aggregate value
    of sales for each year and set next year’s sales goal. Note that two options have
    been provided for determining next year’s sales goal in order to demonstrate how
    `PREVIOUS_VALUE` differs from `LOOKUP`. Also, note that `PREVIOUS_VALUE` behaves
    directionally.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是返回每年的销售额总值并设定明年的销售目标。请注意，提供了两种确定明年销售目标的选项，以展示`PREVIOUS_VALUE`与`LOOKUP`的不同。此外，请注意`PREVIOUS_VALUE`的行为是有方向性的。
- en: 'Let us have a look at the steps:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下步骤：
- en: In the workbook associated with this chapter, navigate to the **Previous Value**
    worksheet.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本章关联的工作簿中，导航到**前一个值**工作表。
- en: 'Create the following calculated fields:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下计算字段：
- en: '| **Name** | **Calculation** |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **计算** |'
- en: '| `Next Year Goal Prv_Val` | `PREVIOUS_VALUE(SUM([Sales])) * 1.05` |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `下一年目标前一个值` | `PREVIOUS_VALUE(SUM([Sales])) * 1.05` |'
- en: '| `Next Year Goal Lkup` | `LOOKUP(SUM([Sales]),0) * 1.05` |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `下一年目标查找` | `LOOKUP(SUM([Sales]),0) * 1.05` |'
- en: Place **Order Date** on the **Rows** shelf.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**订单日期**放置在**行**架上。
- en: Double-click **Sales** and **Next Year Goal Prv_Val** to place each on the view.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**销售额**和**下一年目标前一个值**，将每个值放置到视图中。
- en: 'Format as desired, or as seen in the following screenshot (by dragging the
    piles in **Measure Values**, the order will change accordingly in the view, as
    seen in the following screenshot):'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照需要格式化，或参见下方截图（通过拖动**度量值**中的堆叠，顺序将在视图中相应更改，如下方截图所示）：
- en: '![Table'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![表格'
- en: Description automatically generated with medium confidence](img/B18435_05_03.png)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成，信心水平中等](img/B18435_05_03.png)
- en: 'Figure 5.3: Next year'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.3：明年
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下前面的工作表是如何工作的：
- en: '**Next Year Goal Prv_Val**: `PREVIOUS_VALUE(SUM([Sales])) *1.05` is applied
    in this worksheet, which retrieves the results from each previous row and adds
    5%. In other words, the goal is a steady-state growth rate of 5% per year over
    all years.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**下一年目标前一个值**：`PREVIOUS_VALUE(SUM([Sales])) * 1.05`应用于此工作表，它从每一行的前一个结果中获取数据并加上5%。换句话说，目标是每年以5%的稳定增长率增长。'
- en: '**Next Year Goal Lkup**: `LOOKUP(SUM([Sales]),0) * 1.05` is also applied to
    this worksheet; this calculation adds 5% to the current year’s sales. In other
    words, the goal for next year is for sales that are 5% greater than this year.
    Previous years are not considered.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**下一年目标查找**：`LOOKUP(SUM([Sales]),0) * 1.05`也应用于此工作表；此计算将当前年份的销售额增加5%。换句话说，明年的目标是比今年高出5%的销售额。前几年的数据不考虑在内。'
- en: To better understand this exercise, consider the values associated with **2014**
    in the preceding screenshot. **Next Year Goal Prv_Val** is calculated via **2013
    Next Year Goal Prv_Val**; that is, **$560,577 * 1.05**. On the other hand, **Next
    Year Goal Lkup** is calculated via the **2014** sales; that is, **$733,947 * 1.05**.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解这个练习，请考虑前面截图中与 **2014** 相关的值。**Next Year Goal Prv_Val** 通过 **2013 Next
    Year Goal Prv_Val** 计算得出；即 **$560,577 * 1.05**。另一方面，**Next Year Goal Lkup** 是通过
    **2014** 年的销售额计算得出的；即 **$733,947 * 1.05**。
- en: 'Real-world scenario: imagine you want to extrapolate a data point and keep
    extrapolating from that new value; for this, you use **Previous_Value**. One example
    is a bond that pays a frequent coupon. If your bond has a face value of 100 and
    it pays a 4% semi-annual coupon, you can calculate the final worth of the bond
    by using **Previous_Value**, just like we did with the **Next Year Goal Prv_Val**
    in the last exercise.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现实场景：假设你想要推算一个数据点并从该新值继续推算；为此，你可以使用 **Previous_Value**。一个例子是定期支付息票的债券。如果你的债券面值为
    100，且每半年支付 4% 的息票，你可以使用 **Previous_Value** 来计算债券的最终价值，就像我们在上一个练习中使用 **Next Year
    Goal Prv_Val** 那样。
- en: Running
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行
- en: The objective of the following worksheet is to display the running minimum profit,
    running average profit, and running maximum profit compared with **SUM(Profit)**
    for each month in the dataset.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是显示每个月的运行最小值利润、运行平均值利润和运行最大值利润，并与数据集中的 **SUM(Profit)** 进行比较。
- en: 'The following example demonstrates how the `Running` functions behave directionally:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了 `Running` 函数的方向性行为：
- en: In the workbook associated with this chapter, navigate to the **Running** worksheet.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与本章相关的工作簿中，导航到 **Running** 工作表。
- en: 'Create the following calculated fields:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下计算字段：
- en: '| **Name** | **Calculation** |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **计算** |'
- en: '| `Running Min` | `RUNNING_MIN(SUM([Profit]))` |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `运行最小值` | `RUNNING_MIN(SUM([Profit]))` |'
- en: '| `Running Max` | `RUNNING_MAX(SUM([Profit]))` |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `运行最大值` | `RUNNING_MAX(SUM([Profit]))` |'
- en: '| `Running Avg` | `RUNNING_AVG(SUM([Profit]))` |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `运行平均值` | `RUNNING_AVG(SUM([Profit]))` |'
- en: Place **Order Date** on the **Columns** shelf and set it to **Month/Year** continuous.
    Place **Measure Values** on the **Rows** shelf.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **订单日期** 放到 **列** 货架，并将其设置为 **月/年** 连续格式。将 **度量值** 放到 **行** 货架。
- en: Remove all instances of measures from the **Measure Values** shelf except for
    **Running Min**, **Running Max**, **Running Avg**, and **Profit**.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **度量值** 货架中删除除 **运行最小值**、**运行最大值**、**运行平均值** 和 **利润** 外的所有度量实例。
- en: Move **SUM(Profit)** from the **Measure Values** shelf to the **Rows** shelf.
    Right-click on **SUM(Profit)** and select **Dual Axis**.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **SUM(Profit)** 从 **度量值** 货架移到 **行** 货架。右键点击 **SUM(Profit)** 并选择 **双轴**。
- en: Format as desired.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照需要进行格式设置。
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下前面的工作表是如何工作的：
- en: '**Running Min**: `RUNNING_MIN(SUM([Profit]))` is visible in the preceding screenshot,
    which compares the current **SUM(Profit)** with the least **SUM(Profit)** recorded
    to that point in time. If the current **SUM(Profit)** is less than the least **SUM(Profit)**
    recorded to date, the current **SUM(Profit)** replaces the least **SUM(Profit)**.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行最小值**：`RUNNING_MIN(SUM([Profit]))` 在前面的截图中可见，它将当前的 **SUM(Profit)** 与截至目前记录的最小
    **SUM(Profit)** 进行比较。如果当前的 **SUM(Profit)** 小于迄今为止记录的最小 **SUM(Profit)**，则当前的 **SUM(Profit)**
    将替代最小的 **SUM(Profit)**。'
- en: '**Running Max**: `RUNNING_MAX(SUM([Profit]))` operates similarly to **Running
    Min**, except of course it looks for maximum values.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行最大值**：`RUNNING_MAX(SUM([Profit]))` 的操作方式与 **运行最小值** 类似，当然它是寻找最大值。'
- en: '**Running Avg**: `RUNNING_AVG(SUM([Profit]))` calculates the average **SUM(Profit)**
    based on every month to the current month.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行平均值**：`RUNNING_AVG(SUM([Profit]))` 根据每个月到当前月的 **SUM(Profit)** 计算平均值。'
- en: 'Real-world scenario: again, there are plenty of examples for this table calculation.
    Think about year-to-date profits, population numbers based on childbirth (do not
    forget to subtract the deaths), the current number of open support tickets, and
    many more.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现实场景：对于这个表格计算，有很多例子可以参考。考虑年初至今的利润、基于出生人数的人口数据（别忘了减去死亡人数）、当前未解决的支持票数量，等等。
- en: Window
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 窗口
- en: The objective of the following worksheet is to display a directional instance
    of a `WINDOW` function and a non-directional instance.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是显示 `WINDOW` 函数的方向性实例和非方向性实例。
- en: 'Please follow these steps:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤操作：
- en: In the workbook associated with this chapter, navigate to the **Window** worksheet.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与本章相关的工作簿中，导航到 **Window** 工作表。
- en: 'Create the following calculated fields:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下计算字段：
- en: '| **Name** | **Calculation** |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **计算** |'
- en: '| `Win Avg Directional` | `WINDOW_AVG(SUM([Profit]),-2,0)` |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `Win Avg Directional` | `WINDOW_AVG(SUM([Profit]),-2,0)` |'
- en: '| `Win Avg Non-Directional` | `WINDOW_AVG(SUM([Profit]))` |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `Win Avg Non-Directional` | `WINDOW_AVG(SUM([Profit]))` |'
- en: Place **Order Date** on the **Columns** shelf and set it to **Month/Year** continuous.
    Place **Measure Values** on the **Rows** shelf.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **订单日期** 放置在 **列** 货架上，并设置为 **月/年** 连续。将 **度量值** 放置在 **行** 货架上。
- en: Remove all instances of measures from the **Measure Values** shelf except **Win
    Avg Directional**, **Win Avg Non-Directional**, and **Profit**.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **度量值** 货架上移除所有度量实例，除了 **Win Avg Directional**、**Win Avg Non-Directional**
    和 **利润**。
- en: From the **Data** pane, drag another instance of **Profit** onto the **Rows**
    shelf. Right-click on the instance of **Profit** on the **Rows** shelf and select
    **Quick Table Calculation** | **Moving Average**. Right-click on the instance
    of **Profit** on the **Rows** shelf and select **Dual Axis**.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **数据** 面板中，将另一个 **利润** 实例拖到 **行** 货架上。右键单击 **行** 货架上的 **利润** 实例，并选择 **快速表格计算**
    | **移动平均**。右键单击 **行** 货架上的 **利润** 实例，并选择 **双轴**。
- en: Right-click on the axis labeled **Moving Average of Profit** and select **Synchronize
    Axis**.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击标记为 **利润的移动平均值** 的轴，并选择 **同步轴**。
- en: 'Format as desired, or as seen in the following screenshot:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要进行格式化，或按照以下截图所示进行格式化：
- en: '![](img/B18435_05_04.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_04.png)'
- en: 'Figure 5.4: Window'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4：窗口
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看前面的工作表是如何工作的：
- en: '**Win Avg Directional**: `Window_AVG(SUM([Profit]),-2,0)` has a start point
    of -2 and an endpoint of 0, which signifies that Tableau will create a point based
    on the average of the `SUM([Profit])` calculated on the current month and the
    previous two months. Changing the `0` to `2` would cause the average of each point
    to be calculated on the previous 2 months, the current month, and the next 2 months.
    Double-click on the instance of **Profit** on the **Rows** shelf to view the underlying
    code. (This is the instance of **Profit** that was changed into a table calculation
    by right-clicking and selecting **Quick Table Calculation** | **Moving Average**.)
    Note that the calculation is identical to the code created for **Win Avg Directional**.
    However, if you right-click on both pills and select **Edit Table Calculation**,
    you will notice that the resulting dialog boxes differ. The dialog box associated
    with **Profit** has more options, including the ability to change the previous
    and next values. Changing the previous and next values for **Win Avg Directional**
    requires adjusting the calculated field.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Win Avg Directional**: `Window_AVG(SUM([Profit]),-2,0)` 的起始点为 -2，结束点为 0，这意味着
    Tableau 会基于当前月及前两个月的 `SUM([Profit])` 计算创建一个点。如果将 `0` 改为 `2`，则每个点的平均值会计算基于前两个月、当前月和接下来的两个月。双击
    **行** 货架上的 **利润** 实例以查看底层代码。（这是通过右键单击并选择 **快速表格计算** | **移动平均** 后更改为表格计算的 **利润**
    实例。）请注意，计算与为 **Win Avg Directional** 创建的代码相同。然而，如果你右键单击这两个柱子并选择 **编辑表格计算**，你会发现弹出的对话框不同。与
    **利润** 相关的对话框有更多选项，包括改变前后值的功能。要更改 **Win Avg Directional** 的前后值，需要调整计算字段。'
- en: '**Win Avg Non-Directional**: `WINDOW_AVG(SUM([Profit]))` is associated with
    the horizontal line across the view. Note that it is not dependent on direction.
    Instead, it is a single value generated by the average of all aggregated **Profit**
    values in the dataset in the cache/partition and will therefore be the same no
    matter the order of the data points.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Win Avg Non-Directional**: `WINDOW_AVG(SUM([Profit]))` 与视图中的水平线相关。注意，它与方向无关，而是通过缓存/分区中所有聚合的
    **利润** 值的平均值生成的单一值，因此无论数据点的顺序如何，它的值都是相同的。'
- en: 'Real-world scenario: why would you want to use a window average? Because you
    want to smoothen the outliers, for example. A window average provides a steady
    representation of your data. Single highs or lows will be removed. If you analyze
    stock prices, you will notice that prices can differ throughout the year! By using
    the window averages or rather window standard deviations as an early warning indicator,
    you will be able to see price jumps more clearly and can, as an investor, act
    upon it. Steady growth or decline will, however, fall into the moving bands. This
    is not achievable by using fixed bands.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现实场景：为什么要使用窗口平均值？因为你想平滑掉异常值，例如。窗口平均值提供了数据的平稳表示。单一的高点或低点会被去除。如果你分析股价，你会注意到价格在全年可能会有所不同！通过使用窗口平均值，或者更准确地说，使用窗口标准差作为预警指标，你将能够更清楚地看到价格的波动，并且作为投资者可以做出相应的决策。然而，稳步增长或下降会落入移动区间。这是固定区间无法实现的。
- en: First and Last
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 首次和最后一次
- en: The objective of the following worksheet is to display the first and last instance
    of the best-selling item in the `Superstore` dataset. Notice how the following
    example demonstrates that the `FIRST` and `LAST` functions behave directionally.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是显示`Superstore`数据集中畅销商品的首次和最后一次实例。注意以下示例演示了`FIRST`和`LAST`函数的方向性行为。
- en: 'Take the following steps:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: In the workbook associated with this chapter, navigate to the **First/Last**
    worksheet.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与本章相关的工作簿中，转到**首次/最后一次**工作表。
- en: 'Create the following calculated fields:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下计算字段：
- en: '| **Name** | **Calculation** |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **计算** |'
- en: '| `First` | `FIRST()` |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| `首次` | `FIRST()` |'
- en: '| `Last` | `LAST()` |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| `最后一次` | `LAST()` |'
- en: '| `First or Last` | `FIRST() = 0 OR LAST() = 0` |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| `First or Last` | `FIRST() = 0 OR LAST() = 0` |'
- en: 'Place **Product Name** on the **Filters** shelf, select the **Top** tab, and
    choose **Top** **1** by **Sum** of **Sales**, as shown in the following screenshot:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**产品名称**放到**过滤器**架上，选择**顶部**标签，然后选择按**销售额**的**前 1**，如下面的截图所示：
- en: '![](img/B18435_05_05.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_05.png)'
- en: 'Figure 5.5: Top filter'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5：顶部过滤器
- en: Place **First or Last** on the **Filters** shelf and select **True** in the
    resulting dialog box.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**首次或最后一次**放到**过滤器**架上，并在弹出的对话框中选择**真**。
- en: Drag **Product Name**, **Order Date**, and **Row ID** onto the **Rows** shelf.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**产品名称**、**订单日期**和**行 ID**拖到**行**架上。
- en: Set **Order Date** to **Month/Day/Year** discrete.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**订单日期**设置为**月/日/年**离散型。
- en: Double-click on **Sales**, **First**, and **Last** to place each on the view.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**销售额**、**首次**和**最后一次**，将每个字段放入视图中。
- en: Right-click on **First**, **Last**, and **First or Last** and select **Compute
    Using** | **Table (down)**.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**首次**、**最后一次**和**首次或最后一次**，然后选择**计算方式** | **表格（向下）**。
- en: 'Format as desired:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要进行格式化：
- en: '![](img/B18435_05_06.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_06.png)'
- en: 'Figure 5.6: First and Last'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6：首次和最后一次
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下上面工作表的功能：
- en: '**First**: `FIRST()` starts at **0** and counts down to the last row of the
    dataset in the cache. In the preceding screenshot, note that the first instance
    of **Canon imageCLASS** occurs on **05/24/13**. The fact that `FIRST()` ranges
    from **0** to **-4** communicates that there are five instances of **Canon imageCLASS**
    in the dataset in the cache or within the window cache.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首次**：`FIRST()` 从**0**开始，倒数到缓存中数据集的最后一行。在上面的截图中，注意到**佳能 imageCLASS**的首次出现是在**05/24/13**。`FIRST()`的范围从**0**到**-4**，这表明数据集中共有五次**佳能
    imageCLASS**的实例，或者在窗口缓存中有五次。'
- en: '**Last**: `LAST()` starts at the last row of the dataset in the cache and counts
    down to 0\. In the preceding screenshot, note that the last instance of **Canon
    imageCLASS** occurs on **11/18/14**. The fact that `LAST()` ranges from **4**
    to **0** communicates that there are five instances of **Canon imageCLASS** in
    the dataset in the cache.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最后一次**：`LAST()` 从缓存中的数据集的最后一行开始，倒数到 0。在上面的截图中，注意到**佳能 imageCLASS**的最后一次出现是在**11/18/14**。`LAST()`的范围从**4**到**0**，这表明数据集中共有五次**佳能
    imageCLASS**的实例。'
- en: '**First or Last**: `FIRST() = 0 OR LAST() = 0`, when placed on the **Filters**
    shelf and set to **True**, hides all instances of matching rows except the first
    and last.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首次或最后一次**：`FIRST() = 0 OR LAST() = 0`，当放入**过滤器**架上并设置为**真**时，将隐藏所有匹配行的实例，除首次和最后一次外。'
- en: The **Row ID** field is included in the view to make sure that the very first
    and last instances of **Canon imageCLASS** display. Otherwise, if there are multiple
    instances of **Canon imageCLASS** on the first or last date, the sales numbers
    will reflect multiple values. It’s important to set **Compute Using** to **Table
    (down)** for each table calculation in the view. **Compute Using** is the same
    as **Addressing**, which will be discussed in detail in the *Application of functions*
    section.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行 ID**字段包含在视图中，以确保显示**佳能 imageCLASS**的第一个和最后一个实例。否则，如果**佳能 imageCLASS**在第一个或最后一个日期有多个实例，销售数字将反映多个值。对于视图中的每个表格计算，设置**计算方式**为**表格（向下）**很重要。**计算方式**与**寻址**相同，稍后将在*函数应用*部分详细讨论。'
- en: 'Real-world scenario: you could use this type of calculation for the time between
    the last 5 orders per quarter, to see whether the time between orders is increasing
    or decreasing during the day. This can then help to improve marketing or schedule
    help desk hours more efficiently.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现实场景：你可以使用此类计算来分析每个季度最后五个订单之间的时间，以查看订单间的时间是增加还是减少。这有助于改进营销或更高效地安排客服时间。
- en: Index
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: The objective of the following worksheet is to list those states in the USA
    with over 50 postal codes represented in the underlying dataset.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是列出美国中拥有超过 50 个邮政编码的州，这些邮政编码在底层数据集中有表示。
- en: 'Notice how the following example demonstrates that the `INDEX` function behaves
    directionally and can be seen as a count of rows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，以下示例演示了`INDEX`函数如何按方向表现，并且可以视为行的计数：
- en: In the workbook associated with this chapter, navigate to the **Index** worksheet.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与本章相关的工作簿中，导航到**索引**工作表。
- en: Set the **Marks** card to **Circle**.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**标记**卡片设置为**圆形**。
- en: Place **State** on the **Rows** shelf and **Postal Code** on the **Detail**
    shelf.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**州**放置在**行**货架上，将**邮政编码**放置在**详细信息**货架上。
- en: 'Create a calculated field named **Index** with the code: `INDEX()`. Drag **Index**
    onto the **Filters** shelf and select the **Range of values** filter. Choose to
    view only values that are 50 or greater by moving the slider to a minimum value
    of **50**.'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**索引**的计算字段，代码为：`INDEX()`。将**索引**拖到**筛选器**货架上，并选择**值范围**筛选器。通过将滑块移动到**50**的最小值，仅查看大于或等于
    50 的值。
- en: 'Right-click on **Index** and select **Edit Table Calculation**. Select**Specific
    Dimensions** and check **Postal Code**:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**索引**并选择**编辑表格计算**。选择**特定维度**并勾选**邮政编码**：
- en: '![](img/B18435_05_07.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_07.png)'
- en: 'Figure 5.7: Index'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7：索引
- en: 'Select **Analysis** | **Stack Marks** | **Off**, then review:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**分析** | **堆叠标记** | **关闭**，然后进行查看：
- en: '![](img/B18435_05_08.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_08.png)'
- en: 'Figure 5.8: Final index'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.8：最终索引
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下前面工作表的功能：
- en: '**Index**: `INDEX()` counts from 1 to *n*. As such, it behaves directionally.
    In this case, as a result of the partitioning and addressing settings, **Index**
    is counting postal codes. (Partitioning and addressing will be discussed in detail
    in the *Application of functions* section.) Setting the **Index** filter to display
    only values of 50 or more ensures that only those states with 50 or more postal
    codes are in the partition/dataset in the cache display.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**索引**：`INDEX()`从 1 计数到*n*。因此，它按方向表现。在这种情况下，由于分区和寻址设置的原因，**索引**正在计数邮政编码。（分区和寻址将在*函数应用*部分详细讨论。）将**索引**筛选器设置为仅显示大于或等于
    50 的值，确保只有那些有 50 个或更多邮政编码的州出现在缓存中的分区/数据集显示中。'
- en: 'Real-world scenarios: most often, I use **Index** interchangeably with **First**
    and **Last**.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现实场景：通常，我将**索引**与**首项**和**末项**互换使用。
- en: Rank
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 排名
- en: 'The objective of the following worksheet is to display the top three selling
    items in each region. This example will demonstrate how `RANK` interacts directionally
    with the dataset in the cache:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是展示每个地区的前三大畅销商品。这个示例将演示`RANK`如何在缓存中的数据集与方向交互：
- en: In the workbook associated with this chapter, navigate to the **Rank** worksheet.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与本章相关的工作簿中，导航到**排名**工作表。
- en: 'Place **Product Name** on the **Filters** shelf, select the **Top** tab, and
    choose **Top 3** by **Sum**of **Sales**:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**产品名称**放置在**筛选器**货架上，选择**顶部**选项卡，并按**销售总额**选择**前 3**：
- en: '![](img/B18435_05_09.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_09.png)'
- en: 'Figure 5.9: Filter'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9：筛选器
- en: Place **Region** and **Product Name** on the **Rows** shelf and **Sales** on
    the **Columns** shelf.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**地区**和**产品名称**放置在**行**货架上，将**销售额**放置在**列**货架上。
- en: 'Note that only two items display for each region:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，每个地区仅显示两项：
- en: '![](img/B18435_05_10.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_10.png)'
- en: 'Figure 5.10: Reviewing the top two items'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.10：查看前两个项目
- en: Create a calculated field named **Rank** with the code `Rank(SUM(Sales))`. Drag
    **Rank** between **Region** and **Product Name** onto the **Rows** shelf.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**Rank**的计算字段，代码为`Rank(SUM(Sales))`。将**Rank**拖动到**Region**和**Product Name**之间的**Rows**架上。
- en: Note that before you can place **Rank** between the two pills on the **Rows**
    shelf, you have to cast it as discrete. One way to accomplish this is by placing
    **Rank** on the **Detail** shelf, right-clicking on the pill, and selecting **Discrete**.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，在将**Rank**放置到**Rows**架上的两个标记之间之前，必须将其转换为离散。实现这一目标的一种方法是将**Rank**放置到**Detail**架上，右键点击该标记，然后选择**Discrete**。
- en: Right-click on **Rank** and select **Compute Using** | **Product Name**.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**Rank**，然后选择**Compute Using** | **Product Name**。
- en: Remove **Product Name** from the **Filters** shelf.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**Filters**架上移除**Product Name**。
- en: Press *Ctrl* (or press *Option* on Mac), and right-click and drag **Rank** from
    the **Rows** shelf onto the **Filters** shelf. Pressing the *Ctrl* key while dragging
    a pill from one shelf to another will create a copy of that pill. Failing to press
    the *Ctrl* key will, of course, simply result in moving the pill. In the resulting
    dialog box, select **1**, **2**, and **3**.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住*Ctrl*键（在Mac上按*Option*键），右键点击并拖动**Rank**从**Rows**架上到**Filters**架上。按住*Ctrl*键在架间拖动标记会创建该标记的副本。如果不按*Ctrl*键，当然只是移动标记。在弹出的对话框中，选择**1**、**2**和**3**。
- en: 'Format as desired:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 按照需要进行格式化：
- en: '![](img/B18435_05_11.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_11.png)'
- en: 'Figure 5.11: Rank'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.11：排名
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看前述工作表是如何工作的：
- en: If you followed the step-by-step instructions for this exercise, you will have
    noticed that after placing **Region** and **Product Name** on the **Rows** shelf
    and filtering to show only the top three product names, the resulting visualization
    only showed two products in each region. This is because the filter on **Product
    Name** showed the top three products overall, but it so happened that two out
    of the three were always present in each region. But we actually wanted to show
    the top three per region rather than overall. To fix this issue, we employed the
    `Rank` table calculation function.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你按照步骤完成了这个练习，你会发现，在将**Region**和**Product Name**放置到**Rows**架上并设置过滤器显示仅前3个产品名称后，结果可视化中每个区域只显示了两个产品。这是因为**Product
    Name**的过滤器显示了所有产品中排名前三的产品，但恰好每个区域中总是有两个产品在前三名中。我们实际上想要展示的是每个区域的前3个产品，而不是整体的前3个产品。为了解决这个问题，我们使用了`Rank`表计算函数。
- en: Let’s understand how this works. Instead of writing the `Rank(Sum(Sales))` function,
    the same code will be automatically generated by right-clicking on an instance
    of **Sales** on any shelf and selecting **Quick Table Calculation** | **Rank**.
    Note that **Rank** is counting the product names within each region. This demonstrates
    that the **Rank** table calculation operates directionally on the dataset in the
    cache/partition.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们理解它是如何工作的。与其编写`Rank(Sum(Sales))`函数，不如通过右键点击任何架上的**Sales**实例并选择**Quick Table
    Calculation** | **Rank**，相同的代码会自动生成。请注意，**Rank**是在每个区域内计算产品名称的。这表明，**Rank**表计算函数在缓存/分区中的数据集上按方向操作。
- en: 'Real-world scenario: I use **Rank** when I want to filter a continuously changing
    view, divided into subsections – for example, the last three comments on each
    of my blog posts. Or when I want to show behavior over time, for example, the
    top 10 ranked products over the course of 2 years. This will result in a bump
    chart.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 实际场景：当我想过滤一个持续变化的视图，并将其分成多个子部分时，我使用**Rank**——例如，查看每个博客帖子上的最后三条评论。或者当我想显示一段时间内的行为时，例如，过去两年里排名前10的产品。这将生成一个排名图。
- en: Size
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Size
- en: The objective of the following worksheet is to display all states with five
    or fewer cities in the **Superstore** dataset. This example will demonstrate how
    `SIZE` utilizes the entire partition/dataset in the cache and is thus non-directional.
    We will also use the `FIRST` table calculation function, which is directional,
    in order to clean up the view.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工作表的目标是显示**Superstore**数据集中所有城市数为五个或更少的州。这个示例将演示如何利用`SIZE`在缓存中使用整个分区/数据集，因此它是无方向的。我们还将使用`FIRST`表计算函数，它是有方向的，以便清理视图。
- en: 'Please follow along with the steps:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤操作：
- en: In the workbook associated with this chapter, navigate to the **Size** worksheet.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与本章相关的工作簿中，导航到**Size**工作表。
- en: Set **Analysis** | **Stack Marks** to **Off**.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Analysis** | **Stack Marks**设置为**Off**。
- en: 'Create the following calculated fields:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下计算字段：
- en: '| **Name** | **Calculation** |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **计算公式** |'
- en: '| `Size` | `SIZE()` |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| `Size` | `SIZE()` |'
- en: '| `City Count` | `IF FIRST() = 0 THEN [Size] ELSE NULL``END` |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| `City Count` | `IF FIRST() = 0 THEN [Size] ELSE NULL``END` |'
- en: Drag **State** onto the **Rows** shelf, **City** onto the **Detail** shelf,
    **City Count** onto the **Text**/**Label** shelf, and **Size** onto the **Detail**
    shelf.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**State**拖到**Rows**货架，**City**拖到**Detail**货架，**City Count**拖到**Text**/**Label**货架，**Size**拖到**Detail**货架。
- en: Right-click on the **Size** filter and select **Compute Using** | **City**.
    Move **Size** from the **Marks** card to the **Filters** shelf.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**Size**过滤器，选择**计算方式** | **City**。将**Size**从**Marks**卡片中移至**Filters**货架。
- en: 'In the resulting dialog box, select an **At most**value of **5**:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的对话框中，选择一个**最多**为**5**的值：
- en: '![](img/B18435_05_12.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_12.png)'
- en: 'Figure 5.12: At most'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12：最多
- en: On the **Marks**card, right-click on **City Count** and select **Edit Table
    Calculation**. Under **Nested Calculations**, select **City Count**.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Marks**卡片上，右键单击**City Count**并选择**编辑表格计算**。在**嵌套计算**下，选择**City Count**。
- en: 'Select **Compute Using** | **Specific Dimensions** and check **City**:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**计算方式** | **特定维度**并勾选**City**：
- en: '![](img/B18435_05_13.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_13.png)'
- en: 'Figure 5.13: Specific Dimensions'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13：特定维度
- en: Now use the dropdown under **Nested Calculations** again and select **Size**.
    Then, select **Compute Using** | **Specific Dimensions** and check **City**.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在再次使用**嵌套计算**下拉菜单并选择**Size**。然后，选择**计算方式** | **特定维度**并勾选**City**。
- en: 'Observe the final view:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 观察最终视图：
- en: '![](img/B18435_05_14.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_14.png)'
- en: 'Figure 5.14: Final worksheet'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14：最终工作表
- en: 'Let’s consider how the preceding worksheet functions:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下前述工作表是如何运作的：
- en: '**Size**: `Size()` generates a single number, for example, 3 for Delaware,
    based on the partition/dataset in the cache. That number can change depending
    on the partitioning and addressing settings but does not change based on movement
    across the partition. As such, it behaves non-directionally.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Size**：`Size()` 会生成一个单一的数字，例如，Delaware的值是3，它基于缓存中的分区/数据集。该数字可以根据分区和地址设置而改变，但在分区内的移动不会改变该数字。因此，它表现为无方向性。'
- en: '**City Count**: The `IF FIRST() = 0 THEN LOOKUP([Size],0) ELSE NULLEND` field
    is not strictly necessary. You could, instead, simply place **Size** on the **Text**/**Label**
    shelf. However, if you do so, you will note that the numbers in the view will
    look bold. This occurs because the numbers are actually repeated and then layered
    on top of each other. Utilizing `FIRST() = 0` causes only one set of numbers to
    display.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**City Count**：`IF FIRST() = 0 THEN LOOKUP([Size],0) ELSE NULLEND` 字段并非绝对必要。你可以选择直接将**Size**放置到**Text**/**Label**货架上。然而，如果这样做，你会注意到视图中的数字会变得粗体。这是因为这些数字实际上是重复的，并且被叠加在一起。使用
    `FIRST() = 0` 使得只显示一组数字。'
- en: Note that the preceding exercise had an option for **Nested Calculations**,
    which is because the `Size` calculated field was referenced within the `City Count`
    calculated field.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前面的练习有一个**嵌套计算**的选项，这是因为 `Size` 计算字段在 `City Count` 计算字段中被引用。
- en: 'Real-world scenario: **Size** is probably the least used. I honestly do not
    think I ever used it other than explaining and showcasing it. But what I saw others
    do with **Size** is the following; by turning on the grand total column view,
    **Size** can generate a non-default aggregation like standard deviation. Simply
    use this formula: `if size()=1 then sum({STDEV([Sales])}) else sum([Sales]) end`.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现实场景：**Size** 可能是最少使用的。我诚实地说，除了用来解释和展示它，我从未真正使用过它。但我看到其他人用**Size**做的事情是：通过开启总计列视图，**Size**
    可以生成一个非默认的聚合，如标准差。只需使用以下公式：`if size()=1 then sum({STDEV([Sales])}) else sum([Sales])
    end`。
- en: 'If you cannot get enough of table calculation, here are some more scenarios:
    [https://www.tableau.com/blog/top-10-tableau-table-calculations](https://www.tableau.com/blog/top-10-tableau-table-calculations).'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还想了解更多关于表格计算的内容，以下是一些额外的场景：[https://www.tableau.com/blog/top-10-tableau-table-calculations](https://www.tableau.com/blog/top-10-tableau-table-calculations)。
- en: Now that we have presented the different table calculations, we will see how
    they can be manipulated in the partitioning (scope) and addressing (direction)
    of calculations.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经展示了不同的表格计算，我们将看到如何在分区（范围）和地址（方向）中操作它们。
- en: Application of functions
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 函数的应用
- en: 'So far, we have covered the first of our two major questions: *What is the
    function?* Now we will proceed to the next question: *How is the function applied?*'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经解答了两个主要问题中的第一个：*函数是什么？* 现在我们将继续下一个问题：*如何应用这个函数？*
- en: 'Let’s try to understand that question via the following three options, which
    are all applications of the `INDEX` function:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下三种选项来理解这个问题，它们都是`INDEX`函数的应用：
- en: '![Graphical user interface, application, Teams  Description automatically generated](img/B18435_05_15.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序，Teams 描述自动生成](img/B18435_05_15.png)'
- en: 'Figure 5.15: Applications'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.15：应用实例
- en: The `INDEX` function is used in each of these three screenshots; however, it
    is applied differently in each. The first and second screenshots both display
    **1**, **2**, and **3**, but differ directionally. The third screenshot ranges
    from **1** to **9**. So, how is `INDEX` being applied in each case?
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`INDEX`函数在这三张截图中都有使用，但每个应用的方式不同。第一和第二张截图都显示**1**、**2**、和**3**，但方向上有所不同。第三张截图的范围从**1**到**9**。那么，`INDEX`在每个情况下是如何应用的呢？'
- en: 'Answering this question can be confusing because Tableau uses different terminology.
    Within Tableau itself, the way a table calculation is applied may be referred
    to as running along, moving along, compute using, or **partitioning (scoping)**
    and **addressing (direction)**. For our purposes, we will utilize the terms partitioning
    and addressing, which we will define here according to the Tableau documentation
    ([https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations.htm](https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations.htm)):'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 回答这个问题可能会令人困惑，因为Tableau使用了不同的术语。在Tableau中，表计算的应用方式可能被称为沿着运行、沿着移动、计算使用，或者**分区（范围）**和**寻址（方向）**。为了方便起见，我们将使用分区和寻址这两个术语，这些术语的定义可以参考Tableau文档（[https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations.htm](https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations.htm)）：
- en: The dimensions that define how to group the calculation, that is, define the
    scope of data it is performed on, are called partitioning fields. The table calculation
    is performed separately within each partition. The remaining dimensions, upon
    which the table calculation is performed, are called addressing fields, and determine
    the direction of the calculation.
  id: totrans-232
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 定义如何对数据进行分组的维度，即定义计算作用范围的维度，称为分区字段。表计算在每个分区内单独执行。剩下的维度，表计算在其上执行，称为寻址字段，并决定计算的方向。
- en: This basically means that the partition defines which fields are being used,
    for example, `Segment`. If you have three segments divided over three categories,
    you could look at each combination separately, all categories within one segment,
    or all segments within one category. The way you look at it is what Tableau calls
    addressing.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上意味着分区定义了哪些字段正在使用，例如`Segment`。如果你有三个按三个类别划分的分段，你可以分别查看每个组合、一个分段中的所有类别，或者一个类别中的所有分段。你查看的方式就是Tableau所称的寻址（addressing）。
- en: If a table calculation is utilized in the view, you can right-click on it and
    select **Edit Table Calculation**. Upon doing so, you will see a dialog box that
    will allow you to choose specific dimensions. If a dimension is checked, it is
    addressed. If it is unchecked, it is partitioned.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在视图中使用了表计算，你可以右击它并选择**编辑表计算**。这样做后，你会看到一个对话框，允许你选择特定的维度。如果一个维度被勾选，它就是寻址的。如果没有勾选，它就是分区的。
- en: 'See an example in the following figure:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 见下图中的示例：
- en: '![](img/B18435_05_16.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_16.png)'
- en: 'Figure 5.16: Addressing and partitioning'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.16：寻址与分区
- en: 'Tableau provides many out-of-the-box partitioning and addressing settings,
    including **Table (down)**, **Table (across)**, **Pane (down)**, and **Cell**.
    We will reference these options occasionally but will not give a detailed review.
    This leads us to our first partitioning and addressing guideline:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau提供了许多开箱即用的分区和寻址设置，包括**表格（纵向）**、**表格（横向）**、**窗格（纵向）**和**单元格**。我们会偶尔提到这些选项，但不会进行详细回顾。这引出了我们的第一个分区和寻址指南：
- en: Do not use the out-of-the-box partitioning and addressing settings provided
    by Tableau, including **Table** (across) and **Pane** (down). Force yourself to
    click **Specific Dimensions** and manually define the partitioning and addressing
    so that you clearly understand how every table calculation is applied.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 不要使用Tableau提供的开箱即用的分区和寻址设置，包括**表格**（跨）和**窗格**（纵向）。强迫自己点击**特定维度**，并手动定义分区和寻址，这样你才能清楚理解每个表计算是如何应用的。
- en: 'There are a couple of caveats to the preceding guideline:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述指南中有几个需要注意的事项：
- en: There is an exception, which is **Cell**. It is not possible to address individual
    cells in a view using partitioning and addressing. Instead, it is necessary to
    use **Compute Using** as **Cell** or, within the **Table Calculation** dialog
    box, to select **Cell**. Surprisingly, addressing a table calculation along each
    cell can be useful. An example is provided in the workbook associated with this
    chapter, on the worksheet **Percent of Total**. There it is used to show 100%
    for each cell divided into two categories.
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个例外，即**单元格**。无法使用分区和地址在视图中定位单个单元格。相反，需要将**计算方式**设置为**单元格**，或者在**表格计算**对话框中选择**单元格**。令人惊讶的是，在每个单元格上定位表格计算是有用的。一个示例已在本章节关联的工作簿中的**总占比**工作表中提供。在那里，它用于展示每个单元格在两个类别之间的100%。
- en: If you set partitioning and addressing for a given table calculation and then
    add dimensions to the view, usually, Tableau will not automatically adjust the
    partitioning and addressing settings; they are locked down. However, when using
    **Table (down)**, **Pane (across)**, and the like, Tableau will make automatic
    adjustments as dimensions are added to the view.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为某个表格计算设置了分区和地址，然后向视图中添加维度，通常情况下，Tableau不会自动调整分区和地址设置；它们是锁定的。然而，在使用**表（纵向）**、**窗格（横向）**等时，Tableau会在向视图中添加维度时自动进行调整。
- en: 'This leads us to our next guideline:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 这引出了我们的下一个指南：
- en: Place all needed dimensions on the desired shelves *before* setting partitioning
    and addressing for table calculations.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置分区和表格计算的地址之前，*先*将所有需要的维度放置在所需的架位上。
- en: Following these guidelines will help ensure that you are always clear about
    how your table calculations are being applied. It might take longer in the first
    place, but ultimately, you’ll be more in control of table calculations and can
    develop faster.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循这些指南将有助于确保你始终清楚你的表格计算是如何应用的。起初可能需要更多时间，但最终你会更好地掌控表格计算，进而更快地发展。
- en: Building a playground
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建游乐场
- en: 'Let us set up a simple playground environment to quickly and efficiently explore
    partitioning and addressing:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置一个简单的游乐场环境，以快速而高效地探索分区和地址：
- en: In the workbook associated with this chapter, navigate to the **Playground**
    worksheet.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本章节关联的工作簿中，导航至**游乐场**工作表。
- en: Place **Category** on the **Rows** shelf and the **Index** calculation on the
    **Label** shelf.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**类别**放置在**行**架上，将**索引**计算放置在**标签**架上。
- en: The **Index** calculation is simply `Index()`. Click on the drop-down menu associated
    with **Index** and select **Edit Table Calculation**. In the resulting dialog
    box, click **Specific Dimensions**.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**索引**计算仅为`Index()`。点击与**索引**关联的下拉菜单，并选择**编辑表格计算**。在弹出的对话框中，点击**特定维度**。'
- en: 'Position the screen components optimally. See the following screenshot for
    one possible setup:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最优地定位屏幕组件。请参阅以下截图，查看一种可能的设置：
- en: '![Graphical user interface, text, application'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '![图形用户界面，文本，应用程序'
- en: Description automatically generated](img/B18435_05_17.png)
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B18435_05_17.png)
- en: 'Figure 5.17: Building a playground'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.17：构建游乐场
- en: You can see in *Figure 5.17* that we created a worksheet displaying the three
    categories **Furniture**, **Office Supplies**, and **Technology**. By adding the
    **Index** field to the **Text** shelf, we have the minimum requirement to use
    a table calculation, which is one dimension and one table calculation. Now we
    can change the compute used in the table calculation and can spot what changes
    in the visualization. Later on, we will explore more complex examples; however,
    always start easy and increase the level of complexity slowly to fully understand
    what is happening.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在*图 5.17* 中看到，我们创建了一个工作表，展示了三类：**家具**、**办公用品**和**技术**。通过将**索引**字段添加到**文本**架上，我们具备了使用表格计算的最小要求：一个维度和一个表格计算。现在我们可以改变表格计算中的计算方式，并观察可视化中发生的变化。稍后我们将探索更复杂的示例；然而，始终从简单的开始，逐步提高复杂度，以便完全理解发生了什么。
- en: In the following pages, we will utilize our playground extensively and modify
    it as necessary. However, for the sake of efficiency, we will need to keep the
    focus on the playground and the accompanying discussion narrow. The discussion
    will be confined to dimensions on the **Rows** and **Columns** shelves and the
    `INDEX` function on the **Text** shelf.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的页面中，我们将广泛使用我们的游乐场并根据需要进行修改。然而，为了提高效率，我们需要将重点集中在游乐场和随附的讨论上。讨论将仅限于**行**和**列**架上的维度以及**文本**架上的`INDEX`函数。
- en: 'We could explore different functions on various shelves and the different options
    that they afford. For instance, placing a date field on the **Pages** shelf will
    cause a table calculation that uses the `TOTAL` function to display an option
    to compute the total across all pages. Regretfully, exploring every possible nuance
    is simply not possible in one chapter, but if you are interested in this topic,
    feel free to check out the Tableau help page for more content and examples: [https://help.tableau.com/current/pro/desktop/en-us/functions_functions_tablecalculation.htm](https://help.tableau.com/current/pro/desktop/en-us/functions_functions_tablecalculation.htm).'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以探索在不同架上进行的各种功能及它们提供的不同选项。例如，将日期字段放置在**页面**架上将导致使用`TOTAL`函数的表格计算，显示计算所有页面总和的选项。遗憾的是，在一个章节中探索所有可能的细节是不可行的，但如果你对这个话题感兴趣，请随时查看
    Tableau 帮助页面，获取更多内容和示例：[https://help.tableau.com/current/pro/desktop/en-us/functions_functions_tablecalculation.htm](https://help.tableau.com/current/pro/desktop/en-us/functions_functions_tablecalculation.htm)。
- en: Partitioning and addressing with one dimension
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用一个维度进行分区和地址映射
- en: 'Let us use our playground to start exploring partitioning and addressing with
    the simplest possible example:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们利用我们的实验平台，开始通过最简单的例子探索分区和地址映射：
- en: '![](img/B18435_05_18.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_18.png)'
- en: 'Figure 5.18: Compute Using | Category'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.18：使用 | 类别计算
- en: 'In this simple example, addressing **Category** causes each member of the **Category**
    dimension to be counted. This demonstrates that addressing a dimension determines
    the direction of the calculation. In our example, we have the **Table Calculation**
    **Index**, but **Index** depends on partitioning and addressing as we learned
    before. **Category** serves as a partition in the **Rows** shelf. We split the
    data into three: **Furniture**, **Office** **Supplies**, and **Technology**. Now
    we also say address **Category** for the **Table Calculation**. We did that by
    selecting **Category** from **Compute Using** (*Figure 5.18*). Now the **Table
    Calculation** will be applied to the categories and hence counts 1, 2, 3 categories.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简单的例子中，选择**类别**会导致每个**类别**维度的成员被计数。这表明，选择一个维度进行地址映射决定了计算的方向。在我们的例子中，我们有**表格计算**
    **索引**，但**索引**依赖于我们之前所学的分区和地址映射。**类别**作为**行**架上的分区。我们将数据分为三类：**家具**、**办公用品**和**技术**。现在，我们也可以说，为了进行**表格计算**，要使用**类别**。我们通过在**计算方式**中选择**类别**来完成这一操作（*图
    5.18*）。现在，**表格计算**将应用于这些类别，从而计算出 1、2、3 类别。
- en: 'If you were to select **Compute Using** | **Cell**, the partition into three
    categories would still remain in the view—you would still see **Furniture**, **Office
    Supplies**, and **Technology**—but the counting would happen per cell and not
    for the whole **Category** dimension. Hence, the **Index** will count 1, then
    move to the next cell and count 1, then the next cell and again count 1:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择**计算方式** | **单元格**，分成三类的分区仍然会保持在视图中——你依然会看到**家具**、**办公用品**和**技术**——但计数将按单元格进行，而不是按整个**类别**维度进行。因此，**索引**会先计算
    1，然后移动到下一个单元格，计算 1，再到下一个单元格，再次计算 1：
- en: '![](img/B18435_05_19.png)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_19.png)'
- en: 'Figure 5.19: Compute Using | Cell'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.19：使用 | 单元格计算
- en: Now, let us consider partitioning and addressing with not one but two dimensions.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们考虑使用两个维度来进行分区和地址映射，而不是一个维度。
- en: Partitioning and addressing with two dimensions
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用两个维度进行分区和地址映射
- en: 'Two additional options are made available when partitioning and addressing
    two or more dimensions: **At the level** and **Restarting every**. You can compare
    this scenario to the task of counting all countries per continent. In this scenario,
    **At the level** will be countries since you are not counting streets or trees
    but countries. **Restarting** will be continents. After you are done counting
    countries for one continent, you start at 1 again for the next continent:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用两个或更多维度进行分区和地址映射时，提供了两个额外的选项：**在级别**和**每次重启**。你可以将这个场景比作统计每个大洲的所有国家。在这个场景中，**在级别**指的是国家，因为你统计的不是街道或树木，而是国家。**重启**指的是大洲。完成一个大洲的国家统计后，你将从下一个大洲重新从
    1 开始：
- en: '![](img/B18435_05_20.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_20.png)'
- en: 'Figure 5.20: Two dimensions'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.20：两个维度
- en: Both **At the level** and **Restarting every** allow the author to choose dimensions
    from a drop-down menu. **At the level** allows the author to choose what level
    to increment at, and as the name suggests, **Restarting every** allows the author
    to choose which dimensions to restart on. The examples here will provide context
    for your understanding.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '**At the level**和**每次重启**都允许作者从下拉菜单中选择维度。**At the level**允许作者选择在哪个级别进行增量操作，正如其名称所示，**每次重启**允许作者选择在哪些维度上进行重启。这里的示例将为你提供理解的背景。'
- en: 'Note that **At the level** has one additional choice: **Deepest**. In this
    case, setting **At the level** to **Deepest** is the same as selecting **Ship
    Mode**. This leads us to our next guideline:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，**At the level**有一个额外的选项：**Deepest**。在这种情况下，将**At the level**设置为**Deepest**与选择**运输方式**相同。这引出了我们的下一个指南：
- en: It is not necessary to choose the bottom dimension in the **At the level** drop-down
    menu. It is always identical to **Deepest**.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在**“At the level”**下拉菜单中不需要选择底层维度。它总是与**Deepest**相同。
- en: To recreate the iterations listed here, you will need to make some changes to
    the playground environment. In addition to **Category** on the **Rows** shelf
    and **Index** on the **Label** shelf, also place **Ship Mode** on the **Rows**
    shelf. We will not cover iterations that include one or more dimensions on the
    **Columns** shelf since the behavior of these possibilities is much the same.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 为了重新创建此处列出的迭代，你需要对演示环境做一些更改。除了将**类别**放在**行**架上，**索引**放在**标签**架上外，还需要将**运输方式**放在**行**架上。我们不会讨论包含一个或多个维度在**列**架上的迭代，因为这些可能性中的行为几乎相同。
- en: As you consider and/or reproduce the following options, note that the **Addressing**
    order is important. For examples 3-5, **Category** is first on the addressing
    list. For options 6-8, **Ship Mode** is first on the list.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑和/或复制以下选项时，请注意**寻址**顺序非常重要。对于示例3-5，**类别**排在寻址列表的首位。对于选项6-8，**运输方式**排在列表的首位。
- en: 'In the first example, configure the partitioning and addressing settings thus:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个示例中，按如下方式配置分区和寻址设置：
- en: '**Partitioning**: **Category**'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：**类别**'
- en: '**Addressing**: **Ship Mode**'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**'
- en: '**At the level**: -'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**At the level**：-'
- en: '**Restarting every**: -'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：-'
- en: 'This will produce the following visualization:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_21.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_21.png)'
- en: 'Figure 5.21: Example 1'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.21：示例1
- en: Here, we count the **Ship Mode** per **Category**.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们按**类别**计算**运输方式**。
- en: 'In the second example, configure the partitioning and addressing settings thus:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个示例中，按如下方式配置分区和寻址设置：
- en: '**Partitioning**: **Ship Mode**'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：**运输方式**'
- en: '**Addressing**: **Category**'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**类别**'
- en: '**At the level**: -'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**At the level**：-'
- en: '**Restarting every**: -'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：-'
- en: 'This will produce the following visualization:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_22.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_22.png)'
- en: 'Figure 5.22: Example 2'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.22：示例2
- en: In this example, we count the **Category** per **Ship Mode**.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们按**运输方式**计算**类别**。
- en: 'In the third example, configure the partitioning and addressing settings thus:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三个示例中，按如下方式配置分区和寻址设置：
- en: '**Partitioning**: -'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Category**, **Ship Mode**'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**类别**，**运输方式**'
- en: '**At the level**: **Deepest**'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**At the level**：**Deepest**'
- en: '**Restarting every**: **None**'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_23.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_23.png)'
- en: 'Figure 5.23: Example 3'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.23：示例3
- en: This time, we count the **Category** and **Ship Mode** combination.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我们计算**类别**和**运输方式**的组合。
- en: 'In the fourth example, configure the partitioning and addressing settings thus:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在第四个示例中，按如下方式配置分区和寻址设置：
- en: '**Partitioning**: -'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Category**, **Ship Mode**'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**类别**，**运输方式**'
- en: '**At the level**: **Deepest**'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**At the level**：**Deepest**'
- en: '**Restarting every**: **Category**'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**类别**'
- en: 'This will produce the following visualization:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_24.png)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_24.png)'
- en: 'Figure 5.24: Example 4'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.24：示例4
- en: Here, we count the combination **Category** and **Ship Mode** and restart counting
    at every new **Category**.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们按**类别**和**运输方式**的组合进行计数，并在每个新的**类别**时重新计数。
- en: 'In the fifth example, configure the partitioning and addressing settings thus:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 在第五个示例中，按如下方式配置分区和寻址设置：
- en: '**Partitioning**: -'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Category**, **Ship Mode**'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**类别**，**运输方式**'
- en: '**At the level**: **Category**'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**At the level**：**类别**'
- en: '**Restarting every**: **None**'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_25.png)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_25.png)'
- en: 'Figure 5.25: Example 5'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.25：示例5
- en: We count the combination **Category** and **Ship Mode** that appears at the
    **Category** level. Since the **Category** level is higher in the hierarchy than
    **Ship Mode**, we end up counting only one value per **Category**.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在**类别**级别计算**类别**和**运输方式**的组合。由于**类别**级别在层级结构中高于**运输方式**，因此我们最终只计算每个**类别**的一个值。
- en: 'In the sixth example, configure the partitioning and addressing settings thus:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在第六个示例中，配置分区和寻址设置如下：
- en: '**Partitioning**: -'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Ship Mode**, **Category**'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**，**类别**'
- en: '**At the level**: **Deepest**'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在级别**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_26.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_26.png)'
- en: 'Figure 5.26: Example 6'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.26：示例6
- en: We count the combination **Ship Mode** and **Category** at the **Ship Mode**
    level; hence, we count **First Class** and all the **Category** combinations with
    it before **Same Day** and its combinations with **Category**.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在**运输方式**级别计算**运输方式**和**类别**的组合；因此，我们首先计算**头等舱**和所有与之相关的**类别**组合，然后是**同日配送**及其与**类别**的组合。
- en: 'In the seventh example, configure the partitioning and addressing settings
    thus:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在第七个示例中，配置分区和寻址设置如下：
- en: '**Partitioning**: -'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Ship Mode**, **Category**'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**，**类别**'
- en: '**At the level**: **Deepest**'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在级别**：**最深层**'
- en: '**Restarting every**: **Ship Mode**'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**运输方式**'
- en: 'This will produce the following visualization:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_27.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_27.png)'
- en: 'Figure 5.27: Example 7'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.27：示例7
- en: We count the **Ship Mode** and **Category** combinations at the deepest level
    but we restart at every **Ship Mode**; therefore, we count **First Class** and
    **Furniture**, **First Class** and **Office Supplies**, then **First Class** and
    **Technology**. Then, we move on to **Same Day** and its combinations, restarting
    at 1 again.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在最深层次计算**运输方式**和**类别**的组合，但我们在每次**运输方式**时都会重启；因此，我们计算**头等舱**和**家具**，**头等舱**和**办公用品**，然后是**头等舱**和**技术**。接下来，我们继续处理**同日配送**及其组合，并在1处重新开始。
- en: 'In the eighth example, configure the partitioning and addressing settings thus:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在第八个示例中，配置分区和寻址设置如下：
- en: '**Partitioning**: -'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Ship Mode**, **Category**'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**，**类别**'
- en: '**At the level**: **Ship Mode**'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在级别**：**运输方式**'
- en: '**Restarting every**: **None**'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化效果：
- en: '![](img/B18435_05_28.png)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_28.png)'
- en: 'Figure 5.28: Example 8'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.28：示例8
- en: We count the **Ship Mode** and **Category** combinations at the **Ship Mode**
    level.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在**运输方式**级别计算**运输方式**和**类别**的组合。
- en: 'Now, let’s consider some of the possibilities presented here in more detail.
    Some of the options are identical. In fact, out of the nine options, only four
    are unique. Let’s consider examples 1, 4, and 8, all of which have identical end
    results. Does this mean that each is truly identical? Options 1 and 4 are identical.
    Option 8, however, is slightly different. To understand this, note the description
    within the table calculation dialog box for option 8:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地考虑一下这里呈现的一些可能性。一些选项是相同的。实际上，在九个选项中，只有四个是独特的。让我们考虑一下示例1、4和8，它们的最终结果是相同的。这是否意味着每个选项都完全相同？选项1和选项4是相同的。但是，选项8略有不同。要理解这一点，请注意选项8中表格计算对话框中的描述：
- en: '![Graphical user interface, application  Description automatically generated](img/B18435_05_29.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序描述自动生成](img/B18435_05_29.png)'
- en: 'Figure 5.29: Index'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.29：索引
- en: 'The description in example 8 reads **Results are computed along Ship Mode,
    Category** (see *Figure 5.29*). The text in the description box for example 1
    is identical to that for example 4: **Results are computed along Ship Mode for
    Category**, which can be translated as partitioning **Category** and addressing
    **Ship Mode**. This translation is identical to the actual partitioning/addressing
    setup accomplished in example 1\. Therefore, examples 1 and 4 are identical. But
    does the slight difference to example 8 mean there are practical differences?
    No!'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 示例8中的描述为**结果按运输方式、类别计算**（见*图5.29*）。示例1中的描述框中的文本与示例4完全相同：**结果按运输方式、类别计算**，这可以翻译为按**类别**进行分区并按**运输方式**进行寻址。此翻译与示例1中实际完成的分区/寻址设置完全一致。因此，示例1和示例4是相同的。但示例8的细微差异是否意味着存在实际的区别呢？不！
- en: 'Example 6 may seem confusing at first. Why has the odd numbering sequence occurred?
    Because the order in which the dimensions are addressed differs from the order
    of dimensions on the **Rows** shelf. The addressing order is **Ship Mode**, **Category**.
    The order on the **Rows** shelf is **Category**, **Ship Mode**. Simply reversing
    the position of **Category** and **Ship Mode** on the **Rows** shelf and noting
    the change in the number sequence should help dispel any confusion:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 6 可能一开始会让人感到困惑。为什么会出现奇怪的编号顺序？因为处理维度的顺序与 **行** 货架上的维度顺序不同。处理顺序是 **运输方式**,
    **类别**，而 **行** 货架上的顺序是 **类别**, **运输方式**。只需将 **类别** 和 **运输方式** 在 **行** 货架上的位置反转，并注意数字顺序的变化，这样就能帮助消除任何困惑：
- en: '![Table'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '![表格'
- en: Description automatically generated](img/B18435_05_30.png)
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B18435_05_30.png)
- en: 'Figure 5.30: Switch dimensions'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.30: 切换维度'
- en: 'Is there any practical use for example 6? Yes. From time to time, it may be
    necessary to address dimensions in a different order than they are listed on a
    shelf. But this is not usually the case. This leads us to our next guideline:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 6 有实际用途吗？是的。从时间到时间，可能需要按照不同于货架上列出的顺序处理维度。但通常情况下并不是这样。这引出了我们的下一个指南：
- en: When addressing multiple dimensions for a table calculation, the order of addressing
    will usually reflect the order of dimensions on the **Rows** and/or **Columns**
    shelves.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 在为表格计算处理多个维度时，处理顺序通常会反映在 **行** 和/或 **列** 货架上的维度顺序。
- en: Partitioning and addressing with three dimensions
  id: totrans-358
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用三个维度进行分区和处理
- en: Let us add another dimension to our playground and reorder things slightly.
    Place **Category** and **Region** on the **Rows** shelf and **Ship Mode** on the
    **Columns** shelf. **Index** should remain on **Text** in the **Marks** shelf.
    Also, add two filters. Filter **Region** to **East**, **South**, and **West**.
    Filter **Ship Mode** to **First Class**, **Second Class**, and **Standard Class**.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为实验添加另一个维度并稍作调整。将 **类别** 和 **地区** 放在 **行** 货架上，将 **运输方式** 放在 **列** 货架上。**索引**
    应该保持在 **标记** 货架的 **文本** 上。同时，添加两个过滤器。将 **地区** 过滤为 **东部**, **南部**, 和 **西部**。将 **运输方式**
    过滤为 **头等舱**, **二等舱**, 和 **标准舱**。
- en: When partitioning and addressing three dimensions, the number of possible iterations
    jumps to 57; however, only 14 of these are unique. Here is a listing of those
    unique possibilities.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 当分区和处理三个维度时，可能的迭代次数跃升至 57 次；然而，其中只有 14 次是唯一的。以下是这些唯一可能性的列举。
- en: Remember, addressing means selecting the dimensions in the table calculation
    settings while partitioning is the de-selection of dimensions, as described in
    *Figure 5.17*.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，处理意味着在表格计算设置中选择维度，而分区是取消选择维度，正如 *图 5.17* 所描述的那样。
- en: 'In the first example, configure the partitioning and addressing settings as:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个示例中，配置分区和处理设置如下：
- en: '**Partitioning**: **Category**, **Region**'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**: **类别**, **地区**'
- en: '**Addressing**: **Ship Mode**'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**处理**: **运输方式**'
- en: '**At the level**: -'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在该级别**: -'
- en: '**Restarting every**: -'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**: -'
- en: 'This will produce the following visualization:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化：
- en: '![](img/B18435_05_31.png)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_31.png)'
- en: 'Figure 5.31: Example 1'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.31: 示例 1'
- en: Here, we count the different **Ship Modes** per **Category** and **Region**
    combinations.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们统计每个 **地区** 和 **类别** 组合下的不同 **运输方式** 选项。
- en: 'In the second example, configure the partitioning and addressing settings as:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个示例中，配置分区和处理设置如下：
- en: '**Partitioning**: **Category**, **Ship Mode**'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**: **类别**, **运输方式**'
- en: '**Addressing**: **Region**'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**处理**: **地区**'
- en: '**At the level**: -'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在该级别**: -'
- en: '**Restarting every**: -'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**: -'
- en: 'This will produce the following visualization:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化：
- en: '![](img/B18435_05_32.png)'
  id: totrans-377
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_32.png)'
- en: 'Figure 5.32: Example 2'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.32: 示例 2'
- en: Here we count the different **Regions** per **Category** and **Ship Mode** combinations.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们统计每个 **类别** 和 **运输方式** 组合下的不同 **地区** 选项。
- en: 'In the third example, configure the partitioning and addressing settings as:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三个示例中，配置分区和处理设置如下：
- en: '**Partitioning**: **Region**, **Ship Mode**'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**: **地区**, **运输方式**'
- en: '**Addressing**: **Category**'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**处理**: **类别**'
- en: '**At the level**: -'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在该级别**: -'
- en: '**Restarting every**: -'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**: -'
- en: 'This will produce the following visualization:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下可视化：
- en: '![](img/B18435_05_33.png)'
  id: totrans-386
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_33.png)'
- en: 'Figure 5.33: Example 3'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.33: 示例 3'
- en: Here we count the different **Category** options per **Region** and **Ship Mode**
    combinations.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们统计每个 **地区** 和 **运输方式** 组合下的不同 **类别** 选项。
- en: 'In the fourth example, configure the partitioning and addressing settings as:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 在第四个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: **Category**'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：**类别**'
- en: '**Addressing**: **Region**, **Ship Mode**'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**地区**，**运输方式**'
- en: '**At the level**: **Deepest**'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在层级**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化：
- en: '![](img/B18435_05_34.png)'
  id: totrans-395
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_34.png)'
- en: 'Figure 5.34: Example 4'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.34：示例 4
- en: Here we count the different **Category** options per **Region** and **Ship Mode**
    combinations at the deepest level.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算不同**类别**选项在每个**地区**和**运输方式**组合下的数量，直到最深层级。
- en: 'In the fifth example, configure the partitioning and addressing settings as:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 在第五个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: **Category**'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：**类别**'
- en: '**Addressing**: **Ship Mode**, **Region**'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**，**地区**'
- en: '**At the level**: **Deepest**'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在层级**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化：
- en: '![](img/B18435_05_35.png)'
  id: totrans-404
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_35.png)'
- en: 'Figure 5.35: Example 5'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.35：示例 5
- en: Here, we count the different **Category** options per **Ship Mode** and **Region**
    combinations at the deepest level.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算不同**类别**选项在每个**运输方式**和**地区**组合下的数量，直到最深层级。
- en: 'In the sixth example, configure the partitioning and addressing settings as:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 在第六个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: **Region**'
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：**地区**'
- en: '**Addressing**: **Category**, **Ship Mode**'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**类别**，**运输方式**'
- en: '**At the level**: **Deepest**'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在层级**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化：
- en: '![](img/B18435_05_36.png)'
  id: totrans-413
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_36.png)'
- en: 'Figure 5.36: Example 6'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.36：示例 6
- en: Here, we count the different **Regions** per **Category** and **Ship Mode**
    combinations at the deepest level.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算不同**地区**在每个**类别**和**运输方式**组合下的数量，直到最深层级。
- en: 'In the seventh example, configure the partitioning and addressing settings
    as:'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 在第七个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: **Ship Mode**'
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：**运输方式**'
- en: '**Addressing**: **Category**, **Region**'
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**类别**，**地区**'
- en: '**At the level**: **Deepest**'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在层级**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化：
- en: '![](img/B18435_05_37.png)'
  id: totrans-422
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_37.png)'
- en: 'Figure 5.37: Example 7'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.37：示例 7
- en: Here we count the different **Ship Modes** per **Category** and **Region** combinations
    at the deepest level.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算不同**运输方式**在每个**类别**和**地区**组合下的数量，直到最深层级。
- en: 'In the eighth example, configure the partitioning and addressing settings as:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 在第八个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: **Ship Mode**'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：**运输方式**'
- en: '**Addressing**: **Region**, **Category**'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**地区**，**类别**'
- en: '**At the level**: **Deepest**'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在层级**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化：
- en: '![](img/B18435_05_38.png)'
  id: totrans-431
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_38.png)'
- en: 'Figure 5.38: Example 8'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.38：示例 8
- en: Here we count the different **Ship Modes** per **Region** and **Category** combinations
    at the deepest level.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算不同**运输方式**在每个**地区**和**类别**组合下的数量，直到最深层级。
- en: 'In the ninth example, configure the partitioning and addressing settings as:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 在第九个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: -'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Category**, **Ship Mode**, **Region**'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**类别**，**运输方式**，**地区**'
- en: '**At the level**: **Deepest**'
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在层级**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化：
- en: '![](img/B18435_05_39.png)'
  id: totrans-440
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_39.png)'
- en: 'Figure 5.39: Example 9'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.39：示例 9
- en: Here we count the **Category**, **Ship Mode**, and **Region** combinations at
    the deepest level.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算**类别**、**运输方式**和**地区**的组合，直到最深层级。
- en: 'In the tenth example, configure the partitioning and addressing settings as:'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 在第十个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: -'
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Ship Mode**, **Category**, **Region**'
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**，**类别**，**地区**'
- en: '**At the level**: **Deepest**'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在层级**：**最深层**'
- en: '**Restarting every**: **None**'
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重启**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化：
- en: '![](img/B18435_05_40.png)'
  id: totrans-449
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_40.png)'
- en: 'Figure 5.40: Example 10'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.40：示例 10
- en: Here we count the **Ship Mode**, **Category**, and **Region** combinations at
    the deepest level.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算**运输方式**、**类别**和**地区**的组合，直到最深层级。
- en: 'In the eleventh example, configure the partitioning and addressing settings
    as:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 在第十一个示例中，配置分区和寻址设置为：
- en: '**Partitioning**: -'
  id: totrans-453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Ship Mode**, **Category**, **Region**'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**、**类别**、**区域**'
- en: '**At the level**: **Category**'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在级别**：**类别**'
- en: '**Restarting every**: **None**'
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重新启动**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化效果：
- en: '![](img/B18435_05_41.png)'
  id: totrans-458
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_41.png)'
- en: 'Figure 5.41: Example 11'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.41：示例11
- en: Here we count the **Ship Mode**, **Category**, and **Region** combinations at
    the **Category** level.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们统计**运输方式**、**类别**和**区域**的组合，在**类别**级别。
- en: 'In the twelfth example, configure the partitioning and addressing settings
    as:'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 在第十二个示例中，将分区和寻址设置配置为：
- en: '**Partitioning**: -'
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Ship Mode**, **Region**, **Category**'
  id: totrans-463
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**、**区域**、**类别**'
- en: '**At the level**: **Deepest**'
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在级别**：**最深**'
- en: '**Restarting every**: **None**'
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重新启动**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化效果：
- en: '![](img/B18435_05_42.png)'
  id: totrans-467
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_42.png)'
- en: 'Figure 5.42: Example 12'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.42：示例12
- en: Here we count the **Ship Mode**, **Region**, and **Category** combinations at
    the deepest level.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们统计**运输方式**、**区域**和**类别**的组合，在最深级别。
- en: 'In the thirteenth example, configure the partitioning and addressing settings
    as:'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 在第十三个示例中，将分区和寻址设置配置为：
- en: '**Partitioning**: -'
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Ship Mode**, **Region**, **Category**'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**运输方式**、**区域**、**类别**'
- en: '**At the level**: **Deepest**'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在级别**：**最深**'
- en: '**Restarting every**: **Ship Mode**'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重新启动**：**运输方式**'
- en: 'This will produce the following visualization:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化效果：
- en: '![](img/B18435_05_43.png)'
  id: totrans-476
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_43.png)'
- en: 'Figure 5.43: Example 13'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.43：示例13
- en: Here we count the **Ship Mode**, **Region**, and **Category** combinations at
    the deepest level.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们统计**运输方式**、**区域**和**类别**的组合，在最深级别。
- en: 'In the fourteenth example, configure the partitioning and addressing settings
    as:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 在第十四个示例中，将分区和寻址设置配置为：
- en: '**Partitioning**: -'
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分区**：-'
- en: '**Addressing**: **Region**, **Ship Mode**, **Category**'
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**寻址**：**区域**、**运输方式**、**类别**'
- en: '**At the level**: **Deepest**'
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在级别**：**最深**'
- en: '**Restarting every**: **None**'
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每次重新启动**：**无**'
- en: 'This will produce the following visualization:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下可视化效果：
- en: '![](img/B18435_05_44.png)'
  id: totrans-485
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_05_44.png)'
- en: 'Figure 5.44: Example 14'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.44：示例14
- en: We will not address the various instances of these possibilities. Instead, the
    reader is encouraged to recreate these 14 possibilities in Tableau to solidify
    their understanding of partitioning and addressing. Even better, consider recreating
    all 57 possible iterations and working to understand how Tableau produces each
    result. The process may be tedious, but the resulting understanding is invaluable,
    allowing the user to understand the things that Tableau is doing in the background
    when computing.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会讨论这些可能性中的各种实例。相反，鼓励读者在Tableau中重新创建这14种可能性，以巩固他们对分区和寻址的理解。更好的是，考虑重新创建所有57种可能的迭代，并努力理解Tableau是如何生成每个结果的。这个过程可能很繁琐，但最终获得的理解是无价的，它让用户了解Tableau在计算时后台做了什么。
- en: 'Guidelines: a reminder'
  id: totrans-488
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指南：提醒
- en: 'Throughout this chapter, I laid out a series of partitioning and addressing
    guidelines. Here they are again as a quick reminder:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我列出了关于分区和寻址的一系列指南。下面是快速提醒的内容：
- en: Do not use the out-of-the-box partitioning and addressing settings provided
    by Tableau, including **Table** (across) and **Pane** (down). Force yourself to
    click **Specific Dimensions** and manually define the partitioning and addressing
    so that you clearly understand how every table calculation is applied.
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使用Tableau提供的开箱即用的分区和寻址设置，包括**表格**（横向）和**面板**（纵向）。强迫自己点击**特定维度**，手动定义分区和寻址，以便你能清晰理解每个表计算是如何应用的。
- en: Place all needed dimensions on the desired shelves *before* setting partitioning
    and addressing for table calculations.
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设置表计算的分区和寻址之前，将所有所需的维度放置到所需的架子上*。
- en: It is not necessary to choose the bottom dimension in the **At the level** drop-down
    menu. It is always identical to **Deepest**.
  id: totrans-492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**级别**下拉菜单中，选择最底层维度并非必要。它总是与**最深**相同。
- en: When addressing multiple dimensions for a table calculation, the order of addressing
    will usually reflect the order of dimensions on the **Rows** and/or **Columns**
    shelves.
  id: totrans-493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在为表计算寻址多个维度时，寻址的顺序通常会反映出**行**和/或**列**架上的维度顺序。
- en: Summary
  id: totrans-494
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the inner workings of table calculations. We began
    by considering what the partition and direction of a table calculation are. In
    the thereafter following sections, we distinguished directional and non-directional
    addressing of table calculations, which eventually lead us to the **Edit Table
    Calculation** interface, and we identified it as the place to change partition
    and addressing (also called the scope and direction). As we explored, we surveyed
    each unique group of table calculation functions except for the `Script_` and
    `Model_` functions, which will be covered in more detail in *Chapter 15*, *Integrating
    Programming Languages*. We learned how to apply these functions to a view through
    partitioning and addressing, where partitioning can be seen as the scope and addressing
    as the direction of the calculation.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了表格计算的内部机制。我们首先考虑了表格计算的分区和方向是什么。在接下来的部分中，我们区分了表格计算的定向和非定向寻址，最终引导我们进入**编辑表格计算**界面，我们将其确定为更改分区和寻址（也叫做范围和方向）的地方。在我们的探讨过程中，我们回顾了除`Script_`和`Model_`函数外的每一组表格计算函数，这些内容将在*第15章*《编程语言集成》中进行更详细的讲解。我们学会了如何通过分区和寻址将这些函数应用于视图，其中分区可以看作是计算的范围，寻址则是计算的方向。
- en: We have seen examples where we compared measures over different time periods,
    like weekly profit numbers, or comparing a part to the whole. We continued by
    considering standard deviation bands for stock price alerts, as well as the **Rank**
    function to produce a bump chart.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看过一些示例，比如对不同时间段进行度量比较，例如每周的利润数据，或者将部分与整体进行比较。我们接着考虑了用于股票价格警报的标准差带，以及**排名**函数来生成波动图。
- en: Using the knowledge of partitioning and addressing we gained in this chapter,
    in the next chapter, we will go on to explore data densification and big data.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 利用本章所学的分区和寻址知识，在下一章中，我们将继续探讨数据密集化和大数据。
- en: Learn more on Discord
  id: totrans-498
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Discord 上了解更多
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的 Discord 社区——在这里你可以分享反馈、向作者提问并了解新版本——请扫描以下二维码：
- en: '[https://packt.link/tableau](https://packt.link/tableau)'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/tableau](https://packt.link/tableau)'
- en: '![](img/QR_Code2044012316175764640.png)'
  id: totrans-501
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code2044012316175764640.png)'
