- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Analyzing and Visualizing Data with Python
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 进行数据分析和可视化
- en: Advanced analytics and data science now play a major role in the majority of
    businesses. It supports organizations in tracking, managing, and gathering performance
    metrics to enhance organizational decision-making. Business managers can utilize
    innovative analysis and machine learning to help them decide how to best engage
    customers, enhance business performance, and increase sales. Data science and
    analytics can be utilized to create user-centric products and make wise choices.
    This can be achieved by comparing various product aspects and studying consumer
    feedback and market trends to develop goods and services that can draw clients
    and keep them around for an extended period.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 高级分析和数据科学如今在大多数企业中发挥着重要作用。它帮助组织跟踪、管理和收集绩效指标，从而改善组织决策。企业经理可以利用创新的分析和机器学习技术帮助他们决定如何最佳地与客户互动、提升企业绩效并增加销售额。数据科学和分析可以用于创建以用户为中心的产品，并做出明智的决策。通过比较不同的产品特性、研究消费者反馈和市场趋势，企业能够开发能够吸引客户并保持长期吸引力的商品和服务。
- en: This book is intended for everyone who wants to have an introduction to the
    techniques and methods of data science, advanced analytics, and machine learning
    for studying business cases that have been impacted by the use of these methods.
    The cases shown are heavily based on real use cases, with a demonstrated positive
    impact in various companies of different sectors. So, anyone who might be considering
    the application of data science in business operations, regardless of whether
    they are a seasoned business analyst seeking to enhance their list of skills,
    or a manager looking for methods that can be applied to maximize certain operations,
    can benefit from the examples discussed in this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向所有希望了解数据科学、高级分析和机器学习技术的方法的人，特别是针对那些研究由这些方法影响的商业案例的人。这些案例大多基于真实的应用案例，并展示了这些方法在不同行业的公司中产生的积极影响。因此，无论是那些希望通过数据科学提升技能的资深商业分析师，还是希望找到可以应用于最大化特定操作的管理者，都会从本书中讨论的示例中受益。
- en: 'In this chapter, we will lay down the initial components that will be used
    throughout this book to manage the data, manipulate it, and visualize it. Specifically,
    we will discuss the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍本书中将用来管理数据、操作数据和可视化数据的初步组件。具体来说，我们将讨论以下内容：
- en: The use of data science in business and the main differences with roles such
    as business or data analysts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据科学在商业中的应用及其与业务分析师或数据分析师等角色的主要区别
- en: The use of statistical programming libraries such as NumPy to apply matrix algebra
    and statical methods
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用诸如 NumPy 等统计编程库来应用矩阵代数和统计方法
- en: Storing the data in pandas, a library for data analysis and manipulation that
    is widely used in the context of data science
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 pandas 存储数据，pandas 是一个广泛用于数据科学领域的数据分析和处理库
- en: Visualization with Seaborn and how the different types of charts can be used
    in different kinds of situations
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Seaborn 进行可视化，并了解不同类型的图表如何在不同场景下使用
- en: Next, we will discuss the technical requirements that you will need to be able
    to follow the examples presented in this chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论您需要满足的技术要求，以便能够跟随本章中的示例。
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To be able to follow the steps in this chapter, you will need to meet the following
    requirements:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够跟随本章的步骤，您需要满足以下要求：
- en: A Jupyter notebook instance running Python 3.7 and above. You can use the Google
    Colab notebook to run the steps as well if you have a Google Drive account.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个运行 Python 3.7 及以上版本的 Jupyter notebook 实例。如果您有 Google Drive 帐户，也可以使用 Google
    Colab notebook 来运行这些步骤。
- en: A basic understanding of math and statistical concepts.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本的数学和统计学概念理解。
- en: Using data science and advanced analytics in business
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在商业中使用数据科学和高级分析
- en: Most of the, time the question of what differentiates a data scientist from
    a business analyst arises, as both roles focus on attaining insight from data.
    From a certain perspective, it can be considered that data science involves creating
    forecasts by analyzing the patterns behind the raw data. Business intelligence
    is backward-looking and discovers the previous and current trends, while data
    science is forward-looking and forecasts future trends.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，关于数据科学家与商业分析师之间的区别会引发讨论，因为这两个角色都专注于从数据中获取洞察。从某种角度看，数据科学可以被视为通过分析原始数据背后的模式来进行预测。商业智能是回顾性的，发现过去和当前的趋势，而数据科学则是前瞻性的，预测未来的趋势。
- en: Business decision-making strongly relies on data science and advanced analytics
    because they help managers understand how decisions affect outcomes. As a result,
    data scientists are increasingly required to integrate common machine learning
    technologies with knowledge of the underlying causal linkages. These developments
    have given rise to positions like that of the decision scientist, a technologist
    who focuses on using technology to support business and decision-making. When
    compared to a different employment description known as a “data scientist” or
    “big data scientist,” however, the phrase “decision scientist” becomes truly meaningful.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 商业决策在很大程度上依赖于数据科学和先进的分析方法，因为这些方法帮助管理者理解决策如何影响结果。因此，数据科学家越来越需要将常见的机器学习技术与对潜在因果关系的了解结合起来。这些发展催生了“决策科学家”这一职位，这是一位专注于利用技术支持业务和决策的技术专家。然而，与“数据科学家”或“大数据科学家”这一职位相比，“决策科学家”这一职位的含义则更加深刻。
- en: Most times, there might be confusion between the roles of business analysts,
    data scientists, and data analysts. Business analysts are more likely to address
    business problems and suggest solutions, whereas data analysts typically work
    more directly with the data itself. Both positions are in high demand and are
    often well paid, but data science is far more engaged in forecasting since it
    examines the patterns hidden in the raw data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，商业分析师、数据科学家和数据分析师的角色容易混淆。商业分析师更可能解决业务问题并提出解决方案，而数据分析师通常更多地直接与数据本身打交道。虽然这两个职位都需求量大且通常薪酬丰厚，但数据科学更注重预测，因为它分析的是原始数据中隐藏的模式。
- en: Using NumPy for statistics and algebra
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NumPy 进行统计学和代数运算
- en: NumPy is a Python library used for working with arrays. Additionally, it provides
    functions for working with matrices, the Fourier transform, and the area of linear
    algebra. Large, multi-dimensional arrays and matrices are now supported by NumPy,
    along with a wide range of sophisticated mathematical operations that may be performed
    on these arrays. They use a huge number of sophisticated mathematical functions
    to process massive multidimensional arrays and matrices, as well as basic scientific
    computations in machine learning, which makes them highly helpful. It gives the
    n-dimensional array, a straightforward yet effective data structure. Learning
    NumPy is the first step on every Python data scientist’s path because it serves
    as the cornerstone on which nearly all of the toolkit’s capabilities are constructed.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 是一个用于处理数组的 Python 库。此外，它还提供了处理矩阵、傅里叶变换和线性代数领域的函数。NumPy 现在支持大规模、多维数组和矩阵，并且提供了一系列复杂的数学操作，可以在这些数组上执行。这些操作使用大量复杂的数学函数来处理庞大的多维数组和矩阵，并进行机器学习中的基本科学计算，因此非常有用。它提供了
    n 维数组，这是一个简单而有效的数据结构。学习 NumPy 是每个 Python 数据科学家入门的第一步，因为它构成了几乎所有工具包功能的基础。
- en: 'The array, which is a grid of values all of the same type that’s indexed by
    a tuple of nonnegative integers, is the fundamental building block utilized by
    NumPy. Similar to how the dimensions of a matrix are defined in algebra, the array’s
    rank is determined by its number of dimensions. A tuple of numbers indicating
    the size of the array along each dimension makes up the shape of an array:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 数组是一个由所有相同类型的值组成的网格，通过一个非负整数元组来索引，这是 NumPy 使用的基本构建块。类似于代数中矩阵的维度定义，数组的秩由其维度的数量决定。一个数字元组，表示数组在每个维度上的大小，构成了数组的形状：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A NumPy array is a container that can house a certain number of elements, all
    of which must be of the same type, as was previously specified. The majority of
    data structures employ arrays to carry out their algorithms. Similar to how you
    can slice a list, you can also slice a NumPy array, but in more than one dimension.
    Similar to indexing, slicing a NumPy array returns an array that is a view of
    the original array.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 数组是一个容器，可以容纳一定数量的元素，这些元素必须是相同类型的，正如之前所指定的那样。大多数数据结构都使用数组来执行其算法。就像你可以切片一个列表一样，你也可以切片一个
    NumPy 数组，但它支持多维切片。与索引类似，切片 NumPy 数组会返回一个原始数组的视图。
- en: 'Slicing in Python means taking elements from one given index to another given
    index. We can select certain elements of an array by slicing the array using `[start:end]`,
    where we reference the elements of the array from where we can start and where
    we want to finish. We can also define the step using `[start:end:step]`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，切片意味着从一个给定的索引到另一个给定的索引选择元素。我们可以通过使用 `[start:end]` 对数组进行切片，选择数组中的某些元素，其中
    `start` 表示开始的元素位置，`end` 表示结束的位置。我们还可以使用 `[start:end:step]` 来定义步长：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'There are three different sorts of indexing techniques: field access, fundamental
    slicing, and advanced indexing. Basic slicing is the n-dimensional extension of
    Python’s fundamental slicing notion. By passing `start`, `stop`, and `step` parameters
    to the built-in `slice` function, a Python slice object is created. Writing understandable,
    clear, and succinct code is made possible through slicing. An iterable element
    is referred to by its position within the iterable when it is “indexed.” Getting
    a subset of elements from an iterable, depending on their indices, is referred
    to as “slicing.”'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种不同的索引技术：字段访问、基本切片和高级索引。基本切片是 Python 基本切片概念的 n 维扩展。通过传递 `start`、`stop` 和 `step`
    参数给内建的 `slice` 函数，可以创建一个 Python 切片对象。切片使得编写清晰、简洁的代码成为可能。当一个可迭代元素按位置被“索引”时，它指的是该元素在可迭代对象中的位置。根据元素的索引，从一个可迭代对象中获取元素子集被称为“切片”。
- en: 'To combine (concatenate) two arrays, we must copy each element in both arrays
    to `result` by using the `np.concatenate()` function:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要合并（拼接）两个数组，我们必须通过使用 `np.concatenate()` 函数将两个数组中的每个元素复制到 `result` 中：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Arrays can be joined using NumPy stack methods as well. We can combine two
    1D arrays along the second axis to stack them on top of one another, a process
    known as stacking. The `stack()` method receives a list of arrays that we wish
    to connect with the axis:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 数组也可以使用 NumPy 的堆叠方法进行连接。我们可以沿第二个轴将两个 1D 数组合并，堆叠在一起，这个过程称为堆叠。`stack()` 方法接收一个我们希望连接的数组列表，并指定轴：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `axis` parameter can be used to reference the axis over which we want to
    make the concatenation:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`axis` 参数可以用来引用我们想要进行拼接的轴：'
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The NumPy `mean()` function is used to compute the arithmetic mean along the
    specified axis:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 的 `mean()` 函数用于计算指定轴上的算术平均值：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You need to use the NumPy `mean()` function with `axis=0` to compute the average
    by column. To compute the average by row, you need to use `axis=1`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要使用 NumPy 的 `mean()` 函数并设置 `axis=0` 来计算按列的平均值。要按行计算平均值，应该使用 `axis=1`：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the next section, we will introduce pandas, a library for data analysis and
    manipulation. pandas is one of the most extensively used Python libraries in data
    science, much like NumPy. It offers high-performance, simple-to-use data analysis
    tools. In contrast to the multi-dimensional array objects provided by the NumPy
    library, pandas offers an in-memory 2D table object called a DataFrame.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将介绍 pandas，一个用于数据分析和操作的库。pandas 就像 NumPy 一样，是数据科学中最广泛使用的 Python 库之一。它提供了高性能、易于使用的数据分析工具。与
    NumPy 提供的多维数组对象不同，pandas 提供了一种称为 DataFrame 的内存中的二维表对象。
- en: Storing and manipulating data with pandas
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 pandas 存储和操作数据
- en: pandas is an open-source toolkit built on top of NumPy that offers Python programmers
    high-performance, user-friendly data structures, and data analysis capabilities.
    It enables quick analysis, data preparation, and cleaning. It performs and produces
    at a high level.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 是一个开源工具包，建立在 NumPy 之上，为 Python 程序员提供高性能、易用的数据结构和数据分析能力。它使得快速分析、数据准备和清洗成为可能。它在性能和产出上都表现卓越。
- en: pandas is a package for data analysis, and because it includes many built-in
    auxiliary functions, it is typically used for financial time series data, economic
    data, and any form of tabular data. For scientific computing, NumPy is a quick
    way to manage huge multidimensional arrays, and it can be used in conjunction
    with the SciPy and pandas packages.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: pandas是一个数据分析的包，因其包含许多内置的辅助功能，通常用于金融时间序列数据、经济数据以及任何形式的表格数据。对于科学计算，NumPy是管理大型多维数组的快速方法，且可与SciPy和pandas包一起使用。
- en: 'Constructing a DataFrame from a dictionary is possible by passing this dictionary
    to the `DataFrame` constructor:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将字典传递给`DataFrame`构造函数，可以从字典构建一个DataFrame：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The pandas `groupby` function is a powerful and versatile function that allows
    us to split data into separate groups to perform computations for better analysis:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: pandas的`groupby`函数是一个强大而多功能的函数，允许我们将数据拆分成单独的组，以便进行计算和更好的分析：
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The three steps of “split,” “apply,” and “combine” make it the simplest to
    recall what a “groupby” performs. Split refers to dividing your data into distinct
    groups based on a particular column. As an illustration, we can divide our sales
    data into months:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: “拆分”、“应用”和“合并”这三步让我们最容易记住“groupby”操作的功能。拆分是指根据特定的列将数据分成不同的组。举例来说，我们可以将销售数据按月分组：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'pandas’ `groupby` technique is extremely potent. Using value counts, you can
    group by one column and count the values of a different column as a function of
    this column value. We can count the number of activities each person completed
    using `groupby` and `value` counts:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: pandas的`groupby`技术非常强大。通过值计数，你可以根据某一列进行分组，并按该列的值对另一列进行计数。我们可以使用`groupby`和`value_counts`来统计每个人完成的活动次数：
- en: '[PRE10]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can also aggregate data over the rows using the `aggregate()` method, which
    allows you to apply a function or a list of function names to be executed along
    one of the axes of the DataFrame. The default is 0, which is the index (row) axis.
    It’s important to note that the `agg()` method is an alias of the `aggregate()`
    method:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`aggregate()`方法对行进行聚合，这允许你对DataFrame的某一轴应用一个或多个函数名称。默认值是0，即索引（行）轴。需要注意的是，`agg()`方法是`aggregate()`方法的别名：
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can also pass several functions to be used in each of the selected columns:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以传递多个函数用于每一列的选择：
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The quantile of the values on a given axis is determined via the `quantile()`
    method. The row-level axis is the default. The `quantile()` method calculates
    the quantile column-wise and returns the mean value for each row when the column
    axis is specified (`axis=''columns''`). The following line will give us the 10%
    quantile across the entire DataFrame:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定轴上的分位数是通过`quantile()`方法确定的。默认情况下是按行轴来计算。当指定列轴（`axis='columns'`）时，`quantile()`方法会按列计算分位数，并返回每行的均值。以下代码将为我们提供整个DataFrame的10%分位数：
- en: '[PRE13]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can also pass a list of quantiles:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以传递一个分位数组：
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The `pivot()` function is used to reshape a given DataFrame structured by supplied
    index or column values and is one of the different types of functions that we
    can use to change the data. Data aggregation is not supported by this function;
    multiple values produce a `MultiIndex` in the columns:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`pivot()`函数用于根据提供的索引或列值重塑给定的DataFrame，并且是我们可以用来改变数据的不同类型函数之一。此函数不支持数据聚合；多个值会在列中产生`MultiIndex`：'
- en: '[PRE15]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Pivot tables are one of pandas’ most powerful features. A pivot table allows
    us to draw insights from data. pandas provides a similar function called `pivot_table()`.
    It is a simple function but can produce a very powerful analysis very quickly.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 数据透视表是pandas最强大的功能之一。数据透视表让我们从数据中提取洞见。pandas提供了一个类似的功能，叫做`pivot_table()`。它是一个简单的函数，但能非常快速地产生强大的分析结果。
- en: The next step for us will be to learn how to visualize the data to create proper
    storytelling and appropriate interpretations.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤是学习如何可视化数据，以便进行恰当的故事讲述和解释。
- en: Visualizing patterns with Seaborn
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Seaborn可视化模式
- en: Seaborn is a Python data visualization library based on Matplotlib. It offers
    a sophisticated drawing tool for creating eye-catching and educational statistical
    visuals.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn是一个基于Matplotlib的Python数据可视化库。它提供了一个精致的绘图工具，用于创建引人注目且具有教育意义的统计图形。
- en: The primary distinction between Seaborn and Matplotlib is how well Seaborn handles
    pandas DataFrames. Beautiful graphics are provided in Python by using simple sets
    of functions. When dealing with DataFrames and arrays, Matplotlib performs well.
    It views axes and figures as objects. There are several stateful plotting APIs
    in it.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn和Matplotlib的主要区别在于Seaborn如何处理pandas DataFrame。使用简单的函数集，Python可以提供美丽的图形。当处理DataFrame和数组时，Matplotlib表现出色，它将坐标轴和图形视为对象，并提供了几种有状态的绘图API。
- en: 'Here, we will start our examples using the “tips” dataset, which contains a
    mixture of numeric and categorical variables:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将开始使用“tips”数据集进行示例，该数据集包含数字和分类变量的混合：
- en: '[PRE16]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the preceding code snippet, we have imported Seaborn and Matplotlib; the
    latter allows users to control certain aspects of the plots created, such as the
    figure size, which we defined as a 12 by 6 inches size. This creates the layout
    in which Seaborn will place the visualization.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，我们导入了Seaborn和Matplotlib；后者允许用户控制图表创建的某些方面，例如图形大小，我们将其定义为12x6英寸。这创建了Seaborn将放置可视化内容的布局。
- en: 'We are using the `scatterplot()` function to create a visualization of points
    where the *X*-axis refers to the `total_bill` variable and the *Y*-axis refers
    to the `tip` variable. Here, we are using the `hue` parameter to color the different
    dots according to the `time` categorical variable, which allows us to plot numerical
    data with a categorical dimension:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`scatterplot()`函数来创建一个点的可视化，其中*X*轴表示`total_bill`变量，*Y*轴表示`tip`变量。在这里，我们使用`hue`参数根据`time`分类变量为不同的点上色，从而允许我们用分类维度绘制数值数据：
- en: '![Figure 1.1: Seaborn scatterplot with the color depending on the categorical
    variable ](img/B19026_01_1.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1：Seaborn散点图，颜色取决于分类变量](img/B19026_01_1.jpg)'
- en: 'Figure 1.1: Seaborn scatterplot with the color depending on the categorical
    variable'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1：Seaborn散点图，颜色取决于分类变量
- en: This generated figure shows the distribution of the data according to the color
    codes that we have specified, which in our case are the tips that were received,
    their relationship with the total bill amount, and whether it was during lunch
    or dinner.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图形显示了根据我们指定的颜色代码（在我们这种情况下是收到的小费、它们与总账单金额的关系以及是否为午餐或晚餐时段）分布的数据。
- en: The interpretation that we can make is that there might be a linear relationship
    between the total amount of the bill and the tip received. But if we look closer,
    we can see that the highest total bill amounts are placed during dinner, also
    leading to the highest values in tips.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以得出的解释是，总账单金额和收到的小费之间可能存在线性关系。但如果我们仔细观察，会发现最高的账单总额出现在晚餐时段，同时也导致了最高的小费值。
- en: This information can be really useful in the context of business, but it first
    needs to be validated with proper hypothesis testing approaches, which can be
    a t-test to validate these hypotheses, plus a linear regression analysis to conclude
    that there is a relationship between the total amount and the tip distribution,
    accounting for the differences in the time in which this occurred. We will look
    into these analyses in the next chapter.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在商业领域，这些信息可能非常有用，但首先需要通过适当的假设检验方法进行验证，可以使用t检验来验证这些假设，再加上线性回归分析来得出总金额与小费分布之间存在关系的结论，同时考虑到发生这一过程的时间差异。我们将在下一章中探讨这些分析。
- en: We can now see how a simple exploration graph can help us construct the hypothesis
    over which we can base decisions to better improve business products or services.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以看到，简单的探索图如何帮助我们构建假设，并在此基础上做出决策，从而更好地改进商业产品或服务。
- en: 'We can also assign hue and style to different variables that will vary colors
    and markers independently. This allows us to introduce another categorical dimension
    in the same graph, which in the case of Seaborn can be used with the `style` parameter,
    which will assign different types of markers according to our referenced categorical
    variable:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以将色调和样式分配给不同的变量，这样就能独立地改变颜色和标记。这使我们可以在同一个图表中引入另一个分类维度，在Seaborn中可以使用`style`参数，根据我们参考的分类变量分配不同类型的标记：
- en: '[PRE17]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The preceding code snippet will create a layout that’s 12 x 6 inches and will
    add information about the `time` categorical variable, as shown in the following
    graph:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码片段将创建一个12x6英寸的布局，并添加关于`time`分类变量的信息，如下图所示：
- en: '![Figure 1.2: Seaborn scatterplot with color and shape depending on the categorical
    variable ](img/B19026_01_2.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2：Seaborn 散点图，颜色和形状依赖于分类变量 ](img/B19026_01_2.jpg)'
- en: 'Figure 1.2: Seaborn scatterplot with color and shape depending on the categorical
    variable'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2：Seaborn 散点图，颜色和形状依赖于分类变量
- en: This kind of graph allows us to pack a lot of information into a single plot,
    which can be beneficial but also can lead to a cluttering of information that
    can be difficult to digest at once. It is important to always account for the
    understanding of the information that we want to show, making it easier for the
    stakeholders to be able to see the relationships at a glance.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的图表允许我们将大量信息集成到单个图中，这可能是有益的，但也可能导致信息过载，一次难以消化。重要的是始终考虑我们想要展示的信息的理解，使利益相关者能够一目了然地看到关系。
- en: Here, it is much more difficult to see any kind of interpretation of the days
    of the week at first glance. This is because a lot of information is already being
    shown. These differences that cannot be obtained by simply looking at a graph
    can be achieved through other kinds of analysis, such as statistical tests, correlations,
    and causations.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，一开始很难看出任何对一周中哪些天进行解释的信息。这是因为已经显示了大量信息。通过其他类型的分析，如统计测试、相关性和因果关系，可以获得不能仅通过观察图表获得的这些差异。
- en: Another way to add more dimensions to the graphics created with Seaborn is to
    represent numerical variables as the size of the points in the scatterplot. Numerical
    variables can be assigned to `size` to apply a semantic mapping to the areas of
    the points.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种通过 Seaborn 创建的图形添加更多维度的方式是将数值变量表示为散点图中点的大小。可以将数值变量分配给 `size`，以对点的面积应用语义映射。
- en: 'We can control the range of marker areas with sizes, and set the legend parameter
    to `full` to force every unique value to appear in the legend:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过大小控制标记区域的范围，并将 legend 参数设置为 `full`，以强制每个唯一值都出现在图例中：
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The preceding code snippet creates a scatterplot where the points have a size
    and color that depends on the `size` variable. This can be useful to pack another
    numerical dimension into these kinds of plots:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段创建了一个散点图，其中点的大小和颜色取决于 `size` 变量。这对于在这类图中再添加另一个数值维度非常有用：
- en: '![Figure 1.3: Seaborn scatterplot with size depending on a third variable ](img/B19026_01_3.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3：Seaborn 散点图，大小依赖于第三变量 ](img/B19026_01_3.jpg)'
- en: 'Figure 1.3: Seaborn scatterplot with size depending on a third variable'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3：Seaborn 散点图，大小依赖于第三变量
- en: Another important way to represent data is by looking at time series information.
    We can use the Seaborn package to display time series data without the need to
    give the data any special treatment.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 表示数据的另一重要方式是查看时间序列信息。我们可以使用 Seaborn 包显示时间序列数据，无需对数据进行任何特殊处理。
- en: 'In the following example, we are creating a pandas DataFrame with dates, using
    Matplotlib to create a figure that’s 15 x 8 inches, and then using the Seaborn
    `lineplot` function to display the information:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们正在创建一个带有日期的 pandas DataFrame，使用 Matplotlib 创建一个 15 x 8 英寸的图形，然后使用
    Seaborn 的 `lineplot` 函数显示信息：
- en: '[PRE19]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The preceding example creates a wonderful plot with the dates on the *x* axis
    and the `count` variable on the *y* axis:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例创建了一个将日期放在 *x* 轴上，`count` 变量放在 *y* 轴上的精彩图表：
- en: '![Figure 1.4: Seaborn line plot with a time-based axis ](img/B19026_01_4.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4：Seaborn 时间轴线图 ](img/B19026_01_4.jpg)'
- en: 'Figure 1.4: Seaborn line plot with a time-based axis'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4：Seaborn 时间轴线图
- en: For the following example, we will load a pre-defined dataset from Seaborn known
    as the FMRI dataset, which contains time series data.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们将加载一个称为 FMRI 数据集的预定义数据集，其中包含时间序列数据。
- en: 'First, we will load an example dataset with long-form data and then plot the
    responses for different events and regions. To do this, we will create a 15 x
    8 inches Matplotlib figure and use the `lineplot` function to show the information,
    using the `hue` parameter to display categorical information about the region,
    and the `style` parameter to show categorical information about the type of event:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将加载一个包含长格式数据的示例数据集，然后绘制不同事件和地区的响应。为此，我们将创建一个 15 x 8 英寸的 Matplotlib 图形，并使用
    `lineplot` 函数显示信息，使用 `hue` 参数显示关于地区的分类信息，并使用 `style` 参数显示关于事件类型的分类信息：
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The preceding code snippet creates a display of the information that allows
    us to study how the variables move through time according to the different categorical
    aspects of the data:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段创建了一个展示信息的图表，允许我们研究变量随时间变化的情况，依据数据的不同类别特征：
- en: '![Figure 1.5: Seaborn line plot with confidence intervals ](img/B19026_01_5.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5：Seaborn 线图与置信区间](img/B19026_01_5.jpg)'
- en: 'Figure 1.5: Seaborn line plot with confidence intervals'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5：Seaborn 线图与置信区间
- en: One of the features of the Seaborn `lineplot` function is that it shows us the
    confidence intervals of all points within a range of 95% confidence; the solid
    line represents the main. This way of showing us the information can be really
    useful when showing time series data that contains multiple data points for each
    point in time. Trends can be visualized by the mean as well as to give us a sense
    of the degree of dispersion, which is something that can be important when analyzing
    behavior patterns.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn `lineplot` 函数的一个特点是它展示了在 95% 置信区间内所有数据点的置信区间；实线表示均值。这种方式在展示包含多个数据点的时间序列数据时非常有用。趋势可以通过均值来可视化，同时也能让我们感知数据的分散程度，这在分析行为模式时是非常重要的。
- en: 'One of the ways we can visualize data is through bar plots. Seaborn uses the
    `barplot` function to create bar plots:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过条形图来可视化数据。Seaborn 使用 `barplot` 函数来创建条形图：
- en: '[PRE21]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The preceding code uses Matplotlib to create a 12 x 6 inches figure where the
    Seaborn bar plot is created. Here, we will display the days on the *x* axis and
    the total bill on the *y* axis, showing the confidence bars as whiskers above
    the bars. The preceding code generates the following graph:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码使用 Matplotlib 创建了一个 12 x 6 英寸的图形，其中生成了 Seaborn 条形图。在这里，我们将在 *x* 轴上显示日期，在
    *y* 轴上显示总账单，显示置信区间作为触须出现在条形上方。上面的代码生成了以下图表：
- en: '![Figure 1.6: Seaborn bar plot ](img/B19026_01_6.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6：Seaborn 条形图](img/B19026_01_6.jpg)'
- en: 'Figure 1.6: Seaborn bar plot'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6：Seaborn 条形图
- en: 'In the preceding graph, we cannot see the whiskers in detail as the data has
    a very small amount of dispersion. We can see this in better detail by drawing
    a set of vertical bars while grouping them by two variables:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述图表中，我们无法详细看到触须，因为数据的分散程度非常小。我们可以通过绘制一组垂直条形图并按两个变量进行分组，来更好地查看这一点：
- en: '[PRE22]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The preceding code snippet creates a bar plot on a 12 x 6-inch Matplotlib figure.
    The difference is that we use the `hue` parameter to show gender differences:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段在 12 x 6 英寸的 Matplotlib 图形上创建了一个条形图。不同之处在于我们使用 `hue` 参数来显示性别差异：
- en: '![Figure 1.7: Seaborn bar plot with categorical data ](img/B19026_01_7.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7：Seaborn 条形图与类别数据](img/B19026_01_7.jpg)'
- en: 'Figure 1.7: Seaborn bar plot with categorical data'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7：Seaborn 条形图与类别数据
- en: One of the conclusions that can be extracted from this graph is that females
    get to have total bills that are lower than males on average, with Saturday being
    the only day when there’s a difference between the means, though there’s a much
    lower basepoint for the dispersion.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 从这张图中可以得出的一个结论是，女性的总账单通常低于男性，只有星期六是均值存在差异的那一天，尽管在分散程度上有一个更低的基准点。
- en: 'We can add another categorical dimension to the visualization using `catplot`
    to combine a `barplot` with a FacetGrid to create multiple plots. This allows
    us to group within additional categorical variables. Using `catplot` is safer
    than using FacetGrid to create multiple graphs as it ensures synchronization of
    variable order across different facets:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用 `catplot` 向可视化中添加另一个类别维度，将 `barplot` 与 FacetGrid 结合来创建多个图表。这允许我们在额外的类别变量中进行分组。使用
    `catplot` 比使用 FacetGrid 创建多个图表更安全，因为它确保了不同小面板之间变量顺序的同步：
- en: '[PRE23]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The preceding code snippet generates a categorical plot that contains the different
    bar plots. Note that the size of the graph is controlled using the `height` and
    `aspect` variables instead of via a Matplotlib figure:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段生成了一个包含不同条形图的类别图。注意，图表的大小是通过 `height` 和 `aspect` 变量来控制的，而不是通过 Matplotlib
    图形：
- en: '![Figure 1.8: Seaborn bar plot with two categorical variables ](img/B19026_01_8.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8：Seaborn 条形图与两个类别变量](img/B19026_01_8.jpg)'
- en: 'Figure 1.8: Seaborn bar plot with two categorical variables'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8：Seaborn 条形图与两个类别变量
- en: Here, we can see an interesting trend during lunch, where the mean of the male
    smokers is lower than the non-smokers, while the female smoker’s mean is higher
    than those of non-smokers. This tendency is inverted during dinner when there
    are more male smokers on average than female smokers.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到在午餐时间，男性吸烟者的平均值低于非吸烟者，而女性吸烟者的平均值高于非吸烟者。这种趋势在晚餐时反转，晚餐时男性吸烟者的平均值高于女性吸烟者。
- en: 'Analyzing trends using histograms is a wonderful tool to be used while analyzing
    patterns. We can use them with the Searbon `hisplot` function. Here, we will use
    the `penguins` dataset and create a Matplotlib figure that’s 12 x 6 inches:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析模式时使用直方图分析趋势是一种很好的工具。我们可以使用 Seaborn 的`hisplot`函数。在这里，我们将使用`penguins`数据集，并创建一个
    Matplotlib 图形，大小为12 x 6英寸：
- en: '[PRE24]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The preceding code creates a histogram of the flipper length grouping data
    in 30 bins:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码创建了一个分组数据中翻转长度的直方图，分为30个箱子：
- en: '![Figure 1.9: Seaborn histogram plot ](img/B19026_01_9.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.9: Seaborn 直方图绘图](img/B19026_01_9.jpg)'
- en: 'Figure 1.9: Seaborn histogram plot'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.9: Seaborn 直方图绘图'
- en: Here, we can add a kernel density line estimate, which softens the histogram,
    providing more information about the shape of the data distribution.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以添加一个核密度线估计，软化直方图，提供关于数据分布形状的更多信息。
- en: 'The following code adds the `kde` parameter set to `True` to show this line:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码添加了`kde`参数，设为`True`以显示此行：
- en: '[PRE25]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Figure 1.10: Seaborn histogram plot with KDE estimated density ](img/B19026_01_10.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10: 使用 KDE 估计密度的 Seaborn 直方图绘图](img/B19026_01_10.jpg)'
- en: 'Figure 1.10: Seaborn histogram plot with KDE estimated density'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.10: 使用 KDE 估计密度的 Seaborn 直方图绘图'
- en: Here, we can see that the data approaches some superimposed standard distribution,
    which can mean that we are looking at different kinds of data.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到数据接近一些叠加的标准分布，这可能意味着我们正在观察不同类型的数据。
- en: 'We can also add more dimensions to the graph by using the `hue` parameter on
    the categorical `species` variable:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过在分类变量`species`上使用`hue`参数向图形添加更多维度：
- en: '[PRE26]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Figure 1.11: Seaborn histogram plot with categorical data ](img/B19026_01_11.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11: 使用分类数据的 Seaborn 直方图绘图](img/B19026_01_11.jpg)'
- en: 'Figure 1.11: Seaborn histogram plot with categorical data'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.11: 使用分类数据的 Seaborn 直方图绘图'
- en: As suspected, we were looking at the superposition of different species of penguins,
    each of which has a normal distribution, though some of them are more skewed than
    others.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所怀疑的那样，我们正在观察企鹅的不同物种的叠加，每种物种都具有正态分布，尽管有些比其他物种更倾斜。
- en: 'The `pairplot` function can be used to plot several paired bivariate distributions
    in a dataset. The diagonal plots are the univariate plots, and this displays the
    relationship for the (n, 2) combination of variables in a DataFrame as a matrix
    of plots. `pairplot` is used to determine the most distinct clusters or the best
    combination of features to explain the relationship between two variables. Constructing
    a linear separation or some simple lines in our dataset also helps to create some
    basic classification models:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`pairplot`函数可用于绘制数据集中的多个成对的双变量分布。对角线图是单变量图，显示了DataFrame中变量(n, 2)组合的关系作为一组图。`pairplot`用于确定最显著的集群或最佳的特征组合以解释两个变量之间的关系。在我们的数据集中构建线性分离或一些简单的线条也有助于创建一些基本的分类模型：'
- en: '[PRE27]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The preceding line of code creates a `pairplot` of the data where each box
    has a height of 3 inches:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码创建了一个数据的`pairplot`，其中每个框的高度为3英寸：
- en: '![Figure 1.12: Variable relationship and histogram of selected features ](img/B19026_01_12.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.12: 变量关系和选择特征的直方图](img/B19026_01_12.jpg)'
- en: 'Figure 1.12: Variable relationship and histogram of selected features'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.12: 变量关系和选择特征的直方图'
- en: The variable names are shown on the matrix’s outer borders, making it easy to
    comprehend. The density plot for each variable is shown in the boxes along the
    diagonals. The scatterplot between each variable is displayed in the boxes in
    the lower left corner.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 变量名称显示在矩阵的外部边界上，使其易于理解。每个变量的密度图显示在对角线上的框中。每个变量之间的散点图显示在左下角的框中。
- en: 'We can also use the `hue` parameter to add categorical dimensions to the visualization:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`hue`参数将分类维度添加到可视化中：
- en: '[PRE28]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Figure 1.13: Variable relationship and histogram with categorical labels
    ](img/B19026_01_13.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.13: 带分类标签的变量关系和直方图](img/B19026_01_13.jpg)'
- en: 'Figure 1.13: Variable relationship and histogram with categorical labels'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.13: 带分类标签的变量关系和直方图'
- en: Although incredibly useful, this graph can be very computationally expensive,
    which can be solved by looking only at some of the variables instead of the whole
    dataset.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管非常有用，但这个图表可能计算开销很大，这个问题可以通过仅查看部分变量而非整个数据集来解决。
- en: 'We can reduce the time required to render the visualization by reducing the
    number of graphs shown. We can do this by specifying the types of variables we
    want to show in each axis, as shown in the following block of code:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过减少显示的图形数量来缩短渲染可视化所需的时间。我们可以通过指定每个轴上要显示的变量类型来实现这一点，如下代码块所示：
- en: '[PRE29]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![Figure 1.14: Variable relationship and histogram of selected features ](img/B19026_01_14.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.14: 选定特征的变量关系和直方图](img/B19026_01_14.jpg)'
- en: 'Figure 1.14: Variable relationship and histogram of selected features'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.14: 选定特征的变量关系和直方图'
- en: A box plot, sometimes referred to as a box-and-whisker plot in descriptive statistics,
    is a type of chart that is frequently used in explanatory data analysis. Box plots
    use the data’s quartiles (or percentiles) and averages to visually depict the
    distribution of numerical data and skewness.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 箱型图，有时也被称为描述性统计中的箱线图，是一种在解释性数据分析中常用的图表类型。箱型图使用数据的四分位数（或百分位数）和均值，直观地描述数值数据的分布情况及偏斜度。
- en: 'We can use them in Seaborn using the `boxplot` function, as shown here:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 Seaborn 的`boxplot`函数来使用这些功能，如下所示：
- en: '[PRE30]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![Figure 1.15: Seaborn box plot ](img/B19026_01_15.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.15: Seaborn 箱型图](img/B19026_01_15.jpg)'
- en: 'Figure 1.15: Seaborn box plot'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.15: Seaborn 箱型图'
- en: The seaborn box plot has a very simple structure. Distributions are represented
    visually using box plots. When you want to compare data between two groups, they
    are helpful. A box plot may also be referred to as a box-and-whisker plot. Any
    box displays the dataset’s quartiles, and the whiskers extend to display the remainder
    of the distribution.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 箱型图结构非常简单。分布情况通过箱型图可视化。当你想比较两个组之间的数据时，它们非常有用。箱型图也可以称为箱线图。每个箱子显示数据集的四分位数，而须线则延伸以展示其余的分布。
- en: 'Here, we can specify a type of categorical variable we might want to show using
    the `hue` parameter, as well as specify the palette of colors we want to use from
    Seaborn’s default options:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以使用`hue`参数来指定我们想要展示的某种类别变量类型，同时指定我们想使用的 Seaborn 默认颜色调色板：
- en: '[PRE31]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Figure 1.16: Seaborn box plot with categorical data ](img/B19026_01_16.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.16: 带有分类数据的 Seaborn 箱型图](img/B19026_01_16.jpg)'
- en: 'Figure 1.16: Seaborn box plot with categorical data'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1.16: 带有分类数据的 Seaborn 箱型图'
- en: There is always the question of when you would use a box plot. Box plots are
    used to display the distributions of numerical data values, particularly when
    comparing them across various groups. They are designed to give high-level information
    at a glance and provide details like the symmetry, skew, variance, and outliers
    of a set of data.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 总是会有一个问题：何时使用箱型图。箱型图用于显示数值数据的分布，尤其是在跨多个组进行比较时。它们旨在通过一瞥提供高层次信息，并提供诸如对称性、偏斜度、方差和异常值等数据集的详细信息。
- en: Summary
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we introduced the initial concepts of how we can store and
    manipulate data with pandas and NumPy, and how to visualize data patterns using
    Seaborn. These elements are used not only to explore the data but to be able to
    create visual narratives that allow us to understand patterns in the data and
    to be able to communicate simply and practically.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了如何使用 pandas 和 NumPy 存储和操作数据，以及如何使用 Seaborn 可视化数据模式的初步概念。这些元素不仅用于探索数据，还用于创建可视化叙事，让我们能够理解数据中的模式，并以简单而实用的方式进行沟通。
- en: In the next chapter, we will build upon this to understand how machine learning
    and descriptive statistics can be used to validate hypotheses, study correlations
    and causations, as well as to make predictive models.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将基于此了解如何利用机器学习和描述性统计来验证假设、研究相关性与因果关系，并且构建预测模型。
