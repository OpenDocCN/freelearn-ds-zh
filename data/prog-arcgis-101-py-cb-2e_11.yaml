- en: Chapter 11. Customizing the ArcGIS Interface with Add-Ins
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 章. 使用插件自定义 ArcGIS 界面
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Downloading and installing the Python Add-In wizard
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载和安装 Python 插件向导
- en: Creating a button add-in
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建按钮插件
- en: Installing and testing an add-in
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和测试插件
- en: Creating a tool add-in
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建工具插件
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we're going to cover the creation, testing, editing, and sharing
    of add-ins created with Python. **Add-ins** provide a way of adding user interface
    items to ArcGIS Desktop through a modular code base designed to perform specific
    actions. Interface components can include buttons, tools, toolbars, menus, combo
    boxes, tool palettes, and application extensions. The add-in concept was first
    introduced in ArcGIS Desktop 10.0 and could be created with .NET or Java. However,
    with the release of ArcGIS 10.1, add-ins can now be created with Python. Add-ins
    are created using Python scripts and an XML file that defines how the user interface
    should appear.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍使用 Python 创建插件的创建、测试、编辑和共享。**插件**提供了一种通过模块化代码库向 ArcGIS Desktop 添加用户界面元素的方法，该代码库旨在执行特定操作。界面组件可以包括按钮、工具、工具栏、菜单、组合框、工具板和应用程序扩展。插件概念首次在
    ArcGIS Desktop 10.0 中引入，可以使用 .NET 或 Java 创建。然而，随着 ArcGIS 10.1 的发布，现在可以使用 Python
    创建插件。插件使用 Python 脚本和一个定义用户界面应如何显示的 XML 文件创建。
- en: Add-ins provide an easy way to distribute user interface customizations to end
    users. No installation programs are necessary. A single compressed file with a
    file extension of `.esriaddin` is copied to a well-known folder, and ArcGIS Desktop
    handles the rest. To simplify the development even further, a Python Add-In wizard
    has been provided by Esri. You can download the wizard from the Esri website.
    We'll do that in our first recipe in this chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 插件提供了一种简单的方式来向最终用户分发用户界面自定义。不需要安装程序。只需将一个扩展名为 `.esriaddin` 的单个压缩文件复制到已知文件夹中，ArcGIS
    Desktop 就会处理其余部分。为了进一步简化开发，Esri 提供了 Python 插件向导。您可以从 Esri 网站下载向导。我们将在本章的第一个菜谱中这样做。
- en: There are a number of add-in types that can be created. Buttons and tools are
    the simplest type of add-ins that you can create. Buttons simply execute business
    logic when clicked. Tools are similar to buttons but require interaction with
    the map before the business logic is executed. Combo boxes provide a list of choices
    for the user to select from.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 可以创建多种类型的插件。按钮和工具是最简单的插件类型，您可以创建。按钮在点击时简单地执行业务逻辑。工具与按钮类似，但在执行业务逻辑之前需要与地图进行交互。组合框为用户提供了一组选项供其选择。
- en: There are also a number of container objects including menus, toolbars, tool
    palettes, and application extensions. Menus act as a container for buttons or
    other menus. Toolbars are a container for buttons, tools, combo boxes, tool palettes,
    and menus. They are the most versatile of the add-in container types. Tool palettes
    also act as a container for tools, and need to be added to a toolbar before the
    tools will be exposed. Finally, application extensions are the most complex add-in
    type. This type of add-in coordinates activities between other components and
    is responsible for listening for and responding to various events, such as the
    addition or removal of a layer from a data frame.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些容器对象，包括菜单、工具栏、工具板和应用扩展。菜单充当按钮或其他菜单的容器。工具栏是按钮、工具、组合框、工具板和菜单的容器。它们是插件容器类型中最灵活的。工具板也充当工具的容器，需要在工具暴露之前添加到工具栏中。最后，应用程序扩展是最复杂的插件类型。此类插件协调其他组件之间的活动，并负责监听和响应各种事件，例如从数据帧中添加或删除图层。
- en: Downloading and installing the Python Add-In wizard
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载和安装 Python 插件向导
- en: Esri provides a tool that you can use to make the development of add-ins easier.
    The Python Add-In wizard can be downloaded from the Esri website and is a great
    resource for creating your add-ins.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Esri提供了一款工具，可以帮助您简化插件的开发。Python 插件向导可以从 Esri 网站下载，是创建插件的一个很好的资源。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Python Add-In Wizard, is a great resource for creating the necessary files
    for an add-in. It generates the required files for the add-ins from a visual interface.
    In this recipe, you will download and install the Python Add-In wizard.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Python 插件向导是一个创建插件所需文件的极好资源。它从可视化界面生成所需的插件文件。在本菜谱中，您将下载并安装 Python 插件向导。
- en: How to do it…
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to download and install the Python Add-in wizard:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何下载和安装 Python 添加组件向导：
- en: 'Open a web browser and navigate to: [http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b](http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b).'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开网页浏览器并导航到：[http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b](http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b)。
- en: 'You should see a web page similar to the following screenshot:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您应该看到一个类似于以下截图的网页：
- en: '![How to do it…](img/4445_11_1.jpg)'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/4445_11_1.jpg)'
- en: Click on the **Open** button to download the installer file.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**打开**按钮以下载安装文件。
- en: Using Windows Explorer, create a new folder called `Python Add-In Wizard` somewhere
    on your computer. The name of the folder is irrelevant, but to keep things simple
    and easy to remember you should go with `Python Add-In Wizard` or something similar.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Windows 资源管理器，在您的计算机上创建一个名为 `Python Add-In Wizard` 的新文件夹。文件夹的名称无关紧要，但为了简单易记，您应该选择
    `Python Add-In Wizard` 或类似名称。
- en: Unzip the file to this new folder There are many utilities that can be used
    to unzip a file. Each will differ slightly in how they are used but with WinZip,
    you should be able to right-click on the file and select **Extract**.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件解压缩到这个新文件夹中。有许多工具可以用来解压缩文件。每个工具的使用方法略有不同，但使用 WinZip，您应该可以右键单击文件并选择**解压缩**。
- en: Open the `bin` folder that was unzipped and double-click on `addin_assistant.exe`
    to run the wizard. In the following screenshot, I have created a new folder called
    `Python Add-In Wizard` and unzipped the downloaded file. The `bin` folder was
    created and inside this folder is a file called `addin_assistant.exe`:![How to
    do it…](img/4445_11_2.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开解压缩的 `bin` 文件夹，双击 `addin_assistant.exe` 以运行向导。在以下截图中，我已创建一个名为 `Python Add-In
    Wizard` 的新文件夹并解压缩了下载的文件。`bin` 文件夹已创建，并且在这个文件夹中有一个名为 `addin_assistant.exe` 的文件：![如何操作…](img/4445_11_2.jpg)
- en: Double-clicking on `addin_assistant.exe` will prompt you to choose a directory
    to use as the add-in project root:![How to do it…](img/4445_11_3.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 `addin_assistant.exe` 将提示您选择一个用作添加组件项目根目录的目录：![如何操作…](img/4445_11_3.jpg)
- en: How it works…
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The Python Add-In wizard is a visual interface tool that you can use to create
    add-ins for ArcGIS Desktop. It greatly simplifies the process through a point-and-click
    tool. In the next recipe, you'll create basic ArcGIS Desktop add-in using the
    wizard.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Python 添加组件向导是一个可视化界面工具，您可以使用它为 ArcGIS Desktop 创建添加组件。它通过点选工具大大简化了过程。在下一个示例中，您将使用向导创建基本的
    ArcGIS Desktop 添加组件。
- en: Creating a button add-in
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建按钮添加组件
- en: Button add-ins are the simplest types of add-ins and are also the most commonly
    used. With button add-ins, the functionality that you code in your script is executed
    each time the button is clicked.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮添加组件是最简单的添加组件类型，也是最常用的。使用按钮添加组件，您在脚本中编写的功能将在每次点击按钮时执行。
- en: Getting ready
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Creating an add-in project is the first step in the creation of a new add-in.
    To create a project using the Python Add-In wizard, you select a working directory,
    enter various project settings, and click on the **Save** button. Creation of
    the add-in then follows a well-defined process, as illustrated in the following
    screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 创建添加组件项目是创建新添加组件的第一步。要使用 Python 添加组件向导创建项目，您选择工作目录，输入各种项目设置，然后点击**保存**按钮。添加组件的创建随后遵循一个定义良好的过程，如以下截图所示：
- en: '![Getting ready](img/4445OT_11_04a.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/4445OT_11_04a.jpg)'
- en: You must first create a container for the add-in and this can be either a toolbar
    or a menu. Next, create the button, tool, or another add-in that you want to add
    to the container. In this recipe, we'll just assume it's a button. Next, you need
    to edit the Python script associated with the button. You'll also want to test
    the button to make sure it works as expected. Finally, you can share the add-in
    with others. In this recipe, you'll learn how to use the Add-In wizard to create
    a button add-in for ArcGIS Desktop. The button add-in will run a custom script
    tool that you created in an earlier recipe, which loads wildfire data from a text
    file to a point feature class.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须首先为添加组件创建一个容器，这可以是工具栏或菜单。接下来，创建您想要添加到容器中的按钮、工具或另一个添加组件。在本例中，我们假设它是一个按钮。接下来，您需要编辑与按钮关联的
    Python 脚本。您还希望测试按钮以确保其按预期工作。最后，您可以与他人共享添加组件。在本例中，您将学习如何使用添加组件向导创建 ArcGIS Desktop
    的按钮添加组件。按钮添加组件将运行您在早期示例中创建的自定义脚本工具，该工具从文本文件将野火数据加载到点要素类中。
- en: How to do it...
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to create a button add-in:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何创建按钮附加组件：
- en: Open the ArcGIS Python Add-In wizard by double-clicking on the `addin_assistant.exe`
    file located in the `bin` folder, where you extracted the wizard.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击位于您提取向导的`bin`文件夹中的`addin_assistant.exe`文件来打开 ArcGIS Python 附加组件向导。
- en: Create a new project folder called `Wildfire_Addin` and click **OK**:![How to
    do it...](img/4445_11_4.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Wildfire_Addin`的新项目文件夹并单击**确定**：![如何操作...](img/4445_11_4.jpg)
- en: The **Project Settings** tab should be active initially and display the working
    directory you just created. By default, ArcMap should be the selected product,
    but you should verify that this is the case:![How to do it...](img/4445_11_5.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**项目设置**选项卡最初应该是活动的，并显示您刚刚创建的工作目录。默认情况下，ArcMap 应该是选定的产品，但您应该验证这一点：![如何操作...](img/4445_11_5.jpg)'
- en: Give your project a name. We'll call it `Load Wildfire Data Addin`:![How to
    do it...](img/4445_11_6.jpg)
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给您的项目起一个名字。我们将称之为`Load Wildfire Data Addin`：![如何操作...](img/4445_11_6.jpg)
- en: By default, the Version is 0.1\. You can change this if you'd like. Version
    numbers should change as you update or make additions to your tool. This helps
    with tracking and sharing of your add-ins:![How to do it...](img/4445_11_7.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，版本号为0.1。如果您愿意，可以更改此值。版本号应在您更新或添加工具时更改。这有助于跟踪和共享您的附加组件：![如何操作...](img/4445_11_7.jpg)
- en: The name and version properties are the only two required properties. It's a
    good practice to go ahead and add the company, description, and author information
    as shown in the following screenshot. Add your own information:![How to do it...](img/4445_11_8.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 名称和版本属性是仅有的两个必需属性。按照以下截图所示，添加公司、描述和作者信息是一个好习惯。添加您自己的信息：![如何操作...](img/4445_11_8.jpg)
- en: You may also wish to add an image for the add-in. A file called `wildfire.png`
    has been provided for this purpose in the `C:\ArcpyBook\Ch11` folder:![How to
    do it...](img/4445_11_9.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能还希望为附加组件添加图片。在`C:\ArcpyBook\Ch11`文件夹中提供了一个名为`wildfire.png`的文件用于此目的：![如何操作...](img/4445_11_9.jpg)
- en: The **Add-In Contents** tab is used to define the various add-ins that can be
    created. In this step, we're going to create a toolbar to hold a single button
    add-in that runs a wildfire script, which imports `fires` from a text file into
    a feature class. Click on the **Add-In Contents** tab:![How to do it...](img/4445_11_10.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**附加组件内容**选项卡用于定义可以创建的各种附加组件。在此步骤中，我们将创建一个工具栏，用于包含一个运行野火脚本的单个按钮附加组件，该脚本将`fires`从文本文件导入到要素类中。单击**附加组件内容**选项卡：![如何操作...](img/4445_11_10.jpg)'
- en: In the **Add-In Contents** tab, right-click on **Toolbars** and select **New
    Toolbar**. Give the toolbar a caption, accept the default ID, and make sure the
    **Show Initially** checkbox is selected:![How to do it...](img/4445_11_11.jpg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**附加组件内容**选项卡中，右键单击**工具栏**并选择**新建工具栏**。为工具栏添加标题，接受默认ID，并确保选中**初始显示**复选框：![如何操作...](img/4445_11_11.jpg)
- en: The **Toolbar** add-in, while it doesn't do a whole lot functionally, is very
    important because it acts as a container for other add-ins such as buttons, tools,
    combo boxes, tool palettes, and menus. Toolbars can be floating or docked. Creating
    a toolbar add-in is easy using the Python Add-In wizard.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**工具栏**附加组件虽然功能上并不太多，但非常重要，因为它充当其他附加组件（如按钮、工具、组合框、工具板和菜单）的容器。工具栏可以是浮动的或停靠的。使用
    Python 附加组件向导创建工具栏附加组件很容易。'
- en: Click on the **Save** button.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**保存**按钮。
- en: Now, we'll add a button by right-clicking on the new **Wildfire Toolbar** option
    and selecting **New Button**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过在新**Wildfire 工具栏**选项上右键单击并选择**新建按钮**来添加一个按钮。
- en: Fill in the button details including a caption, class name, ID, tooltip, and
    others. You can also include an image for the control. I haven't done so in this
    case, but you may want to do so. This information is saved to the configuration
    file for the add-in:![How to do it...](img/4445_11_12.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写按钮详细信息，包括标题、类名、ID、工具提示等。您还可以为控件添加图片。在此情况下，我没有这样做，但您可能希望这样做。这些信息将保存到附加组件的配置文件中：![如何操作...](img/4445_11_12.jpg)
- en: Click on the **Save** button.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**保存**按钮。
- en: Add-ins have a Python script that they are attached to. This file, by default,
    will be named `AddIns_addin.py` and can be found in the `install` directory of
    your working project folder.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 附加组件有一个与之关联的 Python 脚本。默认情况下，此文件将命名为`AddIns_addin.py`，并位于您工作项目文件夹的`install`目录中。
- en: We've already created a custom ArcToolbox Python script tool that loads a comma-delimited
    text file from a disk containing wildfire data into a feature class. We will be
    using this script in our add-in. In Windows Explorer, go to the `addin` directory
    you created earlier. It should be called `Wildfire_Addin`. Go to the `Install`
    folder and you should find a file called `WildfireAddin_addin.py`. Load this file
    into your Python editor.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经创建了一个自定义的ArcToolbox Python脚本工具，该工具可以从包含野火数据的磁盘上的逗号分隔文本文件中加载到要素类中。我们将在我们的插件中使用此脚本。在Windows资源管理器中，转到您之前创建的`addin`目录。它应该被称为`Wildfire_Addin`。转到`Install`文件夹，您应该找到一个名为`WildfireAddin_addin.py`的文件。将此文件加载到您的Python编辑器中。
- en: 'Find the `onClick(self)` method, shown in the following code snippet. This
    method is triggered when the button is clicked:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到以下代码片段中显示的`onClick(self)`方法。当按钮被点击时，此方法会被触发：
- en: '[PRE0]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Remove the `pass` statement from the `onClick` event.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`onClick`事件中移除`pass`语句。
- en: In [Chapter 7](ch07.html "Chapter 7. Creating Custom Geoprocessing Tools"),
    you created a custom script tool that loads wildfire data from a text file to
    a feature class. Inside the `onClick` event, call this Load Wildfires from Text
    custom script tool so that it displays the user interface for selecting the text
    file, template, and feature class to write to.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[第7章](ch07.html "第7章。创建自定义地理处理工具")中，您创建了一个自定义脚本工具，该工具可以从文本文件将野火数据加载到要素类中。在`onClick`事件内部，调用此从文本文件加载野火的自定义脚本工具，以便显示选择文本文件、模板和要写入的要素类的用户界面。
- en: '[PRE1]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Save the file.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: In the next recipe, you will learn how to install your new add-in.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将学习如何安装您的新插件。
- en: How it works...
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'As you''ve seen in this recipe, the Python Add-In wizard handles the creation
    of the add-in through a visual interface. However, behind the scenes, the wizard
    creates a set of folders and files for the add-in. The add-in file structure is
    really quite simple. Two folders and a set of files comprise the add-in structure.
    You can see this structure in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在本食谱中看到的，Python插件向导通过可视化界面处理插件的创建。然而，在幕后，向导为插件创建了一系列文件夹和文件。插件文件结构实际上非常简单。两个文件夹和一组文件构成了插件结构。您可以在以下屏幕截图中看到此结构：
- en: '![How it works...](img/4445_11_13.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/4445_11_13.jpg)'
- en: The `Images` folder contains any icons or other image files used by your add-in.
    In this recipe, we used the `wildfire.png` image. So, this file should now be
    in the `Images` folder. The `Install` folder contains the Python script that handles
    the business logic of the add-in. This is the file you work with extensively to
    code the add-in. It performs whatever business logic needs to be performed by
    the buttons, tools, menu items, and so on. The `config.xml` file in the main folder
    of the add-in defines the user interface and any static properties such as the
    name, author, version, and so on. The `makeaddin.py` file can be double-clicked
    to create the `.esriaddin` file, which wraps everything into a compressed file
    with an `.esriaddin` extension. This `.esriaddin` file is what will be distributed
    to end users, so that the add-in can be installed.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`Images`文件夹包含您的插件使用的任何图标或其他图像文件。在本食谱中，我们使用了`wildfire.png`图像。因此，此文件现在应该在`Images`文件夹中。`Install`文件夹包含处理插件业务逻辑的Python脚本。这是您用于编写插件的文件。它执行按钮、工具、菜单项等需要执行的所有业务逻辑。插件主文件夹中的`config.xml`文件定义用户界面以及任何静态属性，如名称、作者、版本等。可以双击`makeaddin.py`文件来创建具有`.esriaddin`扩展名的`.esriaddin`文件，该文件将所有内容压缩成一个带有`.esriaddin`扩展名的文件。这个`.esriaddin`文件将被分发给最终用户，以便安装插件。'
- en: Installing and testing an add-in
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和测试插件
- en: You'll want to test add-ins before distributing them to your end users. For
    testing, you first need to install the add-in.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在将插件分发给最终用户之前，您需要测试插件。为了测试，您首先需要安装该插件。
- en: Getting ready
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In the working folder for your add-in, the `makeaddin.py` script can be used
    to copy all files and folders to a compressed add-in folder in a working directory
    with the file format `<working folder name>.esriaddin`. Double-click on this `.esriaddin`
    file to launch the ESRI ArcGIS add-in installation utility, which will install
    your add-in. You can then go into ArcGIS Desktop and test the add-in. The custom
    toolbar or menu may already be visible and ready to test. If it is not visible,
    go to the **Customize** menu and click on **Add-in Manager**. The **Add-In Manager**
    dialog box lists the installed add-ins that target the current application. Add-in
    information, such as name, description, and image, which are entered as project
    settings should be displayed.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的插件工作文件夹中，可以使用`makeaddin.py`脚本将所有文件和文件夹复制到工作目录中的一个压缩插件文件夹中，文件格式为`<工作文件夹名称>.esriaddin`。双击此`.esriaddin`文件以启动ESRI
    ArcGIS插件安装实用程序，该实用程序将安装您的插件。然后您可以在ArcGIS Desktop中测试插件。自定义工具栏或菜单可能已经可见并准备好测试。如果不可见，请转到**自定义**菜单并点击**插件管理器**。**插件管理器**对话框列出了针对当前应用程序的已安装插件。插件信息，如名称、描述和图像，应作为项目设置输入并显示。
- en: How to do it…
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To learn how to install and test a Python add-in, please follow these steps:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何安装和测试Python插件，请按照以下步骤操作：
- en: Inside the main folder for your add-in will be a Python script file called `makeaddin.py`.
    This script creates the `.esriaddin` file. Double-click on the script to execute
    and create the `.esriaddin` file. This process is illustrated in the following
    screenshot:![How to do it…](img/4445_11_14.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的插件主文件夹内将有一个名为`makeaddin.py`的Python脚本文件。此脚本创建`.esriaddin`文件。双击脚本以执行并创建`.esriaddin`文件。以下截图展示了这一过程：![如何操作…](img/4445_11_14.jpg)
- en: To install the add-in for ArcGIS Desktop, double-click on the `Widlfire_Add-In.esriaddin`
    file, which will launch the **Esri ArcGIS Add-In Installation Utility** window,
    as shown in the following screenshot:![How to do it…](img/4445_11_15.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要为ArcGIS Desktop安装插件，请双击`Widlfire_Add-In.esriaddin`文件，这将启动**Esri ArcGIS 插件安装实用程序**窗口，如下截图所示：![如何操作…](img/4445_11_15.jpg)
- en: Click on **Install Add-In**. If everything was successful, you should see the
    following message:![How to do it…](img/4445_11_16.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**安装插件**。如果一切顺利，您应该会看到以下消息：![如何操作…](img/4445_11_16.jpg)
- en: To test the add-in, open ArcMap. Your add-in may already be active. If not,
    select **Customize** | **Add-In Manager**. This will display the **Add-In Manager**
    dialog box , as shown in the following screenshot. You should be able to see the
    add-in that you created:![How to do it…](img/4445_11_19.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要测试插件，请打开ArcMap。您的插件可能已经激活。如果没有，请选择**自定义** | **插件管理器**。这将显示**插件管理器**对话框，如下截图所示。您应该能够看到您创建的插件：![如何操作…](img/4445_11_19.jpg)
- en: If needed, select the **Customize** button. To add the toolbar to the application,
    click on the **Toolbars** tab and choose the toolbar you created:![How to do it…](img/4445_11_20.jpg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有需要，请选择**自定义**按钮。要将工具栏添加到应用程序中，请点击**工具栏**选项卡并选择您创建的工具栏：![如何操作…](img/4445_11_20.jpg)
- en: How it works…
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'The utility will place the add-in into a well-known folder discoverable by
    ArcGIS Desktop. The well-known folder locations are as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 实用程序将插件放置到ArcGIS Desktop可发现的已知文件夹中。已知文件夹的位置如下：
- en: '`Vista/7: C:\Users\<username>\Documents\ArcGIS\AddIns\Desktop10.1`'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Vista/7: C:\Users\<username>\Documents\ArcGIS\AddIns\Desktop10.1`'
- en: '`XP: C:\Documents and Settings\<username>\My Documents\ArcGIS\AddIns\Desktop10.1`'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`XP: C:\Documents and Settings\<username>\My Documents\ArcGIS\AddIns\Desktop10.1`'
- en: 'A folder with a globally unique identifier or GUID name will be created inside
    the well-known folder. The add-in will reside inside this unique folder name.
    This is illustrated in the following screenshots. When ArcGIS Desktop starts,
    it will search these directories and load the add-ins:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在已知文件夹内将创建一个具有全局唯一标识符或GUID名称的文件夹。插件将驻留在该唯一文件夹名称内。以下截图展示了这一过程。当ArcGIS Desktop启动时，它将搜索这些目录并加载插件：
- en: '![How it works…](img/4445_11_17.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理…](img/4445_11_17.jpg)'
- en: 'The add-in will look similar to the following:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 该插件将类似于以下内容：
- en: '![How it works…](img/4445_11_18.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理…](img/4445_11_18.jpg)'
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The default add-in folder is located in the ArcGIS folder within your user
    account. For example, if your ArcGIS installation is version 10.1, the add-in
    is copied to the following location on a Vista or Windows 7 operating system:
    `c:\users\<username>\Documents\ArcGIS\AddIns\Desktop10.1`.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 默认插件文件夹位于您的用户账户中的 ArcGIS 文件夹内。例如，如果您的 ArcGIS 安装版本为 10.1，插件将被复制到以下位置（在 Vista
    或 Windows 7 操作系统上）：`c:\users\<username>\Documents\ArcGIS\AddIns\Desktop10.1`。
- en: You can also use a private network drive to distribute add-ins to end users.
    The Add-In Manager in ArcGIS Desktop adds and maintains lists of folders that
    can be searched for add-ins. Select the **Options** tab and then **Add Folder**
    to add a network drive to the list.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用私有网络驱动器向最终用户分发插件。ArcGIS Desktop 中的插件管理器添加并维护可以搜索插件的文件夹列表。选择**选项**选项卡，然后选择**添加文件夹**将网络驱动器添加到列表中。
- en: Creating a tool add-in
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建工具插件
- en: Tool add-ins are similar to buttons, with the exception that tools require some
    type of interaction with the map. The Zoom In tool, for example, is a type of
    tool. Tools should be placed inside a toolbar or tool palette. The properties
    are much the same as you'd find with a button. You'll also need to edit the Python
    script.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 工具插件类似于按钮，但工具需要与地图进行某种类型的交互。例如，缩放工具就是一种工具。工具应放置在工具栏或工具调色板内。属性与按钮中的属性非常相似。您还需要编辑
    Python 脚本。
- en: Getting ready
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: 'The `Tool` class has a number of properties including `cursor`, `enabled`,
    and `shape`. The `cursor` property sets the cursor for the tool when it is clicked,
    and is defined as an integer value corresponding to the cursor types, as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`Tool`类具有多个属性，包括`cursor`、`enabled`和`shape`。`cursor`属性设置工具被点击时的光标，并定义为与光标类型相对应的整数值，如下所示：'
- en: '![Getting ready](img/4445_11_21.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![准备中](img/4445_11_21.jpg)'
- en: 'By default, tools are enabled. This can be changed, though, by setting the
    `enabled` property to `false`. Finally, the `shape` property specifies the type
    of shape to be drawn and can be a line, rectangle, or circle. These properties
    are typically set inside the constructor for the tool which is defined by the
    `__init__` method, as shown in the following code example. `self` refers to the
    current object (a tool in this case) and is a variable that refers to this current
    object:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，工具是启用的。但这可以通过将`enabled`属性设置为`false`来更改。最后，`shape`属性指定要绘制的形状类型，可以是线、矩形或圆形。这些属性通常在工具的构造函数中设置，该构造函数由`__init__`方法定义，如下面的代码示例所示。`self`指的是当前对象（在这种情况下是工具）并是一个指向此当前对象的变量：
- en: '[PRE2]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There are a number of functions associated with the `Tool` class. All classes
    will have a constructor, which is used to define the properties for the class.
    You saw an example of this `__init__` function earlier. Other important functions
    of the tool class include `onRectangle()`, `onCircle()`, and `onLine()`. These
    functions correspond to the shape that will be drawn on the map with the tool.
    The geometry of the drawn shape is passed into the function. There are also a
    number of mouse and key functions that can be used. Finally, the `deactivate()`
    function can be called when you want to deactivate the tool.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 与`Tool`类相关联有许多函数。所有类都将有一个构造函数，用于定义类的属性。您之前已经看到了这个`__init__`函数的例子。工具类中的其他重要函数包括`onRectangle()`、`onCircle()`和`onLine()`。这些函数对应于使用工具在地图上绘制的形状。绘制的形状的几何形状被传递到函数中。还有许多鼠标和键盘函数可以使用。最后，当您想要停用工具时，可以调用`deactivate()`函数。
- en: 'We''ve already seen the constructor for the `Tool` class in action. This function,
    called `__init__`, is used to set various properties for the tool when it is created.
    Here, we''ve also shown the `onRectangle()` function for the `Tool` class. This
    function is called when a rectangle is drawn on the map. The geometry of the rectangle
    is passed into the function along with a reference to the tool itself:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了`Tool`类的构造函数的实际应用。这个名为`__init__`的函数用于在创建工具时设置各种属性。在这里，我们还展示了`Tool`类的`onRectangle()`函数。当在地图上绘制矩形时，会调用此函数。矩形的几何形状以及工具本身的引用被传递到函数中：
- en: '[PRE3]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this recipe, you will learn how to create a tool add-in that responds to
    the user dragging a rectangle on the map. The tool will use the **Generate Random
    Points** tool to generate points within the rectangle.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您将学习如何创建一个响应用户在地图上拖动矩形的工具插件。该工具将使用**生成随机点**工具在矩形内生成点。
- en: How to do it...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to create a tool add-in with the ArcGIS Python Add-In wizard:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用ArcGIS Python Add-In向导创建工具插件：
- en: Open the ArcGIS Python Add-In wizard by double-clicking on the `addin_assistant.exe`
    file located in the `bin` folder, where you extracted the wizard.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击位于提取向导的`bin`文件夹中的`addin_assistant.exe`文件来打开ArcGIS Python Add-In向导。
- en: Create a new project folder called `Generate_Random_Points` and click **OK**.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Generate_Random_Points`的新项目文件夹并点击**确定**。
- en: In the **Project Settings** tab, enter properties including **Name**, **Version**,
    **Company**, **Description**, and **Author**:![How to do it...](img/4445_11_22.jpg)
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目设置**选项卡中，输入包括**名称**、**版本**、**公司**、**描述**和**作者**等属性：![如何操作...](img/4445_11_22.jpg)
- en: Click on the **Add-In Contents** tab.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**插件内容**选项卡。
- en: Right-click on **Toolbars** and select **New Toolbar**.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**工具栏**并选择**新建工具栏**。
- en: Set the caption for the toolbar to `Random Points Toolbar`.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将工具栏的标题设置为`Random Points Toolbar`。
- en: Right-click on the newly created `Random Points Toolbar` and select **New Tool**.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击新创建的`Random Points Toolbar`并选择**新建工具**。
- en: Enter items for the tool as shown in the following screenshot:![How to do it...](img/4445_11_23.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下截图输入工具项：![如何操作...](img/4445_11_23.jpg)
- en: Click on **Save**. This will generate the folder and file structure for the
    add-in.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**。这将生成插件的文件夹和文件结构。
- en: Go to the `Install` folder for the new add-in and open `GenerateRandomPoints_addin.py`
    in IDLE.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往新插件的`Install`文件夹，并在IDLE中打开`GenerateRandomPoints_addin.py`文件。
- en: 'Add the following code to the `__init__` function, which is the constructor
    for the tool:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到工具的构造函数`__init__`中：
- en: '[PRE4]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the `onRectangle()` function, write code to generate a set of random points
    within the rectangle drawn on the screen:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`onRectangle()`函数中编写代码以在屏幕上绘制的矩形内生成一组随机点：
- en: '[PRE5]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Save the file.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Generate the `.esriaddin` file by double-clicking on the `makeaddin.py` file
    in the main folder for the add-in.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在插件的根目录中双击`makeaddin.py`文件来生成`.esriaddin`文件。
- en: Install the add-in by double-clicking on `Generate_Random_Points.esriaddin`.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击`Generate_Random_Points.esriaddin`来安装插件。
- en: Open ArcMap with a new map document file and add the Generate Random Points
    toolbar if necessary.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新的地图文档文件打开ArcMap，并在必要时添加生成随机点工具栏。
- en: Add the `BexarCountyBoundaries` feature class from `C:\ArcpyBook\data\CityOfSanAntonio.gdb`.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`C:\ArcpyBook\data\CityOfSanAntonio.gdb`添加`BexarCountyBoundaries`要素类。
- en: Test the add-in by dragging a rectangle on the map. The output should appear
    similar to the following screenshot. Your map will vary though because the points
    are generated randomly:![How to do it...](img/4445_11_24.jpg)
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在地图上拖动矩形来测试插件。输出应类似于以下截图。不过，由于点生成是随机的，你的地图可能会有所不同：![如何操作...](img/4445_11_24.jpg)
- en: How it works...
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Tool add-ins are very similar to button add-ins, the difference being that tool
    add-ins require some sort of interaction with the map before the functionality
    is triggered. An interaction with the map can be a number of things including
    clicking on the map, drawing a polygon or rectangle, or performing various mouse
    or key events. Python code is written to respond to one or more of these events.
    In this recipe, you learned how to write code that responds to the `onRectangle()`
    event. You also set various properties inside the constructor for the add-in including
    `cursor` and `shape`, which will be drawn on the map.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 工具插件与按钮插件非常相似，区别在于工具插件在功能触发之前需要与地图进行某种形式的交互。与地图的交互可以包括点击地图、绘制多边形或矩形，或执行各种鼠标或键盘事件。Python代码被编写来响应这些事件之一或多个。在本食谱中，你学习了如何编写响应`onRectangle()`事件的代码。你还在插件的构造函数中设置了各种属性，包括`cursor`和`shape`，这些将在地图上绘制。
- en: There's more…
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: There are a number of additional add-ins that you can create. The `ComboBox`
    add-in provides a drop-down list of values that the user can select from, or alternatively
    they can type a new value into an editable field. As with the other add-ins, you'll
    first want to create a new project with the Python Add-In wizard, add a new toolbar,
    and then create a combo box to add to the toolbar.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以创建许多其他插件。`ComboBox`插件提供了一个下拉列表，用户可以从中选择值，或者他们可以在可编辑字段中输入新值。与其他插件一样，你首先想要使用Python
    Add-In向导创建一个新项目，添加一个新工具栏，然后创建一个组合框并将其添加到工具栏中。
- en: The Tool Palette provides a way of grouping related tools. It does need to be
    added to an existing toolbar. By default, tools will be added to the palette in
    a grid-like pattern.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 工具调色板提供了一种分组相关工具的方法。它需要添加到现有的工具栏中。默认情况下，工具将以网格状模式添加到调色板中。
- en: The `Menu` add-in acts as a container for buttons and other menus. Menus, in
    addition to being displayed by the ArcGIS Desktop Add-in Manager, will also be
    displayed in the **Customize** dialog box for ArcGIS Desktop.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`菜单`插件充当按钮和其他菜单的容器。除了在 ArcGIS Desktop 插件管理器中显示外，菜单还会在 ArcGIS Desktop 的**自定义**对话框中显示。'
- en: Application extensions are used to add specific sets of related functionality
    to ArcGIS Desktop. Several examples include Spatial Analyst, 3D Analyst, and Business
    Analyst. Typically, application extensions are responsible for listening for events
    and handling them. For example, you could create an application extension that
    saves the map document file each time a user adds a layer to the map. Application
    extensions also coordinate activities between components.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序扩展用于向 ArcGIS Desktop 添加特定的一组相关功能。几个例子包括空间分析器、3D 分析器和商业分析师。通常，应用程序扩展负责监听事件并处理它们。例如，您可以创建一个应用程序扩展，每次用户将图层添加到地图时，都会保存地图文档文件。应用程序扩展还协调组件之间的活动。
