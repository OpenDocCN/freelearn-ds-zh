- en: Managing Data Science Projects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理数据科学项目
- en: In the previous chapter, we looked at innovation management. We developed recipes
    that can help find ideas for data science projects and matched them with their
    market demand. In this chapter, we will cover the non-technical side of data science
    project management by looking at how data science projects stand out from general
    software development projects. We'll look at common reasons for their failure
    and develop an approach that will lower the risks of data science projects. We
    will conclude this chapter by diving into the art and science of project estimates.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们探讨了创新管理。我们制定了可以帮助寻找数据科学项目创意的方案，并将这些创意与市场需求相匹配。在本章中，我们将通过分析数据科学项目如何与一般的软件开发项目不同，来探讨数据科学项目管理的非技术方面。我们将讨论导致数据科学项目失败的常见原因，并制定一种方法，降低数据科学项目的风险。最后，我们将深入探讨项目估算的艺术与科学。
- en: 'In this chapter, we will look at how we can manage projects from start to end
    by covering the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何从头到尾管理项目，涵盖以下主题：
- en: Understanding data science project failure
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解数据科学项目失败
- en: Exploring the data science project life cycle
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索数据科学项目生命周期
- en: Choosing a project management methodology
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择项目管理方法
- en: Choosing a methodology that suits your project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择适合你项目的方法
- en: Estimating data science projects
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 估算数据科学项目
- en: Discovering the goals of the estimation process
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现估算过程的目标
- en: Understanding data science project failure
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解数据科学项目失败
- en: Every data science project ends up being a software system that generates scheduled
    reports or operates online. The world of software engineering already provides
    us with a multitude of software project management methodologies, so why do we
    need to reinvent a special approach for data science projects? The answer is that
    data science projects require much more experimentation and have to tolerate far
    more failures than software engineering projects.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据科学项目最终都会变成一个生成定期报告或在线运行的软件系统。软件工程的世界已经为我们提供了多种软件项目管理方法，那么为什么我们还需要为数据科学项目重新发明一种特殊的方法呢？答案是，数据科学项目需要更多的实验，并且比软件工程项目需要容忍更多的失败。
- en: 'To see the difference between a traditional software system and a system with
    predictive algorithms, let''s look at the common causes of failure for data science
    projects:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了看清传统软件系统与具有预测算法系统的区别，让我们来看一下数据科学项目失败的常见原因：
- en: '**Dependence on data**: A robust **customer relationship management** (**CRM**)
    system that organizes the sales process will work well in many organizations,
    independent of their business. A system that predicts the outcome of a sales process
    may work well in one organization, but will require a partial rewrite for another
    organization and may not work at all in another. The reason for this is that machine
    learning algorithms depend on data, and every organization will have its own data
    model of its customers and its own sales process.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对数据的依赖**：一个健全的**客户关系管理**（**CRM**）系统能够组织销售流程，在许多组织中都能良好运行，且与其业务无关。一个预测销售流程结果的系统可能在一个组织中运行良好，但在另一个组织中可能需要部分重写，甚至在其他组织中完全不起作用。原因在于，机器学习算法依赖于数据，而每个组织都有其独特的客户数据模型和销售流程。'
- en: '**Changing requirements**: While software development projects often suffer
    from changing requirements, the changes mostly flow from the customer to the implementation
    team. In data science projects, new insights and research results from the implementation
    team can create a feedback loop. Project stakeholders can generate new requirements
    and change the course of the project based on the new information that''s discovered
    by data scientists.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**需求变化**：虽然软件开发项目常常会面临需求变化，但这些变化大多是从客户流向实施团队。在数据科学项目中，来自实施团队的新洞察和研究成果可能会形成反馈循环。项目利益相关者可能会根据数据科学家发现的新信息生成新的需求，并改变项目的方向。'
- en: '**Changing data**: In software development projects, the data model is mostly
    fixed or can be changed in a controlled manner. Data science projects often need
    to be integrated with new data sources for research purposes. Data is always changing
    and transforming, creating multiple intermediate representations inside the system.
    People and software components use these representations for reporting, data processing,
    and modeling. Software engineering projects use fixed or slowly changing data
    models, while data science projects use constantly evolving data pipelines.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变化的数据**：在软件开发项目中，数据模型大多是固定的，或者可以在受控的方式下进行更改。数据科学项目通常需要集成新的数据源以供研究使用。数据始终在变化和转化，在系统内部创建多个中间表示。人们和软件组件使用这些表示进行报告、数据处理和建模。软件工程项目使用固定或缓慢变化的数据模型，而数据科学项目使用不断演变的数据管道。'
- en: '**Experimentation and research**: Data science projects involve completing
    many experiments. Typically, the number ranges from hundreds to thousands. Software
    engineering projects limit research by designing a system architecture and evolving
    it in a controlled manner. In data science projects, the next experiment may turn
    the project in a new direction, and you never know when this will happen.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实验和研究**：数据科学项目涉及完成大量实验。通常，实验数量从几百到几千不等。软件工程项目通过设计系统架构并以可控的方式演化来限制研究。在数据科学项目中，下一个实验可能会使项目朝着新的方向发展，而且你永远不知道何时会发生这种变化。'
- en: Understanding data science management approaches
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解数据科学管理方法
- en: The traditional management approach to software engineering projects was not
    built with these problems in mind. The key problem that most modern software project
    management methodologies need to solve is the issue of changing requirements.
    Agile methodologies focus on planning and executing fast iterations. Each iteration
    aims to deliver functionality to the client as fast as possible. External feedback
    is the primary source of changes in the project.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的软件工程项目管理方法并没有考虑这些问题。大多数现代软件项目管理方法需要解决的关键问题是需求变化的问题。敏捷方法论专注于规划和执行快速迭代。每次迭代都旨在尽可能快地向客户交付功能。外部反馈是项目变化的主要来源。
- en: In data science projects, changes come from every direction. They spread internally
    from the project's team and externally from the business' customers. Metrics should
    always confirm progress. Getting one step closer to your goal may take tens or
    even hundreds of failed experiments, which makes fast iterations a must.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学项目中，变化来自各个方向。它们在项目团队内部传播，也来自企业的客户。度量标准应始终确认进展。实现目标的过程中，可能需要经历几十次甚至上百次失败的实验，这使得快速迭代成为必须。
- en: The typical iteration length of an Agile project can stretch from 2 weeks to
    1 month. The project team fixes the iteration scope for this duration and delivers
    it under a strict timeline. In a data science project, an experiment's result
    in the middle of the sprint can affect the sprint's goals and make working on
    other planned tasks less important due to the new discovery.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷项目的典型迭代周期可以从2周到1个月不等。项目团队为此期间确定迭代范围，并在严格的时间表下交付。在数据科学项目中，迭代中期的实验结果可能会影响迭代目标，并且由于新的发现，其他计划任务的工作重要性可能会降低。
- en: Management must provide a safety net for common issues and problems. Methodologies
    that come from the software engineering domain can give you a solid foundation
    here, but they do not provide any tools that we can use to manage research and
    govern data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 管理层必须为常见问题和问题提供保障。来自软件工程领域的方法论可以为你提供坚实的基础，但它们并未提供可以用来管理研究和治理数据的工具。
- en: 'If you develop systems that use machine learning under the hood, it is necessary
    to take care of the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你开发的是使用机器学习的系统，必须关注以下几点：
- en: '**Requirements for validation and alignment**: You need to detect and manage
    requirement changes from external (customers) and internal (research team) sources.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证和对齐的要求**：你需要检测并管理来自外部（客户）和内部（研究团队）来源的需求变化。'
- en: '**Data governance**: Your project will need data governance standards, which
    should be rigorously applied to each piece of code that works with data. Ideally,
    each row of data going through your pipeline should be tracked back to its data
    source. All incoming and outgoing datasets, including intermediate reports, should
    be tracked and documented.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据治理**：你的项目将需要数据治理标准，这些标准应严格应用于与数据相关的每一行代码。理想情况下，通过你的数据管道流动的每一行数据都应该能追溯到其数据源。所有进出数据集，包括中间报告，都应被跟踪和记录。'
- en: '**Research processes**: Each data science project will need to be researched
    extensively. Without control, research can quickly eat away at your budget without
    project completion being in sight. The essential components for managing a research
    project include the following:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**研究过程**：每个数据科学项目都需要进行广泛的研究。如果没有控制，研究很容易迅速消耗掉预算，而项目的完成似乎遥不可及。管理研究项目的核心组成部分包括以下内容：'
- en: '**Research planning**: The project team should plan and prioritize all of their
    research.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**研究规划**：项目团队应当规划并优先处理他们的所有研究。'
- en: '**Experimentation methodology**: Each experiment should conform to a set of
    standards such as tracking, documentation, and reproducibility.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实验方法论**：每个实验都应遵循一套标准，如跟踪、文档记录和可重复性。'
- en: '**Fail fast and recover early**: Experiments often fail. Your management approach
    should make experiments fast so that your team can iterate and learn as quickly
    as possible.'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速失败并早期恢复**：实验经常会失败。你的管理方法应该使实验尽可能快速，以便你的团队能够尽快地进行迭代和学习。'
- en: '**Software engineering processes**: Much of your work will be in creating software.
    Software project management already offers great tools for this, but they need
    to be tightly integrated with all the other components of the management methodology.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件工程过程**：你的工作大部分将涉及软件的创建。软件项目管理已经提供了很好的工具，但它们需要与管理方法论的其他组件紧密集成。'
- en: Next, we will look at common stages that arise in data science projects. We
    will tie those stages into a process that's comprised of the project life cycle
    so that we can see the whole picture behind data science projects.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨数据科学项目中常见的阶段。我们将这些阶段与项目生命周期的过程结合起来，以便全面了解数据科学项目的全貌。
- en: Exploring the data science project life cycle
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索数据科学项目生命周期
- en: 'Each data science project has several distinct states. We can structure projects
    in different domains and different technologies into stages that comprise the
    data science project life cycle, as shown in the following diagram:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据科学项目有几个不同的状态。我们可以将不同领域和技术的项目结构化为包含数据科学项目生命周期的各个阶段，如下图所示：
- en: '![](img/3911e318-2ed0-4e02-bec3-55e08f0d9d71.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3911e318-2ed0-4e02-bec3-55e08f0d9d71.png)'
- en: Let's explore each stage of the life cycle in more detail.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地探讨生命周期中的每个阶段。
- en: Business understanding
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 商业理解
- en: During this stage, you apply your domain expertise and research the business
    side of the project. You define the business requirements and confirm that their
    implementation would make the lives of your customers better. You should also
    define and document all the relevant business metrics that will allow you to measure
    and report on results in a way that is understandable by the business side. The
    output of this stage should be a business requirements specification that has
    been viewed, redacted, and agreed upon by the project stakeholders.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，你将运用你的领域专业知识，研究项目的商业方面。你需要定义商业需求，并确认这些需求的实施能够改善客户的生活。你还应该定义并记录所有相关的商业指标，以便用业务方能够理解的方式衡量和报告结果。这个阶段的输出应为一份业务需求规格书，已由项目相关方审阅、修订并达成一致。
- en: Data understanding
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据理解
- en: During this stage, you research the data architecture of the organization you
    are working with. You document data sources, their owners, and the technologies
    they use. You should not document every available data source unless you want
    to mine project ideas from data (see [Chapter 7](e5f57688-4506-40ea-858e-84169c97c6ad.xhtml),
    *Managing Innovation*). Focus on data that's useful for the project.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，你需要研究与之合作的组织的数据架构。你需要记录数据来源、它们的拥有者及其使用的技术。除非你打算从数据中挖掘项目创意（参见[第七章](e5f57688-4506-40ea-858e-84169c97c6ad.xhtml)，*管理创新*），否则不必记录所有可用的数据源。重点是与项目相关的有用数据。
- en: After finding this data, perform an **exploratory data analysis** (**EDA**)
    and research the data thoroughly. Look at any anomalies and unusual artifacts
    in the data. Study the reasons behind their occurrence and document ways to handle
    them. For example, if the dataset has a lot of empty values, you should have a
    plan for how to deal with them, and your actions should not distort the data in
    an undesirable way.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 找到这些数据后，进行**探索性数据分析**（**EDA**）并彻底研究数据。查看数据中是否有任何异常或不寻常的现象，研究它们发生的原因并记录如何处理它们的方法。例如，如果数据集包含大量空值，你应该有一个处理这些空值的方案，而且你的处理方式不应以不合适的方式扭曲数据。
- en: You should also look at ideas regarding feature engineering during the EDA stage.
    Perform statistical analysis on the data and try to find causal relationships
    that will help to solve the task at hand.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应当在 EDA 阶段考虑特征工程的想法。对数据进行统计分析，并尝试找到有助于解决当前任务的因果关系。
- en: 'The data understanding stage should have the following outputs:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数据理解阶段应当有以下输出：
- en: '**Data source dictionary**: This document briefly describes all the data sources
    that are relevant to your project.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据源字典**：本文档简要描述了与你的项目相关的所有数据源。'
- en: '**An EDA report that shows the conclusions of your data analysis**: This document
    should describe the approach that you will use to solve the task at hand and the
    strategies for handling errors that you have found in the data. You should include
    facts that may interest your customer.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一份展示你数据分析结论的 EDA 报告**：该文档应描述你将用于解决当前任务的方法和应对数据中错误的策略。你应该包括一些可能引起客户兴趣的事实。'
- en: Data preparation
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据准备
- en: This stage is where we start working with data. The data preparation stage involves
    taking raw data and changing it into a useful format. You read data from its sources
    and prepare it so that you can use the data to reach the project's goal. If you
    are solving a task based on structured data and plan to use machine learning,
    you will need to perform feature engineering. The previous stage should give you
    insights into the quirks of the data that you can fix during the data preparation
    stage. This stage's output is one or more reproducible data preparation jobs and
    a dataset that you can use to build and test models.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这一阶段是我们开始处理数据的地方。数据准备阶段涉及将原始数据转换为有用的格式。你从数据源中读取数据并对其进行准备，以便使用这些数据实现项目目标。如果你在解决一个基于结构化数据的任务并计划使用机器学习，你将需要进行特征工程。前一个阶段应该会为你提供数据中独特之处的洞察，这些问题你可以在数据准备阶段进行修复。本阶段的输出是一个或多个可重复的数据准备任务以及一个可以用来构建和测试模型的数据集。
- en: Optimizing data preparation
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化数据准备
- en: Data preparation and data understanding are surprisingly time-consuming. These
    stages can take up to 80% of the project's time, so don't forget to plan in advance.
    Since this stage is time-consuming, optimizing the team's performance is important.
    Open source tools for automated EDA and feature engineering can save you a lot
    of time at the start of the project, so don't hesitate to use them. In the *Creating
    the Development Infrastructure* section of this book, we will look at several
    libraries that you can use to speed up the data preparation and data understanding
    stages.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 数据准备和数据理解是非常耗时的。这些阶段可能占用项目时间的 80%，所以不要忘记提前规划。由于这些阶段耗时，优化团队的表现非常重要。开源的自动化 EDA
    和特征工程工具可以在项目初期为你节省大量时间，因此不要犹豫使用它们。在本书的*创建开发基础设施*章节中，我们将介绍一些可以帮助你加快数据准备和数据理解阶段的库。
- en: To make this process less error-prone and easier to monitor, you should care
    about data provenance and versioning. Every dataset should be able to be traced
    back to its source. Take care to save all the data files, regardless of whether
    they're intermediate and raw. Log the inputs and outputs of every data transformation
    job in your code. Data processing bugs are notoriously hard to spot unless you
    have complete control of your data streams.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少出错的可能性并便于监控，你应该关注数据的来源和版本管理。每个数据集都应该能够追溯到其源头。无论是中间数据还是原始数据，都应该妥善保存所有数据文件。在你的代码中记录每个数据转换任务的输入和输出。数据处理的
    bug 很难发现，除非你对数据流有完全的掌控。
- en: Another important point to make is reusability. Code your data processing jobs
    well. It is tempting to create a large pile of tangled code lines in a single
    file and let them do their job. Doing this will increase your technical debt.
    The code will work for a while, and then it will fail without notice. Over time,
    you may also want to add additional features to the code. If it is badly written,
    you will spend an unexpectedly large amount of time making fixes and debugging.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的点是可复用性。要合理编写数据处理代码。虽然很诱人将大量杂乱无章的代码写在一个文件中并让它们执行任务，但这样会增加技术债务。代码可能运行一段时间，但最终会在没有任何预警的情况下失败。随着时间推移，你可能还会想为代码添加额外功能。如果代码写得不好，你将花费大量时间来修复和调试。
- en: 'To ensure that you have robust data processing code, use the following checklist
    during the code review:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保你的数据处理代码稳健，请在代码审查时使用以下检查清单：
- en: All the repeated code is encapsulated into functions
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有重复的代码被封装成函数。
- en: The logically connected functions are encapsulated in classes and modules
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑相关的函数被封装在类和模块中。
- en: Your code has extensive logging
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的代码有广泛的日志记录。
- en: All the configuration parameters can be changed via the config file or command-line
    arguments
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有配置参数可以通过配置文件或命令行参数进行更改。
- en: The inputs and outputs of your data job are saved somewhere
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的数据处理任务的输入和输出需要存储在某个地方。
- en: The code is reproducible and has documentation
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码可复现并附带文档。
- en: Modeling
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建模
- en: 'This topic was covered in the *What is Data Science?* section of this book.
    In this stage, we apply our knowledge of data science, machine learning, and deep
    learning to solve the task at hand. This is done in the following stages:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 本主题已在本书的*什么是数据科学？*章节中讨论。在此阶段，我们运用数据科学、机器学习和深度学习的知识来解决当前任务。这些工作分为以下几个阶段：
- en: First, we determine the task type, that is, supervised (classification and regression),
    unsupervised (clustering and document topic modeling), or reinforcement learning.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们确定任务类型，即监督学习（分类与回归）、无监督学习（聚类与文档主题建模）或强化学习。
- en: Then, prepare a list of algorithms that are suitable for solving the task.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，准备一个适合解决任务的算法列表。
- en: Next, come up with a model validation and testing approach.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，设计一个模型验证和测试方法。
- en: Finally, optimize the parameters of the model and select the best model.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，优化模型的参数并选择最佳模型。
- en: Evaluation
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: While not being separate from the modeling and deployment steps, this stage
    deserves to stand on its own. You must test technical and business metrics, as
    well as checking the individual predictions of the model at this stage. Look at
    the biggest errors the model made on the test set and think about the changes
    that you can make to your data, features, or models that can fix those errors.
    This is also a good way to spot data processing bugs.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管建模和部署步骤并不分开，但这一阶段值得单独强调。在这一阶段，你必须测试技术和业务指标，并检查模型的单个预测结果。查看模型在测试集上出现的最大错误，并思考你可以对数据、特征或模型做出哪些改动来修正这些错误。这也是发现数据处理漏洞的好方法。
- en: 'Your project should have two evaluation strategies: online and offline. Online
    evaluation takes care of tracking all the metrics for the already deployed model,
    while offline evaluation is used to decide which model will make it to the deployment
    stage.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你的项目应该有两种评估策略：在线评估和离线评估。在线评估负责跟踪已部署模型的所有指标，而离线评估则用于决定哪个模型可以进入部署阶段。
- en: Typical data science projects contain hundreds of experiments with different
    models, data, and parameters. Each experiment generates new data in the form of
    metrics, code parameters, and notes. Use a specialized experiment tracking tool
    to decide on the success or failure of a particular experiment. These tools can
    automatically collect all the logs, metrics, and artifacts of the experiment to
    ensure their reproducibility and to ease searching the experiment results. If
    you don't want to or can't use a special tool, a spreadsheet can be a good substitute,
    although you will need to spend more time working on it. Having a complete log
    of all the experiments and decisions you've made regarding modeling and data preprocessing
    will help you compare different experiments and make conclusions about their results.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的数据科学项目包含数百个实验，这些实验涉及不同的模型、数据和参数。每个实验会生成新的数据，如指标、代码参数和备注。使用专门的实验跟踪工具来判断某个实验的成功与否。这些工具可以自动收集实验的所有日志、指标和成果，以确保实验的可复现性，并简化实验结果的搜索。如果你不想使用或无法使用专门的工具，电子表格可以作为一个不错的替代方案，尽管你需要花费更多时间来处理它。保留完整的实验日志和你在建模和数据预处理过程中做出的所有决策，将帮助你比较不同实验并得出结论。
- en: If you need to know about the technical details of model testing, please refer
    to [Chapter 2](20c52af6-9bb7-4578-9db2-6d74ac656248.xhtml), *Testing Your Models.*
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要了解模型测试的技术细节，请参阅 [第 2 章](20c52af6-9bb7-4578-9db2-6d74ac656248.xhtml)，*测试你的模型*。
- en: The modeling and evaluation stages are closely related and are often repeated
    several times in successive iterations before the final stage is reached.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 建模和评估阶段紧密相连，通常在多个迭代过程中反复进行，直到达到最终阶段。
- en: Deployment
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: 'At the deployment stage, you publish your best model for your end users and
    examine the results. At this stage, complexities are often overlooked. Production
    code has a separate set of strict requirements and **service level agreements**
    (**SLAs**) that your model needs to meet. We can separate those requirements into
    two categories: functional and nonfunctional. Functional requirements define your
    service''s features, while nonfunctional requirements define your SLAs.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署阶段，你将最好的模型发布给最终用户并检查结果。在这个阶段，复杂性常常被忽视。生产代码有一套严格的要求和**服务水平协议**（**SLAs**），你的模型需要满足这些要求。我们可以将这些要求分为两类：功能性要求和非功能性要求。功能性要求定义了你的服务特性，而非功能性要求定义了你的
    SLA。
- en: 'Some examples of the functional requirements for your model service are as
    follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是模型服务的一些功能需求示例：
- en: Request/response format
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求/响应格式
- en: Capability for model versioning
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型版本控制的能力
- en: A UI for tracking deployments and request statistics
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟踪部署和请求统计信息的用户界面
- en: 'Nonfunctional requirements define the quality of service and availability of
    your service, and some of them are as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 非功能性需求定义了服务质量和可用性，以下是一些例子：
- en: Desired request throughput (1,000 requests per second)
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 期望的请求吞吐量（每秒 1000 个请求）
- en: Availability schedule (24/7 and 5/8)
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用性计划（24/7 和 5/8）
- en: Secure communication
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全通信
- en: Elastic scalability so that the system will stay available when the user load
    peaks
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弹性可扩展性，确保在用户负载峰值时系统仍然可用
- en: The requirements for model deployment are similar for different projects, so
    this part of the process is subject to reusability. Instead of repeating the same
    work for each project, you can develop your own model-serving framework or use
    an existing one.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 模型部署的要求对于不同的项目是相似的，因此这一过程可以实现复用。你可以开发自己的模型服务框架，或者使用现有的框架，而不是为每个项目重复相同的工作。
- en: Another important point to remember at the deployment stage is evaluation. This
    does not end at the previous stage; you should evaluate all of the model's metrics
    online. Your system may trigger alerts or compensative actions such as model retraining
    if the online metrics drop below a certain threshold. A/B testing and multi-armed
    bandits are also a part of the deployment process and can be supported as features
    of your model server.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署阶段还需要记住的另一个重要点是评估。评估不会在之前的阶段结束，你应当在线评估模型的所有指标。如果在线指标低于某个阈值，系统可能会触发警报或采取补救措施，如重新训练模型。A/B
    测试和多臂赌博机也是部署过程的一部分，可以作为模型服务器的功能进行支持。
- en: Now, you should be familiar with the common stages of each data science project.
    Let's see how we can execute each stage with a proper management approach.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该熟悉每个数据科学项目的常见阶段。让我们看看如何通过合适的管理方法执行每个阶段。
- en: Choosing a project management methodology
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择项目管理方法论
- en: Project management methodologies provide a set of rules and processes that can
    distinguish chaotic projects from coherent ones. They provide a framework where
    everyone can act toward a greater goal. Laws do the same for our society. However,
    laws are not perfect and they often fail. There is no silver bullet in the world
    of software management either. Some management practices are better suited to
    one type of project and will let you down in another. In the following sections,
    we will explore the most popular ways of managing software projects and learn
    how to adapt them to a data science environment so that we can draw conclusions
    and choose the one that suits our project the best.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 项目管理方法论提供了一套规则和流程，用以区分混乱的项目与有条理的项目。它们为每个人提供了一个可以朝着更大目标前进的框架。法律在我们的社会中也起着相同的作用。然而，法律并不完美，且往往会失败。在软件管理领域也没有灵丹妙药。有些管理实践更适用于某种类型的项目，但在另一种项目中可能会让你失望。在接下来的章节中，我们将探讨管理软件项目的最流行方法，并学习如何将它们适应数据科学环境，从而得出结论并选择最适合我们项目的方法。
- en: Waterfall
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 瀑布
- en: 'The most intuitive way to manage a project is to approach it like you''re building
    a house. The steps for this are as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 管理项目最直观的方式是将其视作建造房屋。其步骤如下：
- en: Prepare the building site
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备建筑工地
- en: Lay a foundation
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 奠定基础
- en: Create a framework
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建框架
- en: Build a roof
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建设屋顶
- en: Build walls
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建立墙体
- en: Connect the electricity and water
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接电力和水源
- en: Finish the exterior and interior
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成外部和内部建设
- en: 'To build a software system, you do the following:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 构建一个软件系统，你需要做以下步骤：
- en: Prepare the development environment
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备开发环境
- en: Analyze and document the requirements
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分析并记录需求
- en: Analyze and document the architecture and software specification
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分析并记录架构和软件规范
- en: Build the system
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建设系统
- en: Test that everything is working according to the requirements
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试一切是否按照需求正常工作
- en: Finish the project
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成项目
- en: This management methodology is called a **waterfall**. It is logical on paper,
    but real-world applications rarely end up being very successful. The reason behind
    this is that all the steps are laid out sequentially and are only repeated once.
    If you make a single mistake, the project plan will fall apart. A single undocumented
    requirement, such as the one at *step 2*, can result in a disaster at *step 6*.
    Clients do not have a complete view of the end result and they can make mistakes
    too. Requirements can change after customers see the actual implementation of
    their requests.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这种管理方法论被称为**瀑布模型**。它在纸面上看起来很合理，但实际应用中很少能够取得成功。其背后的原因在于所有步骤是顺序排列的，并且只会重复一次。如果你犯了一个错误，项目计划就会崩溃。一个未记录的需求，例如在*第2步*中，可能会在*第6步*时导致灾难。客户对最终结果没有完整的视图，也可能犯错误。在客户看到实际实现后，需求可能会发生变化。
- en: Software project managers know that a single waterfall won't solve their issues,
    so they compose many smaller waterfalls into sequential iterations. This stage
    of evolution is called iterative and incremental software development. The iterative
    project is comprised of several phases that are managed in a waterfall fashion.
    The length of a single iteration is measured in months. At the end of each phase,
    the development team shows intermediate results to the end user for the purpose
    of collecting feedback. This feedback is used to jumpstart the next iteration.
    With each cycle, the understanding of the desired result evolves until it satisfies
    the customer's needs.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 软件项目经理知道单一的瀑布模型无法解决他们的问题，因此他们将多个小的瀑布模型组合成顺序迭代。这一发展阶段被称为迭代和增量软件开发。迭代项目由多个阶段组成，每个阶段都以瀑布式的方法进行管理。每次迭代的长度通常以月为单位。在每个阶段结束时，开发团队会向最终用户展示阶段性成果，以收集反馈。这些反馈将推动下一次迭代的启动。随着每次循环，对期望结果的理解逐步发展，直到满足客户需求。
- en: Agile
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 敏捷
- en: 'The iterative approach is still too heavy for most software projects. They
    suffer from changes that pile up in a mountain of technical requirements. In 2001,
    some of the brightest heads of the software development world created an Agile
    manifesto ([https://agilemanifesto.org](https://agilemanifesto.org)), which described
    a new management approach in four simple points:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代方法对于大多数软件项目来说仍然过于繁重。它们往往因为不断积累的技术需求而受到困扰。2001年，软件开发领域的一些最杰出的头脑创建了《敏捷宣言》([https://agilemanifesto.org](https://agilemanifesto.org))，它描述了一种新的管理方法，简明扼要地提出了四个要点：
- en: Individuals and interactions take precedence over processes and tools
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个体和互动优先于过程和工具
- en: Working software takes precedence over comprehensive documentation
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可工作软件优先于全面的文档记录
- en: Customer collaboration takes precedence over contract negotiation
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顾客合作优先于合同谈判
- en: Responding to change takes precedence over following a plan
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应变化优先于遵循计划
- en: That is, while there is value in the latter of each point, we value the former
    of each point more.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，尽管后者每个点都有价值，我们更重视前者每个点的价值。
- en: Today, we associate agile with Kanban and Scrum. These methodologies take somewhere
    between 50 and 500 pages to explain. Nonetheless, at its core, Agile is simple.
    Any project can go astray with the agile manifesto, and many did. If you leave
    out the last sentence in the manifesto, you may end up creating a project without
    a plan or specification, which will inevitably end in an uncontrollable mess.
    People needed a more direct guide when it comes to managing software projects.
    This is why Kanban and Scrum were invented.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们将敏捷与看板和Scrum联系在一起。这些方法需要介绍50到500页才能解释清楚。然而，敏捷的核心很简单。任何项目都可能因为敏捷宣言而偏离正轨，事实上确实有很多。如果忽略宣言的最后一句，您可能最终会创建一个没有计划或规范的项目，这将不可避免地导致无法控制的混乱。人们在管理软件项目时需要更直接的指导。这就是看板和Scrum被发明的原因。
- en: Kanban
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 看板
- en: First, let's cover Kanban. The best metaphor for explaining Kanban is a conveyor
    belt. Imagine that all of your tasks go through a fixed number of stages before
    they're finished. The concrete definition of those stages is up to you.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们来看看看板。解释看板的最佳比喻是传送带。想象一下，所有任务在完成之前经过固定数量的阶段。这些阶段的具体定义由您决定。
- en: 'In software projects, you may want to use the following process:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件项目中，您可能希望使用以下过程：
- en: Backlog (a buffer where all incoming tasks are collected before they're processed)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 积压（所有待处理任务收集的缓冲区）
- en: Requirements specification
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需求规范
- en: Development
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开发
- en: Code review
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码审查
- en: Testing
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试
- en: Deployment
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署
- en: 'Kanban visualizes each task on a board, as shown in the following diagram:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Kanban将每个任务可视化到一个面板上，如下图所示：
- en: '![](img/7d0fe435-1d6b-4ecf-94dd-6c7d89222cf9.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d0fe435-1d6b-4ecf-94dd-6c7d89222cf9.png)'
- en: Each stage should have a limit regarding the tasks that can be done in parallel.
    Kanban purposefully limits the number of simultaneous tasks to increase throughput.
    If the team becomes blocked because there are too many tasks sitting in the deployment stage,
    then all the team members who are capable of making shipments of the end product
    to production should stop doing their tasks and switch to getting rid of the bottleneck.
    Once the problem has been resolved, the team may decide to work on other tasks
    according to their priority. Because of this, Kanban favors cross-functional teams
    where everyone can help push tasks through each stage. Kanban does not remove
    the concept of roles, but it states that no matter the role, each team member
    should be able to help in dealing with a bottleneck.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 每个阶段应具有关于可以并行完成的任务数量的限制。看板有意限制同时进行任务的数量，以增加吞吐量。如果团队因为有太多任务停留在部署阶段而受阻，那么所有能够将最终产品运送到生产环境的团队成员都应停止当前任务，转而解决瓶颈问题。问题解决后，团队可以根据优先级决定是否继续处理其他任务。因此，看板支持跨职能团队，每个人都可以帮助推动每个阶段的任务。看板不会取消角色的概念，但它指出，无论角色如何，每个团队成员都应能够帮助处理瓶颈。
- en: 'Kanban focuses on completing a single task from start to finish as fast as
    possible. The main metrics that we can use to measure the effectiveness of Kanban
    projects are as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 看板专注于尽快完成单个任务。我们可以用以下主要指标来衡量看板项目的有效性：
- en: '**Lead time**: The time it takes for a task to move from the backlog to being
    completed on average.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**领导时间**：任务从积压队列到完成的平均所需时间。'
- en: '**Cycle tile**: The time it takes for a task to move from the starting stage
    to being completed on average. In our example, the cycle time would be between
    the requirements specification and deployment.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**周期时间**：任务从开始阶段到平均完成所需的时间。在我们的例子中，周期时间将介于需求规范和部署之间。'
- en: '**Throughput**: The average number of tasks you can get done during a time
    interval, that is, a day, a week, or a month.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**吞吐量**：您在时间间隔内完成的平均任务数，即一天、一周或一个月。'
- en: In general, you don't create a fixed project plan with fixed deadlines when
    using Kanban. Also, you don't have to estimate each task individually since the
    metrics will take care of that. Measure your team's throughput for several weeks
    so that you have an idea of how much you will be able to deliver in the near future.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，使用看板时，你不需要创建固定的项目计划和固定的截止日期。同时，你也不必单独估算每一个任务，因为度量指标会处理这个问题。你可以测量团队的工作流几周，以便了解近期能够交付的工作量。
- en: 'Kanban''s powers are also its limitations, some of which are as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 看板的优点也是其局限性，其中一些局限性如下：
- en: Kanban works best when the amount of work in each of your tasks is the same.
    If some tasks are taking significantly longer than the others, your metrics will
    stop being useful.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 看板在每个任务的工作量相同的情况下效果最佳。如果某些任务花费的时间明显长于其他任务，你的度量指标将变得没有意义。
- en: If you don't want to work as a cross-functional team, your throughput will suffer
    from bottlenecks, which makes using Kanban worthless.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你不想作为一个跨职能团队工作，你的工作流将遭遇瓶颈，这样使用看板就变得毫无意义。
- en: Kanban does not give you the tools you need to manage deadlines, project scope,
    and budgets. The single thing it takes care of is optimizing throughput.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 看板不会提供管理截止日期、项目范围和预算所需的工具。它唯一需要关注的就是优化工作流。
- en: 'Kanban is a great software management approach for projects with repetitive
    tasks. It can also be partially applied to parts of your project where it makes
    sense to use it. Here are some examples of projects where using Kanban is a good
    idea:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 看板是一种非常适用于具有重复任务的项目的软件管理方法。它也可以部分应用于项目的某些部分，只要在这些部分使用看板是有意义的。以下是一些适合使用看板的项目示例：
- en: In a software support project, where you should take care of deployment and
    fixing frequent issues.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在软件支持项目中，你需要处理部署和修复频繁出现的问题。
- en: If your data science project has a dedicated team that performs experiments
    with machine learning models, using Kanban will help increase their throughput.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的数据科学项目有一个专门的团队进行机器学习模型的实验，使用看板将有助于提高他们的工作流。
- en: Projects where you need to create lots of similar things, such as hundreds of
    web forms, data mappings, or identical machine learning models.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要创建大量相似物品的项目，如数百个网页表单、数据映射或相同的机器学习模型。
- en: The surprising thing about ![](img/8bde82b7-182f-46db-b1ff-c07bd4e276b7.png) (Kanban)
    is that it was originally developed to make the car manufacturing process more
    efficient. Toyota invented Kanban in 1959 and integrated it into their production
    environment in 1962\. You can see that all of Kanban's pros and cons make sense
    in terms of a manufacturing environment, where car parts go through different
    stages on a conveyor belt.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 ![](img/8bde82b7-182f-46db-b1ff-c07bd4e276b7.png)（看板）的一件令人惊讶的事情是，它最初是为了提高汽车制造过程的效率而开发的。丰田于1959年发明了看板，并于1962年将其整合进他们的生产环境中。你可以看到，看板的所有优缺点在制造环境中都有意义，在那里汽车零件通过传送带进入不同的生产阶段。
- en: Scrum
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Scrum
- en: Another popular management methodology from the agile family is Scrum. The main
    idea behind Scrum is the sprint. The sprint is a set of tasks with a fixed deadline
    and duration. Typical sprint durations are one week, two weeks, and one month.
    Explaining the entirety of Scrum would take another book, so we will only present
    the basics here.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个来自敏捷家族的流行管理方法是 Scrum。Scrum 背后的主要思想是 Sprint。Sprint 是一组有固定截止日期和持续时间的任务。典型的
    Sprint 持续时间为一周、两周和一个月。讲解整个 Scrum 过程需要一本书，因此我们在这里只介绍基本内容。
- en: 'The Scrum process includes the following steps:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Scrum 流程包括以下步骤：
- en: Backlog grooming
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 待办事项列表整理
- en: Sprint planning
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sprint 规划
- en: Sprint execution
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sprint 执行
- en: Retrospective
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回顾
- en: 'Akin to other agile methodologies, all the tasks go into the project backlog.
    The project backlog needs periodic grooming: all of the obsolete tasks should
    be deleted; the rest of the tasks need to be ordered by priority.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于其他敏捷方法，所有任务都会进入项目待办事项列表。项目待办事项列表需要定期整理：所有过时的任务应该删除；其余任务需要按优先级排序。
- en: The main component of Scrum is the sprint. A sprint is an iteration with a fixed
    deadline and a defined goal. The typical length of a sprint is 2 weeks. It always
    starts with a sprint planning meeting, where team members observe the project
    backlog and take tasks into a sprint. Each task is estimated in abstract story
    points. The goal of estimating in story points rather than hours is to make estimations
    relative rather than absolute. For example, we can consider a task with one story
    point trivial and a task with two story points as being slightly harder but still
    easy to complete. Four to six story points would indicate a normal task. Another
    system of story point estimates suggests using powers of 2 to 128 as task estimates.
    On the first sprint, the estimations are fairly approximate. On the second sprint,
    you compare the new tasks with the previous ones and see how many story points
    the task is worth. After four sprints, you can see how many story points your
    team can complete on average. You can also calculate an approximate hour equivalent
    of a single story point, although this should only be used as a reference and
    not as a substitute for story points during the sprint planning process.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Scrum的主要组成部分是冲刺（sprint）。冲刺是一个具有固定截止日期和明确目标的迭代周期。典型的冲刺周期为2周。冲刺通常以冲刺规划会议开始，团队成员在会议中查看项目待办事项，并将任务纳入冲刺。每个任务都会以抽象的故事点进行估算。使用故事点而不是小时来进行估算的目的是使估算相对而非绝对。例如，我们可以认为一个故事点的任务是微不足道的，而两个故事点的任务则稍微难一些，但仍然容易完成。四到六个故事点表示一个正常的任务。另一种故事点估算系统建议使用2的幂（最高到128）作为任务估算。在第一次冲刺时，估算比较粗略。在第二次冲刺时，你将新任务与之前的任务进行比较，并查看任务的故事点值。经过四次冲刺后，你可以看到团队的平均完成故事点数。你也可以计算出单个故事点的近似小时等价值，尽管这应该仅作为参考，而不是冲刺规划过程中的故事点替代物。
- en: During planning, each team member estimates the task on their own, and then
    their estimations are compared. This helps ensure everyone understands the task
    definition in the same way. Differences in estimates signify that the task needs
    a clearer explanation and evaluation in terms of the SMART criteria.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在规划阶段，每个团队成员单独估算任务，然后比较各自的估算结果。这有助于确保每个人对任务定义的理解一致。估算差异意味着任务需要更清晰的解释，并根据SMART标准进行评估。
- en: The sprint starts after the planning phase. When you start working on the sprint,
    it will be locked. You cannot change the scope you defined during the planning
    phase. The primary focus of the team is to complete all the tasks in the sprint
    before it ends. This strategy allows you to achieve your planned goals while being
    robust to changes. The main strength of Scrum is also its main weakness. If your
    customer comes into work in the middle of the week with an *extremely important
    task that needs to be done ASAP*, you should do your best to convince them that
    the team will deliver this during the next sprint. Scope locking is an essential
    mechanism that makes sprints work. If you depart from this rule often, Scrum will
    become an obstacle rather than a beneficial and effective management approach.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 冲刺在规划阶段后开始。当你开始进行冲刺时，冲刺范围将被锁定。你不能在规划阶段定义的范围内做任何更改。团队的主要目标是尽可能在冲刺结束前完成所有任务。这一策略使你在应对变化的同时，仍能实现计划目标。Scrum的主要优点也是其主要缺点。如果你的客户在周中带着一个*需要立即完成的极其重要任务*来找你，你应该尽最大努力说服他们，告诉他们团队会在下一个冲刺中交付该任务。范围锁定是使冲刺顺利进行的关键机制。如果你经常偏离这一规则，Scrum将变成一个障碍，而非一种有益且高效的管理方法。
- en: 'In practice, scope locking can cause problems, especially if you are working
    in a B2B environment. For situations where you have no options and are forced
    to change sprint scope, you have two options:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际操作中，范围锁定可能会引发问题，尤其是在B2B环境中。对于那些你没有选择余地，且被迫改变冲刺范围的情况，你有两个选择：
- en: '**Trade tasks**: You can remove a task from the sprint and add a new one.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交易任务**：你可以从冲刺中移除一个任务，并添加一个新任务。'
- en: '**Start a new sprint**: You can stop the current sprint and plan a new one.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开始一个新的冲刺**：你可以停止当前的冲刺并规划一个新的冲刺。'
- en: Using these options frequently makes Scrum ineffective. Try to negotiate a fixed
    sprint scope with your customers and show them that it brings benefits such as
    planned delivery while leaving space for requirement changes.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 经常使用这些选项会使Scrum变得低效。尝试与客户谈判固定的冲刺范围，并向他们展示这种方式带来的好处，比如按计划交付，同时也为需求变化留出空间。
- en: A good strategy you can use to avoid unexpected scope changes is to ask your
    customers to take part in backlog grooming and sprint planning. Scrum experts
    suggest that you should assign a special product owner role for this task. The
    product owner should decide on task priorities, sprint goals, and negotiate all
    the conflicting requirements with project stakeholders.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有效的策略可以帮助你避免预期之外的范围变化，那就是要求客户参与待办事项梳理和迭代规划。Scrum专家建议，为此任务指派一个特别的产品负责人角色。产品负责人应当决定任务的优先级、迭代目标，并与项目利益相关者协商所有冲突的需求。
- en: 'Scrum came directly from the software development world, so it has fewer limitations
    than Kanban. The price lies in its complexity: Scrum is not an easy methodology,
    and it will create management overhead. Each team member should understand Scrum
    if you want it to work. In complex projects, you may need to give someone the dedicated
    role of Scrum master. This is someone who will take care of applying the methodology
    to one or several of your projects.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Scrum直接来源于软件开发领域，因此它比Kanban具有更少的限制。代价在于其复杂性：Scrum并不是一种简单的方法论，它会带来管理负担。如果你希望它能有效运作，每个团队成员都应当理解Scrum。在复杂的项目中，你可能需要给某个人分配专门的Scrum
    master角色，负责将方法论应用到一个或多个项目中。
- en: In the next section, we will look at choosing a methodology according to the
    needs of your project.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将根据项目的需求来探讨如何选择方法论。
- en: Choosing a methodology that suits your project
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择适合你项目的方法论
- en: Choosing a project management methodology can become a captivating and complex
    task. You can spend a lot of time thinking about how one approach will support
    your processes better than another, and what limitations it will have. Try not
    to spend much of your time on methodological considerations. It is much more important
    to choose something and stick with it unless it is clearly harming your project.
    To simplify this process, we will explore some simple guidelines when it comes
    to choosing a management approach.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 选择项目管理方法可能成为一项引人入胜且复杂的任务。你可能会花费大量时间思考哪种方法能比其他方法更好地支持你的流程，以及它将带来哪些限制。尽量不要在方法论的考虑上浪费太多时间。选择一个方法并坚持下去，除非它显然对你的项目有害，这要比纠结于方法的细节更为重要。为了简化这一过程，我们将探讨一些关于选择管理方法的简单指南。
- en: Creating disruptive innovation
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创造颠覆性创新
- en: If you create a solution that should disrupt the market, the only thing that
    matters is the efficiency of your methodology. You won't have many customers at
    the start of the project, so you should be able to collect feedback and perform
    focused work to iterate on the next version of your product. Scrum works best
    in such situations. You can implement new features regarding the sprint and collect
    feedback at the end of each sprint to start a new iteration. Kanban will work
    too, but it will provide fewer benefits in terms of disruptive innovation.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你创建的解决方案应该颠覆市场，唯一重要的因素就是你方法论的效率。项目初期你可能没有太多客户，因此你应该能够收集反馈并专注于工作，以便对下一个版本进行迭代。在这种情况下，Scrum是最合适的。你可以在每个迭代周期内实现新功能，并在每次迭代结束时收集反馈，以开始新的迭代。Kanban也可以使用，但在颠覆性创新方面，它提供的好处较少。
- en: Providing a tested solution
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供经过测试的解决方案
- en: If you implement a system that resembles some of your past projects, it will
    presumably require much less research than in previous iterations. This is also
    the case for system integration projects, where you provide services that can
    integrate your product into the customer's IT environment. In those projects,
    you can define many customer-focused tasks that can be divided into three to five
    groups depending on the total amount of work that needs to be done. In this setting,
    Kanban will provide the most benefit. Using Kanban will allow you to focus on
    delivering more results to the customer in less time.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你实施的系统类似于你过去的项目，那么相较于以往的迭代，它可能需要的研究要少得多。系统集成项目也是如此，你提供的服务可以将产品集成到客户的IT环境中。在这些项目中，你可以定义许多以客户为中心的任务，并根据总工作量将其分成三到五个小组。在这种情况下，Kanban将提供最大益处。使用Kanban可以帮助你在更短的时间内向客户交付更多成果。
- en: Developing a custom project for a customer
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为客户开发定制项目
- en: 'Using Agile methodologies can be extremely tricky when you''re working on a
    project for a customer. Your clients will want to have the best of both worlds:
    fixed deadlines with constantly changing requirements. Your job is to decide on
    the best approach for this project and explain its pros and cons. Many teams settle
    for something between Scrum and waterfall: you develop the initial scope of the
    project, estimate it, and show it to the client. Next, you implement the project
    scope piece by piece using sprints. The requirements will inevitably change during
    the implementation stage, so it is important that you manage these changes and
    keep the customer involved in sprint planning.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当你为客户工作时，使用敏捷方法论可能非常棘手。客户希望同时拥有两全其美的方案：固定的截止日期和不断变化的需求。你的任务是决定该项目的最佳方法，并解释它的优缺点。许多团队选择在Scrum和瀑布之间找到折中的做法：你制定项目的初步范围，进行估算，并展示给客户。接下来，你将通过冲刺逐步实施项目范围。需求在实施阶段不可避免地会发生变化，因此，管理这些变化并确保客户参与冲刺规划至关重要。
- en: Choosing a project methodology goes hand in hand with estimating data science
    projects. In the next section, we will define the goals of the estimation process
    and learn how to make estimates.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 选择项目方法论与估算数据科学项目密切相关。在接下来的章节中，我们将定义估算过程的目标，并学习如何进行估算。
- en: Estimating data science projects
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 估算数据科学项目
- en: 'If you need to explain the basic principles of forecasting to someone, ask
    them if they have ever worked on a software project. If so, they already know
    the basics of forecasting: everyone who has worked on one has estimated tasks.
    Everyone needs estimates. Your customers need them to plan and control when they
    will start to use the results of your project. The project manager needs estimates
    to understand the scope, amount of work, and approximate costs for individual
    tasks or an entire project.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要向某人解释预测的基本原理，可以问他们是否曾经参与过软件项目。如果是的话，他们已经了解了预测的基本知识：每个做过项目的人都曾经进行过任务估算。每个人都需要估算。你的客户需要估算来计划并控制他们何时开始使用你项目的成果。项目经理需要估算来了解任务或整个项目的范围、工作量和大致成本。
- en: 'Estimation is beneficial in several areas, such as the following:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 估算在多个领域都很有益，以下是几个例子：
- en: '**Understanding work structure**: Break down a task into multiple subtasks
    to view the main steps that you need to complete.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**理解工作结构**：将一个任务分解成多个子任务，以查看需要完成的主要步骤。'
- en: '**Understanding complexity**: While it is hard to estimate a complex task by
    itself, estimating each individual part of the work structure is simpler. It allows
    you to get an idea of how complex the task is and how long it will take to finish
    it.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**理解复杂性**：虽然单独估算一个复杂任务很困难，但估算工作结构中的每个单独部分会更简单。这可以帮助你了解任务的复杂性以及完成它所需的时间。'
- en: '**Understanding costs**: In most businesses, you won''t be able to start working
    on a project if you don''t explain and defend its costs and required resources
    first.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**理解成本**：在大多数企业中，如果不先解释和辩护项目的成本和所需资源，你无法开始工作。'
- en: The largest problem with estimations is that they fail. Our plans are inaccurate,
    incomplete, and often irrelevant to how the real work will be done. Even experienced
    software developers struggle to estimate the total amount of hours that it will
    take to do a single task unless they have done it multiple times already.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 估算的最大问题在于它们往往失败。我们的计划不准确、不完整，而且通常与实际工作完成的方式无关。即使是经验丰富的软件开发人员，也难以估算完成一个任务所需的总小时数，除非他们已经做过多次。
- en: Research shows that humans are bad at absolute estimates. Our brains are simply
    not suited to making accurate mental models of complex multilayered projects.
    For example, if we were to ask a bunch of strangers about the height of the nearest
    building, the majority would fail to give you the correct answer. However, if
    you told them the height of several buildings, their estimates would be much more
    accurate. This is true not only for building height estimates but for all kinds
    of estimation.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 研究表明，人类在进行绝对估算时表现不佳。我们的脑袋并不适合建立复杂多层次项目的准确心理模型。例如，如果我们问一群陌生人最近的建筑物有多高，大多数人无法给出正确答案。然而，如果你告诉他们几座建筑的高度，他们的估算会更准确。这不仅适用于建筑物的高度估算，任何类型的估算都是如此。
- en: 'To use relative estimates in data science projects, you need two things: relevant
    samples and a good estimation process. We can think of relevant estimates as simple
    statistical estimators that average the length of all previous relevant tasks.
    To create such an estimator, we first need to collect a dataset. If you follow
    a waterfall process, then to get one new data point in your estimation dataset, you
    need to complete a whole project from start to end. You may need to fail estimates
    in many projects before you get good at estimating one particular type of project.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 要在数据科学项目中使用相对估算，你需要两个条件：相关样本和良好的估算过程。我们可以把相关估算看作是简单的统计估算器，通过平均所有之前相关任务的长度来得出。为了创建这样的估算器，我们首先需要收集数据集。如果你遵循瀑布流程，那么为了获得估算数据集中的一个新数据点，你需要从头到尾完成一个整个项目。在你熟练估算某一特定类型项目之前，可能需要在许多项目中失败进行估算。
- en: The trick is to get down to the individual task levels. Scrum suggests that
    you use relative story points instead of absolute hours for this reason. First,
    your estimates become relative at the task level, then at the sprint level, and
    finally at the project level. If you have no prior experience that will help you
    to make relative estimates, the only absolute estimate you should make is one
    for the first sprint of the project. From here, you should use the previous tasks
    as a basis for making new estimations.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 诀窍是深入到单个任务级别。Scrum建议你使用相对的故事点，而不是绝对的小时数，正因为如此。首先，你的估算会在任务级别变得相对，然后在冲刺级别，最后在项目级别。如果你没有任何有助于进行相对估算的经验，你应该进行的唯一绝对估算是针对项目的第一个冲刺。从这里开始，你应该以之前的任务为基础进行新的估算。
- en: You don't have to use Scrum to benefit from relative estimations. Scrum provides
    one way to make them work, but it may not be ideal for your circumstances. If
    that is the case, you can adapt any management methodology for relative estimation.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必使用Scrum来从相对估算中受益。Scrum提供了一种使其生效的方式，但可能并不适合你的情况。如果是这样，你可以调整任何管理方法来进行相对估算。
- en: '**Differentiating between business and implementation estimates:**'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '**区分商业估算和实施估算：**'
- en: 'We can look at estimates from two perspectives. The first one will be familiar
    to project managers and team leaders who are mostly concerned with project delivery:
    the implementation perspective. The main goal of estimates in this example is
    to provide correct expectations regarding how much time and money will be required
    to build the solution.'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从两个角度来看待估算。第一个角度对于主要关注项目交付的项目经理和团队领导来说非常熟悉：实施角度。在这个例子中，估算的主要目标是提供关于构建解决方案所需时间和资金的正确预期。
- en: Another perspective is closely related to the business goals of the project
    and is often unseen by the implementation team. Every project is generally backed
    up by a business model that fixes expectations on revenue increases, customer
    satisfaction, reduced costs, and so on.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个角度与项目的商业目标密切相关，通常是实施团队未曾看到的。每个项目通常都有一个支持它的商业模型，设定了关于收入增长、客户满意度、成本减少等方面的预期。
- en: This business model should always be considered when you're creating implementation
    estimates. In data science projects, business estimations can be included in the
    project by deriving budget constraints from a business model and creating a set
    of business metrics that will evaluate the project's performance.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建实施估算时，应该始终考虑这个商业模型。在数据科学项目中，可以通过从商业模型中得出预算限制并创建一套评估项目绩效的商业指标，将商业估算纳入项目中。
- en: Learning to make time and cost estimates
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习如何进行时间和成本估算
- en: Using relative estimates is an effective strategy, but it becomes useless if
    someone asks you, *When exactly will you be able to finish this?* Scrum and Kanban
    do not give you project estimation tools. In fact, both methodologies argue that
    making such estimates is unnecessary. This line of thought is true if your goal
    is to efficiently complete a project with known deadlines and known budget constraints.
    However, there are situations where you may need to set budgeting and time constraints
    yourself.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相对估算是一种有效的策略，但如果有人问你，*你到底什么时候能完成这个？* 那它就变得毫无意义了。Scrum和Kanban并没有为你提供项目估算工具。事实上，这两种方法论认为做出这样的估算是没必要的。如果你的目标是高效完成一个有已知截止日期和预算限制的项目，这种想法是成立的。然而，也有一些情况，你可能需要自己设定预算和时间的限制。
- en: Let's take a consulting environment as an example. We need to build a custom
    analytics system for a client. The main task is to estimate the probability of
    buying a certain product based on the user's profile. This customer needs an entirely
    new solution that will meet the requirements of various stakeholders from several
    departments. They also ask you to integrate the solution with various IT systems.
    They have invited several companies to compete for the project. The first thing
    they ask each candidate company is, *How much will this cost and how fast will
    you be able to build it?* *How can we approach this if we know the limitations
    of absolute estimations?*
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以咨询环境为例。我们需要为客户构建一个定制的分析系统。主要任务是根据用户的资料估算购买某个产品的概率。该客户需要一个全新的解决方案，以满足来自多个部门的不同利益相关者的需求。他们还要求您将该解决方案与各种IT系统进行集成。他们邀请了几家公司竞争这个项目。第一件他们问每个候选公司的问题是，*这将花费多少，您能多快完成？*
    *如果我们知道绝对估算的局限性，我们该如何应对？*
- en: 'Let''s start with the outline. The outline is a hierarchical list of high-level
    tasks that you will need to complete. The simplest outline for a waterfall project
    may look like this:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从大纲开始。大纲是一个分层的任务列表，您需要完成这些任务。瀑布式项目的最简单大纲可能如下所示：
- en: Collect the requirements
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集需求
- en: Implement the requirements
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现需求
- en: Test the system
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试系统
- en: Deploy the system
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署系统
- en: Using a waterfall project is risky, so we will split the system into several
    stages, with each going through several successive steps. Depending on the complexity
    of the stage, you will need to make one or several iterations of the same stage
    to complete it. In theory, you could try to create an outline for every two-week
    sprint, but this is unrealistic because of the ever-changing nature of data science
    projects.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用瀑布式项目方法具有一定风险，因此我们将把系统分为多个阶段，每个阶段都会经历若干连续的步骤。根据阶段的复杂性，您可能需要对同一阶段进行一次或多次迭代才能完成它。从理论上讲，您可以尝试为每个两周的冲刺创建一个大纲，但由于数据科学项目的不断变化，这种做法是不现实的。
- en: 'For example, let''s look at the outline for requirements collection:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，来看一下收集需求的大纲：
- en: 'Collect the requirements:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集需求：
- en: 'Software architecture:'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件架构：
- en: Nonfunctional requirements specification
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非功能性需求规格
- en: Nonfunctional requirements implementation strategy
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非功能性需求实现策略
- en: Component diagram
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件图
- en: Integration diagram
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成图
- en: 'Functional requirements specification:'
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能性需求规格：
- en: 'UI:'
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UI：
- en: UI requirements
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UI需求
- en: UI mockups
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UI原型图
- en: Backend services
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端服务
- en: 'Data analysis and modeling:'
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据分析与建模：
- en: EDA
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: EDA
- en: Creating an experimentation backlog
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建实验待办事项列表
- en: You should start by defining the rough steps and then detail them. If you have
    created similar projects before, you can look at their outlines so that you know
    where to start. Collecting and using data from other projects can serve as a primary
    source of relative estimates, so do not underestimate your prior experience.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该从定义粗略的步骤开始，然后逐步细化它们。如果您之前创建过类似的项目，您可以参考它们的大纲，这样您就能知道从哪里开始。收集并使用其他项目的数据可以作为相对估算的主要来源，因此不要低估您的先前经验。
- en: You will have difficulty decomposing some tasks. Being unsure about an approach
    to a task is a red flag signaling that you need to communicate with your customers
    and figure this out. If you do not how many systems you will need to integrate
    with, you will have a hard time decomposing all the stages and tasks related to
    integration. In this case, we need to call the customer and quickly discover the
    necessary information. However, you may have hundreds of such questions during
    the estimation process, and tracking new information will quickly become ineffective.
    It is a good idea to prepare a numbered list of questions first. Answers can change
    during the estimation process, so each question should be assigned a date. Ideally,
    those questions should be shared in a format that makes collaboration easy.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会发现一些任务难以分解。对任务的处理方式不确定是一个信号，表明您需要与客户沟通并找出解决方案。如果您不知道需要与多少个系统进行集成，那么分解所有与集成相关的阶段和任务将非常困难。在这种情况下，我们需要与客户沟通，迅速获取必要的信息。然而，在估算过程中，您可能会有数百个类似的问题，追踪新信息将迅速变得低效。最好提前准备一个编号问题列表。问题的答案在估算过程中可能会发生变化，因此每个问题应分配一个日期。理想情况下，这些问题应以便于协作的格式共享。
- en: When your outline is detailed enough, it is time to design a software architecture
    proposal. This is a crucial step because matching outlines with customer requirements
    is not always economically viable or even possible from a technological standpoint.
    You should have at least a rough idea of what technologies you will use, how they
    will integrate with the rest of the customer's system, and how your solution should
    be deployed. If there are any crucial nonfunctional requirements, such as 24/7
    availability, the software architect should also think about how to implement
    them in terms of technology and system design. Drafting a high-level architecture
    vision will help explain this outline. Do not hesitate to change the outline if
    you think that's necessary. Software design is a complex task an experienced engineer
    should do, so if you do not have deep expertise in designing software solutions,
    ask for help from someone on your team, or even better, make software design a
    collaborative effort.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的大纲足够详细时，就该设计软件架构提案了。这是一个关键步骤，因为将大纲与客户需求匹配并不总是经济可行的，甚至从技术角度来看也未必可行。你应该至少对将使用哪些技术、如何将它们与客户系统的其他部分集成、以及如何部署你的解决方案有一个大致的了解。如果有任何关键的非功能性需求，比如24/7的可用性，软件架构师还应考虑如何从技术和系统设计的角度实现这些需求。制定一个高层次的架构愿景将有助于解释这个大纲。如果你认为有必要，千万不要犹豫去修改大纲。软件设计是一个复杂的任务，应该由有经验的工程师来做，因此，如果你在软件解决方案设计方面没有深入的专业知识，请寻求团队成员的帮助，或者更好地，将软件设计作为一个协作的过程。
- en: After you've completed the outline and have a software architecture vision,
    you can start estimating the project. I recommend using simple statistical estimation
    procedures such as the **program evaluation and review technique** (**PERT**).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 完成大纲并有了软件架构愿景后，你可以开始估算项目。我推荐使用简单的统计估算方法，例如**程序评估与审查技术**（**PERT**）。
- en: 'In PERT, you give each task a three-point estimate:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在PERT中，你为每个任务给出三点估算：
- en: '**Optimistic estimate**: The time you plan to spend on the task if everything
    goes well; minor technical problems and requirements issues may arise.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**乐观估算**：如果一切顺利，你计划花费在任务上的时间；可能会有一些小的技术问题和需求问题。'
- en: '**Most likely estimate**: The most realistic estimate you can give for the
    task.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最可能的估算**：你能为任务提供的最现实的估算。'
- en: '**Pessimistic estimate**: The time that''s required to finish the task if problems
    arise. This includes additional risks for dealing with experiments that have gone
    wrong, complex debugging sessions, and having long debates with the customer.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**悲观估算**：在出现问题时，完成任务所需的时间。这包括处理失败实验、复杂的调试过程以及与客户进行长时间讨论的额外风险。'
- en: 'Then, you can calculate a simple weighted average to get the final estimate:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以计算一个简单的加权平均值来得到最终的估算：
- en: '![](img/5b8ed5ce-4b32-43f4-baec-969771483465.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b8ed5ce-4b32-43f4-baec-969771483465.png)'
- en: 'Calculating the standard deviation is also useful when it comes to making confidence
    intervals:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 计算标准差对于制作置信区间也很有用：
- en: '![](img/d0a5302f-0c0f-43db-b6cd-50d57bc1856b.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d0a5302f-0c0f-43db-b6cd-50d57bc1856b.png)'
- en: '![](img/ffe349f6-61eb-4b27-9f13-7af82bfc0f42.png) will give you a 99.7% confidence
    interval, meaning that the task will end up somewhere between these numbers with
    a 99.7% probability. If this range is too wide for you, you can use ![](img/db37e54f-236b-4e22-8614-7a4fd948247d.png),
    which will give you a 95.5% confidence interval.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/ffe349f6-61eb-4b27-9f13-7af82bfc0f42.png)将为你提供99.7%的置信区间，这意味着任务将以99.7%的概率落在这些数字之间。如果这个范围对你来说太宽，你可以使用![](img/db37e54f-236b-4e22-8614-7a4fd948247d.png)，它会给你一个95.5%的置信区间。'
- en: Use data from any finished projects as a base for relative estimation. The more
    external resources you use for estimation, the more accurate and risk-averse your
    estimates will become.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 使用任何已完成项目的数据作为相对估算的基础。你使用的外部资源越多，估算就越准确，风险也会相对较低。
- en: Since we are ineluctably bad at estimation, all of the estimates are only a
    rough idea of your current view of the project implementation plan. Project outlines
    and estimates should constantly change and be adapted to the current situation.
    You should periodically check whether the original plan should be changed and
    updated. If so, convey this to the customer and work through the necessity of
    the changes. It may be that the customer added several new features to your backlog,
    thinking that they were present in the original scope. If this is not the case,
    negotiate a scope expansion, followed by a budget and deadline extension. If these
    features are not critical enough, advise the customer to remove them from the
    backlog. With each completed task on a particular type of project, your experience
    will grow. As a result, you will be able to anticipate more of the customer's
    needs and include them in the base plan, which will make estimates more accurate.
    Store all of the versions of the project estimations so that you can track all
    scope changes effortlessly.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在估算方面不可避免地存在误差，所有的估算仅仅是对当前项目实施计划的粗略看法。项目大纲和估算应不断变化，并根据当前情况进行调整。你应该定期检查是否需要修改和更新原始计划。如果需要，及时向客户传达，并讨论这些变更的必要性。客户可能会将若干新功能添加到你的待办事项中，认为这些功能属于原始范围。如果事实并非如此，则需要协商范围扩展，并相应延长预算和期限。如果这些功能不够关键，可以建议客户将其从待办事项中移除。随着每个特定类型项目任务的完成，你的经验将不断增长。结果，你将能够预测更多客户的需求，并将其纳入基础计划，从而使估算更为准确。存储所有版本的项目估算，以便轻松追踪所有范围变更。
- en: Project architecture vision should also be robust in terms of changes. The more
    customized your solution is, the less likely it is that it will create an ideal
    architecture vision that will survive all scope changes. Plan ahead and include
    several variation points in the parts of your solution that are the most likely
    to change. A vacation point is a software component (or a set of software components)
    that was going to change from the start. A plugin architecture and microservices
    with fixed contracts are examples of variation points that allow for easy extension
    or substitution.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 项目架构愿景在面对变化时也应具备足够的韧性。你的解决方案越是定制化，就越不可能创造出一个能够应对所有范围变化的理想架构愿景。提前规划，并在最可能变化的解决方案部分加入多个变动点。变动点是指从一开始就注定会发生变化的软件组件（或一组软件组件）。插件架构和具有固定契约的微服务就是允许轻松扩展或替代的变动点的例子。
- en: Discovering the goals of the estimation process
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发现估算过程中的目标
- en: It is important to keep the end goal in mind while making estimations. You can
    build a data science system without making a grand plan. Creating estimates and
    keeping them up to date requires a lot of effort and time. Data science projects
    are complex and unpredictable, so the more you and your customers believe in your
    estimates, the more likely they're going to fail. Estimates become more uncertain
    if your team has no prior experience in building solutions for a new business
    domain or if you are trying to apply new types of algorithms or use new technologies.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行估算时，重要的是始终牢记最终目标。你可以在没有宏大计划的情况下构建数据科学系统。创建估算并保持其更新需要大量的努力和时间。数据科学项目复杂且不可预测，因此，越是你和你的客户相信你的估算，它们失败的可能性就越大。如果你的团队在为新业务领域构建解决方案方面没有先前经验，或者你正在尝试应用新类型的算法或新技术，估算将变得更加不确定。
- en: Having a fine-grained view of how to achieve the end goal is useful. In contrast,
    relying on the exact calculations of how long it will take you, or using extremely
    detailed outlines, is not. Use estimates wisely; they will help you align your
    implementation plans with customer demands.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 对如何实现最终目标有一个细粒度的视角是有帮助的。相反，依赖于精确计算所需的时间，或使用极为详细的大纲，则没有太大意义。明智地使用估算，它们将帮助你使实施计划与客户需求保持一致。
- en: Summary
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at how to manage data science projects. We explored
    how analytical projects differ from software engineering projects and studied
    the data science project life cycle. We looked at how we can choose a project
    management methodology that suits our needs and uncovered practical guidelines
    for estimating data science projects, and also discussed the limitations of long-term
    plans. No matter how good your plans and estimates are, data science projects
    have many inherent risks that can become the failing points of your projects.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何管理数据科学项目。我们研究了分析项目与软件工程项目的区别，并学习了数据科学项目的生命周期。我们分析了如何选择适合我们需求的项目管理方法，并揭示了估算数据科学项目的实用指南，还讨论了长期计划的局限性。无论你的计划和估算有多好，数据科学项目都有许多固有风险，这些风险可能成为项目失败的关键因素。
- en: In the next chapter, we will look at common pitfalls of data science projects.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论数据科学项目的常见陷阱。
