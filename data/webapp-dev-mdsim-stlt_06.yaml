- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Implementing NLP Techniques for Text Analysis and Processing in Streamlit
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Streamlit中实现NLP技术进行文本分析和处理
- en: Translation and sentiment analysis are very important techniques used in **natural
    language processing** (**NLP**) for analyzing and processing text data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译和情感分析是**自然语言处理**（**NLP**）中用于分析和处理文本数据的非常重要的技术。
- en: Translation is the process of converting text from one language to another.
    Sentiment analysis is the process of identifying the emotional tone or sentiment
    of a piece of text. It is used to analyze customer feedback, social media sentiment,
    and product reviews.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译是将文本从一种语言转换为另一种语言的过程。情感分析是识别一段文本的情感色调或情感的过程。它用于分析客户反馈、社交媒体情感和产品评价。
- en: Both of them are powerful techniques that enable NLP applications to process
    and analyze text data and extract valuable insights from it. In this chapter,
    we will continue our exploration of web app creation with Streamlit while learning
    more about the techniques. In the previous chapter, we completed the **Text Analysis**
    voice of our web application’s menu, and now, finally, we are ready to finish
    all the parts of this application.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这两者都是强大的技术，能够使NLP应用程序处理和分析文本数据，并从中提取有价值的见解。在本章中，我们将继续探索Streamlit Web应用程序的创建，同时学习更多关于这些技术的知识。在上一章中，我们完成了Web应用程序菜单中的**文本分析**部分，现在，我们终于准备好完成这个应用程序的所有部分。
- en: By the end of the chapter, our first web application will be more or less completed,
    and you will have a good understanding of how to build a Python web application
    step by step using Streamlit, in a very easy way.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，我们的第一个Web应用程序基本完成，你将充分理解如何使用Streamlit按步骤、非常简单地构建Python Web应用程序。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Deep-diving into NLP techniques
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入探讨NLP技术
- en: Learning more about language translation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习更多关于语言翻译的知识
- en: An in-depth look at sentiment analysis
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入了解情感分析
- en: Recap of our first web application
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们第一个Web应用程序的回顾
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In this chapter, we will use the following libraries, packages, and tools:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用以下库、包和工具：
- en: Sublime Text
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sublime Text
- en: Python 3
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3
- en: '`pipenv`'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pipenv`'
- en: Streamlit
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Streamlit
- en: '`spacy`'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`spacy`'
- en: '`textblob`'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`textblob`'
- en: '`neattext`'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`neattext`'
- en: '`deep_translator`'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deep_translator`'
- en: 'The code in the chapter can be accessed through the following GitHub link:
    [https://github.com/PacktPublishing/Web-App-Development-Made-Simple-with-Streamlit/tree/c51973f13b69b94065544c4a33057412986e9b99/Chapter06](https://github.com/PacktPublishing/Web-App-Development-Made-Simple-with-Streamlit/tree/c51973f13b69b94065544c4a33057412986e9b99/Chapter06)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的代码可以通过以下GitHub链接访问：[https://github.com/PacktPublishing/Web-App-Development-Made-Simple-with-Streamlit/tree/c51973f13b69b94065544c4a33057412986e9b99/Chapter06](https://github.com/PacktPublishing/Web-App-Development-Made-Simple-with-Streamlit/tree/c51973f13b69b94065544c4a33057412986e9b99/Chapter06)
- en: Deep-diving into NLP techniques
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入探讨NLP技术
- en: Our web application already has a well-structured skeleton that can be applied
    to future applications, which is very important. Additionally, our app offers
    a high level of customization, such as the ability to set a title and icon in
    the browser. We have also completed the **Text Analysis** and **About** sections
    of the menu. To see the current status of our developments, please refer to *Figure
    6**.1*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Web应用程序已经有了一个结构良好的框架，可以应用于未来的应用程序，这一点非常重要。此外，我们的应用程序提供了高度的自定义功能，例如可以在浏览器中设置标题和图标。我们还完成了菜单中的**文本分析**和**关于**部分。要查看我们开发的当前状态，请参阅*图6.1*。
- en: '![Figure 6.1: Starting point of Chapter 6](img/B21147_06_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1：第6章的起点](img/B21147_06_01.jpg)'
- en: 'Figure 6.1: Starting point of Chapter 6'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1：第6章的起点
- en: When we click on **Translation** or **Sentiment Analysis**, we just get, in
    the main part of our web app, a subheading reminding us of the section we are
    in, and nothing else. So, it’s now time to code these two functions.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们点击**翻译**或**情感分析**时，我们仅在Web应用程序的主界面看到一个子标题，提醒我们当前所在的部分，除此之外没有其他内容。所以，现在是时候编写这两个功能了。
- en: Before delving into the code, let’s try to understand exactly what translation
    and sentiment analysis are.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入代码之前，让我们先尝试理解翻译和情感分析到底是什么。
- en: What is translation?
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是翻译？
- en: '**Translation** in NLP is the task of automatically converting text or speech
    from one language to another. It helps break down language barriers and facilitates
    global communication. Advances in **machine translation** (**MT**) have revolutionized
    the field, with **statistical machine translation** (**SMT**) and **neural machine
    translation** (**NMT**) playing key roles. NMT, powered by deep learning and transformer
    models, captures context and generates more fluent translations. Challenges include
    preserving style, handling idioms, and adapting to specific domains. The future
    holds promise for further advancements in accurate and culturally sensitive translation
    systems, promoting cross-cultural understanding.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 自然语言处理中的**翻译**是自动将文本或语音从一种语言转换为另一种语言的任务。它有助于消除语言障碍，促进全球交流。**机器翻译**（**MT**）的进展彻底改变了这一领域，**统计机器翻译**（**SMT**）和**神经机器翻译**（**NMT**）发挥了关键作用。由深度学习和Transformer模型驱动的NMT捕捉上下文并生成更流畅的翻译。挑战包括保留风格、处理习语和适应特定领域。未来有望进一步推进准确和文化敏感的翻译系统，促进跨文化理解。
- en: What is sentiment analysis?
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是情感分析？
- en: '**Sentiment analysis**, or **opinion mining**, is a task in NLP that aims to
    extract emotions or subjective information from text. It involves classifying
    text into *positive*, *negative*, or *neutral* sentiments. Traditional approaches
    relied on rules and lexicons, while machine learning techniques, including deep
    learning and pre-trained models such as BERT, have revolutionized sentiment analysis.
    Challenges include fine-grained analysis and aspect-based sentiment. The future
    holds advancements in accuracy, language coverage, and ethical considerations.
    Sentiment analysis provides valuable insights for decision-making in various applications.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**情感分析**，或称为**意见挖掘**，是自然语言处理中旨在从文本中提取情感或主观信息的任务。它涉及将文本分类为*积极*、*消极*或*中立*的情感。传统方法依赖于规则和词汇表，而包括深度学习和预训练模型（如BERT）在内的机器学习技术已经彻底改变了情感分析的方式。挑战包括细粒度分析和基于方面的情感分析。未来将在准确性、语言覆盖和伦理考虑方面取得进展。情感分析为各种应用的决策提供了宝贵的见解。'
- en: Sentiment analysis provides insights into opinions and emotions expressed in
    text. It helps businesses understand customer feedback, market trends, and public
    sentiment. By analyzing sentiment, companies can improve products, tailor marketing
    strategies, and make data-driven decisions. Sentiment analysis also finds applications
    in social media monitoring, reputation management, and public opinion analysis.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 情感分析提供了对文本中表达的意见和情感的见解。它帮助企业了解客户反馈、市场趋势和公众情绪。通过分析情感，公司可以改进产品、量身定制营销策略并做出数据驱动的决策。情感分析还应用于社交媒体监控、声誉管理和公众意见分析。
- en: Together, translation and sentiment analysis offer enhanced customer understanding.
    Businesses can analyze sentiment across languages, gaining insights from multilingual
    sources. This integration enables comprehensive views of customer sentiment across
    markets, aiding in identifying patterns, areas for improvement, and cultural context
    adaptation.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 结合起来，翻译和情感分析提供了增强的客户理解能力。企业可以跨语言分析情感，从多语言来源中获取见解。这种整合使得能够全面了解市场上客户的情感，帮助识别模式、改进领域和文化上下文的适应。
- en: These tools also contribute to social and political analysis. By analyzing sentiment
    across languages, researchers and policymakers gain a broader understanding of
    public sentiment on various topics, policies, and social movements. This facilitates
    effective communication and informed decision-making.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具还有助于社会和政治分析。通过跨语言分析情感，研究人员和决策者可以更广泛地理解公众对各种主题、政策和社会运动的情感。这有助于有效沟通和知情决策。
- en: Let’s begin by checking out the **Translation** option on our menu.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从菜单上的**翻译**选项开始。
- en: Deep-diving into language translation
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入探讨语言翻译
- en: Translation breaks language barriers, facilitating global communication and
    cross-cultural understanding. It enables businesses to expand internationally,
    connect with diverse audiences, and foster cultural exchange. MT advancements
    make accurate and accessible translation services widely available, transforming
    the way we communicate in our interconnected world.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译打破语言障碍，促进全球交流和跨文化理解。它使企业能够在国际上扩展业务，与不同的受众建立联系并促进文化交流。机器翻译的进步使得准确和可访问的翻译服务广泛可用，改变了我们在日益互联的世界中交流的方式。
- en: To add the translation function to our web app, we must add some lines of code
    in a very precise sequence.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要将翻译功能添加到我们的网页应用程序中，我们必须按照非常精确的顺序添加几行代码。
- en: Adding a text area
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加文本区域
- en: 'As you can imagine, the first thing to do to perform translation is to introduce
    a text area where we can write the text that needs to be translated. As we know
    very well, this operation is extremely easy since it needs just a line of code.
    So, the first step is to place our code in the appropriate section of the menu,
    as shown in *Figure 6**.2*:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所想，执行翻译的第一步是引入一个文本区域，在这里我们可以写下需要翻译的文本。我们很清楚，这个操作非常简单，因为它只需要一行代码。所以，第一步是将我们的代码放置在菜单的适当位置，如*图
    6.2*所示：
- en: '![Figure 6.2: Translation section](img/B21147_06_02.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2：翻译部分](img/B21147_06_02.jpg)'
- en: 'Figure 6.2: Translation section'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2：翻译部分
- en: 'Then, add `text_area`, as shown in *Figure 6**.3*:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，添加`text_area`，如*图 6.3*所示：
- en: '![Figure 6.3: A new text area](img/B21147_06_03.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3：一个新的文本区域](img/B21147_06_03.jpg)'
- en: 'Figure 6.3: A new text area'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3：一个新的文本区域
- en: 'Now, by rerunning our web application in the browser, the new text area will
    be displayed. The text we put in this new `text_area` is stored in a variable
    named `raw_text`. When dealing with text, it’s always a good idea to check whether
    we really have some text to process or whether our content is empty, so let’s
    add a simple `if` clause to our code, as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过在浏览器中重新运行我们的网页应用，新的文本区域将会显示出来。我们放入这个新`text_area`中的文本会存储在一个名为`raw_text`的变量中。在处理文本时，检查我们是否有要处理的文本或者内容是否为空总是一个好主意，所以我们可以向代码中添加一个简单的`if`语句，如下所示：
- en: '![Figure 6.4: Text length check](img/B21147_06_04.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4：文本长度检查](img/B21147_06_04.jpg)'
- en: 'Figure 6.4: Text length check'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4：文本长度检查
- en: 'Now, we would want to print a warning message if the text length is shorter
    than three characters. This is because many translation libraries need a minimum
    number of characters in order to process the text. So, if we write, for example,
    `hi`, we get the following result:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果文本长度少于三个字符，我们希望打印一条警告信息。这是因为许多翻译库需要一定的最小字符数才能处理文本。所以，如果我们写了，比如`hi`，我们会得到以下结果：
- en: '![Figure 6.5: Text length check on the browser side](img/B21147_06_05.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.5：浏览器端的文本长度检查](img/B21147_06_05.jpg)'
- en: 'Figure 6.5: Text length check on the browser side'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5：浏览器端的文本长度检查
- en: Now that the text to be translated is ready, we need to deal with the translation
    itself.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在要翻译的文本已经准备好，我们需要处理翻译本身。
- en: Performing the translation task
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行翻译任务
- en: 'To perform the translation task, we will use a new library named `deep_translator`.
    So, first of all, let’s install it by simply typing the following command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 执行翻译任务时，我们将使用一个名为`deep_translator`的新库。所以，首先，我们只需输入以下命令来安装它：
- en: '[PRE0]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After that, let’s import this library by typing the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们通过输入以下内容来导入这个库：
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see, we are leveraging `GoogleTranslator` services.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们正在利用`GoogleTranslator`服务。
- en: If you want to get more information about `deep_translator`, please check its
    dedicated space on PyPI ([https://pypi.org/project/deep-translator/](https://pypi.org/project/deep-translator/)).
    You really will find out about a lot of extremely valuable features to explore.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于`deep_translator`的信息，请查看其在PyPI上的专属页面([https://pypi.org/project/deep-translator/](https://pypi.org/project/deep-translator/))。你将发现许多非常有价值的功能可以探索。
- en: "![Figure 6.6: Deep\uFEFF-translator on PyPI](img/B21147_06_06.jpg)"
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.6：PyPI上的Deep-translator](img/B21147_06_06.jpg)'
- en: 'Figure 6.6: Deep-translator on PyPI'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6：PyPI上的Deep-translator
- en: 'It is very important to define the language of the translation. So, let’s create
    a `select_box` that will enable users to choose a specific language:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 定义翻译的语言非常重要。因此，我们将创建一个`select_box`，让用户选择特定的语言：
- en: '![Figure 6.7: Text language selection](img/B21147_06_07.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.7：文本语言选择](img/B21147_06_07.jpg)'
- en: 'Figure 6.7: Text language selection'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.7：文本语言选择
- en: 'This code is very simple: we are just selecting a language from among a little
    subset (actually, a list) and assigning the proper code to it (`de` for German,
    `es` for Spanish, etc.).'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码非常简单：我们只是从一个小的子集（实际上是一个列表）中选择一个语言，并为其分配正确的代码（`de`代表德语，`es`代表西班牙语，等等）。
- en: 'Finally, now that we have the target language, we just need to execute the
    translation and we can perform it, for example, by clicking on the **Translate**
    button; this is the complete code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，现在我们有了目标语言，我们只需要执行翻译操作，并且可以通过点击**翻译**按钮来完成；这是完整的代码：
- en: '![Figure 6.8: The Translation function code](img/B21147_06_08.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.8：翻译功能代码](img/B21147_06_08.jpg)'
- en: 'Figure 6.8: The Translation function code'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.8：翻译功能代码
- en: So, when the `GoogleTranslator` function of the `deep_translator` package (already
    imported previously), put the result into a `translated_text` variable, and then
    write it on the screen.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，当`deep_translator`包中的`GoogleTranslator`功能（之前已导入）将结果放入`translated_text`变量中时，再将其显示在屏幕上。
- en: 'This is the result on the browser side:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是浏览器端的结果：
- en: '![Figure 6.9: The Translation function in action](img/B21147_06_09.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.9：翻译功能运行中](img/B21147_06_09.jpg)'
- en: 'Figure 6.9: The Translation function in action'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.9：翻译功能运行中
- en: Everything is very neat and clean and works perfectly! Of course, you can personalize
    this feature as you like, for example, by adding more target languages or performing
    different kinds of checks on the input text.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都非常整洁清晰，且运行完美！当然，你可以根据需要个性化这个功能，例如，添加更多目标语言或对输入文本执行不同类型的检查。
- en: '*Figure 6**.10* shows the **Target Language** selection in action:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 6**.10* 显示了**目标语言**选择的运行情况：'
- en: '![Figure 6.10: Target Language selection](img/B21147_06_10.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.10：目标语言选择](img/B21147_06_10.jpg)'
- en: 'Figure 6.10: Target Language selection'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.10：目标语言选择
- en: Up to now, we have written less than 200 lines of code and our web application
    is working very well. With just a small amount of code, we were able to put together
    a backend and frontend, business logic running on a server, and a presentation
    layer living on a browser. Everything is in Python and is quite simple. This is
    the power of Streamlit.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们写的代码不到200行，我们的网页应用已经运行得非常好。通过少量的代码，我们就能搭建一个后台和前端，业务逻辑在服务器上运行，展示层则位于浏览器上。一切都是用Python实现的，非常简单。这就是Streamlit的强大之处。
- en: 'Let’s move on to our last NLP task: sentiment analysis. As we discovered in
    the introduction, it is a fascinating topic.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们进入最后一个自然语言处理任务：情感分析。正如我们在介绍中发现的那样，这是一个非常有趣的话题。
- en: Diving deep into sentiment analysis
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入情感分析
- en: 'The sentiment analysis task is quite easy because we can leverage `TextBlob`,
    which has already been imported. So, let’s start with the very poor code we have,
    which, at the moment, just prints a subheading on the screen:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 情感分析任务相当简单，因为我们可以利用已经导入的`TextBlob`。所以，让我们从目前非常简单的代码开始，它现在只是将一个子标题打印到屏幕上：
- en: '![Figure 6.11: Sentiment Analysis section](img/B21147_06_11.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.11：情感分析部分](img/B21147_06_11.jpg)'
- en: 'Figure 6.11: Sentiment Analysis section'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.11：情感分析部分
- en: Currently, when we select **Sentiment Analysis** from our web application menu,
    we just get a subheading and some white space below it.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，当我们从网页应用菜单中选择**情感分析**时，我们只是得到一个子标题和下面的一些空白区域。
- en: '![Figure 6.12: Sentiment Analysis starting point](img/B21147_06_12.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.12：情感分析起点](img/B21147_06_12.jpg)'
- en: 'Figure 6.12: Sentiment Analysis starting point'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.12：情感分析起点
- en: 'Let us start by creating a text area, since we need somewhere to add the text
    we want to analyze in order to extract its sentiment. Adding a `text_area` now
    is really quite simple for us:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从创建一个文本区域开始，因为我们需要一个地方来添加我们想要分析的文本，以便提取其情感。现在添加一个`text_area`对我们来说非常简单：
- en: '![Figure 6.13: A text_area for Sentiment Analysis](img/B21147_06_13.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.13：用于情感分析的`text_area`](img/B21147_06_13.jpg)'
- en: 'Figure 6.13: A text_area for Sentiment Analysis'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.13：用于情感分析的`text_area`
- en: 'This is the result of the preceding change on the browser side:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是先前更改后的浏览器端结果：
- en: '![Figure 6.14: The text area in the browser](img/B21147_06_14.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.14：浏览器中的文本区域](img/B21147_06_14.jpg)'
- en: 'Figure 6.14: The text area in the browser'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.14：浏览器中的文本区域
- en: Now, we can type something in the text area and store it in a variable named,
    once again, `raw_data`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以在文本区域中输入一些内容，并将其存储在一个名为`raw_data`的变量中。
- en: As usual, a great option we have is to add a button – we can call it, for example,
    `raw_text` length, and in case of missing text, we can print a warning message.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，我们有一个很好的选项，那就是添加一个按钮——我们可以叫它例如`raw_text`长度，在文本缺失的情况下，我们可以打印一个警告信息。
- en: 'This is a simple example of the code that we can use:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们可以使用的简单代码示例：
- en: '![Figure 6.15: Evaluate button and check of raw_text length](img/B21147_06_15.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.15：评估按钮和检查`raw_text`长度](img/B21147_06_15.jpg)'
- en: 'Figure 6.15: Evaluate button and check of raw_text length'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.15：评估按钮和检查`raw_text`长度
- en: 'If `raw_text` is not empty, we can use `TextBlob` to create a `blob` object.
    After that, we can use the blob’s `sentiment` method to get the sentiment of the
    text we just wrote, and at the end, we can write it on the screen. Here is the
    code:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`raw_text`不为空，我们可以使用`TextBlob`来创建一个`blob`对象。之后，我们可以使用blob的`sentiment`方法来获取我们刚刚写的文本的情感，最后可以将结果写到屏幕上。以下是代码：
- en: '![Figure 6.16: The sentiment method provided by TextBlob](img/B21147_06_16.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.16：TextBlob提供的情感方法](img/B21147_06_16.jpg)'
- en: 'Figure 6.16: The sentiment method provided by TextBlob'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.16：TextBlob提供的情感方法
- en: '*Figures 6.17* and *6.18* show the result of the latest code modification in
    the browser.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 6.17* 和 *图 6.18* 显示了浏览器中最新代码修改的结果。'
- en: The first case is positive sentiment, since the polarity is very high.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个案例是积极情感，因为极性值非常高。
- en: "![Figure 6.17: An example of \uFEFFpositive sentiment](img/B21147_06_17.jpg)"
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.17：积极情感示例](img/B21147_06_17.jpg)'
- en: 'Figure 6.17: An example of positive sentiment'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.17：积极情感示例
- en: The second case is negative sentiment, based on the rather low polarity.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种情况是负面情感，基于相当低的极性值。
- en: "![Figure 6.18: An example of \uFEFFnegative sentiment](img/B21147_06_18.jpg)"
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.18：负面情感示例](img/B21147_06_18.jpg)'
- en: 'Figure 6.18: An example of negative sentiment'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.18：负面情感示例
- en: In *Figure 6**.19*, we can see the warning that appears when the **Evaluate**
    button is clicked, but there is no text to be considered.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图 6.19*中，我们可以看到点击**Evaluate**按钮时出现的警告，但没有文本可以考虑。
- en: "![Figure 6.19: Enter \uFEFFa text... warning](img/B21147_06_19.jpg)"
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.19：输入文本... 警告](img/B21147_06_19.jpg)'
- en: 'Figure 6.19: Enter a text... warning'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.19：输入文本... 警告
- en: 'As we can see, the TextBlob’s sentiment analysis returns two values: `polarity`
    and `subjectivity`. Let’s look in a little bit more detail at the meaning of these
    terms:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，TextBlob的情感分析返回了两个值：`极性`和`主观性`。让我们更详细地了解这些术语的含义：
- en: '`–1` up to `+1`. Specifically, `-1` indicates very negative sentiment, `+1`
    indicates very positive sentiment, and all values around `0` are generally considered
    neutral outcomes.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`–1` 到 `+1`。具体来说，`-1`表示非常负面的情感，`+1`表示非常积极的情感，所有接近`0`的值通常被认为是中性结果。'
- en: '`0` up to `1`. Values around `0` are very objective results, while values around
    `1` are very subjective ones.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0` 到 `1`。值接近`0`表示非常客观的结果，而接近`1`的值表示非常主观的结果。'
- en: 'So, for a sentence such as *I loved that movie, it’s really great!*, we get
    a result like the following:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对于句子*I loved that movie, it’s really great!*，我们得到的结果如下：
- en: '![Figure 6.20: High polarity and high subjectivity](img/B21147_06_20.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.20：高极性和高主观性](img/B21147_06_20.jpg)'
- en: 'Figure 6.20: High polarity and high subjectivity'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.20：高极性和高主观性
- en: 'The movie received a high polarity score of `0.85` and a high subjectivity
    score due to the use of the first-person pronoun in *I loved*. This indicates
    a highly subjective opinion. Let’s write something different, such as the following:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这部电影获得了`0.85`的高极性分数，并由于使用了第一人称代词*I loved*，使得主观性分数也很高。这表明这是一个高度主观的观点。让我们写点不一样的内容，例如以下内容：
- en: '![Figure 6.21: Neutral sentiment](img/B21147_06_21.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.21：中性情感](img/B21147_06_21.jpg)'
- en: 'Figure 6.21: Neutral sentiment'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.21：中性情感
- en: The polarity of our statement is `0.26`, indicating neutrality since we presented
    a factual statement. The subjectivity is almost balanced since facts hold personal
    and universal perspectives.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的语句的极性为`0.26`，表示中立，因为我们陈述的是一个事实性声明。主观性几乎平衡，因为事实既包含个人视角也包含普遍视角。
- en: And that’s all! Our first web application is really finished! We implemented
    all the tasks we defined at the beginning using just Python, pure Python, and
    some free libraries!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！我们的第一个Web应用程序真的完成了！我们仅仅使用Python、纯Python和一些免费的库，就实现了所有我们在一开始定义的任务！
- en: Let’s take some time to recap what we have done so far.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们花点时间回顾一下到目前为止所做的工作。
- en: Recap of our first web application
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的第一个Web应用程序回顾
- en: It’s incredible, but we really did it! Starting from scratch, from an empty
    file, we created a well-working web application that performs a lot of tasks and
    provides us with very nice outputs.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这真是令人难以置信，但我们真的做到了！从零开始，从一个空白文件出发，我们创建了一个功能良好的Web应用程序，完成了许多任务，并为我们提供了非常不错的输出。
- en: First of all, we created a Python environment, and then we installed all the
    required libraries in it. After that, we started building the skeleton of our
    application. This point is very important because this skeleton, consisting of
    a menu that contains all the main features of our web application and various
    parts of code to manage these features, is something that we can reuse any time
    we want to create a new application.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建了一个Python环境，并在其中安装了所有必需的库。然后，我们开始构建应用程序的框架。这一点非常重要，因为这个框架包含一个菜单，里面有我们web应用程序的所有主要功能以及管理这些功能的代码部分，这些内容可以在我们每次创建新应用程序时重用。
- en: The code of the application was created using basic widgets in Streamlit, that
    is, titles, subheaders, buttons, text areas, warnings, info, and so on, as well
    as some very interesting components, such as columns and expanders.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序的代码是使用Streamlit中的基本控件创建的，即标题、副标题、按钮、文本框、警告、信息等，还有一些非常有趣的组件，例如列和扩展器。
- en: We also learned how to add some basic HTML in our web applications, as well
    as some basic Markdown. We used these techniques to add some beautiful customizations
    on the titles. We then continued by talking about customizations. We also saw
    a way to associate a beautiful icon and a meaningful title or name to our application’s
    web browser window.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学会了如何在web应用程序中添加一些基本的HTML，以及一些基本的Markdown。我们利用这些技术对标题进行了美化。接着，我们继续讨论了自定义功能。我们还看到了一种方式，可以为应用程序的网页浏览器窗口关联一个漂亮的图标和有意义的标题或名称。
- en: 'We delved into some fundamental concepts around NLP: tokens, lemmas, stopwords,
    word clouds, summarization, sentiment analysis, polarity, and objectivity. Our
    web app now also contains a very useful **About** section with information and
    working hyperlinks, which can be customized as you prefer.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们深入探讨了一些NLP的基础概念：词元、词形、停用词、词云、文本摘要、情感分析、极性和客观性。我们的web应用程序现在还包含一个非常有用的**关于**部分，里面有信息和工作链接，可以根据需要进行自定义。
- en: 'Here are some screenshots of the final version of our application:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们应用程序最终版本的一些截图：
- en: '![Figure 6.22: Text Analysis](img/B21147_06_22.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图6.22：文本分析](img/B21147_06_22.jpg)'
- en: 'Figure 6.22: Text Analysis'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.22：文本分析
- en: In *Figure 6**.22*, we can see the complete menu on the left side of the screen
    and the result of the **Text Analysis** function applied to the short sentence
    in the text area in the main part of the web app.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图6.22*中，我们可以看到屏幕左侧的完整菜单，以及应用于文本框中短句的**文本分析**功能的结果，主界面显示了这些信息。
- en: '![Figure 6.23: Translation](img/B21147_06_23.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图6.23：翻译](img/B21147_06_23.jpg)'
- en: 'Figure 6.23: Translation'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.23：翻译
- en: '*Figure 6**.23* shows the behavior of the **Translation** function. This is
    quite self-explanatory: a sentence is typed into the text area, then a target
    language is selected, and finally, on pressing the **Translate** button, the translation
    task is performed and the result is displayed on the screen.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '*图6.23*展示了**翻译**功能的行为。这一点非常直观：在文本框中输入句子，选择目标语言，然后点击**翻译**按钮，翻译任务便会执行，结果会显示在屏幕上。'
- en: '![Figure 6.24: Sentiment Analysis](img/B21147_06_24.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图6.24：情感分析](img/B21147_06_24.jpg)'
- en: 'Figure 6.24: Sentiment Analysis'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.24：情感分析
- en: '*Figure 6**.24* shows an example of **Sentiment Analysis**, which in this case
    shows a very high polarity.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*图6.24*展示了一个**情感分析**的例子，在此例中，显示了非常高的极性。'
- en: We close the sequence of screenshots from the NLP web application we made together
    with the **About** section, as shown in *Figure 6**.25*.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在NLP web应用程序的截图序列中，以**关于**部分作为结尾，如*图6.25*所示。
- en: '![Figure 6.25: The About section](img/B21147_06_25.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图6.25：关于部分](img/B21147_06_25.jpg)'
- en: 'Figure 6.25: The About section'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.25：关于部分
- en: The **About** section is very useful since it contains information about the
    author, links to external web pages, and so on.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于**部分非常有用，因为它包含关于作者的信息、外部网页的链接等。'
- en: 'Here is all the code we have written together up to now:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们到目前为止一起编写的所有代码：
- en: '![Figure 6.26: NLP web application code part 1](img/B21147_06_26.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图6.26：NLP web应用程序代码部分1](img/B21147_06_26.jpg)'
- en: 'Figure 6.26: NLP web application code part 1'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.26：NLP web应用程序代码部分1
- en: In part 1, we imported the packages, set the page configuration, and defined
    the `summarize_text` function.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在第1部分中，我们导入了必要的包，设置了页面配置，并定义了`summarize_text`函数。
- en: '![Figure 6.27: NLP web application code part 2](img/B21147_06_27.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图6.27：NLP web应用程序代码部分2](img/B21147_06_27.jpg)'
- en: 'Figure 6.27: NLP web application code part 2'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.27：NLP web应用程序代码部分2
- en: In part 2, we wrote the `text_analyzer` function, then the `main` function,
    which contains the main title of the application, a subheading, and the menu in
    the sidebar.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在第2部分中，我们编写了`text_analyzer`函数，然后是`main`函数，该函数包含了应用程序的主标题、副标题以及侧边栏中的菜单。
- en: '![Figure 6.28: NLP web application code part 3](img/B21147_06_28.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图6.28：NLP网页应用程序代码第3部分](img/B21147_06_28.jpg)'
- en: 'Figure 6.28: NLP web application code part 3'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.28：NLP网页应用程序代码第3部分
- en: In part 3, we developed the `main` function using an `if` loop and many advanced
    widgets, such as columns and expanders.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在第3部分中，我们使用`if`循环和许多高级控件（如列和扩展器）开发了`main`函数。
- en: '![Figure 6.29: NLP web application code part 4](img/B21147_06_29.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图6.29：NLP网页应用程序代码第4部分](img/B21147_06_29.jpg)'
- en: 'Figure 6.29: NLP web application code part 4'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.29：NLP网页应用程序代码第4部分
- en: In part 4, we mainly developed the **Translation** feature, making it possible
    to insert text and select a language.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在第4部分中，我们主要开发了**翻译**功能，使得可以插入文本并选择语言。
- en: '![Figure 6.30: NLP web application code part 5](img/B21147_06_30.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图6.30：NLP网页应用程序代码第5部分](img/B21147_06_30.jpg)'
- en: 'Figure 6.30: NLP web application code part 5'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.30：NLP网页应用程序代码第5部分
- en: In part 5, we implemented the `TextBlob` library, then completed the web app
    by adding the **About** section.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在第5部分中，我们实现了`TextBlob`库，然后通过添加**关于**部分完成了网页应用程序的开发。
- en: The full listing of our web application’s code makes it clear how powerful Streamlit
    is. Less than 200 lines of code are enough to create a fully working web application
    with a lot of advanced features and quite a nice look and feel. We achieved this
    result just using standard Python, with no need for HTML, CSS, JavaScript, and
    so on.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们网页应用程序的完整代码清单明确展示了Streamlit的强大之处。不到200行代码就足以创建一个功能完备、界面相当漂亮的网页应用程序。我们仅使用了标准的Python，而不需要HTML、CSS、JavaScript等技术。
- en: Summary
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Our web application utilizing NLP is finished and running. You should be very
    proud of that!
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的NLP网页应用程序已经完成并且运行了，你应该为此感到非常骄傲！
- en: We also recapped the main points and takeaways. So, what else can we do?
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还回顾了主要的要点和收获。那么，我们还能做些什么呢？
- en: If we think about it, our application works very well, but only locally, or
    at least within the same network as the machine that we coded on.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们仔细考虑一下，虽然我们的应用程序运行得很好，但它仅限于本地，或者至少是在与我们编写代码的机器处于同一网络内。
- en: For a web application to be defined as a real web application, it needs to be
    public. This means it needs to be accessible everywhere.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 要把一个网页应用程序定义为真正的网页应用程序，它需要是公开的。这意味着它必须能够在任何地方访问。
- en: To be accessed everywhere, our web application needs to live on a server on
    the real internet with a real public URL.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够在任何地方访问，我们的网页应用程序需要托管在互联网上的一个服务器上，并拥有一个真正的公共URL。
- en: To put our web application on a real server on the web, we need to deploy it,
    and this is exactly what we are going to do in the next chapter.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要将我们的网页应用程序部署到互联网上的真实服务器上，我们需要进行部署，而这正是我们将在下一章中做的事情。
