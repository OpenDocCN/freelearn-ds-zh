- en: Creating a Neural Network in Spark
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Spark中创建神经网络
- en: 'In this chapter, the following recipes will be covered:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，将涵盖以下内容：
- en: Creating a dataframe in PySpark
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在PySpark中创建数据框
- en: Manipulating columns in a PySpark dataframe
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在PySpark数据框中操作列
- en: Converting a PySpark dataframe into an array
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将PySpark dataframe转换为数组
- en: Visualizing the array in a scatterplot
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在散点图中可视化数组
- en: Setting up weights and biases for input into the neural network
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置权重和偏差以输入神经网络
- en: Normalizing the input data for the neural network
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对神经网络的输入数据进行归一化
- en: Validating array for optimal neural network performance
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证数组以获得最佳神经网络性能
- en: Setting up the activation function with sigmoid
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Sigmoid设置激活函数
- en: Creating the sigmoid derivative function
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Sigmoid导数函数
- en: Calculating the cost function in a neural network
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在神经网络中计算成本函数
- en: Predicting gender based on height and weight
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于身高和体重预测性别
- en: Visualizing prediction scores
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化预测分数
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Much of this book will focus on building deep learning algorithms with libraries
    in Python, such as TensorFlow and Keras. While these libraries are helpful to
    build deep neural networks without getting deep into the calculus and linear algebra
    of deep learning, this chapter will do a deep dive into building a simple neural
    network in PySpark to make a gender prediction based on height and weight. One
    of the best ways to understand the foundation of neural networks is to build a
    model from scratch, without any of the popular deep learning libraries. Once the
    foundation for a neural network framework is established, understanding and utilizing
    some of the more popular deep neural network libraries will become much simpler.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的大部分内容将集中在使用Python中的库构建深度学习算法，例如TensorFlow和Keras。虽然这些库有助于构建深度神经网络，而无需深入研究深度学习的微积分和线性代数，但本章将深入探讨在PySpark中构建一个简单的神经网络，以基于身高和体重进行性别预测。理解神经网络的基础之一是从头开始构建模型，而不使用任何流行的深度学习库。一旦建立了神经网络框架的基础，理解和利用一些更流行的深度神经网络库将变得更简单。
- en: Creating a dataframe in PySpark
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在PySpark中创建数据框
- en: dataframes will serve as the framework for any and all data that will be used
    in building deep learning models. Similar to the `pandas` library with Python,
    PySpark has its own built-in functionality to create a dataframe.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框将作为构建深度学习模型中使用的所有数据的框架。与Python中的`pandas`库类似，PySpark具有内置功能来创建数据框。
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'There are several ways to create a dataframe in Spark. One common way is by
    importing a `.txt`, `.csv`, or `.json` file. Another method is to manually enter
    fields and rows of data into the PySpark dataframe, and while the process can
    be a bit tedious, it is helpful, especially when dealing with a small dataset.
    To predict gender based on height and weight, this chapter will build a dataframe
    manually in PySpark. The dataset used is as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在Spark中创建数据框有几种方法。一种常见的方法是通过导入`.txt`、`.csv`或`.json`文件。另一种方法是手动输入字段和数据行到PySpark数据框中，虽然这个过程可能有点繁琐，但在处理小数据集时特别有帮助。本章将在PySpark中手动构建一个数据框，以身高和体重为基础预测性别。使用的数据集如下：
- en: '![](img/00044.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00044.jpeg)'
- en: 'While the dataset will be manually added to PySpark in this chapter, the dataset
    can also be viewed and downloaded from the following link:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本章将手动将数据集添加到PySpark中，但数据集也可以从以下链接查看和下载：
- en: '[https://github.com/asherif844/ApacheSparkDeepLearningCookbook/blob/master/CH02/data/HeightAndWeight.txt](https://github.com/asherif844/ApacheSparkDeepLearningCookbook/blob/master/CH02/data/HeightAndWeight.txt)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/asherif844/ApacheSparkDeepLearningCookbook/blob/master/CH02/data/HeightAndWeight.txt](https://github.com/asherif844/ApacheSparkDeepLearningCookbook/blob/master/CH02/data/HeightAndWeight.txt)'
- en: 'Finally, we will begin this chapter and future chapters by starting up a Spark
    environment configured with a Jupyter notebook that was created in [chapter 1](part0026.html#OPEK0-3be7262ff9a54db3b2ea862fdce1797b), *Setting
    up your Spark Environment for Deep Learning,* using the following terminal command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将通过使用以下终端命令在[第1章](part0026.html#OPEK0-3be7262ff9a54db3b2ea862fdce1797b)中创建的Jupyter笔记本配置的Spark环境开始本章和未来的章节：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to do it...
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'When working with PySpark, a `SparkSession` must first be imported and initialized
    before any dataframe creation can occur:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用PySpark时，必须首先导入和初始化`SparkSession`，然后才能创建任何数据框：
- en: 'Import a `SparkSession` using the following script:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本导入`SparkSession`：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Configure a `SparkSession`:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`SparkSession`：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this situation, the `SparkSession` `appName` has been named `Neural Network
    Model` and `6gb` has been assigned to the session memory.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这种情况下，`SparkSession`的`appName`已命名为`Neural Network Model`，并且`6gb`已分配给会话内存。
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This section explains how we create our Spark cluster and configure our first
    dataframe.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何创建我们的Spark集群并配置我们的第一个数据框。
- en: In Spark, we use `.master()` to specify whether we will run our jobs on a distributed
    cluster or locally.  For the purposes of this chapter and the remaining chapters,
    we will be executing Spark locally with one worker thread as specified with `.master('local')`. 
    This is fine for testing and development purposes as we are doing in this chapter;
    however, we may run into performance issues if we deployed this to production. 
    In production, it is recommended to use `.master('local[*]')` to set Spark to
    run on as many worker nodes that are available locally as possible. If we had
    3 cores on our machine and we wanted to set our node count to match that, we would
    then specify `.master('local[3]')`.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Spark中，我们使用`.master()`来指定我们是在分布式集群上运行作业还是在本地运行。在本章和其余章节中，我们将使用`.master('local')`在本地执行Spark，并指定一个工作线程。这对于测试和开发目的是可以的，但如果部署到生产环境可能会遇到性能问题。在生产环境中，建议使用`.master('local[*]')`来设置Spark在本地可用的尽可能多的工作节点上运行。如果我们的机器上有3个核心，并且我们想要设置我们的节点数与之匹配，那么我们将指定`.master('local[3]')`。
- en: 'The `dataframe` variable, `df`, is first created by inserting the row values
    for each column and then by inserting the column header names using the following
    script:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`数据框`变量`df`首先通过插入每列的行值，然后使用以下脚本插入列标题名称来创建：'
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In PySpark, the `show()` function gives the ability to preview the top 20 rows,
    as seen in the following screenshot when using the preceding script:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PySpark中，`show()`函数可以预览前20行，如使用上述脚本时所示：
- en: '![](img/00045.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00045.jpeg)'
- en: There's more...
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The `.show()` functionality defaults to 20 rows if not explicitly stated. 
    If we only wanted to show the first 5 rows of a dataframe, we would need to explicitly
    state it as seen in the following script: `df.show(5)`.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有明确说明，`.show()`功能默认显示20行。如果我们只想显示数据框的前5行，我们需要明确说明，如下脚本所示：`df.show(5)`。
- en: See also
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'In order to learn more about SparkSQL, dataframes, functions, and data sets
    in PySpark, visit the following website:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关SparkSQL、数据框、函数和PySpark中数据集的更多信息，请访问以下网站：
- en: '[https://spark.apache.org/docs/latest/sql-programming-guide.html](https://spark.apache.org/docs/latest/sql-programming-guide.html)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://spark.apache.org/docs/latest/sql-programming-guide.html](https://spark.apache.org/docs/latest/sql-programming-guide.html)'
- en: Manipulating columns in a PySpark dataframe
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在PySpark数据框中操作列
- en: The dataframe is almost complete; however, there is one issue that requires
    addressing before building the neural network. Rather than keeping the gender
    value as a string, it is better to convert the value to a numeric integer for
    calculation purposes, which will become more evident as this chapter progresses.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框几乎完成了；但在构建神经网络之前，有一个需要解决的问题。与其将`gender`值保留为字符串，不如将该值转换为数值整数以进行计算，随着本章的进行，这一点将变得更加明显。
- en: Getting ready
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'This section will require  importing the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分需要导入以下内容：
- en: '`from pyspark.sql import functions`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from pyspark.sql import functions`'
- en: How to do it...
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'This section walks through the steps for the string conversion to a numeric
    value in the dataframe:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍将数据框中的字符串转换为数值的步骤：
- en: Female --> 0
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Female --> 0
- en: Male --> 1
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Male --> 1
- en: 'Convert a column value inside of a dataframe requires importing `functions`:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据框中转换列值需要导入`functions`：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, modify the `gender` column to a numeric value using the following script:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用以下脚本将`gender`列修改为数值：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, reorder the columns so that `gender` is the last column in the dataframe
    using the following script:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下脚本重新排列列，使`gender`成为数据框中的最后一列：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: How it works...
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This section explains how the manipulation of the dataframe is applied.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何应用对数据框的操作。
- en: '`functions from pyspark.sql` have several useful logic applications that can
    be used to apply if-then transformations to columns in a Spark dataframe.  In
    our case, we are converting `Female` t0 0 and `Male` to 1.'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`pyspark.sql`中的`functions`具有几个有用的逻辑应用，可用于在Spark数据框中对列应用if-then转换。在我们的情况下，我们将`Female`转换为0，`Male`转换为1。'
- en: The function to convert to numeric is applied to the Spark dataframe using the
    `.withColumn()` transformation.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`.withColumn()`转换将数值应用于Spark数据框。
- en: The `.select()` feature for a Spark dataframe functions like traditional SQL
    by selecting the columns in the order and manner requested.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Spark数据框，`.select()`功能类似于传统SQL，按照请求的顺序和方式选择列。
- en: 'A final preview of the dataframe will display the updated dataset, as seen
    in the following screenshot:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终预览数据框将显示更新后的数据集，如下截图所示：
- en: '![](img/00046.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00046.jpeg)'
- en: There's more...
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In addition to the `withColumn()` method for a dataframe, there is also the
    `withColumnRenamed()` method, which is used for renaming columns in a dataframe.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 除了数据框的`withColumn()`方法外，还有`withColumnRenamed()`方法，用于重命名数据框中的列。
- en: Converting a PySpark dataframe to an array
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将PySpark数据框转换为数组
- en: In order to form the building blocks of the neural network, the PySpark dataframe
    must be converted into an array. Python has a very powerful library, `numpy`,
    that makes working with arrays simple.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建神经网络的基本组件，PySpark数据框必须转换为数组。Python有一个非常强大的库`numpy`，使得处理数组变得简单。
- en: Getting ready
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The `numpy` library should be already available with the installation of the
    `anaconda3` Python package. However, if for some reason the `numpy` library is
    not available, it can be installed using the following command at the terminal:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`numpy`库应该已经随着`anaconda3` Python包的安装而可用。但是，如果由于某种原因`numpy`库不可用，可以使用终端上的以下命令进行安装：'
- en: '![](img/00047.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.jpeg)'
- en: '`pip install` or `sudo pip install` will confirm whether the requirements are
    already satisfied by using the requested library:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install`或`sudo pip install`将通过使用请求的库来确认是否已满足要求：'
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How to do it...
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'This section walks through the steps to convert the dataframe into an array:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍将数据框转换为数组的步骤：
- en: 'View the data collected from the dataframe using the following script:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本查看从数据框中收集的数据：
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Store the values from the collection into an array called `data_array` using
    the following script:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本将收集的值存储到名为`data_array`的数组中：
- en: '[PRE9]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Execute the following script to access the first row of the array:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下脚本以访问数组的第一行：
- en: '[PRE10]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Similarly, execute the following script to access the final row of the array:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，执行以下脚本以访问数组的最后一行：
- en: '[PRE11]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How it works...
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'This section explains how the dataframe is converted into an array:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何将数据框转换为数组：
- en: 'The output of our dataframe can be collected using `collect()` and viewed as
    seen in the following screenshot:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的数据框的输出可以使用`collect()`收集，并如下截图所示查看：
- en: '![](img/00048.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.jpeg)'
- en: 'The dataframe is converted into an array and the output of the array from that
    script can be seen in the following screenshot:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据框转换为数组，并且可以在以下截图中看到该脚本的输出：
- en: '![](img/00049.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.jpeg)'
- en: 'Any set of `height`, `weight`, and `gender` values can be accessed by referencing
    the index of the array. The array has a shape of (29,3) with a length of 29 elements,
    and each element is composed of three items. While the length is 29, the index
    starts at `[0]` and ends at `[28]`.  The outputs for the shape of the array as
    well as the first and last rows of the array can be seen in the following screenshot:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过引用数组的索引来访问任何一组`height`，`weight`和`gender`值。数组的形状为(29,3)，长度为29个元素，每个元素由三个项目组成。虽然长度为29，但索引从`[0]`开始到`[28]`结束。可以在以下截图中看到数组形状以及数组的第一行和最后一行的输出：
- en: '![](img/00050.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00050.jpeg)'
- en: The first and last values of the array can be compared with the original dataframe to
    confirm that the values and order have not changed as a result of the conversion.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以将数组的第一个和最后一个值与原始数据框进行比较，以确认转换的结果没有改变值和顺序。
- en: There's more...
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'In addition to viewing the data points in an array, it is also useful to retrieve
    the minimum and maximum points of each feature in an array:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 除了查看数组中的数据点外，还可以检索数组中每个特征的最小和最大点：
- en: 'To retrieve the minimum and maximum values for `height`, `weight`, and `gender`,
    the following script can be used:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检索`height`，`weight`和`gender`的最小和最大值，可以使用以下脚本：
- en: '[PRE12]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output from the script can be seen in the following screenshot:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 脚本的输出可以在以下截图中看到：
- en: '![](img/00051.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.jpeg)'
- en: The maximum `height` is `74` inches and minimum `height` is `60` inches. The
    maximum weight is `188` lbs, while the minimum weight is `107` lbs. The minimum
    and maximum values for gender are not as relevant, as we have assigned them numeric
    values of `0` and `1`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最大`height`为`74`英寸，最小`height`为`60`英寸。最大重量为`188`磅，最小重量为`107`磅。性别的最小和最大值并不那么重要，因为我们已经为它们分配了`0`和`1`的数值。
- en: See also
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'To learn more about numpy, visit the following website:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于numpy的信息，请访问以下网站：
- en: '[www.numpy.org](http://www.numpy.org)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.numpy.org](http://www.numpy.org)'
- en: Visualizing an array in a scatterplot
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在散点图中可视化数组
- en: The goal of the neural network that will be developed in this chapter is to
    predict the gender of an individual if the `height` and `weight` are known. A
    powerful method for understanding the relationship between `height`, `weight`,
    and `gender` is by visualizing the data points feeding the neural network. This
    can be done with the popular Python visualization library `matplotlib`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将开发的神经网络的目标是在已知`height`和`weight`的情况下预测个体的性别。了解`height`，`weight`和`gender`之间的关系的一个强大方法是通过可视化数据点来喂养神经网络。这可以通过流行的Python可视化库`matplotlib`来实现。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'As was the case with `numpy`, `matplotlib` should be available with the installation
    of the anaconda3 Python package. However, if for some reason `matplotlib` is not
    available, it can be installed using the following command at the terminal:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 与`numpy`一样，`matplotlib`应该在安装anaconda3 Python包时可用。但是，如果由于某种原因`matplotlib`不可用，可以在终端使用以下命令进行安装：
- en: '![](img/00052.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00052.jpeg)'
- en: '`pip install` or `sudo pip install` will confirm the requirements are already
    satisfied by using the requested library.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install`或`sudo pip install`将通过使用所需的库来确认要求已经满足。'
- en: How to do it...
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: This section walks through the steps to visualize an array through a scatterplot.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍通过散点图可视化数组的步骤。
- en: 'Import the `matplotlib` library and configure the library to visualize plots
    inside of the Jupyter notebook using the following script:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`matplotlib`库并使用以下脚本配置库以在Jupyter笔记本中可视化绘图：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, determine the minimum and maximum values of the *x* and y-axes of the
    scatterplot using the `min()` and `max()` functions from `numpy`, as seen in the
    following script:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用`numpy`的`min()`和`max()`函数确定散点图的*x*和y轴的最小和最大值，如下脚本所示：
- en: '[PRE14]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Execute the following script to plot the `height` and `weight` for each `gender`:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下脚本来绘制每个`gender`的`height`和`weight`：
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works...
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'This section explains how an array is plotted as a scatterplot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将解释如何将数组绘制为散点图：
- en: The `matplotlib` library is imported into the Jupyter notebook and the `matplotlib`
    library is configured to plot visualizations inline in the cells of the Jupyter
    notebook
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`matplotlib`库导入到Jupyter笔记本中，并配置`matplotlib`库以在Jupyter笔记本的单元格中内联绘制可视化
- en: 'The minimum and maximum values of the x and y-axes are determined to size up
    our plot and give us an optimal looking graph.  The output of the script can be
    seen in the following screenshot:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定x和y轴的最小和最大值以调整我们的绘图，并给出一个最佳的外观图形。脚本的输出可以在以下截图中看到：
- en: '![](img/00053.jpeg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: A `10`-point pixel buffer has been added to each axis to ensure all data points
    are captured without being cut off.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个轴都添加了`10`个像素的缓冲区，以确保捕获所有数据点而不被切断。
- en: A loop is created to iterate through each row of values and plot the `weight`
    versus the `height`.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个循环来迭代每一行的值，并绘制`weight`与`height`。
- en: Additionally, a different style point is assigned to the `Female gender`, `x`,
    and the `Male gender`, `o`.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，`Female gender`分配了不同的样式点`x`，而`Male gender`分配了`o`。
- en: 'The output of the script to plot the Weight vs Height by Gender can be seen
    in the following screenshot:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以在以下截图中看到绘制Weight vs Height by Gender的脚本的输出：
- en: '![](img/00054.jpeg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00054.jpeg)'
- en: There's more...
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The scatterplot gives a quick and easy visual interpretation of what is going
    on with the data. There is an apparent divide between the upper-right quadrant
    and the lower-left quadrant of the scatterplot. All of the data points above 140
    lbs indicate a `Male gender`, with all of the data points below that belong to
    the `Female gender`, as seen in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 散点图快速而简单地解释了数据的情况。散点图的右上象限和左下象限之间存在明显的分割。所有超过140磅的数据点表示`Male gender`，而所有低于该值的数据点属于`Female
    gender`，如下截图所示：
- en: '![](img/00055.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00055.jpeg)'
- en: This scatterplot will help confirm what is to be expected when picking a random
    height and weight to predict the outcome of the gender when the neural network
    is created later on in this chapter.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这个散点图将有助于确认当在本章后面创建神经网络时，选择随机身高和体重来预测性别的结果是什么。
- en: See also
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'To learn more about `matplotlib`, visit the following website:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于`matplotlib`的信息，请访问以下网站：
- en: '[www.matplotlib.org](http://www.matplotlib.org/)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.matplotlib.org](http://www.matplotlib.org/)'
- en: Setting up weights and biases for input into the neural network
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为输入神经网络设置权重和偏差。
- en: 'The framework in PySpark and the data are now complete. It is time to move
    on to building the neural network. Regardless of the complexity of the neural
    network, the development follows a similar path:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: PySpark框架和数据现在已经完成。是时候转向构建神经网络了。无论神经网络的复杂性如何，开发都遵循类似的路径：
- en: Input data
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入数据
- en: Add the weights and biases
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加权重和偏差
- en: Sum the product of the data and weights
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 求和数据和权重的乘积
- en: Apply an activation function
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用激活函数
- en: Evaluate the output and compare it to the desired outcome
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评估输出并将其与期望结果进行比较
- en: This section will focus on setting the weights that create the input which feeds
    into the activation function.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将重点放在设置权重上，这些权重创建了输入，输入进入激活函数。
- en: Getting ready
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'A cursory understanding of the building blocks of a simple neural network is
    helpful in understanding this section and the rest of the chapter.  Each neural
    network has inputs and outputs.  In our case, the inputs are the height and weight
    of the individuals and the output is the gender.  In order to get to the output,
    the inputs are multiplied with values (also known as weights: w1 and w2) and then
    a bias (b) is added to the end.  This equation is known as the summation function,
    z, and is given the following equation:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 简单了解神经网络的基本构建模块对于理解本节和本章的其余部分是有帮助的。每个神经网络都有输入和输出。在我们的案例中，输入是个体的身高和体重，输出是性别。为了得到输出，输入与值（也称为权重：w1和w2）相乘，然后加上偏差（b）。这个方程被称为求和函数z，并给出以下方程式：
- en: z = (input1) x (w1) + (input2) x (w2) + b
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: z = (输入1) x (w1) + (输入2) x (w2) + b
- en: The weights and the bias are initially just random generated values that can
    be performed with `numpy`. The weights will literally add weight to inputs by
    increasing or decreasing their impact on the output. The bias will serve a slightly
    different role in that it will shift the baseline of the summation (z) upwards
    or downwards, depending on what is needed to meet the prediction. Each value of
    z is then converted into a predicted value between 0 and 1 through an activation
    function.  The activation function is a converter that gives us a value that we
    can convert into a binary output (male/female). The predicted output is then compared
    with the actual output.  Initially, the difference between the predicted and actual
    output will be large as the weights will be random when first starting out.  However,
    a process known as backpropagation is used to minimize the difference between
    the actual and the predicted using a technique known as gradient descent.  Once
    we settle on a negligible difference between the actual and predicted, we store
    the values of w1, w2, and b for the neural network.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 权重和偏差最初只是随机生成的值，可以使用`numpy`执行。权重将通过增加或减少对输出的影响来为输入增加权重。偏差将在一定程度上起到不同的作用，它将根据需要将求和（z）的基线向上或向下移动。然后，z的每个值通过激活函数转换为0到1之间的预测值。激活函数是一个转换器，它给我们一个可以转换为二进制输出（男/女）的值。然后将预测输出与实际输出进行比较。最初，预测和实际输出之间的差异将很大，因为在刚开始时权重是随机的。然而，使用一种称为反向传播的过程来最小化实际和预测之间的差异，使用梯度下降的技术。一旦我们在实际和预测之间达成可忽略的差异，我们就会存储神经网络的w1、w2和b的值。
- en: How to do it...
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: This section walks through the steps to set up the weights and bias of the neural
    network.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将逐步介绍设置神经网络的权重和偏差的步骤。
- en: 'Set the randomness of the value generator using the following script:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本设置值生成器的随机性：
- en: '[PRE16]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Set the weights and biases using the following script:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本设置权重和偏差：
- en: '[PRE17]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works...
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'This section explains how the weights and bias are initialized for use in later
    parts of this chapter:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何初始化权重和偏差，以便在本章的后续部分中使用：
- en: The weights are generated randomly using `numpy`, and a random seed is set to
    ensure the same random numbers are generated each time
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 权重是使用`numpy`随机生成的，并设置了随机种子以确保每次生成相同的随机数
- en: The weights will be assigned a generic variable of `w1` and `w2`
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 权重将被分配一个通用变量`w1`和`w2`
- en: The bias is also generated randomly using `numpy` and a random seed is set to
    maintain the same random numbers is generated each time
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 偏差也是使用`numpy`随机生成的，并设置了随机种子以确保每次生成相同的随机数
- en: The bias will be assigned a generic variable of `b`
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 偏差将被分配一个通用变量`b`
- en: The values are inserted into a summation function, `z`, which populates an initial
    score that will feed into another function, the activation function, to be discussed
    later on in this chapter
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些值被插入到一个求和函数`z`中，它生成一个初始分数，将输入到另一个函数中，即激活函数，稍后在本章中讨论
- en: 'At the moment, all three variables are completely random.  The output of `w1`,
    `w2`, and `b` can be seen in the following screenshot:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目前，所有三个变量都是完全随机的。`w1`、`w2`和`b`的输出可以在以下截图中看到：
- en: '![](img/00056.jpeg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00056.jpeg)'
- en: There's more...
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Ultimately, the goal is to get a predicted output that matches the actual output.
    Summing the product of the weights and the values helps achieve part of this process.
    Therefore, a random input of `0.5` and `0.5` would have a summation output of
    the following:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 最终目标是获得一个预测输出，与实际输出相匹配。对权重和值进行求和的过程有助于实现这一过程的一部分。因此，随机输入的`0.5`和`0.5`将产生以下求和输出：
- en: '[PRE18]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Or it would have the following output with our current random values for our
    weights, `w1` and `w2`:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用我们当前随机值`w1`和`w2`，将得到以下输出：
- en: '[PRE19]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The variable `z` is assigned as the product summation of the weights with the
    data points. Currently, the weights and biases are completely random. However,
    as mentioned earlier in the section, through a process called backpropagation*,*
    using gradient descent, the weights will be tweaked until a more desirable outcome
    is determined. Gradient descent is simply the process of identifying the optimal
    values for our weights that will give us the best prediction output with the least
    amount of error.  The process of identifying the optimal values involves identifying
    the local minimum of a function. Gradient descent will be discussed later on in
    this chapter.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 变量`z`被分配为权重与数据点的乘积总和。目前，权重和偏差是完全随机的。然而，正如本节前面提到的，通过一个称为反向传播的过程，使用梯度下降，权重将被调整，直到确定出更理想的结果。梯度下降只是识别出我们的权重的最佳值的过程，这将给我们最好的预测输出，并且具有最小的误差。确定最佳值的过程涉及识别函数的局部最小值。梯度下降将在本章后面讨论。
- en: See also
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'In order to learn more about weights and biases in an artificial neural network,
    visit the following website:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于人工神经网络中权重和偏差的知识，请访问以下网站：
- en: '[https://en.wikipedia.org/wiki/Artificial_neuron](https://en.wikipedia.org/wiki/Artificial_neuron)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Artificial_neuron](https://en.wikipedia.org/wiki/Artificial_neuron)'
- en: Normalizing the input data for the neural network
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为神经网络标准化输入数据
- en: Neural networks work more efficiently when the inputs are normalized. This minimizes
    the magnitude of a particular input affecting the overall outcome over other potential
    inputs that have lower values of magnitude. This section will normalize the `height`
    and `weight` inputs of the current individuals.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 当输入被标准化时，神经网络的工作效率更高。这最小化了特定输入的幅度对其他可能具有较低幅度值的输入的整体结果的影响。本节将标准化当前个体的`身高`和`体重`输入。
- en: Getting ready
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备好
- en: The normalization of input values requires obtaining the mean and standard deviation
    of those values for the final calculation.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 输入值的标准化需要获取这些值的平均值和标准差进行最终计算。
- en: How to do it...
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: This section walks through the steps to normalize the height and weight.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍标准化身高和体重的步骤。
- en: 'Slice the array into inputs and outputs using the following script:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本将数组切片为输入和输出：
- en: '[PRE20]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The mean and the standard deviation can be calculated across the 29 individuals
    using the following script:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用以下脚本计算29个个体的平均值和标准差：
- en: '[PRE21]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create a normalization function to normalize `X` using the following script:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个标准化函数，使用以下脚本对`X`进行标准化：
- en: '[PRE22]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works...
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This section explains how the height and weight are normalized.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将解释身高和体重是如何被标准化的。
- en: 'The `data_array` matrix is split into two matrices:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`data_array`矩阵分为两个矩阵：'
- en: '`X` is composed of the height and the weight'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`X`由身高和体重组成'
- en: '`y` is composed of the gender'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`y`由性别组成'
- en: 'The output of both arrays can be seen in the following screenshot:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两个数组的输出可以在以下截图中看到：
- en: '![](img/00057.jpeg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00057.jpeg)'
- en: 'The `X` component is the input and is the only part that will undergo the normalization
    process. The *y* component, or the gender, will be disregarded for the moment.
    The normalization process involves extracting the mean and standard deviation
    of both inputs for all 29 individuals. The output of the mean and standard deviations
    for the height and weight can be seen in the following screenshot:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`X`组件是输入，是唯一会经历标准化过程的部分。*y*组件，或性别，暂时将被忽略。标准化过程涉及提取所有29个个体的输入的平均值和标准差。身高和体重的平均值和标准差的输出可以在以下截图中看到：'
- en: '![](img/00058.jpeg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00058.jpeg)'
- en: The mean of the height is ~67 inches and the standard deviation of the height
    is ~3.4 inches. The mean of the weight is ~145 lbs and the standard deviation
    of the weight is ~22 lbs.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 身高的平均值约为67英寸，标准差约为3.4英寸。体重的平均值约为145磅，标准差约为22磅。
- en: 'Once they are extracted, the inputs are normalized using the following equation:
    `X_norm = (X - X_mean)/X_std`.'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦它们被提取，使用以下方程对输入进行标准化：`X_norm = (X - X_mean)/X_std`。
- en: 'The `X` array is normalized using the Python function `normalize()` and the
    `X` array is now assigned to the values of the newly minted normalized set, as
    seen in the following screenshot:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Python函数`normalize()`对`X`数组进行标准化，现在`X`数组被分配到新创建的标准化集的值，如下截图所示：
- en: '![](img/00059.jpeg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00059.jpeg)'
- en: See also
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'In order to learn more about normalization in statistics, visit the following
    website:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于统计标准化的知识，请访问以下网站：
- en: '[https://en.wikipedia.org/wiki/Normalization_(statistics)](https://en.wikipedia.org/wiki/Normalization_(statistics))'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Normalization_(statistics)](https://en.wikipedia.org/wiki/Normalization_(statistics))'
- en: Validating array for optimal neural network performance
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证数组以获得最佳神经网络性能
- en: A little bit of validation goes a long way in ensuring that our array is normalized
    for optimal performance within our upcoming neural network.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在确保我们的数组在即将到来的神经网络中获得最佳性能的过程中，一点验证工作可以走很长的路。
- en: Getting ready
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备好
- en: This section will require a bit of `numpy` magic using the `numpy.stack()` function.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分需要使用`numpy.stack()`函数进行一些`numpy`魔术。
- en: How to do it...
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: The following steps walk through validating that our array has been normalized.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将验证我们的数组是否已被标准化。
- en: 'Execute the following step to print the mean and standard deviation of array
    inputs:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下步骤以打印数组输入的平均值和标准差：
- en: '[PRE23]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Execute the following script to combine height, weight, and gender into one
    array, `data_array`:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下脚本将身高、体重和性别组合成一个数组`data_array`：
- en: '[PRE24]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How it works...
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This section explains how the array is validated and constructed for optimal
    future use within the neural network.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了数组如何被验证和构建，以便在神经网络中实现最佳的未来使用。
- en: 'The new `mean` of the height should be 0 and the `standard deviation` should
    be 1\. This can be seen in the following screenshot:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 身高的新`mean`应为0，`standard deviation`应为1。这可以在以下截图中看到：
- en: '![](img/00060.jpeg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00060.jpeg)'
- en: This is confirmation of a normalized dataset, as it includes a mean of 0 and
    a standard deviation of 1.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是归一化数据集的确认，因为它包括平均值为0和标准差为1。
- en: The original `data_array` is no longer useful for a neural network because it
    contains the original, non-normalized, input values for `height`, `weight`, and `gender`.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 原始的`data_array`对于神经网络不再有用，因为它包含了`height`、`weight`和`gender`的原始、非归一化的输入值。
- en: 'Nonetheless, with a little bit of `numpy` magic, `data_array` can be restructured
    to include the normalized `height` and `weight`, along with `gender`.  This is
    done with `numpy.stack()`.   The output of the new array, `data_array`, can be
    seen in the following screenshot:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然而，通过一点点`numpy`魔法，`data_array`可以被重组，包括归一化的`height`和`weight`，以及`gender`。这是通过`numpy.stack()`完成的。新数组`data_array`的输出如下截图所示：
- en: '![](img/00061.jpeg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00061.jpeg)'
- en: There's more...
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Our array is now all set.  Our inputs for height and weight are normalized and
    our output for gender is labeled as 0 or 1.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数组现在已经准备就绪。我们的身高和体重的输入已经归一化，我们的性别输出标记为0或1。
- en: See also
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'To learn more about `numpy.stack()`, visit the following website:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关`numpy.stack()`的更多信息，请访问以下网站：
- en: '[https://docs.scipy.org/doc/numpy/reference/generated/numpy.stack.html](https://docs.scipy.org/doc/numpy/reference/generated/numpy.stack.html)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.scipy.org/doc/numpy/reference/generated/numpy.stack.html](https://docs.scipy.org/doc/numpy/reference/generated/numpy.stack.html)'
- en: Setting up the activation function with sigmoid
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`sigmoid`设置激活函数
- en: 'An activation function is used in a neural network to help determine the output,
    whether it is a yes or no, true or false, or in our case 0 or 1 (male/female). 
    At this point, the inputs have been normalized and have been summed with the weights
    and bias: `w1`, `w2`, and `b`. However, the weights and bias are completely random
    at the moment and are not optimized to produce a predicted output that matches
    the actual output. The missing link in building the predicted outcome resides
    with the activation or `sigmoid` function, which is shown in the following diagram:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 激活函数在神经网络中用于帮助确定输出，无论是是或否，真或假，或者在我们的情况下是0或1（男/女）。此时，输入已经被归一化，并且已经与权重和偏差`w1`、`w2`和`b`相加。然而，权重和偏差目前完全是随机的，并且没有被优化以产生与实际输出匹配的预测输出。构建预测结果的缺失环节在于激活或`sigmoid`函数，如下图所示：
- en: '![](img/00062.jpeg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00062.jpeg)'
- en: If the number that is produced out of the summation is very small, it will produce
    an activation of 0\. Likewise, if the number produced out of the summation is
    quite large, it will produce an activation of 1\. This function is useful because
    it restricts the output to a binary outcome, which is quite useful for classification.
    The consequences of these outputs will be discussed and clarified in the remainder
    of this chapter.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如果总和产生的数字非常小，它将产生激活为0。同样，如果总和产生的数字相当大，它将产生激活为1。这个函数很有用，因为它将输出限制为二进制结果，这对于分类非常有用。这些输出的后果将在本章的其余部分中讨论和澄清。
- en: Getting ready
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `sigmoid` function is similar to the logistic regression function in that
    it computes a probabilistic outcome between 0 and 1\. Additionally, it gives a
    range of everything in -between. Therefore, a condition could be set to associate
    any value greater than 0.5 to 1 and less than 0.5 to 0.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`sigmoid`函数类似于逻辑回归函数，因为它计算出0到1之间的概率结果。此外，它给出了介于两者之间的范围。因此，可以设置条件，将大于0.5的任何值关联到1，小于0.5的值关联到0。'
- en: How to do it...
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: This section walks through the steps of creating and plotting a sigmoid function
    with sample data.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将逐步介绍使用样本数据创建和绘制`sigmoid`函数的步骤。
- en: 'Create the `sigmoid` function using a Python function, as seen in the following
    script:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Python函数创建`sigmoid`函数，如下脚本所示：
- en: '[PRE25]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Create sample `x` values for the `sigmoid` curve using the following script:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本为`sigmoid`曲线创建样本`x`值：
- en: '[PRE26]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Additionally, create sample `y` values for the `sigmoid` curve using the following
    script:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，使用以下脚本为`sigmoid`曲线创建样本`y`值：
- en: '[PRE27]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Plot the `x` and `y` values for these points using the following script:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本绘制这些点的`x`和`y`值：
- en: '[PRE28]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: How it works...
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This section explains the mathematics behind the sigmoid function.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了S型函数背后的数学原理。
- en: 'The `sigmoid` function is a specialized version of the logistic regression
    used for classification. The calculation of the logistic regression is expressed
    with the following formula:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sigmoid`函数是逻辑回归的专门版本，用于分类。逻辑回归的计算用以下公式表示：'
- en: '![](img/00063.jpeg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00063.jpeg)'
- en: 'The variables for the logistic regression function stand for the following:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 逻辑回归函数的变量代表以下含义：
- en: '*L* stands the maximum value of the function'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*L*代表函数的最大值'
- en: '*k* stands for the steepness of the curve'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*k*代表曲线的陡峭程度'
- en: '*x[midpoint]* stands for the midpoint value of the function'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*x[midpoint]*代表函数的中点值'
- en: 'Since the `sigmoid` function has a steepness of value 1, a midpoint of 0, and
    a maximum value of 1, it produces the following function:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于`sigmoid`函数的陡度值为1，中点为0，最大值为1，它产生以下函数：
- en: '![](img/00064.jpeg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00064.jpeg)'
- en: 'We can plot a general sigmoid function with x-values ranging from -5 to 5,
    and y-values ranging from 0 to 1 as seen in the following screenshot:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以绘制一个通用的`sigmoid`函数，其x值范围从-5到5，y值范围从0到1，如下截图所示：
- en: '![](img/00065.jpeg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00065.jpeg)'
- en: 'We created our own `sigmoid` function with Python and plotted it using sample
    data between `-10` and `10`.  Our plot looks very similar to the previous general
    sigmoid plot.  The output of our `sigmoid` function can be seen in the following
    screenshot:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用Python创建了自己的`sigmoid`函数，并使用样本数据在`-10`和`10`之间绘制了它。我们的绘图看起来与之前的通用`sigmoid`绘图非常相似。我们的`sigmoid`函数的输出如下截图所示：
- en: '![](img/00066.jpeg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00066.jpeg)'
- en: See also
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'In order to learn more about the origin of the `sigmoid` function, visit the
    following website:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于`sigmoid`函数起源的信息，请访问以下网站：
- en: '[https://en.wikipedia.org/wiki/Sigmoid_function](https://en.wikipedia.org/wiki/Sigmoid_function)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Sigmoid_function](https://en.wikipedia.org/wiki/Sigmoid_function)'
- en: Creating the sigmoid derivative function
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Sigmoid导数函数
- en: The sigmoid function is a unique function where the value of the derivative
    of the sigmoid function includes the value of the sigmoid function.  You may be
    asking what's the big deal.  However, since the sigmoid function is already calculated
    it allows for simpler and more efficient processing when performing backpropagation
    over many layers.  Additionally, it is the derivative of the sigmoid function
    that is used in the calculation to derive the optimal `w1`, `w2`, and `b` values
    to derive the most accurate predicted output.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: Sigmoid函数是一个独特的函数，其中Sigmoid函数的导数值包括Sigmoid函数的值。也许你会问这有什么了不起。然而，由于Sigmoid函数已经计算，这使得在执行多层反向传播时处理更简单、更高效。此外，在计算中使用Sigmoid函数的导数来得出最佳的`w1`、`w2`和`b`值，以得出最准确的预测输出。
- en: Getting ready
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: A cursory understanding of derivatives from calculus will assist in understanding
    the sigmoid derivative function.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 对微积分中的导数有一定的了解将有助于理解Sigmoid导数函数。
- en: How to do it...
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: This section walks through the steps to create a sigmoid derivative function.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍创建Sigmoid导数函数的步骤。
- en: 'Just like the `sigmoid` function, create the derivative of the `sigmoid` function
    can with Python using the following script:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像`sigmoid`函数一样，使用以下脚本可以使用Python创建`sigmoid`函数的导数：
- en: '[PRE29]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Plot the derivative of the `sigmoid` function alongside the original `sigmoid` function
    using the following script:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本绘制`sigmoid`函数的导数与原始`sigmoid`函数：
- en: '[PRE30]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: How it works...
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: This section explains the math behind the derivative of the sigmoid function
    along with the logic to create the derivative of the sigmoid function with Python.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将解释Sigmoid函数的导数背后的数学原理，以及使用Python创建Sigmoid函数的导数的逻辑。
- en: 'The neural network will require the derivative of the `sigmoid` function to
    predict an accurate output for `gender`. The derivative of the `sigmoid` function
    is calculated using the following formula:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 神经网络将需要`sigmoid`函数的导数来预测`gender`的准确输出。`sigmoid`函数的导数使用以下公式计算：
- en: '![](img/00067.jpeg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00067.jpeg)'
- en: 'We can then create the derivative of the sigmoid function, `sigmoid_derivate()`,
    using the original sigmoid function, `sigmoid()`, in Python. We can plot both
    functions side by side as seen in the following screenshot:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们可以使用Python中的原始Sigmoid函数`sigmoid()`创建Sigmoid函数的导数`sigmoid_derivate()`。我们可以在以下截图中将两个函数并排绘制：
- en: '![](img/00068.jpeg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00068.jpeg)'
- en: Sigmoid Derivative tracks the slope of the original Sigmoid function. Early
    on in the plot, when the slope of the Sigmoid is completely horizontal, the Sigmoid
    Derivative is also 0.0.  The same holds true for Sigmoid when the value is approaching
    1 as the slope is also almost completely horizontal. The peak value of the slope
    of Sigmoid is at the midpoint of the x-axis. Consequently, this is also the peak
    value of Sigmoid Derivative.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sigmoid导数跟踪原始Sigmoid函数的斜率。在绘图的早期阶段，当Sigmoid的斜率完全水平时，Sigmoid导数也是0.0。当Sigmoid的值接近1时，斜率也几乎完全水平。Sigmoid的斜率的峰值在x轴的中点。因此，这也是Sigmoid导数的峰值。
- en: See also
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'To get a deeper dive into derivatives, visit the following website:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 要深入了解导数，请访问以下网站：
- en: '[https://www.khanacademy.org/math/calculus-home/taking-derivatives-calc](https://www.khanacademy.org/math/calculus-home/taking-derivatives-calc)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.khanacademy.org/math/calculus-home/taking-derivatives-calc](https://www.khanacademy.org/math/calculus-home/taking-derivatives-calc)'
- en: Calculating the cost function in a neural network
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在神经网络中计算成本函数
- en: At this point, it is time to bring together all of the parts highlighted earlier
    on in the chapter to calculate the cost function, which will be used by the neural
    network to determine how well the predicted outcome matched the original or actual
    outcome, given the 29 individual data points that are currently available. The
    purpose of the cost function is to identify the difference between the actual
    value and the predicted value.  Gradient descent is then used to either increase
    or decrease the values for `w1`, `w2`, and `b` to decrease the value of the cost
    function and ultimately achieve our goal of deriving a predicted value that matches
    the actual value.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，是时候将本章前面强调的所有部分汇总起来，计算成本函数了，神经网络将使用该函数来确定预测结果与原始或实际结果的匹配程度，给定当前可用的29个个体数据点。成本函数的目的是确定实际值和预测值之间的差异。然后使用梯度下降来增加或减少`w1`、`w2`和`b`的值，以减少成本函数的值，最终实现我们的目标，得出与实际值匹配的预测值。
- en: Getting ready
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The formula for the cost function is the following:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 成本函数的公式如下：
- en: cost(x)=(predicted-actual)²
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 成本(x)=(预测-实际)²
- en: If the cost function looks familiar, it's because it is really just another
    way of minimizing the squared difference between the actual output and the prediction.
    The purpose of gradient descent or backpropagation in a neural network is to minimize
    the cost function until the value is close to 0\. At that point, the weights and
    bias (`w1`, `w2`, and `b`) will no longer be random insignificant values generated
    by `numpy`, but actual significant weights contributing to a neural network model.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 如果成本函数看起来很熟悉，那是因为这实际上只是最小化实际输出和预测之间的平方差的另一种方式。神经网络中梯度下降或反向传播的目的是将成本函数最小化，直到该值接近0。在那一点上，权重和偏差（`w1`、`w2`和`b`）将不再是由`numpy`生成的随机无关紧要的值，而是对神经网络模型有实际贡献的实际重要权重。
- en: How to do it...
  id: totrans-281
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: This section walks through the steps to calculate the cost function.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍计算成本函数的步骤。
- en: 'Set a  learning rate value of `0.1` to incrementally change the weights and
    bias until a final output is selected using the following script:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置学习率值为`0.1`，逐步改变权重和偏差，直到使用以下脚本选择最终输出：
- en: '[PRE31]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Initiate a Python list called `allCosts` using the following script.
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本初始化一个名为`allCosts`的Python列表。
- en: '[PRE32]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Create a `for` loop that will iterate through 100,000 scenarios using the following
    script:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`for`循环，使用以下脚本迭代100,000个场景：
- en: '![](img/00069.jpeg)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00069.jpeg)'
- en: 'Plot the cost values collected over the 100,000 iterations using the following
    script:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本绘制100,000次迭代中收集的成本值：
- en: '[PRE33]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The final values of the weights and bias can be viewed using the following
    script:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用以下脚本查看权重和偏差的最终值：
- en: '[PRE34]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: How it works...
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This section explains how the cost function is used to generate weights and
    bias.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何使用成本函数生成权重和偏差。
- en: A `for` loop will be implemented that will perform gradient descent on the weights
    and bias to tweak the values until the cost function gets close to 0.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将实施一个`for`循环，该循环将对权重和偏差执行梯度下降，以调整值，直到成本函数接近0。
- en: The loop will iterate over the cost function 100,000 times. Each time, a random
    value for `height` and `weight` from the 29 individuals is selected.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 循环将迭代100,000次成本函数。每次从29个个体中随机选择`height`和`weight`的值。
- en: A summation value, `z`, is calculated from the random `height` and `weight`,
    and the input is used to calculate a `predictedGender` score with the `sigmoid` function.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从随机的`height`和`weight`计算出总和值`z`，并使用输入计算出`sigmoid`函数的`predictedGender`分数。
- en: The cost function is calculated and added to a list that tracks all cost functions
    through the 100,000 iterations, `allCosts`.
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算成本函数，并将其添加到跟踪100,000次迭代中的所有成本函数的列表`allCosts`中。
- en: A series of partial derivatives is calculated with respect to the summation
    value (`z`) as well as the `cost` function (`cost`).
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算了一系列关于总和值（`z`）以及成本函数（`cost`）的偏导数。
- en: These calculations are ultimately used to update the weights and bias with respect
    to the cost function until they (`w1`, `w2`, and `b`) return a value that is close
    to 0 for the cost function over the 100,000 iterations.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些计算最终用于根据成本函数更新权重和偏差，直到它们（`w1`、`w2`和`b`）在100,000次迭代中返回接近0的值。
- en: 'Ultimately, the goal is for the values to be decreasing for the cost function
    as the iterations increase.  The output of the cost function values over the 100,000
    iterations can be seen in the following screenshot:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终，目标是使成本函数的值随着迭代次数的增加而减少。成本函数在100,000次迭代中的输出可以在下面的截图中看到：
- en: '![](img/00070.jpeg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00070.jpeg)'
- en: Over the course of the iterations, the cost value dropped from ~0.45 to ~0.01.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在迭代过程中，成本值从约0.45下降到约0.01。
- en: 'Additionally, we can view the final output for the values of `w1`, `w2`, and `b` that
    produced the lowest value of the cost function as seen in the following screenshot:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，我们可以查看产生成本函数最低值的`w1`、`w2`和`b`的最终输出，如下截图所示：
- en: '![](img/00071.jpeg)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00071.jpeg)'
- en: There's more...
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The ability to test the final values of the weights and bias is now available
    to compute how well the cost function worked to compute a predicted and how it
    compared to the actual score.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以测试权重和偏差的最终值，以计算成本函数的工作效果以及预测值与实际分数的比较。
- en: 'The following script will create a loop through each individual and calculate
    a predicted gender score based on the weights (`w1`, `w2`) and the bias (`b`):'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 以下脚本将通过每个个体创建一个循环，并基于权重（`w1`、`w2`）和偏差（`b`）计算预测的性别分数：
- en: '[PRE35]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The output of the script can be seen in the following screenshot:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在下面的截图中看到脚本的输出：
- en: '![](img/00072.jpeg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00072.jpeg)'
- en: All 29 of the actual scores approximately match the predicted scores when rounded.
    While this is good for confirming the model produced matching results on the training
    data, ultimately, the test will be to determine whether the model can make accurate
    gender predictions on new individuals introduced to it.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 29个实际分数大约与预测分数相匹配。虽然这对于确认模型在训练数据上产生匹配结果是有好处的，但最终的测试将是确定模型是否能够对引入的新个体进行准确的性别预测。
- en: See also
  id: totrans-313
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'In order to learn more about minimizing cost functions or squared (difference)
    error functions using gradient descent, visit the following site:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于使用梯度下降来最小化成本函数或平方（差）误差函数的信息，请访问以下网站：
- en: '[https://en.wikipedia.org/wiki/Gradient_descent](https://en.wikipedia.org/wiki/Gradient_descent)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gradient_descent](https://en.wikipedia.org/wiki/Gradient_descent)'
- en: Predicting gender based on height and weight
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据身高和体重预测性别
- en: A predictive model is only useful if it can actually predict based on new information.
    This is the case with a simple logistic or linear regression, or a more complex
    neural network model.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当预测模型实际上可以根据新信息进行预测时，它才有用。这适用于简单的逻辑或线性回归，或更复杂的神经网络模型。
- en: Getting ready
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备好了
- en: This is where the fun begins. The only requirements for this section are to
    pull sample data points for both male and female individuals and use their height
    and weight values to measure the accuracy of the model created in the previous
    section.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是乐趣开始的地方。本节的唯一要求是为男性和女性个体提取样本数据点，并使用其身高和体重值来衡量前一节中创建的模型的准确性。
- en: How to do it...
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: This section walks through the steps to predict gender based on height and weight.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了如何根据身高和体重预测性别的步骤。
- en: 'Create a Python function called `input_normalize` to input new values for `height` and `weight` and
    output a normalized height and weight, as seen in the following script:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`input_normalize`的Python函数，用于输入`height`和`weight`的新值，并输出归一化的身高和体重，如下脚本所示：
- en: '[PRE36]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Assign a variable called `score` to the function for the values of `70` inches
    for the `height` and `180` lbs for the `weight`, as seen in the following script:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`height`设置值为`70`英寸，为`weight`设置值为`180`磅，并将其分配给名为`score`的变量，如下脚本所示：
- en: '[PRE37]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Create another Python function, called `predict_gender`, to output a probability
    score, `gender_score`, between 0 and 1, as well as a gender description, by applying
    the summation with `w1`, `w2`, and `b` as well as the `sigmoid` function, as seen
    in the following script:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个Python函数，名为`predict_gender`，输出一个概率分数`gender_score`，介于0和1之间，以及一个性别描述，通过应用与`w1`、`w2`和`b`的求和以及`sigmoid`函数，如下脚本所示：
- en: '[PRE38]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: How it works...
  id: totrans-328
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: This section explains how new inputs for height and weight are used to generate
    a prediction score for gender.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何使用身高和体重的新输入来生成性别的预测分数。
- en: A function is created to input new height and weight values and convert the
    actual values to normalized height and weight values called `inputHeight` and `inputWeight`
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数来输入新的身高和体重值，并将实际值转换为规范化的身高和体重值，称为`inputHeight`和`inputWeight`。
- en: A variable, `score`, is used to store the normalized values and another function, `predictGender`,
    is created to input the score values and output a gender score and description
    based on the values of `w1`, `w2`, and `b` that were created in the previous section. 
    These values have already been pre-adjusted using gradient descent to tweak the
    values and minimize the `cost` function.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用一个变量`score`来存储规范化的值，并创建另一个函数`predictGender`来输入分数值，并根据前一节中创建的`w1`、`w2`和`b`的值输出性别分数和描述。这些值已经经过梯度下降进行了预调整，以微调这些值并最小化`cost`函数。
- en: 'Applying the `score` value to the `predict_gender` function should reveal the
    gender description and score, as seen in the following screenshot:'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`score`值应用到`predict_gender`函数中，应该显示性别描述和分数，如下截图所示：
- en: '![](img/00073.jpeg)'
  id: totrans-333
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00073.jpeg)'
- en: It appears that the specifications of `70` inches in `height` and `180` lbs
    in `weight` is a high predictor (99.999%) for Male.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 似乎`70`英寸的`height`和`180`磅的`weight`的规格是男性的高预测器（99.999%）。
- en: 'Another test for `50` inches in `height` and `150` lbs in `weight` will likely
    reveal a different gender, as seen in the following screenshot:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于`50`英寸的`height`和`150`磅的`weight`的另一个测试可能会显示不同的性别，如下截图所示：
- en: '![](img/00074.jpeg)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00074.jpeg)'
- en: Similarly, this input produces a very low score from the `sigmoid` function
    (0.00000000839) indicating that these features are closely associated with the `Female` gender.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，这个输入从`sigmoid`函数中产生了一个非常低的分数（0.00000000839），表明这些特征与`Female`性别密切相关。
- en: See also
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'In order to learn more about testing, training, and validation data sets, visit
    the following website:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于测试、训练和验证数据集的信息，请访问以下网站：
- en: '[https://en.wikipedia.org/wiki/Training,_test,_and_validation_sets](https://en.wikipedia.org/wiki/Training,_test,_and_validation_sets)'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Training,_test,_and_validation_sets](https://en.wikipedia.org/wiki/Training,_test,_and_validation_sets)'
- en: Visualizing prediction scores
  id: totrans-341
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化预测分数
- en: While we can individually predict the gender based on an individual with a certain
    height and weight, the entire dataset can be graphed and scored using every data
    point to determine whether the output is going to score a female or a male.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们可以根据特定身高和体重的个体单独预测性别，但整个数据集可以通过使用每个数据点来绘制和评分，以确定输出是女性还是男性。
- en: Getting ready
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: There are no dependencies required for this section.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 本节不需要任何依赖项。
- en: How to do it...
  id: totrans-345
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: This section walks through the steps to visualize all of the predicted points
    in a graph.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将通过步骤来可视化图表中的所有预测点。
- en: 'Compute the minimum and maximum points of the graph  using the following script:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本计算图表的最小和最大点：
- en: '[PRE39]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Generate *x* and *y* values in increments of 0.05 units and then create an
    array called `xy_data`, as seen in the following script:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成*x*和*y*值，增量为0.05单位，然后创建一个名为`xy_data`的数组，如下脚本所示：
- en: '[PRE40]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Finally, a similar script to that used earlier in the chapter is used to generate
    a gender score and populate a graph, as seen in the following script:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用本章前面使用过的类似脚本来生成性别分数并填充图表，如下脚本所示：
- en: '[PRE41]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: How it works...
  id: totrans-353
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: This section explains how the data points are created to generate prediction
    values that will be graphed.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何创建数据点以生成将被绘制的预测值。
- en: 'The minimum and maximum values of the graph are computed based on the array
    values. The output of the script can be seen in the following screenshot:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据数组值计算图表的最小和最大值。脚本的输出可以在下面的截图中看到：
- en: '![](img/00075.jpeg)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00075.jpeg)'
- en: 'We generate x and y values for each data point within the minimum and maximum
    values within 0.05 increments and then run each (x,y) point into the prediction
    score to plot the values.  The Female gender score is assigned a red color and
    the Male gender score is assigned a blue color as seen in the following screenshot:'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们为每个数据点生成x和y值，在0.05的增量内的最小和最大值，并将每个（x，y）点运行到预测分数中以绘制这些值。女性性别分数分配为红色，男性性别分数分配为蓝色，如下截图所示：
- en: '![](img/00076.jpeg)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00076.jpeg)'
- en: The graph shows the cutoff between the gender scores depending on the `height` and `weight` selected.
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图表显示了根据所选的`height`和`weight`之间的性别分数的分界线。
