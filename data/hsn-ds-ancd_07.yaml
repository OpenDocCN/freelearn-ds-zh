- en: Optimization in Anaconda
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Anaconda中的优化
- en: Optimization plays a very important role in the area of data science. For example,
    in finance, investors are constantly seeking a trade-off between risk and return.
    To diversify their investment, they would like to invest in different industries
    or buy several stocks. Thus, for an expected portfolio return, how do they choose
    appropriate stocks to minimize their portfolio risk? For this objective, we could
    apply some kind of portfolio optimization technique.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 优化在数据科学领域中扮演着非常重要的角色。例如，在金融领域，投资者不断寻求风险和回报之间的平衡。为了实现投资多样化，他们希望投资于不同的行业或购买几只股票。那么，如何选择合适的股票，以最小化他们的投资组合风险，从而实现预期的组合回报呢？为此，我们可以应用某种投资组合优化技术。
- en: 'Another application is linked to the government''s tax policy. We know that
    cutting the corporate tax rate would encourage companies that are considering
    more capital investment (that is, long-term investment), such as in equipment.
    However, at the same time, the government''s revenue might fall. If this is true,
    the government would have to cut many programs intended to help unfortunate people.
    Because of this, the government has a strong incentive to find an optimal tax
    rate. In this chapter, the following topics will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个应用与政府的税收政策相关。我们知道，降低企业税率会鼓励那些考虑进行更多资本投资（即长期投资）的公司，比如设备投资。然而，与此同时，政府的收入可能会减少。如果这一点成立，政府就必须削减许多旨在帮助不幸人群的项目。因此，政府有强烈的动机去寻找一个最优的税率。在这一章中，将涵盖以下主题：
- en: Why optimization is important
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么优化很重要
- en: General issues for optimization problems
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化问题的常见问题
- en: Quadratic optimization
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二次优化
- en: 'Example #1 – stock portfolio optimization'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '示例 #1 – 股票投资组合优化'
- en: 'Example #2 – optimal tax policy'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '示例 #2 – 最优税收政策'
- en: Packages for optimization in R, Python, Octave, and Julia
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R、Python、Octave和Julia中的优化包
- en: Why optimization is important
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么优化很重要
- en: In our lives, people face all kinds of choices. In a sense, we implement, either
    consciously or subconsciously, various kinds of *implied* optimization procedures.
    For example, when a high school junior or senior is looking for a college, they
    might have many choices, such as good schools, local schools, public schools,
    or private schools. When making a decision with a couple of offers, these high
    school students usually have some objectives in their mind. These objectives might
    include the ranking and cost of attending a school, scholarships, the reputation,
    and name recognition of the program, or even the fame of the football team. For
    corporations, they have to make all kinds of optimal or reasonable decisions.
    For instance, what kinds of products they should produce, what are the quantities
    and at what prices, and to whom they should target. Since most companies have
    limited resources, they have to make an optimal decision with certain constraints.
    For example, in employee scheduling, the target function is the total cost. At
    the same time, we have certain constraints such as the number of employees, their
    seniority, preferences, and the like.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的生活中，人们面临着各种各样的选择。从某种意义上说，我们有意识地或无意识地执行各种*隐性*优化程序。例如，当一名高中高年级学生在寻找大学时，他们可能会有许多选择，比如好的学校、当地学校、公立学校或私立学校。在做出几个录取选择时，这些高中生通常会有一些目标。这些目标可能包括学校的排名和就读费用、奖学金、项目的声誉和知名度，甚至是橄榄球队的名气。对于公司而言，他们必须做出各种最优或合理的决策。例如，他们应该生产什么类型的产品，生产多少数量，定价多少，以及应该面向谁销售。由于大多数公司资源有限，他们必须在一定的约束条件下做出最优决策。例如，在员工排班中，目标函数是总成本。同时，我们有一定的约束条件，如员工人数、资历、偏好等。
- en: 'Here is a general form for the optimization problem, where *Min()* is a minimizing
    function and *f(x)* is our objective function:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是优化问题的一般形式，其中*Min()*是最小化函数，*f(x)*是我们的目标函数：
- en: '![](img/a03813d1-d62e-4304-bf70-f399b952c466.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a03813d1-d62e-4304-bf70-f399b952c466.png)'
- en: 'We intend to minimize *f* by changing *x*, which is a set of input values,
    by subjecting it to certain constraints. Note that if we plan to maximize *f*,
    we simply could have minimized its negative value. Later in the chapter, we introduce
    a utility function for investors, which could be viewed as the trade-off between
    benefits (expected portfolio return) and cost (the portfolio risk). For investors,
    they want to maximize the utility. It could be equivalent to minimizing its negative
    objective function; see the following formula:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们打算通过改变 *x*（一组输入值）来最小化 *f*，并使其满足一定的约束条件。请注意，如果我们计划最大化 *f*，我们可以简单地最小化其负值。在本章后面，我们将引入一个适用于投资者的效用函数，它可以看作是收益（预期投资组合回报）与成本（投资组合风险）之间的权衡。对于投资者而言，他们希望最大化效用函数。这可以等同于最小化其负目标函数；见下式：
- en: '![](img/e5fc38a5-2e31-4e78-95cc-960bed6ea055.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5fc38a5-2e31-4e78-95cc-960bed6ea055.png)'
- en: 'Where *U()* is the utility function and *x* will be a set of input variables.
    The following table shows a partial list of applications for optimization:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *U()* 是效用函数，*x* 将是一组输入变量。下表展示了优化应用的一部分：
- en: '| **Area** | **Name** | **Description** |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| **领域** | **名称** | **描述** |'
- en: '| Economics | Utility function | For many variables in the real world, it is
    difficult to quantify them, such as happiness. For this, economists have developed
    a utility function. To find an optimal solution, users could maximize their utility
    function. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 经济学 | 效用函数 | 对于许多现实世界中的变量，像幸福感这样的东西很难量化。为此，经济学家们提出了效用函数。为了找到最优解，用户可以通过最大化其效用函数来实现。
    |'
- en: '| Quantity, price, and production | A company might consider the best strategy
    to produce, price, and sell its products. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 数量、价格与生产 | 一家公司可能会考虑最佳策略来生产、定价和销售其产品。 |'
- en: '| Welfare transfer | Governments might consider many input variables such as
    incentives to work, crime rate, and other factors. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 福利转移 | 政府可能会考虑许多输入变量，如工作激励、犯罪率以及其他因素。 |'
- en: '| Optimal tax policy | Maximize the GDP growth, subject to controllable inflation
    rate. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 最优税收政策 | 最大化GDP增长，同时控制可控的通货膨胀率。 |'
- en: '| Finance | Portfolio optimization | For a given portfolio of expected returns,
    choose a set of stocks to minimize the portfolio risk. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 财务 | 投资组合优化 | 对于给定的预期回报组合，选择一组股票以最小化投资组合风险。 |'
- en: '| Optimal investment strategy | When facing several possible investment opportunities
    and many constraints, how to choose the best combination to achieve the best result.
    |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 最优投资策略 | 面对多种可能的投资机会和众多约束条件时，如何选择最佳组合以实现最佳结果。 |'
- en: '| Profit optimization | For companies, they want to maximize their profit by
    optimally choosing their input variables. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 利润优化 | 对于公司而言，他们希望通过最优选择输入变量来最大化利润。 |'
- en: '| High-frequency trading | Balance the signalling effect with various bid-and-ask
    offers, and long-term and short-term profits. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 高频交易 | 在信号效应与各种买卖报价之间、长期与短期利润之间找到平衡。 |'
- en: '| Others | Scheduling | Minimize the total cost with certain constraints. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 其他 | 调度 | 在一定约束下最小化总成本。 |'
- en: '| Minimize total cost | Consider various trade-offs between certain benefits
    and costs. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 最小化总成本 | 考虑在一定的利益与成本之间做出各种权衡。 |'
- en: '| Flying issues | Minimize the total distance by visiting certain cities. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 飞行问题 | 通过访问特定城市来最小化总距离。 |'
- en: '| Task arrangements | With many tasks and potential labor and input variables
    available, how to achieve an optimal solution. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 任务安排 | 面对许多任务和潜在的劳动及输入变量时，如何实现最优解。 |'
- en: Application of optimization
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 优化的应用
- en: General issues for optimization problems
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化问题的常见问题
- en: There are several issues in optimization. The most important one is how to choose
    an appropriate objective function. For some cases, the objective function is obvious.
    Unfortunately, for other cases, it is not that crystal clear. Since choosing a
    good objective depends on the specific situation, we will discuss it further,
    but remember that an appropriate objective function might make our task much easier.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 优化问题中有几个关键问题。最重要的是如何选择一个合适的目标函数。对于某些情况，目标函数是显而易见的。不幸的是，对于其他情况，这一点并不那么清晰。由于选择一个好的目标函数取决于具体情况，我们将进一步讨论，但请记住，一个合适的目标函数可能会使我们的任务变得更加简单。
- en: 'In many cases, an inappropriate objective function might cause the following
    problems:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，一个不合适的目标函数可能会导致以下问题：
- en: It is difficult to find a feasible solution
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很难找到一个可行的解
- en: We might end up with a local solution
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可能会得到一个局部解
- en: We might have a corner solution
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可能会得到一个极值解
- en: It takes a long time to converge (that is, too much computation time to find
    a good solution)
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收敛需要很长时间（也就是说，找到一个好的解决方案需要过多的计算时间）
- en: 'Let''s look at a convex function; the code and corresponding graph are given
    here:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个凸函数；代码和对应的图表如下：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This code will provide an output shown here:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码将提供如下所示的输出：
- en: '![](img/a9e7034c-dc1e-45b2-9bc1-1a00a3849d0e.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a9e7034c-dc1e-45b2-9bc1-1a00a3849d0e.png)'
- en: 'Geometrically, a function is convex if a line segment drawn from any point
    *(x[1],y[1])* to another point *(x[2],y[2])* – called the chord from *x* to *y*
    – lies on or above the graph of *f*, as shown in the diagram here:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从几何角度看，如果从任何一点 *(x[1],y[1])* 到另一点 *(x[2],y[2])* 绘制的线段——称为从 *x* 到 *y* 的弦——位于
    *f* 的图形上方或与其重合，那么该函数就是凸函数，如下图所示：
- en: '![](img/b0a97731-cb27-4bad-b752-34598a42bf16.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0a97731-cb27-4bad-b752-34598a42bf16.png)'
- en: 'The code for this graph and one of its chords is given here:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 该图表及其一条弦的代码如下：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For a convex function, it is quite easy to find its optimal solution. However,
    it is not that easy to find an optimal solution for a non-convex function. In
    that case, we would have to face a few issues: a global solution versus a local
    solution, unconstrained versus constrained optimization, initial input values,
    and conversion criteria.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于凸函数，找到其最优解是相对容易的。然而，对于非凸函数，找到最优解就没有那么简单了。在这种情况下，我们将面临一些问题：全局解与局部解，无约束与有约束优化，初始输入值，以及转换标准。
- en: 'A global solution is a solution that achieves our objective function by using
    all the values or possible input values. However, for some reason, our program
    could fail to find a global solution, but finds a local solution instead. A local
    solution is an optimal solution for just a small area. Let''s look at the following
    function:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 全局解是通过使用所有值或可能的输入值来实现目标函数的解。然而，由于某些原因，我们的程序可能无法找到全局解，而只能找到局部解。局部解是指仅对一个小区域的最优解。让我们看一下以下函数：
- en: '![](img/a897b69c-14ff-45fb-a7c1-2fc1f61c3f6a.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a897b69c-14ff-45fb-a7c1-2fc1f61c3f6a.png)'
- en: 'Since both items on the right-hand side are positive, *f(x,y)* could have multiple
    minima. When *x=-1* and *y=0*, *f(x,y)* is zero, so *(-1,0)* is a minimum. In
    addition, when *x=1* and *y=2*, *f(x,y)* is zero as well, so *(1,2)* is also a
    minimum. Note that users need to run `install.packages(''scatterplot3d'')` if
    that library is not installed yet:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于右侧的两个项都是正数，*f(x,y)* 可能有多个最小值。当 *x=-1* 且 *y=0* 时，*f(x,y)* 为零，因此 *(-1,0)* 是一个最小值。另外，当
    *x=1* 且 *y=2* 时，*f(x,y)* 也为零，因此 *(1,2)* 也是一个最小值。请注意，如果尚未安装该库，用户需要运行 `install.packages('scatterplot3d')`：
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The related three-dimensional graph is shown here:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 相关的三维图形如下所示：
- en: '![](img/36eba030-f5a3-4f5d-9277-ca9448e54aa3.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/36eba030-f5a3-4f5d-9277-ca9448e54aa3.png)'
- en: A corner solution is a special solution to a maximization or minimization problem
    in which the quantity of one of the input variables is zero or with an extreme
    value. In non-technical terms, a corner solution is when the chooser is either
    unwilling or unable to make a trade-off between benefit and cost. Most of the
    time, corner solutions are not optional, let alone a global optimal solution.
    To avoid a local or corner solution, we sometimes have to find our input spaces
    for various input variables first. Then, we choose some evenly spaced intervals
    for our initial input values. Here is one example.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 角点解是最大化或最小化问题的特殊解，其中一个输入变量的数量为零或取极端值。用非技术术语来说，角点解就是选择者既不愿意也无法在收益和成本之间做出权衡。大多数时候，角点解不是可选的，更不用说是全局最优解了。为了避免局部解或角点解，我们有时需要首先找到各个输入变量的输入空间。然后，我们为初始输入值选择一些均匀间隔的区间。以下是一个示例。
- en: 'The PIN measure of information asymmetry is derived from the market microstructure
    model proposed in *Easley and O''Hara* (1992) and *Easley et al*. (1997). Mathematically,
    the model specifies that on any day, the likelihood of observing the number of
    buy trades (*ε[b]*) and the number of sell trades (*ε[s]*) is represented by the
    following joint Poisson distribution, *L*:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 信息不对称的PIN度量源自 *Easley 和 O'Hara*（1992）以及 *Easley et al*.（1997）提出的市场微观结构模型。从数学角度看，该模型指定了在任意一天，观察到买入交易数量
    (*ε[b]*) 和卖出交易数量 (*ε[s]*) 的可能性由以下联合泊松分布 *L* 表示：
- en: '![](img/1cc1fdb6-d65b-4a71-b36f-0ecabe8bd678.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1cc1fdb6-d65b-4a71-b36f-0ecabe8bd678.png)'
- en: 'The values of *X*, *Y*, and *Z* are defined as:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*X*、*Y* 和 *Z* 的值定义如下：'
- en: '![](img/9fcb6511-181c-4506-b496-57b1add45cc2.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fcb6511-181c-4506-b496-57b1add45cc2.png)'
- en: Where *θ=[α,δ,μ,ε[b],ε[s]]* represents five structural parameters that describe
    the trading process in each day. Specifically, *α* denotes the probability that
    an information event occurs, *δ* is the probability of a bad event happening,
    *μ* is the Poisson parameter for when no information event happens, *ε[b]* is
    the Poisson parameter for when a good event happens (then investors would buy),
    *ε[s]* is the Poisson parameter for when a bad event happens (then investors would
    sell), *B[i]* is the number of buyer-initiated trades on day *i*, while *S[i]*
    is the number of seller-initiated trades.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，*θ=[α,δ,μ,ε[b],ε[s]]* 代表描述每日交易过程的五个结构参数。具体而言，*α* 表示信息事件发生的概率，*δ* 表示坏事件发生的概率，*μ*
    是在没有信息事件发生时的泊松参数，*ε[b]* 是当好事件发生时的泊松参数（此时投资者会买入），*ε[s]* 是当坏事件发生时的泊松参数（此时投资者会卖出），*B[i]*
    是第 *i* 天由买方发起的交易数量，而 *S[i]* 是由卖方发起的交易数量。
- en: Since this likelihood objective is not well-behaved, it is sometimes difficult
    to converge or end up at a corner solution. For many scenarios, optimal solutions
    depend on the initial input values. *Yan and Zhang* (2014) first found the ranges
    of those five input values and then designed an even distribution of initial values.
    Their results showed that such optimally designed input values would reduce corner
    solutions dramatically.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个似然目标函数表现不稳定，有时很难收敛或者会导致角落解。在许多场景中，最优解取决于初始输入值。*Yan 和 Zhang*（2014）首先找出了这五个输入值的范围，然后设计了初始值的均匀分布。结果表明，这种优化设计的初始值会显著减少角落解的出现。
- en: Expressing various kinds of optimization problems as LPP
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将各种优化问题表示为LPP
- en: 'LPP stands for **Linear Programming Problem** or linear optimization problem.
    It is a method of reaching the best (optimal) outcome, such as the maximum expected
    portfolio return for a given risk level, in a mathematical model whose requirements
    are represented by linear relationships. LPP has the following standard form:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: LPP代表**线性规划问题**或线性优化问题。它是一种通过线性关系表示约束条件，在数学模型中达到最佳（最优）结果的方法，例如在给定风险水平下实现最大预期投资组合回报。LPP具有以下标准形式：
- en: '![](img/92bbedc5-91dc-46a8-9b76-53d8d4f19930.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92bbedc5-91dc-46a8-9b76-53d8d4f19930.png)'
- en: Where *C^TX* is our objective function, *Ax≤b* is a set of constraints, and
    *x≥0* is another set of constraints. For the constraints, we can have many different
    formats.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，*C^TX* 是我们的目标函数，*Ax≤b* 是一组约束条件，*x≥0* 是另一组约束条件。对于这些约束，我们可以使用多种不同的格式。
- en: Quadratic optimization
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 二次优化
- en: 'If the highest power is 1, then we call it a linear model. On the other hand,
    if the highest power is 2, we call it a quadratic function. The R `optim()` function
    can be used to find a solution for a minimization problem. For example, we have
    the following objective function:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果最高次幂是1，那么我们称之为线性模型。另一方面，如果最高次幂是2，则称之为二次函数。R的 `optim()` 函数可以用于寻找最小化问题的解。例如，我们有如下目标函数：
- en: '![](img/109645a8-747b-471b-b6b9-7c03f70f7f15.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/109645a8-747b-471b-b6b9-7c03f70f7f15.png)'
- en: 'Since there is only one variable, we can solve it manually. Take the first-order
    derivative and set it to:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于只有一个变量，我们可以手动解决这个问题。求一阶导数并设其为：
- en: '[PRE3]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The related graph is shown here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 相关图表如下：
- en: '![](img/f7b15110-17e3-412d-9f92-f8938b45cf43.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f7b15110-17e3-412d-9f92-f8938b45cf43.png)'
- en: 'From the graph, we know that we could get a maximum *y* value when *x* is zero:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从图中可以看出，当 *x* 为零时，我们可以得到一个最大的 *y* 值：
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the preceding formula, we use a negative function since the R `optim()`
    function would get a minimum value instead of a maximum one:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的公式中，我们使用了负函数，因为R的 `optim()` 函数会得到最小值而不是最大值：
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Optimization in R
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R中的优化
- en: 'In this section, we show one example of optimization for R. The first one is
    quite simple, which is the maximum of a user''s utility, expressed here:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们展示了一个关于R的优化示例。第一个示例相当简单，目标是用户效用的最大化，如下所示：
- en: '![](img/520fcbf0-0a6c-4799-9f25-374a0fb82324.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/520fcbf0-0a6c-4799-9f25-374a0fb82324.png)'
- en: Where *U* is the utility function, *E(x)* is the expectation function, *R[p]*
    is the portfolio return, *A* is a parameter representing risk preference, and
     ![](img/8efa3c24-36ef-467f-a595-56dee7f3d340.png) is the portfolio variance.
    Obviously, the utility is positively correlated with the expected portfolio return
    and negatively correlated with the portfolio risk (that is, variance). Note that
    this is a quadratic function.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*U*是效用函数，*E(x)*是期望函数，*R[p]*是投资组合回报，*A*是表示风险偏好的参数，而![](img/8efa3c24-36ef-467f-a595-56dee7f3d340.png)是投资组合方差。显然，效用与期望投资组合回报正相关，与投资组合风险（即方差）负相关。请注意，这是一种二次函数。
- en: 'Next, we try to use the value-weighted five industries supplied by Fama and
    French to see how to use the optimization procedure. First, we retrieve the data
    by using the following code:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们尝试使用法马和法兰奇提供的价值加权五个行业，看看如何使用优化过程。首先，我们通过以下代码获取数据：
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output is shown here:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/58792d01-b444-4d74-8a18-a133063633e5.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/58792d01-b444-4d74-8a18-a133063633e5.png)'
- en: 'The first column is the date, while the next five columns are returns for the
    value-weighted industry portfolios, and the last five columns are for the equal-weighed
    industry portfolios. `Cnsmr` is for consumer, `Manuf` is for manufacture, `Hlth`
    is for health care, and `Other` is for other industries. For a more detailed definition,
    see the link at [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/det_5_ind_port.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/det_5_ind_port.html).
    In the following function, we use the value-weighted five industries as an example:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 第一列是日期，接下来的五列是价值加权行业组合的回报，最后五列是等权重行业组合的回报。`Cnsmr`代表消费者，`Manuf`代表制造业，`Hlth`代表医疗保健，`Other`代表其他行业。有关更详细的定义，请参见[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/det_5_ind_port.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/det_5_ind_port.html)中的链接。在以下函数中，我们以价值加权五个行业为例：
- en: '[PRE7]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the preceding function, a negative sign was added to the utility function
    since the `optim()` function is to minimize. In addition, a so-called loss was
    added to the objective function. Its value is associated with the deviation of
    summation of all weights equal to 1\. In other words, if the summation of weights
    is 1, this loss variable has a value of zero. This is one convenient way of adding
    a constraint. In the following code, we call the R `optim()` function:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的函数中，由于`optim()`函数需要最小化，因此在效用函数中添加了负号。此外，目标函数中添加了一个所谓的损失变量。其值与所有权重之和等于1的偏差有关。换句话说，如果权重之和为1，则该损失变量的值为零。这是添加约束的一种便捷方法。在以下代码中，我们调用了R的`optim()`函数：
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The weights for these five industries are 103%, -19%, 14.7%, 88.7%, and -87.2%.
    A negative weight indicates a short position. If we have a lower bound and an
    upper bound, we could specify this with the following code. Note that the related
    method is `method="L-BFGS-B"`:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这五个行业的权重分别为103%、-19%、14.7%、88.7%和-87.2%。负权重表示做空。如果我们有下界和上界，我们可以通过以下代码来指定。请注意，相关方法是`method="L-BFGS-B"`：
- en: '[PRE9]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output shows that the weights of this five-industry portfolio should be
    `(0.5, 0.016, 0.084, 0.5,-0.1)`. To get more information about this function,
    we could type `help(optim)`; see here:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示该五行业组合的权重应为`(0.5, 0.016, 0.084, 0.5,-0.1)`。要获取更多关于该函数的信息，我们可以输入`help(optim)`；见此处：
- en: '[PRE10]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Optimization in Python
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python中的优化
- en: 'For optimization, the most frequently used Python function is:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于优化，最常用的Python函数是：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output is shown here:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/7db0a379-f055-4716-80cf-9597688459f9.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7db0a379-f055-4716-80cf-9597688459f9.png)'
- en: 'To find the usage of a function called `minimize`, we have the following code:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找名为`minimize`的函数的用法，我们可以使用以下代码：
- en: '[PRE12]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output is shown here. To save space, only the top part is presented:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示。为节省空间，这里只展示了顶部部分：
- en: '![](img/c43b67d4-6a68-4e4f-8084-1444aa5b0d81.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c43b67d4-6a68-4e4f-8084-1444aa5b0d81.png)'
- en: 'The next example is from [https://scipy.org/](https://scipy.org/).The objective
    function is shown here:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例来自[https://scipy.org/](https://scipy.org/)。目标函数如下所示：
- en: '![](img/d966170e-0180-4e15-b0a3-47bef1822147.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d966170e-0180-4e15-b0a3-47bef1822147.png)'
- en: 'It is the Rosenbrock function with five input variables. Since each item on
    the right-hand side is non-negative, we would like to find a set of input variables
    *(x[1],x[2],x[3],x[4],x[5])* to minimize the objective function:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个包含五个输入变量的Rosenbrock函数。由于右侧的每一项都是非负的，我们希望找到一组输入变量*(x[1], x[2], x[3], x[4],
    x[5])*以最小化目标函数：
- en: '[PRE13]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The code of `x[1:]` means the values of *x* from the second item to the last
    one, while the code of `x[:-1]` is the values included in *x* except the last
    one. The output is shown here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`x[1:]`的代码表示从第二项到最后一项的*x*值，而`x[:-1]`的代码表示*x*中除最后一项外的所有值。输出如下所示：'
- en: '![](img/8a34cca7-eddc-4766-aecb-9c5dcc4ad58f.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a34cca7-eddc-4766-aecb-9c5dcc4ad58f.png)'
- en: Optimization in Julia
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Julia中的优化
- en: 'The next example is from the web page [https://jump.readthedocs.io/en/release-0.2/jump.html](https://jump.readthedocs.io/en/release-0.2/jump.html).
    The code is given here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例来自网页[https://jump.readthedocs.io/en/release-0.2/jump.html](https://jump.readthedocs.io/en/release-0.2/jump.html)。代码如下：
- en: '[PRE14]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'First, the objective function is shown here:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，目标函数在这里显示：
- en: '![](img/a827fae0-42af-41b5-b962-90ec9505a763.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a827fae0-42af-41b5-b962-90ec9505a763.png)'
- en: 'The output is given in the following screenshot:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下截图所示：
- en: '![](img/95ddd80f-b46b-4d87-849e-8d2ae45959e7.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95ddd80f-b46b-4d87-849e-8d2ae45959e7.png)'
- en: 'For the code of `m=Model(solver=ECOSSolver())` in the preceding program, the
    solver contained in the package called `ECOS` was used. The following table shows
    various solver functions embedded in different Julia packages:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于前面程序中的`m=Model(solver=ECOSSolver())`代码，使用了名为`ECOS`的包中的求解器。以下表格显示了嵌入在不同Julia包中的各种求解器函数：
- en: '![](img/216a817a-8d98-4414-9bac-fc36623cb69f.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/216a817a-8d98-4414-9bac-fc36623cb69f.png)'
- en: Julia packages with solver
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Julia包与求解器
- en: 'The notations in the table are defined here:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 表中的符号在此定义：
- en: 'LP: Linear programming'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LP：线性规划
- en: 'SOCP: Second-order conic programming (including problems with convex quadratic
    constraints and/or objectives)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SOCP：二阶圆锥规划（包括具有凸二次约束和/或目标的问题）
- en: 'MILP: Mixed-integer linear programming'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MILP：混合整数线性规划
- en: 'NLP: Nonlinear programming'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NLP：非线性规划
- en: 'MINLP: Mixed-integer nonlinear programming'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MINLP：混合整数非线性规划
- en: 'SDP: Semidefinite programming'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SDP：半正定规划
- en: The source of the previous table is here : [http://jump.readthedocs.io/en/latest/installation.html.](http://jump.readthedocs.io/en/latest/installation.html)
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 前面表格的来源在这里：[http://jump.readthedocs.io/en/latest/installation.html](http://jump.readthedocs.io/en/latest/installation.html)
- en: 'Now, consider the following equation:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，考虑以下方程：
- en: '![](img/bdf89950-5b1d-40c7-a8a1-346387f76697.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bdf89950-5b1d-40c7-a8a1-346387f76697.png)'
- en: 'The following Julia program is to find a solution for the preceding function:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Julia程序用于为前面的函数求解：
- en: '[PRE15]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output is shown in the following screenshot:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下截图所示：
- en: '![](img/fd1c9524-de7d-4a57-a481-3b96d969447b.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd1c9524-de7d-4a57-a481-3b96d969447b.png)'
- en: 'The next example is from Julia''s website, [http://julianlsolvers.github.io/Optim.jl/latest/user/minimization/](http://julianlsolvers.github.io/Optim.jl/latest/user/minimization/).
    The code is given here:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例来自Julia的网站，[http://julianlsolvers.github.io/Optim.jl/latest/user/minimization/](http://julianlsolvers.github.io/Optim.jl/latest/user/minimization/)。代码如下：
- en: '[PRE16]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output is shown here:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![](img/531157fd-a633-40cb-bc7c-8f2822ce8ee7.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/531157fd-a633-40cb-bc7c-8f2822ce8ee7.png)'
- en: Optimization in Octave
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Octave中的优化
- en: 'The Octave package called `Optim` can be downloaded easily from [https://octave.sourceforge.io/optim/](https://octave.sourceforge.io/optim/).
    The following screenshot indicates the version of the package. Note this was the
    version on March 1, 2018:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 名为`Optim`的Octave包可以轻松从[https://octave.sourceforge.io/optim/](https://octave.sourceforge.io/optim/)下载。以下截图显示了包的版本。请注意，这是2018年3月1日的版本：
- en: '![](img/12f1c67c-ab77-4577-8e30-514378445c1b.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12f1c67c-ab77-4577-8e30-514378445c1b.png)'
- en: 'After downloading and installing the package (see [Chapter 6](c812a40e-eb24-4bb8-8af5-1cfe1834ec77.xhtml)*,
    Managing Packages,* for more detail on how to install an Octave package), we could
    use the following command lines to see some functions:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装包后（请参见[第6章](c812a40e-eb24-4bb8-8af5-1cfe1834ec77.xhtml)*，管理包*，了解如何安装Octave包的更多细节），我们可以使用以下命令行查看一些函数：
- en: '[PRE17]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following screenshot shows the output. To save space, only the top part
    is shown:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了输出。为了节省空间，仅显示顶部部分：
- en: '![](img/64690671-0c98-4d99-96d7-80e0ff173fbd.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/64690671-0c98-4d99-96d7-80e0ff173fbd.png)'
- en: 'To find the usage of a specific function, we could use the `help()` function:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找特定函数的用法，可以使用`help()`函数：
- en: '[PRE18]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The related output is shown in the following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下截图所示：
- en: '![](img/8fc27527-8e61-4480-9469-f7e67e526e76.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8fc27527-8e61-4480-9469-f7e67e526e76.png)'
- en: 'From the preceding information, we know that the `fminsearch()` function would
    minimize our objective function with a given set of initial values with a set
    of options. Next, we have two examples. For the first example, the objective function
    is given here:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的信息中，我们知道`fminsearch()`函数将以给定的初始值和选项集来最小化我们的目标函数。接下来，我们有两个示例。对于第一个示例，目标函数如下：
- en: '![](img/2ccf33df-35c1-4ee9-bcd6-5356f5558164.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2ccf33df-35c1-4ee9-bcd6-5356f5558164.png)'
- en: 'The code and related output is shown here:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 代码及相关输出如下所示：
- en: '[PRE19]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'For the next example, its objective function is given here:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一个示例，其目标函数如下：
- en: '![](img/1c46796a-e103-451a-a0ee-9b96ae9dbea3.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c46796a-e103-451a-a0ee-9b96ae9dbea3.png)'
- en: 'To see each step, we have the following code:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看每个步骤，我们有以下代码：
- en: '[PRE20]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The first line is for the settings for the optimization procedure. The word
    `Display` means to display all the intermediate steps while `iter` means integration.
    The output is shown here. To save space, we show the top and bottom parts. The
    top part is given first:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行用于设置优化过程。`Display`表示显示所有中间步骤，而`iter`表示集成。输出如下所示。为了节省空间，我们仅展示顶部和底部部分。首先是顶部部分：
- en: '![](img/958e501c-c887-4b5f-bdeb-77015d74aad1.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/958e501c-c887-4b5f-bdeb-77015d74aad1.png)'
- en: 'Here is the bottom part:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这是底部部分：
- en: '![](img/9766b85b-2bab-4a8a-be3e-5ef606d2ab73.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9766b85b-2bab-4a8a-be3e-5ef606d2ab73.png)'
- en: 'Example #1 – stock portfolio optimization'
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '示例 #1 – 股票投资组合优化'
- en: Sometimes we refer to single-period portfolio optimization as Markowitz portfolio
    optimization. Our input datasets include the expected returns, the standard deviations,
    and the correlation matrix between financial assets, and our output will be an
    efficient frontier formed by those assets. In the rest of the chapter, we will
    use historical returns to represent expected returns and use the historical correlation
    in place of expected correlation.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们将单周期投资组合优化称为马克维茨投资组合优化。我们的输入数据集包括预期回报率、标准差和财务资产之间的相关矩阵，我们的输出将是由这些资产形成的有效前沿。在本章的其余部分，我们将使用历史回报率代表预期回报率，并使用历史相关性代替预期相关性。
- en: 'In the following examples, we use an R package called `fPortfolio`. We use
    the following code to install the package:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们使用一个名为`fPortfolio`的R包。我们使用以下代码来安装该包：
- en: '[PRE21]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To load various embedded datasets, we use the `data()` function (see the following
    example code):'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要加载各种嵌入的数据集，我们使用`data()`函数（参见以下示例代码）：
- en: '[PRE22]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following table lists the embedded datasets:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了嵌入的数据集：
- en: '| **#** | **Name** | **Dimension** | **#** | **Name** | **Dimension** |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| **#** | **名称** | **维度** | **#** | **名称** | **维度** |'
- en: '| 1 | ECON85 | [1] 304 12 | 7 | SMALLCAP | [1] 60 22 |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| 1 | ECON85 | [1] 304 12 | 7 | SMALLCAP | [1] 60 22 |'
- en: '| 2 | ECON85LONG | [1] 304 19 | 8 | GCCINDEX.RET | [1] 824 11 |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| 2 | ECON85LONG | [1] 304 19 | 8 | GCCINDEX.RET | [1] 824 11 |'
- en: '| 3 | GCCINDEX | [1] 825 11 | 9 | SPISECTOR.RET | [1] 2198 10 |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| 3 | GCCINDEX | [1] 825 11 | 9 | SPISECTOR.RET | [1] 2198 10 |'
- en: '| 4 | SPISECTOR | [1] 2216 10 | 10 | SWX.RET | [1] 1916 6 |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 4 | SPISECTOR | [1] 2216 10 | 10 | SWX.RET | [1] 1916 6 |'
- en: '| 5 | SWX | [1] 1917 6 | 11 | LPP2005.RET | [1] 377 9 |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| 5 | SWX | [1] 1917 6 | 11 | LPP2005.RET | [1] 377 9 |'
- en: '| 6 | LPP2005 | [1] 377 9 | 12 | SMALLCAP.RET | [1] 60 22 |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 6 | LPP2005 | [1] 377 9 | 12 | SMALLCAP.RET | [1] 60 22 |'
- en: A list of datasets in the fPorfolio R package
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: fPortfolio R包中的数据集列表
- en: 'To get the efficient frontier, the connections of all efficient portfolios,
    we have the following code:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得有效前沿，即所有有效投资组合的连接，我们使用以下代码：
- en: '[PRE23]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In this code, we first load the R package called `fPotfolio`. Then, `data(GCCINDEX.RET)`
    loads the dataset. The related plot is shown here:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们首先加载名为`fPotfolio`的R包。然后，`data(GCCINDEX.RET)`加载数据集。相关的图示如下所示：
- en: '![](img/4654aa66-3eca-4f4e-8efa-5d3c00177809.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4654aa66-3eca-4f4e-8efa-5d3c00177809.png)'
- en: 'Example #2 – optimal tax policy'
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '示例 #2 – 最优税收政策'
- en: 'Another example is the optimal taxation level in an LQ economy. Here, LQ stands
    for Linear Quadratic (model). This example is borrowed from Thomas J. Sargent
    and John Stachurski. Their webpage is at [https://lectures.quantecon.org/py/lqramsey.html](https://lectures.quantecon.org/py/lqramsey.html).
    They modify a well-known model of Robert Lucas and Nancy Stokey so that convenient
    formulas for solving linear-quadratic models can be applied to simplify the calculations.
    There are two types of player in the economy: the household and a benevolent government.
    The government finances an exogenous stream of government purchases with state-contingent
    loans and a linear tax on labor income. The household maximizes its utility function
    by choosing paths for consumption and labor, taking prices and the government''s
    tax rate and borrowing plans as given. Note that to maximize attainable utility
    for the household depends on the government''s tax and borrowing plans. The program
    would choose the best competitive equilibrium. The Python program can be downloaded
    at [https://raw.githubusercontent.com/QuantEcon/QuantEcon.lectures.code/master/lqramsey/lqramsey.py](https://raw.githubusercontent.com/QuantEcon/QuantEcon.lectures.code/master/lqramsey/lqramsey.py).
    Note that their program depends on the `quantecon` Python package, which can be
    downloaded at [https://pypi.python.org/pypi/quantecon/](https://pypi.python.org/pypi/quantecon/).'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是 LQ 经济中的最优税收水平。这里，LQ 代表线性二次（模型）。这个例子借自 Thomas J. Sargent 和 John Stachurski。他们的网页可以在
    [https://lectures.quantecon.org/py/lqramsey.html](https://lectures.quantecon.org/py/lqramsey.html)
    上找到。他们修改了 Robert Lucas 和 Nancy Stokey 的一个著名模型，使得可以应用简化计算的线性二次模型求解公式。该经济中有两类玩家：家庭和仁慈的政府。政府通过与国家条件相关的贷款和对劳动收入的线性税收来资助政府购买的外生流。家庭通过选择消费和劳动的路径来最大化其效用函数，价格和政府的税率与借贷计划是给定的。需要注意的是，为了最大化家庭可以获得的效用，依赖于政府的税收和借贷计划。该程序将选择最佳的竞争性均衡。可以在
    [https://raw.githubusercontent.com/QuantEcon/QuantEcon.lectures.code/master/lqramsey/lqramsey.py](https://raw.githubusercontent.com/QuantEcon/QuantEcon.lectures.code/master/lqramsey/lqramsey.py)
    下载该 Python 程序。注意，该程序依赖于 `quantecon` Python 包，可以在 [https://pypi.python.org/pypi/quantecon/](https://pypi.python.org/pypi/quantecon/)
    下载。
- en: 'After activating several subroutines, then we can run the following main Python
    program. The related output is shown after the code:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 启动几个子程序后，我们可以运行以下主要的 Python 程序。相关的输出在代码之后显示：
- en: '[PRE24]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![](img/4aab533c-55db-4a03-be8b-9156e24a9f93.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4aab533c-55db-4a03-be8b-9156e24a9f93.png)'
- en: Packages for optimization in R
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于优化的 R 包
- en: 'There are many R packages available for various types of optimization, such
    as `optimization`, `MlBayesOpt`, `rgenoud`, `colf`, and `mize`. The following
    table offers a partial list:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多可用于各种类型优化的 R 包，例如 `optimization`、`MlBayesOpt`、`rgenoud`、`colf` 和 `mize`。以下表格列出了部分包：
- en: '| **#** | **Name** | **Description** |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| **#** | **名称** | **描述** |'
- en: '| 1 | `[dtwclust](https://cran.case.edu/web/packages/dtwclust/index.html)`
    | Time Series Clustering Along with Optimizations for the Dynamic Time Warping
    Distance |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| 1 | `[dtwclust](https://cran.case.edu/web/packages/dtwclust/index.html)`
    | 时间序列聚类及动态时间规整距离的优化 |'
- en: '| 2 | `CVXR` | Disciplined Convex Optimization |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| 2 | `CVXR` | 严谨的凸优化 |'
- en: '| 3 | `IROmiss` | Imputation Regularized Optimization Algorithm |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| 3 | `IROmiss` | 插补正则化优化算法 |'
- en: '| 4 | `subplex` | Unconstrained Optimization using the Subplex Algorithm |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| 4 | `subplex` | 使用 Subplex 算法的无约束优化 |'
- en: '| 5 | `GPareto` | Gaussian Processes for Pareto Front Estimation and Optimization
    |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| 5 | `GPareto` | 用于帕累托前沿估计和优化的高斯过程 |'
- en: '| 6 | `OOR` | Optimistic Optimization in R |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| 6 | `OOR` | R 中的乐观优化 |'
- en: '| 7 | `ROI` | R Optimization Infrastructure |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| 7 | `ROI` | R 优化基础设施 |'
- en: '| 8 | `lbreg` | Log-Binomial Regression with Constrained Optimization |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| 8 | `lbreg` | 具有约束优化的对数-二项回归 |'
- en: '| 9 | `PEIP` | Geophysical Inverse Theory and Optimization |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| 9 | `PEIP` | 地球物理反演理论与优化 |'
- en: '| 10 | `dfoptim` | Derivative-Free Optimization |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| 10 | `dfoptim` | 无导数优化 |'
- en: '| 11 | `SPOT` | Sequential Parameter Optimization Toolbox |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| 11 | `SPOT` | 顺序参数优化工具箱 |'
- en: A partial list of R packages for optimization
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: R 优化包的部分列表
- en: 'In addition, we can check the task view related to optimization. To do this,
    follow these steps:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还可以查看与优化相关的任务视图。为此，请按照以下步骤操作：
- en: Go to the R home page at [https://r-project.org](https://r-project.org)
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 R 官网 [https://r-project.org](https://r-project.org)
- en: Click Download under CRAN
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 CRAN 下的下载
- en: Choose a mirror location close to your location
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个靠近你位置的镜像站点
- en: Click Task View on the left-hand side
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧的任务视图
- en: 'Click Optimization on the list, see the top part here:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击列表中的优化部分，查看上面部分内容：
- en: '![](img/90adfb3b-750d-44ea-b1c3-145992e24a56.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90adfb3b-750d-44ea-b1c3-145992e24a56.png)'
- en: 'There are over 100 R packages included in the preceding task view. To install
    all at once, we can issue the following commands:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的任务视图中包含了100多个R包。要一次性安装所有包，我们可以执行以下命令：
- en: '[PRE25]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Packages for optimization in Python
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python中的优化包
- en: 'From [Chapter 6](c812a40e-eb24-4bb8-8af5-1cfe1834ec77.xhtml), *Managing Packages*,
    we know that to find all Python packages, we go to the website at [https://pypi.python.org/](https://pypi.python.org/).
    The following table shows a list of Python packages/models related to optimization
    after we type `Optimization` as the keyword:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 从[第六章](c812a40e-eb24-4bb8-8af5-1cfe1834ec77.xhtml)，*管理包*中，我们了解到，要查找所有Python包，可以访问网站[https://pypi.python.org/](https://pypi.python.org/)。以下表格展示了我们输入`Optimization`作为关键词后，相关的Python包/模型列表：
- en: '| **Package** | **Wt*** | **Description** |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| **包** | **Wt*** | **描述** |'
- en: '| `heuristic-optimization 0.4.3` | 7 | Heuristics for derivative-free optimization
    |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| `heuristic-optimization 0.4.3` | 7 | 无导数优化的启发式方法 |'
- en: '| `streams-optimization 1.0.0.dev3` | 7 | A library for LHCb trigger/stripping
    streams optimization |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| `streams-optimization 1.0.0.dev3` | 7 | LHCb触发器/剥离流优化库 |'
- en: '| `adjointShapeOptimizationFlux 1.0` | 6 | Python frontend of the `adjointShapeOptimizationFoam`
    |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| `adjointShapeOptimizationFlux 1.0` | 6 | `adjointShapeOptimizationFoam`的Python前端
    |'
- en: '| `bayesian-optimization 0.6.0` | 6 | Bayesian Optimization package |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| `bayesian-optimization 0.6.0` | 6 | 贝叶斯优化包 |'
- en: '| `emzed_optimizations 0.6.0` | 6 | particular optimizations for speeding up
    `emzed` |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| `emzed_optimizations 0.6.0` | 6 | 用于加速`emzed`的特定优化 |'
- en: '| `scikits.optimization 0.3` | 6 | A python module for numerical optimization
    |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| `scikits.optimization 0.3` | 6 | 用于数值优化的Python模块 |'
- en: '| `asprin 3.0.2` | 5 | Qualitative and quantitative optimization in answer
    set programming |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| `asprin 3.0.2` | 5 | 回答集编程中的定性和定量优化 |'
- en: '| `bolib 0.19.11` | 5 | Python library for Bayesian Optimization |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| `bolib 0.19.11` | 5 | 贝叶斯优化的Python库 |'
- en: '| `brent-search 1.0.32` | 5 | Brent''s method for univariate function optimization
    |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| `brent-search 1.0.32` | 5 | 布伦特法用于单变量函数优化 |'
- en: '| `clientMOE 0.1` | 5 | Metric Optimization Engine |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| `clientMOE 0.1` | 5 | 度量优化引擎 |'
- en: '| `cma 2.5.3` | 5 | CMA-ES, Covariance Matrix Adaptation Evolution Strategy
    for nonlinear numerical optimization in Python |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| `cma 2.5.3` | 5 | CMA-ES，协方差矩阵适应进化策略，用于Python中的非线性数值优化 |'
- en: '| `coopr.opt 2.12.2` | 5 | Coopr generic optimization interfaces |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `coopr.opt 2.12.2` | 5 | Coopr通用优化接口 |'
- en: '| `coopr.os 1.0.4` | 5 | Coopr interfaces to the COIN-OR Optimization Services
    project |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| `coopr.os 1.0.4` | 5 | Coopr到COIN-OR优化服务项目的接口 |'
- en: '| `cro 0.0.5.0` | 5 | **Coral Reef Optimization** (**CRO**) Algorithm |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| `cro 0.0.5.0` | 5 | **珊瑚礁优化**（**CRO**）算法 |'
- en: '| `dfoalgos 0.5` | 5 | Derivative-free optimization algorithms |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| `dfoalgos 0.5` | 5 | 无导数优化算法 |'
- en: '| `dillinger 1.0.0.dev1` | 5 | Bayesian optimization for iterated multi-armed
    bandit experiments |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| `dillinger 1.0.0.dev1` | 5 | 用于迭代多臂赌博机实验的贝叶斯优化 |'
- en: '| `downhill 0.4.0` | 5 | Stochastic optimization routines for Theano |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `downhill 0.4.0` | 5 | Theano的随机优化例程 |'
- en: '| `dy 0.0.1` | 5 | Dynamic Optimization/Dynamic Programming |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| `dy 0.0.1` | 5 | 动态优化/动态规划 |'
- en: '| `fst-pso 1.3.2` | 5 | Fuzzy Self-Tuning PSO global optimization library |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| `fst-pso 1.3.2` | 5 | 模糊自调节PSO全局优化库 |'
- en: A partial list of the Python packages for optimization
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Python优化包的部分列表
- en: Packages for optimization in Octave
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Octave中的优化包
- en: 'To find packages for optimization in Octave, we go to the web page at [https://octave.sourceforge.io/packages.php](https://octave.sourceforge.io/packages.php).
    Then, we can search these packages by using the keyword `optimization`; see the
    first package called `ga` in this screenshot:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找Octave中的优化包，我们可以访问网页[https://octave.sourceforge.io/packages.php](https://octave.sourceforge.io/packages.php)。然后，我们可以使用关键词`optimization`搜索这些包；在此截图中可以看到名为`ga`的第一个包：
- en: '![](img/e26734a7-2c84-47e4-b9ea-f37ac24b4d6c.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e26734a7-2c84-47e4-b9ea-f37ac24b4d6c.png)'
- en: 'The second one is the `optim` package:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个是`optim`包：
- en: '![](img/e3331836-c3a7-40fb-b136-93a2233e6814.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3331836-c3a7-40fb-b136-93a2233e6814.png)'
- en: Packages for optimization in Julia
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Julia中的优化包
- en: 'Similarly, for packages for optimization in Julia, we go to the web page at
    [https://pkg.julialang.org/](https://pkg.julialang.org/). Then, we can search
    these packages by using the keyword `optimization`; see one package called `JuMP`
    in this screenshot:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，对于Julia中的优化包，我们可以访问网页[https://pkg.julialang.org/](https://pkg.julialang.org/)。然后，我们可以使用关键词`optimization`搜索这些包；在此截图中可以看到名为`JuMP`的包：
- en: '![](img/d7c3ada2-6fa5-4f5d-af42-5ea60d62f445.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7c3ada2-6fa5-4f5d-af42-5ea60d62f445.png)'
- en: There are about 45 matches for the keyword `optimization`. To save space, we
    won't show the other packages. This web page, titled *Optimization packages for
    Julia language,* might be quite useful: [http://www.juliaopt.org/](http://www.juliaopt.org/).
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 关键字`optimization`大约有45个匹配项。为了节省空间，我们不展示其他包。这个网页，标题为*Julia语言的优化包*，可能会非常有用：[http://www.juliaopt.org/](http://www.juliaopt.org/)。
- en: Summary
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have discussed several topics around optimization, such
    as general issues for optimization problems, expressing various kinds of optimization
    problems as LPPs, and quadratic optimization. Several examples were offered to
    make our discussion more practice-oriented, such as how to choose an optimal stock
    portfolio, optimize wealth and resources to promote sustainable development, and
    how much the government really should tax. In addition, we introduced several
    packages for optimization in R, Python, Julia, and Octave.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了与优化相关的几个主题，例如优化问题的常见问题、如何将各种类型的优化问题表示为线性规划问题（LPP）、以及二次优化。我们提供了几个示例，使讨论更具实践性，例如如何选择一个最佳的股票组合，如何优化财富和资源以促进可持续发展，政府应该征收多少税。此外，我们介绍了R、Python、Julia和Octave中的多个优化包。
- en: In the next chapter, we will discuss unsupervised learning. In particular, we
    will explain hierarchical clustering and k-means clustering. For R and Python,
    we will explain in detail several related packages. For R, we will discuss `Rattle`, `randomUniformForest`,
    and `Rmixmod`. For Python, we will cover `SciPy`, `Contrastive`, `milk`, `Scikit-learn`,
    and `skleam`. Several real-world examples will be used to illustrate the application
    of these R and Python packages.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论无监督学习。特别是，我们将解释层次聚类和k均值聚类。对于R和Python，我们将详细解释几个相关的包。对于R，我们将讨论`Rattle`、`randomUniformForest`和`Rmixmod`。对于Python，我们将涉及`SciPy`、`Contrastive`、`milk`、`Scikit-learn`和`sklearn`。我们将通过几个实际的例子来展示这些R和Python包的应用。
- en: Review questions and exercises
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复习问题与练习
- en: What does optimization mean?
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优化是什么意思？
- en: What is an LPP? What are its uses?
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是LPP？它的用途是什么？
- en: What is the difference between a global solution and a local solution?
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 全局解与局部解有什么区别？
- en: In what situations would our LPP program not converge? Give a few simple examples
    and possible solutions.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在什么情况下，我们的LPP程序不会收敛？举几个简单的例子，并提供可能的解决方案。
- en: 'Explain why we have the following weird result:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释为何我们得到以下奇怪的结果：
- en: '[PRE26]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: What does quadratic equation mean?
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是二次方程？
- en: From where could we search all the R packages targeting optimization issues?
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以从哪里查找所有针对优化问题的R包？
- en: What is the usage of the task view related to optimization?
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与优化相关的任务视图的用途是什么？
- en: According to the related task view, how many R packages are associated with
    optimization, and how do we install them all at once?
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据相关任务视图，有多少个R包与优化相关，我们如何一次性安装它们？
- en: 'From the Prof. French Data Library, download the return data for 10 industries.
    Then, choose an optimal portfolio by applying the following utility function for
    five types of investors with A=1, 3, 5,20, and 100:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Prof. French数据库下载10个行业的收益数据。然后，使用以下效用函数为A=1、3、5、20和100的五类投资者选择一个最佳投资组合：
- en: '![](img/bf669c71-5677-4e7f-89fb-ff52a0964fa7.png)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf669c71-5677-4e7f-89fb-ff52a0964fa7.png)'
- en: Where *U* is the utility function, *E()* is the expectation function, *R[p]*
    is the portfolio return, *A* is a parameter representing risk preference, and
    ![](img/53ff0cc8-7c98-42b5-99c5-2945276e2d01.png) is the portfolio variance. Note
    the source of data is at [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html).
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*U*是效用函数，*E()*是期望函数，*R[p]*是投资组合收益，*A*是表示风险偏好的参数，且![](img/53ff0cc8-7c98-42b5-99c5-2945276e2d01.png)是投资组合的方差。请注意数据来源：[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)。
- en: 'For Octave, find two examples of using the `leasqr` (least square) function.
    You can use the following code to get information about this function:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Octave，找到两个使用`leasqr`（最小二乘）函数的示例。你可以使用以下代码获取该函数的相关信息：
- en: '[PRE27]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How many functions could we find for the Octave package called `optim`?
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以找到多少个与Octave包`optim`相关的函数？
- en: For Octave, download a package called `ga`. Find out the uses of several functions
    included in the package.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Octave，下载一个名为`ga`的包。了解包中包含的几个函数的用途。
- en: 'How many R packages are installed after you issue the following three lines:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你运行以下三行代码后，安装了多少个 R 包：
- en: '[PRE28]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Install a Julia package called `JuMP` and find a few examples its embedded functions.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装一个名为 `JuMP` 的 Julia 包，并查找一些它的嵌入式函数示例。
