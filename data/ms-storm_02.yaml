- en: Storm Deployment, Topology Development, and Topology Options
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Storm部署、拓扑开发和拓扑选项
- en: In this chapter, we are going to start with deployment of Storm on multiple
    node (three Storm and three ZooKeeper) clusters. This chapter is very important
    because it focuses on how we can set up the production Storm cluster and why we
    need the high availability of both the Storm Supervisor, Nimbus, and ZooKeeper
    (as Storm uses ZooKeeper for storing the metadata of the cluster, topology, and
    so on)?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们将从在多个节点（三个Storm和三个ZooKeeper）集群上部署Storm开始。这一章非常重要，因为它关注了我们如何设置生产Storm集群以及为什么我们需要Storm
    Supervisor、Nimbus和ZooKeeper的高可用性（因为Storm使用ZooKeeper来存储集群、拓扑等元数据）。
- en: 'The following are the key points that we are going to cover in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本章将要涵盖的关键点：
- en: Deployment of the Storm cluster
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Storm集群的部署
- en: Program and deploy the word count example
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序和部署词频统计示例
- en: Different options of the Storm UI--kill, active, inactive, and rebalance
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Storm UI的不同选项——kill、active、inactive和rebalance
- en: Walkthrough of the Storm UI
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Storm UI的演练
- en: Dynamic log level settings
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态日志级别设置
- en: Validating the Nimbus high availability
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证Nimbus的高可用性
- en: Storm prerequisites
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Storm的先决条件
- en: You should have the Java JDK and ZooKeeper ensemble installed before starting
    the deployment of the Storm cluster.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始部署Storm集群之前，您应该安装Java JDK和ZooKeeper集群。
- en: Installing Java SDK 7
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Java SDK 7
- en: 'Perform the following steps to install the Java SDK 7 on your machine. You
    can also go with JDK 1.8:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤在您的机器上安装Java SDK 7。您也可以选择JDK 1.8：
- en: Download the Java SDK 7 RPM from Oracle's site ([http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)).
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Oracle网站（[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）下载Java
    SDK 7 RPM。
- en: 'Install the Java `jdk-7u<version>-linux-x64.rpm` file on your CentOS machine
    using the following command:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在您的CentOS机器上安装Java `jdk-7u<version>-linux-x64.rpm`文件：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add the following environment variable in the `~/.bashrc` file:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`~/.bashrc`文件中添加以下环境变量：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add the path of the `bin` directory of the JDK to the `PATH` system environment
    variable to the `~/.bashrc` file:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将JDK的`bin`目录的路径添加到`PATH`系统环境变量中，添加到`~/.bashrc`文件中：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Run the following command to reload the `bashrc` file on the current login
    terminal:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令在当前登录终端重新加载`bashrc`文件：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Check the Java installation as follows:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查Java安装如下：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output of the preceding command is as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下：
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Deployment of the ZooKeeper cluster
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ZooKeeper集群的部署
- en: 'In any distributed application, various processes need to coordinate with each
    other and share configuration information. ZooKeeper is an application that provides
    all these services in a reliable manner. Being a distributed application, Storm
    also uses a ZooKeeper cluster to coordinate various processes. All of the states
    associated with the cluster and the various tasks submitted to Storm are stored
    in ZooKeeper. This section describes how you can set up a ZooKeeper cluster. We
    will be deploying a ZooKeeper ensemble of three nodes that will handle one node
    failure. Following is the deployment diagram of the three node ZooKeeper ensemble:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何分布式应用程序中，各种进程需要相互协调并共享配置信息。ZooKeeper是一个应用程序，以可靠的方式提供所有这些服务。作为一个分布式应用程序，Storm也使用ZooKeeper集群来协调各种进程。与集群相关的所有状态和提交给Storm的各种任务都存储在ZooKeeper中。本节描述了如何设置ZooKeeper集群。我们将部署一个由三个节点组成的ZooKeeper集群，可以处理一个节点故障。以下是三个节点ZooKeeper集群的部署图：
- en: '![](img/00007.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00007.jpeg)'
- en: In the ZooKeeper ensemble, one node in the cluster acts as the leader, while
    the rest are followers. If the leader node of the ZooKeeper cluster dies, then
    an election for the new leader takes places among the remaining live nodes, and
    a new leader is elected. All write requests coming from clients are forwarded
    to the leader node, while the follower nodes only handle the read requests. Also,
    we can't increase the write performance of the ZooKeeper ensemble by increasing
    the number of nodes because all write operations go through the leader node.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在ZooKeeper集群中，集群中的一个节点充当领导者，而其余的节点充当跟随者。如果ZooKeeper集群的领导者节点死亡，那么在剩余的活动节点中进行新的领导者选举，并选举出一个新的领导者。来自客户端的所有写请求都会被转发到领导者节点，而跟随者节点只处理读请求。此外，我们无法通过增加节点数量来增加ZooKeeper集合的写性能，因为所有写操作都经过领导者节点。
- en: It is advised to run an odd number of ZooKeeper nodes, as the ZooKeeper cluster
    keeps working as long as the majority (the number of live nodes is greater than
    *n/2*, where *n* being the number of deployed nodes) of the nodes are running.
    So if we have a cluster of four ZooKeeper nodes (*3 > 4/2*; only one node can
    die), then we can handle only one node failure, while if we had five nodes (*3
    > 5/2*; two nodes can die) in the cluster, then we can handle two node failures.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 建议运行奇数个ZooKeeper节点，因为只要大多数节点（活动节点数大于*n/2*，其中*n*为部署节点数）在运行，ZooKeeper集群就会继续工作。因此，如果我们有一个由四个ZooKeeper节点组成的集群（*3
    > 4/2*；只能有一个节点死亡），那么我们只能处理一个节点故障，而如果我们在集群中有五个节点（*3 > 5/2*；可以处理两个节点故障），那么我们可以处理两个节点故障。
- en: 'Steps 1 to 4 need to be performed on each node to deploy the ZooKeeper ensemble:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤1到4需要在每个节点上执行以部署ZooKeeper集群：
- en: Download the latest stable ZooKeeper release from the ZooKeeper site ([http://zookeeper.apache.org/releases.html](http://zookeeper.apache.org/releases.html)).
    At the time of writing, the latest version is ZooKeeper 3.4.6.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从ZooKeeper网站（[http://zookeeper.apache.org/releases.html](http://zookeeper.apache.org/releases.html)）下载最新的稳定ZooKeeper版本。在撰写本文时，最新版本是ZooKeeper
    3.4.6。
- en: Once you have downloaded the latest version, unzip it. Now, we set up the `ZK_HOME`
    environment variable to make the setup easier.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你下载了最新版本，解压它。现在，我们设置`ZK_HOME`环境变量以使设置更容易。
- en: 'Point the `ZK_HOME` environment variable to the unzipped directory. Create
    the configuration file, `zoo.cfg`, at the `$ZK_HOME/conf` directory using the
    following commands:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`ZK_HOME`环境变量指向解压后的目录。使用以下命令在`$ZK_HOME/conf`目录中创建配置文件`zoo.cfg`：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Add the following properties to the `zoo.cfg` file:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下属性添加到`zoo.cfg`文件中：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, `zoo1`, `zoo2`, and `zoo3` are the IP addresses of the ZooKeeper nodes.
    The following are the definitions for each of the properties:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`zoo1`、`zoo2`和`zoo3`是ZooKeeper节点的IP地址。以下是每个属性的定义：
- en: '`tickTime`: This is the basic unit of time in milliseconds used by ZooKeeper.
    It is used to send heartbeats, and the minimum session timeout will be twice the
    `tickTime` value.'
  id: totrans-39
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tickTime`：这是ZooKeeper中以毫秒为单位使用的基本时间单位。它用于发送心跳，最小会话超时将是`tickTime`值的两倍。'
- en: '`dataDir`: This is the directory to store the in-memory database snapshots
    and transactional log.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dataDir`：这是用于存储内存数据库快照和事务日志的目录。'
- en: '`clientPort`: This is the port used to listen to client connections.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clientPort`：这是用于监听客户端连接的端口。'
- en: '`initLimit`: This is the number of `tickTime` values needed to allow followers
    to connect and sync to a leader node.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`initLimit`：这是允许跟随者连接和同步到领导者节点所需的`tickTime`值的数量。'
- en: '`syncLimit`: This is the number of `tickTime` values that a follower can take
    to sync with the leader node. If the sync does not happen within this time, the
    follower will be dropped from the ensemble.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`syncLimit`：这是一个跟随者可以用来与领导者节点同步的`tickTime`值的数量。如果同步在此时间内未发生，跟随者将从集合中删除。'
- en: The last three lines of the `server.id=host:port:port` format specify that there
    are three nodes in the ensemble. In an ensemble, each ZooKeeper node must have
    a unique ID number between 1 and 255\. This ID is defined by creating a file named
    `myid` in the `dataDir` directory of each node. For example, the node with the
    ID 1 (`server.1=zoo1:2888:3888`) will have a `myid` file at directory `/var/zookeeper`
    with `text 1` inside it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`server.id=host:port:port`格式的最后三行指定了集群中有三个节点。在集合中，每个ZooKeeper节点必须具有1到255之间的唯一ID号。通过在每个节点的`dataDir`目录中创建名为`myid`的文件来定义此ID。例如，ID为1的节点（`server.1=zoo1:2888:3888`）将在目录`/var/zookeeper`中具有一个`myid`文件，其中包含`1`。'
- en: 'For this cluster, create the `myid` file at three locations, shown as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此集群，在三个位置创建`myid`文件，如下所示：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Run the following command on each machine to start the ZooKeeper cluster:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每台机器上运行以下命令以启动ZooKeeper集群：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Check the status of the ZooKeeper nodes by performing the following steps:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行以下步骤检查ZooKeeper节点的状态：
- en: 'Run the following command on the `zoo1` node to check the first node''s status:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`zoo1`节点上运行以下命令以检查第一个节点的状态：
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following information is displayed:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下信息显示：
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The first node is running in `follower` mode.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个节点以`follower`模式运行。
- en: 'Check the status of the second node by performing the following command:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令检查第二个节点的状态：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following information is displayed:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下信息显示：
- en: '[PRE13]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The second node is running in `leader` mode.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个节点以`leader`模式运行。
- en: 'Check the status of the third node by performing the following command:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令检查第三个节点的状态：
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following information is displayed:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下信息显示：
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The third node is running in `follower` mode.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个节点以`follower`模式运行。
- en: 'Run the following command on the leader machine to stop the leader node:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在领导者机器上运行以下命令以停止领导者节点：
- en: '[PRE16]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, check the status of the remaining two nodes by performing the following
    steps:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过执行以下步骤检查剩余两个节点的状态：
- en: 'Check the status of the first node using the following command:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查第一个节点的状态：
- en: '[PRE17]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following information is displayed:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下信息显示：
- en: '[PRE18]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The first node is again running in `follower` mode.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个节点再次以`follower`模式运行。
- en: 'Check the status of the second node using the following command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查第二个节点的状态：
- en: '[PRE19]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The following information is displayed:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下信息显示：
- en: '[PRE20]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The third node is elected as the new leader.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个节点被选举为新的领导者。
- en: 'Now, restart the third node with the following command:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用以下命令重新启动第三个节点：
- en: '[PRE21]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This was a quick introduction to setting up ZooKeeper that can be used for development;
    however, it is not suitable for production. For a complete reference on ZooKeeper
    administration and maintenance, please refer to the online documentation at the
    ZooKeeper site at [http://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html](http://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个快速介绍，介绍了如何设置ZooKeeper，可用于开发；但是，不适合生产。有关ZooKeeper管理和维护的完整参考，请参阅ZooKeeper网站上的在线文档[http://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html](http://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html)。
- en: Setting up the Storm cluster
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Storm集群
- en: In this chapter, we will learn how to set up a three nodes Storm cluster, of
    which one node will be the active master node (Nimbus) and the other two will
    be worker nodes (supervisors).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何设置一个三节点Storm集群，其中一个节点将是活动的主节点（Nimbus），另外两个将是工作节点（supervisors）。
- en: 'The following is the deployment diagram of our three node Storm cluster:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们三个节点Storm集群的部署图：
- en: '![](img/00008.gif)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00008.gif)'
- en: 'The following are the steps that need to be performed to set up a three node
    Storm cluster:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是设置三节点Storm集群所需执行的步骤：
- en: Install and run the ZooKeeper cluster. The steps for installing ZooKeeper are
    mentioned in the previous section.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装并运行ZooKeeper集群。有关安装ZooKeeper的步骤在前一节中提到。
- en: Download the latest stable Storm release from [https://storm.apache.org/downloads.html](https://storm.apache.org/downloads.html);
    at the time of writing, the latest version is Storm 1.0.2.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://storm.apache.org/downloads.html](https://storm.apache.org/downloads.html)下载最新稳定的Storm版本；在撰写本文时，最新版本是Storm
    1.0.2。
- en: Once you have downloaded the latest version, copy and unzip it in all three
    machines. Now, we will set the `$STORM_HOME` environment variable on each machine
    to make the setup easier. The `$STORM_HOME` environment contains the path of the
    Storm `home` folder (for example, export `STORM_HOME=/home/user/storm-1.0.2`).
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你下载了最新版本，在所有三台机器上复制并解压。现在，我们将在每台机器上设置`$STORM_HOME`环境变量，以便更轻松地进行设置。`$STORM_HOME`环境变量包含Storm
    `home`文件夹的路径（例如，导出`STORM_HOME=/home/user/storm-1.0.2`）。
- en: 'Go to the `$STORM_HOME/conf` directory in the master nodes and add the following
    lines to the `storm.yaml` file:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主节点的`$STORM_HOME/conf`目录中，向`storm.yaml`文件添加以下行：
- en: '[PRE22]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: We are installing two master nodes.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在安装两个主节点。
- en: 'Go to the `$STORM_HOME/conf` directory at each worker node and add the following
    lines to the `storm.yaml` file:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每个工作节点的`$STORM_HOME/conf`目录中，向`storm.yaml`文件添加以下行：
- en: '[PRE23]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If you are planning to execute the Nimbus and supervisor on the same machine,
    then add the `supervisor.slots.ports` property to the Nimbus machine too.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你计划在同一台机器上执行Nimbus和supervisor，则也在Nimbus机器上添加`supervisor.slots.ports`属性。
- en: 'Go to the `$STORM_HOME` directory at the master nodes and execute the following
    command to start the master daemon:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主节点的`$STORM_HOME`目录中执行以下命令来启动主守护进程：
- en: '[PRE24]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Go to the `$STORM_HOME` directory at each worker node (or supervisor node)
    and execute the following command to start the worker daemons:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每个工作节点（或supervisor节点）的`$STORM_HOME`目录中执行以下命令来启动工作守护进程：
- en: '[PRE25]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Developing the hello world example
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发hello world示例
- en: Before starting the development, you should have Eclipse and Maven installed
    in your project. The sample topology explained here will cover how to create a
    basic Storm project, including a spout and bolt, and how to build, and execute
    them.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始开发之前，你应该在你的项目中安装Eclipse和Maven。这里解释的样本拓扑将涵盖如何创建一个基本的Storm项目，包括一个spout和bolt，以及如何构建和执行它们。
- en: Create a Maven project by using `com.stormadvance` as `groupId` and `storm-example`
    as `artifactId`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`com.stormadvance`作为`groupId`和`storm-example`作为`artifactId`创建一个Maven项目。
- en: 'Add the following Maven dependencies to the `pom.xml` file:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pom.xml`文件中添加以下Maven依赖项：
- en: '[PRE26]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Make sure the scope of the Storm dependency is provided, otherwise you will
    not be able to deploy the topology on the Storm cluster.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Storm依赖的范围是提供的，否则你将无法在Storm集群上部署拓扑。
- en: 'Add the following Maven `build` plugins in the `pom.xml` file:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pom.xml`文件中添加以下Maven `build`插件：
- en: '[PRE27]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Write your first sample spout by creating a `SampleSpout` class in the `com.stormadvance.storm_example`
    package. The `SampleSpout` class extends the serialized `BaseRichSpout` class.
    This spout does not connect to an external source to fetch data, but randomly
    generates the data and emits a continuous stream of records. The following is
    the source code of the `SampleSpout` class with an explanation:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在`com.stormadvance.storm_example`包中创建`SampleSpout`类来编写你的第一个样本spout。`SampleSpout`类扩展了序列化的`BaseRichSpout`类。这个spout不连接到外部源来获取数据，而是随机生成数据并发出连续的记录流。以下是`SampleSpout`类的源代码及其解释：
- en: '[PRE28]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Write your first sample bolt by creating a `SampleBolt` class within the same
    package. The `SampleBolt` class extends the serialized `BaseRichBolt` class. This
    bolt will consume the tuples emitted by the `SampleSpout` spout and will print
    the value of the field `site` on the console. The following is the source code
    of the `SampleStormBolt` class with an explanation:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在同一包中创建`SampleBolt`类来编写你的第一个样本bolt。`SampleBolt`类扩展了序列化的`BaseRichBolt`类。这个bolt将消耗`SampleSpout`
    spout发出的元组，并在控制台上打印`site`字段的值。以下是`SampleStormBolt`类的源代码及其解释：
- en: '[PRE29]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Create a main `SampleStormTopology` class within the same package. This class
    creates an instance of the spout and bolt along with the classes, and chaines
    them together using a `TopologyBuilder` class. This class uses `org.apache.storm.LocalCluster`
    to simulate the Storm cluster. The `LocalCluster` mode is used for debugging/testing
    the topology on a developer machine before deploying it on the Storm cluster.
    The following is the implementation of the main class:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一包中创建一个主`SampleStormTopology`类。这个类创建了一个spout和bolt的实例以及类，并使用`TopologyBuilder`类将它们链接在一起。这个类使用`org.apache.storm.LocalCluster`来模拟Storm集群。`LocalCluster`模式用于在部署到Storm集群之前在开发者机器上进行调试/测试拓扑。以下是主类的实现：
- en: '[PRE30]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Go to your project''s home directory and run the following commands to execute
    the topology in local mode:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 转到你的项目主目录，并运行以下命令以在本地模式下执行拓扑：
- en: '[PRE31]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now create a new topology class for deploying the topology on an actual Storm
    cluster. Create a main `SampleStormClusterTopology` class within the same package.
    This class also creates an instance of the spout and bolt along with the classes,
    and chains them together using a `TopologyBuilder` class:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在为在实际Storm集群上部署拓扑创建一个新的拓扑类。在同一包中创建一个主`SampleStormClusterTopology`类。这个类还创建了一个spout和bolt的实例以及类，并使用`TopologyBuilder`类将它们链接在一起。
- en: '[PRE32]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Build your Maven project by running the following command on the projects home
    directory:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在项目的主目录上运行以下命令来构建你的Maven项目：
- en: '[PRE33]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The output of the preceding command is as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下：
- en: '[PRE34]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'We can deploy the topology to the cluster using the following Storm client
    command:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下Storm客户端命令将拓扑部署到集群：
- en: '[PRE35]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The preceding command runs `TopologyMainClass` with the arguments `arg1` and
    `arg2`. The main function of `TopologyMainClass` is to define the topology and
    submit it to the Nimbus machine. The `storm jar` part takes care of connecting
    to the Nimbus machine and uploading the JAR part.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令使用参数`arg1`和`arg2`运行`TopologyMainClass`。`TopologyMainClass`的主要功能是定义拓扑并将其提交到Nimbus机器。`storm
    jar`部分负责连接到Nimbus机器并上传JAR部分。
- en: 'Log in on a Storm Nimbus machine and execute the following commands:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到Storm Nimbus机器并执行以下命令：
- en: '[PRE36]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In the preceding code `~/storm_example-0.0.1-SNAPSHOT-jar-with-dependencies.jar`
    is the path of the `SampleStormClusterTopology` JAR that we are deploying on the
    Storm cluster.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，`~/storm_example-0.0.1-SNAPSHOT-jar-with-dependencies.jar`是我们在Storm集群上部署的`SampleStormClusterTopology`
    JAR的路径。
- en: 'The following information is displayed:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 显示以下信息：
- en: '[PRE37]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Run the `jps` command to see the number of running JVM processes as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`jps`命令，查看运行的JVM进程数量如下：
- en: '[PRE38]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The preceding command''s output is:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 前面命令的输出是：
- en: '[PRE39]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: In the preceding code, a `worker` is the JVM launched for the `SampleStormClusterTopology`
    topology.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，`worker`是为`SampleStormClusterTopology`拓扑启动的JVM。
- en: The different options of the Storm topology
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Storm拓扑的不同选项
- en: 'This section covers the following operations that a user can perform on the Storm
    cluster:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分涵盖了用户可以在Storm集群上执行的以下操作：
- en: Deactivate
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停用
- en: Activate
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 激活
- en: Rebalance
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新平衡
- en: Kill
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杀死
- en: Dynamic log level settings
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态日志级别设置
- en: Deactivate
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停用
- en: 'Storm supports the deactivating a topology. In the deactivated state, spouts
    will not emit any new tuples into the pipeline, but the processing of the already
    emitted tuples will continue. The following is the command to deactivate the running
    topology:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Storm支持停用拓扑。在停用状态下，spout不会向管道中发射任何新的元组，但已经发射的元组的处理将继续。以下是停用运行中拓扑的命令：
- en: '[PRE40]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Deactivate `SampleStormClusterTopology` using the following command:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令停用`SampleStormClusterTopology`：
- en: '[PRE41]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The following information is displayed:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 显示以下信息：
- en: '[PRE42]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Activate
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 激活
- en: 'Storm also the supports activating a topology. When a topology is activated,
    spouts will again start emitting tuples. The following is the command to activate
    the topology:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Storm还支持激活拓扑。当拓扑被激活时，spout将重新开始发射元组。以下是激活拓扑的命令：
- en: '[PRE43]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Activate `SampleStormClusterTopology` using the following command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令激活`SampleStormClusterTopology`：
- en: '[PRE44]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The following information is displayed:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 显示以下信息：
- en: '[PRE45]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Rebalance
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新平衡
- en: The process of updating a the topology parallelism at the runtime is called
    a **rebalance**. A more detailed information of this operation acn be in [Chapter
    3](part0056.html#1LCVG0-6149dd15e07b443593cc93f2eb31ee7b), *Storm Parallelism
    and Data Partitioning*.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行时更新拓扑并行度的过程称为**重新平衡**。有关此操作的更详细信息可以在[第3章](part0056.html#1LCVG0-6149dd15e07b443593cc93f2eb31ee7b)中找到，*Storm并行性和数据分区*。
- en: Kill
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 杀死
- en: 'Storm topologies are never-ending processes. To stop a topology, we need to
    kill it. When killed, the topology first enters into the deactivation state, processes
    all the tuples already emitted into it, and then stops. Run the following command
    to kill `SampleStormClusterTopology`:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: Storm拓扑是永无止境的进程。要停止一个拓扑，我们需要杀死它。被杀死后，拓扑首先进入停用状态，处理已经发射到其中的所有元组，然后停止。运行以下命令杀死`SampleStormClusterTopology`：
- en: '[PRE46]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The following information is displayed:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 显示以下信息：
- en: '[PRE47]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, run the `jps` command again to see the remaining JVM processes as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，再次运行`jps`命令，查看剩余的JVM进程如下：
- en: '[PRE48]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The preceding command''s output is:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 前面命令的输出是：
- en: '[PRE49]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Dynamic log level settings
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态日志级别设置
- en: This allows the user to change the log level of topology on runtime without
    stopping the topology. The detailed information of this operation can be found
    at the end of this chapter.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许用户在不停止拓扑的情况下更改拓扑的日志级别。此操作的详细信息可以在本章末尾找到。
- en: Walkthrough of the Storm UI
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Storm UI的演练
- en: 'This section will show you how we can start the Storm UI daemon. However, before
    starting the Storm UI daemon, we assume that you have a running Storm cluster.
    The Storm cluster deployment steps are mentioned in the previous sections of this
    chapter. Now, go to the Storm home directory (`cd $STORM_HOME`) at the leader
    Nimbus machine and run the following command to start the Storm UI daemon:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分将向您展示如何启动Storm UI守护程序。但是，在启动Storm UI守护程序之前，我们假设您已经有一个运行中的Storm集群。Storm集群部署步骤在本章的前几节中有提到。现在，转到Storm主目录（`cd
    $STORM_HOME`）在领导Nimbus机器上，并运行以下命令启动Storm UI守护程序：
- en: '[PRE50]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: By default, the Storm UI starts on the `8080` port of the machine where it is
    started. Now, we will browse to the `http://nimbus-node:8080` page to view the
    Storm UI, where Nimbus node is the IP address or hostname of the the Nimbus machine.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Storm UI在启动的机器的`8080`端口上启动。现在，我们将浏览到`http://nimbus-node:8080`页面，查看Storm
    UI，其中Nimbus节点是Nimbus机器的IP地址或主机名。
- en: 'The following is a screenshot of the Storm home page:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Storm主页的屏幕截图：
- en: '![](img/00009.jpeg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00009.jpeg)'
- en: Cluster Summary section
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集群摘要部分
- en: This portion of the Storm UI shows the version of Storm deployed in the cluster,
    the uptime of the Nimbus nodes, number of free worker slots, number of used worker
    slots, and so on. While submitting a topology to the cluster, the user first needs
    to make sure that the value of the Free slots column should not be zero; otherwise,
    the topology doesn't get any worker for processing and will wait in the queue
    until a workers becomes free.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Storm UI的这一部分显示了在集群中部署的Storm版本、Nimbus节点的正常运行时间、空闲工作插槽数量、已使用的工作插槽数量等。在向集群提交拓扑时，用户首先需要确保空闲插槽列的值不为零；否则，拓扑将不会获得任何用于处理的工作进程，并将在队列中等待，直到有工作进程空闲为止。
- en: Nimbus Summary section
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nimbus摘要部分
- en: This portion of the Storm UI shows the number of Nimbus processes that are running
    in a Storm cluster. The section also shows the status of the Nimbus nodes. A node
    with the status `Leader` is an active master while the node with the status `Not
    a Leader` is a passive master.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Storm UI的这一部分显示了在Storm集群中运行的Nimbus进程数量。该部分还显示了Nimbus节点的状态。状态为`Leader`的节点是活动主节点，而状态为`Not
    a Leader`的节点是被动主节点。
- en: Supervisor Summary section
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监督摘要部分
- en: This portion of the Storm UI shows the list of supervisor nodes running in the
    cluster, along with their Id, Host, Uptime, Slots, and Used slots columns.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Storm UI的这一部分显示了运行在集群中的监督节点的列表，以及它们的Id、主机、正常运行时间、插槽和已使用插槽列。
- en: Nimbus Configuration section
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nimbus配置部分
- en: 'This portion of the Storm UI shows the configuration of the Nimbus node. Some
    of the important properties are:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Storm UI的此部分显示了Nimbus节点的配置。一些重要的属性是：
- en: '`supervisor.slots.ports`'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`supervisor.slots.ports`'
- en: '`storm.zookeeper.port`'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`storm.zookeeper.port`'
- en: '`storm.zookeeper.servers`'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`storm.zookeeper.servers`'
- en: '`storm.zookeeper.retry.interval`'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`storm.zookeeper.retry.interval`'
- en: '`worker.childopts`'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`worker.childopts`'
- en: '`supervisor.childopts`'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`supervisor.childopts`'
- en: 'The following is a screenshot of Nimbus Configuration:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Nimbus配置的屏幕截图：
- en: '![](img/00010.jpeg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00010.jpeg)'
- en: Topology Summary section
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拓扑摘要部分
- en: This portion of the Storm UI shows the list of topologies running in the Storm
    cluster, along with their ID, the number of workers assigned to the topology,
    the number of executors, number of tasks, uptime, and so on.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Storm UI的此部分显示了在Storm集群中运行的拓扑列表，以及它们的ID，分配给拓扑的工作进程数量，执行器数量，任务数量，正常运行时间等。
- en: 'Let''s deploy the sample topology (if it is not running already) in a remote
    Storm cluster by running the following command:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过运行以下命令在远程Storm集群中部署示例拓扑（如果尚未运行）：
- en: '[PRE51]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: We have created the `SampleStormClusterTopology` topology by defining three
    worker processes, two executors for `SampleSpout`, and four executors for `SampleBolt`.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过定义三个工作进程、两个执行器用于`SampleSpout`和四个执行器用于`SampleBolt`创建了`SampleStormClusterTopology`拓扑。
- en: After submitting `SampleStormClusterTopology` on the Storm cluster, the user
    has to refresh the Storm home page.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在Storm集群上提交`SampleStormClusterTopology`后，用户必须刷新Storm主页。
- en: The following screenshot shows that the row is added for `SampleStormClusterTopology`
    in the Topology Summary section. The topology section contains the name of the
    topology, unique ID of the topology, status of the topology, uptime, number of
    workers assigned to the topology, and so on. The possible values of the Status
    fields are `ACTIVE`, `KILLED`, and `INACTIVE`.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示在拓扑摘要部分为`SampleStormClusterTopology`添加了一行。拓扑部分包含拓扑的名称，拓扑的唯一ID，拓扑的状态，正常运行时间，分配给拓扑的工作进程数量等。状态字段的可能值为`ACTIVE`，`KILLED`和`INACTIVE`。
- en: '![](img/00011.jpeg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00011.jpeg)'
- en: 'Let''s click on `SampleStormClusterTopology` to view its detailed statistics.
    There are two screenshots for this. The first one contains the information about
    the number of workers, executors, and tasks assigned to the `SampleStormClusterTopology`
    topology:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们单击`SampleStormClusterTopology`以查看其详细统计信息。有两个屏幕截图。第一个包含有关分配给`SampleStormClusterTopology`拓扑的工作进程、执行器和任务数量的信息。
- en: '![](img/00012.jpeg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00012.jpeg)'
- en: 'The next screenshot contains information about the spouts and bolts, including
    the number of executors and tasks assigned to each spout and bolt:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个屏幕截图包含有关喷口和螺栓的信息，包括分配给每个喷口和螺栓的执行器和任务数量：
- en: '![](img/00013.jpeg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00013.jpeg)'
- en: 'The information shown in the previous screenshots is as follows:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 前面屏幕截图中显示的信息如下：
- en: 'Topology stats: This section will give information about the number of tuples
    emitted, transferred, and acknowledged, the capacity latency, and so on, within
    the windows of 10 minutes, 3 hours, 1 day, and since the start of the topology'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拓扑统计：此部分将提供有关在10分钟、3小时、1天和自拓扑启动以来的窗口内发出的元组数量、传输数量、确认数量、容量延迟等信息。
- en: 'Spouts (All time): This section shows the statistics of all the spouts running
    inside the topology'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 喷口（所有时间）：此部分显示拓扑内所有运行的喷口的统计信息
- en: 'Bolts (All time): This section shows the statistics of all the bolts running
    inside the topology'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bolts（所有时间）：此部分显示拓扑内所有运行的螺栓的统计信息
- en: 'Topology actions: This section allows us to perform activate, deactivate, rebalance,
    kill, and other operations on the topologies directly through the Storm UI:'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拓扑操作：此部分允许我们通过Storm UI直接对拓扑执行激活、停用、重平衡、杀死等操作：
- en: 'Deactivate: Click on Deactivate to deactivate the topology. Once the topology
    is deactivated, the spout stops emitting tuples and the status of the topology
    changes to INACTIVE on the Storm UI.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停用：单击停用以停用拓扑。一旦拓扑停用，喷口停止发出元组，并且在Storm UI上拓扑的状态变为INACTIVE。
- en: '![](img/00014.jpeg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00014.jpeg)'
- en: Deactivating the topology does not free the Storm resource.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 停用拓扑不会释放Storm资源。
- en: 'Activate: Click on the Activate button to activate the topology. Once the topology
    is activated, the spout again starts emitting tuples.'
  id: totrans-210
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 激活：单击激活按钮以激活拓扑。一旦拓扑被激活，喷口将再次开始发出元组。
- en: 'Kill: Click on the Kill button to destroy/kill the topology. Once the topology
    is killed, it will free all the Storm resources allotted to this topology. While
    killing the topology, the Storm will first deactivate the spouts and wait for
    the kill time mentioned on the alerts box so that the bolts have a chance to finish
    the processing of the tuples emitted by the spouts before the kill command. The
    following screenshot shows how we can kill the topology through the Storm UI:'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kill：单击Kill按钮销毁/杀死拓扑。一旦拓扑被杀死，它将释放分配给该拓扑的所有Storm资源。在杀死拓扑时，Storm将首先停用喷口，并等待警报框中提到的杀死时间，以便螺栓有机会完成喷口发出的元组的处理，然后再执行杀命令。以下屏幕截图显示了如何通过Storm
    UI杀死拓扑：
- en: '![](img/00015.jpeg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00015.jpeg)'
- en: 'Let''s go to the Storm UI''s home page to check the status of `SampleStormClusterToplogy`,
    as shown in the following screenshot:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们转到Storm UI的主页，以查看`SampleStormClusterToplogy`的状态，如下图所示：
- en: '![](img/00016.jpeg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00016.jpeg)'
- en: Dynamic log level settings
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态日志级别设置
- en: The dynamic log level allows us to change the log level setting of the topology
    on the runtime from the Storm CLI and the Storm UI.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 动态日志级别允许我们从Storm CLI和Storm UI在运行时更改拓扑的日志级别设置。
- en: Updating the log level from the Storm UI
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Storm UI更新日志级别
- en: 'Go through the following steps to update the log level from the Storm UI:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤从Storm UI更新日志级别：
- en: Deploy `SampleStormClusterTopology` again on the Storm cluster if it is not
    running.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果`SampleStormClusterTopology`没有运行，请在Storm集群上再次部署。
- en: Browse the Storm UI at `http://nimbus-node:8080/`.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览Storm UI，网址为`http://nimbus-node:8080/`。
- en: Click on the `storm_example` topology.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`storm_example`拓扑。
- en: 'Now click on the Change Log Level button to change the `ROOT` logger of the
    topology, as shown in the following are the screenshots:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击“更改日志级别”按钮来更改拓扑的`ROOT`记录器，如下面的屏幕截图所示：
- en: '![](img/00017.jpeg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00017.jpeg)'
- en: 'Configure the entries mentioned in the following screenshots change the `ROOT`
    logger to ERROR:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置以下屏幕截图中提到的条目，将`ROOT`记录器更改为ERROR：
- en: '![](img/00018.jpeg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00018.jpeg)'
- en: 'If you are planning to change the logging level to DEBUG, then you must specify
    the timeout (expiry time) for that log level, as shown in the following screenshots:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您计划将日志级别更改为DEBUG，则必须指定该日志级别的超时（过期时间），如下面的屏幕截图所示：
- en: '![](img/00019.jpeg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00019.jpeg)'
- en: 'Once the time mentioned in the expiry time is reached, the log level will go
    back to the default value:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦到达超时时间中提到的时间，日志级别将恢复为默认值：
- en: '![](img/00020.jpeg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00020.jpeg)'
- en: Clear button mentioned in the Action column will clear the log setting, and
    the application will set the default log setting again.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 操作列中提到的清除按钮将清除日志设置，并且应用将再次设置默认的日志设置。
- en: Updating the log level from the Storm CLI
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Storm CLI更新日志级别
- en: 'We can modify the log level from the Storm CLI. The following is the command
    that the user has to execute from the Storm directory to update the log settings
    on the runtime:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从Storm CLI修改日志级别。以下是用户必须从Storm目录执行的命令，以更新运行时的日志设置：
- en: '[PRE52]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: In the preceding code, `topology name` is the name of the topology, and `logger
    name` is the logger we want to change. If you want to change the `ROOT` logger,
    then use `ROOT` as a value of `logger name`. The `LEVEL` is the log level you
    want to apply. The possible values are `DEBUG`, `INFO`, `ERROR`, `TRACE`, `ALL`,
    `WARN`, `FATAL`, and `OFF`.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，`topology name`是拓扑的名称，`logger name`是我们想要更改的记录器。如果要更改`ROOT`记录器，则将`ROOT`用作`logger
    name`的值。`LEVEL`是您要应用的日志级别。可能的值包括`DEBUG`、`INFO`、`ERROR`、`TRACE`、`ALL`、`WARN`、`FATAL`和`OFF`。
- en: The `TIMEOUT` is the time in seconds. The log level will go back to normal after
    the timeout time. The value of `TIMEOUT` is mandatory if you are setting the log
    level to `DEBUG`/`ALL`.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`TIMEOUT`是以秒为单位的时间。超时时间后，日志级别将恢复为正常。如果要将日志级别设置为`DEBUG`/`ALL`，则`TIMEOUT`的值是必需的。'
- en: 'The following is the command to change the log level setting for the `storm_example`
    topology:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是更改`storm_example`拓扑的日志级别设置的命令：
- en: '[PRE53]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The following is the command to clear the log level setting:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是清除日志级别设置的命令：
- en: '[PRE54]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Summary
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have covered the installation of Storm and ZooKeeper clusters,
    the deployment of topologies on Storm clusters, the high availability of Nimbus
    nodes, and topology monitoring through the Storm UI. We have also covered the
    different operations a user can perform on running topology. Finally, we focused
    on how we can change the log level of running topology.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经涵盖了Storm和ZooKeeper集群的安装，Storm集群上拓扑的部署，Nimbus节点的高可用性，以及通过Storm UI进行拓扑监控。我们还介绍了用户可以在运行中的拓扑上执行的不同操作。最后，我们重点关注了如何改变运行中拓扑的日志级别。
- en: In the next chapter, we will focus on the distribution of topologies on multiple
    Storm machines/nodes.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将重点关注在多个Storm机器/节点上分发拓扑。
