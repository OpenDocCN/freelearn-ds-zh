- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Image Augmentation for Classification
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像增强用于分类
- en: Image augmentation in **machine learning** (**ML**) is a stable diet for increasing
    prediction accuracy, especially for the image classification domain. The causality
    logic is linear, meaning the more robust the data input, the higher the forecast
    accuracy.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器学习**（**ML**）中的图像增强是一种提高预测准确性的稳定方法，尤其是在图像分类领域。因果逻辑是线性的，这意味着数据输入越强大，预测准确度越高。'
- en: '**Deep learning** (**DL**) is a subset of ML that uses artificial neural networks
    to learn patterns and forecast based on the input data. Unlike traditional ML
    algorithms, which depend on programmer coding and rules to analyze data, DL algorithms
    automatically learn, solve, and categorize the relationship between data and labels.
    Thus, expanding the datasets directly impacts DL predictions on new insights that
    the model has not seen in the training data.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**深度学习**（**DL**）是机器学习的一个子集，使用人工神经网络来学习模式并根据输入数据进行预测。与依赖程序员编码和规则来分析数据的传统机器学习算法不同，深度学习算法能够自动学习、解决问题并分类数据与标签之间的关系。因此，扩展数据集直接影响深度学习模型对新见解的预测，这些见解在训练数据中尚未出现。'
- en: DL algorithms are designed to mimic the human brain, with layers of neurons
    that process information and pass it on to the next layer. Each layer of neurons
    learns to extract increasingly complex features from the input data, allowing
    the network to identify patterns and make predictions with increasing accuracy.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习算法旨在模仿人类大脑，具有多层神经元来处理信息并将其传递到下一层。每一层神经元都会学习从输入数据中提取越来越复杂的特征，从而使网络能够识别模式并随着准确度的提高做出预测。
- en: DL for image classification has proven highly effective in various industries,
    ranging from healthcare, finance, transportation, and consumer products to social
    media. Some examples include *identifying 120 dog breeds*, *detecting cervical
    spine fractures*, *cataloging landmarks*, *classifying Nike shoes*, *spotting
    celebrity faces*, and *separating paper and plastic* *for recycling*.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习（**DL**）在图像分类领域已被证明在多个行业中都非常有效，从医疗、金融、交通、消费品到社交媒体。举些例子，如*识别120种狗狗品种*、*检测颈椎骨折*、*编目地标*、*分类耐克鞋*、*识别名人面孔*以及*分离纸张和塑料*
    *用于回收*。
- en: There is no standard formula to estimate how many images you need to achieve
    a designer prediction accuracy for image classification. Acquiring additional
    photos may not be a viable option because of cost and time. On the other hand,
    image data augmentation is a cost-effective technique that increases the number
    of photos for image classification training.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 没有标准公式来估计需要多少图像才能达到图像分类所需的预测准确度。由于成本和时间的限制，获取更多图像可能不是一个可行的选择。另一方面，图像数据增强是一种经济有效的技术，它能够增加用于图像分类训练的图像数量。
- en: This chapter consists of two parts. First, you will learn the concepts and techniques
    of augmentation for image classification, followed by hands-on Python coding and
    a detailed explanation of the image augmentation techniques.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章由两部分组成。首先，你将学习图像分类增强的概念和技术，随后进行动手的Python编程，并详细解释图像增强技术。
- en: Fun fact
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: The image dataset is typically broken into 75% training, 20% validation, and
    5% testing in the image classification model. Typically, the images allotted for
    training are augmented but outside the validation and testing set.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在图像分类模型中，图像数据集通常被划分为75%的训练集、20%的验证集和5%的测试集。通常，分配给训练集的图像会进行增强，但验证集和测试集之外的图像不会进行增强。
- en: The two primary approaches for image augmentation are pre-processing and dynamic.
    They share the same techniques but differ when augmentation is done. The pre-processing
    method creates and saves the augmented photos in disk storage before training,
    while the dynamic method expands the input images during the training cycle.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图像增强的两种主要方法是预处理和动态方法。它们使用相同的技术，但在增强的时间点上有所不同。预处理方法在训练之前创建并保存增强后的图像，而动态方法则在训练周期中扩展输入图像。
- en: In [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038), you learned about data biases,
    and it is worth remembering that image augmentation will increase the DL model’s
    accuracy and may also increase the biases.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第二章*](B17990_02.xhtml#_idTextAnchor038)中，你学习了数据偏差，值得记住的是，图像增强虽然能提高深度学习模型的准确性，但也可能增加偏差。
- en: In addition to biases, the other noteworthy concept is *safety*. It refers to
    the distortion magnitude that does not alter the original image label post-transformation.
    Different photo domains have different *safety* levels. For example, horizontally
    flipping a person’s portrait photo is an acceptable augmentation technique, but
    reversing the hand gesture images in sign language is unsafe.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 除了偏差，另一个值得注意的概念是 *安全性*。它指的是在变换后不会改变原始图像标签的失真幅度。不同的照片领域具有不同的 *安全性* 水平。例如，水平翻转一个人的肖像照片是一个可接受的增强技术，但翻转手势图像在手语中则是不安全的。
- en: 'By the end of this chapter, you will have learned the concepts and hands-on
    techniques in Python coding for classification image augmentation using real-world
    datasets. In addition, you will have examined several Python open source libraries
    for image augmentation. In particular, this chapter covers the following topics:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将掌握分类图像增强的概念和 Python 编程的实践技巧，使用真实世界的数据集。此外，你还将了解几种用于图像增强的 Python 开源库。本章特别涵盖以下主题：
- en: Geometric transformations
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几何变换
- en: Photometric transformations
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 光度变换
- en: Random erasing
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机擦除
- en: Combining
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组合
- en: Reinforcing your learning through Python code
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 Python 代码加强学习
- en: Geometric transformations are the primary image augmentation technique used
    commonly across multiple image datasets. Thus, this is a good place to begin discussing
    image augmentation.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 几何变换是常用的主要图像增强技术，广泛应用于多个图像数据集中。因此，这是讨论图像增强的一个好起点。
- en: Geometric transformations
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 几何变换
- en: Geometric transformation alters the photo’s geometry, which is done by flipping
    along the X-axis or Y-axis, cropping, padding, rotating, warping, and translation.
    Complex augmentation uses these base photo-altering techniques. While working
    with geometric transformations, the distortion magnitude has to be kept to a safe
    level, depending on the image topic. Thus, no general formula governing geometric
    transformation applies to all photos. In the second half of this chapter, the
    Python coding section, you and Pluto will download real-world image datasets to
    define the safe level for each image set.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 几何变换会改变照片的几何形状，这可以通过沿 X 轴或 Y 轴翻转、裁剪、填充、旋转、扭曲和位移来实现。复杂的增强技术使用这些基本的照片变换方法。在进行几何变换时，必须根据图像主题保持失真幅度在安全范围内。因此，并没有一个适用于所有照片的通用几何变换公式。在本章后半部分的
    Python 编程部分，你和 Pluto 将下载真实世界的图像数据集，以定义每个图像集的安全水平。
- en: The following techniques are not mutually exclusive. You can combine horizontal
    flipping with cropping, resizing, padding, rotating, or any combination thereof.
    The one constraint is the safe level for distortion.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下技术并非互相排斥。你可以将水平翻转与裁剪、调整大小、填充、旋转或任何组合技术结合使用。唯一的限制是失真的安全级别。
- en: 'In particular, you will learn the following techniques:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，你将学习以下技术：
- en: Flipping
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 翻转
- en: Cropping
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 裁剪
- en: Resizing
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整大小
- en: Padding
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 填充
- en: Rotating
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旋转
- en: Translation
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 位移
- en: Noise injection
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 噪声注入
- en: Let’s start with flipping.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从翻转开始。
- en: Flipping
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 翻转
- en: The two flipping types are the horizontal Y-axis and the vertical X-axis. Turning
    the photos along the Y-axis is like looking in a mirror. Therefore, it can be
    used for most types of pictures except for directional images such as street signs.
    There are many cases where rotating along the X-axis is not safe, such as landscape
    or cityscape images where the sky should be at the top of the picture.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 翻转的两种类型是水平 Y 轴翻转和垂直 X 轴翻转。沿 Y 轴翻转照片就像看镜子一样。因此，除了方向性图像（如路标）外，这种翻转适用于大多数类型的照片。有很多情况下，沿
    X 轴旋转是不安全的，例如风景或城市景观图像，其中天空应位于照片的顶部。
- en: It is not an either-or proposition, and the image can use horizontal and vertical
    flips, such as aerial photos from a plane. Therefore, flipping is generally safe
    to use. However, some pictures are not safe for either transformation, such as
    street signs, where any rotation changes the integrity of the original label post-translation.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是非此即彼的选择，图像可以同时使用水平和垂直翻转，例如来自飞机的航拍照片。因此，翻转通常是安全的。然而，有些照片对于任何变换都不安全，比如路标，任何旋转都会改变原始标签的完整性。
- en: Later in this chapter, you will learn how to flip images using Python code with
    an image augmentation library, but for now, here is a teaser demonstration. The
    function’s name is `pluto.draw_image_teaser_flip()`; the explanation will come
    later.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 本章后面，你将学习如何使用Python代码和图像增强库翻转图像，但现在，这里有一个预告演示。函数名称是 `pluto.draw_image_teaser_flip()`；解释将稍后进行。
- en: 'The image output is as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图像输出如下：
- en: "![Figure 3.1 – Image vertic\uFEFFal flip](img/B17990_03_01.jpg)"
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – 图像垂直翻转](img/B17990_03_01.jpg)'
- en: Figure 3.1 – Image vertical flip
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 图像垂直翻转
- en: Flipping keeps all the image content intact. However, the following technique,
    known as cropping, loses information.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 翻转保持所有图像内容不变。然而，下面的技术称为裁剪，会丢失信息。
- en: Cropping
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 裁剪
- en: Cropping an image involves removing the edges of the picture. Most **convolutional
    neural networks** (**CNNs**) use a square image as input. Therefore, photos in
    portrait or landscape mode are regularly chopped to a square image. In most cases,
    the removal of the edges is based on the center of the picture, but there is no
    rule implying it has to be the center of the image.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 裁剪图像涉及删除图片的边缘。大多数卷积神经网络（CNNs）使用正方形图像作为输入。因此，纵向或横向模式的照片通常被裁剪为正方形图像。在大多数情况下，裁剪边缘基于图片的中心，但没有规则表明它必须是图片的中心。
- en: The photo’s center point is 50% of the width and 50% of the height. However,
    in image augmentation, you can choose to move the cropping center to 45% of the
    width and 60% of the height. The cropping center can vary, depending on the photo’s
    subject. Once you have identified the safe range for moving the cropping center,
    you can try dynamically cropping the images per training epoch. Thus, every training
    epoch has a different set of photos. The effect is that the ML model will likely
    not overfit and gives higher accuracy from having more images.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 照片的中心点是宽度的50%和高度的50%。然而，在图像增强中，你可以选择将裁剪中心移动到宽度的45%和高度的60%。裁剪中心可以根据照片的主题而变化。一旦确定了移动裁剪中心的安全范围，你可以尝试在每个训练周期动态裁剪图像。因此，每个训练周期都有一组不同的照片。这样做的效果是，机器学习模型不太可能过拟合，并且由于拥有更多的图像，准确率更高。
- en: The `pluto.draw_image_teaser_crop()` function is another teaser demonstration.
    Moving forward, I will only display the teaser images for some augmentation methods
    since you will learn about all of them in more depth by using Python code later
    in this chapter.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`pluto.draw_image_teaser_crop()` 函数是另一个预告演示。在接下来的章节中，我将只展示一些增强方法的预览图像，因为你稍后会通过Python代码更深入地了解它们。'
- en: 'The output image for **center cropping** is as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**中心裁剪** 的输出图像如下：'
- en: '![Figure 3.2 – Image center crop](img/B17990_03_02.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.2 – 图像中心裁剪](img/B17990_03_02.jpg)'
- en: Figure 3.2 – Image center crop
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – 图像中心裁剪
- en: Cropping is not the same as resizing an image, which we will discuss next.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 裁剪不同于调整图像大小，我们将在下面讨论。
- en: Resizing
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调整大小
- en: 'Resizing can be done by keeping the aspect ratio the same or not:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过保持或不保持相同的纵横比来调整大小：
- en: '**Zooming** is the same as enlarging, cropping, and maintaining the same aspect
    ratio.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩放（Zooming）** 相当于放大、裁剪并保持相同的纵横比。'
- en: '**Squishing** is the same as enlarging or shrinking and changing the original
    aspect ratio. The safe level for zooming, squishing, or other resizing techniques
    depends on the image category.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**压缩（Squishing）** 相当于放大或缩小并改变原始纵横比。对于缩放、压缩或其他调整技术的安全级别取决于图像类别。'
- en: 'The `pluto.draw_image_teaser_resize()` function is a fun demonstration of **resizing**
    an image using the **squishing** mode. The output is as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`pluto.draw_image_teaser_resize()` 函数是使用 **压缩** 模式调整图像大小的有趣演示。输出如下：'
- en: '![Figure 3.3 – Image resizing with squishing mode](img/B17990_03_03.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – 使用压缩模式调整图像大小](img/B17990_03_03.jpg)'
- en: Figure 3.3 – Image resizing with squishing mode
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – 使用压缩模式调整图像大小
- en: When resizing a photo and not keeping the original aspect ratio, you need to
    pad the new image. There are different methods for **padding**.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 当调整照片大小而不保持原始纵横比时，需要对新图像进行填充。有不同的填充方法。
- en: Padding
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 填充
- en: 'Padding involves filling the outer edge of the canvas that is not an image.
    There are three popular methods for padding:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 填充涉及填充不是图像的画布外边缘。填充有三种常用方法：
- en: '**Zero padding** refers to padding the image with black, white, gray, or Gaussian
    noise'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零填充（Zero padding）** 指的是使用黑色、白色、灰色或高斯噪声填充图像。'
- en: '**Reflection padding** mirrors the padding area with the original image'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反射填充（Reflection padding）** 会镜像填充区域与原始图像'
- en: '**Border padding** involves repeating the borderline in the padding section'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边框填充**涉及在填充区域中重复边界线'
- en: Padding is used in combination with cropping, resizing, translation, and rotating.
    Therefore, the safe proportion depends on cropping, resizing, and rotating.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 填充与裁剪、调整大小、平移和旋转相结合使用。因此，安全比例取决于裁剪、调整大小和旋转。
- en: Rotating
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 旋转
- en: Rotating an image involves turning the picture clockwise or counterclockwise.
    The measurement of turning is by a degree and clockwise direction. Therefore,
    turning 180 degrees is the same as flipping vertically, while rotating 360 degrees
    returns the photo to its original position.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转图像涉及顺时针或逆时针旋转图片。旋转的度量单位是度数，并且旋转方向为顺时针。因此，旋转180度相当于垂直翻转，而旋转360度则将照片恢复到原始位置。
- en: General rotating operates on the X-Y plane, whereas turning in the Z plane is
    known as **tilting**. **Skewing** or **shearing** involves rotating on all three
    planes – that is, X, Y, and Z. As with most geometric transformations, rotating
    is a safe operation with a set limit for some image datasets and not for others.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 一般的旋转操作是在 X-Y 平面上进行的，而在 Z 平面上的旋转被称为**倾斜**。**倾斜**或**剪切**涉及在三个平面（即 X、Y 和 Z 平面）上旋转。与大多数几何变换一样，旋转是一种安全操作，对某些图像数据集有固定的限制，而对其他数据集则没有。
- en: 'The `pluto.draw_image_teaser_rotate()` function is a fun demonstration of **rotating**
    an image with **reflection padding** mode. The output is as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`pluto.draw_image_teaser_rotate()`函数是一个有趣的示范，展示了如何使用**反射填充**模式旋转图像。输出如下：'
- en: '![Figure 3.4 – Image rotating and reflection padding mode](img/B17990_03_04.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.4 – 图像旋转与反射填充模式](img/B17990_03_04.jpg)'
- en: Figure 3.4 – Image rotating and reflection padding mode
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 图像旋转与反射填充模式
- en: Similar to rotating is shifting the images, which leads to the next technique,
    known as translation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于旋转的是图像平移，这导致了下一种技术，称为平移。
- en: Translation
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平移
- en: The translation method shifts the image left or right along the X-axis or up
    or down along the Y-axis. It uses padding to backfill the negative space left
    by shifting the photo. Translation is beneficial for reducing center image biases,
    such as when people’s portraits are centered in the picture. The photo’s subject
    will dictate the safe parameters for how much to move the images.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译方法通过沿 X 轴向左或向右移动图像，或沿 Y 轴向上或向下移动图像。它使用填充来填补因移动照片而留下的负空间。平移有助于减少图像中心偏差，例如当人的肖像被居中时。照片的主体将决定平移图像的安全参数。
- en: The next geometric transformation is different from the ones we’ve talked about
    so far because noise injection reduces the photo’s clarity.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个几何变换与我们到目前为止讨论的有所不同，因为噪声注入会降低照片的清晰度。
- en: Noise injection
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 噪声注入
- en: Noise injection adds random black, white, or color pixels to a picture. It creates
    a grainy effect on the original image. Gaussian noise is a de facto standard for
    generating natural noises in a photo. It is based on the Gaussian distribution
    algorithm developed by mathematician Carl Friedrich Gauss in the 1830s.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 噪声注入会向图片中添加随机的黑色、白色或彩色像素，从而在原始图像上创建颗粒感效果。高斯噪声是生成自然噪声的事实标准，基于数学家卡尔·弗里德里希·高斯在1830年代提出的高斯分布算法。
- en: 'The `pluto.draw_image_teaser_noise()` function is a fun demonstration of **noise
    injection** using **Gaussian** mode. The output is as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`pluto.draw_image_teaser_noise()`函数是一个有趣的示范，展示了使用**高斯**模式进行的**噪声注入**。输出如下：'
- en: '![Figure 3.5 – Image noise injection using Gaussian mode](img/B17990_03_05.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.5 – 使用高斯模式的图像噪声注入](img/B17990_03_05.jpg)'
- en: Figure 3.5 – Image noise injection using Gaussian mode
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 使用高斯模式的图像噪声注入
- en: Fun challenge
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Here is a thought experiment: can you think of other geometric image transformations?
    Hint: use the Z-axis, not just the X-axis and the Y-axis.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个思维实验：你能想到其他几何图像变换吗？提示：使用 Z 轴，而不仅仅是 X 轴和 Y 轴。
- en: In the second part of this chapter, Pluto and you will discover how to code
    geometric transformations, such as flipping, cropping, resizing, padding, rotation,
    and noise injection, but there are a few more image augmentations techniques to
    learn first. The next category is photometric transformations.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第二部分，Pluto 和你将一起发现如何编写几何变换的代码，如翻转、裁剪、调整大小、填充、旋转和噪声注入，但首先有一些其他图像增强技术需要学习。下一个类别是光度变换。
- en: Photometric transformations
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 光度变换
- en: Photometric transformations are also known as lighting transformations.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 光度变换也称为光照变换。
- en: 'An image is represented in a three-dimensional array or a rank 3 tensor, and
    the first two dimensions are the picture’s width and height coordinates for each
    pixel position. The third dimension is a **red, blue, and green** (**RGB**) value
    ranging from zero to 255 or #0 to #FF in hexadecimal. The equivalent of RGB in
    printing is **cyan, magenta, yellow, and key** (**CMYK**). The other popular format
    is **hue, saturation, and value** (**HSV**). The salient point is that a photo
    is a matrix of an integer or float when normalized.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '图像表示为一个三维数组或一个三阶张量，前两个维度是图像的宽度和高度坐标，对应每个像素的位置。第三个维度是**红色、蓝色和绿色**（**RGB**）值，范围从零到255，或在十六进制表示中为
    #0 到 #FF。打印中 RGB 的等价物是**青色、品红色、黄色和黑色**（**CMYK**）。另一个流行的格式是**色相、饱和度和数值**（**HSV**）。重点是，图像在归一化时是一个整数或浮点矩阵。'
- en: Visualizing the image as a matrix of numbers makes it easy to transform it.
    For example, in HSV format, changing the **saturation** value to zero in the matrix
    will convert an image from color into grayscale.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像可视化为一个数字矩阵，可以方便地对其进行转换。例如，在 HSV 格式中，将矩阵中的**饱和度**值调整为零，会将图像从彩色转换为灰度图像。
- en: Dozens of filters alter the color space characteristics, from the basics to
    exotic ones. The basic methods are **darkened**, **lightened**, **sharpened**,
    **blurring**, **contrast**, and **color casting**. Aside from the basics, there
    are too many filter categories to list here, such as **retro**, **groovy**, **steampunk**,
    and many others. Furthermore, photo software, such as Adobe Photoshop, and online
    image editors create new image filters frequently.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 数十种滤镜改变色彩空间的特性，从基础到独特的都有。基础方法包括**变暗**、**变亮**、**锐化**、**模糊**、**对比度**和**色调偏移**。除了基础方法，还有许多滤镜类别无法在此一一列举，比如**复古**、**动感**、**蒸汽朋克**等。此外，像
    Adobe Photoshop 这样的照片软件，以及在线图像编辑器，常常会创造出新的图像滤镜。
- en: 'In particular, this section will cover the following topics:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 特别地，本节将涵盖以下主题：
- en: Basic and classic
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本和经典
- en: Advanced and exotic
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级与独特
- en: Let’s begin with basic and classic.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从基础和经典开始。
- en: Basic and classic
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本和经典
- en: Photometric transformations in image augmentation are a proven technique for
    increasing AI model accuracy. Most scholarly papers, such as *A comprehensive
    survey of recent trends in deep learning for digital images augmentation*, by
    Nour Eldeen Khalifa, Mohamed Loey, and Seyedali Mirjalili, published by *Artificial
    Intelligence Review* on September 4, 2021, use the classic filters exclusively
    because code execution is fast. There are many open source Python libraries for
    the classic filters, which Pluto and you will explore later in this chapter.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在图像增强中的光度变换是一种提高 AI 模型准确性的有效技术。大多数学术论文，如 Nour Eldeen Khalifa、Mohamed Loey 和
    Seyedali Mirjalili 发表的《深度学习在数字图像增强中的最新趋势综述》（*A comprehensive survey of recent
    trends in deep learning for digital images augmentation*），由*Artificial Intelligence
    Review*于 2021年9月4日发表，专门使用经典滤镜，因为代码执行速度快。经典滤镜有许多开源 Python 库，Pluto 和你将在本章后续内容中进一步探索。
- en: 'In particular, you will learn the following classic techniques:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 特别地，你将学习以下经典技术：
- en: Darken and lighten
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变暗与变亮
- en: Color saturation
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 色彩饱和度
- en: Hue shifting
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 色调偏移
- en: Color casting
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 色调偏移
- en: Contrast
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对比度
- en: 'Let’s begin with the most common technique: the darken and lighten filter.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从最常见的技术开始：变暗和变亮滤镜。
- en: Darken and lighten
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 变暗与变亮
- en: Lightening an image means increasing the brightness level, while lowering the
    brightness value means darkening an image. In Python code, a photo is an integer
    or float values matrix, and once converted into HSV format, raising or lowering
    the **value** (**V**) in the HSV matrix increases or decreases the picture’s brightness
    level.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 亮化图像意味着增加亮度值，而降低亮度值则意味着变暗图像。在 Python 代码中，照片是一个整数或浮点值的矩阵，一旦转换为 HSV 格式，增加或降低 HSV
    矩阵中的**数值**（**V**）就可以增加或减少图像的亮度。
- en: When it is time for you to write the functions for lightening or darkening the
    image for the Pluto object, you will use a Python image library to do the heavy
    lifting, but it is not hard to write the code from scratch. The safe range for
    the brightness value depends on the image subject and label target.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要为 Pluto 对象编写图像变亮或变暗的函数时，你将使用 Python 图像库来完成繁重的工作，但从头编写代码并不困难。亮度值的安全范围取决于图像的主题和标签目标。
- en: 'The `pluto.draw_image_teaser_brightness()` function is a fun demonstration
    of **darkening** an image. The output is as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`pluto.draw_image_teaser_brightness()` 函数是一个有趣的**变暗**图像演示。输出结果如下：'
- en: '![Figure 3.6 – Image brightness, darken mode](img/B17990_03_06.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图3.6 – 图像亮度，变暗模式](img/B17990_03_06.jpg)'
- en: Figure 3.6 – Image brightness, darken mode
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 图像亮度，变暗模式
- en: Similarly, color saturation is also easy to code in Python.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，色彩饱和度在Python中也很容易编码。
- en: Color saturation
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 色彩饱和度
- en: Color saturation involves increasing or decreasing the intensity of the color
    in a photo. By reducing the saturation values close to zero, the image becomes
    a grayscale image. Inversely, the picture will show a more intense or vibrant
    color when raising the saturation value.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 色彩饱和度涉及增加或减少照片中颜色的强度。通过将饱和度值降低到接近零，图像将变成灰度图像。相反，抬高饱和度值，图像会显示出更加浓烈或鲜艳的颜色。
- en: Similar to the brightness level coding, manipulating the picture’s **saturation**
    (**S**) value in the HSV matrix gives the desired effects. The safe range for
    color saturation depends on the image subject and label target.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于亮度水平编码，在HSV矩阵中操作图像的**饱和度**（**S**）值可以产生期望的效果。色彩饱和度的安全范围取决于图像的主题和标签目标。
- en: So far, we’ve looked at the *S* and the *V* in *HSV*, but what does the *H*
    value do? It is for hue shifting.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看过了*S*和*V*在*HSV*中的作用，那么*H*值是做什么的呢？它是用来做色调偏移的。
- en: Hue shifting
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 色调偏移
- en: Shifting the **hue** (**H**) value in the Python image matrix in HSV format
    alternates the photo’s color. Typically, a circle represents the hue values. Thus,
    the value starts at zero and ends at 360 degrees. Red is at the top of the rotation,
    beginning with zero, followed by yellow, green, cyan, blue, and magenta. Each
    color is separated by 60 degrees. Therefore, the last color, magenta, starts at
    310 and ends at 360 degrees.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在HSV格式的Python图像矩阵中，移动**色调**（**H**）值会改变照片的颜色。通常，色调值用一个圆圈表示。因此，色调值从零开始，到360度结束。红色位于旋转的顶部，起始值为零，接着是黄色、绿色、青色、蓝色和洋红色。每种颜色之间相隔60度。因此，最后一种颜色——洋红色，从310度开始，到360度结束。
- en: Hue shifting is an excellent image editing filter, but for AI image augmentation,
    it is not helpful because it distorts the image beyond the intended label. For
    example, suppose you are developing an AI model to classify different species
    of chameleons. In that case, the hue-switching technique is sufficient for image
    augmentation. Still, if your project is to differentiate cats and fluffy furball
    toys, it might lead to false positives because you would get fluorescent pink
    cats.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 色调偏移是一个很好的图像编辑滤镜，但对于AI图像增强，它并没有太大帮助，因为它会使图像超出预期的标签。例如，假设你正在开发一个AI模型来分类不同物种的变色龙。在这种情况下，色调切换技术足以进行图像增强。但如果你的项目是区分猫和毛茸茸的玩具球，它可能会导致误报，因为你可能得到荧光粉色的猫。
- en: 'The `pluto.draw_image_teaser_hue()` function is a fun demonstration of **hue
    shifting**. The output is as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`pluto.draw_image_teaser_hue()`函数是一个有趣的**色调偏移**演示。输出结果如下：'
- en: '![Figure 3.7 – Image hue shifting](img/B17990_03_07.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.7 – 图像色调偏移](img/B17990_03_07.jpg)'
- en: Figure 3.7 – Image hue shifting
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – 图像色调偏移
- en: Similar to hue shifting is color casting.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 与色调偏移类似的是色彩投射。
- en: Color casting
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 色彩投射
- en: Color casting is also known as color tinting. It is when the white color is
    not balanced or is inaccurate. The tint colors are commonly **red, green, or blue**
    (**RGB**). In Python, tinting a photo is as easy as altering the RGB value in
    the image matrix. There is the same concern for the safe range as in the hue-shifting
    filter. In other words, color casting has limited use in AI image augmentation.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 色彩投射也称为色彩调 tinting。当白色不平衡或不准确时，就会发生色彩投射。常见的调色为**红色、绿色或蓝色**（**RGB**）。在Python中，给照片加上色调就像改变图像矩阵中的RGB值一样简单。与色调偏移滤镜一样，色彩投射的安全范围也要考虑到相同的因素。换句话说，色彩投射在AI图像增强中使用有限。
- en: There is no formal definition of which filters are basic or classic and which
    are advanced and exotic. Hence, we have chosen to look at the contrast filter
    for our final example of classic photometric transformations.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 没有正式的定义来区分哪些滤镜是基础的或经典的，哪些是高级的或异国情调的。因此，我们选择查看对比度滤镜作为经典光度变换的最终示例。
- en: Contrast
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对比度
- en: Contrast is the difference in luminance or color that distinguishes objects
    in a picture from one another. For example, most photographers want a high contrast
    between a person in the foreground concerning the background. Usually, the foreground
    object is brighter and in sharper focus than the background. The safe range for
    the contrast value depends on the image subject and label target.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 对比度是区分图像中物体的亮度或颜色差异。例如，大多数摄影师希望前景中的人物与背景之间有很高的对比度。通常，前景物体比背景更明亮，焦点更清晰。对比度值的安全范围取决于图像的主题和标签目标。
- en: Pluto and you will explore the contrast filter and all other classic photometric
    transformations using Python code in the second half of this chapter. The following
    section will cover advanced and exotic filters.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto和你将在本章后半部分通过Python代码探索对比滤镜和所有其他经典光度变换。接下来的部分将涉及高级和异域滤镜。
- en: Advanced and exotic
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级与异域
- en: The advanced or exotic techniques have no Python library for implementing these
    filters in data augmentation. Online photo editing websites and desktop software
    frequently create new exotic filters monthly.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 高级或异域技术没有用于在数据增强中实现这些滤镜的Python库。在线照片编辑网站和桌面软件经常每月创建新的异域滤镜。
- en: If you review the filters section of *Adobe Photoshop* or many online photo
    editing websites, such as [www.fotor.com](https://www.fotor.com), you will find
    dozens or hundreds of filter options. Specialized filters for image subjects include
    people portraits, landscapes, cityscapes, still life, and many others. Filters
    are also categorized by styles, such as retro, vintage, steampunk, trendy, mellow,
    groovy, and many others.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看*Adobe Photoshop*的滤镜部分，或许还能在许多在线照片编辑网站上找到如[www.fotor.com](https://www.fotor.com)这样的服务，你会发现数十种或数百种滤镜选项。专门针对图像主题的滤镜包括人物肖像、风景、城市景观、静物等。滤镜也按风格分类，如复古、老式、蒸汽朋克、时尚、温和、动感等。
- en: The exotic filters are not featured in scholarly papers partly due to the lack
    of available Python libraries and the high CPU or GPU resource time to perform
    these operations during the training cycle. Nevertheless, in theory, exotic filters
    are excellent techniques for image augmentation.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 异域滤镜在学术论文中并不常见，部分原因是缺乏可用的Python库，并且在训练周期中执行这些操作需要大量的CPU或GPU资源。然而，理论上，异域滤镜是图像增强的优秀技术。
- en: Fun challenge
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Let’s do a thought experiment. Can generative AI, like stable diffusion or
    DALL-E, create new images for augmentation? Generative AI can create hundreds
    or thousands of images from input text. For example, let’s say you’ve been tasked
    with developing an AI for identifying a unicorn, pegasus, or minotaur; is it more
    difficult to find images of those mythical creatures in print or real life? Generative
    AI can do this, but is it a practical technique? Hint: think about static versus
    dynamic augmentation disk space and time.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行一个思维实验。像稳定扩散（stable diffusion）或DALL-E这样的生成性AI能否为数据增强创造新图像？生成性AI可以根据输入文本生成数百或数千张图像。例如，假设你的任务是开发一个AI来识别独角兽、飞马或弥诺陶洛斯，这些神话生物的图像是更容易在印刷品中找到还是在现实生活中找到？生成性AI可以做到这一点，但这是一种实用的技术吗？提示：思考静态与动态数据增强所需的磁盘空间和时间。
- en: Photometric and geometric transformations manipulate photos, but random erasing
    adds new elements to a picture.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 光度和几何变换可以操作照片，而随机擦除则为图像添加了新元素。
- en: Random erasing
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机擦除
- en: Random erasing selects a rectangle region in an image and replaces or overlays
    it with a gray, black, white, or Gaussian noise pixels rectangle. It is counterintuitive
    to why this technique increases the AI model’s forecasting accuracy.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 随机擦除选择图像中的一个矩形区域，并用灰色、黑色、白色或高斯噪声像素矩形替换或覆盖它。这种技术为何能提高AI模型的预测准确性，直觉上是难以理解的。
- en: The strength of any ML model, especially CNN, is in predicting or forecasting
    data that has not been seen in the training or validating stage. Thus, dropout,
    where randomly selected neurons are ignored during training, is a well-proven
    method to reduce overfitting and increase accuracy. Therefore, random erasing
    has the same effect as increasing the dropout rate.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 任何机器学习模型的强大之处，尤其是卷积神经网络（CNN），在于预测或预见训练或验证阶段未曾见过的数据。因此，随机丢弃（dropout）是一种经过验证的有效方法，可以减少过拟合并提高准确性，这意味着随机擦除具有与增加丢弃率相同的效果。
- en: A paper called *Random Erasing Data Augmentation*, which was published on November
    16, 2017, by arXiv, shows how random erasing increases accuracy and reduces overfitting
    in a CNN-based model. The paper’s authors are Zhun Zhong, Liang Zheng, Guoliang
    Kang, Shaozi Li, and Yi Yang from the Cognitive Science Department, at Xiamen
    University, China, and the University of Technology Sydney, Australia.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 一篇名为《*随机擦除数据增强*》的论文于2017年11月16日通过arXiv发布，展示了随机擦除如何在基于CNN的模型中提高准确性并减少过拟合。该论文的作者为来自厦门大学和澳大利亚悉尼科技大学认知科学系的Zhun
    Zhong、Liang Zheng、Guoliang Kang、Shaozi Li 和 Yi Yang。
- en: Typically, the random erasing rectangle region, also known as the cutout, is
    filled with random pixels using *Gaussian randomization*. The safe range for random
    erasing depends on the image subject and label target.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，随机擦除矩形区域，也称为切割区域，会使用*高斯随机化*填充随机像素。随机擦除的安全范围取决于图像主题和标签目标。
- en: Fun fact
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: There is one creative example of using random erasing in image augmentation
    that reduces biases. In a self-driving automobile system, one of the image classification
    models is to identify and classify street signs. The AI model was trained with
    clear and pristine street sign photos, so the AI model was biased against the
    real-world pictures of street signs in poor neighborhoods in the USA, where street
    signs are defaced with graffiti and abused. Randomly adding cutouts of graffiti,
    paint, dirt, and bullet holes increased the model’s accuracy and reduced overfitting
    and biases against poor neighborhood street signs.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个创造性的例子，使用随机擦除进行图像增强，以减少偏差。在自动驾驶汽车系统中，一个图像分类模型是识别和分类路标。该 AI 模型使用清晰、完整的路标照片进行训练，因此它对美国贫困社区中那些被涂鸦和破坏的路标照片有偏见。通过随机添加涂鸦、油漆、污垢和弹孔的切割区域，提高了模型的准确性，减少了过拟合，并且减少了对贫困社区路标的偏见。
- en: Depending on the image dataset subject, random erasing, photometric, and geometric
    transformations can be mixed and matched. Let’s discuss this in detail.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 根据图像数据集的主题，可以混合和匹配随机擦除、光度和几何变换。我们来详细讨论一下。
- en: Combining
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结合
- en: The techniques or filters in geometric transformations can be readily combined
    with most image topics. For example, you can mix horizontal flip, cropping, resizing,
    padding, rotation, translation, and noise injection for many domains, such as
    people, landscapes, cityscapes, and others.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 几何变换中的技术或滤镜可以轻松与大多数图像主题结合。例如，你可以将水平翻转、裁剪、调整大小、填充、旋转、平移和噪声注入等技术混合应用于多个领域，如人物、风景、城市景观等。
- en: In addition, taking landscape as a topic, you can combine many filters in photometric
    transformations, such as darkening, lightening, color saturation, and contrast.
    Hue shifting and color casting may not apply to landscape photos. However, advanced
    photographic transformation filters, such as adding rain or snow to landscape
    images, are acceptable.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以风景为主题，你可以将多种滤镜结合在光度变换中，例如暗化、亮化、色彩饱和度和对比度。色调偏移和色彩偏差可能不适用于风景照片。然而，先进的摄影变换滤镜，例如向风景图像中添加雨雪效果，是可以接受的。
- en: 'There’s more: you can add random erasing to landscape images. As a result,
    1,000 landscape images may increase to 200,000 photos for training. That is the
    power of image augmentation.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 还有更多：你可以将随机擦除应用于风景图像。因此，1,000 张风景图像可能会增加到 200,000 张用于训练的照片。这就是图像增强的力量。
- en: Fun challenge
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Here is a thought experiment: should you augment the entire image dataset or
    only a segment?'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个思维实验：你应该增强整个图像数据集，还是只增强其中的一部分？
- en: 'Data augmentation can generate hundreds of thousands of new images for training,
    increasing AI prediction accuracy by decreasing the overfitting problem. But what
    if you also augmented the validation and testing dataset? Hint: think about real-world
    applications, DL generalization, and false negatives and false positives.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 数据增强可以为训练生成数十万张新图像，减少过拟合问题，从而提高 AI 预测的准确性。但是，如果你还增强了验证和测试数据集呢？提示：考虑一下真实世界的应用、深度学习的泛化能力，以及假阴性和假阳性。
- en: So far, we have discussed various image augmentation filters and techniques.
    The next step is for you and Pluto to write Python code to reinforce your understanding
    of these concepts.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了各种图像增强滤镜和技术。下一步是你和 Pluto 编写 Python 代码，以加深你对这些概念的理解。
- en: Reinforcing your learning through Python code
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 Python 代码强化你的学习
- en: We will pursue the same approach as in [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038).
    Start by loading the `data_augmentation_with_python_chapter_3.ipynb` file in Google
    Colab or your chosen Jupyter Notebook or JupyterLab environment. From this point
    onward, the code snippets will be from the Python Notebook, which contains all
    the functions.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将采用与[*第 2 章*](B17990_02.xhtml#_idTextAnchor038)相同的方法。首先，在 Google Colab 或你选择的
    Jupyter Notebook 或 JupyterLab 环境中加载 `data_augmentation_with_python_chapter_3.ipynb`
    文件。从此时起，代码片段将来自 Python Notebook，其中包含所有函数。
- en: 'This chapter’s coding lessons topics are as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的编码学习主题如下：
- en: Pluto and the Python Notebook
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pluto 和 Python Notebook
- en: Real-world image dataset
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 真实世界的图像数据集
- en: Image augmentation library
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像增强库
- en: Geometric transformations
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几何变换
- en: Photometric transformations
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 光度变换
- en: Random erasing
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机擦除
- en: Combining
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并
- en: The next step is to download, set up, and verify that Pluto and the Python Notebook
    are working adequately.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是下载、设置并验证 Pluto 和 Python Notebook 是否正常工作。
- en: Pluto and the Python Notebook
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pluto 和 Python Notebook
- en: Before loading Pluto from [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038), we
    must retrieve him by cloning this book’s `%run` magic command, we can invoke Pluto.
    If you improved or hacked Pluto, load that file. You should review [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038)
    if these steps are not familiar to you.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在加载 Pluto 之前，需要通过克隆本书的 `%run` 魔法命令来获取 Pluto，我们可以调用它。如果你对 Pluto 进行了改进或修改，加载那个文件。如果这些步骤不熟悉，请查看
    [*第2章*](B17990_02.xhtml#_idTextAnchor038)。
- en: Fun fact
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: The startup process for coding is the same for every chapter. Pluto only displays
    the essential code snippets in this book, and he relies on you to review the complete
    code in the Python Notebook.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 编码的启动过程对于每一章都是相同的。Pluto 只显示本书中的必要代码片段，剩下的完整代码需要你在 Python Notebook 中查看。
- en: 'Use the following code to clone the Python Notebook and invoke Pluto:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码克隆 Python Notebook 并调用 Pluto：
- en: '[PRE0]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output will be similar to the following:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下内容：
- en: '[PRE1]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Double-check that Pluto has loaded correctly by running the following code
    in the Python Notebook:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在 Python Notebook 中运行以下代码来仔细检查 Pluto 是否正确加载：
- en: '[PRE2]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output will be as follows or something similar, depending on your system:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示，具体内容根据你的系统可能有所不同：
- en: '[PRE3]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Pluto has verified that the Python Notebook is working correctly, so the next
    step is downloading real-world image datasets from the *Kaggle* website.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 已验证 Python Notebook 正常工作，接下来的步骤是从 *Kaggle* 网站下载真实世界图像数据集。
- en: Real-world image datasets
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 真实世界图像数据集
- en: In [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038), Pluto learned how to download
    thousands of real-world datasets from the *Kaggle* website. For this chapter,
    he has selected six image datasets to illustrate different image augmentation
    techniques. Still, you can substitute or add new *Kaggle* image datasets by passing
    the new URLs to the code in the Python Notebook.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第2章*](B17990_02.xhtml#_idTextAnchor038) 中，Pluto 学会了如何从 *Kaggle* 网站下载成千上万的真实世界数据集。在本章中，他选择了六个图像数据集来展示不同的图像增强技术。当然，你也可以通过将新的
    URL 传递给 Python Notebook 中的代码来替换或添加新的 *Kaggle* 图像数据集。
- en: Fun challenge
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Download two additional real-world datasets from the Kaggle website. Pluto
    likes to play fetch, so it is no problem for it to fetch new datasets. Hint: go
    to [https://www.kaggle.com/datasets](https://www.kaggle.com/datasets) and search
    for **image classification**. Downloading additional real-world data will further
    reinforce your understanding of image augmentation concepts.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Kaggle 网站下载另外两个真实世界数据集。Pluto 喜欢玩接飞盘，所以它取回新的数据集不成问题。提示：访问 [https://www.kaggle.com/datasets](https://www.kaggle.com/datasets)
    并搜索 **图像分类**。下载更多的真实世界数据将进一步加深你对图像增强概念的理解。
- en: 'Pluto has chosen six image datasets based on the challenges each topic brings
    to bear on augmentation techniques. In other words, one concept may be acceptable
    for one subject but not for another. In particular, the six image datasets are
    as follows:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 选择了六个图像数据集，基于每个主题对增强技术的挑战。换句话说，一个概念可能适用于某个主题，但对另一个主题则不适用。具体来说，六个图像数据集如下：
- en: Covid-19 image dataset
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Covid-19 图像数据集
- en: Indian people
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 印度人
- en: Edible and poisonous fungi
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可食用和有毒的真菌
- en: Sea animals
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 海洋动物
- en: Vietnamese food
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 越南食物
- en: Mall crowd
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商场人群
- en: Fun fact
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: The code for downloading these six real-world datasets from the *Kaggle* website
    looks repetitive. It is easy by design because Pluto worked hard to create reusable
    methods in [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038). He wants it to be
    easy so that you can download any real-world dataset from the *Kaggle* website.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 从 *Kaggle* 网站下载这六个真实世界数据集的代码看起来有些重复。设计如此简单，因为 Pluto 花了很多心思创建了可重用的方法，在 [*第2章*](B17990_02.xhtml#_idTextAnchor038)中，你可以查看完整的代码。他希望这个过程尽可能简单，这样你就能轻松地从
    *Kaggle* 网站下载任何真实世界数据集。
- en: Let’s start with the Covid-19 data.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 Covid-19 数据开始。
- en: Covid-19 image dataset
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Covid-19 图像数据集
- en: Medical is a popular category for AI image predictive models. Therefore, Pluto
    selected the *Covid-19 Image Dataset*. He fetched the pictures and made the necessary
    pandas DataFrame using the methods shown in [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038).
    Note that the complete code is in the Python Notebook.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 医疗是人工智能图像预测模型的热门类别。因此，Pluto 选择了 *Covid-19 图像数据集*。他获取了图片，并使用 [*第 2 章*](B17990_02.xhtml#_idTextAnchor038)
    中展示的方法创建了所需的 pandas DataFrame。注意，完整代码在 Python Notebook 中。
- en: 'The following commands fetch and load the data into pandas:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于获取并加载数据到 pandas：
- en: '[PRE4]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The first three records of the pandas DataFrame are as follows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: pandas DataFrame 的前三条记录如下：
- en: '![Figure 3.8 – The first three rows of the pandas DataFrame](img/B17990_03_08.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.8 – pandas DataFrame 的前三行](img/B17990_03_08.jpg)'
- en: Figure 3.8 – The first three rows of the pandas DataFrame
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – pandas DataFrame 的前三行
- en: 'On the *Kaggle* website, the data’s context is as follows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Kaggle* 网站上，数据的背景如下：
- en: “*Helping Deep Learning and AI Enthusiasts like me to contribute to improving
    Covid-19 detection using just Chest X-rays. It contains around 137 cleaned images
    of Covid-19 and 317 containing Viral Pneumonia and Normal Chest X-Rays structured
    into the test and train directories.*”
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: “*帮助像我这样的深度学习和人工智能爱好者通过仅使用胸部 X 光片贡献改善 Covid-19 检测的工作。数据集包含约 137 张经过清理的 Covid-19
    图像和 317 张包含病毒性肺炎和正常胸部 X 光片的图像，已经结构化为测试集和训练集目录。*”
- en: 'This citation is from the *University of Montreal*, and the collaborator listed
    is **Pranav Raikote** (owner), license: **CC BY-SA** **4.0**: [https://choosealicense.com/licenses/cc-by-sa-4.0](https://choosealicense.com/licenses/cc-by-sa-4.0).'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 该引用来自 *蒙特利尔大学*，列出的合作者是 **Pranav Raikote**（所有者），许可证：**CC BY-SA** **4.0**：[https://choosealicense.com/licenses/cc-by-sa-4.0](https://choosealicense.com/licenses/cc-by-sa-4.0)。
- en: Now that Pluto has downloaded the Covid-19 data, it will start working on the
    *People* dataset.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Pluto 已经下载了 Covid-19 数据，他将开始处理 *People* 数据集。
- en: Indian People
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 印度人民
- en: 'The second typical category in image prediction or classification is people.
    Pluto has chosen the *Indian People* dataset. The following code snippet from
    the Python Notebook fetches and loads the data into pandas:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图像预测或分类中的第二个典型类别是人物。Pluto 选择了 *印度人民* 数据集。以下是 Python Notebook 中的一段代码，它获取并加载数据到
    pandas：
- en: '[PRE5]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'On the *Kaggle* website, there is no description of the dataset. It’s not uncommon
    to get a dataset without an explanation or goals and be asked to augment it. The
    collaborator listed is **Ayush Sinha** (owner), license: **None, Visible to**
    **the public**.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Kaggle* 网站上，数据集没有描述。没有解释或目标的情况并不少见，人们会被要求对其进行补充。列出的合作者是 **Ayush Sinha**（所有者），许可证：**无，公开可见**。
- en: The typical usage for people data is to identify or classify age, sex, ethnicity,
    emotional sentiment, facial recognition, and many more.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 人物数据的典型用途是识别或分类年龄、性别、种族、情感倾向、面部识别等。
- en: Fun fact
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: There are controversial image classification AI systems, such as those for predicting
    people as criminals or not criminals, forecasting worthiness to society, identifying
    sexual orientation, and selecting immigrants or citizens. However, other creative
    uses include identifying a potential new whale – a super high casino spender from
    a casino installing cameras in the lobby and feeding them to an AI.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些有争议的图像分类人工智能系统，例如预测人们是否是罪犯、预测对社会的价值、识别性取向以及选择移民或公民。然而，其他创造性的用途包括识别潜在的新“鲸鱼”——来自某赌场的超级高消费客户，通过在大厅安装摄像头并将数据输入人工智能系统。
- en: Now, let’s look at the fungi data.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看真菌数据。
- en: Edible and poisonous fungi
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可食用和有毒的真菌
- en: 'The third most often used topic for image classification is safety, such as
    distracted drivers, poisonous snakes, or cancerous tumors. Pluto found the real-word
    *Edible and Poisonous Fungi* dataset on the *Kaggle* website. The following code
    snippet from the Python Notebook fetches and loads the data into pandas:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分类中第三个最常用的主题是安全性，比如分心的驾驶员、有毒的蛇或癌症肿瘤。Pluto 在 *Kaggle* 网站上找到了真实世界的 *可食用和有毒的真菌*
    数据集。以下是 Python Notebook 中的一段代码，它获取并加载数据到 pandas：
- en: '[PRE6]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'On the *Kaggle* website, the description is as follows:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Kaggle* 网站上，描述如下：
- en: “*We created this dataset as part of our school’s research project. As we didn’t
    find something similar when we started, we decided to publish it here so that
    future research with mushrooms and AI can benefit from it.*”
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: “*我们创建这个数据集是作为我们学校研究项目的一部分。由于我们在开始时没有找到类似的东西，我们决定在这里发布它，以便未来关于蘑菇和人工智能的研究能够受益于它。*”
- en: 'The collaborator listed is **Marcos Volpato** (owner), license: **Open Data
    Commons Open Database License (****ODbL)**: [https://opendatacommons.org/licenses/odbl/1-0/](https://opendatacommons.org/licenses/odbl/1-0/).'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 列出的合作者是**Marcos Volpato**（所有者），许可证：**开放数据公约开放数据库许可证（****ODbL）**：[https://opendatacommons.org/licenses/odbl/1-0/](https://opendatacommons.org/licenses/odbl/1-0/)。
- en: Now, let’s look at the sea animals data.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们来看看海洋动物数据。
- en: Sea animals
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 海洋动物
- en: 'The fourth theme is nature. Pluto selected the *Sea Animals Image Dataset*.
    The following commands fetch and load the data into pandas:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 第四个主题是自然。Pluto 选择了*海洋动物图像数据集*。以下命令将数据抓取并加载到 pandas 中：
- en: '[PRE7]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The *Kaggle* website’s description for this dataset is as follows:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '*Kaggle* 网站对此数据集的描述如下：'
- en: “*Most life forms began their evolution in aquatic environments. The oceans
    provide about 90% of the world’s living space in terms of volume. Fish, which
    are only found in water, are the first known vertebrates. Some of these transformed
    into amphibians, which dwell on land and water for parts of the day.*”
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: “*大多数生命形式的进化始于水生环境。海洋提供了世界 90% 的生活空间（按体积计算）。鱼类是唯一生活在水中的脊椎动物，它们是已知的第一批脊椎动物。这些鱼类中的一些转变为两栖动物，它们在白天的部分时间里生活在陆地和水域中。*”
- en: 'The collaborators listed are **Vince Vence** (owner), license: **Other— Educational
    purposes and Free for Commercial Use (****FFCU)**: [https://www.flickr.com/people/free_for_commercial_use/](https://www.flickr.com/people/free_for_commercial_use/).'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 列出的合作者是**Vince Vence**（所有者），许可证：**其他——教育用途和商业使用免费（****FFCU）**：[https://www.flickr.com/people/free_for_commercial_use/](https://www.flickr.com/people/free_for_commercial_use/)。
- en: Next, we’ll look at food data.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看食品数据。
- en: Vietnamese food
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 越南食品
- en: 'The fifth widespread subject for image classification is food. Pluto found
    the *30VNFoods – A Dataset for Vietnamese Food Images Recognition* dataset. The
    following commands fetch and load the data into pandas:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 第五个广泛应用于图像分类的主题是食品。Pluto 找到了*30VNFoods – 越南食品图像识别数据集*。以下命令将数据抓取并加载到 pandas 中：
- en: '[PRE8]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The *Kaggle* website’s description is as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '*Kaggle* 网站的描述如下：'
- en: “*This paper introduces a large dataset of 25,136 images of 30 popular Vietnamese
    foods. Several machine learning and deep learning image classification techniques
    have been applied to test the dataset, and the results were compared and reported.*”
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: “*本文介绍了一个包含 25,136 张关于 30 种受欢迎越南食品的图像的大型数据集。多种机器学习和深度学习图像分类技术已经应用于测试此数据集，结果被比较并报告。*”
- en: 'The collaborators listed are **Quan Dang** (owner), **Anh Nguyen Duc Duy**
    (editor), **Hoang-Nhan Nguyen** (viewer), **Phuoc Pham Phu** (viewer), and **Tri
    Nguyen** (viewer), license: **CC BY-SA** **4.0**: [https://choosealicense.com/licenses/cc-by-sa-4.0](https://choosealicense.com/licenses/cc-by-sa-4.0).'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 列出的合作者是**Quan Dang**（所有者），**Anh Nguyen Duc Duy**（编辑），**Hoang-Nhan Nguyen**（查看者），**Phuoc
    Pham Phu**（查看者），**Tri Nguyen**（查看者），许可证：**CC BY-SA** **4.0**：[https://choosealicense.com/licenses/cc-by-sa-4.0](https://choosealicense.com/licenses/cc-by-sa-4.0)。
- en: Now, let’s move on to mall crowd data.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们来看看购物中心人群数据。
- en: Mall crowd
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 购物中心人群
- en: 'Pluto chose the sixth and last dataset for the creative use of AI image classification
    – the *Mall - Crowd Estimation* dataset. The following code snippet from the Python
    Notebook fetches and loads the data into pandas:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 选择了第六个也是最后一个数据集，用于创意的 AI 图像分类——*购物中心 - 人群估算*数据集。以下 Python Notebook 代码片段将数据抓取并加载到
    pandas 中：
- en: '[PRE9]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The *Kaggle* website’s description is as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '*Kaggle* 网站的描述如下：'
- en: “The mall dataset was collected from a publicly accessible webcam for crowd
    counting and profiling research.”
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: “购物中心数据集是从一个公开可访问的网络摄像头收集的，用于人群计数和画像研究。”
- en: 'The collaborator listed is **Feras** (owner), license: **None, Visible to**
    **the public**.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 列出的合作者是**Feras**（所有者），许可证：**无，公开可见**。
- en: Fun challenge
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Refactor the code provided and write one function that downloads all six datasets.
    Hint: put the six *Kaggle* data URLs into an array. Pluto does not write the uber-big
    method because he focuses on making the augmentation techniques easier to understand
    rather than writing compact code that might obfuscate the meaning.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 重构提供的代码并编写一个函数来下载所有六个数据集。提示：将六个*Kaggle*数据集的 URL 放入一个数组中。Pluto 不编写超大方法，因为他专注于让增强技术更易于理解，而不是编写可能使意义模糊的紧凑代码。
- en: After downloading all six datasets, Pluto must draw an image batch.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完所有六个数据集后，Pluto 必须绘制图像批次。
- en: Drawing an image batch
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘制图像批次
- en: Let’s look at the pictures in the six datasets. Pluto will take samples from
    the pandas DataFrame and use the `draw_batch()` function defined in [*Chapter
    2*](B17990_02.xhtml#_idTextAnchor038).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这六个数据集中的图片。Pluto 将从 pandas DataFrame 中提取样本，并使用在[*第二章*](B17990_02.xhtml#_idTextAnchor038)中定义的`draw_batch()`函数。
- en: 'The output for two Covid-19, two people, two fungi, two sea animals, one food,
    and one mall crowd picture are as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是两张 Covid-19 图片、两个人物图片、两张真菌图片、两张海洋动物图片、一张食物图片和一张商场人群图片的输出：
- en: '![Figure 3.9 – Six image datasets](img/B17990_03_09.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.9 – 六个图像数据集](img/B17990_03_09.jpg)'
- en: Figure 3.9 – Six image datasets
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9 – 六个图像数据集
- en: Pluto has downloaded plenty of real-world pictures, so the next step is selecting
    an image augmentation library.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 已经下载了大量真实世界的图片，接下来的步骤是选择一个图像增强库。
- en: Image augmentation library
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像增强库
- en: There are many open source Python image augmentation and processing libraries.
    Most libraries have filters for geometric and photometric transformations. In
    addition, a few libraries have specialized functions for particular image topics.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多开源的 Python 图像增强和处理库。大多数库提供几何和光度变换的滤镜。此外，少数库针对特定的图像主题提供了专门的功能。
- en: 'Pluto will cover only some of these libraries. The most popular libraries are
    Albumentations, Fast.ai, **Pillow** (**PIL**), OpenCV, scikit-learn, Mahotas,
    and pgmagick:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 只会介绍其中的一部分库。最流行的库有 Albumentations、Fast.ai、**Pillow** (**PIL**)、OpenCV、scikit-learn、Mahotas
    和 pgmagick：
- en: '**Albumentations** is a fast and highly customizable image augmentation Python
    library. It has become the de facto standard for research areas related to computer
    vision and DL. Albumentations efficiently implements over 70 varieties of image
    transform operations optimized for performance. Albumentations’ substantial benefit
    is broad integration with many DL frameworks. It was introduced in 2019\. It can
    be found on GitHub at [https://github.com/albumentations-team/albumentations](https://github.com/albumentations-team/albumentations).'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Albumentations** 是一个快速且高度可定制的 Python 图像增强库。它已经成为与计算机视觉和深度学习相关研究领域的事实标准。Albumentations
    高效地实现了超过 70 种图像变换操作，并且在性能上进行了优化。Albumentations 的显著优势在于它与许多深度学习框架的广泛集成。该库于 2019
    年推出，可以在 GitHub 上找到：[https://github.com/albumentations-team/albumentations](https://github.com/albumentations-team/albumentations)。'
- en: '**Fast.ai** is a best-of-class for DL and AI library and framework. It was
    founded in 2016 by Jeremy Howard and Rachel Thomas to democratize DL. Fast.ai
    has extensive built-in functions for image augmentation. Furthermore, its image
    augmentation operations use GPU, so it is possible to perform dynamic image augmentation
    during the training cycle. In other words, because of the GPU, it is the best
    performance image augmentation library in the market. It can be found on GitHub
    at [https://github.com/fastai](https://github.com/fastai).'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Fast.ai** 是一个顶级的深度学习和人工智能库与框架。它由 Jeremy Howard 和 Rachel Thomas 于 2016 年创立，旨在使深度学习更加普及。Fast.ai
    提供了广泛的内建功能用于图像增强。此外，它的图像增强操作使用 GPU，因此可以在训练周期中进行动态图像增强。换句话说，由于 GPU 的加持，它是市场上性能最强的图像增强库。可以在
    GitHub 上找到它：[https://github.com/fastai](https://github.com/fastai)。'
- en: '**Pillow** is a friendly modern fork of the **Python Imaging Library** (**PIL**)
    repository. PIL is a popular open source library for image processing and augmentation
    because it was first released in 1995\. Many open source Python image processing,
    displaying, and augmenting libraries are built on top of PIL. It can be found
    on GitHub at [https://github.com/python-pillow/Pillow](https://github.com/python-pillow/Pillow).'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pillow** 是 **Python Imaging Library** (**PIL**) 库的现代友好分支。PIL 是一个流行的开源图像处理与增强库，最早发布于
    1995 年。许多开源的 Python 图像处理、显示和增强库都基于 PIL 构建。可以在 GitHub 上找到它：[https://github.com/python-pillow/Pillow](https://github.com/python-pillow/Pillow)。'
- en: '**AugLy** is an open source Python project by Meta (Facebook) for data augmentation.
    The library provides over 100 audio, video, image, and text data augmentation
    methods. It can be found on GitHub at [https://github.com/facebookresearch/AugLy](https://github.com/facebookresearch/AugLy).'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AugLy** 是 Meta（Facebook）推出的一个开源 Python 数据增强项目。该库提供了超过 100 种音频、视频、图像和文本数据增强方法。可以在
    GitHub 上找到它：[https://github.com/facebookresearch/AugLy](https://github.com/facebookresearch/AugLy)。'
- en: '**OpenCV** was developed by Intel in 2000 as an open source library. ML primarily
    uses OpenCV in computer vision tasks such as object classification and detection,
    face recognition, and image segmentation. In addition, OpenCV contains essential
    methods for ML. It can be found on GitHub at [https://github.com/opencv/opencv](https://github.com/opencv/opencv).'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenCV**是英特尔于2000年开发的开源库。机器学习主要在计算机视觉任务中使用OpenCV，例如物体分类和检测、人脸识别以及图像分割。此外，OpenCV还包含了机器学习的基本方法。可以在GitHub上找到：[https://github.com/opencv/opencv](https://github.com/opencv/opencv)。'
- en: '**scikit-learn** was one of the early open source libraries in 2009 for image
    augmentation. Part of scikit-learn is written in Cython, a programming language
    that is a superset of Python. One of its crucial benefits is high-performance
    speed, where a NumPy array is used as the image’s structure. It can be found on
    GitHub at [https://github.com/scikit-image/scikit-image](https://github.com/scikit-image/scikit-image).'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**scikit-learn**是2009年早期发布的开源图像增强库之一。部分scikit-learn是用Cython编写的，Cython是一种Python的超集编程语言。其主要优点之一是高性能速度，使用NumPy数组作为图像的结构。可以在GitHub上找到：[https://github.com/scikit-image/scikit-image](https://github.com/scikit-image/scikit-image)。'
- en: '**Mahotas** is an image processing and augmentation library specialized in
    bioimage informatics. Mahotas uses NumPy arrays and is written C++ with a Python
    interface. It was released in 2016\. It can be found on GitHub at [https://github.com/luispedro/mahotas](https://github.com/luispedro/mahotas).'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mahotas**是一个专注于生物图像信息学的图像处理与增强库。Mahotas使用NumPy数组，并且是用C++编写的，提供Python接口。它于2016年发布。可以在GitHub上找到：[https://github.com/luispedro/mahotas](https://github.com/luispedro/mahotas)。'
- en: '**pgmagick**: pgmagick is a GraphicsMagick binding for Python. GraphicsMagick
    is best known for supporting large images in a gigapixel-size range. It was initially
    derived from ImageMagick in 2002\. It can be found on GitHub at [https://github.com/hhatto/pgmagick](https://github.com/hhatto/pgmagick).'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**pgmagick**：pgmagick是Python的GraphicsMagick绑定库。GraphicsMagick最著名的是支持大尺寸图像，达到吉像素级别。它最初源自于2002年的ImageMagick。可以在GitHub上找到：[https://github.com/hhatto/pgmagick](https://github.com/hhatto/pgmagick)。'
- en: No library is better than another, and you can choose to use multiple libraries
    in a project. However, Pluto recommends picking two or three libraries and becoming
    proficient, maybe even an expert, in them.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 没有哪个库比另一个更好，你可以在项目中使用多个库。然而，Pluto建议选择两三个库，并在它们上面精通，甚至成为专家。
- en: Pluto will hide the library or libraries and create a wrapper function, such
    as `draw_image_flip()`, that uses other libraries to perform the transformation.
    The other reason for writing wrapper functions is to switch out the libraries
    and minimize the code changes. Pluto has chosen the **Albumentations**, **Fast.ai**,
    and **PIL** libraries for this chapter as the under-the-hood engine.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto将隐藏库或多个库，并创建一个包装函数，例如`draw_image_flip()`，该函数使用其他库来执行转换。编写包装函数的另一个原因是切换库并尽量减少代码更改。Pluto在本章中选择了**Albumentations**、**Fast.ai**和**PIL**库作为幕后引擎。
- en: 'You have two options: creating image augmentation dynamically per batch or
    statically. When doing this statically, also known as pre-processing, you create
    and save the augmented pictures in your local or cloud drive.'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 你有两种选择：每批次动态地创建图像增强，或静态创建。当采用静态方法时，也称为预处理，你需要在本地或云驱动器中创建并保存增强后的图像。
- en: For this chapter, Pluto has chosen to augment the image dynamically because,
    depending on the combinations of filters, you can generate over a million acceptable
    altered pictures. The only difference between the two methods is that the pre-processing
    method saves the augmented photos in local or cloud drives while the dynamic method
    does not.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，Pluto选择动态增强图像，因为根据滤镜的组合，你可以生成超过一百万张合格的变化图像。这两种方法的唯一区别是，预处理方法将增强后的图像保存到本地或云驱动器，而动态方法则不保存。
- en: Fun challenge
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Here is a thought experiment: should you select an augmentation library with
    more augmented methods over a library that runs on GPU? Hint: think about the
    goal of your project and its disk and time resources.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个思维实验：你应该选择一个拥有更多增强方法的增强库，还是选择一个支持GPU的库？提示：考虑你的项目目标以及其磁盘和时间资源。
- en: Let’s begin writing code for the geometric transformation filters.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始为几何变换滤镜编写代码。
- en: Geometric transformation filters
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 几何变换滤镜
- en: Pluto can write Python code for many geometric transformation filters, and he
    will select two or three image datasets to illustrate each concept. In addition,
    by using multiple image subjects, he can discover the safe level. The range for
    the safe level is subjective, and you may need to consult a domain subject expert
    to know how far to distort the photo. When convenient, Pluto will write the same
    method using different libraries.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto可以编写许多几何变换滤镜的Python代码，他将选择两个或三个图像数据集来说明每个概念。此外，通过使用多个图像主题，他可以发现安全级别。安全级别的范围是主观的，您可能需要咨询领域专家，以了解照片应扭曲到什么程度。在方便的情况下，Pluto会使用不同的库编写相同的方法。
- en: Let’s get started with flipping images.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始翻转图像吧。
- en: Flipping
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 翻转
- en: 'Pluto will begin with the simplest filter: the horizontal flip. It mirrors
    the image, or in other words, it flips the photo along the Y-axis. The wrapper
    function is called `draw_image_flip()`. All image augmentation methods are prefixed
    with `draw_image_` as this makes it easy for Pluto to remember them. In addition,
    he can use the Python Notebook auto-complete typing feature. By typing `pluto.draw_im`,
    a popup menu containing all the filter functions will be displayed.'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto将从最简单的滤镜开始：水平翻转。它会镜像图像，换句话说，它沿Y轴翻转照片。包装函数被称为`draw_image_flip()`。所有的图像增强方法都以`draw_image_`为前缀，这样方便Pluto记住它们。此外，他可以使用Python
    Notebook的自动完成输入功能。通过输入`pluto.draw_im`，将弹出一个包含所有滤镜函数的菜单。
- en: 'In the `draw_image_flip_pil()` function, when using the PIL library, the relevant
    code line is as follows:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在`draw_image_flip_pil()`函数中，使用PIL库时，相关代码行如下：
- en: '[PRE10]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Thus, Pluto selects an image from the People dataset and flips it using the
    following code:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Pluto从人物数据集中选择一张图像，并使用以下代码进行翻转：
- en: '[PRE11]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The result is as follows, with the original image at the top and the flip image
    at the bottom:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下，原始图像位于顶部，翻转后的图像位于底部：
- en: '![Figure 3.10 – Horizontal flip using the PIL library](img/B17990_03_10.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![图3.10 – 使用PIL库进行水平翻转](img/B17990_03_10.jpg)'
- en: Figure 3.10 – Horizontal flip using the PIL library
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10 – 使用PIL库进行水平翻转
- en: Rather than viewing one image at a time, it is more advantageous to examine
    the entire dataset one batch at a time. This is because a filter may be applicable,
    or the **safe** range is acceptable for one image but not for another in the same
    dataset. The **F****ast.ai** library has the data-batch class that supports many
    ML functions, including accepting a transformation method and displaying a random
    collection of pictures, also known as displaying a batch.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 与一次查看一张图片不同，一次查看整个数据集的一个批次更有利。这是因为一个滤镜可能适用于一张图像，或者**安全**范围对于某一张图像可接受，但对于同一数据集中的另一张图像则不可接受。**Fast.ai**库有一个数据批处理类，支持许多机器学习功能，包括接受转换方法并显示一组随机图片，这也叫做显示一个批次。
- en: 'Pluto will write two new methods: `_make_data_loader()`, which is a helper
    function for creating the `draw_image_flip()` function, which encodes the transformation
    for horizontal flip and displays the image batch using the data-loader `show_batch()`
    method.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto将编写两个新方法：`_make_data_loader()`，这是一个辅助函数，用于创建`draw_image_flip()`函数，该函数对水平翻转进行编码并使用数据加载器`show_batch()`方法显示图像批次。
- en: '`show_batch()` will select a random set of pictures to display, where `max_n`
    sets the number of images in a bunch. The Fast.ai transformation, by default,
    performs the modification at 75% probability. In other words, three out of four
    images in the dataset will be transformed.'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '`show_batch()`将随机选择一组图片进行显示，其中`max_n`设置每批图片的数量。Fast.ai的转换默认以75%的概率进行修改。换句话说，数据集中的四张图像中有三张会被转换。'
- en: 'The horizontal flip filter has no safe level, regardless of whether it applies
    to the image set. Pluto will use the `draw_image_flip()` method with the `aug`
    value, is different. The entirety of the flip wrapper code is as follows:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 水平翻转滤镜没有安全级别，无论它是否适用于图像集。Pluto将使用`draw_image_flip()`方法并设置`aug`值，这有所不同。整个翻转包装器代码如下：
- en: '[PRE12]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The definition of the `aug` variable differs from one wrapper function to another.
    Pluto needs to run a function on the Python Notebook for the People dataset with
    the following code:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`aug`变量的定义因包装函数不同而有所不同。Pluto需要在Python Notebook中运行一个针对人物数据集的函数，代码如下：'
- en: '[PRE13]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The result is as follows:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![ Figure 3.11 – Horizontal flip on the People dataset](img/B17990_03_11.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图3.11 – 人物数据集上的水平翻转](img/B17990_03_11.jpg)'
- en: Figure 3.11 – Horizontal flip on the People dataset
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11 – 人物数据集上的水平翻转
- en: Fun fact
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 趣味小知识
- en: The complete fully functional object-oriented code can be found in the Python
    Notebook. You can hack it to show flip, rotate, tilt, and dozens of other augmentation
    techniques.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的面向对象代码可以在 Python Notebook 中找到。您可以入侵以显示翻转、旋转、倾斜和其他几十种增强技术。
- en: 'To ensure the horizontal flip is acceptable, you can repeatedly run the `draw_image_flip()`
    function in the Python Notebook to see a collection of varying image batches.
    Horizontal flip is a safe filter for fungi, sea animals, food, and mall crowd
    pictures. Common sense dictates that you wouldn’t expect otherwise. Here is the
    command for the Fungi dataset:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 要确保水平翻转可接受，您可以在 Python Notebook 中重复运行 `draw_image_flip()` 函数，以查看各种不同的图像批次。水平翻转适用于菌类、海洋动物、食物和商场人群的图片。常识告诉我们，不会有其他预期。以下是菌类数据集的命令：
- en: '[PRE14]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The result is as follows:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.12 – Horizontal flip on the Fungi dataset](img/B17990_03_12.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.12 – 菌类数据集的水平翻转](img/B17990_03_12.jpg)'
- en: Figure 3.12 – Horizontal flip on the Fungi dataset
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12 – 菌类数据集的水平翻转
- en: 'For medical images, such as the Covid-19 photos, you need a domain expert to
    confirm that flipping horizontally does not change the image’s integrity. It does
    not make any difference to the layman, but it can be deceptively wrong and might
    create a **false-positive** or **false-negative** prediction. Here is the command
    for it:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 对于医学图像，如 Covid-19 照片，您需要专业领域的专家确认水平翻转不会改变图像的完整性。对于外行人来说，这没有任何区别，但可能会产生误报或漏报。以下是相应的命令：
- en: '[PRE15]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The result is as follows:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.13 – Horizontal flip on the Covid-19 dataset](img/B17990_03_13.jpg)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.13 – Covid-19 数据集的水平翻转](img/B17990_03_13.jpg)'
- en: Figure 3.13 – Horizontal flip on the Covid-19 dataset
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.13 – Covid-19 数据集的水平翻转
- en: Notice that the Fast.ai transformation cropped the images center square. Therefore,
    in some pictures, content is lost – for example, a picture of a woman with most
    of her face missing. This is because Fast.ai is for ML, so the images need to
    be square. The default behavior is a center square crop.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Fast.ai 转换裁剪了图像的中心正方形。因此，在某些图片中，内容会丢失 – 例如，一个大部分面部缺失的女性照片。这是因为 Fast.ai 用于机器学习，所以图像需要是正方形的。默认行为是中心正方形裁剪。
- en: Before Pluto can start cropping and padding, he must complete the flipping filter
    by combining horizontal flipping with vertical flipping. The people, Covid-19,
    fungi, and mall crowd pictures cannot be flipped vertically, but the sea animals
    and food pictures can.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在冥王星开始裁剪和填充之前，他必须通过将水平翻转与垂直翻转结合起来来完成翻转过滤器。人群、Covid-19、菌类和商场人群图片不能垂直翻转，但海洋动物和食品图片可以。
- en: 'For this, Pluto needs to create the `draw_image_flip_both()` method, with the
    transformation set to the following:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此操作，冥王星需要创建 `draw_image_flip_both()` 方法，并将转换设置为以下内容：
- en: '[PRE16]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, Pluto must run the function on the People dataset with the following code:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，冥王星必须使用以下代码在人群数据集上运行该函数：
- en: '[PRE17]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The result is as follows:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.14 – Unsafe horizontal and vertical flips on the People dataset](img/B17990_03_14.jpg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.14 – 人群数据集的不安全水平和垂直翻转](img/B17990_03_14.jpg)'
- en: Figure 3.14 – Unsafe horizontal and vertical flips on the People dataset
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.14 – 人群数据集的不安全水平和垂直翻转
- en: 'He can apply the same function to the food pictures, as follows:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 他可以将同样的函数应用于食品图片，如下所示：
- en: '[PRE18]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The result is as follows:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.15 – Safe horizontal and vertical flips on the food dataset](img/B17990_03_15.jpg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.15 – 食品数据集的安全水平和垂直翻转](img/B17990_03_15.jpg)'
- en: Figure 3.15 – Safe horizontal and vertical flips on the food dataset
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.15 – 食品数据集的安全水平和垂直翻转
- en: Fun fact
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: Pluto loves to play the same game over and over again. You know, because he
    is a dog. :-) Thus, you can ask Pluto to run any wrapper functions repeatedly
    on the Python Notebook to see a different set of image batches from the data stored
    in pandas. Each real-world image dataset contains thousands of photos, and each
    batch displays 15 images; therefore, you must run the wrapper functions repeatedly
    to have a good mental picture of the dataset.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 冥王星喜欢一遍又一遍地玩同一个游戏。你知道，因为他是一只狗。:-) 因此，您可以要求冥王星在 Python Notebook 上重复运行任何包装函数，以查看存储在
    pandas 中的数据的不同图像批次。每个现实世界的图像数据集包含数千张照片，每批显示 15 张图片；因此，您必须重复运行包装函数，以对数据集有一个良好的思维图像。
- en: The next filters we will look at are for cropping and padding.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将看看裁剪和填充的过滤器。
- en: Cropping and padding
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 裁剪和填充
- en: 'Reusing the same process as when writing the flipping filter, Pluto can write
    the `draw_image_crop()` method. The one new code line uses a different item transformation:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 复用与编写翻转过滤器时相同的过程，Pluto 可以编写 `draw_image_crop()` 方法。新的代码行使用了不同的项变换：
- en: '[PRE19]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The padding mode can be **zeros**, which means the padding color is black, **border**,
    which means the padding repeats the border pixel, or **reflection**, which means
    padding is mirrored from the picture.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 填充模式可以是**零填充**，即填充颜色为黑色；**边框填充**，即填充重复边缘像素；或者**镜像填充**，即填充内容为图片的镜像。
- en: After much trial and error on the Python Notebook, Pluto found the safe range
    for cropping and padding for each of the six datasets. Before moving on, Pluto
    encourages you to use the Python Notebook to find the best safe parameter.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 经过多次尝试和调整，Pluto 在 Python Notebook 中找到了每个六个数据集的安全裁剪和填充范围。在继续之前，Pluto 鼓励你使用 Python
    Notebook 找出最佳安全参数。
- en: 'Pluto found that the safe setting for the people data is using a cropped image
    size of 640 and pad mode on the border:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 发现对于 people 数据集的安全设置是裁剪后的图像大小为 640，并使用边框填充模式：
- en: '[PRE20]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The result is as follows:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.16 – Horizontal and vertical flip on the People dataset](img/B17990_03_16.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.16 – 对 People 数据集进行水平和垂直翻转](img/B17990_03_16.jpg)'
- en: Figure 3.16 – Horizontal and vertical flip on the People dataset
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.16 – 对 People 数据集进行水平和垂直翻转
- en: 'In terms of the next dataset, Pluto found that the safe setting for the fungi
    images is a cropped image size of 240 and a pad mode of zeros:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一个数据集，Pluto 发现 fungi 图像的安全设置是裁剪后的图像大小为 240，并使用零填充模式：
- en: '[PRE21]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The result is as follows:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: "![Figure 3.17 – Horizontal and vertical flip on the \uFEFFfungi dataset](img/B17990_03_17.jpg)"
  id: totrans-320
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.17 – 对 fungi 数据集进行水平和垂直翻转](img/B17990_03_17.jpg)'
- en: Figure 3.17 – Horizontal and vertical flip on the fungi dataset
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.17 – 对 fungi 数据集进行水平和垂直翻转
- en: 'For the food pictures, Pluto discovered that the safe parameters are a cropped
    image size of 640 and a pad mode of reflection:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 对于食物图片，Pluto 发现安全参数是裁剪后的图像大小为 640，填充模式为镜像填充：
- en: '[PRE22]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The result is as follows:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.18 – Horizontal and vertical flip on the food dataset](img/B17990_03_18.jpg)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.18 – 对食物数据集进行水平和垂直翻转](img/B17990_03_18.jpg)'
- en: Figure 3.18 – Horizontal and vertical flip on the food dataset
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.18 – 对食物数据集进行水平和垂直翻转
- en: Fun challenge
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: Find the safe cropping parameters for all six image datasets. You will get bonus
    points for applying these new functions to the set of images from your project
    or downloading them from the Kaggle website.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 找到所有六个图像数据集的安全裁剪参数。如果你能将这些新功能应用到你项目中的图像集或从 Kaggle 网站下载的图像，你将获得额外的加分。
- en: For the other image datasets, the results are in the Python Notebook. The safe
    parameter is 340 pixels with reflection padding for the sea animals pictures and
    512 pixels with border padding for the mall crowd pictures. A cropping filter
    is not an option for the Covid-19 pictures.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他图像数据集，结果已在 Python Notebook 中。对于海洋动物图像，安全参数为 340 像素，并使用镜像填充；对于商场人群图像，安全参数为
    512 像素，并使用边框填充。Covid-19 图片不适用裁剪过滤器。
- en: Next, Pluto will rotate images, which is similar to flipping.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，Pluto 将进行图像旋转，这与翻转类似。
- en: Rotating
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旋转
- en: Rotation specifies how many degrees to turn the image clockwise or counter-clockwise.
    Since Pluto sets the max rotation value, the actual rotation is a random number
    between the minimum and the maximum value. The minimum default value is zero.
    Therefore, a higher maximum value will generate more augmentation images because
    every time the system fetches a new data batch, a different rotation value is
    chosen. In addition, randomness is the reason for selecting the dynamic augmentation
    option over saving the images to a local disk drive, as in the static option.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转指定图像顺时针或逆时针旋转多少度。由于 Pluto 设置了最大旋转值，因此实际旋转角度是在最小值和最大值之间的一个随机数。最小默认值为零。因此，较高的最大值会生成更多的增强图像，因为每次系统获取新的数据批次时，都会选择不同的旋转值。此外，随机性也是选择动态增强选项而非将图像保存到本地硬盘的原因，就像静态选项那样。
- en: 'For this, Pluto has written the `draw_image_rotate()` method using the `max_rotate
    = max_rotate` transformation parameter, where the second `max_rotate` is the passed-in
    value. The key code line in the wrapper function is as follows:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，Pluto 编写了 `draw_image_rotate()` 方法，使用 `max_rotate = max_rotate` 变换参数，其中第二个
    `max_rotate` 是传入的值。包装函数中的关键代码行如下：
- en: '[PRE23]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Once again, Pluto has arrived at the following safe parameter for rotating after
    much trial and error on the Python Notebook, but don’t take Pluto’s word for it.
    Pluto challenges you to find better safe parameters by experimenting with the
    Python Notebook.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，Pluto 在经过多次试验后，在 Python Notebook 上找到了旋转的安全参数，但不要仅仅相信 Pluto 的说法。Pluto 挑战你通过实验
    Python Notebook 找出更好的安全参数。
- en: 'For the sea animals data, Pluto has arrived at a safe parameter of `180.0`
    for the maximum rotation and reflection for padding. The command in the Python
    Notebook is as follows:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 对于海洋动物数据，Pluto 找到了一个安全的最大旋转参数 `180.0`，并使用反射进行填充。Python Notebook 中的命令如下：
- en: '[PRE24]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The result is as follows:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.19 – Rotation on the sea animals dataset](img/B17990_03_19.jpg)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.19 – 海洋动物数据集上的旋转](img/B17990_03_19.jpg)'
- en: Figure 3.19 – Rotation on the sea animals dataset
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.19 – 海洋动物数据集上的旋转
- en: 'For the people pictures, Pluto has arrived at a safe parameter of `25.0` for
    the maximum rotation and border for padding. The command in the Python Notebook
    is as follows:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 对于人物图片，Pluto 找到了一个安全的最大旋转参数 `25.0`，并使用边框进行填充。Python Notebook 中的命令如下：
- en: '[PRE25]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The result is as follows:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.20 – Rotation on the People dataset](img/B17990_03_20.jpg)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.20 – 人物数据集上的旋转](img/B17990_03_20.jpg)'
- en: Figure 3.20 – Rotation on the People dataset
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.20 – 人物数据集上的旋转
- en: For the other image datasets, the results are in the Notebook. The safe parameters
    are `16.0` maximum rotation with border padding for the mall crowd photos, `45.0`
    maximum rotation with border padding for the fungi pictures, `90.0` maximum rotation
    with reflection padding for the food images, and `12.0` maximum rotation with
    border zeros for the Covid-19 data. I encourage you to extend beyond Pluto’s safe
    range on the Notebook and see what happens to the pictures for yourself.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他图像数据集，结果已记录在 Notebook 中。安全参数为：对于购物中心人群照片，最大旋转角度为 `16.0`，并使用边框填充；对于真菌照片，最大旋转角度为
    `45.0`，并使用边框填充；对于食物图像，最大旋转角度为 `90.0`，并使用反射填充；对于 Covid-19 数据，最大旋转角度为 `12.0`，并使用零边框填充。我鼓励你在
    Notebook 上超出 Pluto 的安全范围进行实验，亲自看看图像会发生什么。
- en: Now, let’s continue with the shifting image theme. The next filter we’ll look
    at is the translation filter.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续探索移动图像的主题。下一个我们要看的滤镜是平移滤镜。
- en: Translation
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 翻译
- en: 'The translation filter shifts the image to the left, right, up, or down. It
    is not one of the commonly used filters. Pluto uses the `ImageChops.offset()`
    method in the `draw_image_shift()` function. A negative horizontal shift value
    moves the image to the left, a positive value moves the image to the right, and
    the vertical shift parameter moves the image up or down. The relevant code line
    in the wrapper function is as follows:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 平移滤镜将图像向左、右、上或下移动。它不是最常用的滤镜之一。Pluto 在 `draw_image_shift()` 函数中使用了 `ImageChops.offset()`
    方法。负的水平偏移值将图像向左移动，正值将图像向右移动，垂直偏移参数将图像向上或向下移动。包装函数中的相关代码行如下：
- en: '[PRE26]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To test the function, Pluto selects a picture and shifts it left by 150 pixels
    and up by 50 pixels. The command is as follows:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试功能，Pluto 选择了一张图片，并将其向左移动 150 像素，向上移动 50 像素。命令如下：
- en: '[PRE27]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The output is as follows:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.21 – Translation using the PIL library; the top image is the original](img/B17990_03_21.jpg)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.21 – 使用 PIL 库进行平移；上图为原图](img/B17990_03_21.jpg)'
- en: Figure 3.21 – Translation using the PIL library; the top image is the original
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.21 – 使用 PIL 库进行平移；上图为原图
- en: The translation filter is seldom used because it is easy to find the safe level
    for one picture but not for the entire dataset.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 平移滤镜很少使用，因为它很容易为一张图片找到安全水平，但对于整个数据集来说却不容易找到。
- en: So far, Pluto has shown you the **flipping**, **cropping**, **padding**, **resizing**,
    **rotating**, and **translation** filters. However, there are many more geometric
    transformation filters, such as for **warping**, **zooming**, **tilting**, and
    **scaling**. Unfortunately, there are too many to cover, but the coding process
    is the same.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，Pluto 已经展示了 **翻转**、**裁剪**、**填充**、**调整大小**、**旋转**和 **平移** 等滤镜。然而，还有许多其他几何变换滤镜，如
    **扭曲**、**缩放**、**倾斜**和 **缩放比例**。不幸的是，种类繁多，无法全部涵盖，但编码过程是相同的。
- en: Fun challenge
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Implement two more geometric transformation techniques, such as warping and
    tilting. Hint: copy and paste from Pluto’s wrapper functions and change the `aug`
    and `item_tfms` variables.'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 实现另外两种几何变换技术，例如扭曲和倾斜。提示：从 Pluto 的包装函数中复制并粘贴，修改 `aug` 和 `item_tfms` 变量。
- en: Moving from geometric to photometric transformations follows the same coding
    process. First, Pluto writes the wrapper functions using the Albumentations library,
    then uses the real-world image dataset to test them.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 从几何变换到光度变换遵循相同的编码过程。首先，Pluto 使用 Albumentations 库编写包装函数，然后使用实际的图像数据集进行测试。
- en: Photographic transformations
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摄影变换
- en: Pluto chose the Albumentations library to power the photometric transformations.
    The primary reasons are that the **Albumentations** library has over 70 filters,
    and you can integrate it into the **Fast.ai** framework. Fast.ai has most of the
    basic photometric filters, such as hue shifting, contrast, and lighting, but only
    Albumentations has more exotic filters, such as those for adding rain, motion
    blur, and FancyPCA. Be careful when using fancy filters. Even though they are
    easy to implement, you should research AI scholarly published papers to see if
    the filter is beneficial for achieving a higher accuracy rate.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 选择了 Albumentations 库来支持光度变换。主要原因是 **Albumentations** 库提供了超过 70 种滤镜，而且可以将其集成到
    **Fast.ai** 框架中。Fast.ai 提供了大多数基本的光度滤镜，例如色调偏移、对比度和光照调整，但只有 Albumentations 提供了更多复杂的滤镜，比如添加雨、运动模糊和
    FancyPCA。使用这些高级滤镜时要小心。虽然它们很容易实现，但你应该查阅 AI 学术论文，了解这些滤镜是否对提高准确率有所帮助。
- en: 'As with the geometric transformations coding process, Pluto creates the base
    method and writes the wrapper function for each photometric transformation. The
    `_draw_image_album()` method is used to select a sample set of images from the
    data, convert it into a `numpy` array, do the transformation, and display them
    in batch mode. The pertinent code for the `_draw_image_album()` function is as
    follows:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 与几何变换的编码过程一样，Pluto 创建基础方法并为每个光度变换编写包装函数。`_draw_image_album()` 方法用于从数据中选择一个样本集，将其转换为
    `numpy` 数组，执行变换，并以批处理模式显示它们。`_draw_image_album()` 函数的相关代码如下：
- en: '[PRE28]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The wrapper function code is straightforward. For example, the code for the
    brightness filter is as follows:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 包装函数的代码很简单。例如，亮度滤镜的代码如下：
- en: '[PRE29]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Fun fact
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 趣味小知识
- en: For any of the Albumentations functions, you can append a question mark (`?`)
    and run the code cell to see the documentation in the Python Notebook; for example,
    `albumentations.ColorJitter?`. Append two question marks (`??`) to see the function’s
    Python source code; for example, `albumentations.ColorJitter??`. A bonus fun fact
    is that Albumentations types are followed by a dot – for example, `albumentations.`
    – in the Python Notebook and wait for a second. A list of all the available functions
    appears in a drop-down list, where you can choose one. In other words, the Python
    Notebook has auto-complete typing.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何 Albumentations 函数，你可以在函数后附加一个问号 (`?`)，并运行代码单元来查看 Python Notebook 中的文档；例如，`albumentations.ColorJitter?`。附加两个问号
    (`??`) 可以查看该函数的 Python 源代码；例如，`albumentations.ColorJitter??`。一个有趣的事实是，Albumentations
    类型后面跟着一个点——例如，`albumentations.`——然后稍等片刻。在下拉列表中会显示所有可用的函数，你可以选择其中一个。换句话说，Python
    Notebook 支持自动完成功能。
- en: The definition of the `aug_albm` variable differs from one wrapper function
    to another. Let’s test out the brightness filter.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '`aug_albm` 变量的定义因包装函数而异。让我们来测试一下亮度滤镜。'
- en: Brightness
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 亮度
- en: 'It isn’t easy to view most of the photometric transformations in grayscale
    because you are reading them in a book. That is more reason for joining Pluto
    with coding in the Notebook as you can see color. Rather than showing you all
    optimal safe parameters for each filter, Pluto will show you the *unsafe* range
    for one dataset and a safe parameter for the other dataset. The key code line
    for brightness in the wrapper function is as follows:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你是在书中阅读，大多数光度变换在灰度下难以查看。这更加强调了将 Pluto 与 Notebook 中的编码结合起来的重要性，因为你可以看到颜色。Pluto
    不会为每个滤镜显示所有最佳的安全参数，而是会展示一个数据集的 *不安全* 范围和另一个数据集的安全参数。包装函数中与亮度相关的关键代码行如下：
- en: '[PRE30]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'You can see the mistake in this book by exaggerating the brightness – for example,
    if it’s too bright or too dark. Once again, you should look at the Notebook to
    see the brightness effects in color. For the people photos, the *unsafe* value
    is a brightness equal to `1.7`. Pluto runs the following command on the Python
    Notebook:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过夸大亮度来看到书中的错误——例如，如果图像过亮或过暗。再次提醒，应该在 Notebook 中查看亮度效果的颜色。对于人物照片，*不安全* 的值是亮度等于
    `1.7`。Pluto 在 Python Notebook 中运行以下命令：
- en: '[PRE31]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The output is as follows:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.22 – Unsafe brightness level for the People dataset](img/B17990_03_22.jpg)'
  id: totrans-376
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.22 – 人物数据集的不安全亮度水平](img/B17990_03_22.jpg)'
- en: Figure 3.22 – Unsafe brightness level for the People dataset
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.22 – 人物数据集的不安全亮度水平
- en: The People dataset does not have any objective. Therefore, it is challenging
    to find safe parameters. If the goal is as simple as classifying people’s ages,
    the brightness level can be relatively high, but without knowing the intended
    use of the dataset, you don’t know how much to distort the pictures.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 人物数据集没有明确的目标。因此，找出安全的参数较为困难。如果目标仅仅是分类人们的年龄，亮度水平可以相对较高，但在不知道数据集的预期用途的情况下，你无法知道应该扭曲多少图片。
- en: 'Pluto found that the safe brightness value for the food dataset is `0.3`, but
    it may not be easy to see the effects in this book. Here is the command that he
    used on the Python Notebook:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto发现食品数据集的安全亮度值为`0.3`，但在本书中可能不容易看到效果。以下是他在Python Notebook中使用的命令：
- en: '[PRE32]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The output is as follows:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.23 – Safe brightness level for the food dataset](img/B17990_03_23.jpg)'
  id: totrans-382
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.23 – 食品数据集的安全亮度水平](img/B17990_03_23.jpg)'
- en: Figure 3.23 – Safe brightness level for the food dataset
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.23 – 食品数据集的安全亮度水平
- en: The brightness level for the other four datasets is similar. Pluto has left
    it up to you to experiment and find the safe level in the Python Notebook. The
    Covid-19 images are in grayscale, and the intent is to predict Covid-19 patients
    from their chest X-ray photos. A decrease or increase in the brightness level
    may result in a false-positive or false-negative prediction. You should consult
    with the domain experts to confirm the safe parameters for Covid-19 images.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 其他四个数据集的亮度水平类似。Pluto将实验的任务交给你，你可以在Python Notebook中尝试并找到安全的亮度水平。Covid-19图像是灰度图像，目的是通过胸部X光照片预测Covid-19患者。亮度水平的增加或减少可能导致假阳性或假阴性预测。你应该与领域专家咨询，以确认Covid-19图像的安全参数。
- en: The grayscale filter wasn’t discussed in the first half of this chapter, but
    it is similar to the brightness filter.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 本章前半部分没有讨论灰度滤镜，但它与亮度滤镜相似。
- en: Grayscale
  id: totrans-386
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 灰度
- en: A few scholarly papers describe the benefit of grayscale, such as *Data Augmentation
    Methods Applying Grayscale Images for Convolutional Neural Networks in Machine
    Vision*, by Jinyeong Wang and Sanghwan Lee in 2021 from the Department of *Mechanical
    Convergence Engineering, Hanyang University, Seoul 04763, Korea*. The paper explains
    the effective data augmentation method for grayscale images in CNN-based machine
    vision with mono cameras.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 一些学术论文描述了灰度的好处，例如2021年由Jinyeong Wang和Sanghwan Lee在《*Data Augmentation Methods
    Applying Grayscale Images for Convolutional Neural Networks in Machine Vision*》一文中提出，来自韩国首尔汉阳大学机械融合工程系（Hanyang
    University, Seoul 04763, Korea）。该论文解释了在基于卷积神经网络（CNN）和单目摄像头的机器视觉中，应用灰度图像的数据增强方法。
- en: 'In the `draw_image_grayscale()` method, Pluto uses the Albumentations library
    function as follows:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在`draw_image_grayscale()`方法中，Pluto使用了如下的Albumentations库函数：
- en: '[PRE33]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The fungi dataset aims to classify whether a mushroom is edible or poisonous,
    and the mushroom’s color significantly affects the classification. Therefore,
    converting into grayscale is not advisable. Nevertheless, Pluto illustrates the
    grayscale filter with the following command:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 真菌数据集的目标是分类蘑菇是可食用的还是有毒的，而蘑菇的颜色会显著影响分类。因此，转换为灰度图像是不建议的。然而，Pluto通过以下命令演示了灰度滤镜：
- en: '[PRE34]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The output is as follows:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.24 – Unsafe use of grayscale on the fungi dataset](img/B17990_03_24.jpg)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.24 – 在真菌数据集上不安全的灰度使用](img/B17990_03_24.jpg)'
- en: Figure 3.24 – Unsafe use of grayscale on the fungi dataset
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.24 – 在真菌数据集上不安全的灰度使用
- en: 'The mall crowd dataset’s goal is to estimate the crowd size in a shopping mall.
    Thus, converting the photos into grayscale should not affect the prediction. Pluto
    runs the following command:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 商场人群数据集的目标是估计商场内的人员数量。因此，将照片转换为灰度图像不应影响预测。Pluto执行了以下命令：
- en: '[PRE35]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The results are as follows:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.25 – Safe use of grayscale on the mall crowd dataset](img/B17990_03_25.jpg)'
  id: totrans-398
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.25 – 在商场人群数据集上安全使用灰度](img/B17990_03_25.jpg)'
- en: Figure 3.25 – Safe use of grayscale on the mall crowd dataset
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.25 – 在商场人群数据集上安全使用灰度
- en: Pluto left the other four datasets for you to experiment with to determine whether
    it is safe to use the grayscale filter. After you use the Python Notebook to explore
    these datasets, come back here, where we will examine the contrast, saturation,
    and hue-shifting filters.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 已为你留下了其他四个数据集，你可以实验并确定是否可以安全使用灰度滤镜。使用 Python Notebook 探索这些数据集后，回来这里，我们将一起研究对比度、饱和度和色相偏移滤镜。
- en: Contrast, saturation, and hue shifting
  id: totrans-401
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对比度、饱和度和色相偏移
- en: The contrast, saturation, and hue-shifting filters are beneficial. They are
    proven to aid in training AI models to achieve a higher accuracy rate, such as
    in the *Improving Deep Learning using Generic Data Augmentation* scholarly paper
    by Luke Taylor and Geoff Nitschke, published in 2017 by the *Arxiv* website.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 对比度、饱和度和色相偏移滤镜是有益的。它们已被证明有助于训练 AI 模型，从而提高准确率，例如 Luke Taylor 和 Geoff Nitschke
    于 2017 年在 *Arxiv* 网站上发布的学术论文《*Improving Deep Learning using Generic Data Augmentation*》中就有论述。
- en: 'The code for the contrast, saturation, and hue-shifting wrapper functions is
    straightforward with the Albumentations library. Let’s take a look:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 对比度、饱和度和色相偏移的包装函数代码在 Albumentations 库中非常简单。我们来看看：
- en: '[PRE36]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Pluto has exaggerated the *unsafe* value so that you can see the results in
    this book. The *unsafe* parameter for contrast in the sea animals dataset is as
    follows:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 已将 *不安全* 值夸大，以便你能在本书中看到结果。海洋动物数据集中对比度的 *不安全* 参数如下：
- en: '[PRE37]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output is as follows:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.26 – Unsafe use of contrast on the sea animals dataset](img/B17990_03_26.jpg)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.26 – 在海洋动物数据集上不安全使用对比度](img/B17990_03_26.jpg)'
- en: Figure 3.26 – Unsafe use of contrast on the sea animals dataset
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.26 – 在海洋动物数据集上不安全使用对比度
- en: 'The *unsafe* parameter for saturation in the food dataset is as follows:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 食品数据集中饱和度的 *不安全* 参数如下：
- en: '[PRE38]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The output is as follows:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.27 – Unsafe use of saturation on the food dataset](img/B17990_03_27.jpg)'
  id: totrans-413
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.27 – 在食品数据集上不安全使用饱和度](img/B17990_03_27.jpg)'
- en: Figure 3.27 – Unsafe use of saturation on the food dataset
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.27 – 在食品数据集上不安全使用饱和度
- en: 'The *unsafe* parameter for hue shifting in the People dataset is as follows:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 人物数据集中色相偏移的 *不安全* 参数如下：
- en: '[PRE39]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The output is as follows:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.28 – Unsafe use of hue shifting on the People dataset](img/B17990_03_28.jpg)'
  id: totrans-418
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.28 – 在人物数据集上不安全使用色相偏移](img/B17990_03_28.jpg)'
- en: Figure 3.28 – Unsafe use of hue shifting on the People dataset
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.28 – 在人物数据集上不安全使用色相偏移
- en: Contrast, saturation, and hue shifting apply to five of the image datasets,
    and the key is to find the safe range for each dataset. The exception is the medical
    images – the Covid-19 photos. You need to consult a domain expert to see how much
    you can distort the images and retain their integrity.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 对比度、饱和度和色相偏移适用于五个图像数据集，关键是找到每个数据集的安全范围。例外的是医学图像——Covid-19 照片。你需要咨询领域专家，以了解你可以在多大程度上扭曲图像而保持其完整性。
- en: Fun challenge
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Here is a thought experiment: can you think of an image category that would
    safely use hue shifting? In other words, in what photo subject can you shift the
    hue value and not compromise the image’s integrity? Hint: think of an animal that
    hunts by sonar or heat source.'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个思想实验：你能想到一个可以安全使用色相偏移的图像类别吗？换句话说，在哪种照片主题中，你可以改变色相值而不损害图像的完整性？提示：想想通过声纳或热源捕猎的动物。
- en: The next filter we’ll cover is the noise injection filter, which can be easily
    recognized in this book’s grayscale photos.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将介绍噪声注入滤镜，它可以在本书的灰度图像中轻松识别。
- en: Noise injection
  id: totrans-424
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 噪声注入
- en: Noise injection is a strange filter because it is counterintuitive. Image augmentation
    distorts the original pictures within a safe limit, but injecting noise into a
    photo causes the images to degrade deliberately.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 噪声注入是一个奇怪的滤镜，因为它是反直觉的。图像增强在安全范围内扭曲原始图像，但向照片中注入噪声会故意使图像退化。
- en: 'The scholarly paper *Data Augmentation in Training CNNs: Injecting Noise to
    Images*, by Murtaza Eren Akbiyik, published in 2019, and reviewed at the *ICLR
    2020 Conference*, analyzes the effects of adding or applying different noise models
    of varying magnitudes to CNN architectures. It shows that noise injection provides
    a better understanding of optimal learning procedures for image classification.'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 'Murtaza Eren Akbiyik 于 2019 年发布的学术论文《*Data Augmentation in Training CNNs: Injecting
    Noise to Images*》，并在 *ICLR 2020 Conference* 上进行了评审，分析了将不同噪声模型应用于 CNN 架构的效果。论文显示，噪声注入有助于更好地理解图像分类的最佳学习程序。'
- en: 'For the `draw_image_noise()` wrapper method, Pluto uses the Albumentation’s
    Gaussian noise method, as follows:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`draw_image_noise()`封装方法，Pluto使用了Albumentation的高斯噪声方法，如下所示：
- en: '[PRE40]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Pluto bumps the noise level to the extreme for the exaggerated *unsafe* case.
    The command in the Python Notebook is as follows:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto将噪声水平提升到极限，用于夸张的*不安全*案例。Python笔记本中的命令如下：
- en: '[PRE41]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output is as follows:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.29 – Unsafe use of noise injection on the fungi dataset](img/B17990_03_29.jpg)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
  zh: '![图3.29 – 在真菌数据集上不安全使用噪声注入](img/B17990_03_29.jpg)'
- en: Figure 3.29 – Unsafe use of noise injection on the fungi dataset
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.29 – 在真菌数据集上不安全使用噪声注入
- en: 'Since the goal of the mall crowd dataset is to estimate the crowd size, adding
    some noise to the image is acceptable. Pluto found that the *safe* noise level
    is from about `200` to `400`. The command is as follows:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 由于商场人群数据集的目标是估计人群数量，因此在图像中加入一些噪声是可以接受的。Pluto发现，*安全*的噪声水平大约在`200`到`400`之间。命令如下：
- en: '[PRE42]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The result is as follows:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.30 – Safe use of noise injection on the mall crowd dataset](img/B17990_03_30.jpg)'
  id: totrans-437
  prefs: []
  type: TYPE_IMG
  zh: '![图3.30 – 在商场人群数据集上安全使用噪声注入](img/B17990_03_30.jpg)'
- en: Figure 3.30 – Safe use of noise injection on the mall crowd dataset
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.30 – 在商场人群数据集上安全使用噪声注入
- en: Fun challenge
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: Here is both a thought and a hands-on experiment. Can you define a set of ranges
    for each image augmentation that applies to a specific image topic, such as landscape,
    birds, or house appliances? If you think that is possible, can you write a Python
    function that uses Pluto’s wrapper functions?
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个思考和动手实验。你能为每种图像增强定义一个适用于特定图像主题（如风景、鸟类或家用电器）的范围吗？如果你认为这可能，能否编写一个使用Pluto封装函数的Python函数？
- en: This is when Pluto begins experimenting with more exotic filters, but he limits
    his choices to the image augmentation methods studied in published scholarly papers.
    The next two filters we will look at are the rain and sun flare filters.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Pluto开始尝试更为异域的滤镜时，但他将选择限制在已发表学术论文中研究过的图像增强方法。接下来我们将看两个滤镜：雨和阳光光晕滤镜。
- en: Rain and sun flare
  id: totrans-442
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 雨和阳光光晕
- en: In image augmentation, rain and sun flare effects are not widely used in AI.
    However, it is an acceptable option if the image domain is landscape or cityscape.
    The rain and sun flare implementations are simplistic because they are optimized
    for speed over a realistic depiction of rain or sun flare.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 在图像增强中，雨和阳光光晕效果在AI中并不广泛使用。然而，如果图像领域是风景或城市风景，则这是一个可接受的选择。雨和阳光光晕的实现相对简单，因为它们优化的是速度，而非雨或阳光光晕的逼真表现。
- en: 'If you require a natural rain effect, then you can refer to a paper that presents
    a new approach to synthesizing realistic rainy scenes using a **generative adversarial
    network** (**GAN**): *Synthesized Rain Images for Deraining Algorithms*, by Jaewoong
    Choi, Dae Ha Kim, Sanghyuk Lee, Sang Hyuk Lee, and Byung Cheol Song, published
    in 2022 in *Neurocomputing* *Volume 492*.'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要自然的雨效果，可以参考一篇提出使用**生成对抗网络**（**GAN**）合成逼真雨景的新方法的论文：《合成雨图像用于去雨算法》，由Jaewoong
    Choi、Dae Ha Kim、Sanghyuk Lee、Sang Hyuk Lee和Byung Cheol Song于2022年在*Neurocomputing*
    *第492卷*上发表。
- en: The realistic rendering will take some time. Therefore, you should use the pre-processing
    augmentation method, which generates the images and saves them to local or cloud
    disk storage, before training the AI model.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 由于逼真渲染需要一些时间，因此你应使用预处理增强方法，该方法生成图像并将其保存到本地或云磁盘存储中，然后再训练AI模型。
- en: 'Pluto does not have access to the GAN method, so he uses the Albumentations
    library for dynamically generating the effects. The key code inside the `draw_image_rain()`,
    and `draw_image_sunflare()` wrapper functions is as follows:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto无法使用GAN方法，因此他使用Albumentations库来动态生成效果。`draw_image_rain()`和`draw_image_sunflare()`封装函数中的关键代码如下：
- en: '[PRE43]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Pluto exaggerates the effects of the sun flare filter to an *unsafe* level.
    The command is as follows:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto将阳光光晕滤镜的效果夸大到*不安全*的水平。命令如下：
- en: '[PRE44]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The output is as follows:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.31 – Unsafe use of the sun flare filter on the People dataset](img/B17990_03_31.jpg)'
  id: totrans-451
  prefs: []
  type: TYPE_IMG
  zh: '![图3.31 – 在人群数据集上不安全使用阳光光晕滤镜](img/B17990_03_31.jpg)'
- en: Figure 3.31 – Unsafe use of the sun flare filter on the People dataset
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.31 – 在人群数据集上不安全使用阳光光晕滤镜
- en: 'Pluto discovered that the *safe* level for the fungi dataset is a radius of
    `120`, with a `flare-roi` of `(0, 0, 1)`. The command is as follows:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto发现，*安全*的真菌数据集噪声水平是`120`的半径，`flare-roi`为`(0, 0, 1)`。命令如下：
- en: '[PRE45]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The output is as follows:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.32 – Safe use of the sun flare filter on the fungi dataset](img/B17990_03_32.jpg)'
  id: totrans-456
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.32 – 在真菌数据集上安全使用太阳耀斑滤镜](img/B17990_03_32.jpg)'
- en: Figure 3.32 – Safe use of the sun flare filter on the fungi dataset
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.32 – 在真菌数据集上安全使用太阳耀斑滤镜
- en: 'For the People dataset, Pluto found that the safe parameter is a `drop_length`
    equal to `20`, a `drop_width` equal to `1`, and a `blur_value` equal to `1`:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 People 数据集，Pluto 发现安全参数是 `drop_length` 等于 `20`，`drop_width` 等于 `1`，`blur_value`
    等于 `1`：
- en: '[PRE46]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The result is as follows:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.33 – Safe use of the rain filter on the People dataset](img/B17990_03_33.jpg)'
  id: totrans-461
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.33 – 在 People 数据集上安全使用雨滤镜](img/B17990_03_33.jpg)'
- en: Figure 3.33 – Safe use of the rain filter on the People dataset
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.33 – 在 People 数据集上安全使用雨滤镜
- en: 'Many more photometric transformations are available; for example, Albumentations
    has over 70 image filters. However, for now, Pluto will present two more effects:
    the Sepia and FancyPCA filters.'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他光度变换可用；例如，Albumentations 提供了超过 70 种图像滤镜。然而，目前 Pluto 将展示两个其他效果：褐色和 FancyPCA
    滤镜。
- en: Sepia and FancyPCA
  id: totrans-464
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 褐色和 FancyPCA
- en: Sepia involves altering the color tone to a brownish color. This brown is the
    color of cuttlefish ink, and the result gives the effect of old or aged pictures.
    Fancy **Principal Components Analysis** (**FancyPCA**) color augmentation alters
    the RGB channels’ intensities along the images’ natural variations.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 褐色滤镜涉及将颜色调节为棕色。这种棕色类似于墨鱼墨汁的颜色，效果类似于旧照片或经过岁月洗礼的图片。Fancy **主成分分析** (**FancyPCA**)
    色彩增强会沿着图像的自然变化改变 RGB 通道的强度。
- en: 'A scholarly research paper used the FancyPCA filter to improve DL prediction
    of rock properties in reservoir formations: *Predicting mineralogy using a deep
    neural network and fancy PCA* by Dokyeong Kim, Junhwan Choi, Dowan Kim, and Joongmoo
    Byun, in 2022, presented at the *SEG International Exposition and* *Annual Meeting*.'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 一篇学术研究论文使用 FancyPCA 滤镜提高了深度学习预测储层岩性属性的准确性：2022 年，Dokyeong Kim, Junhwan Choi,
    Dowan Kim 和 Joongmoo Byun 发表的《*使用深度神经网络和 Fancy PCA 预测矿物学*》一文，在 *SEG 国际博览会及年会*
    上展示。
- en: 'For the `draw_image_sepia()` and `draw_image_fancyPCA()` wrapper functions,
    Pluto uses the Albumentations library:'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `draw_image_sepia()` 和 `draw_image_fancyPCA()` 包装函数，Pluto 使用了 Albumentations
    库：
- en: '[PRE47]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'You can see the results in the Python Notebook’s color output images. Pluto
    has chosen the People dataset to experiment with the sepia and FancyPCA filters
    because it has no objective. Assuming the target is to classify people’s age ranges,
    both filters are applicable. For the sepia filter, the command is as follows:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 Python Notebook 的彩色输出图像中看到结果。Pluto 选择 People 数据集来试验褐色和 FancyPCA 滤镜，因为它没有特定目标。假设目标是对人群的年龄范围进行分类，这两个滤镜都适用。对于褐色滤镜，命令如下：
- en: '[PRE48]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The output is as follows:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.34 – Safe use of sepia on the People dataset](img/B17990_03_34.jpg)'
  id: totrans-472
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.34 – 在 People 数据集上安全使用褐色滤镜](img/B17990_03_34.jpg)'
- en: Figure 3.34 – Safe use of sepia on the People dataset
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.34 – 在 People 数据集上安全使用褐色滤镜
- en: 'Pluto overstates the FancyPCA filter to an *unsafe* level by setting the alpha
    value to `5.0`. The command is as follows:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 将 FancyPCA 滤镜的效果提高到一个*不安全*的水平，通过将 alpha 值设置为 `5.0`。命令如下：
- en: '[PRE49]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The result is as follows:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 3.35 – Unsafe use of FancyPCA on the People dataset](img/B17990_03_35.jpg)'
  id: totrans-477
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.35 – 在 People 数据集上不安全使用 FancyPCA](img/B17990_03_35.jpg)'
- en: Figure 3.35 – Unsafe use of FancyPCA on the People dataset
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.35 – 在 People 数据集上不安全使用 FancyPCA
- en: So far, you and Pluto have covered and written many wrapper functions for photometric
    transformations, such as lighting, grayscale, contrast, saturation, hue shifting,
    noise injection, rain, sun flare, sepia, and FancyPCA. Still, there are far more
    image filters in the Albumentations library. Pluto follows the golden image augmentation
    rule for selecting a filter that improves prediction accuracy, as a published
    scholarly paper describes, such as *The Effectiveness of Data Augmentation in
    Image Classification using Deep Learning* paper by **Luis Perez, Jason Wang**,
    published by the *Cornell University Arxiv* in December 2017.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你和 Pluto 已经为光度变换编写了许多包装函数，例如照明、灰度、对比度、饱和度、色调变化、噪声注入、雨、太阳耀斑、褐色和 FancyPCA。但在
    Albumentations 库中还有更多的图像滤镜。Pluto 遵循黄金图像增强法则，选择能够提高预测准确度的滤镜，正如一篇已发布的学术论文所描述的那样，例如
    **Luis Perez, Jason Wang** 所著的《*使用深度学习的图像分类中数据增强的有效性*》一文，发表于 2017 年 12 月的 *Cornell
    University Arxiv*。
- en: Fun challenge
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: 'Here is a thought experiment: there are too many image augmentation techniques
    to count. So, how do you know which augmentation function is suitable to use?
    For example, is the Cinematic Anamorphic photo filter an effective image augmentation
    technique? Hint: think about the subject domain and the processing speed.'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个思维实验：有太多的图像增强技术难以计数。那么，如何知道哪种增强功能适合使用呢？例如，电影变形照片滤镜是否是一种有效的图像增强技术？提示：考虑一下主题领域和处理速度。
- en: Moving away from photographic transformations, next, Pluto will dig into the
    random erasing filter.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 在脱离摄影转换后，接下来，Pluto将深入探讨随机擦除滤镜。
- en: Random erasing
  id: totrans-483
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随机擦除
- en: Random erasing adds a block of noise, while noise injection adds one pixel at
    a time.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 随机擦除添加了一块噪声，而噪声注入则是逐次添加一个像素。
- en: Two recently published papers show that random erasing filters and extended
    random erasing increase the prediction accuracy of the DL model. The first paper
    is called *Random Erasing Data Augmentation*, by Zhun Zhong, Liang Zheng, Guoliang
    Kang, Shaozi Li, and Yi Yang, in 2020, and was presented at the *AAAI Conference
    on Artificial Intelligence*. The second paper is called *Perlin Random Erasing
    for Data Augmentation*, by Murat Saran, Fatih Nar, and Ayşe Nurdan Saran, in 2021,
    and was presented at the 29th *Signal Processing and Communications Applications*
    *Conference (SIU)*.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 两篇最近发表的论文表明，随机擦除滤镜和扩展随机擦除提高了深度学习模型的预测准确性。第一篇论文是2020年由Zhun Zhong、Liang Zheng、Guoliang
    Kang、Shaozi Li和Yi Yang提出的《随机擦除数据增强》（*Random Erasing Data Augmentation*），并在*AAAI人工智能会议*上发表。第二篇论文是2021年由Murat
    Saran、Fatih Nar和Ayşe Nurdan Saran提出的《Perlin随机擦除数据增强》（*Perlin Random Erasing for
    Data Augmentation*），并在第29届*信号处理与通信应用会议*（*Signal Processing and Communications
    Applications Conference*，简称SIU）上发表。
- en: 'Pluto uses the Fast.ai library in the `draw_image_erasing()` wrapper function.
    The pertinent code is as follows:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto在`draw_image_erasing()`封装函数中使用了Fast.ai库。相关代码如下：
- en: '[PRE50]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'It is challenging to find a safe level for random erasing. It depends on the
    image subject, DL base model, and target label. Generally, Pluto selects a random
    erasing safe parameter and trains the AI model. If the DL model is overfitting,
    then he increases the random erasing effects, and if the model’s prediction accuracy
    is diverging, he decreases the random erasing parameters. Here is a safe starting
    point for the food dataset:'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 找到随机擦除的安全级别是具有挑战性的。这取决于图像主题、深度学习基础模型和目标标签。通常，Pluto会选择一个随机擦除安全参数并训练AI模型。如果深度学习模型出现过拟合现象，他会增加随机擦除的效果；如果模型的预测准确性偏离，他会减少随机擦除的参数。以下是食品数据集的安全起点：
- en: '[PRE51]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The output is as follows:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.36 – Unsafe use of FancyPCA on the food dataset](img/B17990_03_36.jpg)'
  id: totrans-491
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.36 – 在食品数据集上不安全地使用FancyPCA](img/B17990_03_36.jpg)'
- en: Figure 3.36 – Unsafe use of FancyPCA on the food dataset
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.36 – 在食品数据集上不安全地使用FancyPCA
- en: So far, Pluto uses one filter at a time. Next, he will combine multiple geographic
    and photographic transformations with random erasing.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Pluto每次只使用一个滤镜。接下来，他将结合多个地理和摄影转换与随机擦除。
- en: Combining
  id: totrans-494
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并
- en: The power of image augmentation is that Pluto can combine multiple image filters
    in one dataset. This increases the number of images for training by a multiplication
    factor.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 图像增强的强大之处在于，Pluto可以将多个图像滤镜合并到一个数据集中。这将通过倍增因子增加训练图像的数量。
- en: Fun fact
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实
- en: The horizontal flip filter’s default is set to 50% probability. The result is
    that the image size increases by half – that is, `total_flip = image_size + (0.5
    * image_size)`. The image size will increase by a multiplication factor when the
    random cropping and padding are added together with a padding mode of 3 – that
    is, `total_2_combine = total_fip + (3 * (image_size + (0.5 * image_size)) + (image_size
    * random_croping_factor))`, where `random_croping_factor` is between zero and
    the safe cropping value, which is less than 1.0.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 水平翻转滤镜的默认概率设为50%。结果是图像大小增加了一半——即`total_flip = image_size + (0.5 * image_size)`。当随机裁剪和填充与填充模式3一起使用时，图像大小将按倍数增加——即`total_2_combine
    = total_flip + (3 * (image_size + (0.5 * image_size)) + (image_size * random_cropping_factor))`，其中`random_cropping_factor`介于零与安全裁剪值之间，安全裁剪值小于1.0。
- en: In this chapter, Pluto covered 15 image augmentation methods. Therefore, combining
    most or all of the filters into one dataset will increase its size substantially.
    Increasing the total number of images for training in DL is a proven method to
    reduce or eliminate the overfitting problem.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，Pluto介绍了15种图像增强方法。因此，将大部分或全部滤镜合并到一个数据集中，将大幅增加其大小。在深度学习中，增加训练图像的总数是一种经过验证的方法，可以减少或消除过拟合问题。
- en: There are general rules for the applicable filters and safe parameters that
    should work with most image datasets. However, Pluto follows the golden rule of
    image augmentation. This golden rule selects which image filter to use and sets
    the safe parameters based on the photo subject and the predictive model’s goal.
    In other words, each project will have different image augmentation filters and
    safe parameters.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 针对大多数图像数据集，有一些适用的滤镜和安全参数的通用规则。然而，Pluto 遵循图像增强的黄金法则。这个黄金法则会根据照片的主题和预测模型的目标，选择使用哪些图像滤镜并设置安全参数。换句话说，每个项目的图像增强滤镜和安全参数都不相同。
- en: 'Before unveiling the table representing the safe parameters for each filter
    per six real-world image datasets, Pluto must review the image datasets’ topics
    and goals:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 在展示每个滤镜在六个真实世界图像数据集中的安全参数表之前，Pluto 必须回顾这些图像数据集的主题和目标：
- en: The **Covid-19** dataset consists of people’s chest X-ray images. The goal is
    to predict between Covid-19, viral pneumonia, and normal.
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Covid-19** 数据集包含人类胸部 X 射线图像。目标是预测 Covid-19、病毒性肺炎和正常情况之间的区别。'
- en: The **People** dataset consists of pictures of everyday people. No goal is stated,
    but Pluto assumes the usage could classify age, sex, ethnicity, emotional sentiment,
    and facial recognition.
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**People** 数据集包含日常人物的照片。虽然没有明确目标，但 Pluto 假设这些图像可用于分类年龄、性别、种族、情感情绪和面部识别。'
- en: The **Fungi** dataset consists of photos of fungi in a natural environment.
    The goal is to predict if the fungi are edible or poisonous.
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Fungi** 数据集包含自然环境中的真菌照片。目标是预测真菌是可食用的还是有毒的。'
- en: The **Sea Animal** dataset consists of images of sea animals, mainly underwater.
    The goal is to classify the 19 sea animals provided.
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sea Animal** 数据集包含海洋动物的图像，主要是水下拍摄的。目标是分类提供的 19 种海洋动物。'
- en: The **Food** dataset consists of images of commonly served Vietnamese dishes.
    The goal is to classify the 31 types of dishes.
  id: totrans-505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Food** 数据集包含常见越南菜肴的图像。目标是对 31 种菜肴进行分类。'
- en: The **Mall Crowd** dataset consists of images of people in a typical shopping
    mall. The goal is to predict the size of the crowd.
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mall Crowd** 数据集包含典型购物中心中人群的图像。目标是预测人群的大小。'
- en: 'To generate the filters and safe parameters table for each image dataset, Pluto
    has written a quick function, `print_safe_parameters()`, using pandas, because
    he thinks coding is fun. For readability, there are two parts to the table, as
    follows:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为每个图像数据集生成滤镜和安全参数表，Pluto 使用 pandas 编写了一个快速函数 `print_safe_parameters()`，因为他认为编程很有趣。为了提高可读性，表格分为两部分，如下所示：
- en: '![Figure 3.37 – Safe parameter for each image dataset – part 1](img/B17990_03_37.jpg)'
  id: totrans-508
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.37 – 每个图像数据集的安全参数 – 第 1 部分](img/B17990_03_37.jpg)'
- en: Figure 3.37 – Safe parameter for each image dataset – part 1
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.37 – 每个图像数据集的安全参数 – 第 1 部分
- en: '*Figure 3**.37* shows the first half of the big table, and *Figure 3**.38*
    displays the second half.'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3**.37* 显示了大表格的前半部分，而 *图 3**.38* 显示了后半部分。'
- en: '![Figure 3.38 – Safe parameter for each image dataset – part 2](img/B17990_03_38.jpg)'
  id: totrans-511
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.38 – 每个图像数据集的安全参数 – 第 2 部分](img/B17990_03_38.jpg)'
- en: Figure 3.38 – Safe parameter for each image dataset – part 2
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.38 – 每个图像数据集的安全参数 – 第 2 部分
- en: The safe parameters are from Pluto’s exploration of the Python Notebook, but
    you may find more suitable values than Pluto. There are no rigid or fixed rules
    regarding image augmentation. Therefore, you should use the Python Notebook to
    explore the possibilities. If you read a scholarly paper about a new image augmentation
    technique, implement it using the Albumentations or other image libraries.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 安全参数来自 Pluto 在 Python Notebook 中的探索，但你可能会找到比 Pluto 更合适的值。图像增强没有严格或固定的规则。因此，你应该使用
    Python Notebook 来探索不同的可能性。如果你阅读到有关新图像增强技术的学术论文，可以使用 Albumentations 或其他图像库来实现它。
- en: Pluto has written six wrapper functions for reinforcing learning through coding,
    one for each image dataset.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 为每个图像数据集编写了六个封装函数，通过编码强化学习。
- en: Fun fact
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 趣味事实
- en: You can run the wrapper function repeatedly because it generates a different
    image set every time. In addition, it will randomly select other base images from
    the real-world dataset. Therefore, you can run it a thousand times and only see
    the same output once.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以反复运行这个封装函数，因为它每次都会生成不同的图像集。此外，它还会从真实世界数据集中随机选择其他基础图像。因此，你可以运行一千次，只有一次会看到相同的输出。
- en: 'Each wrapper function defines a set of Fast.ai image augmentation filters;
    for example:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 每个封装函数定义了一组 Fast.ai 图像增强滤镜；例如：
- en: '[PRE52]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: In addition, the wrapper function uses a helper method to fetch the `Albumentations`
    filters – for example, `_fetch_album_covid19()`.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，包装函数使用了一个辅助方法来获取`Albumentations`过滤器——例如，`_fetch_album_covid19()`。
- en: 'Pluto reviews the image augmentation for the Covid-19 dataset by using the
    following command in the Python Notebook:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 在 Python Notebook 中使用以下命令回顾了 Covid-19 数据集的图像增强：
- en: '[PRE53]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The output is as follows:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.39 – Image augmentation for the Covid-19 dataset](img/B17990_03_39.jpg)'
  id: totrans-523
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.39 – Covid-19 数据集的图像增强](img/B17990_03_39.jpg)'
- en: Figure 3.39 – Image augmentation for the Covid-19 dataset
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.39 – Covid-19 数据集的图像增强
- en: 'The relevant code lines for the combination filters for the People dataset
    are as follows:'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 人物数据集的组合过滤器的相关代码行如下：
- en: '[PRE54]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Pluto reviews the image augmentation for the People dataset by using the following
    command in the Python Notebook:'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 在 Python Notebook 中使用以下命令回顾了人物数据集的图像增强：
- en: '[PRE55]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The output is as follows:'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.40 – Image augmentation for the People dataset](img/B17990_03_40.jpg)'
  id: totrans-530
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.40 – 人物数据集的图像增强](img/B17990_03_40.jpg)'
- en: Figure 3.40 – Image augmentation for the People dataset
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.40 – 人物数据集的图像增强
- en: 'The relevant code lines for the fungi combination filters are as follows:'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 真菌组合过滤器的相关代码行如下：
- en: '[PRE56]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Pluto reviews the image augmentation for the fungi dataset by using the following
    command:'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 使用以下命令回顾了真菌数据集的图像增强：
- en: '[PRE57]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The output is as follows:'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: "![Figure 3.41 – Image augmentation for the \uFEFFfungi dataset](img/B17990_03_41.jpg)"
  id: totrans-537
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.41 – 真菌数据集的图像增强](img/B17990_03_41.jpg)'
- en: Figure 3.41 – Image augmentation for the fungi dataset
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.41 – 真菌数据集的图像增强
- en: 'The relevant code lines for the sea animal combination filters are as follows:'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 海洋动物组合过滤器的相关代码行如下：
- en: '[PRE58]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Pluto reviews the image augmentation for the sea animal dataset by using the
    following command in the Python Notebook:'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 在 Python Notebook 中使用以下命令回顾了海洋动物数据集的图像增强：
- en: '[PRE59]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The output is as follows:'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.42 – Image augmentation for the sea animals dataset](img/B17990_03_42.jpg)'
  id: totrans-544
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.42 – 海洋动物数据集的图像增强](img/B17990_03_42.jpg)'
- en: Figure 3.42 – Image augmentation for the sea animals dataset
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.42 – 海洋动物数据集的图像增强
- en: 'The relevant code lines for the food combination filters are as follows:'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 食品组合过滤器的相关代码行如下：
- en: '[PRE60]'
  id: totrans-547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Pluto reviews the image augmentation for the food dataset by using the following
    command:'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 使用以下命令回顾了食品数据集的图像增强：
- en: '[PRE61]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The output is as follows:'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.43 – Image augmentation for the food dataset](img/B17990_03_43.jpg)'
  id: totrans-551
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.43 – 食品数据集的图像增强](img/B17990_03_43.jpg)'
- en: Figure 3.43 – Image augmentation for the food dataset
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.43 – 食品数据集的图像增强
- en: 'The relevant code lines for the mall crowd combination filters are as follows:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 商场人群组合过滤器的相关代码行如下：
- en: '[PRE62]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Pluto reviews the image augmentation for the mall crowd dataset by using the
    following command:'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: Pluto 使用以下命令回顾了商场人群数据集的图像增强：
- en: '[PRE63]'
  id: totrans-556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The output is as follows:'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.44 – Image augmentation for the mall crowd dataset](img/B17990_03_44.jpg)'
  id: totrans-558
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.44 – 商场人群数据集的图像增强](img/B17990_03_44.jpg)'
- en: Figure 3.44 – Image augmentation for the mall crowd dataset
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.44 – 商场人群数据集的图像增强
- en: Every time Pluto runs any of the draw augmentation methods, there is an equal
    chance that one of the filters will be selected and that 50% of the filter will
    be applied per image in the batch. Pluto can override the default batch size of
    15 using the `bsize` parameter. Since Pluto employs the safe range on all filters,
    you may not notice the difference. However, that is expected because the goal
    is to distort the images without compromising the target label before pre-processing.
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 每次 Pluto 运行任何绘制增强方法时，都有相同的机会选择一个过滤器，并且每个图像在批次中的50%过滤器将被应用。Pluto 可以通过 `bsize`
    参数覆盖默认的批次大小 15。由于 Pluto 对所有过滤器采用安全范围，您可能不会注意到区别。然而，这是预期的，因为目标是扭曲图像而不破坏目标标签，直到预处理阶段。
- en: Fun challenge
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的挑战
- en: Write a new combination wrapper function for a real-world dataset. If you have
    not downloaded or imported a new real-world image dataset, do so now and write
    a combined wrapper function as Pluto did.
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 为真实世界的数据集编写一个新的组合包装函数。如果您尚未下载或导入新的真实世界图像数据集，请现在进行下载并编写像 Pluto 那样的组合包装函数。
- en: This was a challenging chapter. Together, you and Pluto learned about image
    augmentation and how to use Python code to gain a deeper insight. Now, let’s summarize
    this chapter.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个具有挑战性的章节。在这个章节中，你和Pluto一起学习了图像增强技术以及如何使用Python代码深入理解这些技术。现在，让我们来总结一下本章内容。
- en: Summary
  id: totrans-564
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In the first part of this chapter, you and Pluto learn about the image augmentation
    concepts for classification. Pluto grouped the filters into geometric transformations,
    photometric transformations, and random erasing to make the image filters more
    manageable.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第一部分，你和Pluto一起学习了分类任务中的图像增强概念。Pluto将滤镜分为几何变换、光度变换和随机擦除，以便让图像滤镜更加易于管理。
- en: When it came to geometric transformations, Pluto covered horizontal and vertical
    flipping, cropping and padding, rotating, warping, and translation. These filters
    are suitable for most image datasets, and there are other geometric transformations,
    such as tilting or skewing. Still, Pluto followed the golden image augmentation
    rule for selecting a filter that improves prediction accuracy described in a published
    scholarly paper.
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理几何变换时，Pluto介绍了水平和垂直翻转、裁剪与填充、旋转、扭曲和位移等技术。这些滤镜适用于大多数图像数据集，还有其他几何变换，例如倾斜或扭曲。不过，Pluto遵循了已发布学术论文中描述的金标准图像增强规则，选择那些有助于提高预测准确性的滤镜。
- en: 'This golden rule is more suitable for photometric transformations because there
    are about 70 image filters in the Albumentations library and hundreds more available
    in other image augmentation libraries. This chapter covered the most commonly
    used photometric transformations cited in published scholarly papers: lighting,
    grayscale, contrast, saturation, hue shifting, noise injection, rain, sepia, and
    FancyPCA. You are encouraged to explore more filters from the Albumations library
    in the Python Notebook provided.'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 这个金规则更适用于光度变换，因为Albumentations库中大约有70个图像滤镜，其他图像增强库中还有数百种滤镜可用。本章介绍了在已发布的学术论文中最常用的光度变换：光照、灰度、对比度、饱和度、色调偏移、噪声注入、雨、棕褐色和FancyPCA。你被鼓励在提供的Python
    Notebook中探索Albumentations库中的更多滤镜。
- en: The second part of this chapter consisted of Python code to reinforce your understanding
    of various image augmentation techniques. Pluto led you through the process of
    downloading the six real-world image datasets from the *Kaggle* website. Pluto
    wrote the fetching data code in [*Chapter 2*](B17990_02.xhtml#_idTextAnchor038).
    He reused the fetch functions to retrieve the Covid-19, people, fungi, sea animals,
    food, and mall crowd real-world image datasets.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第二部分包含了Python代码，用以加深你对各种图像增强技术的理解。Pluto带你完成了从*Kaggle*网站下载六个真实世界图像数据集的过程。Pluto在[*第二章*](B17990_02.xhtml#_idTextAnchor038)中编写了获取数据的代码。他重用了获取函数来检索Covid-19、人类、真菌、海洋动物、食物和购物中心人群这六个真实世界的图像数据集。
- en: 'Before digging into the code, Pluto reviewed seven popular image augmentation
    libraries: Albumentations, Fast.ai, PIL, OpenCV, scikit-learn, Mahotas, and GraphicsMagick.
    Pluto used the Albumentations, Fast.ai, and PIL libraries to code the wrapper
    functions.'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入代码之前，Pluto回顾了七个流行的图像增强库：Albumentations、Fast.ai、PIL、OpenCV、scikit-learn、Mahotas和GraphicsMagick。Pluto使用了Albumentations、Fast.ai和PIL库来编写这些封装函数。
- en: The goal of these wrapper functions was to explain each image filter clearly.
    In all cases, the functions use the library augmentation methods under the hood.
    Many photometric transformations are more visible in the Python Notebook’s color
    output. Pluto showed the safe and *unsafe* parameters for each filter applied
    to the six image datasets. You are encouraged to run and even hack the Python
    Notebook’s code because there are no absolute right or wrong safe levels.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 这些封装函数的目标是清楚地解释每个图像滤镜。在所有情况下，函数都使用了库中的增强方法。许多光度变换在Python Notebook的彩色输出中更加显著。Pluto展示了每个滤镜应用于六个图像数据集时的安全和*不安全*参数。你被鼓励运行甚至修改Python
    Notebook中的代码，因为没有绝对的正确或错误的安全级别。
- en: A lot of Python code was provided, but it consisted of simple wrapper functions
    that followed good OOP standards and there were no other methods. The goal was
    to give you insight into each image filter and make it easy for you to explore
    and hack the code provided.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了大量Python代码，但这些代码是简单的封装函数，遵循良好的面向对象编程（OOP）标准，没有其他方法。目标是让你深入了解每个图像滤镜，并使你能够轻松探索和修改提供的代码。
- en: At the end of this chapter, Pluto pulled together to create an image filter
    combination table customized for each of the six image datasets. He then wrote
    six combined augmentation methods for each image dataset.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，Pluto 整合并创建了一个为每个图像数据集定制的图像滤波器组合表。然后，他为每个图像数据集编写了六个组合增广方法。
- en: Throughout this chapter, there were *fun facts* and *fun challenges*. Pluto
    hopes you will take advantage of these and expand your experience beyond the scope
    of this chapter.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，包含了*有趣的事实*和*有趣的挑战*。Pluto 希望你能利用这些内容，拓展你的经验，超越本章的范围。
- en: In the next chapter, we will cover image segmentation, which reuses many of
    the image classification functions that were covered in this chapter.
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论图像分割，这一部分将重用本章中涵盖的许多图像分类功能。
