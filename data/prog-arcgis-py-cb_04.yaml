- en: Chapter 4. Automating Map Production and Printing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 自动化地图生产和打印
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Creating a list of layout elements
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建布局元素列表
- en: Assigning a unique name to layout elements
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为布局元素分配唯一名称
- en: Restricting the layout elements returned by ListLayoutElements()
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制 ListLayoutElements() 返回的布局元素
- en: Updating the properties of layout elements
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新布局元素属性
- en: Getting a list of available printers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取可用打印机的列表
- en: Printing maps with PrintMap()
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PrintMap() 打印地图
- en: Exporting a map to a PDF file
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将地图导出为 PDF 文件
- en: Exporting a map to an image file
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将地图导出为图像文件
- en: Exporting a report
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出报告
- en: Building a map book with Data Driven Pages and ArcPy mapping
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用数据驱动页面和 ArcPy 映射构建地图集
- en: Publishing a map document to an ArcGIS Server service
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将地图文档发布到 ArcGIS Server 服务
- en: Introduction
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: The `arcpy.mapping` module, released with ArcGIS 10, provides a number of capabilities
    related to the automation of map production. The `arcpy.mapping` module can be
    used to automate map production, build map books, export maps to image or PDF
    files, and create and manage PDF files. In this chapter, you'll learn how to use
    the `arcpy.mapping` module to automate various geoprocessing tasks related to
    map production and printing.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS 10 一起发布的 `arcpy.mapping` 模块提供了一系列与地图生产自动化相关的功能。`arcpy.mapping` 模块可用于自动化地图生产、构建地图集、将地图导出为图像或
    PDF 文件，以及创建和管理 PDF 文件。在本章中，您将学习如何使用 `arcpy.mapping` 模块来自动化与地图生产和打印相关的各种地理处理任务。
- en: Creating a list of layout elements
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建布局元素列表
- en: Often, the first step in a geoprocessing script that automates the production
    of maps is to generate a list of the available layout elements. For example, you
    might need to update the title of your map before printing or creating a PDF file.
    In this case, the title is likely be stored in a `TextElement` object. You can
    generate a list of `TextElement` objects in your map layout view and then change
    the title. The first step is to generate a list of `TextElement` objects.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在自动化地图生产的地理处理脚本中，第一步通常是生成可用布局元素的列表。例如，您可能需要在打印或创建 PDF 文件之前更新地图的标题。在这种情况下，标题可能存储在
    `TextElement` 对象中。您可以在地图布局视图中生成 `TextElement` 对象的列表，然后更改标题。第一步是生成 `TextElement`
    对象的列表。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'In ArcMap, two views are available, namely data view and layout view. **Data
    view** is used to view geographic and tabular data, analyze data, symbolize layers,
    and manage data without regard for any particular map page size or layout. **Layout
    view** shows the map as printed on a page, and is used to create production quality
    maps through the addition of map elements. These elements include map frames,
    layers, legends, titles, north arrows, scale bars, and title blocks. Each object
    in the layout is represented in `arcpy.mapping` as a layout element class. Examples
    of many of these layout element classes are displayed in the following screenshot:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ArcMap 中，有两个视图可用，即数据视图和布局视图。**数据视图**用于查看地理和表格数据、分析数据、符号化图层以及管理数据，而不考虑任何特定的地图页面大小或布局。**布局视图**显示打印在页面上的地图，并用于通过添加地图元素来创建生产质量的地图。这些元素包括地图框架、图层、图例、标题、北箭头、比例尺和标题块。布局中的每个对象在
    `arcpy.mapping` 中都表示为一个布局元素类。以下屏幕截图显示了这些布局元素类中的许多示例：
- en: '![Getting ready](img/B04314_04_1.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![准备中](img/B04314_04_1.jpg)'
- en: Each element can be assigned a unique name that can then be used to access the
    element programmatically. This unique name is defined in ArcMap. The `arcpy.mapping`
    module provides a `ListLayoutElements()` function that returns a list of all these
    elements. In this recipe, you will learn how to use the `ListLayoutElements()`
    function to generate a list of map layout elements.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每个元素都可以分配一个唯一的名称，然后可以使用该名称以编程方式访问该元素。这个唯一名称在 ArcMap 中定义。`arcpy.mapping` 模块提供了一个
    `ListLayoutElements()` 函数，该函数返回所有这些元素的列表。在本例中，您将学习如何使用 `ListLayoutElements()`
    函数生成地图布局元素列表。
- en: How to do it…
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to generate a list of layout elements:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下步骤学习如何生成布局元素列表：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Open the Python window.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Python 窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE0]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Reference the currently active document (`Crime_Ch4.mxd`) and assign this reference
    to a variable:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch4.mxd`）并将此引用分配给一个变量：
- en: '[PRE1]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Generate a list of layout elements and print them to the screen if the name
    property is not empty:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果名称属性不为空，则生成布局元素列表并将其打印到屏幕上：
- en: '[PRE2]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The entire script should appear as follows:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：
- en: '[PRE3]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\CreateListLayoutElements.py`
    solution file.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch4\CreateListLayoutElements.py`解决方案文件来验证您的操作。
- en: 'Run the script to see the following output:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE4]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How it works…
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: '`ListLayoutElements()` returns a list of layout elements in the form of various
    layout classes. Each element can be one of the `GraphicElement`, `LegendElement`,
    `PictureElement`, `TextElement`, or `MapSurroundElement` object instances. Each
    element can have a unique name. You don''t have to assign a name to each element,
    but it is helpful to do so if you plan to access these elements programmatically
    in your scripts. In this script, we first made sure that the element had a name
    assigned to it before printing the name. This was done because ArcMap does not
    require that an element be assigned a name.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayoutElements()`返回一个布局元素列表，这些元素以各种布局类形式存在。每个元素可以是`GraphicElement`、`LegendElement`、`PictureElement`、`TextElement`或`MapSurroundElement`对象实例之一。每个元素都可以有一个唯一名称。您不必为每个元素分配名称，但如果您计划在脚本中以编程方式访问这些元素，这样做会有所帮助。在此脚本中，我们首先确保元素已分配了名称，然后再打印名称。这样做是因为ArcMap不需要为元素分配名称。'
- en: Assigning a unique name to layout elements
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为布局元素分配唯一名称
- en: It's a good practice to assign a unique name to all your layout elements using
    ArcMap. This is important in the event that your geoprocessing scripts need to
    access a particular element to make changes. For example, you might need to update
    the icon that displays your corporate logo. Rather than making this change manually
    in all your map document files, you could write a geoprocessing script that updates
    all your map document files programmatically with the new logo. However, in order
    for this to be possible, a unique name will need to be assigned to your layout
    elements. This gives you the ability to access the elements of your layout individually.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ArcMap为所有布局元素分配唯一名称是一种良好的做法。如果您的地理处理脚本需要访问特定元素进行更改，这很重要。例如，您可能需要更新显示公司标志的图标。而不是在所有地图文档文件中手动进行此更改，您可以编写一个地理处理脚本，以编程方式更新所有地图文档文件并使用新标志。但是，为了使这成为可能，必须为布局元素分配唯一名称。这使您能够单独访问布局元素。
- en: Getting ready
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As I mentioned in the previous recipe, each layout element will be one of a
    number of element types and each can be assigned a name. This element name can
    then be used when you need to reference a particular element in your Python script.
    You can use ArcMap to assign unique names to each layout element. In this recipe,
    you will use ArcMap to assign names to the elements.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如我之前所述，每个布局元素将属于多种元素类型之一，并且每个都可以分配名称。此元素名称可以在您需要引用Python脚本中的特定元素时使用。您可以使用ArcMap为每个布局元素分配唯一名称。在此配方中，您将使用ArcMap为元素分配名称。
- en: How to do it…
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to assign unique names to each layout element
    using ArcMap:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用ArcMap为每个布局元素分配唯一名称：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Switch to the layout view and you should see something similar to this screenshot:![How
    to do it…](img/B04314_04_2.jpg)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到布局视图，您应该看到类似于以下截图的内容：![如何操作…](img/B04314_04_2.jpg)
- en: Names are assigned differently depending on the element type. Click on the uppermost
    data frame, which should be **Crime**, to select it. The selection handles should
    appear as follows:![How to do it…](img/B04314_04_3.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据元素类型，名称的分配方式不同。点击最上面的数据框，它应该是**Crime**，以选择它。选择手柄应如下所示：![如何操作…](img/B04314_04_3.jpg)
- en: Right-click on the upper data frame and select **Properties** to display the
    **Data Frame Properties** window, as shown in the following screenshot. The **Element
    Name** property is what defines the unique name for the element and is found on
    the **Size and Position** tab as seen in the following screenshot. In this case,
    set the element name to `Crime`:![How to do it…](img/B04314_04_4.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击上方的数据框并选择**属性**以显示**数据框属性**窗口，如图下所示截图。**元素名称**属性定义了元素的唯一名称，并在如图下所示截图的**大小和位置**选项卡中找到。在此情况下，将元素名称设置为`Crime`：![如何操作…](img/B04314_04_4.jpg)
- en: Close the **Data Frame Properties** window.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**数据框属性**窗口。
- en: Select **2009 Crime Data legend** and open the **Properties** window by right-clicking
    on the legend and selecting **Properties**.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**2009犯罪数据图例**，并通过右键点击图例并选择**属性**来打开**属性**窗口。
- en: Click on the **Size and Position** tab.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**大小和位置**选项卡。
- en: Change the **Element Name** value to `Crime Legend`, as shown in the following
    screenshot:![How to do it…](img/B04314_04_5.jpg)
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**元素名称**值更改为`Crime Legend`，如图下所示：![如何操作…](img/B04314_04_5.jpg)
- en: You can also define unique names for text elements. Select the title element
    (`Crime and Its Impact on School Test Performance`), right-click on the element,
    and select **Properties**.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以为文本元素定义唯一的名称。选择标题元素（`Crime and Its Impact on School Test Performance`），右键单击元素，并选择**属性**。
- en: Select the **Size and Position** tab and define a unique name for this element,
    as shown in the following screenshot:![How to do it…](img/B04314_04_6.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**大小和位置**选项卡，并为该元素定义一个唯一的名称，如图下所示：![如何操作…](img/B04314_04_6.jpg)
- en: How it works…
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Each element in the layout view can be assigned a name, which can then be used
    in your geoprocessing script to retrieve the specific element. You should strive
    to define unique names for each element. It isn't required that you define a unique
    name for each element, nor is it required that you even define a name at all.
    However, it is a best practice to give each element a name and ensure that each
    name is unique if you intend to access these elements from your Python scripts.
    In terms of naming practices for your elements, you should strive to include only
    letters and underscores in the name.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 布局视图中每个元素都可以分配一个名称，然后可以在你的地理处理脚本中使用该名称来检索特定元素。你应该努力为每个元素定义唯一的名称。并不是必须为每个元素定义一个唯一的名称，甚至不需要定义名称。然而，如果你打算从Python脚本中访问这些元素，给每个元素命名并确保每个名称都是唯一的是一个最佳实践。在元素命名实践中，你应该努力只包含字母和下划线。
- en: There's more…
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: You can use element names in conjunction with the `ListLayoutElements()` function
    to restrict the elements that are returned by the function through the use of
    a wildcard parameter. In the next recipe, you'll learn how to restrict the list
    of layout elements that are returned through the use of wildcards and element
    types.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用元素名称与`ListLayoutElements()`函数结合使用，通过通配符参数来限制函数返回的元素。在下一个示例中，你将学习如何通过使用通配符和元素类型来限制返回的布局元素列表。
- en: Restricting the layout elements returned by ListLayoutElements()
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制`ListLayoutElements()`返回的布局元素
- en: Layouts can contain a large number of elements, many of which you won't need
    for a particular geoprocessing script. The `ListLayoutElements()` function can
    restrict the layout elements returned, by passing a parameter that defines the
    type of element that should be returned along with an optional wildcard, which
    finds elements using a portion of the name.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 布局可以包含大量元素，其中许多元素你可能不需要用于特定的地理处理脚本。`ListLayoutElements()` 函数可以通过传递一个参数来限制返回的布局元素，该参数定义了应返回的元素类型，并可以附带一个可选通配符，该通配符通过名称的一部分来查找元素。
- en: Getting ready
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There are many different types of layout elements, including graphics, legends,
    pictures, text, and data frames. When you return a list of layout elements, you
    can restrict (filter) the types of elements that are returned. In this recipe,
    you will write a script that filters the layout elements returned by element type
    and wildcard.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 布局元素有多种不同类型，包括图形、图例、图片、文本和数据框。当你返回一个布局元素列表时，你可以限制（过滤）返回的元素类型。在本例中，你将编写一个脚本，通过元素类型和通配符来过滤返回的布局元素。
- en: How to do it…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to restrict the list of layers returned by
    the `ListLayoutElements()` function through the use of optional parameters, which
    define the type of element that should be returned along with a wildcard that
    can also restrict the elements that are returned:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何通过使用可选参数来限制`ListLayoutElements()`函数返回的图层列表，这些参数定义了应返回的元素类型，以及可以进一步限制返回元素的通配符：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Open the Python window.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE5]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Reference the currently active document (`Crime_Ch4.mxd`) and assign this reference
    to a variable:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch4.mxd`）并将此引用分配给一个变量：
- en: '[PRE6]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use the `ListLayoutElements()` function with a restriction of only legend elements,
    as well as a wildcard that returns elements with a name containing the `Crime`
    text anywhere in the name:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`ListLayoutElements()`函数，仅限制为图例元素，以及一个通配符，该通配符返回名称中包含`Crime`文本的元素：
- en: '[PRE7]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\RestrictLayoutElements.py`
    solution file.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查 `c:\ArcpyBook\code\Ch4\RestrictLayoutElements.py` 解决方案文件来验证您的作品。
- en: 'Run the script. In this case, only a single layout element will be returned:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。在这种情况下，将只返回单个布局元素：
- en: '[PRE8]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How it works...
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`ListLayoutElements()` is a versatile function, which in its most basic form
    is used to return a list of all the layout elements on the page layout of a map
    document. However, there are two optional parameters that you can supply to filter
    this list. The first type of filter is an element type filter in which you specify
    that you only want to return one of the layout element types. You can also apply
    a wildcard to filter the returned list. These two types of filters can be used
    in combination. For example, in this recipe, we are specifying that we only want
    to return `LEGEND_ELEMENT` objects with the `Crime` text anywhere in the element
    name. This results in a highly filtered list that only contains a single layout
    element.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayoutElements()` 是一个多功能函数，在其最基本的形式中，用于返回地图文档页面布局上的所有布局元素的列表。但是，您可以提供两个可选参数来筛选此列表。第一种筛选类型是元素类型筛选，您指定只返回布局元素类型之一。您还可以应用通配符来筛选返回的列表。这两种类型的筛选可以组合使用。例如，在这个菜谱中，我们指定只返回元素名称中包含
    `Crime` 文本的 `LEGEND_ELEMENT` 对象。这导致了一个高度筛选的列表，只包含单个布局元素。'
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '`ListLayoutElements()` can be filtered using one of these element types: `DATAFRAME_ELEMENT`,
    `GRAPHIC_ELEMENT`, `LEGEND_ELEMENT`, `MAPSURROUND_ELEMENT`, `PICTURE_ELEMENT`,
    or `TEXT_ELEMENT`.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayoutElements()` 可以使用以下元素类型之一进行筛选：`DATAFRAME_ELEMENT`、`GRAPHIC_ELEMENT`、`LEGEND_ELEMENT`、`MAPSURROUND_ELEMENT`、`PICTURE_ELEMENT`
    或 `TEXT_ELEMENT`。'
- en: Updating the properties of layout elements
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新布局元素的属性
- en: Each layout element has a set of properties that you can update programmatically.
    For example, `LegendElement` includes properties that allow you to change the
    position of the legend on the page, update the legend title, and access legend
    items.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 每个布局元素都有一组可以编程更新的属性。例如，`LegendElement` 包含允许您更改图例在页面上的位置的属性，更新图例标题，并访问图例项。
- en: Getting ready
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There are many different types of layout elements, including graphics, legends,
    text, maps, and pictures. Each of these elements is represented by a class in
    the `arcpy.mapping` package. These classes provide various properties that you
    can use to programmatically alter the element.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 布局元素有很多不同类型，包括图形、图例、文本、地图和图片。这些元素中的每一个都在 `arcpy.mapping` 包中的一个类中得到了表示。这些类提供了各种属性，您可以使用它们以编程方式更改元素。
- en: The `DataFrame` class provides access to the data frame properties in the map
    document file. This object can work with both map units and page layout units,
    depending on the property being used. Page layout properties, such as positioning
    and sizing, can be applied to the properties, including `elementPositionX`, `elementPositionY`,
    `elementWidth`, and `elementHeight`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame` 类提供了访问地图文档文件中的数据帧属性。此对象可以与地图单元和页面布局单元一起工作，具体取决于所使用的属性。页面布局属性，如定位和尺寸，可以应用于包括
    `elementPositionX`、`elementPositionY`、`elementWidth` 和 `elementHeight` 在内的属性。'
- en: The `GraphicElement` object is a generic object for various graphics that can
    be added to the page layout, including tables, graphs, neatlines, markers, lines,
    and area shapes. You'll want to make sure that you set the `name` property for
    each graphic element (and any other element for that matter), if you intend to
    access it through a Python script.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`GraphicElement` 对象是用于添加到页面布局的各种图形的通用对象，包括表格、图表、整洁线、标记、线条和区域形状。如果您打算通过 Python
    脚本访问它，请确保为每个图形元素（以及任何其他元素）设置 `name` 属性。'
- en: '`LegendElement` provides operations to position the legend on the page layout,
    modification of the legend title, and also provides access to the legend items
    and the parent data frame. `LegendElement` can only be associated with a single
    data frame.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`LegendElement` 提供了在页面布局中定位图例、修改图例标题以及访问图例项和父数据帧的操作。`LegendElement` 只能与单个数据帧相关联。'
- en: '`MapSurroundElement` can refer to north arrows, scale bars, and scale text.
    It is similar to `LegendElement` and is associated with a single data frame. Properties
    on this object enable repositioning of the element on the page.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapSurroundElement` 可以指北箭头、比例尺和比例文本。它与 `LegendElement` 类似，并与单个数据帧相关联。此对象上的属性可以重新定位页面上的元素。'
- en: '`PictureElement` represents a raster or image on the page layout. The most
    useful property of this object enables acquiring and setting the data sources,
    which can be extremely helpful when you need to change a picture, such as a logo,
    in multiple map documents. For example, you could write a script that iterates
    through all your map document files and replaces the current logo with a new logo.
    You can also reposition or resize the object.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`PictureElement` 表示页面布局中的栅格或图像。此对象最有用的属性是获取和设置数据源，这在需要更改多个地图文档中的图片，如标志时非常有帮助。例如，您可以编写一个脚本，遍历所有地图文档文件，并用新的标志替换当前的标志。您还可以重新定位或调整大小对象。'
- en: '`TextElement` represents text on a page layout, including inserted text, callouts,
    rectangle text, and titles, but does not include legend titles or texts that are
    part of a table or chart. Properties enable the modification of a text string,
    which can be extremely useful in situations where you need to make the same text
    string change in multiple places in the page layout or over multiple map documents,
    and of course, repositioning of the object is also available.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`TextElement` 表示页面布局中的文本，包括插入的文本、注释、矩形文本和标题，但不包括图例标题或图表中的文本。属性允许修改文本字符串，这在需要在不同页面布局或多个地图文档中的多个位置更改相同的文本字符串时非常有用，当然，也可以重新定位对象。'
- en: Each element in the page layout is returned as an instance of one of the element
    objects. In this recipe, we're going to use the `title` property of the `Legend`
    object to programmatically change the title of the `Crime` legend and obtain a
    list of the layers that are part of the legend.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 页面布局中的每个元素都返回为元素对象的一个实例。在这个菜谱中，我们将使用 `Legend` 对象的 `title` 属性来编程更改 `Crime` 图例的标题，并获取图例中包含的图层列表。
- en: How to do it…
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Follow these steps to learn how to update the properties of a layout element:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何更新布局元素的属性：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Open the Python window.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Python 窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE9]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Reference the currently active document (`Crime_Ch4.mxd`), and assign this
    reference to a variable:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch4.mxd`），并将此引用分配给一个变量：
- en: '[PRE10]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Use the `ListLayoutElements()` method with a wildcard and restriction of only
    legend elements to return only the `Crime` legend and store it in a variable:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `ListLayoutElements()` 方法与通配符和仅限于图例元素的限制来返回仅 `Crime` 图例并将其存储在一个变量中：
- en: '[PRE11]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Use the `title` property to update the title of the legend:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `title` 属性更新图例的标题：
- en: '[PRE12]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Get a list of the layers that are a part of the legend and print the names:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取图例中包含的图层列表并打印名称：
- en: '[PRE13]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The entire script should appear as follows:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：
- en: '[PRE14]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\UpdateLayoutElementProperties.py`
    solution file.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查 `c:\ArcpyBook\code\Ch4\UpdateLayoutElementProperties.py` 解决方案文件来检查您的作品。
- en: 'Run the script. You should see the following layers printed:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。您应该看到以下图层被打印出来：
- en: '[PRE15]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The change is displayed in the following screenshot:![How to do it…](img/B04314_04_7.jpg)
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变更将在以下屏幕截图显示：![如何做…](img/B04314_04_7.jpg)
- en: How it works...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Each of the layout elements has a set of properties and methods. In this particular
    case, we've used the `title` property on the `Legend` object. Other properties
    of this object allow you to set the width and height, positioning, and so on.
    Methods used for the `Legend` object give you the ability to adjust the column
    count, list the legend items, and remove and update items.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 每个布局元素都有一组属性和方法。在这个特定的情况下，我们使用了 `Legend` 对象的 `title` 属性。此对象的其它属性允许您设置宽度、高度、定位等。用于
    `Legend` 对象的方法可以调整列数、列出图例项、删除和更新项。
- en: Getting a list of available printers
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取可用打印机的列表
- en: Yet another list function provided by `arcpy` is `ListPrinterNames()`, which
    generates a list of the available printers. As is the case with the other list
    functions that we've examined, `ListPrinterNames()` is often called a preliminary
    step in a multistep script.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy` 提供的另一个列表函数是 `ListPrinterNames()`，它生成可用打印机的列表。与其他我们检查过的列表函数一样，`ListPrinterNames()`
    通常在多步脚本中的初步步骤中被调用。'
- en: Getting ready
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before printing maps with the `PrintMap()` function, it is a common practice
    to call the `ListPrinterNames()` function, which returns a list of the available
    printers for the local computer. A particular printer can then be found by iterating
    the list of printers and using it as an input for the `PrintMap()` function.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`PrintMap()`函数打印地图之前，调用`ListPrinterNames()`函数是一种常见做法，该函数返回本地计算机上可用的打印机列表。然后可以通过迭代打印机列表并使用它作为`PrintMap()`函数的输入来找到特定的打印机。
- en: How to do it…
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to use the `ListPrinterNames()` function to
    return a list of the available printers for your script:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`ListPrinterNames()`函数来返回您脚本中可用的打印机列表：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Open the Python window.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE16]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Reference the currently active document (`Crime_Ch4.mxd`) and assign this reference
    to a variable:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch4.mxd`）并将此引用分配给一个变量：
- en: '[PRE17]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Call the `ListPrinterNames()` function and print each printer:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`ListPrinterNames()`函数并打印每个打印机：
- en: '[PRE18]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\GetListOfPrinters.py`
    solution file.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch4\GetListOfPrinters.py`解决方案文件来检查您的工作。
- en: 'Run the script. The output will vary depending upon the list of available printers
    for your computer. However, it should print something similar to the following
    code snippet:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。输出将根据您计算机上可用的打印机列表而变化。然而，它应该打印出类似于以下代码片段的内容：
- en: '[PRE19]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works...
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `ListPrinterNames()` function returns a Python list containing all the printers
    available to use in your script. You can then use the `PrintMap()` function, which
    we'll examine in the next recipe, to send a print job to a particular printer
    that is available for your computer.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListPrinterNames()`函数返回一个包含所有可用于您脚本的打印机的Python列表。然后您可以使用`PrintMap()`函数，我们将在下一节中探讨，将打印作业发送到您计算机上可用的特定打印机。'
- en: Printing maps with PrintMap()
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PrintMap()打印地图
- en: Sending your map layout to a printer is easy with the `PrintMap()` function.
    By default, the print job will be sent to the default printer saved with the map
    document, but you can also define a specific printer to which the job should be
    sent.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`PrintMap()`函数将地图布局发送到打印机非常简单。默认情况下，打印作业将被发送到与地图文档一起保存的默认打印机，但您也可以定义一个特定的打印机，将作业发送到该打印机。
- en: Getting ready
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `arcpy.mapping` module provides a `PrintMap()` function to print page layouts
    or data frames from ArcMap. Before calling `PrintMap()`, it is a common practice
    to call the `ListPrinterNames()` function, which returns a list of the available
    printers for the local computer. A particular printer can then be found by iterating
    the list of printers that can be used as an input for the `PrintMap()` function.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping`模块提供了一个`PrintMap()`函数，用于从ArcMap打印页面布局或数据帧。在调用`PrintMap()`之前，调用`ListPrinterNames()`函数是一种常见做法，该函数返回本地计算机上可用的打印机列表。然后可以通过迭代可用于`PrintMap()`函数的打印机列表来找到特定的打印机。'
- en: '`PrintMap()` can print either a specific data frame or the page layout of a
    map document. By default, this function will use the printer saved with the map
    document or, the default system printer in the map document. As I mentioned earlier,
    you can also use `ListPrinterNames()` to get a list of the available printers,
    and select one of these printers as an input for `PrintMap()`. In this recipe,
    you will learn how to use the `PrintMap()` function to print the layout.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`PrintMap()`可以打印特定的数据帧或地图文档的页面布局。默认情况下，此函数将使用与地图文档一起保存的打印机或地图文档中的默认系统打印机。正如我之前提到的，您还可以使用`ListPrinterNames()`来获取可用打印机的列表，并从这些打印机中选择一个作为`PrintMap()`的输入。在本食谱中，您将学习如何使用`PrintMap()`函数来打印布局。'
- en: How to do it…
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to use the `PrintMap()` function to print the
    layout view in ArcMap:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`PrintMap()`函数在ArcMap中打印布局视图：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Open the Python window.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE20]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Reference the currently active document (`Crime_Ch4.mxd`), and assign this
    reference to a variable:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch4.mxd`），并将此引用分配给一个变量：
- en: '[PRE21]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Look for the `Test_Performance` data frame and print it if it''s found:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找`Test_Performance`数据帧，如果找到则打印它：
- en: '[PRE22]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\PrintingWithPrintMap.py`
    solution file.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch4\PrintingWithPrintMap.py`解决方案文件来检查您的工作。
- en: Run the script. The script should send the data frame to the default printer.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。脚本应将数据帧发送到默认打印机。
- en: How it works...
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `PrintMap()` function accepts one required parameter and a handful of optional
    parameters. The required parameter is a reference to the map document. The first
    optional parameter is the printer name. In this case, we haven't specified a particular
    printer to use. Since we haven't provided a specific printer; it will use the
    printer saved with the map document or the default system printer if a printer
    is not part of the map document. The second optional parameter is the data frame
    that we'd like to print, which in this instance is `Test_Performance`. Other optional
    parameters, not supplied in this case, are an output print file and image quality.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`PrintMap()` 函数接受一个必需参数和一些可选参数。必需参数是对地图文档的引用。第一个可选参数是打印机名称。在这种情况下，我们没有指定要使用的特定打印机。由于我们没有提供特定的打印机；它将使用与地图文档一起保存的打印机或默认系统打印机，如果打印机不是地图文档的一部分。第二个可选参数是我们想要打印的数据帧，在这个例子中是
    `Test_Performance`。其他可选参数，在本例中没有提供，是输出打印文件和图像质量。'
- en: Exporting a map to a PDF file
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将地图导出为 PDF 文件
- en: Rather than sending your map or layout view to a printer, you may want to simply
    create PDF files that can be shared. ArcPy mapping provides an `ExportToPDF()`
    function, which you can use to do this.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是将你的地图或布局视图发送到打印机，你可能只想创建可以共享的 PDF 文件。ArcPy 映射提供了一个 `ExportToPDF()` 函数，你可以用它来做这件事。
- en: Getting ready
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: PDF is a very popular interchange format designed to be viewable and printable
    from many different platforms. The ArcPy mapping `ExportToPDF()` function can
    be used to export data frames or the page layout to a PDF format. By default,
    the `ExportToPDF()` function exports the page layout, but you can pass an optional
    parameter that references a particular data frame, which can be printed instead
    of the page layout. In this recipe, you will learn how to export the page layout
    as well as a specific data frame to a PDF file.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: PDF 是一个非常流行的交换格式，旨在从许多不同的平台上可查看和打印。ArcPy 映射 `ExportToPDF()` 函数可以用来将数据帧或页面布局导出为
    PDF 格式。默认情况下，`ExportToPDF()` 函数导出页面布局，但你可以传递一个可选参数，该参数引用特定的数据帧，可以打印而不是页面布局。在这个菜谱中，你将学习如何将页面布局以及特定的数据帧导出为
    PDF 文件。
- en: How to do it…
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'Follow these steps to learn how to export a map to a PDF file:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何将地图导出为 PDF 文件：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Open the Python window.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Python 窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE23]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Reference the currently active document (`Crime_Ch4.mxd`), and assign this
    reference to a variable:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch4.mxd`），并将此引用分配给一个变量：
- en: '[PRE24]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Export the page layout with the `ExportToPDF()` function:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `ExportToPDF()` 函数导出页面布局：
- en: '[PRE25]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\ExportToPDF_Step1.py`
    solution file.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过检查 `c:\ArcpyBook\code\Ch4\ExportToPDF_Step1.py` 解决方案文件来检查你的工作。
- en: Run the script.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: Open the `Map_PageLayout.pdf` file that was created, and you should see something
    similar to the following screenshot:![How to do it…](img/B04314_04_8.jpg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开创建的 `Map_PageLayout.pdf` 文件，你应该会看到以下截图类似的内容：![如何做…](img/B04314_04_8.jpg)
- en: Now, we'll print a specific data frame from our map document file. Alter your
    script, so that it appears as follows. You can check your work by examining the
    `c:\ArcpyBook\code\Ch4\ExportToPDF_Step2.py` solution file.![How to do it…](img/B04314_04_14.jpg)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将从我们的地图文档文件中打印特定的数据帧。修改你的脚本，使其看起来如下。你可以通过检查 `c:\ArcpyBook\code\Ch4\ExportToPDF_Step2.py`
    解决方案文件来检查你的工作。![如何做…](img/B04314_04_14.jpg)
- en: Run the script and examine the output of the PDF file.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本并检查 PDF 文件的输出。
- en: How it works…
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `ExportToPDF()` function requires two parameters, including a reference
    to the map document and the file that serves as the output PDF file. The first
    script that we developed was passed in a reference to the map document along with
    an output PDF file. Since we didn't pass in an optional parameter specifying the
    data frame, the `ExportToPDF()` function will export the page layout. There are
    also many optional parameters that can be passed into this method, including a
    specific data frame and a number of parameters mostly related to the quality of
    the output content and file. Our second script is passed in a specific data frame
    that should be exported. You can refer to the ArcGIS help pages for more information
    about each of the optional parameters.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`ExportToPDF()`函数需要两个参数，包括地图文档的引用和作为输出PDF文件的文件。我们开发的第一个脚本传递了地图文档的引用以及输出PDF文件。由于我们没有传递指定数据帧的可选参数，`ExportToPDF()`函数将导出页面布局。还有许多可选参数可以传递给此方法，包括特定的数据帧以及与输出内容和质量相关的参数。我们的第二个脚本传递了一个应该导出的特定数据帧。您可以通过ArcGIS帮助页面获取有关每个可选参数的更多信息。'
- en: Exporting a map to an image file
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将地图导出为图像文件
- en: You can also export the contents of the map or layout view to an image file
    by using one of the many functions provided by `arcpy.mapping`. Each image export
    function will differ in its name depending upon the type of image file you'd like
    to create. The parameters passed into the function will also vary slightly.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以通过使用`arcpy.mapping`提供的许多功能之一，将地图或布局视图的内容导出为图像文件。每个图像导出函数的名称将根据您想要创建的图像文件类型而有所不同。传递给函数的参数也会略有不同。
- en: Getting ready
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In addition to providing the ability to export data frames and the page layout
    to a PDF format, you can also use one of the many export functions provided by
    `arcpy.mapping` to export an image file. Some of the available formats include
    AI, BMP, EMF, EPS, GIF, JPEG, SVG, and TIFF. The parameters provided for each
    function will vary depending on the type of image. Some examples of these function
    names include `ExportToJPEG()`, `ExportToGIF()`, and `ExportToBMP()`. In this
    recipe, you'll learn how to export your maps to images.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供将数据帧和页面布局导出为PDF格式的功能外，您还可以使用`arcpy.mapping`提供的许多导出函数之一来导出图像文件。一些可用的格式包括AI、BMP、EMF、EPS、GIF、JPEG、SVG和TIFF。每个函数提供的参数将根据图像类型而有所不同。这些函数名称的示例包括`ExportToJPEG()`、`ExportToGIF()`和`ExportToBMP()`。在本食谱中，您将学习如何将地图导出为图像。
- en: How to do it…
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to export your data or layout view to an image
    file:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何将您的数据或布局视图导出为图像文件：
- en: Open `C:\ArcpyBook\Ch4\Crime_Ch4.mxd` in ArcMap.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch4\Crime_Ch4.mxd`。
- en: Open the Python window.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE26]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Reference the currently active document (`Crime_Ch4.mxd`), and assign this
    reference to a variable:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch4.mxd`），并将此引用分配给一个变量：
- en: '[PRE27]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Get a list of data frames in the map document and find the data frame with the
    name "`Crime`".
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取地图文档中的数据帧列表，并找到名为"`Crime`"的数据帧。
- en: '[PRE28]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Export the `Crime` data frame as a JPEG image. Your entire script should now
    appear as follows:![How to do it…](img/B04314_04_15.jpg)
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Crime`数据帧导出为JPEG图像。您的整个脚本现在应如下所示：![如何操作…](img/B04314_04_15.jpg)
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\ExportMapImageFile.py`
    solution file.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch4\ExportMapImageFile.py`解决方案文件来检查您的作品。
- en: Run the script and examine the output file.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本并检查输出文件。
- en: How it works…
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Note that the `ExportToJPEG()` function looks virtually the same as `ExportToPDF()`.
    Keep in mind though that the optional parameters will be different for all the
    export functions. Each `ExportTo<Type>` function will vary depending on the parameters
    that can be used in the creation of the image file.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`ExportToJPEG()`函数看起来几乎与`ExportToPDF()`相同。但请记住，所有导出函数的可选参数将有所不同。每个`ExportTo<Type>`函数将根据创建图像文件时可以使用的参数而有所不同。
- en: Exporting a report
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出报告
- en: Reports in ArcGIS provide you with a way of presenting information about your
    data or analysis. Information in a report is displayed by using information pulled
    directly from an attribute table in a feature class or a standalone table. Reports
    can contain attribute information, maps, pictures, graphics, and other supporting
    information. ArcMap includes a **Report Wizard** and **Report Designer** that
    you can use to create and modify reports. You can also save the format of a report
    to a template file. This template file can be used repeatedly to generate new
    reports based on any changes in your data. Using a combination of a report template
    along with `arcpy.mapping`, you can automate the production of reports.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS 中的报告为你提供了一种展示数据或分析信息的方式。报告中的信息是通过直接从要素类中的属性表或独立表中提取的信息来显示的。报告可以包含属性信息、地图、图片、图形和其他支持信息。ArcMap
    包含一个 **报告向导** 和 **报告设计器**，你可以使用它们来创建和修改报告。你还可以将报告的格式保存到模板文件中。这个模板文件可以重复使用，以根据数据中的任何变化生成新的报告。通过结合报告模板和
    `arcpy.mapping`，你可以自动化报告的生产。
- en: Getting ready
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The **Report Wizard** in ArcGIS can be used to create reports. There are two
    native data formats for ArcGIS reports: **Report Document File** (**RDF**) and
    **Report Layout File** (**RLF**). RDF reports provide a static report of your
    data. A one-time snapshot, if you will. A RLF is a template file and is created
    using **Report Designer**. The report template file can be used repeatedly and
    includes all the fields in the report along with how they are grouped, sorted,
    and formatted. It also includes any layout elements, such as graphics or maps.
    When the report is rerun, the report regenerates based on the source data that
    is connected to the template. The `arcpy.mapping ExportReport()` function can
    be used to connect a data source to a template file to automate the creation of
    a report. In this recipe, you will learn how to use the `ExportReport()` function
    with the `PDFDocument` class to create a report that contains crime information
    for school districts. The report will include attribute information and a map
    of the boundaries of the school district.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS 中的 **报告向导** 可以用来创建报告。ArcGIS 报告有两种原生数据格式：**报告文档文件**（**RDF**）和**报告布局文件**（**RLF**）。RDF
    报告提供数据的静态报告。相当于一次性快照。RLF 是一个模板文件，它使用 **报告设计器** 创建。报告模板文件可以重复使用，并包含报告中的所有字段以及它们的分组、排序和格式。它还包括任何布局元素，如图形或地图。当报告重新运行时，报告将根据与模板连接的源数据重新生成。`arcpy.mapping
    ExportReport()` 函数可以用来将数据源连接到模板文件以自动化报告的创建。在本菜谱中，你将学习如何使用 `ExportReport()` 函数与
    `PDFDocument` 类一起创建包含学区犯罪信息的报告。报告将包括属性信息和学区边界地图。
- en: How to do it…
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: To save some time on this recipe, I have precreated a report template (RLF)
    file for you to use. This file, called `CrimeReport.rlf`, is located in the `c:\ArcpyBook\Ch4`
    folder and contains attribute columns for the name of the school district, number
    of crimes, crime density, and test performance scores. In addition to this, a
    placeholder for a map containing the boundaries of the school district has also
    been added to the template.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省时间，我已经为你预先创建了一个报告模板（RLF）文件供你使用。这个文件名为 `CrimeReport.rlf`，位于 `c:\ArcpyBook\Ch4`
    文件夹中，包含学区名称、犯罪数量、犯罪密度和测试成绩分数的属性列。此外，模板中还添加了一个包含学区边界的地图占位符。
- en: 'Follow these steps to learn how to automate the production of reports using
    the `arcpy.mapping ExportReport()` function and the `PDFDocument` class:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用 `arcpy.mapping ExportReport()` 函数和 `PDFDocument` 类自动化生成报告：
- en: Create a new script file in IDLE or your favorite Python editor and save it
    as `c:\ArcpyBook\Ch4\CreateReport.py`.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 IDLE 或你喜欢的 Python 编辑器中创建一个新的脚本文件，并将其保存为 `c:\ArcpyBook\Ch4\CreateReport.py`。
- en: 'Import the `arcpy` and `os` modules and get the current working directory:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy` 和 `os` 模块，并获取当前工作目录：
- en: '[PRE29]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Create the output PDF file:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建输出 PDF 文件：
- en: '[PRE30]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Create a list of school districts. We''ll loop through this list to create
    reports for each district:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个学区列表。我们将遍历这个列表为每个学区创建报告：
- en: '[PRE31]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Get references to the map document, data frame, and layer:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取地图文档、数据框架和图层的引用：
- en: '[PRE32]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Start a loop through the school districts and apply a `where` clause that acts
    as the definition query so that only the individual school district will be displayed:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始遍历学区，并应用一个 `where` 子句作为定义查询，以便只显示单个学区：
- en: '[PRE33]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Select the individual school district, set the data frame extent to the extent
    of the school district, and clear the selection set:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择单个学区，将数据框架范围设置为学区的范围，并清除选择集：
- en: '[PRE34]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Export the data frame to a bitmap (`.bmp`) file:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据框架导出为位图（`.bmp`）文件：
- en: '[PRE35]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Call the `ExportReport()` function to create the report:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`ExportReport()`函数来创建报告：
- en: '[PRE36]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Append the report to the PDF file:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将报告附加到PDF文件：
- en: '[PRE37]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Remove the temporary PDF report:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除临时PDF报告：
- en: '[PRE38]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Save the PDF document:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存PDF文档：
- en: '[PRE39]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The entire script should appear as follows:![How to do it…](img/B04314_04_16.jpg)
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：![如何操作…](img/B04314_04_16.jpg)
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\CreateReport.py`
    solution file.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch4\CreateReport.py`解决方案文件来检查您的工作。
- en: Save and run your script. This will create a file called `CrimeReport.pdf` in
    your `c:\ArcpyBook\ch4` folder. The contents will contain one report page for
    each school district, as seen in this screenshot:![How to do it…](img/B04314_04_13.jpg)
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并运行您的脚本。这将创建一个名为`CrimeReport.pdf`的文件，位于您的`c:\ArcpyBook\ch4`文件夹中。内容将包含每个学区的一页报告，如本截图所示：![如何操作…](img/B04314_04_13.jpg)
- en: How it works…
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In this recipe, we used several functions and classes that are part of the `arcpy.mapping`
    module, including `PDFDocument`, `ExportToReport()` and `ExportToBMP()`. Initially,
    we used the `PDFDocumentCreate()` function to create an instance of `PDFDocument`,
    which holds a pointer to the `CrimeReport.pdf` file that we'll create. Next, we
    created a list of school districts and began a loop through each of them. Inside
    the loop, for each district, we set a definition query on the layer, selected
    the district, and returned the extent of the district that was used to set the
    extent of the data frame. A bitmap file was then created using the `ExportToBMP()`
    function and the report was generated with the `ExportReport()` function. Finally,
    each page was appended to the `CrimeReport.pdf` file and the document was saved.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们使用了`arcpy.mapping`模块中的几个函数和类，包括`PDFDocument`、`ExportToReport()`和`ExportToBMP()`。最初，我们使用了`PDFDocumentCreate()`函数来创建`PDFDocument`的一个实例，它包含指向我们将创建的`CrimeReport.pdf`文件的指针。接下来，我们创建了一个学区列表，并开始遍历其中的每一个。在循环内部，对于每个学区，我们在图层上设置了一个定义查询，选择了该学区，并返回了用于设置数据框架范围的学区范围。然后，使用`ExportToBMP()`函数创建了一个位图文件，并使用`ExportReport()`函数生成了报告。最后，每个页面都被附加到`CrimeReport.pdf`文件中，并保存了文档。
- en: Building a map book with Data Driven Pages and ArcPy mapping
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用数据驱动页面和ArcPy地图构建地图集
- en: Many organizations have a need to create map books containing a series of individual
    maps that cover a larger geographical area. These map books contain a series of
    maps and some optional and additional pages, including title pages, an overview
    map, and some other ancillary information, such as reports and tables. For example,
    a utility company might want to generate a map book detailing their assets across
    a service area. A map book for this utility company could include a series of
    maps, each at a large scale, along with a title page and an overview map. These
    resources would then be joined together into a single document that could be printed
    or distributed as a PDF file.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织需要创建包含一系列覆盖更大地理区域的单个地图的地图集。这些地图集包含一系列地图和一些可选和附加页面，包括标题页、概述图以及一些其他辅助信息，例如报告和表格。例如，一家公用事业公司可能希望生成一份详细说明其服务区域内资产的地图集。这份公用事业公司的地图集可能包括一系列地图，每个地图都采用大比例尺，以及标题页和概述图。然后，这些资源将被合并成一个可以打印或作为PDF文件分发的单一文档。
- en: Getting ready
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: ArcGIS for Desktop provides the ability to efficiently create a map book through
    a combination of Data Driven Pages along with an `arcpy.mapping` script. With
    a single map document file, you can use the **Data Driven Pages** toolbar to create
    a basic series of maps using the layout view along with your operational data
    and an `index` layer. The `index` layer contains features that will be used to
    define the extent of each map in the series. However, if you need to include additional
    pages in the map book, including a title page, an overview map, and other ancillary
    pages, you'll need to combine the output from the Data Driven Pages toolbar with
    the functionality provided by the `arcpy.mapping` module. With the `arcpy.mapping`
    module, you can automate the export of the map series and append the ancillary
    files to a single map book document. While it is certainly possible to programmatically
    generate the entire map book using only Python and the `arcpy.mapping` module,
    it is more efficient to use a combination of programming and the Data Driven Pages
    toolbar. In this recipe, you'll learn how to create a map book that includes a
    series of maps along with a title page and an overview map page.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS for Desktop通过结合数据驱动页面和`arcpy.mapping`脚本来提供高效创建地图集的能力。使用单个地图文档文件，您可以使用**数据驱动页面**工具栏，通过布局视图以及您的操作数据和`索引`图层来创建一系列基本地图。`索引`图层包含将用于定义系列中每个地图范围的特征。然而，如果您需要在地图集中包含额外的页面，包括标题页、概述图和其他辅助页面，您需要将数据驱动页面工具栏的输出与`arcpy.mapping`模块提供的功能相结合。使用`arcpy.mapping`模块，您可以自动化地图系列的导出并将辅助文件附加到单个地图集文档中。虽然当然可以使用Python和`arcpy.mapping`模块仅通过编程生成整个地图集，但结合编程和数据驱动页面工具栏的组合使用更为高效。在本菜谱中，您将学习如何创建包含一系列地图以及标题页和概述图页的地图集。
- en: How to do it…
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: To save some time on this recipe, I have precreated a map document file for
    you that contains the data and Data Driven Pages functionality to create a series
    of topographic maps for King County, Washington. This map document file, called
    `Topographic.mxd`, can be found in the `c:\ArcpyBook\Ch4` folder. You may want
    to take a few moments to open this file in ArcGIS for Desktop and examine the
    data. The Data Driven Pages functionality has already been enabled for you. Additionally,
    a map title page (`TitlePage.pdf`) and an overview map page (`MapIndex.pdf`) have
    also been created for you. These files are also located in your `c:\ArcpyBook\Ch4`
    folder.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省时间，我已经为您预先创建了一个包含数据和数据驱动页面功能以创建一系列华盛顿州金县地形图的地图文档文件。这个名为`Topographic.mxd`的文件位于`c:\ArcpyBook\Ch4`文件夹中。您可能需要花几分钟时间在ArcGIS
    for Desktop中打开此文件并检查数据。数据驱动页面功能已经为您启用。此外，还为您创建了一个地图标题页（`TitlePage.pdf`）和一个概述图页（`MapIndex.pdf`）。这些文件也位于您的`c:\ArcpyBook\Ch4`文件夹中。
- en: The steps to generate a map series can be somewhat lengthy, and are beyond the
    scope of this book. However, if you'd like an overview of the process, go to the
    **ArcGIS Desktop Help** system, navigate to **Desktop** | **Mapping** | **Page
    layouts** | **Creating a Map Book**, and follow the first seven items under this
    folder. This includes building map books with ArcGIS through adding dynamic text
    to your map book.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 生成地图系列的步骤可能有些长，超出了本书的范围。但是，如果您想了解过程概述，请访问**ArcGIS Desktop帮助系统**，导航到**桌面** |
    **地图** | **页面布局** | **创建地图集**，并遵循此文件夹下的前七项。这包括通过向地图集中添加动态文本来使用ArcGIS创建地图集。
- en: 'Follow these steps to learn how to use the Data Driven Pages functionality
    and the `arcpy.mapping` module to create a map book:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用数据驱动页面功能和`arcpy.mapping`模块来创建地图集：
- en: Create a new IDLE script and save it as `c:\ArcpyBook\Ch4\DataDrivenPages_MapBook.py`.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的IDLE脚本并将其保存为`c:\ArcpyBook\Ch4\DataDrivenPages_MapBook.py`。
- en: 'Import the `arcpy` and `os` modules:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy`和`os`模块：
- en: '[PRE40]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Create an output directory variable:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个输出目录变量：
- en: '[PRE41]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Create a new, empty PDF document in the specified output directory:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在指定的输出目录中创建一个新的、空的PDF文档：
- en: '[PRE42]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Add the title page to the PDF:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将标题页添加到PDF中：
- en: '[PRE43]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Add the index map to the PDF:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将索引图添加到PDF中：
- en: '[PRE44]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Export the Data Driven Pages to a temporary PDF and then add it to the final
    PDF:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据驱动页面导出到一个临时PDF文件，并将其添加到最终PDF中：
- en: '[PRE45]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Update the properties of the final PDF:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新最终PDF的属性：
- en: '[PRE46]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Save the PDF:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存PDF：
- en: '[PRE47]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Remove the temporary Data Driven Pages file:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除临时数据驱动页面文件：
- en: '[PRE48]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The entire script should appear as follows:![How to do it…](img/B04314_04_17.jpg)
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：![如何操作…](img/B04314_04_17.jpg)
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\DataDrivenPages_MapBook.py`
    solution file.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch4\DataDrivenPages_MapBook.py`解决方案文件来验证您的作品。
- en: Save and execute your script. If the script successfully executes, you should
    find a new file called `MapBook.pdf` in the `c:\ArcpyBook\Ch4` folder. When you
    open this file, you should see this screenshot:![How to do it…](img/B04314_04_9.jpg)
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并执行您的脚本。如果脚本成功执行，您应该在`c:\ArcpyBook\Ch4`文件夹中找到一个名为`MapBook.pdf`的新文件。当您打开这个文件时，您应该看到这个截图：![如何操作…](img/B04314_04_9.jpg)
- en: How it works…
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The `PDFDocument` class in the `arcpy.mapping` module is frequently used to
    create map books. In this recipe, we used the `PDFDocumentCreate()` function to
    create an instance of `PDFDocument`. A path to the output PDF file was passed
    into the `PDFDocumentCreate()` function. With this instance of `PDFDocument`,
    we then called the `PDFDocument.appendPages()` method twice, inserting the title
    page and map index files that already existed as PDF files. Next, we retrieved
    a `dataDrivenPages` object from the map document file and exported each of the
    pages to a single PDF document. This document was then appended to our final output
    PDF file that already contained the title page and map index page. Finally, we
    updated the `PDFDocument` properties to use thumbs and a single page view, saved
    the entire file, and removed the temporary data drive page document.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping`模块中的`PDFDocument`类常用于创建地图集。在这个示例中，我们使用了`PDFDocumentCreate()`函数来创建一个`PDFDocument`实例。将输出PDF文件的路径传递给了`PDFDocumentCreate()`函数。使用这个`PDFDocument`实例，我们随后调用了两次`PDFDocument.appendPages()`方法，插入已经存在的作为PDF文件的标题页和地图索引文件。接下来，我们从地图文档文件中检索了一个`dataDrivenPages`对象，并将每一页导出到单个PDF文档中。然后，将这个文档附加到我们最终的输出PDF文件中，该文件已经包含了标题页和地图索引页。最后，我们更新了`PDFDocument`属性以使用缩略图和单页视图，保存了整个文件，并删除了临时数据驱动页面文档。'
- en: Publishing a map document to an ArcGIS Server service
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将地图文档发布到ArcGIS Server服务
- en: Using the `arcpy.mapping` module, it is possible to publish your map document
    files to **ArcGIS Server** as map services. ArcGIS Server is a platform to distribute
    maps and data on the Web. Using the ArcGIS JavaScript API, web and mobile applications
    can be created from services created in ArcGIS Server. For more information about
    ArcGIS Server, please visit the esri ArcGIS Server site at [http://www.esri.com/software/arcgis/arcgisserver](http://www.esri.com/software/arcgis/arcgisserver).
    There are several steps involved in creating a map service from a map document
    file. The map document file must first be analyzed for suitability and performance
    issues and any resulting errors must be fixed before final publication to ArcGIS
    Server. This process involves several steps including a call to an `arcpy.mapping`
    function along with the use of a couple of tools in `ArcToolbox` that can be called
    from your script. After errors have been fixed, you can then upload the resulting
    **Service Definition Draft** file to ArcGIS Server as a service.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`arcpy.mapping`模块，您可以将地图文档文件发布到**ArcGIS Server**作为地图服务。ArcGIS Server是一个在网络上分发地图和数据的平台。使用ArcGIS
    JavaScript API，可以从ArcGIS Server中创建的服务创建Web和移动应用程序。有关ArcGIS Server的更多信息，请访问esri
    ArcGIS Server网站[http://www.esri.com/software/arcgis/arcgisserver](http://www.esri.com/software/arcgis/arcgisserver)。从地图文档文件创建地图服务涉及几个步骤。地图文档文件必须首先分析其适用性和性能问题，并在最终发布到ArcGIS
    Server之前修复任何出现的错误。这个过程包括调用`arcpy.mapping`函数以及使用`ArcToolbox`中的几个工具，这些工具可以从您的脚本中调用。错误修复后，您可以上传生成的**服务定义草案**文件到ArcGIS
    Server作为服务。
- en: Getting ready
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The publication of a map document to ArcGIS Server with Python is a three-step
    process. The first step is to call the `CreateMapSDDraft() arcpy.mapping` function.
    This will convert a map document file to a Service Definition Draft file. This
    file contains a combination of a map document, information about the server, and
    a set of service properties. Information about the server includes the server
    connection or server type being published to, the type of service being published,
    metadata for the service, and data references. The draft service definition file
    does not contain data. `CreateMapSDDraft()` also generates a Python dictionary
    containing errors and warnings that could cause problems with the publication
    of the service.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Python将地图文档发布到ArcGIS Server是一个三步过程。第一步是调用`CreateMapSDDraft()` `arcpy.mapping`函数。这将把地图文档文件转换为服务定义草稿文件。此文件包含地图文档、关于服务的信息以及一组服务属性。关于服务的信息包括要发布到的服务器连接或服务器类型、要发布的服务类型、服务的元数据以及数据引用。草稿服务定义文件不包含数据。`CreateMapSDDraft()`还会生成一个包含可能引起服务发布问题的错误和警告的Python字典。
- en: 'The second step is to call the **StageService Tool(.sd)**. Staging compiles
    the information needed to successfully publish the GIS resources. If your data
    is not registered with the server, it will be added when Service Definition Draft
    is staged. Finally, the Service Definition Draft file can be uploaded and published
    as a GIS service to a specified GIS server by using the **UploadServiceDefinition
    Tool**. This step takes the Service Definition file, copies it onto the server,
    extracts the required information, and publishes the GIS resource. Here is an
    illustration of this process:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是调用**StageService工具(.sd)**。暂存编译了成功发布GIS资源所需的信息。如果您的数据未在服务器上注册，它将在服务定义草稿暂存时添加。最后，可以使用**UploadServiceDefinition工具**将服务定义草稿文件上传并发布为GIS服务到指定的GIS服务器。此步骤将服务定义文件复制到服务器上，提取所需信息，并发布GIS资源。以下是此过程的示意图：
- en: '![Getting ready](img/B04314_04_10.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/B04314_04_10.jpg)'
- en: Note that you will need to have access to an ArcGIS Server instance and also
    have the necessary privileges to publish a service to complete this exercise.
    In this recipe, you will learn how to publish a map document file to an ArcGIS
    Server map service.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您需要能够访问ArcGIS Server实例，并且还需要有发布服务的必要权限才能完成此练习。在本食谱中，您将学习如何将地图文档文件发布到ArcGIS
    Server地图服务。
- en: How to do it…
  id: totrans-264
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to analyze a map document for suitability for publication
    to ArcGIS Server and then publish it as a map service:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤分析地图文档，以确定其是否适合发布到ArcGIS Server，然后将其作为地图服务发布：
- en: Create a new IDLE script and save it as `c:\ArcpyBook\Ch4\PublishMapService.py`.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的IDLE脚本，并将其保存为`c:\ArcpyBook\Ch4\PublishMapService.py`。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE49]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Set the current workspace:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置当前工作空间：
- en: '[PRE50]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Get a reference to the map document:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取地图文档的引用：
- en: '[PRE51]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Define variables for the service name and Service Draft Definition file:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义服务名称和服务草稿定义文件的变量：
- en: '[PRE52]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Create the Service Definition Draft file:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建服务定义草稿文件：
- en: '[PRE53]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Analyze the draft file:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分析草稿文件：
- en: '[PRE54]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Create a looping structure that will loop through all the potential messages,
    warnings, and errors, and print out the information:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个循环结构，该结构将遍历所有潜在的消息、警告和错误，并打印出信息：
- en: '[PRE55]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: The entire script should appear as follows:![How to do it…](img/B04314_04_18.jpg)
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：![如何操作…](img/B04314_04_18.jpg)
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\PublishMapService.py`
    solution file.
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过检查`c:\ArcpyBook\code\Ch4\PublishMapService.py`解决方案文件来验证您的操作。
- en: 'Save and run your code to see this output:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并运行您的代码以查看此输出：
- en: '[PRE56]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Tip
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You'll want to pay particular attention to the Errors section. Errors must be
    fixed before the service can be created. Warnings can indicate problems related
    to the performance of the service but they won't stop a service from being published.
    In this case, the error indicates that the data frame uses a background symbol
    that is not a solid fill. This will need to be corrected in ArcGIS before we can
    proceed.
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您需要特别注意错误部分。在创建服务之前，必须修复错误。警告可能表明与服务的性能相关的问题，但它们不会阻止服务发布。在这种情况下，错误表明数据帧使用了一个不是实心填充的背景符号。在我们可以继续之前，需要在ArcGIS中进行更正。
- en: In ArcMap, open `crime.mxd` in the `c:\ArcpyBook\ch4` folder and right-click
    on the **Crime** data frame and select **Properties**.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中，打开位于`c:\ArcpyBook\ch4`文件夹中的`crime.mxd`文件，在**Crime**数据帧上右键单击并选择**属性**。
- en: Select the **Frame** tab, as seen in this screenshot:![How to do it…](img/B04314_04_11.jpg)
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **框架** 选项卡，如图所示：![如何操作…](img/B04314_04_11.jpg)
- en: Change the **Background** from the current symbol to none and click on **OK**:![How
    to do it…](img/B04314_04_12.jpg)
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **背景** 从当前符号更改为无，然后点击 **确定**：![如何操作…](img/B04314_04_12.jpg)
- en: Repeat this process for each of the data frames in the map document.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对地图文档中的每个数据帧重复此过程。
- en: Rerun the script you just wrote. This time, you shouldn't see any errors. You
    do still have a warning that should probably be fixed as well, but warnings won't
    stop your map document from being published as a service.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新运行你刚才编写的脚本。这次，你不应该看到任何错误。你仍然有一个可能需要修复的警告，但警告不会阻止你的地图文档作为服务发布。
- en: With all our errors fixed, we'll now convert the `Crime.mxd` file into a `Crime.sd`
    file. Delete the looping structure that you added in step 6.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有错误都修复后，我们现在将 `Crime.mxd` 文件转换为 `Crime.sd` 文件。删除你在第 6 步中添加的循环结构。
- en: 'Add the following `if`/`else` block of code. Note that I have commented on
    the line of code that calls the `UploadServiceDefinition` tool. If you have access
    to an ArcGIS Server instance and have the appropriate privileges and connection
    information, you can uncomment this line to have it upload the file as a map service.
    You would also need to add the connection parameters for the instance in the `con`
    variable, which is passed as the second parameter for this tool. Save and execute
    the script to see the results:'
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下 `if`/`else` 代码块。请注意，我对调用 `UploadServiceDefinition` 工具的代码行进行了注释。如果你有权访问一个
    ArcGIS Server 实例，并且拥有适当的权限和连接信息，你可以取消注释此行，以便将其作为地图服务上传文件。你还需要在 `con` 变量中添加实例的连接参数，该变量作为此工具的第二个参数传递。保存并执行脚本以查看结果：
- en: '[PRE57]'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Your entire script should appear as follows:![How to do it…](img/B04314_04_19.jpg)
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的整个脚本应该如下所示：![如何操作…](img/B04314_04_19.jpg)
- en: You can check your work by examining the `c:\ArcpyBook\code\Ch4\PublishMapService2.py`
    solution file.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过检查 `c:\ArcpyBook\code\Ch4\PublishMapService2.py` 解决方案文件来检查你的工作。
- en: If you have access to an ArcGIS Server instance and have the necessary privileges,
    you can uncomment the `UploadServiceDefinition` tool and execute the script.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你有权访问一个 ArcGIS Server 实例并且拥有必要的权限，你可以取消注释 `UploadServiceDefinition` 工具并执行脚本。
- en: How it works…
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `CreateMapSDDraft()` function creates a Service Definition Draft file from
    a map document file. Next, we call the `AnalyzeForSD()` function and examine the
    results that are returned for any messages, warnings, or errors. Any errors that
    are identified must then be fixed before the map service can be created. Finally,
    if no errors are present, we call the `StageService` tool that creates a Service
    Definition Draft file that can then be passed into the `UploadServiceDefinition`
    tool for publication to ArcGIS Server.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '`CreateMapSDDraft()` 函数从地图文档文件创建服务定义草案文件。接下来，我们调用 `AnalyzeForSD()` 函数并检查返回的消息、警告或错误。任何识别出的错误必须在创建地图服务之前修复。最后，如果没有错误，我们调用
    `StageService` 工具，该工具创建一个可以传递给 `UploadServiceDefinition` 工具进行发布的 Service Definition
    Draft 文件。'
