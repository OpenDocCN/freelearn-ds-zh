- en: Chapter 12. Exporting and Presenting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章 导出与展示
- en: 'In this chapter, will cover how to export results and nicely present them through
    the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖如何导出结果并通过以下食谱优雅地展示它们：
- en: Exporting data to a CSV file
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据导出到CSV文件
- en: Exporting data as JSON
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据导出为JSON
- en: Using SQLite to store data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SQLite存储数据
- en: Saving data to a MongoDB database
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据保存到MongoDB数据库
- en: Presenting results in an HTML web page
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在HTML网页中展示结果
- en: Creating a LaTeX table to display results
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建LaTeX表格以展示结果
- en: Personalizing messages using a text template
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用文本模板个性化消息
- en: Exporting matrix values to a file
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将矩阵值导出到文件
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '![Introduction](img/ch12.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![介绍](img/ch12.jpg)'
- en: After gathering, cleaning, representing, and analyzing, the last important step
    in data analysis is to export and present the data in a usable format. The recipes
    in this chapter will cover how to save a data structure on disk for later use
    by other programs. Moreover, we will show how to present the data elegantly with
    Haskell.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据收集、清洗、表示和分析后，数据分析的最后一步是将数据导出并以可用格式展示。 本章中的食谱将展示如何将数据结构保存到磁盘，以供其他程序后续使用。此外，我们还将展示如何使用Haskell优雅地展示数据。
- en: Exporting data to a CSV file
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据导出到CSV文件
- en: Sometimes, it's more convenient to view data using a spreadsheet program such
    as LibreOffice, Microsoft Office Excel, or Apple Numbers. A standard way to export
    and import simple spreadsheet tables is through **Comma Separated Values** (**CSVs**).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，使用像LibreOffice、Microsoft Office Excel或Apple Numbers这样的电子表格程序查看数据更为便捷。导出和导入简单电子表格表格的标准方式是通过**逗号分隔值**（**CSV**）。
- en: In this recipe, we will use the `cassava` package to easily encode a CSV file
    out of a data structure.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将使用`cassava`包轻松地从数据结构编码一个CSV文件。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Install the Cassava CSV package from cabal, using the following command line:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令从cabal安装Cassava CSV包：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to do it…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现……
- en: 'Import the relevant packages using the following code:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码导入相关包：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Define an association list of data that will be exported as CSV. For this recipe,
    we will pair letters and numbers together, as shown in the following code:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将作为CSV导出的数据关联列表。在这个食谱中，我们将字母和数字配对，如以下代码所示：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Run the `encode` function to convert the data structure into a lazy ByteString
    CSV representation, as shown in the following code:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`encode`函数将数据结构转换为懒加载的ByteString CSV表示，如以下代码所示：
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works…
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: A CSV file is simply a list of records. The `encode` function in the Cassava
    library takes a list of items that implement the `ToRecord` typeclass.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: CSV文件只是记录的列表。Cassava库中的`encode`函数接受实现了`ToRecord`类型类的项列表。
- en: In this recipe, we can see that tuples of size 2 such as `('A', 1)` are valid
    arguments to the `encode` function. By default, tuples of size 2 to 7 are supported
    along with lists of arbitrary sizes. Each element of the tuple or list must implement
    the `ToField` typeclass, which most built-in primitive data types support by default.
    More details on the package can be found at [https://hackage.haskell.org/package/cassava](https://hackage.haskell.org/package/cassava).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们可以看到像`('A', 1)`这样的大小为2的元组是`encode`函数的有效参数。默认情况下，支持大小为2到7的元组以及任意大小的列表。元组或列表的每个元素必须实现`ToField`类型类，大多数内置的原始数据类型默认支持该类。有关该包的更多细节，请访问[https://hackage.haskell.org/package/cassava](https://hackage.haskell.org/package/cassava)。
- en: There's more…
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: In order to easily convert a data type into CSV, we can implement the `ToRecord`
    typeclass.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便地将数据类型转换为CSV，我们可以实现`ToRecord`类型类。
- en: 'For example, the Cassava documentation shows the following example of converting
    a `Person` data type into a CSV record:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Cassava文档展示了以下将`Person`数据类型转换为CSV记录的例子：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: See also
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: For JSON instead, refer to the following *Exporting data as JSON* recipe.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是JSON格式，请参考以下*导出数据为JSON*食谱。
- en: Exporting data as JSON
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出数据为JSON
- en: A convenient way to store data that may not adhere to a strict schema is through
    JSON. To accomplish this, we will use a painless JSON library called **Yocto**.
    It sacrifices performance for readability and small size.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 存储可能不遵循严格模式的数据的便捷方式是通过JSON。为此，我们将使用一个名为**Yocto**的简便JSON库。它牺牲了性能以提高可读性并减小体积。
- en: In this recipe, we will export a list of points as JSON.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将导出一个点的列表为JSON格式。
- en: Getting ready
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Install the Yocto JSON encoder and decoder from cabal using the following command:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令从cabal安装Yocto JSON编码器和解码器：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How to do it…
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现……
- en: 'Start by creating a new file, which we call `Main.hs` and perform the following
    steps:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从创建一个新的文件开始，我们称其为`Main.hs`，并执行以下步骤：
- en: 'Import the relevant data structures, as shown in the following code:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下所示导入相关数据结构：
- en: '[PRE6]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Define a data structure for 2D points:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下所示定义一个二维点的数据结构：
- en: '[PRE7]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Convert a `Point` data type into a JSON object, as shown in the following code:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Point`数据类型转换为JSON对象，如下方代码所示：
- en: '[PRE8]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create the points and construct a JSON array out of them:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建点并构建一个JSON数组：
- en: '[PRE9]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Write the JSON array to a file, as shown in the following code:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将JSON数组写入文件，如下方代码所示：
- en: '[PRE10]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'When running the code, we will find the `points.json` file created, as seen
    in the following code:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行代码时，我们会发现生成了`points.json`文件，如下方代码所示：
- en: '[PRE11]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There's more…
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: For a more efficient JSON encoder, see the Aeson package located at [http://hackage.haskell.org/package/aeson](http://hackage.haskell.org/package/aeson).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 若需更高效的JSON编码器，请参考Aeson包，位于[http://hackage.haskell.org/package/aeson](http://hackage.haskell.org/package/aeson)。
- en: See also
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: To export data to CSV, refer to the previous recipe titled *Exporting data to
    a CSV file*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要将数据导出为CSV，请参考前面标题为*导出数据到CSV文件*的食谱。
- en: Using SQLite to store data
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SQLite存储数据
- en: SQLite is one of the most popular databases for compactly storing structured
    data. We will use the SQL binding for Haskell to store a list of strings.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite是最流行的数据库之一，用于紧凑地存储结构化数据。我们将使用Haskell的SQL绑定来存储字符串列表。
- en: Getting Ready
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We must first install the SQLite3 database on our system. On Debian-based systems,
    we can issue the following installation command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须首先在系统上安装SQLite3数据库。在基于Debian的系统上，我们可以通过以下命令进行安装：
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Install the SQLite package from cabal, as shown in the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令从cabal安装SQLite包：
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create an initial database called `test.db` that sets up the schema. In this
    recipe, we will only be storing integers with strings as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`test.db`的初始数据库，并设置其模式。在本食谱中，我们只会存储整数和字符串，如下所示：
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How to do it…
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: 'Import the relevant libraries, as shown in the following code:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入相关库，如下方代码所示：
- en: '[PRE15]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a `FromRow` typeclass implementation for `TestField`, the data type
    we will be storing, as shown in the following code:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`TestField`（我们将要存储的数据类型）创建一个`FromRow`类型类的实现，如下方代码所示：
- en: '[PRE16]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Create a helper function to retrieve everything form the database just for
    debugging purposes, as shown in the following code:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个辅助函数，用于仅为调试目的从数据库中检索所有数据，如下方代码所示：
- en: '[PRE17]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Create a helper function to insert a string into the database, as shown in
    the following code:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个辅助函数，将字符串插入数据库，如下方代码所示：
- en: '[PRE18]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Connect to the database, as shown in the following code:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下所示连接到数据库：
- en: '[PRE19]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Set up the string data we want to insert, as shown in the following code:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置我们希望插入的字符串数据，如下方代码所示：
- en: '[PRE20]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Insert each of the elements to the database, as shown in the following code:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个元素插入数据库，如下方代码所示：
- en: '[PRE21]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Print out the database, using the following code:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码打印数据库内容：
- en: '[PRE22]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We can verify that the database contains the newly inserted data by evoking
    the following command:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过调用以下命令验证数据库中是否包含新插入的数据：
- en: '[PRE23]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: See also
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: For another type of database, refer to the following *Saving data to a MongoDB
    database* recipe.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 若使用另一种类型的数据库，请参考以下食谱*保存数据到MongoDB数据库*。
- en: Saving data to a MongoDB database
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存数据到MongoDB数据库
- en: MongoDB can very naturally store unstructured data using the JSON syntax. In
    this recipe, we will store a list of people to MongoDB.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB可以非常自然地使用JSON语法存储非结构化数据。在本例中，我们将把一组人员数据存储到MongoDB中。
- en: Getting ready
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We must first install MongoDB on our machine. The installation files can be
    downloaded from [http://www.mongodb.org](http://www.mongodb.org).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须首先在机器上安装MongoDB。安装文件可以从[http://www.mongodb.org](http://www.mongodb.org)下载。
- en: 'We need to make a directory for the database using the following command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使用以下命令为数据库创建一个目录：
- en: '[PRE24]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Finally, start the MongoDB daemon on that directory using the following command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用以下命令在该目录下启动MongoDB守护进程：
- en: '[PRE25]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Install the MongoDB package from cabal using the following command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令从cabal安装MongoDB包：
- en: '[PRE26]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: How to do it…
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: 'Create a new file called `Main.hs` and perform the following steps:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`Main.hs`的新文件，并执行以下步骤：
- en: 'Import the libraries as follows:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照如下方式导入库：
- en: '[PRE27]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Define a data type for the names of people as follows:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下所示定义一个表示人物姓名的数据类型：
- en: '[PRE28]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Set up a couple of data items we wish to store as follows:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置我们希望存储的几个数据项，如下所示：
- en: '[PRE29]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Connect to the MongoDB instance and store all the data as follows:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到MongoDB实例并存储所有数据，如下所示：
- en: '[PRE30]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Convert the `Person` data type into the proper MongoDB type as follows:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式将`Person`数据类型转换为适当的MongoDB类型：
- en: '[PRE31]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We must ensure that a MongoDB daemon is running. If not, we can create a process
    that listens to the directory of our choice using the following command:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须确保MongoDB守护进程正在运行。如果没有，我们可以使用以下命令创建一个监听我们选择目录的进程：
- en: '[PRE32]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'After running the code, we can double-check if the operation was successful
    by navigating to MongoDB using the following commands:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行代码后，我们可以通过以下命令检查操作是否成功，方法是访问MongoDB：
- en: '[PRE33]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: See also
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: For SQL usage, refer to the previous *Using SQLite to store data* recipe.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 对于SQL的使用，请参考之前的*使用SQLite存储数据*的做法。
- en: Presenting results in an HTML web page
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在HTML网页中展示结果
- en: Sharing data online is one of the quickest ways to reach a broad audience. However,
    typing data into HTML directly can be time consuming. This recipe will generate
    a web page using the Blaze Haskell library to present data results. For more documentation
    and tutorials, visit the project webpage at [http://jaspervdj.be/blaze/](http://jaspervdj.be/blaze/).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在线共享数据是触及广泛受众的最快方式之一。然而，直接将数据输入到HTML中可能会耗费大量时间。本做法将使用Blaze Haskell库生成一个网页，来展示数据结果。更多文档和教程，请访问项目网页[http://jaspervdj.be/blaze/](http://jaspervdj.be/blaze/)。
- en: Getting ready
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Install the Blaze package from cabal using the following command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 从cabal使用以下命令安装Blaze包：
- en: '[PRE34]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: How to do it…
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In a new file called `Main.hs`, perform the following steps:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个名为`Main.hs`的新文件中，执行以下步骤：
- en: 'Import all the necessary libraries as follows:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式导入所有必要的库：
- en: '[PRE35]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Convert the list of string into an HTML unordered list as shown in the following
    code snippet:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下代码片段将字符串列表转换为HTML无序列表：
- en: '[PRE36]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create a list of strings to render as an HTML web page as follows:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个字符串列表，并按以下方式将其渲染为HTML网页：
- en: '[PRE37]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Run the code to generate the HTML file to open using a browser as follows:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行代码以生成HTML文件，并使用浏览器打开，如下所示：
- en: '[PRE38]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The output will be as follows:'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![How to do it…](img/6331OS_12_01.jpg)'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![How to do it…](img/6331OS_12_01.jpg)'
- en: See also
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: To present data as a LaTeX document and consequently as a PDF, refer to the
    following *Creating a LaTeX table to display results* recipe.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要将数据呈现为LaTeX文档并最终生成PDF，请参考以下*创建一个LaTeX表格来展示结果*的做法。
- en: Creating a LaTeX table to display results
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个LaTeX表格来展示结果
- en: This recipe will create a table in LaTeX programmatically to facilitate document
    creation. We can create a PDF out of the LaTeX code and share it as we please.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 本做法将通过编程方式创建一个LaTeX表格，以便于文档的创建。我们可以从LaTeX代码生成PDF并随意分享。
- en: Getting Ready
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Install `HaTeX`, the Haskell LaTeX library, from cabal:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 从cabal安装`HaTeX`，Haskell LaTeX库：
- en: '[PRE39]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: How to do it…
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Create a file named `Main.hs` and follow these steps:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`Main.hs`的文件，并按照以下步骤进行：
- en: 'Import the libraries as follows:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式导入库：
- en: '[PRE40]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Save a LaTeX file with our specifications as follows:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下规格保存一个LaTeX文件：
- en: '[PRE41]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Define the document, which is split up into a preamble and a body, as follows:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式定义文档，文档被分为前言和正文：
- en: '[PRE42]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The preamble contains author data, title, and formatting options, among other
    things, as presented in the following code:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前言部分包含作者数据、标题、格式选项等内容，如下代码所示：
- en: '[PRE43]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Define the list of data we would like to convert into a LaTeX table as follows:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式定义我们希望转换为LaTeX表格的数据列表：
- en: '[PRE44]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Define the body as follows:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式定义正文：
- en: '[PRE45]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Set up the title and section, and construct the table as shown in the following
    code snippet:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置标题和章节，并按照以下代码片段构建表格：
- en: '[PRE46]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'After running the code using the following commands, we can obtain the PDF
    and view it:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令后，我们可以获取PDF并查看：
- en: '[PRE47]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The output will be as follows:'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![How to do it…](img/6331OS_12_02.jpg)'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![How to do it…](img/6331OS_12_02.jpg)'
- en: See also
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: To construct a web page instead, refer to the previous recipe titled *Presenting
    results in an HTML web page*.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建一个网页，请参考前面的做法，标题为*在HTML网页中展示结果*。
- en: Personalizing messages using a text template
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用文本模板个性化消息
- en: Sometimes we have a large list of usernames and relating data and we wish to
    individually send each person a message. This recipe will create a text template
    that will be filled out from the data.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们有一个包含大量用户名和相关数据的列表，并且希望单独向每个人发送消息。本做法将创建一个文本模板，该模板将从数据中填充。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Install the `template` library using cabal:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使用cabal安装`template`库：
- en: '[PRE48]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: How to do it…
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps in a new file called `Main.hs`:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个名为`Main.hs`的新文件中执行以下步骤：
- en: 'Import the libraries as follows:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式导入相关库：
- en: '[PRE49]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Define the data we are dealing with as follows:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义我们处理的数据如下：
- en: '[PRE50]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Define the template for the data as follows:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义数据模板如下：
- en: '[PRE51]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Create a helper function to convert data items to a template as follows:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个辅助函数，将数据项转换为模板，如下所示：
- en: '[PRE52]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Match each data item to the template and print everything out to a text file,
    as shown in the following code snippet:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个数据项与模板匹配，并将所有内容打印到文本文件中，如下代码片段所示：
- en: '[PRE53]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Run the code to see the resulting file:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行代码以查看生成的文件：
- en: '[PRE54]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Exporting matrix values to a file
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将矩阵值导出到文件
- en: In data analysis and machine learning, matrices are a popular data structure
    that often need to be exported and imported into the program. In this recipe,
    we will export a sample matrix using the Repa I/O library.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据分析和机器学习中，矩阵是一种常见的数据结构，经常需要导入和导出到程序中。在这个方案中，我们将使用 Repa I/O 库导出一个示例矩阵。
- en: Getting ready
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Install the `repa-io` library using cabal as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 cabal 安装`repa-io`库，如下所示：
- en: '[PRE55]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: How to do it…
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做……
- en: 'Create a new file, which we name `Main.hs`, and insert the code explained in
    the following steps:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新文件，我们命名为`Main.hs`，并插入接下来步骤中解释的代码：
- en: 'Import the relevant libraries as follows:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式导入相关库：
- en: '[PRE56]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Define a 4 x 3 matrix as follows:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个 4 x 3 的矩阵，如下所示：
- en: '[PRE57]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Write the matrix to a file as follows:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将矩阵写入文件，如下所示：
- en: '[PRE58]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: How it works…
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理……
- en: The matrix is represented simply as a list of its elements in row-major order.
    The first two lines of the file define the type of data and the dimensions.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵简单地表示为其元素的列表，按行优先顺序排列。文件的前两行定义了数据类型和维度。
- en: There's more…
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: To read a matrix back from this file, we can use the `readMatrixFromTextFile`
    function to retrieve the two-dimensional matrix. More documentation about this
    package is available at [https://hackage.haskell.org/package/repa-io](https://hackage.haskell.org/package/repa-io).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 要从此文件中读取矩阵，我们可以使用`readMatrixFromTextFile`函数来检索二维矩阵。更多关于此包的文档可以在[https://hackage.haskell.org/package/repa-io](https://hackage.haskell.org/package/repa-io)找到。
