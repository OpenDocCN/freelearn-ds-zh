- en: Chapter 5. Automating Map Production and Printing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章：自动化地图生产和打印
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Creating a list of layout elements
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建布局元素列表
- en: Assigning a unique name to layout elements
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为布局元素分配一个唯一的名称
- en: Restricting the layout elements returned by ListLayoutElements()
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制`ListLayoutElements()`返回的布局元素
- en: Updating layout element properties
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新布局元素属性
- en: Getting a list of available printers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取可用打印机的列表
- en: Printing maps with PrintMap()
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`PrintMap()`打印地图
- en: Exporting a map to a PDF file
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将地图导出为PDF文件
- en: Exporting a map to an image file
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将地图导出为图像文件
- en: Creating a map book with PDFDocumentCreate() and PDFDocumentOpen()
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`PDFDocumentCreate()`和`PDFDocumentOpen()`创建地图册
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: The `arcpy.mapping` module, released with ArcGIS 10, provides a number of capabilities
    related to the automation of map production. `arcpy.mapping` can be used to automate
    map production, build map books, export to image or PDF files, and create and
    manage PDF files. In this chapter, you'll learn how to use the `arcpy.mapping`
    module to automate various geoprocessing tasks related to map production and printing.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping`模块，随ArcGIS 10发布，提供了一系列与地图生产自动化相关的功能。`arcpy.mapping`可用于自动化地图生产、构建地图册、导出为图像或PDF文件，以及创建和管理PDF文件。在本章中，您将学习如何使用`arcpy.mapping`模块来自动化与地图生产和打印相关的各种地理处理任务。'
- en: Creating a list of layout elements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建布局元素列表
- en: Often, the first step in a geoprocessing script that automates the production
    of maps is to generate a list of the available layout elements. For example, you
    might need to update the title of your map before printing or creating a PDF file.
    In this case, the title would likely be stored in a `text` element. You can generate
    a list of `text` elements in your map layout view and then change the title in
    it. The first step is to generate a list of `text` elements.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在自动化地图生产的地理处理脚本中，第一步通常是生成可用布局元素的列表。例如，您可能需要在打印或创建PDF文件之前更新地图的标题。在这种情况下，标题可能存储在一个`text`元素中。您可以在地图布局视图中生成`text`元素的列表，然后更改其中的标题。第一步是生成`text`元素的列表。
- en: Getting ready...
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中...
- en: 'In ArcMap, two views are available, namely, data view and layout view. **Data
    view** is used to view geographic and tabular data, analyze data, symbolize layers,
    and manage data without regard for any particular map page size or layout. **Layout
    view** shows the map as printed on a page, and is used to create production-quality
    maps through the addition of map elements. These elements include map frames,
    layers, legends, titles, north arrows, scale bars, and title blocks. Each object
    in the layout is represented in `arcpy.mapping` as a layout element class. Examples
    of many of these layout element classes are displayed in the following screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在ArcMap中，有两个视图可用，即数据视图和布局视图。**数据视图**用于查看地理和表格数据、分析数据、符号化图层以及管理数据，而不考虑任何特定的地图页面大小或布局。**布局视图**显示打印在页面上的地图，并用于通过添加地图元素来创建生产质量的地图。这些元素包括地图框架、图层、图例、标题、北箭头、比例尺和标题块。布局中的每个对象在`arcpy.mapping`中均表示为一个布局元素类。以下截图显示了这些布局元素类中的许多示例：
- en: '![Getting ready...](img/4445_05_1.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![准备中...](img/4445_05_1.jpg)'
- en: Each element can be assigned a unique name that can then be used to access the
    element programmatically. This unique name is defined in ArcMap. The `arcpy.mapping`
    module provides a `ListLayoutElements()` function that returns a list of all these
    elements. In this recipe, you will learn to use the `ListLayoutElements()` function
    to generate a list of map layout elements.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每个元素都可以分配一个唯一的名称，然后可以用来以编程方式访问该元素。这个唯一的名称在ArcMap中定义。`arcpy.mapping`模块提供了一个`ListLayoutElements()`函数，该函数返回所有这些元素的列表。在本菜谱中，您将学习如何使用`ListLayoutElements()`函数生成地图布局元素列表。
- en: How to do it…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to generate a list of layout elements:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何生成布局元素列表：
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Open the Python window.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE0]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Reference the currently active document (`Crime_Ch5.mxd`) and assign the reference
    to a variable:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch5.mxd`）并将引用分配给一个变量：
- en: '[PRE1]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Generate a list of layout elements and print them to the screen if the name
    property is not empty:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成布局元素列表并将其打印到屏幕上，如果名称属性不为空：
- en: '[PRE2]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The entire script should appear as follows:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：
- en: '[PRE3]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Run the script to see the following output:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE4]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How it works…
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`ListLayoutElements()` returns a list of layout elements in the form of various
    layout classes. Each element can be one of the following object instances: `GraphicElement`,
    `LegendElement`, `PictureElement`, `TextElement`, or `MapSurroundElement`. Each
    element can have a unique name. You don''t have to assign a name to each element,
    but it is helpful to do so if you plan to access these elements programmatically
    in your scripts. In this script, we first made sure that the element had a name
    assigned to it before printing the name. This was done because ArcMap does not
    require that an element be assigned a name.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayoutElements()`函数返回一个布局元素的列表，这些元素以各种布局类的形式存在。每个元素可以是以下对象实例之一：`GraphicElement`、`LegendElement`、`PictureElement`、`TextElement`或`MapSurroundElement`。每个元素都可以有一个唯一名称。您不必为每个元素分配名称，但如果您计划在脚本中以编程方式访问这些元素，这样做会有所帮助。在这个脚本中，我们在打印名称之前确保元素已分配了名称。这样做是因为ArcMap不需要为元素分配名称。'
- en: Assigning a unique name to layout elements
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为布局元素分配唯一名称
- en: It's a good practice to assign a unique name to all your layout elements using
    ArcMap. This is important in the event that your geoprocessing scripts need to
    access a particular element to make changes. For example, you might need to update
    the icon that displays your corporate logo. Rather than making this change manually
    in all your map document files, you could write a geoprocessing script that updates
    all your map document files programmatically with the new logo. However, in order
    for this to be possible, a unique name will need to be assigned to your layout
    elements. This gives you the ability to access the elements of your layout individually.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ArcMap为所有布局元素分配唯一名称是一个好习惯。如果您的地理处理脚本需要访问特定元素进行更改，这很重要。例如，您可能需要更新显示公司标志的图标。而不是在所有地图文档文件中手动进行此更改，您可以编写一个地理处理脚本来以编程方式更新所有地图文档文件并使用新标志。但是，为了使这成为可能，必须为布局元素分配唯一名称。这使您能够单独访问布局元素。
- en: Getting ready
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As I mentioned in the previous recipe, each layout element will be one of a
    number of element types and each can be assigned a name. This element name can
    then be used when you need to reference a particular element in your Python script.
    You can use ArcMap to assign unique names to each layout element. In this recipe,
    you will use ArcMap to assign names to the elements.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如我在前面的菜谱中提到的，每个布局元素将属于多种元素类型之一，并且每个都可以分配一个名称。这个元素名称可以在您需要引用Python脚本中的特定元素时使用。您可以使用ArcMap为每个布局元素分配唯一名称。在这个菜谱中，您将使用ArcMap为元素分配名称。
- en: How to do it…
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to assign unique names to each layout element
    using ArcMap:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用ArcMap为每个布局元素分配唯一名称：
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Switch to layout view and you should something similar to the following screenshot:![How
    to do it…](img/4445_05_2.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到布局视图，您应该看到以下截图类似的内容：![如何操作…](img/4445_05_2.jpg)
- en: Names are assigned differently depending upon the element type. Click on the
    uppermost data frame, which should be **Crime**, to select it. The selection handles
    should appear as follows:![How to do it…](img/4445_05_3.jpg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据元素类型，名称的分配方式不同。单击最上面的数据帧，它应该是**Crime**，以选择它。选择句柄应如下所示：![如何操作…](img/4445_05_3.jpg)
- en: Right-click on the upper data frame and select **Properties** to display the
    **Data Frame Properties** window, as shown in the following screenshot. The **Name**
    property defines the unique name for the element. In this case, the element name
    is `Crime`:![How to do it…](img/4445_05_4.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击上层数据帧并选择**属性**以显示**数据帧属性**窗口，如下截图所示。**名称**属性定义了元素的唯一名称。在这种情况下，元素名称是`Crime`：![如何操作…](img/4445_05_4.jpg)
- en: Close the **Data Frame Properties** window.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**数据帧属性**窗口。
- en: Select **2009 Crime Legend** in the layout view and open the **Properties**
    window by right-clicking on the legend and selecting **Properties**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在布局视图中选择**2009 Crime Legend**，并通过右键单击图例并选择**属性**来打开**属性**窗口。
- en: Setting the element name for the legend is different from setting the element
    name for a data frame. Click on the **Size and Position** tab.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为图例设置元素名称与为数据帧设置元素名称不同。单击**大小和位置**选项卡。
- en: The **Element Name** textbox is used in this case. Change the current value
    to `2009 Crime Legend`, as shown in the following:![How to do it…](img/4445_05_5.jpg)
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此情况下使用**元素名称**文本框。将当前值更改为`2009 Crime Legend`，如下所示：![如何操作…](img/4445_05_5.jpg)
- en: You can also define unique names for text elements. Select the title element
    (`Crime and Its Impact on School Test Performance`), right-click on the element,
    and select **Properties**.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以为文本元素定义唯一的名称。选择标题元素（`Crime and Its Impact on School Test Performance`），右键单击元素，并选择**属性**。
- en: Select the **Size and Position** tab and define a unique name for this element,
    as shown in the following screenshot:![How to do it…](img/4445_05_6.jpg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**大小和位置**选项卡，并为该元素定义一个唯一的名称，如图下截图所示：![如何操作…](img/4445_05_6.jpg)
- en: How it works…
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Each element in the layout view can be assigned a name, which can then be used
    in your geoprocessing script to retrieve the specific element. You should strive
    to define unique names for each element. It isn't required that you define a unique
    name for each element, nor is it required that you even define a name at all.
    However, it is a best practice to give each element a name and ensure that each
    element name is unique if you intend to access these elements from your Python
    scripts. In terms of naming practices for your elements, you should strive to
    include only letters and underscores in the name.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 布局视图中每个元素都可以分配一个名称，然后可以在您的地理处理脚本中使用该名称来检索特定元素。您应该努力为每个元素定义唯一的名称。并不是必须为每个元素定义唯一的名称，甚至也不必定义名称。然而，如果您打算从Python脚本中访问这些元素，那么给每个元素命名并确保每个元素名称唯一是一种最佳实践。在为元素命名时，您应该努力只包含字母和下划线。
- en: There's more…
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: You can use element names in conjunction with the `ListLayoutElements()` function
    to restrict the elements that are returned by the function through the use of
    a wildcard parameter. In the next recipe, you'll learn how to restrict the list
    of layout elements returned through the use of wildcards and element type.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用元素名称与`ListLayoutElements()`函数结合使用，通过使用通配符参数来限制函数返回的元素。在下一个菜谱中，您将学习如何通过使用通配符和元素类型来限制通过`ListLayoutElements()`函数返回的布局元素列表。
- en: Restricting the layout elements returned by ListLayoutElements()
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制`ListLayoutElements()`返回的布局元素
- en: Layouts can contain a large number of elements, many of which you won't need
    for a particular geoprocessing script. The `ListLayoutElements()` function can
    restrict the layout elements returned by passing in a parameter that defines the
    type of element that should be returned along with an optional wildcard, which
    finds elements using a portion of the name.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 布局可以包含大量元素，其中许多元素您可能不需要用于特定的地理处理脚本。`ListLayoutElements()`函数可以通过传递一个参数来限制返回的布局元素，该参数定义了应返回的元素类型，以及一个可选的通配符，该通配符通过名称的一部分来查找元素。
- en: Getting ready
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There are many different types of layout elements including graphics, legends,
    pictures, text, and data frames. When you return a list of layout elements, you
    can restrict (filter) the types of elements that are returned. In this recipe,
    you will write a script that filters the layout elements returned by element type
    and wildcard.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 布局元素有很多不同类型，包括图形、图例、图片、文本和数据框。当您返回一个布局元素列表时，您可以限制（过滤）返回的元素类型。在本菜谱中，您将编写一个脚本，通过元素类型和通配符来过滤通过`ListLayoutElements()`函数返回的布局元素。
- en: How to do it…
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Follow these steps to learn how to restrict the list of layers returned by the
    `ListLayoutElements()` function through the use of optional parameters, which
    define the type of element that should be returned along with a wildcard that
    can also restrict the elements returned.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何通过使用可选参数来限制`ListLayoutElements()`函数返回的图层列表，这些参数定义了应返回的元素类型以及可以限制返回元素的通配符。
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Open the Python window.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE5]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Reference the currently active document (`Crime_Ch5.mxd`) and assign the reference
    to a variable:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch5.mxd`）并将引用分配给一个变量：
- en: '[PRE6]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use the `ListLayoutElements()` function with a restriction of only legend elements
    as well as a wildcard that returns elements with a name containing the text `Crime`
    anywhere in the name:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`ListLayoutElements()`函数，仅限制为图例元素，以及一个通配符，该通配符返回名称中包含文本`Crime`的元素：
- en: '[PRE7]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Run the script. In this case, only a single layout element will be returned:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。在这种情况下，只会返回单个布局元素：
- en: '[PRE8]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How it works...
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: ListLayoutElements() is a versatile function, which in its most basic form is
    used to return a list of all the layout elements on the page layout of a map document.
    However, there are two optional parameters that you can supply to filter this
    list. The first type of filter is an element type filter in which you specify
    that you only want to return one of the layout element types. You can also apply
    a wildcard to filter the returned list. These two types of filters can be used
    in combination. For example, in this recipe we are specifying that we only want
    to return LEGEND_ELEMENT objects with the text "Crime" anywhere in the element
    name. This results in a highly filtered list that only contains a single layout
    element.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayoutElements()` 是一个多功能函数，其最基本的形式用于返回地图文档页面布局上的所有布局元素的列表。然而，你可以提供两个可选参数来过滤此列表。第一种过滤类型是元素类型过滤器，其中你指定你只想返回布局元素类型之一。你还可以应用通配符来过滤返回的列表。这两种类型的过滤器可以组合使用。例如，在这个菜谱中，我们指定我们只想返回元素名称中包含
    "Crime" 文本的 `LEGEND_ELEMENT` 对象。这导致了一个高度过滤的列表，只包含单个布局元素。'
- en: Note
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '`ListLayoutElements()` can be filtered by one of the following element types:
    `DATAFRAME_ELEMENT`, `GRAPHIC_ELEMENT`, `LEGEND_ELEMENT`, `MAPSURROUND_ELEMENT`,
    `PICTURE_ELEMENT`, `TEXT_ELEMENT`.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayoutElements()` 可以通过以下元素类型之一进行过滤：`DATAFRAME_ELEMENT`、`GRAPHIC_ELEMENT`、`LEGEND_ELEMENT`、`MAPSURROUND_ELEMENT`、`PICTURE_ELEMENT`、`TEXT_ELEMENT`。'
- en: Updating layout element properties
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新布局元素属性
- en: Each layout element has a set of properties that you can update programmatically.
    For example, `LegendElement` includes properties that allow you to change the
    position of the legend on the page, update the legend title, and access the legend
    items.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 每个布局元素都有一组你可以程序化更新的属性。例如，`LegendElement` 包含允许你更改图例在页面上的位置的属性，更新图例标题，以及访问图例项。
- en: Getting ready
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There are many different types of layout elements including graphics, legends,
    text, maps, and pictures. Each of these elements is represented by a class in
    the `arcpy.mapping` package. These classes provide various properties that you
    can use to programmatically alter the element.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 布局元素有很多不同类型，包括图形、图例、文本、地图和图片。这些元素中的每一个都由 `arcpy.mapping` 包中的一个类表示。这些类提供了你可以用来程序化修改元素的属性。
- en: The `DataFrame` class provides access to data frame properties in the map document
    file. This object can work with both map units and page layout units, depending
    upon the property being used. Page layout properties, such as positioning and
    sizing, can be applied to the properties including `elementPositionX`, `elementPositionY`,
    `elementWidth`, and `elementHeight`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame` 类提供了在地图文档文件中对数据框架属性访问的途径。此对象可以与地图单元和页面布局单元一起工作，具体取决于所使用的属性。页面布局属性，如定位和尺寸，可以应用于包括
    `elementPositionX`、`elementPositionY`、`elementWidth` 和 `elementHeight` 在内的属性。'
- en: The `GraphicElement` object is a generic object for various graphics that can
    be added to the page layout including tables, graphs, neatlines, markers, lines,
    and area shapes. You'll want to make sure that you set the `name` property for
    each graphic element (and any other element for that matter), if you intend to
    access it through a Python script.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`GraphicElement` 对象是用于添加到页面布局中的各种图形的通用对象，包括表格、图表、整洁线、标记、线条和区域形状。如果你打算通过 Python
    脚本访问它，请确保为每个图形元素（以及任何其他元素）设置 `name` 属性。'
- en: '`LegendElement` provides operations for positioning of the legend on the page
    layout, modification of the legend title, and also provides access to the legend
    items and the parent data frame. `LegendElement` can be associated with only a
    single data frame.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`LegendElement` 提供了在页面布局中对图例进行定位、修改图例标题的操作，同时也提供了访问图例项和父数据框架的途径。`LegendElement`
    只能与单个数据框架关联。'
- en: '`MapSurroundElement` can refer to north arrows, scale bars, and scale text,
    and like `LegendElement` is associated with a single data frame. Properties on
    this object enable repositioning on the page.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapSurroundElement` 可以指北箭头、比例尺和比例文本，并且像 `LegendElement` 一样与单个数据框架关联。此对象上的属性可以启用在页面上的重新定位。'
- en: '`PictureElement` represents a raster or image on the page layout. The most
    useful property on this object allows for getting and setting the data sources,
    which can be extremely helpful when you need to change a picture, such as a logo,
    in multiple map documents. For example, you could write a script that iterates
    through all your map document files and replaces the current logo with a new logo.
    You can also reposition or resize the object.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`PictureElement`代表页面布局上的栅格或图像。此对象上最有用的属性允许获取和设置数据源，这在需要更改图片，如标志时非常有帮助。例如，您可以编写一个脚本，遍历所有地图文档文件，并用新标志替换当前标志。您还可以重新定位或调整大小对象。'
- en: '`TextElement` represents text on a page layout including inserted text, callouts,
    rectangle text, and titles, but does not include legend titles or text that are
    part of a table or chart. Properties enable modifying the text string, which can
    be extremely useful in situations where you need to make the same text string
    change in multiple places in the page layout or over multiple map documents, and
    of course repositioning of the object is also available.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`TextElement`代表页面布局上的文本，包括插入的文本、注释、矩形文本和标题，但不包括图例标题或表格或图表中的文本。属性允许修改文本字符串，这在需要在同一页面布局的多个位置或多个地图文档中更改相同的文本字符串时非常有用，当然也可以重新定位对象。'
- en: Each element in the page layout is returned as an instance of one of the element
    objects. In this recipe, we're going to use the `title` property on the `Legend`
    object to programmatically change the title of the `Crime` legend and obtain a
    list of the layers that are part of the legend.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 页面布局中的每个元素都返回为元素对象的一个实例。在这个菜谱中，我们将使用`Legend`对象的`title`属性来编程更改`Crime`图例的标题并获取属于图例的图层列表。
- en: How to do it…
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何去做...
- en: 'Follow these steps to learn how to update the properties of a layout element:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何更新布局元素的属性：
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Open the Python window.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE9]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Reference the currently active document (`Crime_Ch5.mxd`), and assign the reference
    to a variable:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch5.mxd`），并将引用分配给变量：
- en: '[PRE10]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Use the `ListLayoutElements()` method with a wildcard and restriction of only
    legend elements to return only the `Crime` legend and store it in a variable:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`ListLayoutElements()`方法，通过通配符和仅限制图例元素来返回仅包含`Crime`图例并将其存储在变量中：
- en: '[PRE11]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Use the `title` property to update the title of the legend:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`title`属性来更新图例的标题：
- en: '[PRE12]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Get a list of the layers that are a part of the legend and print the names:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取属于图例的部分图层列表并打印名称：
- en: '[PRE13]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The entire script should appear as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：
- en: '[PRE14]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Run the script. You should see the following layers printed:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。您应该看到以下图层被打印：
- en: '[PRE15]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The change is displayed in the following screenshot:![How to do it…](img/4445_05_7.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 改变在以下屏幕截图中显示：![如何去做…](img/4445_05_7.jpg)
- en: How it works...
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Each of the layout elements has a set of properties and methods. In this particular
    case, we've used the `title` property on the `Legend` object. Other properties
    of this object allow you to set the width and height, positioning, and others.
    Methods on the `Legend` object give you the ability to adjust the column count,
    list the legend items, and remove and update items.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 每个布局元素都有一组属性和方法。在这种情况下，我们使用了`Legend`对象的`title`属性。此对象的其它属性允许您设置宽度、高度、定位等。`Legend`对象上的方法允许您调整列数、列出图例项、删除和更新项。
- en: Getting a list of available printers
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取可用打印机的列表
- en: Yet another list function provided by `arcpy` is `ListPrinterNames()`, which
    generates a list of the available printers. As is the case with the other list
    functions that we've examined, `ListPrinterNames()` is often called as a preliminary
    step in a multi-step script.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy`提供的另一个列表函数是`ListPrinterNames()`，它生成可用打印机的列表。与其他我们检查过的列表函数一样，`ListPrinterNames()`通常在多步脚本中的初步步骤中被调用。'
- en: Getting ready
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before printing maps with the `PrintMap()` function, it is a common practice
    to call the `ListPrinterNames()` function, which returns a list of the available
    printers for the local computer. A particular printer can then be found by iterating
    through the list of printers and using it as an input to the `PrintMap()` function.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 `PrintMap()` 函数打印地图之前，调用 `ListPrinterNames()` 函数是一种常见做法，该函数返回本地计算机上可用的打印机列表。然后可以通过遍历打印机列表并使用它作为
    `PrintMap()` 函数的输入来找到特定的打印机。
- en: How to do it…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to use the `ListPrinterNames()` function to
    return a list of the available printers for your script:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用 `ListPrinterNames()` 函数返回脚本中可用的打印机列表：
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Open the Python window.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Python 窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE16]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Reference the currently active document (`Crime_Ch5.mxd`) and assign the reference
    to a variable:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch5.mxd`）并将引用分配给变量：
- en: '[PRE17]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Call the `ListPrinterNames()` function and print each printer:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `ListPrinterNames()` 函数并打印每个打印机：
- en: '[PRE18]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Run the script. The output will vary depending upon the list of the available
    printers for your computer. However, it should print something similar to the
    following code snippet:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。输出将根据计算机上可用的打印机列表而变化。但是，它应该打印出类似于以下代码片段的内容：
- en: '[PRE19]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works...
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `ListPrinterNames()` function returns a Python list containing all the printers
    available to use in your script. You can then use the `PrintMap()` function, which
    we'll examine in the next recipe, to send a print job to a particular printer
    that is available to your computer.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListPrinterNames()` 函数返回一个包含所有可用于脚本的打印机的 Python 列表。然后您可以使用 `PrintMap()` 函数，我们将在下一教程中探讨，将打印作业发送到计算机上可用的特定打印机。'
- en: Printing maps with PrintMap()
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PrintMap() 打印地图
- en: Sending your map layout to a printer is easy with the `PrintMap()` function.
    By default, the print job will be sent to the default printer saved with the map
    document, but you can also define a specific printer where the job should be sent.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `PrintMap()` 函数将地图布局发送到打印机非常简单。默认情况下，打印作业将被发送到与地图文档一起保存的默认打印机，但您也可以定义一个特定的打印机，将作业发送到该打印机。
- en: Getting ready
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: '`arcpy.mapping` provides a `PrintMap()` function for printing page layouts
    or data frames from ArcMap. Before calling `PrintMap()`, it is a common practice
    to call the `ListPrinterNames()` function. A particular printer can then be found
    by iterating the list of printers and used as an input to the `PrintMap()` function.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping` 提供了一个 `PrintMap()` 函数，用于从 ArcMap 打印页面布局或数据框架。在调用 `PrintMap()`
    之前，调用 `ListPrinterNames()` 函数是一种常见做法。然后可以通过遍历打印机列表并使用它作为 `PrintMap()` 函数的输入来找到特定的打印机。'
- en: '`PrintMap()` can print either a specific data frame or the page layout of a
    map document. By default, this function will use the printer saved with the map
    document or, if not present in the map document, the default system printer. As
    I mentioned, you can also use `ListPrinterNames()` to get a list of the available
    printers, and select one of these printers as an input to `PrintMap()`. In this
    recipe, you will learn how to use the `PrintMap()` function to print the layout.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`PrintMap()` 可以打印特定的数据框架或地图文档的页面布局。默认情况下，此函数将使用与地图文档一起保存的打印机，或者如果地图文档中没有，则使用默认系统打印机。正如我提到的，您还可以使用
    `ListPrinterNames()` 获取可用打印机的列表，并从中选择一个作为 `PrintMap()` 的输入。在本教程中，您将学习如何使用 `PrintMap()`
    函数打印布局。'
- en: How to do it…
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to use the `PrintMap()` function to print the
    layout view in ArcMap:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用 `PrintMap()` 函数在 ArcMap 中打印布局视图：
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Open the Python window.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Python 窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE20]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Reference the currently active document (`Crime_Ch5.mxd`), and assign the reference
    to a variable:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch5.mxd`），并将引用分配给变量：
- en: '[PRE21]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Look for the `Test_Performance` data frame and print if it is found:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找 `Test_Performance` 数据框架，如果找到则打印：
- en: '[PRE22]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works...
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `PrintMap()` function accepts one required parameter and a handful of optional
    parameters. The required parameter is a reference to the map document. The first
    optional parameter is the printer name. In this case, we haven't specified a particular
    printer to use. Because we haven't provided a specific printer, it will use the
    printer saved with the map document or the default system printer if a printer
    is not part of the map document. The second optional parameter is the data frame
    that we'd like to print, which in this instance is `Test_Performance`. Other optional
    parameters, not supplied in this case, are an output print file and the image
    quality.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`PrintMap()` 函数接受一个必需参数和一些可选参数。必需参数是对地图文档的引用。第一个可选参数是打印机名称。在这种情况下，我们没有指定要使用的特定打印机。因为我们没有提供特定的打印机，它将使用与地图文档一起保存的打印机或如果没有打印机是地图文档的一部分，则使用默认系统打印机。第二个可选参数是我们想要打印的数据框架，在这个例子中是
    `Test_Performance`。其他未在此情况下提供的可选参数包括输出打印文件和图像质量。'
- en: Exporting a map to a PDF file
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将地图导出为 PDF 文件
- en: Rather than sending your map or layout view to a printer, you may want to simply
    create PDF files that can be shared. Arcpy mapping provides an `ExportToPDF()`
    function, which you can use to do this.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 与将地图或布局视图发送到打印机相比，你可能只想简单地创建可以共享的 PDF 文件。Arcpy 映射提供了 `ExportToPDF()` 函数，你可以使用它来做到这一点。
- en: Getting ready
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: PDF is a very popular interchange format designed to be viewable and printable
    from many different platforms. The arcpy mapping `ExportToPDF()` function can
    be used to export data frames or the page layout to PDF format. By default, the
    `ExportToPDF()` function exports the page layout, but you can pass in an optional
    parameter that references a particular data frame, which can be printed instead
    of the page layout. In this recipe, you will learn how to export the page layout
    as well as a specific data frame to a PDF file.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: PDF 是一个非常流行的交换格式，旨在从许多不同的平台上可查看和打印。arcpy 映射的 `ExportToPDF()` 函数可以用来导出数据框架或页面布局到
    PDF 格式。默认情况下，`ExportToPDF()` 函数导出页面布局，但你可以通过传递一个可选参数来引用特定的数据框架，这样就可以打印页面布局而不是页面布局。在这个菜谱中，你将学习如何将页面布局以及特定的数据框架导出到
    PDF 文件。
- en: How to do it…
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'Follow these steps to learn how to export a map to a PDF fil:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何将地图导出为 PDF 文件：
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开 `C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Open the Python window.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Python 窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE23]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Reference the currently active document (`Crime_Ch5.mxd`), and assign the reference
    to a variable:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch5.mxd`），并将引用分配给一个变量：
- en: '[PRE24]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Export the page layout with the `ExportToPDF()` function:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `ExportToPDF()` 函数导出页面布局：
- en: '[PRE25]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Run the script.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: Open the `Map_PageLayout.pdf` file that was created, and you should see something
    similar to the following screenshot:![How to do it…](img/4445_05_8.jpg)
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开创建的 `Map_PageLayout.pdf` 文件，你应该会看到以下截图类似的内容：![如何做到这一点…](img/4445_05_8.jpg)
- en: 'Now, we''ll print a specific data frame from our map document file. Alter your
    script, so that it appears as follows:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将从我们的地图文档文件中打印一个特定的数据框架。修改你的脚本，使其看起来如下：
- en: '[PRE26]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Run the script and examine the output PDF.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本并检查输出 PDF。
- en: How it works…
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `ExportToPDF()` function requires two parameters, including a reference
    to the map document and the file that serves as the output PDF file. The first
    script that we developed, passed in a reference to the map document along with
    an output PDF file. Since we didn't pass in an optional parameter specifying the
    data frame, the `ExportToPDF()` function will export the page layout. There are
    also many optional parameters that can be passed into this method, including a
    specific data frame and a number of parameters, mostly related to the quality
    of the output content and file. Our second script passed in a specific data frame
    that should be exported. You can reference the ArcGIS help pages for more information
    on each of the optional parameters.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`ExportToPDF()` 函数需要两个参数，包括对地图文档的引用和作为输出 PDF 文件的文件。我们开发的第一个脚本，传递了地图文档的引用以及输出
    PDF 文件。因为我们没有传递指定数据框架的可选参数，所以 `ExportToPDF()` 函数将导出页面布局。还有许多可选参数可以传递给此方法，包括特定的数据框架和许多与输出内容和质量相关的参数。我们的第二个脚本传递了应该导出的特定数据框架。你可以参考
    ArcGIS 帮助页面以获取有关每个可选参数的更多信息。'
- en: Exporting a map to an image file
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将地图导出为图像文件
- en: You can also export the contents of the map or layout view to an image file
    using one of the many functions provided by `arcpy.mapping`. Each image export
    function will differ in name depending upon the type of image file you'd like
    to create. The parameters passed into the function will also vary slightly.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`arcpy.mapping`提供的许多函数之一将地图或布局视图的内容导出为图像文件。每个图像导出函数的名称将根据您想要创建的图像文件类型而有所不同。传递给函数的参数也将略有不同。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In addition to providing the ability to export data frames and the page layout
    to a PDF format, you can also use one of the many export functions provided by
    `arcpy.mapping` to export an image file. Available formats include AI, BMP, EMF,
    EPS, GIF, JPEG, SVG, and TIFF. The parameters provided for each function will
    vary depending upon the type of image. Some examples of these function names include
    `ExportToJPEG()`, `ExportToGIF()`, and `ExportToBMP()`. In this recipe, you'll
    learn how to export your maps to images.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 除了能够将数据框和页面布局导出为PDF格式外，您还可以使用`arcpy.mapping`提供的许多导出函数之一来导出图像文件。支持的格式包括AI、BMP、EMF、EPS、GIF、JPEG、SVG和TIFF。每个函数提供的参数将根据图像类型而有所不同。这些函数名称的示例包括`ExportToJPEG()`、`ExportToGIF()`和`ExportToBMP()`。在本教程中，您将学习如何将您的地图导出为图像。
- en: How to do it…
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to export your data or layout view to an image
    file:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何将您的数据或布局视图导出为图像文件：
- en: Open `C:\ArcpyBook\Ch5\Crime_Ch5.mxd` in ArcMap.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开`C:\ArcpyBook\Ch5\Crime_Ch5.mxd`。
- en: Open the Python window.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE27]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Reference the currently active document (`Crime_Ch5.mxd`), and assign the reference
    to a variable:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch5.mxd`），并将引用分配给一个变量：
- en: '[PRE28]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Export the `Crime` data frame as a JPEG image:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Crime`数据框导出为JPEG图像：
- en: '[PRE29]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Run the script and examine the output file.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本并检查输出文件。
- en: 'Now, we''ll use an optional parameter that outputs a `world` file along with
    the image. Alter your script, so that it appears as follows:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用一个可选参数，该参数将输出一个与图像一起的`world`文件。修改您的脚本，使其如下所示：
- en: '[PRE30]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Run the script. A new file called `DataFrameCrime.jpg` will be created. Open
    this file in a text editor, and you should see the following content:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。将创建一个名为`DataFrameCrime.jpg`的新文件。在文本编辑器中打开此文件，您应该看到以下内容：
- en: '[PRE31]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: How it works…
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Notice that the `ExportToJPEG()` function looks virtually the same as `ExportToPDF()`.
    Keep in mind though that the optional parameters will be different for all the
    export functions. Each `ExportTo<Type>` function will vary depending upon the
    parameters that can be used in the creation of the image file.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到`ExportToJPEG()`函数几乎与`ExportToPDF()`相同。但请记住，所有导出函数的可选参数将不同。每个`ExportTo<Type>`函数将根据可用于创建图像文件的参数而有所不同。
- en: Creating a map book with PDFDocumentCreate() and PDFDocumentOpen()
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`PDFDocumentCreate()`和`PDFDocumentOpen()`创建地图册
- en: One common scenario for many GIS professionals is the need to create a map book
    that can then be shared with others. A map book is simply a collection of maps
    for a particular area and usually contains an index map as well. Map books are
    often created with PDF files, as they are a common interchange format.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多GIS专业人士来说，一个常见的场景是需要创建一个可以与他人共享的地图册。地图册仅仅是特定区域的地图集合，通常还包含一个索引图。地图册通常使用PDF文件创建，因为它们是一种常见的交换格式。
- en: Getting ready
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In addition to exporting your maps to PDF, you can also manipulate existing
    PDF documents or create new PDF documents. You can merge pages, set document open
    behavior, add file attachments, and create or change document security settings.
    The `PDFDocumentOpen()` function is used to open an existing PDF file for manipulation.
    `PDFDocumentCreate()` creates a new PDF document. These functions are often used
    in the creation of map books, which is what we'll do in this recipe.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 除了将您的地图导出为PDF外，您还可以操作现有的PDF文档或创建新的PDF文档。您可以合并页面、设置文档打开行为、添加文件附件以及创建或更改文档安全设置。`PDFDocumentOpen()`函数用于打开现有PDF文件进行操作。`PDFDocumentCreate()`创建一个新的PDF文档。这些函数通常用于创建地图册，这正是本教程中我们将要做的。
- en: How to do it…
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open IDLE and create a new script window.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开IDLE并创建一个新的脚本窗口。
- en: 'Import the `arcpy.mapping` and `os` modules:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`和`os`模块：
- en: '[PRE32]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Set the path and filename for the map book. Remove the file if it already exists:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置地图册的路径和文件名。如果文件已存在，则删除该文件：
- en: '[PRE33]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Create the PDF document:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建PDF文档：
- en: '[PRE34]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Append existing PDF pages to the document:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将现有的PDF页面追加到文档中：
- en: '[PRE35]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Commit changes to the map book:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交地图册的更改：
- en: '[PRE36]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The entire script should appear as follows:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应该如下所示：
- en: '[PRE37]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Run the script.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: Examine the new map book at `c:\ArcpyBook\Ch5\CrimeMapBook.pdf`. The book should
    now contain two pages consisting of the PDF files that we created in an earlier
    recipe.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看位于 `c:\ArcpyBook\Ch5\CrimeMapBook.pdf` 的新地图册。这本书现在应该包含两个页面，包含我们在之前的菜谱中创建的
    PDF 文件。
- en: How it works...
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `PDFDocumentCreate()` function is used to create a new PDF document by providing
    a path and filename for the document. The PDF is not actually created on disk
    until you insert or append pages and then call `PDFDocument.saveAndClose()`. The
    `appendPages()` and `insertPages()` functions are used to insert and append pages.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '`PDFDocumentCreate()` 函数通过提供文档的路径和文件名来创建一个新的 PDF 文档。实际上，PDF 文件直到你插入或附加页面并调用
    `PDFDocument.saveAndClose()` 后才会被创建在磁盘上。`appendPages()` 和 `insertPages()` 函数用于插入和附加页面。'
- en: '`PDFDocumentOpen()` accepts a parameter that specifies the path to a PDF file
    and returns an instance of the `PDFDocument` class. Once open, you can make modifications
    to PDF file properties, add or insert files, and attach documents. Make sure you
    call `PDFDocument.saveAndClose()` after all operations, to save the changes.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`PDFDocumentOpen()` 接受一个参数，指定 PDF 文件的路径，并返回 `PDFDocument` 类的一个实例。一旦打开，你可以修改
    PDF 文件属性，添加或插入文件，并附加文档。确保在所有操作完成后调用 `PDFDocument.saveAndClose()` 以保存更改。'
- en: There's more…
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: A number of properties can be set on a PDF document through the `PDFDocument`
    object, including getting the page count, attaching files, updating title, author,
    subject, keywords, open behavior, and the layout. You can also update document
    security by calling `PDFDocument.updateDocSecurity()` to set a password, encryption,
    and security restrictions.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过 `PDFDocument` 对象设置 PDF 文档的多个属性，包括获取页面数、附加文件、更新标题、作者、主题、关键词、打开行为和布局。你还可以通过调用
    `PDFDocument.updateDocSecurity()` 来更新文档安全性，设置密码、加密和安全限制。
