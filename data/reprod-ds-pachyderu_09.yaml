- en: '*Chapter 7*: Pachyderm Operations'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第七章*：Pachyderm 操作'
- en: In [*Chapter 6*](B17085_06_Final_SB_Epub.xhtml#_idTextAnchor156), *Creating
    Your First Pipeline*, we created our first pipeline, as well as learning how to
    create Pachyderm repositories, put data into a repository, create and run a pipeline,
    and view the results of the pipeline. We now know how to create a standard Pachyderm
    pipeline specification and include our scripts in it so that they can run against
    data in our input repository.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第六章*](B17085_06_Final_SB_Epub.xhtml#_idTextAnchor156)，*创建第一个管道* 中，我们创建了第一个管道，并学习了如何创建
    Pachyderm 仓库、将数据放入仓库、创建并运行管道，以及查看管道的结果。我们现在知道如何创建标准的 Pachyderm 管道规范，并将脚本包含在其中，以便它们可以在输入仓库中的数据上运行。
- en: In this chapter, we will review all the different ways to put data inside of
    Pachyderm and export it to outside systems. We will learn how to update the code
    that runs inside of your pipeline and what the process of updating the pipeline
    specification is. We will learn how to build a Docker container and test it locally
    before uploading it to a registry.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾所有不同的将数据放入 Pachyderm 内部并导出到外部系统的方法。我们将学习如何更新在管道内部运行的代码，以及更新管道规范的过程。我们将学习如何构建一个
    Docker 容器并在上传到注册表之前进行本地测试。
- en: We will also look into the most common troubleshooting steps that you should
    perform when a pipeline fails.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将探讨一些最常见的故障排除步骤，这些步骤是在管道失败时应执行的。
- en: 'This chapter will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Reviewing the standard Pachyderm workflow
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回顾标准的 Pachyderm 工作流程
- en: Executing data operations
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行数据操作
- en: Executing pipeline operations
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行管道操作
- en: Running maintenance operations
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行维护操作
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You should have already installed the following components.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经安装了以下组件。
- en: 'For a local macOS installation, you need the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本地 macOS 安装，您需要以下组件：
- en: macOS Mojave, Catalina, Big Sur, or later
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS Mojave、Catalina、Big Sur 或更高版本
- en: Docker Desktop for Mac 10.14
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Desktop for Mac 10.14
- en: '`minikube` v1.9.0 or later'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`minikube` v1.9.0 或更高版本'
- en: '`pachctl` 2.0.x or later'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pachctl` 2.0.x 或更高版本'
- en: Pachyderm 2.0.x or later
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pachyderm 2.0.x 或更高版本
- en: 'For a local Windows installation, you need the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本地 Windows 安装，您需要以下组件：
- en: Windows Pro 64-bit v10 or later
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Pro 64 位 v10 或更高版本
- en: '**Windows Subsystem for Linux** (**WSL**) 2 or later'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows Subsystem for Linux** (**WSL**) 2 或更高版本'
- en: Microsoft PowerShell v6.2.1 or later
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft PowerShell v6.2.1 或更高版本
- en: Hyper-V
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hyper-V
- en: '`minikube` v1.9.0 or later'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`minikube` v1.9.0 或更高版本'
- en: '`kubectl` v1.18 or later'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubectl` v1.18 或更高版本'
- en: '`pachctl` 2.0.x or later'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pachctl` 2.0.x 或更高版本'
- en: Pachyderm 2.0.x or later
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pachyderm 2.0.x 或更高版本
- en: 'For an **Amazon Elastic Kubernetes Service** (**Amazon EKS**) installation,
    you need the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 **Amazon Elastic Kubernetes Service** (**Amazon EKS**) 安装，您需要以下组件：
- en: '`kubectl` v.18 or later'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubectl` v.18 或更高版本'
- en: '`eksctl`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eksctl`'
- en: '`aws-iam-authenticator`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aws-iam-authenticator`'
- en: '`pachctl` 2.0.x or later'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pachctl` 2.0.x 或更高版本'
- en: Pachyderm 2.0.x or later
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pachyderm 2.0.x 或更高版本
- en: 'For a Microsoft **Azure Kubernetes Service** (**AKS**) cloud installation,
    you need the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Microsoft **Azure Kubernetes Service** (**AKS**) 云安装，您需要以下组件：
- en: '`kubectl` v.18 or later'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubectl` v.18 或更高版本'
- en: Azure CLI
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure CLI
- en: '`pachctl` 2.0.x or later'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pachctl` 2.0.x 或更高版本'
- en: Pachyderm 2.0.x or later
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pachyderm 2.0.x 或更高版本
- en: '`jq` 1.5 or later'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jq` 1.5 或更高版本'
- en: 'For a **Google Kubernetes Engine** (**GKE**) cloud installation, you need the
    following:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 **Google Kubernetes Engine** (**GKE**) 云安装，您需要以下组件：
- en: Google Cloud SDK v124.0.0\. or later
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud SDK v124.0.0 或更高版本
- en: '`kubectl` v.18 or later'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubectl` v.18 或更高版本'
- en: '`pachctl` 2.0.x or later'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pachctl` 2.0.x 或更高版本'
- en: Pachyderm 2.0.x or later
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pachyderm 2.0.x 或更高版本
- en: 'In addition to this, you need to have the following:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，您还需要以下组件：
- en: A Docker Hub account to be able to upload images
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Hub 账户，用于上传镜像
- en: Downloading the source files
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载源文件
- en: 'All the source files for this chapter are located in this repository: [https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter07-Pachyderm-Operations](https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter07-Pachyderm-Operations).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的所有源文件都位于此仓库：[https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter07-Pachyderm-Operations](https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter07-Pachyderm-Operations)。
- en: Reviewing the standard Pachyderm workflow
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回顾标准的 Pachyderm 工作流程
- en: 'As you probably noticed when you were creating a pipeline, there is a certain
    workflow that you will need to follow when working with Pachyderm. Depending on
    your automation tools, your team processes, and the software that you use, it
    might differ, but in general, it boils down to the following common steps:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在创建管道时可能已经注意到的那样，在使用 Pachyderm 时，您需要遵循特定的工作流。根据您的自动化工具、团队流程和所使用的软件，它可能会有所不同，但通常可以总结为以下常见步骤：
- en: Add your data to Pachyderm.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的数据添加到 Pachyderm。
- en: Create a pipeline or pipelines.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建管道或管道集。
- en: Add more data.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加更多数据。
- en: Modify the parameters.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改参数。
- en: Modify your pipeline or pipelines.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改您的管道或管道集。
- en: Output the result to an output repository.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将结果输出到输出仓库。
- en: Repeat *Steps 3–6* as many times as needed or continuously.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要或持续地重复*步骤 3-6*。
- en: Serve your model or package your library and make it available for use.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供您的模型或打包您的库并使其可用。
- en: 'The following diagram demonstrates this process:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示演示了这一过程：
- en: '![Figure 7.1 – Pachyderm workflow'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.1 – Pachyderm 工作流'
- en: '](img/B17085_07_001.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17085_07_001.jpg)'
- en: Figure 7.1 – Pachyderm workflow
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – Pachyderm 工作流
- en: Depending on whether you keep your code in a Docker image, in the pipeline itself,
    or you use a build pipeline with your Python code, you need to rebuild your Docker
    image every time you make changes to the code. There is a lightweight workflow
    for Python pipelines only that uses a base Docker image and a special build pipeline.
    You can read about this approach in the Pachyderm official documentation at [https://docs.pachyderm.com](https://docs.pachyderm.com).
    For any other language, you likely will need to build Docker images regularly.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您将代码存储在 Docker 镜像中、管道本身中，还是使用包含 Python 代码的构建管道，您每次更改代码时都需要重新构建 Docker 镜像。对于仅使用
    Python 管道的轻量级工作流，它使用基础 Docker 镜像和一个特殊的构建管道。您可以在 Pachyderm 官方文档中阅读有关此方法的信息：[https://docs.pachyderm.com](https://docs.pachyderm.com)。对于其他语言，您可能需要定期构建
    Docker 镜像。
- en: Now that we know what the typical workflow is, let's dive into data operations
    and learn about all the ways you can upload your data to Pachyderm.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了典型的工作流，让我们深入了解数据操作，学习所有将数据上传到 Pachyderm 的方法。
- en: Executing data operations
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行数据操作。
- en: As you have probably already noticed, to get started working with Pachyderm,
    you need to put data into it. Then, data is transformed through a number of transformation
    steps. After that, you can export your data and models to an outside source in
    a form of libraries, binaries, packages, tables, dashboards, or any other format
    for further use. In this section, we will review the ways to upload and download
    data to and from Pachyderm and all the native Pachyderm modifications that can
    be applied during this process.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经注意到的，要开始使用 Pachyderm，您需要将数据放入其中。然后，数据会通过多个转换步骤进行处理。之后，您可以将数据和模型导出到外部源，以库、二进制文件、包、表格、仪表盘或任何其他格式进行进一步使用。在本节中，我们将回顾将数据上传和下载到
    Pachyderm 以及从 Pachyderm 下载数据的方式，并介绍在此过程中可以应用的所有原生 Pachyderm 修改。
- en: Let's begin with uploading data to Pachyderm.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从将数据上传到 Pachyderm 开始。
- en: Uploading data to Pachyderm
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据上传到 Pachyderm。
- en: 'You can divide data sources that ingest data into Pachyderm into the following
    categories:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将将数据导入到 Pachyderm 的数据源分为以下几类：
- en: From a local filesystem
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从本地文件系统上传
- en: From a URL
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 URL 上传。
- en: A remote object or block storage
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程对象或块存储
- en: A streaming or messaging platform
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个流媒体或消息平台。
- en: 'In this section, you will likely mostly use your local filesystem to upload
    data to Pachyderm repositories. This can be done with a simple Pachyderm command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您很可能主要使用本地文件系统将数据上传到 Pachyderm 仓库。这可以通过一个简单的 Pachyderm 命令完成：
- en: 'To upload data from a local filesystem, you use the following:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从本地文件系统上传数据，您可以使用以下命令：
- en: '[PRE0]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The repository must exist.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 仓库必须存在。
- en: 'Similarly, to upload the data stored in a remote location, you can use the
    same command by specifying the correct URL:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，要上传存储在远程位置的数据，您可以使用相同的命令，并指定正确的 URL：
- en: '[PRE1]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The same applies to the files stored in an object store. For example, if you
    are using an object store on Google Cloud Platform, you use the following:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对存储在对象存储中的文件同样适用。例如，如果您使用 Google Cloud Platform 上的对象存储，您可以使用以下命令：
- en: '[PRE2]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding commands put the files in the root of the repo, but you could
    also put them in any subdirectory by specifying the path to them, like this:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的命令将文件放置在仓库的根目录中，但您也可以通过指定路径，将它们放入任何子目录中，如下所示：
- en: '[PRE3]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To upload a whole directory, use the `-r` flag:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要上传整个目录，请使用 `-r` 标志：
- en: '[PRE4]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Run `pachctl put file --help` to view more examples.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`pachctl put file --help`查看更多示例。
- en: 'If you want to automatically upload data from a messaging queue to Pachyderm,
    you need to create a special type of pipeline called a **spout**. The main thing
    a spout does is that it connects a data stream from a messaging platform to Pachyderm
    and puts it into a specified Pachyderm repository. You could also specify some
    code to categorize data into folders according to the preferred pattern. Here
    is an example of a spout pipeline:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您希望从消息队列自动上传数据到Pachyderm，您需要创建一种特殊类型的管道，称为**吐水口**（spout）。吐水口的主要功能是将来自消息平台的数据流连接到Pachyderm，并将其放入指定的Pachyderm仓库。您还可以指定一些代码，根据首选模式将数据分类到不同的文件夹中。以下是一个吐水口管道的示例：
- en: '[PRE5]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now that we know how we can put data into Pachyderm, let's take a look at data
    provenance and data lineage in Pachyderm.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何将数据放入Pachyderm，让我们来看看Pachyderm中的数据来源和数据血统。
- en: About data lineage
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于数据血统
- en: If your system relies on data, you need to ensure that the data you use in your
    decision-making process is accurate and credible. Failure to provide a traceable
    data footprint may result in negative consequences for your organization. As more
    and more data-based systems are used in all aspects of our lives, wrong decisions
    based on erroneous data can have devastating impacts on people's lives.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的系统依赖于数据，您需要确保用于决策过程的数据是准确且可信的。未能提供可追溯的数据足迹，可能会导致对组织的不利后果。随着越来越多基于数据的系统应用于我们生活的各个方面，基于错误数据做出的错误决策可能会对人们的生活造成毁灭性影响。
- en: That's why being able to go back in time and trace the data to its origins is
    a crucial part of any data management system. The ability to track the changes
    that happened to the data through the multiple transformation steps back to its
    origin is called data lineage or data provenance.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么能够回溯到数据的源头并追踪数据的来源，是任何数据管理系统中的一个关键部分。能够追踪数据在多个转化步骤中发生的变化，直到其源头，这就是数据血统或数据来源。
- en: 'Typically, data lineage is visualized in the form of a **Direct Acyclic Graph**
    (**DAG**). Here is an example of the DAG representation in the Pachyderm UI:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，数据血统以**有向无环图**（**DAG**）的形式进行可视化。以下是Pachyderm UI中DAG表示的示例：
- en: '![Figure 7.2 – Pachyderm DAG'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.2 – Pachyderm DAG'
- en: '](img/B17085_07_002.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17085_07_002.jpg)'
- en: Figure 7.2 – Pachyderm DAG
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – Pachyderm DAG
- en: Each container represents either an input or output repository or a pipeline.
    The preceding example is very simple. In a workflow with more steps, the DAG might
    look more complex.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 每个容器代表一个输入或输出的仓库，或者一个管道。前面的示例非常简单。在有更多步骤的工作流中，DAG可能看起来更为复杂。
- en: 'Why is data lineage so important? Here are a few important points to consider:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么数据血统如此重要？以下是几个需要考虑的重要点：
- en: With topics such as privacy and equality being widely discussed on all levels,
    providing an audit trail for governance is becoming a necessity.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着隐私和公平等话题在各个层面被广泛讨论，为治理提供审计追踪正变得越来越必要。
- en: With data science being widely productized, implementing a system that offers
    the ability to roll back and correct errors in data and algorithms is crucial.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着数据科学的广泛产品化，实现一个能够回滚并修正数据和算法错误的系统变得至关重要。
- en: Trustworthiness of the data is another aspect that can be verified through data
    lineage.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据的可信度是可以通过数据血统验证的另一个方面。
- en: In [*Chapter 1*](B17085_01_Final_SB_Epub.xhtml#_idTextAnchor015), *The Problem
    of Reproducibility*, we discussed many examples where the lack of a proper data
    management system can have a devastating impact on people's lives, as well as
    harming your businesses.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第一章*](B17085_01_Final_SB_Epub.xhtml#_idTextAnchor015)《可重复性问题》中，我们讨论了许多缺乏合适数据管理系统可能对人们生活产生毁灭性影响的例子，并且对企业造成损害。
- en: Now that we have discussed the importance of data lineage, let's take a look at
    how you can explore data lineage in Pachyderm.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了数据血统的重要性，让我们来看一下如何在Pachyderm中探索数据血统。
- en: Exploring data lineage
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索数据血统
- en: '**Data provenance** or **data lineage** is the most important feature of Pachyderm
    that ensures that your changes are preserved and can be traced to the beginning
    of the pipeline''s existence.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据来源**或**数据血统**是Pachyderm最重要的特性之一，它确保您的更改被保存并且可以追溯到管道的起点。'
- en: 'To demonstrate this functionality, we will use the same pipeline we used in
    [*Chapter 6*](B17085_06_Final_SB_Epub.xhtml#_idTextAnchor156), *Creating Your
    First Pipeline*. If you have not downloaded the files yet, go to [https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline](https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline)
    and download them from there:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示这个功能，我们将使用在[*第6章*](B17085_06_Final_SB_Epub.xhtml#_idTextAnchor156)中使用的相同管道，*创建你的第一个管道*。如果你还没有下载这些文件，可以访问[https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline](https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline)并从那里下载：
- en: 'Create the Pachyderm `photos` repository, put the `brown_vase.png` file in
    it, and create the contour and histogram pipelines by running the following commands:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Pachyderm的`photos`仓库，将`brown_vase.png`文件放入其中，并通过运行以下命令创建轮廓和直方图管道：
- en: '[PRE6]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You should see the following output:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '[PRE7]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following command shows how you can view the lineage of your data and pipelines.
    First, we need to get a commit number for the desired data change:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令展示了如何查看你的数据和管道的谱系。首先，我们需要获取一个提交号，以便查看所需的数据变化：
- en: '[PRE8]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output should look similar to this:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该类似于以下内容：
- en: '[PRE9]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In this example, we only have one output commit with the `3d42e6385854478fbd2c9212c3afdab2`
    hash.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们只有一个输出提交，哈希值为`3d42e6385854478fbd2c9212c3afdab2`。
- en: 'Then, we can run the `inspect commit` command to get the provenance information:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们可以运行`inspect commit`命令来获取溯源信息：
- en: '[PRE10]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The preceding command returns the following output:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令返回以下输出：
- en: '[PRE11]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This output shows you that the commit is created in the `photos` repository.
    It has the `AUTO` type because it was generated when the data was uploaded to
    the `photos` repository. You can also see that it has created a child commit,
    `dfff764bd1dd41b9bf3613af86d6e45c`, for which you can run the same command. The
    child commit will have the `ALIAS` type since it is connected to the original
    commit in the `photos` repository. Over time, as new data arrives, this list will
    grow.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出显示了提交是在`photos`仓库中创建的。它的类型为`AUTO`，因为它是在数据上传到`photos`仓库时自动生成的。你还可以看到它创建了一个子提交，哈希值为`dfff764bd1dd41b9bf3613af86d6e45c`，你可以对其运行相同的命令。该子提交将具有`ALIAS`类型，因为它与`photos`仓库中的原始提交相关联。随着新数据的到来，这个列表会逐渐增加。
- en: 'The preceding command tells us what the predecessors of the commit in the `contour`
    repository were. We can also use the `wait commit` command with a commit ID to
    track commits as they land in the output repository. For example, if we want to
    watch the changes that the `3e16201310374944b48ed73f83be2be7` commit lands in
    downstream pipelines, we can run the following command:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前面的命令告诉我们`contour`仓库中提交的前驱是什么。我们还可以使用`wait commit`命令结合提交ID来跟踪提交何时进入输出仓库。例如，如果我们想查看`3e16201310374944b48ed73f83be2be7`提交在下游管道中带来的变化，可以运行以下命令：
- en: '[PRE12]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Provenance** is a powerful feature of Pachyderm. It is especially useful
    when you need to find an audit trail to find out what made your pipeline biased.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**溯源**是Pachyderm的一个强大功能。当你需要寻找审计轨迹以查明是什么导致管道产生偏差时，它特别有用。'
- en: Now that we have learned how to explore data provenance in Pachyderm, let's
    look into how to mount your Pachyderm repository to a local filesystem.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学习了如何在Pachyderm中探索数据溯源，接下来我们来看看如何将Pachyderm仓库挂载到本地文件系统。
- en: Mounting a Pachyderm repository to a local filesystem
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将Pachyderm仓库挂载到本地文件系统
- en: 'You can mount your Pachyderm system to your local computer by using the **Filesystem
    in Userspace** (**FUSE**) interface to access your Pachyderm repositories as you
    typically would access local files. FUSE is supported on all major platforms,
    such as Microsoft Windows, Linux, and macOS. By default, you can mount your Pachyderm
    repositories with read-only access but write access can also be enabled. You need
    to understand that modifying the files in these mounts leads to broken provenance
    and should not generally be used. Use this functionality to do the following:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用**用户空间文件系统**（**FUSE**）接口将Pachyderm系统挂载到本地计算机，从而像访问本地文件一样访问你的Pachyderm仓库。FUSE支持所有主流平台，如Microsoft
    Windows、Linux和macOS。默认情况下，你可以以只读方式挂载Pachyderm仓库，但也可以启用写入权限。你需要明白，修改这些挂载中的文件会导致溯源信息破坏，因此通常不应使用这种方式。可以使用这个功能来执行以下操作：
- en: View the results of your pipeline runs.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看管道运行的结果。
- en: Give third-party applications access to Pachyderm output repositories for further
    processing.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许第三方应用程序访问Pachyderm输出仓库，以便进行进一步处理。
- en: 'To mount a Pachyderm repository to your local computer filesystem, complete
    the following steps:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 要将Pachyderm仓库挂载到本地计算机文件系统，请完成以下步骤：
- en: 'Install FUSE on your machine. If you are on macOS, run the following:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的机器上安装FUSE。如果你使用的是macOS，请运行以下命令：
- en: '[PRE13]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If you are on Linux, run the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是Linux，请运行以下命令：
- en: '[PRE14]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'On Windows, run the following:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，运行以下命令：
- en: '[PRE15]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Use the `pachctl mount` command to mount a Pachyderm repository. For example,
    to mount a `contour` repository, run the following:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pachctl mount`命令挂载Pachyderm仓库。例如，要挂载`contour`仓库，请运行以下命令：
- en: '[PRE16]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This command will run continuously in your terminal until you interrupt it with
    *Ctrl* + *C*.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将在你的终端中持续运行，直到你用*Ctrl* + *C*中断它。
- en: 'To access your files, go to your file browser. For example, if you are on macOS,
    use Finder. You should see the `~/Documents/contour` folder mounted like this:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要访问你的文件，打开文件浏览器。例如，如果你使用的是macOS，请使用Finder。你应该能看到像下面这样的`~/Documents/contour`文件夹已挂载：
- en: '![Figure 7.3 – Mounted Pachyderm repository'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.3 – 挂载的Pachyderm仓库'
- en: '](img/B17085_07_003.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17085_07_003.jpg)'
- en: Figure 7.3 – Mounted Pachyderm repository
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3 – 挂载的Pachyderm仓库
- en: From here, you can view the files as needed.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以根据需要查看文件。
- en: 'To mount a repository with write access, run the same command with the `--write`
    flag:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要挂载具有写权限的仓库，请使用相同的命令并加上`--write`标志：
- en: '[PRE17]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Use this functionality with caution as modifying files in output repositories
    breaks the provenance.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 请谨慎使用此功能，因为修改输出仓库中的文件会破坏来源信息。
- en: 'To mount multiple repositories, specify the list of the repositories each with
    a `--repos` flag:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要挂载多个仓库，请使用`--repos`标志指定每个仓库的列表：
- en: '[PRE18]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following screenshot shows how the `data`, `contour`, `histogram`, and
    `photos` repositories are mounted on your machine:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了`data`、`contour`、`histogram`和`photos`仓库在你的机器上是如何挂载的：
- en: '![Figure 7.4 – Mounted Pachyderm repositories'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4 – 挂载的Pachyderm仓库'
- en: '](img/B17085_07_004.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17085_07_004.jpg)'
- en: Figure 7.4 – Mounted Pachyderm repositories
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – 挂载的Pachyderm仓库
- en: In this section, we learned how to perform the most common Pachyderm data operations,
    including uploading data to Pachyderm, exploring provenance, and mounting Pachyderm
    repositories to your local machine, as well as splitting data while uploading
    it to Pachyderm. Next, we'll look into the most common pipeline operations that
    you will have to perform while working with Pachyderm.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何执行最常见的Pachyderm数据操作，包括将数据上传到Pachyderm、探索来源信息、将Pachyderm仓库挂载到本地计算机，以及在将数据上传到Pachyderm时进行数据拆分。接下来，我们将探讨在使用Pachyderm时需要执行的最常见管道操作。
- en: Executing pipeline operations
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行管道操作
- en: Apart from creating and deleting pipelines, you likely will need to update your
    pipelines with new code changes. If changes are made to the pipeline specification
    itself, such as increasing the number of Pachyderm workers, input repository,
    glob pattern, or similar, you only need to do it in the YAML or JSON file and
    update the version of your pipeline spec. However, if the changes are in your
    code and your code is in your Docker image, you need to rebuild the Docker image.
    Let's go through each of these use cases.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 除了创建和删除管道外，你还可能需要使用新的代码更改更新管道。如果对管道规范本身进行了更改，例如增加Pachyderm工作节点的数量、输入仓库、通配符模式或类似的更改，你只需要在YAML或JSON文件中进行更改，并更新管道规范的版本。但是，如果更改发生在你的代码中，并且代码在Docker镜像中，你需要重建Docker镜像。让我们逐一讨论这些使用场景。
- en: Updating your pipeline specification
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新你的管道规范
- en: 'The pipeline specification enables you to control various Pachyderm parameters,
    such as controlling from which repository your pipeline consumes data, how many
    workers are started, and how many resources are available to your pipeline. You
    can also specify your code in the pipeline itself through the `stdin` field. Such
    a pipeline can use a basic Docker image that you won''t have to ever update. If
    this is your case and you need to make changes in your pipeline spec or the code
    in the `stdin` field, here is what you need to do:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 管道规范使你能够控制各种Pachyderm参数，例如控制管道从哪个仓库获取数据、启动多少个工作节点以及为管道分配多少资源。你还可以通过`stdin`字段在管道中指定你的代码。这样的管道可以使用一个基本的Docker镜像，你不需要更新它。如果是这种情况，并且你需要在管道规范或`stdin`字段中的代码中进行更改，以下是你需要做的步骤：
- en: 'Make the needed changes in the YAML or JSON file that has your pipeline specification.
    For example, if you want to change a glob pattern in your `contour.yaml` pipeline
    from `glob: "/"` to `glob: "/*"`, you just make these changes directly in the
    YAML file and save it.'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在包含管道规范的 YAML 或 JSON 文件中进行必要的更改。例如，如果你想将`contour.yaml`管道中的 glob 模式从`glob: "/"`更改为`glob:
    "/*"`，只需直接在 YAML 文件中进行这些更改并保存。'
- en: 'Then, you need to update the version of the already running pipeline by specifying
    this YAML file:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你需要通过指定这个 YAML 文件来更新已运行管道的版本：
- en: '[PRE19]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Verify that the pipeline version is updated:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证管道版本是否已更新：
- en: '[PRE20]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If the previous version of your pipeline was `1`, it should change to `2`:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果之前的管道版本是`1`，它应该变成`2`：
- en: '[PRE21]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The new pipeline will not process the data that has already been processed unless
    you explicitly specify it by using the `--reprocess` flag.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 新的管道不会处理已经处理过的数据，除非你通过使用`--reprocess`标志明确指定。
- en: 'To run the updated pipeline against the already processed data, use the following:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在已处理的数据上运行更新后的管道，请使用以下命令：
- en: '[PRE22]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'In the output, you should see that the version was updated again:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输出中，你应该看到版本已再次更新：
- en: '[PRE23]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'By default, if you run `pachctl list pipeline`, Pachyderm shows information
    about the latest pipeline only. If you run this command with the `--history` flag,
    you can see all previous versions as well:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，如果你运行`pachctl list pipeline`，Pachyderm 只会显示最新管道的信息。如果你使用`--history`标志运行此命令，你可以看到所有的历史版本：
- en: '[PRE24]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Here is what the output should look like:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该如下所示：
- en: '[PRE25]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You can see that the version 3 pipeline ran three times.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，版本 3 的管道已经运行了三次。
- en: 'Now, let''s check that the third version of the pipeline output a commit in
    the `contour` repository:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们检查第三个版本的管道是否在`contour`仓库中输出了提交：
- en: '[PRE26]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'This command should return similar output:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令应该返回类似的输出：
- en: '[PRE27]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Now that we know how to update a pipeline without changes to the code, let's
    see the workflow when your code is in a Docker image, and you need to update that
    code.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了如何在没有代码更改的情况下更新管道，让我们看看当你的代码在 Docker 镜像中时，需要更新代码的工作流。
- en: Updating your code
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新你的代码
- en: If your code is specified in a file that is embedded in a Docker image, you
    need to rebuild this Docker image every time you make changes to it, upload it
    to the Docker registry with a new version, update the version of the image inside
    of your pipeline specification, and then run the `pachctl update pipeline` command.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的代码被指定在一个嵌入到 Docker 镜像中的文件中，每次修改代码时，你需要重新构建这个 Docker 镜像，上传到 Docker 注册表，并给镜像指定一个新的版本，然后在你的管道规范中更新镜像版本，最后运行`pachctl
    update pipeline`命令。
- en: Let's modify the `contour.py` file in the contour pipeline that we created in
    [*Chapter 6*](B17085_06_Final_SB_Epub.xhtml#_idTextAnchor156), *Creating Your
    First Pipeline*. You need to have an account in a Docker registry to complete
    this section. If you do not have an account, you can create a free account on
    Docker Hub. All images referenced in this book are stored in Docker Hub and we
    will use Docker Hub as an example. If you are using any other Docker image registry,
    follow that registry's documentation to log in and upload images.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改在[*第6章*](B17085_06_Final_SB_Epub.xhtml#_idTextAnchor156)中创建的轮廓管道中的`contour.py`文件，*创建你的第一个管道*。你需要在
    Docker 注册表中有一个账户来完成此部分。如果你没有账户，可以在 Docker Hub 上创建一个免费账户。本书中提到的所有镜像都存储在 Docker
    Hub 中，我们将以 Docker Hub 为例。如果你使用其他 Docker 镜像注册表，请按照该注册表的文档进行登录并上传镜像。
- en: 'We will also need the Dockerfile for this pipeline to build new images:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要这个管道的 Dockerfile 来构建新的镜像：
- en: If you have not done so yet, download the Dockerfile from [https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline](https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline).
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你还没有这样做，请从[https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline](https://github.com/PacktPublishing/Reproducible-Data-Science-with-Pachyderm/tree/main/Chapter06-Creating-Your-First-Pipeline)下载
    Dockerfile。
- en: Configure your Docker Hub account by signing up at [https://hub.docker.com/](https://hub.docker.com/).
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在[https://hub.docker.com/](https://hub.docker.com/)注册来配置你的 Docker Hub 账户。
- en: When logged in to Docker Hub, click **Create Repository**.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Docker Hub 后，点击**创建仓库**。
- en: 'Name your repository and write a short description. For this example, we will
    be using a public registry, but Pachyderm supports private registries as well:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你的仓库命名并写一个简短的描述。在本示例中，我们将使用公共注册表，但 Pachyderm 也支持私有注册表：
- en: '![Figure 7.5 – Creating a Docker Hub registry'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.5 – 创建Docker Hub注册表'
- en: '](img/B17085_07_005.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17085_07_005.jpg)'
- en: Figure 7.5 – Creating a Docker Hub registry
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 创建Docker Hub注册表
- en: Click **Create**.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**。
- en: 'Go to the terminal on your machine and run the following:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您机器上的终端并运行以下命令：
- en: '[PRE28]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Provide your Docker Hub credentials to log in to Docker Hub. You should see
    the following output:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供您的Docker Hub凭据以登录到Docker Hub。您应该会看到如下输出：
- en: '[PRE29]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Open the `contour.py` file for editing.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`contour.py`文件进行编辑。
- en: 'Let''s make a very small change in our code—on *line 18*, change `linewidth`
    to `1`. Here is how it should look:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在代码中做一个非常小的改动——在*第18行*，将`linewidth`改为`1`。修改后应该是这样：
- en: '[PRE30]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Save your changes and exit.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存您的更改并退出。
- en: 'For these changes to take effect in our Pachyderm pipeline, we need to build
    a new Docker image. You need to have the Dockerfile in the current directory for
    the next command to work. Run the following command:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使这些更改在我们的Pachyderm管道中生效，我们需要构建一个新的Docker镜像。为了使下一个命令生效，您需要确保当前目录中有Dockerfile。运行以下命令：
- en: '[PRE31]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Replace `<your-registry>` with the name of your Docker Hub repository that
    you have created by following the preceding steps. You should see output similar
    to the following text:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 将`<your-registry>`替换为您通过前面的步骤创建的Docker Hub仓库名称。您应该会看到类似以下的输出：
- en: '[PRE32]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The first time you build a Docker image, it might take some time. Note that
    in `Step 9` in the preceding output, Docker adds your updated `contour.py` script.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次构建Docker镜像时可能会需要一些时间。请注意，在前面输出的`第9步`中，Docker会添加您更新后的`contour.py`脚本。
- en: 'The next step is to upload your image to your Docker registry. You could also
    first mount your Docker image locally and test it before uploading. To mount your
    Docker image locally, run the following:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是将您的镜像上传到Docker注册表。您也可以先将Docker镜像本地挂载并测试，然后再上传。要将Docker镜像本地挂载，运行以下命令：
- en: '[PRE33]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: This command takes some time to run, but it is very handy when you need to test
    something without constantly pushing new images to Docker Hub. We recommend that
    you mount your image locally, run your pipeline, and when ready, upload it to
    Docker Hub.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令需要一些时间才能运行，但当您需要测试某些内容而不需要不断将新镜像推送到Docker Hub时，它非常方便。我们建议您将镜像本地挂载，运行管道，准备好后再上传到Docker
    Hub。
- en: 'Or, if uploading directly to Docker Hub, run the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果是直接上传到Docker Hub，请运行以下命令：
- en: '[PRE34]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'After you load your image, you need to update your pipeline specification with
    the new version of your pipeline. Assign a new version number every time you build
    a new image so that you keep track of your changes. To update the image version
    in the pipeline specification, open the `contour.yaml` file and change the following
    online number `9`:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在加载完您的镜像后，您需要使用管道的新版本更新管道规范。每次构建新镜像时，给镜像分配一个新版本号，以便跟踪您的更改。要更新管道规范中的镜像版本，打开`contour.yaml`文件，并更改以下第`9`行：
- en: '[PRE35]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, you can run your updated pipeline with the new code. Let''s run the `update`
    command with the `--reprocess` flag to see how our changes have affected the result:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以使用新的代码运行更新后的管道。让我们运行`update`命令并带上`--reprocess`标志，以查看我们的更改如何影响结果：
- en: '[PRE36]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'In the following screenshot, you can see the comparison between the two versions.
    We have the first version on the left with a visibly thicker contour than the
    new version on the right:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，您可以看到两个版本之间的比较。左边是第一版，轮廓明显比右边的新版本要粗：
- en: '![Figure 7.6 – Comparing the results of the pipeline version'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.6 – 比较管道版本的结果'
- en: '](img/B17085_07_006.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17085_07_006.jpg)'
- en: Figure 7.6 – Comparing the results of the pipeline version
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6 – 比较管道版本的结果
- en: We have learned how to update Pachyderm pipelines. This method works for any
    language or framework. Pachyderm also provides built-in `Docker build` and `Docker
    push` commands that you could use. However, we suggest that you follow the process
    described previously as it seems to be more familiar to the majority of engineers,
    as well as more transparent.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何更新Pachyderm管道。这种方法适用于任何语言或框架。Pachyderm也提供了内建的`Docker build`和`Docker
    push`命令可以使用。不过，我们建议您遵循前面描述的过程，因为它似乎更为大多数工程师熟悉，也更为透明。
- en: Running maintenance operations
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行维护操作
- en: Like with every system or tool, Pachyderm might require periodic maintenance,
    upgrades, and troubleshooting. In the following sections, we will discuss the
    most important aspects of pipeline maintenance.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 像所有系统或工具一样，Pachyderm可能需要定期维护、升级和故障排除。在接下来的部分中，我们将讨论管道维护的最重要方面。
- en: Troubleshooting your pipeline
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除您的管道
- en: In this section, you will learn how to troubleshoot your pipeline.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何排查管道错误。
- en: 'Your pipelines might fail for the following reasons:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 您的管道可能因以下原因失败：
- en: '**Error in your code**: This type of error occurs when something in your code
    is incorrect, such as a resource is not available or an incorrect value is specified.
    Fixing this type of error involves troubleshooting your code. You could try to
    do it locally before testing it inside Pachyderm.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码错误**：这种类型的错误发生在代码中出现问题时，比如某个资源不可用或指定了错误的值。修复这种错误涉及到排查代码。您可以尝试在本地修复后再在 Pachyderm
    中进行测试。'
- en: '**Pipeline specification error**: This type of error occurs when something
    is incorrect in the pipeline specification; for example, a pipeline cannot pull
    the Docker image. This often happens when a wrong image version is specified or
    there is a network issue.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管道规范错误**：这种类型的错误发生在管道规范中出现问题时；例如，管道无法拉取 Docker 镜像。这通常发生在指定了错误的镜像版本或存在网络问题时。'
- en: '**Resource-related error**: This type of error occurs when your cluster runs
    out of memory or has a similar resource constraint issue.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源相关错误**：这种类型的错误发生在您的集群内存耗尽或存在类似资源限制的问题时。'
- en: Pachyderm provides built-in functionality for pipeline troubleshooting through
    the `pachctl logs` command and you could also use Kubernetes-native tools to troubleshoot
    your pipelines. Since each Pachyderm pipeline is a Kubernetes Pod, you can use
    Kubernetes logging and debugging tools to troubleshoot them.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Pachyderm 提供了通过 `pachctl logs` 命令进行管道故障排查的内置功能，您也可以使用 Kubernetes 原生工具来排查管道问题。由于每个
    Pachyderm 管道都是一个 Kubernetes Pod，您可以使用 Kubernetes 的日志记录和调试工具来进行故障排查。
- en: 'To detect and troubleshoot Pachyderm pipeline errors, complete the following
    steps:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 若要检测和排查 Pachyderm 管道错误，请完成以下步骤：
- en: 'When a pipeline fails, you should see it in the pipeline status:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当管道失败时，您应该在管道状态中看到它：
- en: '[PRE37]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Here is an example output of a failed pipeline:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个失败管道的示例输出：
- en: '[PRE38]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To troubleshoot this pipeline, we need to view the logs for the pipeline or
    the job. To view the logs for the pipeline, run the following:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要排查此管道问题，我们需要查看管道或作业的日志。要查看管道的日志，请运行以下命令：
- en: '[PRE39]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The following is an example response:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例响应：
- en: '[PRE40]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: In the preceding example, the failure is pretty clear—the pipeline failed to
    pull the Docker image. This could be due to the wrong image version specified
    in the pipeline spec or a network issue. Verifying that the pipeline spec is correct
    will likely solve the problem.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，失败的原因很明显——管道未能拉取 Docker 镜像。这可能是由于管道规范中指定的镜像版本错误或网络问题导致的。验证管道规范是否正确通常能够解决问题。
- en: 'The following text is an example of another common code error in the pipeline:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下文本是管道中另一个常见代码错误的示例：
- en: '[PRE41]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: In the preceding example, the pipeline was not able to find a specified file.
    This is likely because the path to the file was specified incorrectly in the `pos-tag.py`
    file.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，管道未能找到指定的文件。这很可能是因为在 `pos-tag.py` 文件中指定的文件路径不正确。
- en: 'In some cases, you won''t be able to see the job logs because the pipeline
    crashed before kicking off a job. However, in most cases, you should be able to
    view the logs for a job. To view the job logs, first get the hash of the job:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在某些情况下，由于管道在启动作业之前崩溃，您可能无法查看作业日志。然而，在大多数情况下，您应该能够查看作业的日志。要查看作业日志，首先获取作业的哈希值：
- en: '[PRE42]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Here is an example output:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例输出：
- en: '[PRE43]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: When you have a pipeline error, such as in the preceding output, the progress
    bar is yellow instead of green. This indicator gives you a clue that something
    is wrong in your code.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 当您遇到管道错误时，如前述输出所示，进度条为黄色而不是绿色。这个指示符告诉您代码中可能存在问题。
- en: 'Use the job hash to view more information about the failure in the job logs:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用作业哈希值查看作业日志中关于失败的更多信息：
- en: '[PRE44]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The output should give you more information about the failure.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应提供更多关于失败的信息。
- en: 'Finally, you can use `kubectl` to analyze possible errors in your pipeline.
    Get the name of your pipeline Pod by running the following:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您可以使用 `kubectl` 分析管道中的可能错误。通过运行以下命令获取您的管道 Pod 名称：
- en: '[PRE45]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'You should see a similar response to the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到类似于以下的响应：
- en: '[PRE46]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: You need to get logs for the pipeline Pod.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要获取管道 Pod 的日志。
- en: 'Get the Pod logs by running the following:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令获取 Pod 日志：
- en: '[PRE47]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Important note
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要说明
- en: The **Events** part of the Pod logs typically provides information about any
    issues. Read more about Kubernetes debugging and troubleshooting in the Kubernetes
    documentation at [https://kubernetes.io/docs/tasks/debug-application-cluster/](https://kubernetes.io/docs/tasks/debug-application-cluster/).
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Pod日志中的**事件**部分通常会提供关于任何问题的信息。有关Kubernetes调试和故障排除的更多信息，请参见Kubernetes文档：[https://kubernetes.io/docs/tasks/debug-application-cluster/](https://kubernetes.io/docs/tasks/debug-application-cluster/)。
- en: 'This is an example output that you will see:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你将看到的示例输出：
- en: '[PRE48]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: In this section, we have discussed basic troubleshooting operations. The best
    strategy is to get as many logs as possible, categorize the problem, and then
    troubleshoot accordingly. If the problem is in the user code, you likely will
    want to test your code locally before running it in Pachyderm. One limitation
    that has been recently introduced in Pachyderm is the limit of the number of pipelines
    that you can run in the free tier. You won't be able to run more than 16 pipelines
    and 8 workers unless you upgrade to a paid version.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们讨论了基本的故障排除操作。最佳策略是尽可能收集更多日志，分类问题，然后有针对性地进行排查。如果问题出在用户代码中，你可能想先在本地测试代码，再在Pachyderm中运行。最近Pachyderm引入的一个限制是免费套餐下，你能运行的管道数量有限。除非升级到付费版本，否则你将无法运行超过16个管道和8个工作者。
- en: Next, we'll look into how to upgrade your cluster from one version to another.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论如何将集群从一个版本升级到另一个版本。
- en: Upgrading your Pachyderm cluster
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 升级你的Pachyderm集群
- en: Pachyderm releases minor version upgrades on a regular basis. Upgrading between
    minor versions and patches, such as from version 1.13.0 to 1.13.1 or 1.12.4\.
    to 1.13.0, is pretty straightforward, but moving between major versions, such
    as 1.13.0 to 2.0, might be a bit more disruptive. Let's review the process for
    each of these use cases. Upgrades to major versions do not happen often. Typically,
    Pachyderm releases a major version once every few years. Those types of upgrades
    involve breaking changes and likely will have specific instructions. Refer to
    the Pachyderm documentation for steps to perform a major upgrade.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: Pachyderm定期发布次要版本升级。升级不同次要版本和补丁版本（例如从1.13.0到1.13.1，或从1.12.4到1.13.0）相对直接，但在主要版本之间升级（例如从1.13.0到2.0）可能会更具破坏性。让我们来回顾一下每种使用场景的过程。主要版本的升级不常发生。通常，Pachyderm每隔几年发布一次主要版本。这类升级通常涉及破坏性更改，可能会有特定的说明。请参考Pachyderm文档，了解执行主要版本升级的步骤。
- en: Upgrading between patches and minor versions
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 升级补丁和次要版本
- en: When you are upgrading your Pachyderm cluster, you need to make sure you back
    up your data and pipelines, upgrade the version of `pachctl`, and then redeploy
    your cluster. If you are upgrading locally in a `minikube` environment, you might
    not need to use your backup, but create one for safety reasons. If you are redeploying
    into the same namespace, all your data should still be available. If you are using
    a cloud environment, then you'll need to redeploy in a new namespace.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级Pachyderm集群时，你需要确保备份你的数据和管道，升级`pachctl`的版本，然后重新部署你的集群。如果你在`minikube`环境中进行本地升级，可能不需要使用备份，但为了安全起见，还是建议创建一个备份。如果你在同一个命名空间中重新部署，所有数据应该仍然可用。如果你使用的是云环境，那么你需要在一个新的命名空间中重新部署。
- en: 'To upgrade from one patch or a minor version to another, complete the following
    steps:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 要从一个补丁版本或次要版本升级到另一个版本，请完成以下步骤：
- en: 'Stop all pipelines that are currently running in your cluster:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止集群中当前正在运行的所有管道：
- en: '[PRE49]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Let''s stop the `contour` pipeline:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止`contour`管道：
- en: '[PRE50]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Verify that the pipeline is suspended:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证管道是否已挂起：
- en: '[PRE51]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'You should see the following output:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '[PRE52]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: If you have any other pipelines running, stop them as well.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有其他管道在运行，也请将它们停止。
- en: You need to make sure that all external data loading operations are suspended
    as well, if you have any automated services uploading data to Pachyderm.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你有任何自动化服务将数据上传到Pachyderm，也需要确保所有外部数据加载操作已暂停。
- en: 'Just in case, save your `pachd`, `etcd`, and `console` service manifests to
    separate YAML files:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为以防万一，将你的`pachd`、`etcd`和`console`服务清单保存到单独的YAML文件中：
- en: '[PRE53]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: If your upgrade goes wrong, you should be able to restore from these manifests
    manually.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的升级失败，你应该能够通过这些清单手动恢复。
- en: 'Back up your cluster:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份你的集群：
- en: '[PRE54]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: In the preceding example, we have specified the `--no-auth` and `--no-enterprise`
    flags. If you are using an enterprise version of Pachyderm or have enabled authentication,
    run this command without these flags.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，我们指定了 `--no-auth` 和 `--no-enterprise` 标志。如果你使用的是 Pachyderm 企业版或已启用身份验证，请不要使用这些标志运行此命令。
- en: 'Verify that the `values.yaml` file has updated values. Specifically, verify
    that the following autogenerated values are correct:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 `values.yaml` 文件是否已更新值。特别是，验证以下自动生成的值是否正确：
- en: '[PRE55]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Upgrade your `pachctl` version, as in the following example:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 升级你的 `pachctl` 版本，如以下示例所示：
- en: '[PRE56]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Use the package manager in your system to upgrade.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 使用系统中的包管理器进行升级。
- en: 'Verify that the Pachyderm version was upgraded:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 Pachyderm 版本是否已升级：
- en: '[PRE57]'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'You should see the upgraded version in the output. In this case, it is `2.0.0`:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在输出中看到升级后的版本。在这种情况下，版本为 `2.0.0`：
- en: '[PRE58]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Use the `helm upgrade` command to redeploy your cluster:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `helm upgrade` 命令重新部署你的集群：
- en: '[PRE59]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Run `kubectl get pod` until you see the Pachyderm Pods running like this:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`kubectl get pod`，直到你看到类似下面的Pachyderm Pod正在运行：
- en: '[PRE60]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Check that `pachd` is running:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 `pachd` 是否在运行：
- en: '[PRE61]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'This command should return an output similar to this:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令应该返回类似如下的输出：
- en: '[PRE62]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'If you are in a cloud environment, use the following command to restore your
    configuration from the backup that you have created:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你在云环境中，使用以下命令从你创建的备份中恢复配置：
- en: '[PRE63]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Check that your pipelines and repositories are in place:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你的管道和仓库是否已就绪：
- en: '[PRE64]'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The system response should look similar to this:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 系统响应应该类似于此：
- en: '[PRE65]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: We have successfully restored our repositories and pipelines in our newly deployed
    cluster.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功恢复了我们在新部署的集群中的仓库和管道。
- en: Cleaning up
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清理
- en: 'After you are done experimenting, you might want to clean up your cluster so
    that you start your next experiment with a fresh install. To clean up the environment,
    run the following commands:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在你完成实验后，你可能想要清理你的集群，以便在下一个实验中重新开始。要清理环境，请运行以下命令：
- en: 'Delete all pipelines and repositories:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除所有管道和仓库：
- en: '[PRE66]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Verify that no repositories and pipelines exist in your cluster:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证集群中是否没有仓库和管道：
- en: '[PRE67]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'You should see the following output:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '[PRE68]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: You have successfully cleaned up your cluster.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功清理了你的集群。
- en: Summary
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned about some of the most important Pachyderm
    operations that you will need to perform during the lifetime of your Pachyderm
    cluster. We learned about the various ways to load data into Pachyderm, including
    how to do it with a messaging system. We learned how to update your pipelines,
    build Docker images, and mount them locally or upload them to a Docker image registry.
    Finally, we learned about some basic troubleshooting techniques and upgrading
    between patches and minor versions.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了一些在 Pachyderm 集群生命周期中需要执行的最重要的操作。我们学习了多种将数据加载到 Pachyderm 的方式，包括如何使用消息系统进行数据加载。我们还学习了如何更新管道、构建
    Docker 镜像，并将它们本地挂载或上传到 Docker 镜像仓库。最后，我们了解了一些基本的故障排除技巧以及如何在补丁和小版本之间进行升级。
- en: In the next chapter, we will implement an end-to-end machine learning workflow
    and learn more about deploying more complex multi-step Pachyderm pipelines.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将实现一个端到端的机器学习工作流，并深入了解如何部署更复杂的多步骤 Pachyderm 管道。
- en: Further reading
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Docker Hub Quickstart: [https://docs.docker.com/docker-hub/](https://docs.docker.com/docker-hub/)'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Docker Hub 快速入门: [https://docs.docker.com/docker-hub/](https://docs.docker.com/docker-hub/)'
- en: 'Kubernetes monitoring, logging, and debugging: [https://kubernetes.io/docs/tasks/debug-application-cluster/](https://kubernetes.io/docs/tasks/debug-application-cluster/)'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 监控、日志记录和调试：[https://kubernetes.io/docs/tasks/debug-application-cluster/](https://kubernetes.io/docs/tasks/debug-application-cluster/)
- en: 'Pachyderm build pipelines: [https://docs.pachyderm.com/latest/how-tos/developer-workflow/build-pipelines/](https://docs.pachyderm.com/latest/how-tos/developer-workflow/build-pipelines/)'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Pachyderm 构建管道: [https://docs.pachyderm.com/latest/how-tos/developer-workflow/build-pipelines/](https://docs.pachyderm.com/latest/how-tos/developer-workflow/build-pipelines/)'
- en: 'Dua, D. and Graff, C. (2019). *UCI Machine Learning Repository* ([http://archive.ics.uci.edu/ml](http://archive.ics.uci.edu/ml)).
    Irvine, CA: University of California, School of Information and Computer Science.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dua, D. 和 Graff, C.（2019）。 *UCI 机器学习库*（[http://archive.ics.uci.edu/ml](http://archive.ics.uci.edu/ml)）。加利福尼亚州尔湾：加利福尼亚大学信息与计算机科学学院。
