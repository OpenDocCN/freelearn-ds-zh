- en: '*Chapter 12*: Streamlit Power Users'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第12章*：Streamlit 强力用户'
- en: Welcome to the final chapter of this book! In this chapter, we will learn from
    the best, from Streamlit creators with experience creating dozens of apps and
    components, Streamlit power users turned Streamlit employees, and even the founder
    of the Streamlit library who now runs the fledgling company supporting the library's
    development. We sat down and interviewed four different users and learned about
    their backgrounds, their experience with Streamlit, and what tips they have for
    users of all experience levels. From these interviews, we will learn how they
    use Streamlit on a day-to-day basis at work, for teaching, and also about where
    Streamlit is going from here.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到本书的最后一章！在这一章中，我们将向最佳学习者学习，包括 Streamlit 的创始人和有丰富应用及组件开发经验的 Streamlit 用户，他们中的一些人已经转变为
    Streamlit 员工，甚至还有现在管理支持 Streamlit 库开发的初创公司的创始人。我们与四位不同的用户坐下来进行了访谈，了解了他们的背景、他们使用
    Streamlit 的经验，以及他们为不同经验水平的用户提供的建议。通过这些访谈，我们将了解他们如何在日常工作中、教学中使用 Streamlit，以及 Streamlit
    接下来的发展方向。
- en: 'This chapter is grouped into four interviews:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章分为四个访谈：
- en: Fanilo Andrianasolo, Streamlit creator and tech lead at Worldline
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fanilo Andrianasolo，Streamlit 创始人和 Worldline 技术负责人
- en: Johannes Rieke, Streamlit creator turned engineer
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Johannes Rieke，Streamlit 创始人转工程师
- en: Adrien Treuille, Streamlit founder and CEO
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adrien Treuille，Streamlit 创始人兼 CEO
- en: Charly Wargnier, Streamlit creator and SEO consultant
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Charly Wargnier，Streamlit 创始人兼 SEO 顾问
- en: First, let's start with Fanilo!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从 Fanilo 开始！
- en: 'Interview #1 – Fanilo Andrianasolo'
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '访谈 #1 – Fanilo Andrianasolo'
- en: (Tyler) Hey, Fanilo! Before we get started, do you want to introduce yourself
    to the readers? What's your background? What do you spend your time doing, and
    who do you work for?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）嘿，Fanilo！在我们开始之前，你想向读者自我介绍一下吗？你有什么背景？你平时做什么工作，在哪工作？
- en: (Fanilo) Hello, everybody! My name is Fanilo Andrianasolo, I'm from Madagascar,
    and I work at Worldline, which is one of the leading European companies in digital
    payments and transactional services. I work there as a data science and business
    intelligence advocate and tech lead, where I help internal product and development
    teams to prototype new data science use cases, architect those use cases, and
    then put them into production. So, most of my work is focused on integrating data
    analytics inside Worldline, which is a huge task because it covers multiple industries
    from finance, for example, fraud detection, retail, and customer analysis. And
    I'm also a data science advocate, so I build and present multiple talks internally
    or to prospective customers where I can show them, "This is data science, don't
    worry, it's not that hard" or "This is a random forest, don't worry, it's not
    as complex as what you may think." And on the side, I am a university lecturer
    in big data and NoSQL in Lyon where I teach about 50 hours a year. It's an amazing
    opportunity to be able to talk to students and watch them grow into amazing software
    engineers and data scientists!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: （Fanilo）大家好！我叫 Fanilo Andrianasolo，来自马达加斯加，我在 Worldline 工作，Worldline 是欧洲领先的数字支付和交易服务公司之一。我在那里担任数据科学和商业智能倡导者及技术负责人，帮助内部产品和开发团队原型化新的数据科学应用场景、设计这些场景的架构，并将它们投入生产。所以，我的大部分工作专注于将数据分析集成到
    Worldline 中，这是一项庞大的任务，因为它涉及多个行业，例如金融（如欺诈检测）、零售和客户分析。同时，我还是数据科学的倡导者，因此我会为内部员工或潜在客户提供多个讲座，向他们展示：“这就是数据科学，别担心，它并没有你想象的那么难”或“这就是随机森林，别担心，它没有你想象的那么复杂。”此外，我还在里昂大学教授大数据和
    NoSQL，每年讲授大约 50 小时。这是一个极好的机会，可以与学生交流，并看到他们成长为出色的软件工程师和数据科学家！
- en: (Tyler) That sounds awesome! You basically have, the way that I see it, two
    very interesting roles where you have to explain data science concepts to others,
    one at work and then another at university. Do you use Streamlit in both situations?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）听起来很棒！我觉得你基本上有两个非常有趣的角色，你需要在工作和大学中向他人解释数据科学概念。你在这两个场景中都使用 Streamlit 吗？
- en: (Fanilo) Yes, I do! When I discovered Streamlit, it was for internal work. At
    first, I was working on tracking some metrics from different machines and wanted
    to showcase them without using Jupyter Notebook, because I didn't want to click
    and run each cell every time. And I tried Streamlit and I was really hooked by
    how fast and easy it was to use it to build something.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: （Fanilo）是的，我用过！当我第一次发现 Streamlit 时，是为了内部工作。起初，我在追踪不同机器的指标，并希望展示它们，而不想使用 Jupyter
    Notebook，因为我不想每次都点击运行每一个单元格。我尝试了 Streamlit，发现它非常快速且易于使用，立刻就被它吸引了。
- en: For my university lectures where I'm doing mostly PySpark, MongoDB, and Elasticsearch
    lectures, I demo those through their Python plugins. I would show a Streamlit
    app with the code on the side, I would change the code in front of my students,
    and all the Python variables would update on the app in real time. When you write
    this code that builds some MapReduce job, for example, in PySpark, it's easy to
    show them the code live and even do some coding exercises together. To show how
    the code works, I just put a function inside the code and the result is directly
    on the right in the Streamlit app. It's really dynamic and is a really easy way
    for me to show and tell the code.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我做大学讲座时，主要是讲 PySpark、MongoDB 和 Elasticsearch，这些都是通过它们的 Python 插件进行演示的。我会展示一个
    Streamlit 应用，代码在旁边，我会在学生面前修改代码，所有的 Python 变量会实时在应用上更新。当你写这段代码来构建某个 MapReduce 任务时，比如在
    PySpark 中，展示代码实时效果很容易，甚至可以和学生一起做编程练习。为了展示代码如何工作，我会在代码里放一个函数，结果会直接显示在 Streamlit
    应用的右侧。这种方式非常动态，也让我能轻松地展示和讲解代码。
- en: (Tyler) Is there a difference in how you develop Streamlit apps for the two
    groups? I feel like there's a lot of similarities there but what are the differences?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）你为这两个团队开发 Streamlit 应用时，有什么不同吗？我觉得它们有很多相似之处，但具体有哪些区别呢？
- en: (Fanilo) For students, it's going to be a single script that is going to run
    from the top to the bottom so it's easy to follow; it's like a live demo for them.
    Whereas when I'm at my company, I'm going to integrate Streamlit into bigger projects
    so there is usually already a project structure with a folder dedicated to UI
    work. For work projects, Streamlit apps are going to use functions from multiple
    libraries and multiple modules so it's a little bit different. The way we distribute
    and use the Streamlit app at work is also a little bit different because at university,
    I can just do anything on my machine. When I'm at work, I have to worry about
    more, like can I put this into the cache? Can I rewrite a colleague's function
    because it cannot go into Streamlit hashing? Constraints in my professional work
    make it a little bit more complex to write Streamlit apps.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: （Fanilo）对于学生来说，这将是一个从上到下运行的单一脚本，方便他们跟着走；这对他们来说就像是一个实时演示。而在公司工作时，我将 Streamlit
    集成到更大的项目中，因此通常会有一个已经建立的项目结构，并有一个专门用于 UI 的文件夹。对于工作项目，Streamlit 应用将会使用来自多个库和模块的函数，所以会有所不同。我们在工作中分发和使用
    Streamlit 应用的方式也稍有不同，因为在大学里，我可以随意在我的机器上做任何事情。而在工作中，我必须考虑更多问题，比如能否将某些内容放入缓存中？能否重写同事的函数，因为它不能放入
    Streamlit 哈希？我在职业工作中的一些限制让写 Streamlit 应用变得更复杂。
- en: (Tyler) I'm curious how you do your deployment at work. Do you do it on Heroku
    servers to use Streamlit for Teams? Or do you do it all locally?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）我很好奇你在工作中是如何进行部署的。你是在 Heroku 服务器上使用 Streamlit for Teams 吗？还是全部在本地进行？
- en: (Fanilo) We have two servers internally on-prem where I deploy my Streamlit
    apps. There are not a lot of people using Streamlit inside the company, so I can
    just host the app on a server temporarily so marketing can play with the app.
    And the more techy people that don't know Python, I just send them the scripts
    and tell them how to run it with Anaconda.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: （Fanilo）我们公司内部有两台本地服务器，我将 Streamlit 应用部署在这些服务器上。公司内部使用 Streamlit 的人不多，所以我可以暂时把应用托管在服务器上，让市场部门可以试用。而那些不懂
    Python 的技术人员，我就直接把脚本发给他们，并告诉他们如何使用 Anaconda 运行。
- en: (Tyler) So you talked a bit about your first time using Streamlit. Did you find
    out about it on Twitter, or from a forum somewhere? What got you started? What
    was your original use case?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）你提到过第一次使用 Streamlit的经历。你是通过 Twitter 发现它的吗？还是在某个论坛上看到的？是什么让你开始使用它的？最初的使用场景是什么？
- en: (Fanilo) I think I heard about it from Twitter. At first, I dismissed it thinking,
    "Oh, it's just another Python library, I'll just put it in my to-do list to try
    one day." And I tried it 2 months later when I was working on a real-time data
    science demo for a prospective customer. They wanted to track visit metrics from
    different websites and visualize them. Actually, a good proportion of our customers
    just ask us for some data analysis. They have not thought of KPIs, analytics business
    use cases, or business questions to answer through data. Those are always hard
    to start and I usually build them a small interactive demo to help them understand
    the data science process. And that's where I thought, "Oh, I should give Streamlit
    a try."
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: （Fanilo）我想我是在Twitter上听说的它。一开始我并没有在意，想，“哦，这只是另一个Python库，我把它放到待办事项清单里，哪天试试就好。”然后我在两个月后尝试了它，当时我正在为一个潜在客户做一个实时数据科学演示。他们想追踪来自不同网站的访问指标并进行可视化。事实上，我们的大部分客户只是要求我们做一些数据分析。他们还没有想到KPIs、分析业务用例，或者通过数据回答的商业问题。这些总是很难开始，我通常会为他们构建一个小的互动演示，帮助他们理解数据科学的过程。正是在那个时候，我想，“哦，我应该试试Streamlit。”
- en: Before this, I actually did a demonstration for another customer using Jupyter
    Notebook and the customer was not interested because they saw it as too technical;
    they didn't like seeing code. And so, I thought for this customer maybe I should
    try Streamlit to showcase a grid of plots, using sliders just to decide how much
    of the data you want to visualize. For this problem, we wanted to do windowing
    over a set of dates to answer what the mean number of visits on those websites
    is, and wanted to be able to decide on the size of the window. We could just put
    that in the sidebar in Streamlit, which was a good opportunity to show the customer
    the results in real time. So we added this slider to the Streamlit app and gave
    it to the customer, and you can see when there's a spike that you can analyze
    further. And yeah, that's how I got to know more about Streamlit, just through
    demoing data science internally and externally.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这之前，我实际上用Jupyter Notebook为另一个客户做过演示，但客户并不感兴趣，因为他们觉得这太技术化了；他们不喜欢看到代码。所以，我想对于这个客户，我或许应该试试Streamlit，展示一组图表，使用滑块来决定你想要可视化多少数据。对于这个问题，我们想对一组日期做窗口处理，以回答这些网站的平均访问量是多少，并且希望能够决定窗口的大小。我们可以将它放在Streamlit的侧边栏中，这是一个很好的机会，能够实时展示结果给客户看。所以我们在Streamlit应用中加入了这个滑块并交给了客户，你可以看到，当出现一个峰值时，可以进一步分析。是的，这就是我通过内部和外部演示数据科学的过程中，更多地了解Streamlit的方式。
- en: (Tyler) That's happened to me so often, where the client doesn't exactly know
    what they'd like when they come with a request. What a great use case! One of
    the things I wanted to talk to you about is the Streamlit community of which you've
    become a pretty strong member over the course of the past year. What about Streamlit
    convinces you to continue investing in the ecosystem?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）这种情况经常发生，客户在提出请求时并不完全知道自己想要什么。真是一个很棒的使用案例！我想跟你聊一聊Streamlit社区，过去一年你已经成为其中一个相当强大的成员了。Streamlit的哪些方面让你继续投资这个生态系统呢？
- en: (Fanilo) For me, the thing that hooked me into Streamlit really was the feedback
    loop that I missed from when I was doing frontend engineering. I could write some
    code, and I would see the results on my screen immediately. I could just edit
    the color in the CSS and see the change. And the fact that this feedback loop
    is so short in Streamlit, combined with the simplicity of the API, which makes
    building a basic app really easy, is what really hooked me into the framework.
    I also had this conversation with Adrian (Streamlit's founder) where I told him
    the feedback loop really reminded me of the web ecosystem and that for me was
    Streamlit's secret sauce.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: （Fanilo）对我来说，吸引我进入Streamlit的东西，实际上就是我在做前端工程时错过的反馈循环。我可以写一些代码，并且立刻在屏幕上看到结果。我可以直接在CSS中编辑颜色，并看到变化。而且在Streamlit中，这个反馈循环非常短，加上API的简洁性，使得构建一个基础应用变得非常容易，这才是让我真正被这个框架吸引的原因。我还和Adrian（Streamlit的创始人）有过一次对话，我告诉他，这个反馈循环让我想起了网页生态系统，对我来说，这就是Streamlit的“秘密酱料”。
- en: Another thing is the fact that now we can easily integrate web components into
    Streamlit, which makes it really easy for us to build more diverse web interactive
    apps for data scientists. I've always got this impression from talking with my
    students, or other coworkers, or people in meetups that they always struggle to
    build interactive apps where they can just select something or draw something
    and use this drawing as an input for their machine learning model. To do this,
    they needed to pre-draw, and then load the image into a Jupyter notebook, which
    takes too much time, but there are HTML components to draw on. Streamlit acting
    as a bridge between Python and the web through components is what gets us as creators
    hooked into pulling the web ecosystem into Streamlit.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 另一件事是现在我们可以很容易地将 web 组件集成到 Streamlit 中，这使得我们能够为数据科学家构建更多样化的交互式 web 应用程序变得非常简单。我总是从与我的学生、其他同事或者在聚会上与人交流中得到这样的印象，他们总是在努力构建交互式应用程序，可以在其中选择或绘制某些内容，并将这些绘制内容作为他们的机器学习模型的输入。为了做到这一点，他们需要预先绘制，然后将图像加载到
    Jupyter 笔记本中，这太费时了，但有 HTML 组件可以进行绘制。Streamlit 作为 Python 与 web 之间的桥梁通过组件将我们作为创建者拉入到
    Streamlit 中。
- en: (Tyler) So speaking of web-based platforms, you've spent a lot of time building
    components like streamlit-lottie ([https://github.com/andfanilo/streamlit-lottie](https://github.com/andfanilo/streamlit-lottie)),
    which we talked about earlier in the book, streamlit-drawable-canvas ([https://github.com/andfanilo/streamlit-drawable-canvas](https://github.com/andfanilo/streamlit-drawable-canvas)),
    and even streamlit-echarts ([https://github.com/andfanilo/streamlit-echarts](https://github.com/andfanilo/streamlit-echarts)).
    Can you talk to us a bit about how you come up with ideas for components?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 所以说到基于 web 的平台，你花了很多时间构建像 streamlit-lottie ([https://github.com/andfanilo/streamlit-lottie](https://github.com/andfanilo/streamlit-lottie))，我们之前在书中提到的
    streamlit-drawable-canvas ([https://github.com/andfanilo/streamlit-drawable-canvas](https://github.com/andfanilo/streamlit-drawable-canvas))，甚至
    streamlit-echarts ([https://github.com/andfanilo/streamlit-echarts](https://github.com/andfanilo/streamlit-echarts))
    这样的组件。你能谈谈你是如何想出这些组件的想法的吗？
- en: (Fanilo) So for those three components, I've got two different stories. I'm
    going to start with streamlit-lottie; the idea popped into my head on a Saturday
    night of boredom and scrolling Twitter. I saw nice animations using Lottie files
    and I thought to myself, "Oh, that's nice, I'd like to have some cool animations
    like this in Streamlit," so I just built it. And that's really it, wanting to
    bring more web components to Streamlit.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: (Fanilo) 所以对于这三个组件，我有两个不同的故事。我要从 streamlit-lottie 开始；这个想法是在一个无聊的周六晚上，我在 Twitter
    上滚动时突然冒出来的。我看到使用 Lottie 文件的漂亮动画，心想，“哦，很不错，我想在 Streamlit 中也能有这样酷炫的动画”，于是我就开始构建它。就是这样，我想把更多的
    web 组件引入到 Streamlit 中。
- en: For streamlit-echarts and streamlit-drawable-canvas, there was a bigger use
    case. I was on a tight deadline for a demo using TensorFlow.js years ago. I wanted
    to do training and inference on drawings and I spent 5 days creating the demo
    in the JavaScript ecosystem, mixing Fabric.js for drawing on a canvas and Echarts
    to show the results. It was very tough especially because it was my first real
    step into the frontend engineering world. And then when Streamlit came out, I
    wanted to see if other users could build this demo in hours instead of days if
    the Fabric.js and Echarts components already existed, so I extracted the code
    of this demo into external libraries and voilà!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 streamlit-echarts 和 streamlit-drawable-canvas，有一个更大的用例。几年前，我因为一个使用 TensorFlow.js
    的演示项目紧急的截止日期而处于压力之下。我想要在绘图上进行训练和推断，花了 5 天时间在 JavaScript 生态系统中创建这个演示项目，混合使用 Fabric.js
    在画布上绘图和 Echarts 显示结果。这非常困难，特别是因为这是我第一次真正涉足前端工程领域。后来 Streamlit 推出时，我想看看其他用户是否能在几小时内构建这个演示项目，如果
    Fabric.js 和 Echarts 组件已经存在的话，所以我把这个演示项目的代码提取出来做成了外部库，就这样！
- en: The thought process I have is always, what kind of new inputs and outputs can
    we bring to Streamlit? For example, can we bring real-time music input to Streamlit?
    Everybody in deep learning today talks about image and sound, so that would be
    a great component. And as an output, there are so many popular JavaScript libraries
    to display data in an interactive way that would be helpful for analysis. My goal
    is always, what kind of input and output that the web enables can I add to Streamlit?
    Hopefully web developers will want to build more things into Streamlit!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我的思考过程总是围绕着，我们可以为 Streamlit 带来什么样的新输入和输出？比如，我们能否把实时音乐输入带到 Streamlit？现在深度学习领域大家都在谈论图像和声音，所以这将是一个很棒的组件。而作为输出，现如今有很多流行的
    JavaScript 库可以以互动的方式展示数据，这对分析非常有帮助。我的目标始终是，能为 Streamlit 添加什么样的输入和输出，以利用 web 的能力？希望
    web 开发者会想要在 Streamlit 中构建更多的东西！
- en: (Tyler) You've probably seen a ton of Streamlit apps that use components of
    yours. I would imagine that you get really excited by some clever use of streamlit-lottie
    or streamlit-echarts. Are you just pumped when you see that sort of stuff? Do
    you have some specific apps that you really enjoy that are built off of some of
    the components that you have made?
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 你可能看过很多使用你组件的 Streamlit 应用。我想你一定会对一些巧妙使用 streamlit-lottie 或 streamlit-echarts
    的例子感到非常兴奋。看到这种东西时你是不是会特别激动？有没有一些你特别喜欢的应用，它们是基于你制作的一些组件搭建的？
- en: (Fanilo) Those are my first real open source projects, where I've put some effort
    into building and promoting them. I love that these tools are so flexible and
    can be used for so many use cases I would have never imagined, especially for
    streamlit-drawable-canvas. I saw there was a user who would display a side view
    of a soccer field in Streamlit, then he would draw the limits of the terrain inside
    the canvas over the field image, and then do some 3D remapping to transform it
    to a top view and be able to analyze the position of the players. I was like,
    wow, who does that?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: (Fanilo) 这些是我真正投入精力去构建和推广的开源项目。我喜欢这些工具的灵活性，它们可以用于许多我从未想过的使用场景，特别是对于 streamlit-drawable-canvas。我看到有一个用户在
    Streamlit 中展示了一个足球场的侧视图，然后他在画布上绘制了场地的边界，接着进行了一些 3D 重映射，把它转化为顶视图，以便分析球员的位置。我当时想，哇，谁会这么做呢？
- en: There are people using Streamlit for medical purposes. For example, they want
    to draw on every slice of a stack of images the position of some molecules so
    they can draw a kind of 3D version of this molecule. I've even seen an app from
    Jina AI where they built a Pokémon recognizer ([https://github.com/jina-ai/integration-streamlit-pokemon](https://github.com/jina-ai/integration-streamlit-pokemon))!
    So you would draw a Pokémon, and it would inject the drawing into a neural network
    to recognize the Pokémon that you wanted to draw. Never would've predicted that,
    you know? Yeah, it's amazing.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人正在将 Streamlit 用于医疗目的。例如，他们想在一堆图像的每一张切片上绘制一些分子的位置，从而绘制出这种分子的 3D 版本。我甚至看到过
    Jina AI 的一个应用，他们构建了一个 Pokémon 识别器（[https://github.com/jina-ai/integration-streamlit-pokemon](https://github.com/jina-ai/integration-streamlit-pokemon)）！所以你可以画一个
    Pokémon，它会将你的绘图输入到神经网络中，识别你想画的 Pokémon。你知道吗，我从未预测到这种应用，真是太神奇了。
- en: (Tyler) That sounds amazing. Do you have any tips for beginners getting started
    in Streamlit? Do you have anything that you wish you would have known, like when
    you first got started?
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 听起来真棒。对于刚接触 Streamlit 的初学者，你有什么建议吗？你有没有什么是你当初刚开始时希望知道的？
- en: (Fanilo) For me, it's consistent experimentation on new libraries. If there
    is a new Python library, I often just want to understand how it works. What happens
    if I change this argument, how does each parameter affect the output? So, I just
    bootstrap a new Streamlit script and import the library. And then for each parameter
    that you have, you can build a slider, a number input, a date input, and then
    you begin to build a demo of this unknown library, and Streamlit is only there
    to help you explore it to the fullest. Then you wonder how you can lay it out
    better, how to preserve some state for the app, and that's where you begin to
    dig deep into Streamlit. We talked a lot about the web ecosystem for Streamlit
    components. But I also think Streamlit is one of the best ways to showcase any
    Python library, anything from the Python ecosystem.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: （Fanilo）对我来说，就是不断地尝试新的库。如果有一个新的Python库，我常常想要了解它是如何工作的。如果我改变这个参数，会发生什么？每个参数是如何影响输出的？所以，我只需启动一个新的Streamlit脚本并导入这个库。然后，对于你所拥有的每个参数，你可以构建一个滑块、一个数字输入框、一个日期输入框，然后开始构建这个未知库的演示，而Streamlit只是帮助你尽可能深入地探索它。接着，你会开始思考如何更好地布局，如何为应用保留一些状态，而这正是你开始深入了解Streamlit的地方。我们曾讨论过Streamlit组件的Web生态系统。但我也认为Streamlit是展示任何Python库的最佳方式之一，涵盖了Python生态系统中的一切。
- en: 'Other than that, I''d say engage with the community online. The Streamlit community
    was really my first time interacting with an online community, with people who
    I didn''t know nor meet at all. I don''t remember the very first post or topic
    that I wrote, but I remember putting so much effort into writing it. I know it
    takes courage to ask questions in public, and I would say: dare to write a new
    post on the forum. If you''re struggling with Streamlit or with Python, it''s
    a good experience to try and post something in the community forums ([https://discuss.streamlit.io/](https://discuss.streamlit.io/))
    because people there are really nice; there are always people willing to help.
    I would encourage people to play with Streamlit and innovate, and then go on the
    forums and ask about what they can''t figure out. There are a lot of very hidden
    features that are only available inside the forums, which is why I encourage people
    to go on the forums.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，我还会建议大家在线参与社区互动。Streamlit社区实际上是我第一次与一个完全陌生的在线社区互动，我既不认识这些人，也没有见过他们。我不记得自己写的第一个帖子或话题是什么，但我记得我投入了大量的精力去写它。我知道在公开场合提问需要勇气，所以我会说：敢于在论坛上发一个新帖子。如果你在使用Streamlit或Python时遇到困难，尝试在社区论坛上发布一些问题是一次不错的体验([https://discuss.streamlit.io/](https://discuss.streamlit.io/))，因为那里的每个人都非常友好，总是有人愿意帮忙。我鼓励大家多玩Streamlit并进行创新，然后到论坛上提问那些无法解决的问题。论坛里有很多非常隐藏的功能，只有在论坛里才能找到，所以我鼓励大家去论坛看看。
- en: (Tyler) Yeah, definitely. It's a very interesting case of accumulated knowledge
    sitting in small places on the internet. It's terrifying to ask because you're
    always like, "Oh, what if they think I'm really dumb?" That's often the first
    concern, signaling to others that you know what you're doing. But everyone seems
    incredibly nice in the Streamlit community, which is, frankly, a big change on
    the internet.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）是的，绝对如此。这是一个非常有趣的例子，展示了互联网中积累的知识如何以小块的形式存在。提出问题是让人害怕的，因为你总会想，“如果他们觉得我真的很傻怎么办？”这是经常出现的首要担忧：给别人传递出你知道自己在做什么的信号。但Streamlit社区的人似乎都非常友好，说实话，这在互联网上是一个巨大的变化。
- en: (Fanilo) Yeah, maybe I'm so used to interacting with students that it helps
    me understand the fear of asking your very first online question to a "stranger."
    The worst thing that happened to one of my students is they wanted to clone a
    Git repo and the log showed that this folder already existed on their machine,
    so they could not clone over it. The answer is easy, in front of our very eyes
    written on the log, at least it's easy for us to interpret, right? But when it's
    your very first time coding, you have no idea what this log means, or that you
    should even check the log. So, I try to answer questions like I would answer my
    students coding for the first time and set this as a bar for our community, so
    everyone realizes we were all beginners at some point and that we should guide
    them into the gigantic Python/Streamlit world and not respond with "Go read the
    manual."
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: (Fanilo) 是的，也许我已经习惯了和学生互动，这帮助我理解了向“陌生人”提问的恐惧。发生在我学生身上的最糟糕的事情是，他们想要克隆一个 Git 仓库，日志显示该文件夹已经存在于他们的机器上，因此无法克隆。答案很简单，直接写在我们的眼前的日志上，至少我们容易理解，对吧？但是，当你第一次写代码时，你根本不知道这个日志意味着什么，或者你甚至应该检查日志。所以，我尽量像回答第一次写代码的学生那样回答问题，并以此作为我们社区的标准，让每个人都意识到我们曾经都是初学者，我们应该引导他们进入这个庞大的
    Python/Streamlit 世界，而不是回答“去读手册”。
- en: One year ago, I was not into online communities at all. I was also scared of
    doing this. And now here I am, a forum moderator and Streamlit creator. One year
    ago, I would never have dreamed of doing this. So, ask questions, people!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一年前，我完全不接触在线社区。我那时候也很害怕做这件事。现在，我是一个论坛版主和 Streamlit 的创作者。一年前，我根本没想过会做这件事。所以，大家尽管提问吧！
- en: (Tyler) Thank you so much for your time, Fanilo! For anyone reading who wants
    to learn more, you can find Fanilo's GitHub at [https://github.com/andfanilo](https://github.com/andfanilo)
    and his tutorial for building Streamlit components at [https://streamlit-components-tutorial.netlify.app/](https://streamlit-components-tutorial.netlify.app/).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 非常感谢你，Fanilo！对于任何想了解更多的人，可以在 [https://github.com/andfanilo](https://github.com/andfanilo)
    找到 Fanilo 的 GitHub，另外他的 Streamlit 组件教程也可以在 [https://streamlit-components-tutorial.netlify.app/](https://streamlit-components-tutorial.netlify.app/)
    查看。
- en: 'Interview #2 – Johannes Rieke'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '采访 #2 – Johannes Rieke'
- en: (Tyler) Hey, Johannes! Before we get started, do you want to give us a quick
    intro to yourself? Where have you worked in the past, what do you do, what is
    your background?
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 嗨，Johannes！在我们开始之前，你能给我们简单介绍一下自己吗？你过去在哪里工作过，你做什么工作，有什么背景？
- en: (Johannes) Hello! I'm from Germany, and currently living in Berlin. Well, as
    you know, I'm currently working at Streamlit and have been for the past 2 months
    but my background actually is in physics. So I did physics in my undergrad and
    I somehow got into neuroscience. I took a couple courses, did a few projects,
    and really loved it, especially the combination with computer science, doing simulations
    of nerve cells, the brain, all that kind of stuff. I got super interested in that.
    I decided to do my master's in computational neuroscience, which is kind of a
    combination of neuroscience on the one hand, but also machine learning on the
    other. In that program, I did a lot of stuff in all kinds of different areas of
    machine learning, like medical imaging, natural language processing, graph networks,
    all kinds of things. After I graduated from my master's program, I got into a
    couple open source projects. Well actually, I wanted to go traveling for a longer
    time but Covid came, and I had to get back to Germany earlier than I expected.
    And then I got into open source projects and started doing a lot with Streamlit,
    which is where I am today, working as a product engineer at Streamlit.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: (Johannes) 你好！我来自德国，现在住在柏林。嗯，正如你所知道的，我现在在 Streamlit 工作，已经工作了两个月，但我的背景实际上是在物理学方面。所以我本科时学的是物理，后来不知怎么的我进入了神经科学领域。我上了几门课，做了一些项目，真的很喜欢，尤其是与计算机科学结合，做神经细胞、脑部模拟等等这一类的事情。我对此产生了浓厚的兴趣。于是我决定攻读计算神经科学的硕士学位，这个学科一方面涉及神经科学，另一方面也涉及机器学习。在那个项目中，我做了很多与机器学习相关的工作，涉及各个领域，比如医学影像、自然语言处理、图神经网络等各种东西。硕士毕业后，我参与了一些开源项目。其实，我本来打算去旅行一段时间，但因为
    Covid 的原因，我比预期更早回到了德国。然后我开始参与开源项目，做了很多与 Streamlit 相关的工作，现在我就在 Streamlit 担任产品工程师。
- en: (Tyler) Very interesting! When did you get started with the Python ecosystem?
    Was that back in your physics days?
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 非常有趣！你是什么时候开始接触 Python 生态系统的？那是你学习物理的时候吗？
- en: (Johannes) Yeah, that was long ago, basically at the start of my bachelor's
    or the first year of my bachelor's. I had already done programming since high
    school. Started out with Java, and then in 2013, during my bachelor's, I got into
    Python and really fell in love with it. Because for the stuff I was doing, starting
    with computations and simulations, and later machine learning, Python is just
    awesome.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）是的，那是很久以前的事了，基本上是在我本科开始的时候，或者说是我本科的第一年。我从高中就开始编程了。最开始是用Java，然后在2013年，在我本科期间，我接触了Python，并且真的爱上了它。因为对于我所做的工作，从计算和模拟，到后来机器学习，Python简直太棒了。
- en: (Tyler) Did you do any machine learning in Java? I haven't seen a lot of ML
    engineers who work in Java or need to write anything in Java.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）你在Java中做过机器学习吗？我没见过很多机器学习工程师在Java中工作，或者需要写Java代码。
- en: (Johannes) I definitely worked in Python. Before I studied for my master's,
    I actually worked at a research lab in a gap year, and I did some computational
    stuff with C++ in that time but that was just horrible. If I had known about Python
    back then, I would have probably done everything in Python, and would have finished
    in a tenth of the time.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）我绝对是用Python做的。在我攻读硕士学位之前，我实际上在一个研究实验室工作过，利用一个空档年，做了一些计算相关的工作，用的是C++，但那真是太糟糕了。如果我当时知道Python，我可能会全部用Python做，时间也能缩短十倍。
- en: (Tyler) I know a lot of people that will do most of their work in Python and
    then if they have some strong need to make an algorithm much faster, they'll switch
    to a lower-level language, which is excessive in the best way. So at that point,
    you were really involved with Python and had been coding in Python for a while,
    and then you kind of started making these machine learning projects in Streamlit,
    like your Traingenerator app ([https://traingenerator.jrieke.com/](https://traingenerator.jrieke.com/)),
    which is a multi-purpose app to write machine learning code for you. What was
    your motivation for creating some of these? To give back to the community, showcase
    your work, create a personal portfolio, or something totally different?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）我知道很多人会主要使用Python来做大部分工作，如果他们有强烈的需求让某个算法变得更快，他们就会切换到低级语言，这种做法是最有效的。那时，你已经深度参与Python的工作，并且在Python中编程一段时间了，之后你开始使用Streamlit做这些机器学习项目，比如你的Traingenerator应用（[https://traingenerator.jrieke.com/](https://traingenerator.jrieke.com/)），这是一个多用途的应用，可以为你写机器学习代码。你创建这些应用的动机是什么？是为了回馈社区、展示你的作品、创建个人作品集，还是其他完全不同的原因？
- en: '![Figure 12.1 – Traingenerator app'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.1 – Traingenerator应用'
- en: '](img/B16864_12_1.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16864_12_1.jpg)'
- en: Figure 12.1 – Traingenerator app
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.1 – Traingenerator应用
- en: (Johannes) Yeah, it's a combination of most of those points. I started using
    Streamlit in spring last year after I graduated. I had gone traveling after graduation,
    but with Covid, I had to come back to Germany and had obviously a lot of free
    time. Some of my friends and former colleagues had started working on an open
    source project, which was in the area of Covid tracing, and so I joined them.
    And as part of that, we needed a small dashboard and a friend had told me about
    Streamlit, and I tried it out and thought it was super cool.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）是的，基本上是这些点的组合。我是在去年春天毕业后开始使用Streamlit的。毕业后我去旅行，但由于疫情，我不得不回到德国，而且显然有了很多空闲时间。我一些朋友和以前的同事开始做一个开源项目，涉及Covid追踪领域，所以我加入了他们。作为这个项目的一部分，我们需要一个小型的仪表盘，一个朋友告诉我Streamlit，我试了一下，觉得它非常酷。
- en: 'But that''s basically how I started using Streamlit for fun. The Traingenerator
    app that I built actually had more business or start-up intentions. I thought,
    let''s try my own project. And I realized I really liked the idea of training
    a machine learning model with a single line of code, like FastAI and PyTorch Lightning
    are doing. PyTorch Lightning is a library in the same area. I have worked a lot
    in machine learning, and often I''ve worked with very standard and basic models
    and just applied them to new datasets or new areas. One thing that has always
    annoyed me was that you''re taking a super standard approach, but you have to
    write all this code to implement a model, or even if you have an implemented model,
    you have to test it and tweak it; you have to transform your data to work with
    that model. And you have to write code to track your metrics and experiments,
    all that kind of stuff. So my idea was more: could I build something that simplifies
    this process, maybe also with the prospect of becoming a viable product, a viable
    business?'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 但基本上这就是我开始用Streamlit玩乐的方式。我开发的Traingenerator应用其实更具商业或初创意图。我想，试试自己的项目。然后我意识到，我真的很喜欢用一行代码训练机器学习模型的想法，就像FastAI和PyTorch
    Lightning所做的那样。PyTorch Lightning是一个同领域的库。我在机器学习领域工作了很久，通常我使用的是非常标准和基础的模型，并将它们应用到新的数据集或新领域。有一件事一直让我困扰，就是你采用了一个非常标准的方法，但你必须写大量代码来实现一个模型，或者即使你已经有了一个实现好的模型，你也必须测试并调整它；你需要转换数据以使其适应这个模型。你还得写代码来追踪你的指标和实验，所有这些内容。因此，我的想法是：能否建立一个简化这个过程的工具，也许还有可能成为一个可行的产品、可行的商业模式？
- en: I had worked on that for a while, and then the idea for Traingenerator came
    up when I talked about this project with a friend and how a Python library to
    simplify this process is great, but it reaches its limits as soon as you want
    to build something more sophisticated; obviously, because you cannot easily go
    in and tweak stuff. We thought that it works great for prototypes, but as soon
    as you want to get a model into production, you have to start all over again.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这方面工作了一段时间，然后当我和朋友谈论这个项目时，Traingenerator的想法就出现了。我们讨论了一个简化这个过程的Python库，这个库非常好，但当你想构建更复杂的东西时，它就会达到极限；显然，这是因为你不能轻松地修改里面的内容。我们认为它对于原型非常有用，但一旦你想把模型投入生产，就必须重新开始。
- en: And then we had this idea of building a web app where you could put in what
    you want to train and which framework you want to use, and then it generates the
    code for you. And you can either use that code to train models directly, or you
    can modify it as you like, which is what Traingenerator does.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们有了这样一个想法：建立一个网络应用，你可以输入你想要训练的内容以及你想使用的框架，然后它会为你生成代码。你可以直接使用这些代码来训练模型，或者根据需要修改它，这就是Traingenerator的功能。
- en: The other things I built after that, like the GitHub 2020 app ([http://gh2020.jrieke.com/](http://gh2020.jrieke.com/)),
    also the best-of-streamlit list, those were more like ideas just for fun, personal
    projects, certainly also for my portfolio.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 之后我做的其他项目，比如GitHub 2020应用（[http://gh2020.jrieke.com/](http://gh2020.jrieke.com/)），还有最佳Streamlit列表，那些更像是为了好玩而做的个人项目，当然也是为我的作品集增加内容。
- en: (Tyler) All of that is very interesting. I've used Traingenerator a few times
    and love it. At the time you developed it, which was before Streamlit Sharing
    was released, you deployed the app with Heroku. I'm curious if you would still
    do the same thing; what is your decision-making process for where to deploy your
    apps?
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）这一切都非常有趣。我用过Traingenerator好几次，非常喜欢。当时你开发它时，是在Streamlit Sharing发布之前，你使用Heroku来部署这个应用。我很好奇，如果现在再做，你还会选择同样的方式吗？你是怎么决定应用部署在哪里的？
- en: (Johannes) The reason back then was simply that I wanted to have a custom URL
    that was short; I didn't want it to be a long, non-understandable URL. But I've
    actually moved it to Streamlit Sharing now! It's just a way better developer experience
    than Heroku, because the app updates within a second of pushing to GitHub, without
    rebooting or anything like that. Sharing doesn't support custom URLs by default
    yet, but there's a hack on the forum, which I'm using for now. And I've already
    annoyed our product managers quite a bit with this feature request, so I hope
    it shouldn't take too long!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）当时的原因很简单，我想要一个简短的自定义网址；我不想要一个很长、难以理解的网址。但实际上，我现在已经把它迁移到了Streamlit
    Sharing！相比Heroku，这提供了更好的开发者体验，因为应用在推送到GitHub后，几乎在一秒钟内就会更新，而不需要重启或其他操作。Sharing目前默认不支持自定义网址，但论坛上有一个方法，我现在正在使用它。我已经因这个功能请求把我们的产品经理烦得不轻，所以希望不会太久就能实现！
- en: (Tyler) One other app you created was an app to dynamically create and share
    a user's GitHub stats called Year on GitHub ([http://gh2020.jrieke.com/](http://gh2020.jrieke.com/)).
    It became quite popular; I saw it all over the internet fairly consistently. Can
    you talk us through that story?
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）你做的另一个应用是一个动态生成并分享用户 GitHub 统计数据的应用，叫做 Year on GitHub（[http://gh2020.jrieke.com/](http://gh2020.jrieke.com/)）。它变得相当受欢迎；我几乎在互联网上每个地方都看到了它。你能给我们讲讲这个故事吗？
- en: '![Figure 12.2 – GitHub stats app'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.2 – GitHub 统计应用'
- en: '](img/B16864_12_2.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16864_12_2.jpg)'
- en: Figure 12.2 – GitHub stats app
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.2 – GitHub 统计应用
- en: (Johannes) For sure. So the reason or the idea behind it is actually a super
    random idea, I have no clue how I got it. There's no big story behind that. I
    had built Traingenerator already and it was incredibly well received. I did some
    more stuff with Streamlit, and then a couple days before Christmas, I got the
    idea to build an app where you just put in your GitHub username and it would show
    you some stats about what you've done on GitHub in 2020\. And then you can tweet
    it. So it's similar to Spotify Wrapped that they do at the end of every year.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）当然可以。所以背后的原因或者想法其实是一个非常随机的想法，我真不知道我是怎么想到的。背后没有什么大故事。我已经做了 Traingenerator，并且得到了极大的好评。我又做了一些
    Streamlit 相关的工作，然后在圣诞节前几天，我突然想到要做一个应用，只需要输入你的 GitHub 用户名，它就会显示你在 2020 年在 GitHub
    上的某些统计数据。然后你可以把它发到 Twitter 上。所以这跟 Spotify Wrapped 每年年底做的事情类似。
- en: A couple days after I had that idea, literally, a new Python library for GitHub
    came out actually for the GitHub API, which was super cool. And then I thought,
    obviously it doesn't make any sense to release something like this in March or
    April, which means I would need to build it in the next 2 weeks, and release it
    soon. So I worked on this all throughout my Christmas holidays and it was super,
    super cool.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在我想到这个点子后几天，实际上有一个新的 Python 库发布了，专门用于 GitHub API，这个库非常酷。然后我想，显然，在三月或四月发布这样的东西是没有任何意义的，这意味着我需要在接下来的两周内完成它，并且尽快发布。所以我在整个圣诞假期期间都在忙这个项目，感觉超级酷。
- en: I think there were four or five hundred tweets generated with it. The creators
    of the Julia programming language used it. It was really nice to see and also
    the Streamlit employees saw all of the tweets, so I think that probably brought
    me half of my job.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为通过这个应用生成了大约四五百条推文。Julia 编程语言的创建者也使用了它。看到这些反应真的很棒，而且 Streamlit 的员工们也看到了所有这些推文，我想这大概给我带来了我工作的半数机会。
- en: (Tyler) I have this theory that if you really want a job somewhere, you should
    make a Streamlit app for them that solves a problem of theirs or makes them notice
    you. And if you do that, you're just way more likely to actually get hired there.
    I've tried this a couple times and it usually turned into an offer down the line.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）我有一个理论，如果你真的想在某个地方找到工作，你应该为他们做一个 Streamlit 应用，解决他们的某个问题或者让他们注意到你。如果你这样做，你就更有可能真的被他们聘用。我已经试过几次，通常最后都会收到工作机会。
- en: (Johannes) It actually wasn't even intended at all. At that time, I hadn't even
    thought about applying to Streamlit, but it worked pretty well. In retrospect,
    I think they all loved it internally because it brought a huge spike to the Twitter
    numbers on the Streamlit account, and was super cool to see all the tweets about
    this new app.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）实际上当时根本没有计划这样做。那时我甚至没有想过要申请 Streamlit，但它运作得非常好。回想起来，我觉得他们内部肯定都喜欢这个应用，因为它带动了
    Streamlit 推特账号上的巨大流量，看到关于这个新应用的所有推文也非常酷。
- en: (Tyler) All of that makes sense to me! So after working on Streamlit for 8 or
    9 months, you decided this is where you want to work, applied to a job there,
    and then got the job. First of all, congratulations. Second of all, what about
    the library makes you think that it's going to be like a big thing in the data
    science and machine learning community going forward? I have enough conviction
    about Streamlit to write a book on it so I clearly agree with you, but can you
    talk a bit about your conviction for the company in this space?
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）这一切我都能理解！所以在 Streamlit 工作了 8 或 9 个月后，你决定这是你想工作的地方，申请了那里的工作，然后拿到了这份工作。首先，祝贺你。其次，是什么让你觉得这个库将会在未来成为数据科学和机器学习社区中的重要工具？我对
    Streamlit 有足够的信心甚至想为它写一本书，所以我显然是同意你的，但你能谈谈你对这家公司在这个领域的信心吗？
- en: (Johannes) So in my eyes, what is great about Streamlit is the developer experience
    and the simplicity of it. In my current job as a product engineer, I also look
    at lots of other web frameworks and solutions in that space, and I have to play
    around with them. And there are certainly other tools that have some cool functions
    that allow you to do more complex things than Streamlit because Streamlit is fairly
    young, but in terms of developer experience, how simple it is to start something
    and how fun it is to make apps, none of these tools even comes close to Streamlit.
    And I think that there are lots of pieces playing into that.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）所以在我看来，Streamlit 的优势在于开发者体验和它的简单性。在我当前作为产品工程师的工作中，我也会看看其他许多 Web 框架和解决方案，并且需要尝试它们。虽然确实有其他工具具有一些很酷的功能，可以做一些比
    Streamlit 更复杂的事情，因为 Streamlit 还比较年轻，但就开发者体验而言，开始一个项目有多简单，制作应用有多有趣，这些工具都远不及 Streamlit。我认为有很多因素在其中起作用。
- en: On the simplicity aspect, you can just whip up an app in basically 5 minutes
    with a few lines of code. And it's just your normal Python script that you're
    writing anyway; you don't have to learn about other classes or anything about
    frontend development. It's very intuitive for newcomers.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在简单性方面，你基本上只需 5 分钟，几行代码就能快速搭建一个应用。而且这只是你通常编写的 Python 脚本；你不需要学习其他类或前端开发的任何内容。对新手来说，它非常直观。
- en: Then there's the live coding model of Streamlit, which allows you to code your
    app and Streamlit will rerun your app at the same time. And it's very intelligent
    about what it reruns, especially if you use the cache. I think that is what makes
    Streamlit so fun and addictive to work with, because you're getting this super
    instant feedback by instantly seeing the result.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是 Streamlit 的实时编码模式，它允许你编写应用，Streamlit 会同时重新运行你的应用，并且非常智能地决定需要重新运行什么，尤其是当你使用缓存时。我认为这就是
    Streamlit 为什么这么有趣和让人上瘾的原因，因为你可以通过即时看到结果来获得超快速的反馈。
- en: The other aspect is the community; the Streamlit community is just amazing.
    I mean, we have so many developers now who really like working with Streamlit.
    The forums are such a cool place to exchange ideas and to get tips, and there
    are so many people who are super dedicated, who are just answering questions in
    their free time for hours each week.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个方面是社区；Streamlit 社区简直太棒了。我的意思是，现在有很多开发者真的很喜欢使用 Streamlit。论坛是一个非常酷的地方，可以交流想法、获取建议，而且有很多人非常投入，愿意在空闲时间每周花上几个小时回答问题。
- en: We actually have like three, four, or five people within Streamlit who are working
    full time on the forum interacting with developers, sending swag to people who
    build Streamlit apps, which I think for a company that just has about 25 employees
    is very unique.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，我们在 Streamlit 内部有三到五个人全职负责论坛，和开发者互动，给那些构建 Streamlit 应用的人送纪念品，这对于一个只有大约 25
    名员工的公司来说是非常独特的。
- en: (Tyler) I think of that dynamic a lot. When I started out, it felt like Streamlit
    was just a really good tool. And then I started playing around with it more. And
    then I realized that it might be closer to a toy, where I just have this constant
    iteration and feedback loop. And whenever you have something that is both a tool
    and a toy, it has worked out pretty well in the end.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）我经常想到这种动态。当我开始时，Streamlit 只感觉是一个非常好的工具。然后我开始更多地玩它。后来我意识到，它可能更像一个玩具，在其中我不断地进行迭代和反馈。每当你有一个既是工具又是玩具的东西，它最终都会非常成功。
- en: (Johannes) Yeah, definitely. I think one big aspect of why Streamlit is cool
    and why I think it's going to become even cooler at some point in the future is
    that there's a lot of parts to it, too. It's not just the open source library
    but it's also Streamlit Sharing, which if you want to deploy your model is super
    nice and easy to use. It's also, as I said, the forums where if you have a problem,
    you can certainly get help there. I think in the future, there will be lots more
    parts coming into the equation.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）是的，绝对有。我认为 Streamlit 很酷的一个重要方面，以及为什么我认为它将来会变得更酷，是它有很多不同的部分。它不仅仅是一个开源库，还是
    Streamlit Sharing，如果你想部署你的模型，它非常好用且简便。此外，正如我所说，论坛也是其中一部分，如果你遇到问题，肯定能在那里得到帮助。我认为未来还会有更多的部分加入。
- en: (Tyler) You're about 9 months into your Streamlit developing experience. Do
    you have any tips for beginners getting started? Things that you wish you would
    have known?
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）你大概已经有 9 个月的 Streamlit 开发经验了。你有什么针对初学者的建议吗？有没有一些你希望当时知道的事情？
- en: (Johannes) I actually think that there are not so many tips you can give to
    beginners, other than just try it out. Because that's the cool thing about Streamlit;
    if you start with it, you can basically get how it works after around 10 minutes.
    And it's just super easy to start. I also have a couple friends who I recommended
    Streamlit to and I didn't have to do a lot of convincing. I just told them about
    it, and a day later, they came back and knew how to use it. The only tip is to
    sign up on the forums, and if you have any questions, just ask or reach out to
    us in any way. There are lots of helpful people on the forums. There are, as I
    said, lots of people within Streamlit whose job is to interact with developers.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: （Johannes）我其实认为，对于初学者来说，没有太多可以给的建议，除了就是试试看。这就是 Streamlit 很酷的地方；如果你开始使用它，基本上
    10 分钟后你就能了解它是怎么工作的。而且开始使用起来非常简单。我也有几个朋友，我推荐了 Streamlit 给他们，结果我并不需要做很多说服工作。我只是告诉他们这个工具，第二天他们就回来说已经知道怎么用了。唯一的建议就是注册论坛，如果有任何问题，直接问或者通过任何方式联系我们。论坛上有很多乐于助人的人。正如我所说，在
    Streamlit 内部有很多人的工作就是和开发者互动。
- en: The more complicated stuff, like cache and state, is not easy to get for beginners
    and needs some explanation, which we are also working a lot on right now.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 更复杂的内容，比如缓存和状态，对于初学者来说并不容易理解，需要一些解释，我们现在也在这一方面做了很多工作。
- en: (Tyler) Thanks, Johannes, for coming and talking to us; I'm sure people got
    a lot out of this. Johannes's personal site can be found at [https://www.jrieke.com/](https://www.jrieke.com/).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）感谢 Johannes 来和我们聊一聊，我相信大家从中受益匪浅。Johannes 的个人网站可以在 [https://www.jrieke.com/](https://www.jrieke.com/)
    找到。
- en: 'Interview #3 – Adrien Treuille'
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '采访 #3 – Adrien Treuille'
- en: (Tyler) Hey, Adrien! Thanks for being willing to be interviewed for this. Before
    we really get started, do you want to tell me a little bit about yourself? I know
    you were a professor at Carnegie Mellon, and before that you were working with
    protein folding. You've also worked on self-driving cars, and now are the founder
    of Streamlit. So how do you introduce yourself?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）嘿，Adrien！感谢你愿意接受采访。在我们真正开始之前，你愿意先简要介绍一下自己吗？我知道你曾是卡内基梅隆大学的教授，在那之前你在做蛋白质折叠的研究。你也曾参与过自动驾驶汽车的研究，现在是
    Streamlit 的创始人。那么你怎么介绍自己呢？
- en: (Adrien) First of all, when I was a professor, this whole Python data stack
    was kind of new. NumPy was certainly pre 1.0, and there was kind of this revelation
    that there was this amazing library called NumPy, all of a sudden, that made Python
    as good as MATLAB, and then after a while, way was better than MATLAB. That was
    the beginning of Python becoming the dominant language of numerical computation,
    and then ultimately machine learning. Python was a scripting language, a sysadmin
    language, or maybe a CS 101 language. All of a sudden it had this massive, new,
    super important industrial application. It started off with a bunch of nerds and
    professors using it in research, and they found that it was actually very useful,
    and much easier than writing our own machine learning code or numerical code in
    C.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: （Adrien）首先，当我还是教授时，整个 Python 数据栈算是比较新的东西。NumPy 甚至在 1.0 之前就已经存在，而且突然间有一个了不起的库叫
    NumPy，让 Python 一下子和 MATLAB 比肩，后来，Python 甚至比 MATLAB 更强大。这是 Python 开始成为数值计算主流语言的起点，最终也成为了机器学习的主流语言。Python
    曾经是一个脚本语言，是一个系统管理员语言，或者说是一个计算机科学 101 级别的语言。突然间，它拥有了一个庞大的、新的、极其重要的工业应用。从最初一群极客和教授在研究中使用它开始，他们发现它真的非常有用，而且比用
    C 写自己的机器学习代码或者数值计算代码要容易得多。
- en: The other thing I was doing was creating computer games that allowed people
    to develop scientific problems, and eventually, millions of people played them.
    Fast forward a bit, and I went to work at Google. I had a really interesting,
    cool career at the intersection of tech and machine learning.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我做的另一件事是创造了可以让人们开发科学问题的计算机游戏，最终，数百万人玩过这些游戏。稍微快进一下，我去了 Google 工作。在技术和机器学习的交汇点上，我有了一个非常有趣、酷的职业生涯。
- en: 'Then I started Streamlit. We''re building tools that are grounded in that numerical
    Python stack we were using 15 years ago (before it was cool). The other part of
    Streamlit is building a community. I think that aspect of Streamlit is very special.
    These two themes from my research have come full circle: the numerical Python
    world and the building of online communities.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我开始了 Streamlit。我们正在构建的工具基于 15 年前我们使用的数值 Python 栈（那时还不流行）。Streamlit 的另一个部分是构建一个社区。我认为这一方面非常特别。我的研究中这两个主题已经完美结合：数值
    Python 世界和在线社区的构建。
- en: (Tyler) In the original documentation from October 2019 and the Medium posts
    thereafter, Streamlit was originally pitched as a tool for machine learning engineers.
    Now, you see all different types of people using it. I'm not an ML engineer, but
    I use it all the time. How has the idea of Streamlit changed over time?
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）在 2019 年 10 月的原始文档和随后的 Medium 文章中，Streamlit 最初被推介为机器学习工程师的工具。现在，你可以看到各种各样的人都在使用它。我不是一个机器学习工程师，但我一直在使用它。Streamlit
    的想法随着时间的推移是如何变化的？
- en: (Adrien) At a meta level, I'll say very genuinely that it's very cool for you
    to observe that. For us inside Streamlit, there are little, subtle shifts in how
    we talk about our targer user profile. But it doesn't necessarily feel like anyone
    else is paying attention to these subtle shifts. It's kind of cool to see someone
    else notice it!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: （Adrien）从一个更宏观的角度来看，我很真诚地说，很酷的是你能够观察到这一点。对于我们 Streamlit 内部的人来说，我们在谈论目标用户群体时会有一些微妙的变化。但这并不一定意味着其他人注意到了这些细微的变化。看到别人能注意到这一点真的很酷！
- en: There are a couple of ways to answer this. Streamlit is more fundamental to
    Python programming than it is to machine learning or data science. It fulfills
    a need in Python programming that didn't exist in any other tool. You could write
    command-line scripts. There are also Python GUI frameworks, but those are quite
    intricate to use because GUI app development is a totally different style of programming
    than data work. You could go into a Jupyter notebook, but then it was, again,
    a totally different style of programming.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方式可以回答这个问题。Streamlit 对 Python 编程的意义，比对机器学习或数据科学的意义更为根本。它满足了 Python 编程中，其他工具无法提供的需求。你可以编写命令行脚本，也有
    Python 的 GUI 框架，但这些框架的使用相当复杂，因为 GUI 应用开发与数据工作是完全不同的编程风格。你也可以进入 Jupyter notebook，但那同样是另一种完全不同的编程风格。
- en: Streamlit is a mashup of GUI programming and scripting. To me, that's a very
    useful thing. It actually transcends machine learning, as such. So part of the
    potential for Streamlit, for example, is to play a role in CS 101\. One of the
    cool things about Streamlit is that there's this idea of the technology, and then
    there's the idea of how we are applying that to different problems and spaces.
    How do we prioritize applications for the community's benefit and also to create
    a sustainable company?
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 是图形用户界面编程和脚本编程的融合。对我来说，这是一个非常有用的功能。它实际上超越了机器学习。因此，Streamlit 的潜力之一，举个例子，就是它可以在
    CS 101 课程中发挥作用。Streamlit 的一个酷点是，它不仅有技术本身的概念，还有如何将它应用于不同问题和领域的思考。我们如何优先考虑应用，以便既能造福社区，又能创造一个可持续的公司？
- en: (Tyler) I want to talk a bit more about the community you just mentioned, because
    you have built a ton of online games before, like FoldIt ([https://fold.it/](https://fold.it/)),
    which has a strong crowdsourcing function to it. There are two sides to Streamlit
    in my mind. One side is very community-focused. It's an open source language on
    top of which anyone can build, and there are Streamlit components that can be
    made and added easily. The other side is the company Streamlit, which obviously
    exists to eventually turn a profit. How do you manage those two sides?
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）我想再谈谈你刚才提到的社区，因为你之前做过很多在线游戏，比如 FoldIt ([https://fold.it/](https://fold.it/))，它有很强的众包功能。在我看来，Streamlit
    有两个方面。一方面非常注重社区，它是一个开源语言，任何人都可以在其基础上构建，而且可以很容易地制作并添加 Streamlit 组件。另一方面则是 Streamlit
    公司，显然它的存在是为了最终实现盈利。你是如何管理这两方面的？
- en: '(Adrien) I don''t feel like we have to choose. When two things are aligned
    in their interests, everybody wins. From a business model standpoint, we are trying
    to put this software out into the world which has lots of use cases in data science.
    For example, I wrote a computer game for my son''s class in Streamlit to help
    them understand multiplication. It also has a bunch of industrial applications.
    These two groups are aligned: the more people who are in the community and are
    contributing to Streamlit, the more our addressable user base grows for those
    industrial applications.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: （Adrien）我不觉得我们必须选择。当两者的利益相一致时，大家都能受益。从商业模式的角度来看，我们正在努力将这款软件推向世界，它在数据科学中有很多应用场景。例如，我为我儿子的班级编写了一个计算机游戏，使用
    Streamlit 帮助他们理解乘法。它也有很多工业应用。这两个群体是相互契合的：社区中的人越多，越多的人为 Streamlit 做出贡献，我们的可服务用户群体也就越大，尤其是对于那些工业应用。
- en: It's a funnel. Data scientists funnel into Streamlit's open source community,
    which then flows into our customer base. We try to grow at every stage of the
    funnel, which is good both for the business model and the community.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个漏斗。数据科学家流入 Streamlit 的开源社区，然后再流入我们的客户基础。我们努力在漏斗的每个阶段都实现增长，这对商业模式和社区都是有利的。
- en: (Tyler) What did you learn from your decade building online crowdsource games
    that you've brought into the Streamlit world? Because the community feels like
    a meta-game where people are trying to create cool Streamlit apps for other people.
    How do you nurture that? Is that intentional, or just a function of it being a
    cool tool?
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）你从自己十年构建在线众包游戏的经历中学到了什么，并且带到了 Streamlit 的世界中？因为社区感觉像是一个元游戏，人们在尝试为他人创建酷炫的
    Streamlit 应用。你是如何培育这种氛围的？这是有意为之，还是仅仅因为它是一个酷工具的结果？
- en: (Adrien) One interesting similarity between FoldIt and Streamlit is that they're
    both designed to be toy-like. A "toy" – which is a technical term in game design
    – is a game without rules that you just want to play with. There's no instruction
    manual for a GI Joe. It's just something you play by making it do stuff. You can
    add rules too, but you don't have to.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: （Adrien）FoldIt 和 Streamlit 之间有一个有趣的相似点，那就是它们都被设计成像玩具一样。所谓“玩具”——这是游戏设计中的一个技术术语——指的是没有规则的游戏，你只想和它一起玩。GI
    Joe 玩具就没有使用手册，它只是一个通过让它做事情来玩的东西。你也可以为它加上规则，但并不是必须的。
- en: 'Here''s another game-like aspect of Streamlit: people building Streamlit apps
    and put them online to communicate ideas, and show off work, and gain praise.
    That helps others learn about Streamlit who then build more apps and further grow
    the community. We realized, "Wow, this cycle of publishing and praise is an amazing
    growth vector for us." We have made some effort to support the people who are
    putting their work out there, but I don''t think we''ve really explored most of
    what''s possible with this aspect of Streamlit. We just haven''t had time to execute
    on it, because there are so many important things to do.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这里还有一个 Streamlit 游戏化的方面：人们构建 Streamlit 应用并将其上线，来传达思想、展示工作成果、获得赞赏。这有助于其他人了解 Streamlit，然后他们也会构建更多应用，进一步壮大社区。我们意识到，“哇，发布和赞赏的循环是我们一个了不起的增长动力。”我们确实做了一些努力来支持那些展示自己作品的人，但我认为我们还没有真正探索
    Streamlit 这一方面的所有可能性。我们只是没有时间去执行，因为有太多重要的事情要做。
- en: (Tyler) If we're talking about company prioritization, how do you think about
    the priority of the company right now? You talked about the funnel, so then there
    are three main sections, the data scientists, the data scientists who use Streamlit,
    and then the data scientists who use Streamlit inside their company. Where's the
    focus of Streamlit at the moment?
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）如果我们在谈论公司优先级问题，你如何看待当前公司的优先事项？你提到了漏斗，那么就有三个主要部分，数据科学家、使用 Streamlit 的数据科学家，以及在公司内部使用
    Streamlit 的数据科学家。当前 Streamlit 的焦点在哪里？
- en: (Adrien) There is actually one more stage, which is how many people are viewing
    the apps created inside those companies, because our present pricing plan is based
    on viewership, not the number of developers. It's some number of dollars per viewer
    per month.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: （Adrien）实际上，还有一个阶段，那就是有多少人正在观看那些公司内部创建的应用，因为我们目前的定价计划是基于观众人数，而不是开发者的数量。我们按每个观众每月收费。
- en: So the way we prioritize focuses on another level of that pipeline.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们的优先级聚焦在这个管道的另一个层面上。
- en: We called the first year after launch "the year of the developer," and it was
    about growing the open-source community. Going through exponential growth lead
    to discontinuous changes in operations. We weren't prepared for that. We put the
    entire engineering team on rotation answering questions in the community forums.
    They gave super well-informed answers, but the engineering team literally ground
    to a halt for three months. Then we realized, oh shoot, we can't hire engineers
    to solve our community problems.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们把发布后的第一年称为“开发者之年”，那时我们的重点是发展开源社区。经历了指数级增长后，运营发生了不连续的变化。我们没有为此做好准备。我们把整个工程团队轮流安排去回答社区论坛中的问题。他们给出的答案非常专业，但整个工程团队在三个月内几乎停滞不前。然后我们意识到，糟糕，我们不能通过雇佣工程师来解决社区问题。
- en: The second year, which we're in now, is "the year of the customer." This is
    all about building that initial monetization engine and creating a self-serve
    mechanism so that you can basically be a Streamlit user, click a button, and have
    Streamlit for Teams. We're not there yet, but all the pieces are coming together!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是第二年，我们所处的这一年是“客户之年”。这一年主要是围绕建立初步的盈利引擎，并创建一个自助机制，让用户可以轻松点击按钮，使用Streamlit for
    Teams。我们还没有完全实现这一点，但各个环节正在逐步到位！
- en: (Tyler) A lot of people who are going to be reading this are going to be just
    starting out with their Python development, or they might be in the beginner/intermediate
    stage of learning Python and data science. They have quite a few other options
    to choose from, from Django or Flask to no-code tools, to other dashboarding frameworks.
    They could even switch over to R's Shiny app development. What is your pithy pitch
    to new users? Why Streamlit?
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 很多读这篇文章的人可能刚刚开始接触Python开发，或者处于Python和数据科学的初学者/中级阶段。他们有很多选择可以考虑，从Django或Flask，到无代码工具，再到其他仪表盘框架。他们甚至可以转向R的Shiny应用开发。你有什么简洁的推荐给新用户？为什么选择Streamlit？
- en: (Adrien) I'd say you should just try it. There's a lot of sentiment on Twitter
    around how "cool" Streamlit is. I think it is powerful and cool. Streamlit is
    grounded in this idea of scripting, which is a very natural and simple paradigm
    for thinking about dataflow. I don't think anyone else really does that. It should
    feel kind of magical; coding isn't actually magic, but it's very fun. Super highly
    educated and incredibly well-paid people make apps just because it's fun, so we
    enjoy coming at it with that perspective. You should feel like you're getting
    more back than you spent typing each function call, and if that's the kind of
    emotional thing you get, then it's exciting to go through this.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: (Adrien) 我会说，你应该直接尝试一下。Twitter上有很多关于Streamlit有多“酷”的讨论。我认为Streamlit既强大又酷。Streamlit基于脚本编程的理念，这是一种非常自然且简洁的数据流思维方式。我觉得其他人并没有真正做到这一点。它应该让你觉得有点神奇；编程本身并不是魔法，但它确实非常有趣。很多受过高等教育、薪水极高的人做应用只是因为这很有趣，所以我们喜欢用这种视角来接触它。如果你能感觉到每写一个函数调用都能得到比花费更多的回报，那么经历这个过程会非常激动人心。
- en: (Tyler) In my view, I started because it's easy, and then stayed because it's
    the best, you know?
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 对我来说，我一开始选择它是因为它简单，后来坚持使用是因为它是最好的，你懂吗？
- en: (Adrien) I think something that's true (and maybe I'm wrong about this) is that
    there's a lot in this visualization/dashboarding app/development space, where
    the more you know how they work and the deeper you get into them, the more disappointed
    you are. The demos you see look customizable and seem great, but when you actually
    go through the experience of building or trying to replicate the demo, it's very,
    very hard to actually achieve this thing that they're promising on their websites.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: (Adrien) 我认为有一个事实是（也许我错了），在这个可视化/仪表盘应用/开发领域，越是深入了解它们的工作原理，越是会感到失望。你看到的演示看起来非常可定制，似乎很棒，但当你真正体验构建或尝试复制演示时，实际上很难实现它们在网站上承诺的功能。
- en: That's just not true of Streamlit. When you look at all of the demo apps in
    the gallery ([https://streamlit.io/gallery](https://streamlit.io/gallery)), they're
    really quite accessible. We're not trying to compete in the "Let's build a massive,
    perfect app" space.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于Streamlit来说根本不是问题。当你查看画廊中的所有演示应用时（[https://streamlit.io/gallery](https://streamlit.io/gallery)），它们其实非常易于使用。我们并不打算去竞争“打造一个庞大且完美的应用”这一领域。
- en: (Tyler) Thanks for coming and talking to us! The main thing that we should point
    to is obviously the central Streamlit website ([https://streamlit.io/](https://streamlit.io/)).
    You can find Adrien's writing at [https://medium.com/@adrien.g.treuille](https://medium.com/@adrien.g.treuille)
    and you can find him on Twitter at [https://twitter.com/myelbows](https://twitter.com/myelbows).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 感谢你过来和我们交流！我们应该指向的一个主要资源显然是Streamlit的官方网站（[https://streamlit.io/](https://streamlit.io/)）。你可以在[https://medium.com/@adrien.g.treuille](https://medium.com/@adrien.g.treuille)找到Adrien的文章，或者在Twitter上通过[https://twitter.com/myelbows](https://twitter.com/myelbows)联系他。
- en: 'Interview #4 – Charly Wargnier'
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '采访 #4 – Charly Wargnier'
- en: (Tyler) Hey, Charly! Thanks so much for coming and talking to us. To start off,
    can you introduce yourself to the readers?
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 嗨，Charly！非常感谢你过来跟我们分享。首先，你能向读者介绍一下自己吗？
- en: (Charly) Hey there! I'm French and have been living in the UK for about 13 years
    now. And I've been doing mainly digital marketing, business intelligence, and
    **SEO** (**Search Engine Optimization**) consulting here in the UK. In the last
    few years, I have pivoted toward data engineering and data science. Also, I've
    worked both in-house and on the agency side, and for large companies in retail
    fashion and at a large range of small businesses as well. But since 2014, it has
    mainly been enterprises, and the time between 2008 and 2014 was with small businesses.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 嗨！我来自法国，已经在英国生活了大约 13 年。我主要从事数字营销、商业智能和**SEO**（**搜索引擎优化**）咨询工作。最近几年，我转向了数据工程和数据科学。此外，我曾在公司内部和代理机构工作过，也曾为零售时尚的大公司和许多小型企业工作过。但自
    2014 年以来，我的工作主要集中在企业级客户，而 2008 到 2014 年间则主要是为小型企业服务。
- en: (Tyler) Let's back up for a half-second; what is it like working in SEO? What
    does that actually look like?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 我们稍微回顾一下，做 SEO 是什么感觉？它实际是什么样的工作？
- en: (Charly) My core skill set is mainly technical SEO. SEO is a vast territory,
    as you may imagine, and my core skill is with anything regarding the technicalities
    of a website, the way it has been coded, or the way it is being crawled or being
    passed by web crawlers. To make sure that Google and Bing can actually crawl these
    large websites accurately. Obviously, there's a lot of things involved in that,
    like making sure that paid search is in synergy with SEO.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 我的核心技能主要是技术 SEO。SEO 是一个广阔的领域，正如你可以想象的那样，而我的核心技能是与网站的技术相关的任何事情，比如网站的编码方式，或者它是如何被爬虫抓取和传递的。确保
    Google 和 Bing 能准确地抓取这些大型网站，显然，这涉及很多方面，比如确保付费搜索与 SEO 协同工作。
- en: It's a very versatile kind of job where you have to liaise with not only the
    SEO people, but also the people developing the website, and even the PR, content,
    and product people as well. In terms of interactions, that's one of the most versatile
    jobs around.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一份非常多元化的工作，你不仅需要与 SEO 人员合作，还需要与开发网站的人员，甚至公关、内容和产品团队合作。从互动的角度来看，这可以说是最具多样性的工作之一。
- en: (Tyler) Got it, that all makes sense. Another thing we haven't mentioned yet
    is Streamlit. You use Streamlit quite a bit and are a prolific creator. What is
    it about Streamlit that makes it so valuable of a tool for you?
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 明白了，一切都说得通。还有一个我们还没提到的事情是 Streamlit。你很常用 Streamlit，而且是一个多产的创作者。Streamlit
    对你来说有什么特别有价值的地方？
- en: (Charly) I used to work a lot providing some Python scripts to people via Google
    Colab or Jupyter Notebook. And since I've been using Streamlit, I no longer have
    to send over scripts; I can just literally send those apps! And I can show them
    some SEO apps or functionality that they wouldn't have been able to use unless
    they were a developer. It really widens the scope and the user adoption. And in
    the few companies I've worked with in the last few months, I've been able to bring
    way more people to start using the SEO apps that I have been designing. There
    has been a big, big shift.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 我过去经常通过 Google Colab 或 Jupyter Notebook 提供一些 Python 脚本给别人。而自从使用 Streamlit
    之后，我不再需要发送脚本，我可以直接发送这些应用程序！我可以展示一些 SEO 应用或功能，用户如果不是开发人员，可能根本无法使用这些功能。它真的拓宽了应用范围和用户接受度。在过去几个月我与几家公司合作时，我能够让更多的人开始使用我设计的
    SEO 应用程序。真是发生了很大的变化。
- en: (Tyler) How interesting! The other option for you in Python is to make Flask
    for Django applications; did you ever think about doing something like that for
    SEO apps?
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 真有趣！你在 Python 中的另一个选择是为 Django 应用程序做 Flask；你曾考虑过为 SEO 应用做类似的事情吗？
- en: (Charly) Yeah, I did develop some Flask applications back in the day, but it
    was quite cumbersome for me to develop that because it requires a lot of skills
    in HTML or JavaScript. But with Streamlit, it has really enabled me to create
    something very quickly and to share that with people. So no Flask, and I have
    tried a bit of Django but the learning curve is actually quite steep. It usually
    takes me ages to design anything in Django. So yeah, there's literally no comparison;
    I've left Flask and Django aside for now and I'm really prioritizing Streamlit.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 是的，我曾经开发过一些 Flask 应用，但那时候对我来说开发起来比较繁琐，因为它需要很多 HTML 或 JavaScript 的技能。但使用
    Streamlit 后，它让我能够非常快速地创建一些东西并与他人分享。所以不再用 Flask，我也试过 Django，但它的学习曲线相当陡峭。通常设计一个
    Django 应用会花我很长时间。所以，确实没有可比性；我暂时放下了 Flask 和 Django，现在真的把精力集中在 Streamlit 上。
- en: (Tyler) Totally agree, I've made a bunch of different data science projects
    pre-Streamlit and my two options always were to put it in a Jupyter notebook or
    blog post or make a fully fledged app in Flask. The issue for me used to be that
    the difference in time and effort to make an entire app, before Streamlit, was
    way too high. It would double the time on the project! And with Streamlit, it
    is just a little bit more difficult than making a Jupyter notebook but the output
    is so much better.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 完全同意，在Streamlit出现之前，我做了很多不同的数据科学项目，我的选择总是把它放在Jupyter notebook或者博客文章中，或者用Flask做一个完整的应用。对我来说，问题在于，在Streamlit出现之前，做一个完整的应用所需的时间和精力差异太大了。那几乎会把项目的时间翻倍！而有了Streamlit，制作应用只是比制作Jupyter
    notebook稍微困难一点，但输出效果好得多。
- en: (Charly) I'm trying to learn React at the moment, so I can make something a
    bit more integrated and polished and use Streamlit as an MVP. So I have used some
    other web frameworks, but you're right. With regards to quickness, nothing to
    this day beats Streamlit. I think the closest one is Panel ([https://panel.holoviz.org/](https://panel.holoviz.org/)),
    which is flexible and pretty straightforward, but I think that the big difference
    between Streamlit and Panel is the community. The Streamlit community has been
    so welcoming, including yourself and other people too. Even a few years ago, I
    was barely coding anything in Python and Streamlit is really the application that
    I've embraced. I think the community is really key.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 现在我在尝试学习React，希望能做出一些更集成、更精致的东西，同时用Streamlit作为最小可行产品（MVP）。我也用过其他一些Web框架，但你说得对，就快速性而言，到目前为止没有什么能比得上Streamlit。我认为最接近的是Panel（[https://panel.holoviz.org/](https://panel.holoviz.org/)），它既灵活又简单易用，但我觉得Streamlit和Panel之间的最大区别就是社区。Streamlit社区非常热情，包括你在内的许多人。即使是在几年前，我几乎没有用Python编程，而Streamlit真的是我接纳的应用。我认为社区真的是关键。
- en: (Tyler) Speaking of community, you have been really involved with both the SEO
    and the Streamlit communities. You've created apps like StreamEA ([https://www.charlywargnier.com/post/streamea-entity-analyzer](https://www.charlywargnier.com/post/streamea-entity-analyzer)),
    which extracts and analyzes entities from web pages; how do you come up with apps
    like these? Are you solving your own problems and then turning that into an app,
    or taking older Python scripts from older clients and turning those into apps?
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 说到社区，你一直活跃于SEO和Streamlit社区。你创建了像StreamEA这样的应用（[https://www.charlywargnier.com/post/streamea-entity-analyzer](https://www.charlywargnier.com/post/streamea-entity-analyzer)），它能够从网页中提取和分析实体；你是怎么想到做这样的应用的呢？是先解决自己的问题，然后将其转化为应用，还是把以前为旧客户写的Python脚本转化成应用？
- en: (Charly) So it's really a mix of different things. You've quoted quite a few
    there. First of all, I'm solving issues I'm having myself, as I've been doing
    SEO for years so I've regularly bumped into SEO issues and the idea is to solve
    these by creating an app so others can use the solution as well. I've always been
    fascinated by web applications; I remember as far back as 2013 where I had a bit
    of a geeky dream to develop web apps! The other thing that you're right about
    is that I have a lot of Jupyter notebooks and scripts that I have been using for
    years, and speaking of user adoption, I wanted to make sure anyone could try them
    out.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 所以这真的是不同因素的结合。你提到了一些原因。首先，我是在解决我自己遇到的问题，因为我做SEO已经多年了，经常会碰到SEO方面的问题，想到的解决方案就是通过创建应用，大家也能使用这个解决方法。我一直对Web应用很感兴趣；我记得早在2013年时，我就有一个小小的“极客梦想”——开发Web应用！另外，你说得对，我有很多年一直在用的Jupyter
    notebook和脚本，至于用户采用方面，我希望确保任何人都能尝试这些工具。
- en: I usually also collect feedback within my companies or from the clients that
    I've worked for, so I get a lot of user feedback. And sometimes also it is just
    stumbling upon some new libraries online that I am curious about, just like yourself.
    The final thing is the paid aspect; there are a lot of SEO options on the market
    that can be pretty expensive. And I think one of my secret desires, if I may say,
    is to be able to kind of make those apps available for free. It's my guilty pleasure
    to take an application that people would pay hundreds or thousands of pounds a
    month for and recreate it with Python for free. It's a nice satisfaction to have!
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常也会在公司内部或者向我合作过的客户收集反馈，所以我获得了很多用户反馈。有时也会是偶然发现一些新库，像你一样，我很感兴趣去尝试。最后一个方面是收费问题；市场上有很多
    SEO 工具，价格可能很贵。我想，如果可以的话，我的一个秘密愿望就是能让那些应用免费开放。我有种“罪恶的快乐”，就是将一些人们愿意每月花费几百或几千英镑的应用，通过
    Python 重新开发成免费的。这是一种很棒的满足感！
- en: (Tyler) I'd love to talk about StreamEA a little bit more, can you talk a bit
    about any developmental difficulties you had with creating that app? What was
    that process like?
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 我很想再谈谈 StreamEA，你能谈谈在开发这个应用时遇到的困难吗？这个过程是什么样的？
- en: '![Figure 12.3 – StreamEA'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.3 – StreamEA'
- en: '](img/B16864_12_3.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16864_12_3.jpg)'
- en: Figure 12.3 – StreamEA
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.3 – StreamEA
- en: (Charly) Well, entity analysis is a hot topic in the SEO world. Google has been
    shifting from pure keywords to different kinds of semantic advancements, like,
    for example, entities. As Google is putting some ranking value or some weight
    toward those entities, you want to make sure that your pages or your websites
    are targeting those entities accurately.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 实体分析在 SEO 领域是一个热门话题。谷歌已经从纯粹的关键词转向了各种语义技术进步，比如实体。例如，谷歌对这些实体赋予了一定的排名价值或权重，因此你需要确保你的页面或网站准确地针对这些实体进行优化。
- en: In terms of challenges, there's quite a bit of code, but it wasn't necessarily
    too challenging. The Google Natural Language API is pretty straightforward. So
    the way the app is built, you get two main parts, the scraping bits with BeautifulSoup
    and the entity analysis bits with the API. The difficulty here is that by default,
    the Natural Language API retrieves some data and you need to create some function
    that would convert back and forth between dictionaries and data frames, which
    was a bit of a challenge because when I started last August, my Python knowledge
    wasn't necessarily great. And I remember struggling with that a lot, to be able
    to take the API from Google in a way that worked with my data frame. Now, it would
    be a piece of cake, but I remember it was a bit of a bottleneck and a learning
    experience for me.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 就挑战而言，代码量还是比较大的，但也不算太具有挑战性。谷歌自然语言 API 相对简单。所以这个应用的构建方式主要分为两个部分，一个是用 BeautifulSoup
    的抓取部分，另一个是通过 API 进行实体分析的部分。这里的难点在于，默认情况下，谷歌的自然语言 API 会获取一些数据，你需要创建一些函数来实现字典和数据框之间的转换，这对我来说有点挑战，因为我在去年八月刚开始做这个项目时，Python
    知识并不算扎实。我记得当时我为此挣扎了很久，想要让谷歌的 API 能与我的数据框兼容。现在我已经觉得这很简单了，但我记得那时是个瓶颈，也是一个学习的过程。
- en: And then you've got a little budget estimator, because the Google NLP API can
    be pricey if left untamed! A lot of people are scraping Wikipedia, which can have
    very long pages, so I thought that having this kind of little budget estimator,
    which estimates the cost for using StreamEA (StreamEA has you upload your own
    Google API credentials), would be useful.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你有一个小预算估算工具，因为如果不加以控制，谷歌 NLP API 的费用可能会非常高！很多人都在抓取 Wikipedia，它的页面可能很长，所以我认为，提供这样一个小预算估算工具，来估算使用
    StreamEA 的费用（StreamEA 要求你上传自己的谷歌 API 凭证），会很有用。
- en: Recently, I have open sourced another application, which does entity relationship
    retrieval from Wikipedia URLs. I haven't put any budget estimates on it yet, and
    people have been a bit grumpy with me, which is why I put a warning on it. It
    not only scrapes the Wikipedia URLs you input, but it also scrapes any children
    pages, which can go crazy without limits. The other day, some people were pushing
    the application to the max with scripting, for example, 100 children from the
    master page, which was fantastically long. And they were charged hundreds of pounds
    from Google!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我开源了另一个应用程序，它从Wikipedia的URL中提取实体关系。我还没有对它进行预算估算，因此人们对我有点不满，这也是我加上警告的原因。它不仅抓取你输入的Wikipedia
    URL，还抓取任何子页面，如果没有限制，可能会变得疯狂。前几天，有些人通过脚本将应用程序推到最大，例如从主页面提取100个子页面，这个过程非常长。他们因此被Google收取了几百英镑的费用！
- en: (Tyler) That's the one thing that I've recommended to people at the very beginning
    when you're setting up your AWS or GCP accounts, that you should absolutely set
    the budget limit to what you can afford so they turn your services off before
    you spend anywhere close to that amount of money.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 这是我在一开始为人们设置AWS或GCP账户时推荐的唯一建议，你应该绝对设置一个你能承受的预算限制，这样它会在你花费接近那个金额之前自动关闭你的服务。
- en: So you kind of got started in Python and Streamlit around the same time, do
    you have any tips for beginners getting started in Streamlit? Are there things
    that you kind of wish you would have known when you first started?
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你差不多是同时开始使用Python和Streamlit的，对于刚入门Streamlit的初学者，你有什么建议吗？有没有什么是你当初开始时希望自己知道的事情？
- en: (Charly) I started with Python in 2016 or 2017, where I was literally going
    to GitHub, taking some scripts, and not doing anything to them. Just using Python
    without necessarily understanding what the stuff was about. And then I started
    learning online with Jupyter Notebook, and eventually I had this opportunity to
    start building some web apps.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 我是在2016年或2017年开始接触Python的，那时我几乎是在GitHub上找到一些脚本，什么也不做。只是用Python而并不一定理解这些代码的含义。然后我开始在线学习Jupyter
    Notebook，最终有机会开始构建一些Web应用。
- en: But to come back to your question, my advice that I would give to new users
    is to lean on the community. With Streamlit, I think that sets us apart. I would
    say don't be too shy! People are so helpful there, they will certainly try to
    help out. And also don't be scared to share anything; embrace Twitter for sharing
    information with others. Don't be afraid to share your projects and your progress,
    not just the end product; there is no such thing as an end product anyway. I really
    have worked in a vacuum, working for myself, and if you don't share your work,
    then you don't get this good emotional push from the feedback from the community.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 但回到你的问题，我给新用户的建议是依靠社区。对于Streamlit，我认为这就是我们的独特之处。我会说，不要太害羞！那里的人非常乐于助人，他们一定会尽力提供帮助。而且不要害怕分享任何东西；拥抱Twitter，利用它与别人分享信息。不要害怕分享你的项目和进展，而不仅仅是最终产品；毕竟没有“最终产品”这一说。我真的曾经在真空中工作，为自己工作，如果你不分享你的工作，就无法从社区的反馈中获得这种良好的情感推动。
- en: It will never be perfect; you will never be ready. So just release it early;
    release it often! If there are a few issues with the app, don't worry about it.
    Just caveat it in your tweet or your post, and people will understand that. I
    mean, besides, your tool is a free tool. So people can't be too demanding.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 它永远不会完美，你也永远不会完全准备好。所以，尽早发布，频繁发布！如果应用程序有一些问题，别担心。在你的推文或帖子中提醒一下，大家会理解的。毕竟，你的工具是免费的，所以大家不能要求太多。
- en: (Tyler) When I first started developing and doing data science work in school,
    I would never share anything because I was so nervous that it wouldn't be good
    enough compared to all the professionals out there. So I would make all this stuff
    and never show it to anyone because I didn't feel like it was good enough. And
    then once I figured out that wasn't going to work and I started to share more
    of my projects, it was just so much better, so much more fun.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: (Tyler) 当我刚开始在学校做数据科学工作时，我从不分享任何东西，因为我非常紧张，觉得自己的东西和外面那些专业人士比起来不够好。所以我做了很多东西，却从不展示给任何人看，因为我觉得它不够好。后来我意识到这样行不通，于是开始分享更多的项目，结果发现这样好多了，变得更加有趣。
- en: (Charly) You've released a lot of projects over the years, it's really great.
    It's pretty impressive.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: (Charly) 你这些年来发布了很多项目，真的很棒，非常令人印象深刻。
- en: (Tyler) Thank you! Do you have any other things you would like to plug that
    you're working on?
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）谢谢！你现在有没有其他想要推荐的项目？
- en: (Charly) Oh, yeah, as you can imagine there are many things on the grill right
    now. I kind of started some of them around 2 years ago but as a script or a notebook,
    and I'm slowly converting them to Streamlit apps. I want to turn StreamEA into
    a paid app that is way more useful for SEO. I also have some machine learning
    apps in the pipeline, which I'm hopefully planning to release soon.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: （Charly）哦，是的，正如你想象的那样，现在有很多事情在进行中。我大约两年前就开始了其中一些项目，不过当时只是脚本或者笔记本，现在我正在慢慢将它们转换为
    Streamlit 应用。我希望能把 StreamEA 变成一款付费应用，让它对 SEO 更加有用。我还在筹备一些机器学习应用，希望能尽快发布。
- en: (Tyler) Thank you so much for coming and talking to us! You can find Charly
    on Twitter at [https://twitter.com/DataChaz](https://twitter.com/DataChaz).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: （Tyler）非常感谢你来和我们交流！你可以在 Twitter 上找到 Charly：[https://twitter.com/DataChaz](https://twitter.com/DataChaz)。
- en: Summary
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This concludes [*Chapter 12*](B16864_12_Final_VK_ePub.xhtml#_idTextAnchor131),
    *Streamlit Power Users*, and also the book! We covered so much deep content in
    this chapter, from talking about the importance of community development with
    Fanilo to some practical examples of popular applications with Johannes, and even
    discussing the toy-like features of Streamlit and where Streamlit is heading next
    with Adrien. We got a brief history lesson of where Streamlit has come from over
    the past couple of years (2019 and 2020), heard about the SEO ecosystem from Charly,
    and learned tips and tricks along the way. Some of my favorite tips are to join
    and post on the forums from Fanilo, to put Streamlit apps online that you think
    would be interesting from Johannes, and to lean in to the toy-like aspects of
    Streamlit from Adrien.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了[*第12章*](B16864_12_Final_VK_ePub.xhtml#_idTextAnchor131)，*Streamlit 高级用户*，也标志着这本书的结束！在这一章中，我们讨论了很多深刻的内容，从与
    Fanilo 讨论社区开发的重要性，到与 Johannes 交流流行应用的实际示例，甚至与 Adrien 一起探讨了 Streamlit 的玩具式功能，以及
    Streamlit 的未来发展方向。我们还简单回顾了 Streamlit 在过去几年（2019 和 2020）中的历史，了解了 Charly 关于 SEO
    生态系统的看法，并在过程中学到了许多技巧和窍门。我的一些最喜欢的建议包括：加入并在论坛上发帖（Fanilo），发布你认为有趣的 Streamlit 应用（Johannes），以及从
    Adrien 那里领悟到 Streamlit 玩具式特性的魅力。
- en: I just want to say thank you for reading this book; it has been a labor of love
    for me and I would like nothing better than for you to reach out to me and let
    me know how it has affected your Streamlit developer experience. You can find
    me on Twitter at [https://twitter.com/tylerjrichards](https://twitter.com/tylerjrichards),
    and I hope you have had as good of a time reading this book as I have writing
    it. Thank you and go make some awesome Streamlit apps!
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我只想说感谢你阅读这本书；这对我来说是一个充满热爱的工作，我最希望的就是你能联系我，让我知道它如何影响了你的 Streamlit 开发者体验。你可以在
    Twitter 上找到我：[https://twitter.com/tylerjrichards](https://twitter.com/tylerjrichards)，希望你在阅读这本书时，能够像我写这本书一样享受其中。谢谢你，去制作一些很棒的
    Streamlit 应用吧！
