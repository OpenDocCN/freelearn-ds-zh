- en: Jupyter Dashboards
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter仪表盘
- en: A dashboard is a mechanism to put together multiple displays into one for use
    in a presentation. For example, you can take 3 graphical displays of production
    lines drawn from different data and display them on screen in one frame or dashboard.
    With Jupyter we can draw upon many mechanisms for retrieving and visualizing data
    which can then be put together into a single presentation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表盘是一种将多个显示组合在一起用于演示的机制。例如，您可以将来自不同数据的3个生产线图形显示在一个屏幕上，放在同一个框架或仪表盘中。通过Jupyter，我们可以使用许多机制来检索和可视化数据，然后将它们组合成一个演示。
- en: Visualizing glyph ready data
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化已准备好的字形数据
- en: A glyph is a symbol. In this section, we are looking to display glyphs at different
    points in a graph rather than the standard dot as the glyph should provide more
    visual information to the viewer. Often there is an attribute about a data point
    that can be used to turn the data point into a useful glyph, as we will see in
    the following examples.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 字形是一个符号。在这一部分，我们希望在图表的不同位置显示字形，而不是标准的点，因为字形应该为观众提供更多的视觉信息。通常，数据点的某些属性可以用来将其转化为有用的字形，正如我们将在以下示例中看到的那样。
- en: The `ggplot2` package is useful for visualizing data in a variety of ways. `ggplot`
    is described as a plotting system for R. We will look at an example that displays
    volcano data points across the globe. I used the information from the National
    Center for Environmental Information at [https://www.ngdc.noaa.gov/nndc](https://www.ngdc.noaa.gov/nndc).
    I selected volcano information post-1964.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`ggplot2`包在以多种方式可视化数据时非常有用。`ggplot`被描述为R的一个绘图系统。我们将看一个示例，展示全球范围内的火山数据点。我使用了来自[https://www.ngdc.noaa.gov/nndc](https://www.ngdc.noaa.gov/nndc)的国家环境信息中心的数据。我选择了1964年后的火山信息。'
- en: 'This generated a set of data that I copied into a local CSV file:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这生成了一组数据，我将其复制到本地CSV文件中：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/8fb6abed-1aab-4453-8aad-ba24fa9ea6be.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8fb6abed-1aab-4453-8aad-ba24fa9ea6be.png)'
- en: 'If we just plot out the points on a world map we can see where the volcanoes
    are located. We are using the `mapdata` package for the map:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们仅在世界地图上绘制点，就能看到火山的位置。我们使用`mapdata`包来生成地图：
- en: The latest R syntax requires specifying the location of the repository (or mirror)
    to find the package as part of the `install.packages()` function call.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 最新的R语法要求在`install.packages()`函数调用中指定仓库（或镜像）的地址，以找到包的位置。
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/e9f0994a-5f48-4350-b43b-ecb6a3b5c24c.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e9f0994a-5f48-4350-b43b-ecb6a3b5c24c.png)'
- en: There are a few scattered volcanoes, but the dominating patterns are on the
    western Americas and southeast Asia, corresponding to the tectonic plate lines.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些零散的火山，但主要的模式出现在西美洲和东南亚，正好与地壳板块线相对应。
- en: 'We can use some of the data points as glyphs and present that information in
    a similar graphic using the `qplot` (quick plot) function within `ggplot2`:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将一些数据点用作字形，并使用`ggplot2`中的`qplot`（快速绘图）函数以类似的图形展示这些信息：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The arguments are:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数是：
- en: '`x`, `y`, `Longititude`, and `Latitude`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x`，`y`，`经度`和`纬度`'
- en: Datasets we are referencing
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们参考的数据集
- en: We are using color to connote the type of volcano
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用颜色来表示火山类型
- en: The size of the data point corresponds to the elevation of the volcano
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据点的大小与火山的海拔高度相关
- en: Setting alpha at a mid-point will draw half-shaded color points so that we have
    a better visual of the overlaps
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置alpha为中间值将绘制半阴影颜色点，以便我们更好地看到重叠部分
- en: '![](img/d7d49690-e1b9-472b-ae88-65a3feb856f2.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7d49690-e1b9-472b-ae88-65a3feb856f2.png)'
- en: There may be a way to overlay the glyph data with the preceding geographic map.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有一种方法可以将图形数据叠加在前面的地理地图上。
- en: The majority of the volcanoes are at over 2,000 feet elevation. Volcanoes in
    southeast Asia and the southern Pacific tend to be underwater.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数火山位于海拔超过2000英尺的地方。东南亚和南太平洋的火山往往位于水下。
- en: 'Similarly, we can display glyph data about the standard `iris` dataset:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以展示标准的`iris`数据集中的字形数据：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](img/506e46cd-6987-4644-aa82-2eda8b0484bd.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/506e46cd-6987-4644-aa82-2eda8b0484bd.png)'
- en: For the glyphs in this graphic we are using petal length and species. The graphics
    make it very clear that the species can be determined by the dimensions of the
    plant parts.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个图形中，我们使用了花瓣长度和物种。图形清楚地表明，物种可以通过植物部件的尺寸来确定。
- en: 'Or, using the diamonds built-in dataset, we can derive some information from
    the glyph data:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用内置的钻石数据集，我们可以从字形数据中获取一些信息：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/e18e470c-cd47-407b-81d3-8c3e407b3614.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e18e470c-cd47-407b-81d3-8c3e407b3614.png)'
- en: I had not expected the size (carats) to be the primary determinant of the price.
    I know everyone has been told or heard that the cut, clarity, and color make a
    difference, but the graph of actual data does not appear to show that those make
    any difference at all.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我没想到尺寸（克拉）会是价格的主要决定因素。我知道每个人都听说过切工、净度和颜色会有所不同，但实际数据的图表似乎并没有显示这些因素有任何区别。
- en: 'We can also look at the automobile miles-per-gallon dataset in a similar manner:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以用类似的方式查看汽车每加仑英里数的数据集：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this example, we are mapping the aesthetic data points where `x`, `y` positions
    are based on engine displacement and highway miles per gallon, but we also `color`
    and `size` the data points based on vehicle class.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将美学数据点映射，其中`x`、`y`位置基于发动机排量和高速公路每加仑英里数，但我们还根据车辆类别对数据点进行`颜色`和`大小`的标注。
- en: '![](img/b9f353de-3f4e-4695-ae24-1182004d93bc.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b9f353de-3f4e-4695-ae24-1182004d93bc.png)'
- en: 'The glyphs make it clearer:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这些符号使其更清晰：
- en: SUVs have lower mileage regardless of engine displacement size
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无论发动机排量大小如何，SUV的油耗较低
- en: Subcompact and compact vehicles have better mileage
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 小型和紧凑型车辆的油耗更好
- en: It is interesting that engine size makes little difference within any vehicle
    class on mileage
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有趣的是，发动机尺寸在任何车辆类别中对油耗几乎没有影响
- en: I know these are intuitive data points, but having the information confirmed
    using glyphs makes it very clear.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道这些是直观的数据点，但使用符号确认信息后，变得更加清晰。
- en: Publishing a notebook
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布笔记本
- en: You can publish a notebook/dashboard using markdown. Markdown involves adding
    annotations to cells in your notebook that are interpreted by Jupyter and converted
    into the more standard HTML representations that you see in other published materials.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 markdown 发布笔记本/仪表盘。Markdown 涉及向笔记本中的单元格添加注释，Jupyter 会将其解释并转换为你在其他已发布材料中看到的更标准的
    HTML 表示形式。
- en: In all cases, we create the cell with the markdown type. We then enter the syntax
    for markdown in the cell. Once we run markdown cells the display of the cell changes
    to the effective markdown representation. You should also note there is no line
    number designation for markdown cells, as there is no code executing in markdown
    cells.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，我们创建带有 markdown 类型的单元格。然后，我们在单元格中输入 markdown 的语法。一旦运行 markdown 单元格，单元格的显示会变成有效的
    markdown 表示形式。你还应该注意，markdown 单元格没有行号标注，因为 markdown 单元格中没有代码执行。
- en: Font markdown
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字体 markdown
- en: 'You can adjust font style information using `italic` and `bold` HTML notations.
    For example, if we have the code format of a cell as follows. You can use markdown
    that has markdown tags for italics (`<i>`) and bold (`<b>`):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `斜体` 和 `粗体` HTML 标记调整字体样式。例如，如果我们有如下格式的单元格代码，你可以使用带有斜体（`<i>`）和粗体（`<b>`）标签的
    markdown：
- en: '![](img/8cb96385-d21a-4fb2-9e05-fa6e7cb2322a.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8cb96385-d21a-4fb2-9e05-fa6e7cb2322a.png)'
- en: 'When we run the cell we see the effective markdown as:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行单元格时，我们看到有效的 markdown 如下：
- en: '![](img/006431ca-1982-4a48-ae2b-75f4ff3e0cf3.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/006431ca-1982-4a48-ae2b-75f4ff3e0cf3.png)'
- en: List markdown
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列表 markdown
- en: 'We can use lists such as the following, where we start an un-numbered list
    (we could have used `nl` for a numbered list) with two list items enclosed with
    the list item (`<li>`) tag:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下列表，其中我们开始一个无序列表（我们本可以使用 `nl` 来创建有序列表），并用列表项（`<li>`）标签将两个列表项括起来：
- en: '![](img/2bad76da-bf00-4d35-9865-4cc2b5550f07.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2bad76da-bf00-4d35-9865-4cc2b5550f07.png)'
- en: 'When we run this cell the resulting markdown is displayed:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行这个单元格时，结果的 markdown 会显示如下：
- en: '![](img/71f5c261-eea5-421d-b7bd-20b329f5aef0.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/71f5c261-eea5-421d-b7bd-20b329f5aef0.png)'
- en: Heading markdown
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标题 markdown
- en: 'A hierarchical set of headings is available, as in this example of markdown
    where Jupyter is paying special attention to heading notation using the sharp
    symbol `#`:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有一组层次化的标题可以使用，就像这个 markdown 示例一样，Jupyter 特别关注使用井号符号 `#` 的标题标记：
- en: '![](img/40962491-9299-4b3a-983a-a75fb1218806.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40962491-9299-4b3a-983a-a75fb1218806.png)'
- en: It is curious that Jupyter decided to specially handle this markdown versus
    any others.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 奇怪的是，Jupyter 决定特别处理这个 markdown，而不是其他的 markdown。
- en: 'With the resulting display:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示如下：
- en: '![](img/d3df3276-121b-4ffb-908f-43aa86b1825a.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d3df3276-121b-4ffb-908f-43aa86b1825a.png)'
- en: Table markdown
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表格 markdown
- en: 'We can generate tables, as in HTML. An HTML table starts with the `table` tag.
    Each row of the table starts with the `tr` tag. Columns within a row start with
    the `td` tag. Alternatively, you could use the column heading tag `th` instead
    of the `td` tag. In this example, we have a small table markdown:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以像在 HTML 中一样生成表格。HTML 表格以 `table` 标签开始。每一行的表格以 `tr` 标签开始。每行中的列以 `td` 标签开始。或者，你可以使用列标题标签
    `th` 来代替 `td` 标签。在这个示例中，我们有一个简单的表格 markdown：
- en: '![](img/f493e53b-4f33-4bbf-9d5c-308cb03d2003.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f493e53b-4f33-4bbf-9d5c-308cb03d2003.png)'
- en: 'With the resulting display:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 显示结果：
- en: '![](img/562b1384-3235-4b99-bc34-eb302c16b100.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/562b1384-3235-4b99-bc34-eb302c16b100.png)'
- en: Tables are centered by default in markdown. We could have changed the table
    to be left justified using more markdown. We could also have put borders around
    the cells of the table by adding the `'borders=1'` phrase to the `table` tag.
    Note that the column headings are bold by default.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 表格默认在 markdown 中居中。我们可以使用更多的 markdown 将表格改为左对齐。我们还可以通过向 `table` 标签添加 `'borders=1'`
    来为表格单元格加上边框。注意，列标题默认是加粗的。
- en: Code markdown
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码 markdown
- en: 'It is sometimes useful to display actual code statements as markdown in our
    presentation. We do this by prefixing the code sequence with triple back quotes
    and the name of the language to interpret the coding. We turn off the coding using
    a trailing triple back quote, as seen in this example:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有时在展示中展示实际的代码语句是很有用的。我们通过在代码序列前添加三个反引号和语言名称来解释代码的含义。通过在末尾加上三个反引号来关闭代码，如以下示例所示：
- en: '![](img/a68515ae-5a0f-4a6e-aa4a-8be1576b1bff.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a68515ae-5a0f-4a6e-aa4a-8be1576b1bff.png)'
- en: 'With the resulting display corresponding to language-specific keyword highlighting:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的结果对应于语言特定的关键字高亮：
- en: '![](img/fc48d8ae-b145-4e51-a035-6c963975f334.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fc48d8ae-b145-4e51-a035-6c963975f334.png)'
- en: More markdown
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多 markdown
- en: 'There are additional markdown notations for the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些额外的 markdown 注释：
- en: Emphasis
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强调
- en: Math symbols, geometric shapes, horizontal lines
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数学符号、几何形状、横线
- en: Monospace font
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等宽字体
- en: Line breaks
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 换行符
- en: Indentation
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩进
- en: Colors (including background)
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色（包括背景）
- en: Graphic references (note to be sure these are still accessible if your markdown
    is remotely deployed)
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形引用（注意确保这些图形在 markdown 远程部署时仍可访问）
- en: Internal and external links (same concern when deployed)
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部和外部链接（部署时的相同问题）
- en: Creating a Shiny dashboard
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Shiny 仪表盘
- en: 'Shiny is a web application framework for R. It does not require the user to
    code HTML. There are normally two sets of code: the server and the **user interface**
    (**UI**). Both sets of code work on top of a Shiny server. A Shiny server can
    reside on one of your machines or in the cloud (via several hosting companies).'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Shiny 是一个用于 R 的 Web 应用框架。它不要求用户编写 HTML 代码。通常有两个代码集：服务器端和 **用户界面**（**UI**）。这两个代码集都运行在
    Shiny 服务器上。Shiny 服务器可以托管在你的机器上，或者通过多个托管公司托管在云端。
- en: The Shiny server code set deals with accessing data, computing results, obtaining
    direction from the user, and interacting with other server code set to change
    results. The UI code set deals with layout of the presentation.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Shiny 服务器代码集处理数据访问、计算结果、获取用户输入和与其他服务器代码集交互以更改结果。UI 代码集处理展示的布局。
- en: For example, if you had an application that produced a histogram of data the
    server set would obtain the data and produce results, display the results, and
    interact with the user to change the result—for example, it might change the number
    of buckets or range of data being displayed. The UI code set would strictly be
    concerned with layout.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你有一个应用程序生成数据的直方图，服务器集会获取数据并生成结果，展示结果，并与用户交互以更改结果——例如，可能会更改显示的数据桶的数量或范围。UI
    代码集将严格处理布局。
- en: Shiny code does not run under Jupyter. You can develop the coding using RStudio.
    RStudio is an **integrated development environment** (**IDE**) for developing
    R scripts.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Shiny 代码不能在 Jupyter 中运行。你可以使用 RStudio 开发代码。RStudio 是一个 **集成开发环境**（**IDE**），用于开发
    R 脚本。
- en: 'With RStudio you can develop the code sets for the `server.R` and `ui.R` components
    and then run them. Running a Shiny application will:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 RStudio，你可以开发 `server.R` 和 `ui.R` 组件的代码集，然后运行它们。运行一个 Shiny 应用程序将：
- en: Open a new browser window
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开一个新的浏览器窗口
- en: Use the coding to generate the corresponding HTML for your coding
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用代码生成相应的 HTML 代码
- en: Display the generated HTML in the new browser window
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在新的浏览器窗口中显示生成的 HTML
- en: Once your application is working you can also take the next step to deploy the
    application onto an R server on the internet, where you can share the associated
    URL to your application with other users.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的应用程序工作正常，你也可以进一步将应用程序部署到互联网上的 R 服务器上，在那里你可以与其他用户分享与你的应用程序相关的 URL。
- en: R application coding
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R 应用编码
- en: 'When you start RStudio you will see the (hopefully) familiar display as follows.
    There are four main windows in the display (going clockwise from the upper left):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启动 RStudio 时，你会看到（希望）熟悉的显示界面。显示界面中有四个主要窗口（从左上角开始顺时针方向）：
- en: Source code window. In this window you enter the script for a particular R script
    file. Saving a file in the source code window will update the file stored on disk
    (and it is viewable in the files window).
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码窗口。在此窗口中，你可以输入特定 R 脚本文件的代码。在源代码窗口中保存文件会更新存储在磁盘上的文件（并且该文件可以在文件窗口中查看）。
- en: Environment/History window. In this window, any datasets that have been loaded
    or variables that have been established are displayed.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境/历史窗口。在这个窗口中，任何已加载的数据集或已建立的变量都会显示出来。
- en: Files window. In this window, the current sets of files are displayed (and are
    accessible by clicking on a file to pull it into the source code window).
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件窗口。在此窗口中，当前的文件集会显示出来（并且可以通过点击文件将其拉入源代码窗口）。
- en: The execution window. In this window, actual commands are made to the R server.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行窗口。在此窗口中，会向 R 服务器发送实际的命令。
- en: For the simple example we will use `server.R` and `io.R` files very similar
    to the files on the Shiny web pages, for example.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于简单的例子，我们将使用 `server.R` 和 `io.R` 文件，这些文件与 Shiny 网页上的文件非常相似。
- en: '![](img/3b67ceab-bd9b-429f-830c-6b37b0ab93af.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b67ceab-bd9b-429f-830c-6b37b0ab93af.png)'
- en: 'The `app.R` file has the following commands:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`app.R` 文件包含以下命令：'
- en: '[PRE6]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The UI file only establishes the layout of the page:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: UI 文件仅设置页面的布局：
- en: '[PRE7]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If we run the `app.R` program in RStudio we end up with a page that looks like
    the following. There is a header section, sidebar, and body. The body contains
    the display and the slider control. We can run the application by selecting the
    `app.R` file in the source window and then clicking on the Run App button at the
    top of the source window. Clicking on the Run App button has the effect of entering
    the command `runApp('shiny')` in the console window (so you could have done that
    yourself instead). Once the application is running you will see a message in the
    console window such as Listening on http://127.0.0.1:6142 where R decided to deploy
    your application on your machine.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在 RStudio 中运行 `app.R` 程序，我们将得到一个如下所示的页面。页面有一个头部区域、侧边栏和主体部分。主体包含显示区域和滑块控制。我们可以通过在源代码窗口中选择
    `app.R` 文件，然后点击源代码窗口顶部的“运行应用”按钮来运行应用程序。点击“运行应用”按钮的效果是向控制台窗口输入命令 `runApp('shiny')`（所以你本来也可以自己输入该命令）。一旦应用程序运行，你会在控制台窗口看到类似于“监听
    http://127.0.0.1:6142”的消息，这意味着 R 决定将你的应用程序部署到你的机器上。
- en: 'In the resultant new browser window we can see our Shiny application displayed:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在新打开的浏览器窗口中，我们可以看到展示的 Shiny 应用程序：
- en: '![](img/71fbf6e6-b4cb-4128-98c8-e3c14adb871b.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/71fbf6e6-b4cb-4128-98c8-e3c14adb871b.png)'
- en: Note that the Shiny display is responsive. Responsive web applications will
    adjust the layout of components to accommodate changes in the physical size of
    the window. As in the previous display, you would expect the display to have the
    components laid out horizontally as they occur. As I changed the dimensions of
    the display to fit the printed page the layout got reorganized.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Shiny 显示是响应式的。响应式网页应用程序会根据窗口物理尺寸的变化调整组件的布局。正如之前的展示一样，你会看到组件按出现的顺序水平排列。当我调整显示的尺寸以适应打印页面时，布局重新组织了。
- en: The page is fully active. As you move the slider the graphic gets regenerated.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 页面是完全动态的。当你移动滑块时，图形会重新生成。
- en: Publishing your dashboard
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布你的仪表盘
- en: Once you are satisfied with your dashboard you can publish it to the internet.
    The Deploy button near the top right of the source window will push your application
    set to the service that you connect.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你对你的仪表盘感到满意，就可以将其发布到互联网上。源代码窗口右上角附近的“部署”按钮将把你的应用程序集推送到你所连接的服务。
- en: In my case I used a free account with [http://www.shinyapps.io/](http://www.shinyapps.io/).
    There are other services available for hosting your Shiny applications.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的例子中，我使用了一个免费的账户，注册于[http://www.shinyapps.io/](http://www.shinyapps.io/)。还有其他服务可以托管你的
    Shiny 应用程序。
- en: Once you select to publish an application, RStudio will prompt you for the service
    and credentials to publish (credentials are provided to you when you enroll).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你选择发布应用程序，RStudio 将提示你输入发布所需的服务和凭据（凭据会在你注册时提供给你）。
- en: After that, the files are posted to your host and the application is up and
    running. As can be seen by hitting my demo account at [https://dantoomeysoftware.shinyapps.io/shiny](https://dantoomeysoftware.shinyapps.io/shiny)
    we get the exact same display as the preceding one, except that we are running
    on the hosted server.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，文件会被上传到你的主机，应用程序也开始运行。通过访问我的演示账户 [https://dantoomeysoftware.shinyapps.io/shiny](https://dantoomeysoftware.shinyapps.io/shiny)，你会看到与前面展示完全相同的界面，只是我们是在托管的服务器上运行。
- en: '![](img/23610340-f49b-49ec-8417-41dc003dec4c.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23610340-f49b-49ec-8417-41dc003dec4c.png)'
- en: So, we have a easy to use system for creating our dashboard using a variety
    of display mechanisms. Overall, much easier than I expected—given my experience
    developing such presentations in other systems, such as Microsoft Tools.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们有一个易于使用的系统，可以使用各种显示机制创建我们的仪表盘。总体而言，比我预期的要容易得多——考虑到我在其他系统（如微软工具）中开发此类演示的经验。
- en: Building standalone dashboards
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建独立的仪表盘
- en: Using Node.js, developers have come up with a way to host your dashboard/notebook
    without Jupyter on jupyter-dashboard-server.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Node.js，开发人员提出了一种在 jupyter-dashboard-server 上托管你的仪表盘/笔记本而不使用 Jupyter 的方法。
- en: Installation requires installing Node.js (as the server is written in Node.js).
    This is a larger installation set.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 安装需要安装 Node.js（因为服务器是用 Node.js 编写的）。这是一个较大的安装包。
- en: 'Once you have Node.js installed, one of the tools installed is npm-node product
    manager. You can use npm to install the dashboard server with the following command:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了 Node.js，其中一个安装的工具是 npm-node 产品管理器。你可以使用 npm 通过以下命令安装仪表盘服务器：
- en: '[PRE8]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once installed you can run the server with the following command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你可以使用以下命令运行服务器：
- en: '[PRE9]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`mygateway.com` is a dummy. You would use your gateway server (if needed).
    At this point the server is running on the environment you mentioned and will
    output a few lines:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`mygateway.com` 是一个占位符。你需要使用你的网关服务器（如果需要）。此时，服务器已在你提到的环境中运行，并将输出几行信息：'
- en: '[PRE10]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can open a browser to the URL (`http://127.0.0.1:3000/dashboards`) and
    see what the server console looks like:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在浏览器中打开 URL (`http://127.0.0.1:3000/dashboards`)，查看服务器控制台的样子：
- en: '![](img/bed6159c-18e5-427d-9395-d0f6d9909cc5.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bed6159c-18e5-427d-9395-d0f6d9909cc5.png)'
- en: 'As for developing a dashboard you can host on the server, we need to install
    more:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 至于开发你可以托管在服务器上的仪表盘，我们还需要安装更多内容：
- en: '[PRE11]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then enable the extension (it is a notebook extension):'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 然后启用扩展（这是一个笔记本扩展）：
- en: '[PRE12]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You then need to install the layout extension using the following commands:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然后需要使用以下命令安装布局扩展：
- en: '[PRE13]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'At this point you can upload your dashboard notebook file using the following
    command:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你可以使用以下命令上传你的仪表盘笔记本文件：
- en: '[PRE14]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Where the URL is prefixed with the hosting site you are using, `PATH` is optional
    (would default to the root location), and `NAME` is as you determine.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: URL 前缀是你使用的托管站点，`PATH` 是可选的（默认情况下指向根位置），`NAME` 是你确定的名称。
- en: Summary
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小结
- en: In this chapter, we visualized data graphically using glyphs to emphasize important
    aspects of the data. We used markdown to annotate a notebook page. We used Shiny
    to generate an interactive application. And we saw a way to host notebooks outside
    of Jupyter.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用符号图形化地展示数据，强调数据的关键方面。我们使用 Markdown 注释了笔记本页面。我们使用 Shiny 生成了一个交互式应用程序。并且我们看到了在
    Jupyter 之外托管笔记本的方法。
- en: In the next chapter, we will look at statistical modeling under Jupyter.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍 Jupyter 下的统计建模。
