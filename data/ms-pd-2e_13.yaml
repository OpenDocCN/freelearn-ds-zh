- en: Making Powerful Reports In Jupyter Using pandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 pandas 在 Jupyter 中制作强大的报告
- en: pandas and Jupyter Notebook can be used to create nicely formatted output, reports,
    and/or tutorials that are easy to share with a wide range of audiences. In this
    chapter, we will look into the application of a range of styles and the formatting
    options that pandas provides. We will also understand how to create dashboards
    and reports in Jupyter Notebook.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 和 Jupyter Notebook 可用于创建格式化良好的输出、报告和/或教程，且这些内容易于与广泛的受众共享。在本章中，我们将研究多种样式的应用以及
    pandas 提供的格式化选项。我们还将了解如何在 Jupyter Notebook 中创建仪表板和报告。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: pandas styling
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 样式
- en: Navigating Jupyter Notebook
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览 Jupyter Notebook
- en: Making reports using Jupyter Notebooks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Jupyter Notebooks 制作报告
- en: pandas styling
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 样式
- en: pandas allow for a wide variety of operations to be performed on DataFrames,
    making it easier to handle structured data. Another intriguing property of DataFrames
    is that they allow us to format and style regular rows and columns in tabular
    data. These styling properties help enhance the readability of tabular data. The
    `Dataframe.style` method returns a Styler object. Any formatting to be applied
    before displaying a DataFrame can be applied over this Styler object. Styling
    can be done either with in-built functions that have predefined rules for formatting
    or with user-defined rules.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 允许在 DataFrame 上执行多种操作，使得处理结构化数据变得更加容易。DataFrame 的另一个有趣的特性是，它们允许我们格式化和设置常规行列的样式，这些样式有助于提高表格数据的可读性。`Dataframe.style`
    方法返回一个 Styler 对象。所有需要在显示 DataFrame 之前应用的格式化可以在这个 Styler 对象上进行。样式设置可以使用内置函数，这些函数为格式化提供了预定义的规则，也可以使用用户自定义的规则。
- en: 'Let''s consider the following DataFrames so that we can take a look at pandas'' styling
    properties:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑以下 DataFrame，以便查看 pandas 的样式属性：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following screenshot shows the preceding DataFrame loaded into Jupyter
    Notebook:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了前述的 DataFrame 已加载到 Jupyter Notebook 中：
- en: '![](img/1be10ee0-3386-487e-8430-1fb54fc06859.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1be10ee0-3386-487e-8430-1fb54fc06859.png)'
- en: DataFrame loaded into Jupyter Notebook
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame 加载到 Jupyter Notebook 中
- en: Let's see how Jupyter Notebook elements can be styled.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下如何为 Jupyter Notebook 元素设置样式。
- en: In-built styling options
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内置样式选项
- en: pandas has predefined formatting rules written and stored as functions that
    can be readily used.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 具有预定义的格式化规则，这些规则作为函数编写并存储，能够方便地使用。
- en: The `highlight_null` method highlights all NaNs or Null values in the data with
    a specified color. In the DataFrame under discussion, the Age and Cabin columns
    have NaNs. Hence, in the following screenshot, the NaNs are flagged in blue in
    these columns.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`highlight_null` 方法会用指定的颜色高亮数据中的所有 NaN 或 Null 值。在讨论的 DataFrame 中，Age 和 Cabin
    列有 NaN 值。因此，在以下截图中，这些列中的 NaN 值会以蓝色标记。'
- en: 'The following snippet highlights the NaN values in these columns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段高亮显示了这些列中的 NaN 值：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This results in the following output:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![](img/79828ff5-6015-4ff5-8c34-58e24455a572.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/79828ff5-6015-4ff5-8c34-58e24455a572.png)'
- en: 'Figure 9.2: Highlighting Nulls and NANs with blue'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2：用蓝色高亮显示 Null 和 NaN
- en: 'The `highlight_max` and `highlight_min` methods apply highlighting (with a
    chosen color) to the maximum or minimum value across either axis. In the following
    example, the minimum values in each column have been highlighted:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`highlight_max` 和 `highlight_min` 方法分别对最大值或最小值应用高亮（使用选定的颜色），并可以跨任一轴进行操作。在以下示例中，每一列中的最小值已被高亮显示：'
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Please note that only columns with the numeric datatype are subject to highlighting.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，只有数值类型的列才会被高亮显示。
- en: 'The following screenshot highlights the maximum values for each column:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图高亮显示了每一列的最大值：
- en: '![](img/59106fc6-5ccf-43d0-8049-75cd04f5554c.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/59106fc6-5ccf-43d0-8049-75cd04f5554c.png)'
- en: 'Figure 9.3: Highlighting the maximums across rows (among numerical columns)
    with yellow'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3：跨行高亮显示最大值（在数值列中），使用黄色标记
- en: In the preceding code, `highlight_max` has been used to highlight the maximum
    values in each column.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，`highlight_max` 被用来高亮显示每一列中的最大值。
- en: 'Next, we use the same function to find the maximum for each column, changing
    the value of the axis parameter while doing so:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用相同的函数来查找每一列的最大值，同时更改轴参数的值：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following screenshot shows the highlighted maximum values across columns:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了跨列的最大值已被高亮显示：
- en: '![](img/fd35cad5-d419-4c85-a868-6b32a3d519d6.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd35cad5-d419-4c85-a868-6b32a3d519d6.png)'
- en: Highlighting the maximums across columns (among numerical columns) with yellow
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用黄色突出显示每列中的最大值（在数值列中）
- en: 'Now, let''s use the `highlight_min` function to highlight the minimum values
    with a custom-defined color. Both `highlight_min` and `highlight_max` have the
    same syntax and accept the same set of parameters:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用`highlight_min`函数用自定义颜色突出显示最小值。`highlight_min`和`highlight_max`的语法相同，接受相同的参数集：
- en: '![](img/a7fa48b2-8435-4b0b-9691-3d3edd99118a.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a7fa48b2-8435-4b0b-9691-3d3edd99118a.png)'
- en: Highlighting the minimums with green
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用绿色突出显示最小值
- en: A background color gradient based on conditional formatting can be applied to
    columns to give a sense of high, medium, and low values based on color. The backgrounds
    are colored with different colors based on whether they are high, medium, or low.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 基于条件格式化的背景颜色渐变可以应用于列，以便通过颜色表现出高、中、低值的区别。背景颜色会根据值的高低使用不同的颜色。
- en: 'The background gradient of the table can be controlled through the `background_gradient()`
    styling function. Any existing colormaps or user-defined colormaps can be used
    as a gradient. Parameters such as `low` and `high` help us use part of the colormap''s
    color range. Further, the axis and subset parameters can be set to vary the gradient
    along a certain axis and subset of columns:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 表格的背景渐变可以通过`background_gradient()`样式函数进行控制。可以使用任何现有的颜色映射或用户定义的颜色映射作为渐变。像`low`和`high`这样的参数可以帮助我们使用颜色映射的部分颜色范围。此外，还可以设置`axis`和`subset`参数来沿某一轴和某些列子集变化渐变：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This results in the following output:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这将得到以下输出：
- en: '![](img/50db428f-0caa-4d5b-a946-a8b1dae8f7a0.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50db428f-0caa-4d5b-a946-a8b1dae8f7a0.png)'
- en: Creating a background color gradient separately for each numerical column based
    on its high and low values
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为每个数字列分别创建背景颜色渐变，基于其高低值
- en: Styling can also be done independently of values. Let's modify the properties
    to change the font color, background color, and border color. You can do so by
    using the following code.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 样式也可以独立于数值进行设置。我们来修改属性以改变字体颜色、背景颜色和边框颜色。你可以通过以下`代码`来实现。
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This results in the following output:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这将得到以下输出：
- en: '![](img/471a3e34-3b02-40fa-ab92-0f2050399954.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/471a3e34-3b02-40fa-ab92-0f2050399954.png)'
- en: Changing the background colour, font color, font type, and font size for an
    output DataFrame
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为输出的DataFrame改变背景色、字体颜色、字体类型和字体大小
- en: 'Styling options also help us control the numerical precision. Consider the
    following DataFrames:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 样式选项还帮助我们控制数值精度。请查看以下DataFrame：
- en: '![](img/6fc75a21-6488-4134-8371-2ed0460c1cba.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6fc75a21-6488-4134-8371-2ed0460c1cba.png)'
- en: DataFrame numbers without precision rounding off
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame中的数字不进行精度四舍五入
- en: Take a look at the following code, which sets the precision to 2 decimal places
    or rounds off a number number to 2 decimal places.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下以下代码，它将精度设置为2位小数，或者将数字四舍五入到2位小数。
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This results in the following output:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这将得到以下输出：
- en: '![](img/1ef02878-46d4-4732-8fcb-44507275df09.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ef02878-46d4-4732-8fcb-44507275df09.png)'
- en: DataFrame numbers with precision rounding off to 2 decimal places
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame中的数字四舍五入到2位小数
- en: 'Now, let''s set a caption for the preceding DataFrame:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们来为前面的DataFrame设置一个标题：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This results in the following output:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这将得到以下输出：
- en: '![](img/58478994-ac86-4521-96ab-f5b6f99dba99.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/58478994-ac86-4521-96ab-f5b6f99dba99.png)'
- en: DataFrame numbers with precision rounding off to 2 decimal places and a table
    caption
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame的数字四舍五入到2位小数，并添加表格标题
- en: 'The `set_table_styles` function can also be used to modify the table independently
    of the data. It accepts a list of `table_styles`. Each `table_style` should be
    a dictionary consisting of a selector and a property. `table_styles` can be used
    to define custom action-based styles. For example, the following style gives the
    selected cell the `lawngreen` background color:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`set_table_styles`函数也可以用来独立于数据修改表格。它接受一个`table_styles`列表。每个`table_style`应为一个包含选择器和属性的字典。`table_styles`可以用来定义基于动作的自定义样式。例如，以下样式将所选单元格的背景色设置为`lawngreen`：'
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This results in the following output:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这将得到以下输出：
- en: '![](img/90023e85-3e17-45a0-9dd4-5d13110453d4.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90023e85-3e17-45a0-9dd4-5d13110453d4.png)'
- en: table_style output showing a lawngreen background color for the selected cell
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`table_style`输出显示了所选单元格的草绿色背景色'
- en: 'The `hide_index` and `hide_columns` styling options allow us to hide either
    the index or specified columns when they''re displayed. In the following code,
    we have hidden the default index column:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`hide_index` 和 `hide_columns` 样式选项允许我们在显示时隐藏索引或指定的列。在以下代码中，我们已经隐藏了默认的索引列：'
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following screenshot shows the output DataFrame, without its index:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了没有索引的输出 DataFrame：
- en: '![](img/d1979343-58ca-448f-983e-30484ed6d9a9.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d1979343-58ca-448f-983e-30484ed6d9a9.png)'
- en: Hiding the Index column from an output DataFrame
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出的 DataFrame 中隐藏 Index 列
- en: 'Now, let''s use the `hide_columns` option to hide the `"Name"`, `"Sex"`, `"Ticket"`,
    and `"Cabin"` columns:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们使用 `hide_columns` 选项来隐藏 `"Name"`、`"Sex"`、`"Ticket"` 和 `"Cabin"` 列：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following screenshot displays the columns that are shown after hiding a
    few columns from a DataFrame:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了在从 DataFrame 中隐藏某些列后，显示的列：
- en: '![](img/8fce9677-2271-48e6-8068-520b9efae092.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8fce9677-2271-48e6-8068-520b9efae092.png)'
- en: Hiding a number of columns from an output DataFrame
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出的 DataFrame 中隐藏某些列
- en: User-defined styling options
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户定义的样式选项
- en: 'Apart from the in-built functions, pandas provides us with the option to write
    our own functions to be used for styling. Let''s write a function to change the
    background color of negative values to red:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 除了内置函数，pandas 还提供了编写我们自己的函数以用于样式设置的选项。我们来编写一个函数，将负值的背景色改为红色：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Such functions can be applied as a styling option through the `apply()` and
    `applymap` methods of pandas. The `applymap` method applies the function elementwise.
    The `apply()` method can be used to apply styles either row-wise or column-wise
    by setting the axis parameter to 1 or 0\. Setting the axis to None applies the
    function table-wise. Here, our intended operation is elementwise. Let''s use `applymap`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的函数可以通过 pandas 的 `apply()` 和 `applymap` 方法作为样式选项应用。`applymap` 方法按元素应用函数。`apply()`
    方法可以通过设置 `axis` 参数为 1 或 0 来按行或按列应用样式。将 `axis` 设置为 None 会按表格应用函数。在这里，我们的操作是按元素应用。我们来使用
    `applymap`：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This results in the following output:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成以下输出：
- en: '![](img/97739994-ad10-4489-84b8-cd19e7f0271d.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/97739994-ad10-4489-84b8-cd19e7f0271d.png)'
- en: Customized conditional formatting based on user-defined styling options for
    all the columns
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 基于用户定义样式选项的所有列的自定义条件格式
- en: 'The `apply()` and `applymap` methods also allow us to style a slice of the
    data. The columns to be styled can be passed through the subset parameter as a
    list. Let''s try to apply the styling to columns 1 and 3:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply()` 和 `applymap` 方法也允许我们对数据的某个切片进行样式设置。要设置样式的列可以通过 `subset` 参数以列表的形式传递。我们来尝试将样式应用于第
    1 列和第 3 列：'
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This results in the following output:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成以下输出：
- en: '![](img/88f10a29-0501-41c3-977e-563a989b3b85.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/88f10a29-0501-41c3-977e-563a989b3b85.png)'
- en: Customized conditional formatting based on user-defined styling options for
    a subset of columns
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 基于用户定义样式选项的子集列的自定义条件格式
- en: 'This can also be done by passing a suitable label-based indexer. In the following,
    the styling has been done for columns 1 and 4 on rows 0, 1, and 2:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以通过传递适当的基于标签的索引器来完成。在下列示例中，样式已经在第 1 列和第 4 列的第 0 行、第 1 行和第 2 行应用：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This results in the following output:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成以下输出：
- en: '![](img/f0be2ec8-3a5e-41b3-9d3c-2cd9942b155a.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0be2ec8-3a5e-41b3-9d3c-2cd9942b155a.png)'
- en: Customized conditional formatting based on user-defined styling options for
    a subset of rows and columns
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 基于用户定义样式选项的子集行和列的自定义条件格式
- en: 'The `format()` function allows the string to be formatted as specified. The
    following code shows formatting being applied to display restricted digits:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`format()` 函数允许按指定的格式对字符串进行格式化。以下代码展示了应用格式以显示限制的小数位数：'
- en: '[PRE15]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This results in the following output:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成以下输出：
- en: '![](img/4e9656a3-98be-4f70-a687-4f009423ea49.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e9656a3-98be-4f70-a687-4f009423ea49.png)'
- en: 'Figure 9.17: Applying the same 2-decimal-place digit formatting on all the
    columns'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.17：对所有列应用相同的两位小数格式
- en: 'Separate formats can be applied to different columns, as shown here:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 可以对不同的列应用不同的格式，如下所示：
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This results in the following output:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成以下输出：
- en: '![](img/ddb7a3db-81d4-48e6-98e2-be32f7cb2feb.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ddb7a3db-81d4-48e6-98e2-be32f7cb2feb.png)'
- en: 'Figure 9.18: Applying different formatting to different columns via a styling
    dictionary with column indices as keys and formatting options as values'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.18：通过样式字典应用不同的格式到不同的列，列索引作为键，格式选项作为值
- en: 'The `lambda` function can be used to apply formatting conditions across multiple
    columns:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`lambda` 函数可以用来跨多个列应用格式化条件：'
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This results in the following output:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成以下输出：
- en: '![](img/69497d87-4dc6-4fb6-8013-316031cc0417.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/69497d87-4dc6-4fb6-8013-316031cc0417.png)'
- en: 'Figure 9.19: Applying lambda functions to style several columns at once'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.19：应用 lambda 函数一次性样式化多个列
- en: Navigating Jupyter Notebook
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浏览 Jupyter Notebook
- en: Jupyter Notebook, known as **IPython Notebook** previously, is a wonderful tool
    for reporting. It allows us to integrate regular code with rich styling, formatting,
    markdown, and special text such as equation plots and live coding. This section
    will help you understand the essence of a Jupyter Notebook.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook，之前被称为**IPython Notebook**，是一个非常棒的报告工具。它允许我们将常规代码与丰富的样式、格式化、Markdown
    和特殊文本（如方程式图和实时编码）结合起来。这个部分将帮助你理解 Jupyter Notebook 的本质。
- en: 'Jupyter Notebook can be launched through Anaconda Navigator or from the Terminal
    using the Jupyter Notebook command. It opens in the browser. The following window
    opens on startup:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 可以通过 Anaconda Navigator 启动，也可以通过终端使用 Jupyter Notebook 命令启动。它会在浏览器中打开。启动时会打开以下窗口：
- en: '![](img/46b86828-a700-41d4-aaf1-f9bf7d6524dd.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46b86828-a700-41d4-aaf1-f9bf7d6524dd.png)'
- en: 'Figure 9.20: Startup screen once a Jupyter Notebook loads up'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.20：Jupyter Notebook 启动后显示的界面
- en: A Jupyter Notebook can be created in any of the folders in the directory. The
    New option creates a new notebook, folder, or Terminal. The most interesting feature
    of this option is that it allows us to shift between multiple Conda environments
    with ease. For example, both Python 2 and Python 3 environments can be accessed
    through Jupyter, if installed already. Any notebooks in other directories can
    be transferred to the current working directory of Jupyter Notebook through the
    Upload option.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 可以在目录中的任何文件夹中创建。点击“新建”选项可以创建一个新的笔记本、文件夹或终端。这个选项最有趣的功能是它让我们能够轻松切换多个
    Conda 环境。例如，如果已经安装了 Python 2 和 Python 3 环境，就可以通过 Jupyter 访问它们。通过“上传”选项，其他目录中的任何笔记本都可以传输到当前
    Jupyter Notebook 的工作目录中。
- en: 'A notebook consists of a menu bar, a toolbar, and a cell area. A single notebook
    can comprise of multiple cells:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 一个笔记本由菜单栏、工具栏和单元格区域组成。一个单一的笔记本可以包含多个单元格：
- en: '![](img/2c9ccad0-30b9-400b-85fe-e4f53355c974.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2c9ccad0-30b9-400b-85fe-e4f53355c974.png)'
- en: 'Figure 9.21: Menu bar and toolbar in Jupyter Notebook'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.21：Jupyter Notebook 的菜单栏和工具栏
- en: Exploring the menu bar of Jupyter Notebook
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Jupyter Notebook 的菜单栏
- en: 'The menu bar provides options that allow us to control the kernel and notebook
    area. The File menu helps create new notebooks, open saved notebooks, save checkpoints
    in the notebook, and revert to a previously saved stable version of a checkpoint.
    The Edit menu consists of a range of actions to be performed on entire cells:
    copying cells, deleting cells, splitting or merging cells, and moving cells up
    and down. The View menu can be used to toggle headers, line numbers, and the toolbar,
    and edit metadata, attachments, and tags. Cells can be inserted above or below
    existing cells from the Insert menu. The Cell menu allows us to run either a single
    cell or multiple cells together. The Kernel state can be modified through the
    Kernel menu. This includes clearing output, restarting the kernel, interrupting
    the kernel, and shutting down the kernel. Jupyter notebook allows us to create
    and use widgets. The Widget menu helps us save, clear, download widget states,
    and embed widgets in HTML content. The Help menu offers quick references and shortcuts.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单栏提供了控制内核和笔记本区域的选项。文件菜单帮助创建新的笔记本、打开已保存的笔记本、保存笔记本中的检查点，并恢复到之前保存的稳定版本的检查点。编辑菜单包含了一系列针对整个单元格执行的操作：复制单元格、删除单元格、拆分或合并单元格，以及上下移动单元格。查看菜单可以用来切换标题、行号和工具栏，并编辑元数据、附件和标签。可以通过插入菜单在现有单元格上方或下方插入新单元格。单元格菜单允许我们运行单个单元格或将多个单元格一起运行。通过内核菜单可以修改内核状态，包括清除输出、重启内核、中断内核以及关闭内核。Jupyter
    Notebook 允许我们创建和使用小部件。小部件菜单帮助我们保存、清除、下载小部件状态，并将小部件嵌入到 HTML 内容中。帮助菜单提供了快速参考和快捷键。
- en: Edit mode and command mode
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑模式和命令模式
- en: 'A Jupyter Notebook can either be in edit mode or command mode. When in edit
    mode, the contents of a cell can be changed; the cell gets highlighted in green,
    as shown in the following screenshot:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 可以处于编辑模式或命令模式。在编辑模式下，单元格的内容可以被更改；单元格会被高亮显示为绿色，如下图所示：
- en: '![](img/638c9698-5e1e-4374-b389-58e14bc98023.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/638c9698-5e1e-4374-b389-58e14bc98023.png)'
- en: Edit mode of a cell in Jupyter Notebook
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 中的单元格编辑模式
- en: 'You will then notice a pencil icon appear in the top right corner:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你会注意到在右上角出现一个铅笔图标：
- en: '![](img/e15503a8-7a32-4441-a8c4-946056a3f53b.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e15503a8-7a32-4441-a8c4-946056a3f53b.png)'
- en: Edit mode of a cell in Jupyter Notebooks
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter笔记本中单元格的编辑模式
- en: Edit mode can be entered by clicking on a cell or by pressing *Enter* on the
    keyboard.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 点击单元格或按*Enter*键即可进入编辑模式。
- en: 'The *Esc* key helps us switch from edit mode to command mode. This can also
    be done by clicking anywhere outside a cell. A gray boundary around the cell with
    a blue margin on the left indicates command mode:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '*Esc*键帮助我们从编辑模式切换到命令模式。也可以通过点击单元格外的任何地方来完成此操作。单元格周围的灰色边框和左侧的蓝色边距表示命令模式：'
- en: '![](img/a0830cc1-e770-42b5-baa4-f1e97705d13e.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a0830cc1-e770-42b5-baa4-f1e97705d13e.png)'
- en: Command mode for a cell in Jupyter Notebooks
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter笔记本中单元格的命令模式
- en: 'Command mode allows us to edit the entire notebook, while edit mode serves
    more like a text editor. The *Enter* key helps us enter edit mode when we''re
    in command mode. Several keyboard shortcuts are available in edit mode and command
    mode. Command mode is mapped to a higher number of shortcuts than edit mode:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 命令模式允许我们编辑整个笔记本，而编辑模式则更像是一个文本编辑器。当我们处于命令模式时，*Enter*键帮助我们进入编辑模式。在编辑模式和命令模式中都有多种快捷键可用，命令模式的快捷键数量比编辑模式更多：
- en: '![](img/512e35c2-7b0a-45ab-92b2-874fd9277d3d.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/512e35c2-7b0a-45ab-92b2-874fd9277d3d.png)'
- en: Keyboard shortcuts in Command mode
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 命令模式下的快捷键
- en: '![](img/934b31b4-5ac1-4865-bc22-dbeaa4d802ae.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/934b31b4-5ac1-4865-bc22-dbeaa4d802ae.png)'
- en: Keyboard shortcuts in Command mode – 2
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 命令模式下的快捷键 - 2
- en: '![](img/c27f6158-9e73-49a5-858a-26909be799e9.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c27f6158-9e73-49a5-858a-26909be799e9.png)'
- en: Keyboard shortcuts in Edit mode
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑模式下的快捷键
- en: The keyboard shortcuts in the preceding screenshots help us navigate Jupyter
    Notebook.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图中的快捷键帮助我们在Jupyter笔记本中导航。
- en: Mouse navigation
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 鼠标导航
- en: 'The most basic action that is involved when navigating via the mouse is clicking
    a cell to select and edit it. Further navigation via the mouse is aided by the
    toolbar options. The different options that are available in the toolbar are as
    follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 通过鼠标进行导航时，最基本的操作是点击一个单元格进行选择和编辑。通过工具栏选项可以进一步辅助鼠标导航。工具栏中可用的不同选项如下：
- en: '![](img/b9915f71-84b7-4114-a1be-ce774f2b298f.png)**Save and checkpoint**: This
    option saves changes in Jupyter Notebook and sets up a checkpoint that we can
    revert to later if we need to.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/b9915f71-84b7-4114-a1be-ce774f2b298f.png)**保存并设置检查点**：此选项在Jupyter笔记本中保存更改，并设置一个检查点，若需要，我们可以稍后恢复到此检查点。'
- en: '![](img/69765f9d-a8ab-401f-9f67-d67f1c7aa03b.png)**Inset cell below**: Creates
    a new cell below the currently selected cell.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/69765f9d-a8ab-401f-9f67-d67f1c7aa03b.png)**在下方插入单元格**：在当前选中的单元格下方创建一个新单元格。'
- en: '![](img/724a1821-308d-43eb-ba29-6e1f72370343.png)**Cut selected cells**: Cuts
    and deletes selected cells. This action can be undone through the Edit menu.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/724a1821-308d-43eb-ba29-6e1f72370343.png)**剪切选中的单元格**：剪切并删除选中的单元格。此操作可以通过编辑菜单撤销。'
- en: '![](img/739adcc0-a4c0-4e12-b17f-d0f88f0bca6f.png)**Copy selected cells**: Copies
    the entire cell''s contents with ease.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/739adcc0-a4c0-4e12-b17f-d0f88f0bca6f.png)**复制选中的单元格**：轻松复制整个单元格的内容。'
- en: '![](img/1937a009-6869-4e07-946a-8f3f12795ed0.png)**Paste cells below**: Pastes
    cell contents that were cut or copied earlier.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/1937a009-6869-4e07-946a-8f3f12795ed0.png)**粘贴单元格到下方**：粘贴之前剪切或复制的单元格内容。'
- en: '![](img/9d412655-f2a1-44a7-ad38-f50bef5ad4d6.png)**Move selected cells up/down**:
    Moves the selected cells above or below the current location. Shifts by one cell
    at a time.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/9d412655-f2a1-44a7-ad38-f50bef5ad4d6.png)**将选中的单元格上下移动**：将选中的单元格移到当前位置的上下。每次移动一个单元格。'
- en: '![](img/530b521e-426b-4fbe-90f3-8d4bf3091a39.png)**Run**: Runs the selected
    cell to execute code. This is an alternative to *Ctrl*+*Enter*.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/530b521e-426b-4fbe-90f3-8d4bf3091a39.png)**运行**：运行选中的单元格以执行代码。这是*Ctrl*+*Enter*的替代方式。'
- en: '![](img/9ea214e1-b852-494b-83c9-22d9767ebc4b.png)**Interrupt the kernel**:
    Cancels the current execution that''s in progress.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/9ea214e1-b852-494b-83c9-22d9767ebc4b.png)**中断内核**：取消当前正在执行的操作。'
- en: '![](img/d73d59e5-f64c-4363-91a1-eceaa0c54302.png)**Restart the kernel**: Kernel
    restarts after a popup box prompts a response regarding whether the kernel can
    be restarted.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/d73d59e5-f64c-4363-91a1-eceaa0c54302.png)**重启内核**：在弹出框提示是否可以重启内核后，内核会重新启动。'
- en: '![](img/156c8e9b-5db3-424e-86f8-5b3e062ba427.png)**Restart kernel and re-run
    notebook**: Reruns the entire notebook after restarting the kernel.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/156c8e9b-5db3-424e-86f8-5b3e062ba427.png)**重启内核并重新运行笔记本**：在重启内核后重新运行整个笔记本。'
- en: '![](img/f25d2363-ec83-46f4-8464-c17d8b1f35ad.png)**Code**, **Markdown**, **Raw
    NBConvert**, **Heading**: Changes the text format of the cell''s content.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/f25d2363-ec83-46f4-8464-c17d8b1f35ad.png)**代码**，**Markdown**，**原始NBConvert**，**标题**：更改单元格内容的文本格式。'
- en: '![](img/bbd84fd5-97a2-4b35-8f48-679b6a2717f8.png)**Open command palette**: Displays
    the shortcut options that are available.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/bbd84fd5-97a2-4b35-8f48-679b6a2717f8.png)**打开命令面板**：显示可用的快捷键选项。'
- en: Jupyter Notebook Dashboard
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter Notebook仪表板
- en: Jupyter offers an interactive reporting ability through Jupyter Dashboard. It
    allows the creation of widgets to make visualizations more interactive. The dashboard
    experience transforms code-laden notebooks into an application with a user-friendly
    interface.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter通过Jupyter Dashboard提供交互式报告功能。它允许创建小部件，使可视化更加互动。仪表板体验将充满代码的笔记本转变为具有用户友好界面的应用程序。
- en: Ipywidgets
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ipywidgets
- en: 'Widgets are an integral part of the Jupyter Dashboard. The following section
    explores `Ipywidgets `in greater detail. First, the widgets should be imported
    from the `Ipywidgets` library:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 小部件是Jupyter Dashboard的重要组成部分。以下部分将更详细地探讨`Ipywidgets`。首先，需要从`Ipywidgets`库中导入小部件：
- en: '[PRE18]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following screenshot shows how a widget for text input is created:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了如何创建一个文本输入小部件：
- en: '![](img/0cb1462f-c6b6-42e5-8e05-c7e7dbfdb76b.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0cb1462f-c6b6-42e5-8e05-c7e7dbfdb76b.png)'
- en: Widget to get a text input
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 获取文本输入的小部件
- en: 'Now, let''s print the value that was entered in the widget:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们打印在小部件中输入的值：
- en: '![](img/b723b37a-1b88-4b7a-9ea6-cc90665fd000.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b723b37a-1b88-4b7a-9ea6-cc90665fd000.png)'
- en: 'Figure 9.39: Widget to get a text input with printed output'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.39：获取文本输入并打印输出的小部件
- en: 'Using similar methods, other widgets can be created. The following screenshot
    shows a Button widget:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用类似的方法，可以创建其他小部件。以下截图展示了一个按钮小部件：
- en: '![](img/5d22065d-abe8-4043-8acd-ff7168e8be9e.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d22065d-abe8-4043-8acd-ff7168e8be9e.png)'
- en: Creating a Click button widget
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个点击按钮小部件
- en: 'Any widget has two parts: the UI and the event handler. The event handler is
    usually a Python script that instructs us about the response we should provide
    to the user input. In the preceding examples, the event handler printed a message
    based on the user''s input.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 每个小部件都有两个部分：用户界面（UI）和事件处理器。事件处理器通常是一个Python脚本，它指导我们根据用户输入做出响应。在之前的示例中，事件处理器根据用户输入打印了一条消息。
- en: 'Unlike the default widgets, `interact` is a special kind that chooses the form
    of the widget based on the user input. In the following screenshot, a single value
    was provided to the function by the widget. The interactive widget decided to
    create a slider input:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 与默认的小部件不同，`interact`是一种特殊的小部件，它根据用户输入选择小部件的形式。在以下截图中，用户通过小部件向函数提供了一个单一的值。交互式小部件决定创建一个滑块输入：
- en: '![](img/bf2bab25-f8fa-4bf3-8782-28661b8475df.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf2bab25-f8fa-4bf3-8782-28661b8475df.png)'
- en: Creating a value slider widget
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数值滑块小部件
- en: 'Now, let''s change the input to Boolean, that is, True. The widget becomes
    a checkbox:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将输入改为布尔值，即True。小部件变成了一个复选框：
- en: '![](img/ea786b69-2a6f-4e46-af44-3a58fe509f3d.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea786b69-2a6f-4e46-af44-3a58fe509f3d.png)'
- en: Creating a Boolean selector widget
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个布尔值选择器小部件
- en: Interactive visualizations
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交互式可视化
- en: The widgets in the preceding example were simple and delivered a `print` command.
    Instead of the `print` command, the response could be harnessed through a visualization.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例中的小部件很简单，执行了一个`print`命令。除了`print`命令，响应还可以通过可视化来呈现。
- en: 'The following is an example where two inputs from two different slider inputs
    are used to control the axes and inputs to a line plot:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例，两个来自不同滑块输入的值被用来控制坐标轴和线图的输入：
- en: '![](img/1b8c4e4c-3876-41d6-8dfa-2659734c1b5f.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1b8c4e4c-3876-41d6-8dfa-2659734c1b5f.png)'
- en: Two slider inputs with a plot reflecting the changes in values
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 两个滑块输入，通过图表反映数值的变化
- en: 'The following is an example of an interactive visualization with a Seaborn
    plot, where the user can alter the legends and variables that color the plot:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个交互式可视化的示例，使用了Seaborn图表，用户可以改变图例和颜色变量来影响图表：
- en: '![](img/f72663eb-b3e8-4889-b49e-76eba26bddad.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f72663eb-b3e8-4889-b49e-76eba26bddad.png)'
- en: Drop-down selector widget for choosing the coloring variable
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 选择颜色变量的下拉选择器小部件
- en: Writing mathematical equations in Jupyter Notebook
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Jupyter Notebook中编写数学公式
- en: Jupyter Notebook is a comprehensive tool for making powerful reports and tutorials
    involving complex mathematical expressions and algorithms. This is because Jupyter
    Notebook provides powerful typesetting features for text formatting and mathematical
    equation typing. Jupyter Notebook cells with these features are called Markdown
    cells, as opposed to Code cells, where code is written and executed. Typesetting
    in Jupyter Notebook is derived from the versatile JavaScript library called **MathJax** used
    for typing scientific equations in web products. It also supports LaTex syntaxes,
    in fact, most syntax we are going to discuss.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 是一个全面的工具，用于制作包含复杂数学表达式和算法的强大报告和教程。这是因为 Jupyter Notebook 提供了强大的排版功能，用于文本格式化和数学方程式输入。具有这些功能的
    Jupyter Notebook 单元称为 Markdown 单元，与之相对的是代码单元，代码在其中编写和执行。Jupyter Notebook 的排版源自一个多功能的
    JavaScript 库 **MathJax**，该库用于在 Web 产品中输入科学方程式。它还支持 LaTex 语法，实际上，我们接下来要讨论的大部分语法都支持。
- en: In this section, we are going to discuss how to write these equations and format
    text. We will start with a quick walkthrough regarding how to write mathematical
    equations.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何编写这些方程式并格式化文本。我们将首先快速介绍如何编写数学方程式。
- en: 'Some high-level guidelines to keep in mind while writing equations in Jupyter
    Notebook are as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 编写 Jupyter Notebook 方程式时需要牢记的一些高级指南如下：
- en: Select the cell type as Markdown, as shown in the following screenshot. It is
    `Code` by default for a new cell.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择单元类型为 Markdown，如下图所示。新单元的默认类型是 `Code`。
- en: Enclose the equation between `$$`.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将方程式包含在 `$$` 之间。
- en: Keywords and symbols such as frac (fractions), times (multiplication), leq (less
    than or equal to), alpha, beta, and others are preceded by a backward slash, `\`.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诸如 frac（分数）、times（乘法）、leq（小于或等于）、alpha、beta 等关键词和符号前面都加上反斜杠 `\`。
- en: 'Note that double-clicking on a rendered Markdown cell takes it back to the
    LaTex/MathJax code snippet:'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，双击渲染后的 Markdown 单元会将其恢复为 LaTex/MathJax 代码片段：
- en: '![](img/b51329bf-f144-44ff-acdf-97257020a610.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b51329bf-f144-44ff-acdf-97257020a610.png)'
- en: Selecting the cell type as Markdown
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 选择单元类型为 Markdown
- en: With these instructions in mind, let's start learning how to write equations.
    This section has been written in a cookbook format where we will see the LaTex/MathJax
    snippet source followed by the output equation.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些指导原则，我们开始学习如何编写方程式。本节采用了食谱格式，其中我们将看到 LaTex/MathJax 代码片段源以及输出方程式。
- en: 'Simple mathematical operations such as addition, multiplication, division,
    and so on can be written as follows. `\times` and `\over` are the keywords for
    the multiplication and division operators. Note how equations begin and end with
    `$$`:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的数学运算，如加法、乘法、除法等，可以如下编写。`\times` 和 `\over` 是乘法和除法操作符的关键词。注意方程式是如何以 `$$` 开始和结束的：
- en: '![](img/e4eb555b-491d-4bd9-902c-9739210ff596.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4eb555b-491d-4bd9-902c-9739210ff596.png)'
- en: LaTex snippet and output equations for simple mathematical operations
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及简单数学运算的输出方程式
- en: 'Power and exponential operations can be written as follows. `^` is the power
    or exponential symbol in LaTex syntax:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 幂和指数运算可以如下编写。`^` 是 LaTex 语法中的幂或指数符号：
- en: '![](img/422336e1-35cd-4779-b668-4442d3f2053f.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/422336e1-35cd-4779-b668-4442d3f2053f.png)'
- en: LaTex snippet and output equations for power and exponential operations
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及幂和指数运算的输出方程式
- en: 'Often, mathematical equations involve complex fractions. These can be written
    as follows. The `\frac` keyword gives us more flexibility when it comes to writing
    complex fractions:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 数学方程式通常涉及复杂的分数。这些可以按如下方式编写。`\frac` 关键词在编写复杂分数时提供了更多的灵活性：
- en: '![](img/094f3823-5029-4ead-b363-0d0fe6fc0862.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/094f3823-5029-4ead-b363-0d0fe6fc0862.png)'
- en: LaTex snippet and output equations for fraction operations
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及分数运算的输出方程式
- en: 'Now, let''s look at how inequalities can be written. The keywords to note here
    are `\geq` and `\leq`, which stand for greater than or equal to and less than
    or equal to, respectively:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们来看一下如何编写不等式。需要注意的关键词是 `\geq` 和 `\leq`，分别表示大于或等于和小于或等于：
- en: '![](img/b9a6451c-311b-4e16-bf8c-2d7ee40a600d.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b9a6451c-311b-4e16-bf8c-2d7ee40a600d.png)'
- en: LaTex snippet and output equations for inequalities
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及不等式的输出方程式
- en: 'Greek letters and symbols are heavily used in mathematical equations and expressions.
    Here, we have provided a glossary of symbols and the instructions we can use to
    write them. Notice how superscripts can be written by preceding them with `_`,
    that is, an underscore:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 希腊字母和符号在数学方程式和表达式中被广泛使用。这里，我们提供了一个符号词汇表，并说明了我们可以用来书写它们的指令。请注意，如何通过在上标前加`_`（即下划线）来书写上标：
- en: '![](img/d5cb81ff-eebb-4250-88bc-7ca40cdcfeb2.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d5cb81ff-eebb-4250-88bc-7ca40cdcfeb2.png)'
- en: LaTex snippet and output equations for symbols and indices
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex片段和符号与指数的输出方程式
- en: 'Roots and logs are important components of mathematical equations. Let''s look
    at how we can write them. `\sqrt` is the main keyword for roots and provides two
    parameters—the root type, that is, 2^(nd) root, 3^(rd) root, or 4^(th) root, and
    the expression or the number on which the root is to be applied. For log, the
    base is preceded by `_`, that is, an underscore:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 根号和对数是数学方程式中的重要组成部分。我们来看一下如何书写它们。`\sqrt`是根号的主要关键字，提供两个参数——根号的类型，即2^(nd)根，3^(rd)根或4^(th)根，以及应用根号的表达式或数字。对于对数，底数前面有一个`_`，也就是下划线：
- en: '![](img/a485689e-7b76-409e-91b4-452576b25635.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a485689e-7b76-409e-91b4-452576b25635.png)'
- en: LaTex snippet and output equations for roots and logs
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex片段和根号与对数的输出方程式
- en: 'Often, we have to deal with summations and products across elements of data
    vectors. Let''s look at how to write these. `\sum` and `\prod` are the main keywords
    and have a `\limit` attribute which takes inputs for the lower and upper bounds
    for the summation or product:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 经常需要处理数据向量元素的求和与积的操作。我们来看一下如何书写这些操作。`\sum`和`\prod`是主要关键字，并且具有一个`\limit`属性，用于输入求和或积的下限和上限：
- en: '![](img/1233a7e4-9aba-4865-aba7-9be6452c6935.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1233a7e4-9aba-4865-aba7-9be6452c6935.png)'
- en: LaTex snippet and output equations for summations and products
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex片段和求和与积的输出方程式
- en: 'Combinations and statistics have their own set of symbols. Let''s look at how
    to write them. `\choose` is the keyword for combinations:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 组合与统计有一套独立的符号。让我们看看如何书写它们。`\choose`是组合的关键字：
- en: '![](img/46bdd34a-4a4a-491f-90ca-5634aaec1197.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46bdd34a-4a4a-491f-90ca-5634aaec1197.png)'
- en: LaTex snippet and output equations for probability and statistics
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex片段和概率与统计的输出方程式
- en: 'Calculus is a vast field and is the source of many mathematical expressions
    and equations for many data science algorithms. `\lim` is the keyword we use to
    write limit expressions and supplies the `\limits` and `\to` parameter keywords
    to provide a variable tending to a value. The `\partial` keyword is used to write
    partial derivatives, while the `\frac` keyword is used to write normal derivatives.
    `\int` is used for writing integrals. It comes with the `\limits` parameter, which
    provides the lower and upper bounds of the integer:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 微积分是一个广泛的领域，是许多数据科学算法中的数学表达式和方程式的来源。`\lim`是书写极限表达式的关键字，并提供`\limits`和`\to`参数关键字来表示一个变量趋向某个值。`\partial`关键字用于书写偏导数，而`\frac`关键字用于书写常规导数。`\int`用于书写积分，它带有`\limits`参数，用于提供积分的上下限：
- en: '![](img/5541e808-d580-426d-b0a2-4a422aa00a13.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5541e808-d580-426d-b0a2-4a422aa00a13.png)'
- en: LaTex snippet and output equations for calculus
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex片段和微积分的输出方程式
- en: 'Linear algebra is used extensively in data science algorithms and we deal with
    a lot of matrices in linear algebra. Let''s look at how we can write matrices.
    `\matrix` is the main keyword we use to write a matrix. Elements are written row-wise;
    those in the same row are separated by `&`, while a new row is marked by a line
    break symbol, that is, `//`:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 线性代数在数据科学算法中被广泛应用，我们在处理许多矩阵时涉及到线性代数。我们来看一下如何书写矩阵。`\matrix`是书写矩阵的主要关键字。元素按行书写；同一行的元素通过`&`分隔，而新的一行用换行符标记，也就是`//`：
- en: '![](img/e41e7fe0-270d-4edb-bae1-04ddb9f06f1d.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e41e7fe0-270d-4edb-bae1-04ddb9f06f1d.png)'
- en: LaTex snippet and output equations for matrices
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex片段和矩阵的输出方程式
- en: It is also common to encounter functions that have different definitions across
    a different range of variable(s). Let's learn how to write these function definitions.
    The following is a high-level overview of the keywords and elements that are needed
    to write such definitions.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 还经常遇到具有不同定义的函数，这些函数在不同的变量范围内有不同的定义。让我们学习如何书写这些函数定义。以下是写这些定义所需的关键字和元素的高层次概述。
- en: 'The following are the new formatting options that are used in multi-period
    functions:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是用于多重周期函数中的新格式选项：
- en: '**Large Curly Bracket**: Uses the `\left` and `\right` keywords to denote the
    and the end respectively of an equation.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大括号**：使用 `\left` 和 `\right` 关键字分别表示方程的开始和结束。'
- en: '**Equation Array Alignment**: `begin{}`, `end{}`.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方程组对齐**：`begin{}`, `end{}`。'
- en: '**Line Breaker**: Uses the `\` symbol to take the text to the next line.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**换行符**：使用 `\` 符号将文本移到下一行。'
- en: '**Text Alignment Box**: Uses `\mbox{text}` to align text.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本对齐框**：使用 `\mbox{text}` 对文本进行对齐。'
- en: 'They can be used as follows:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 它们可以按如下方式使用：
- en: '![](img/ed3f8605-7966-4fd3-89a8-1121d207e3a3.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed3f8605-7966-4fd3-89a8-1121d207e3a3.png)'
- en: LaTex snippet and output equations for multi-period functions
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出多周期函数的方程
- en: Formatting text in Jupyter Notebook
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 中格式化文本
- en: Markdown cells come with a lot of options for formatting text. In this section,
    we will go through these options one by one.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown 单元格提供了很多文本格式化选项。在本节中，我们将逐一介绍这些选项。
- en: Headers
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标题
- en: 'Text can be specified as a header by preceding any text with `#` in a markdown
    cell. One # means Header 1, two # means Header 2, and so on. This shown in the
    following screenshot. We follow the same format as the LaTex snippet source, followed
    by the output formatted text:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在 Markdown 单元格中的任何文本前加 `#`，可以将其指定为标题。一个 `#` 表示标题 1，两个 `#` 表示标题 2，依此类推。如下面的截图所示。我们遵循与
    LaTex 代码片段源相同的格式，后跟输出的格式化文本：
- en: '![](img/4ab51777-f07b-412d-a795-8ad01e2d63f1.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ab51777-f07b-412d-a795-8ad01e2d63f1.png)'
- en: LaTex snippet and output formatted text for headers
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于标题
- en: Bold and italics
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 粗体和斜体
- en: To format text as bold, enclose it within `**`, for example, `**<text>**`.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文本格式化为粗体，可以将其包含在 `**` 中，例如 `**<text>**`。
- en: 'To format text as italics, enclose it within `*`, for example, `*<text>*`:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文本格式化为斜体，可以将其包含在 `*` 中，例如 `*<text>*`：
- en: '![](img/d4ca8107-6ef4-4052-9a76-ddc6b7038dc9.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d4ca8107-6ef4-4052-9a76-ddc6b7038dc9.png)'
- en: LaTex snippet and output formatted text for bold and italics formatting
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于粗体和斜体格式化
- en: Alignment
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对齐
- en: 'Text can be centrally aligned by using an HTML-like `<center>` tag, as follows:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过使用类似 HTML 的 `<center>` 标签将文本居中对齐，如下所示：
- en: '![](img/7bd292ad-2d47-4543-9e76-db4a83a59ce9.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7bd292ad-2d47-4543-9e76-db4a83a59ce9.png)'
- en: LaTex snippet and output formatted text for alignment
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于对齐
- en: Font color
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字体颜色
- en: 'The font color for text can be specified as follows. It has to be written inside
    another HTML-like `<font>` tag:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 可以按如下方式指定文本的字体颜色。它必须写在另一个类似 HTML 的 `<font>` 标签内：
- en: '![](img/0e19917d-bdc8-487f-99c0-fe981a60ab26.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e19917d-bdc8-487f-99c0-fe981a60ab26.png)'
- en: LaTex snippet and output formatted text for font color
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于字体颜色
- en: Bulleted lists
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目符号列表
- en: 'Bullet lists can be created by preceding a list item by an asterisk, `*`, and
    a space. The list can be nested as well, as shown in the following screenshot:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 使用星号 `*` 和空格可以创建项目符号列表。列表也可以嵌套，如下图所示：
- en: '![](img/137102ce-3518-4e66-96f7-3897669bed00.png)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![](img/137102ce-3518-4e66-96f7-3897669bed00.png)'
- en: LaTex snippet and output formatted text for bulleted lists
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于项目符号列表
- en: Tables
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表格
- en: 'Tables can be created by using a combination of `|`, spaces, `---`, and `:`.
    They are as follows:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过组合 `|`、空格、`---` 和 `:` 创建表格。它们如下所示：
- en: '**|:** Used as a column separator.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**|:** 用作列分隔符。'
- en: '**Spaces**: For padding and aligning columns and rows.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空格**：用于填充和对齐列和行。'
- en: '**---**: For creating a solid horizontal line.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**---**：用于创建实心水平线。'
- en: '**:**: For text alignment in a cell. If it appears at the beginning, then the
    text is left-aligned:'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**:**：用于单元格中的文本对齐。如果它出现在开头，则文本左对齐：'
- en: '![](img/4adead56-9d35-430f-aa84-fa3267c1cbf2.png)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4adead56-9d35-430f-aa84-fa3267c1cbf2.png)'
- en: LaTex snippet and output formatted text for tables
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于表格
- en: Tables
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表格
- en: 'Horizontal lines are used to separate sections from one another. `***` results
    in a normal horizontal line while `- - -` provides a solid horizontal line:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 水平线用于将不同部分分开。`***` 生成普通水平线，而 `- - -` 提供实心水平线：
- en: '![](img/6966c0e1-2ec2-44e4-ba36-84145bf60a96.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6966c0e1-2ec2-44e4-ba36-84145bf60a96.png)'
- en: LaTex snippet and output formatted text for tables
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于表格
- en: HTML
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML
- en: 'Markdown cells can be used to render code as well, as shown in the following
    screenshot:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown 单元格也可以用来呈现代码，如下图所示：
- en: '![](img/a3576163-629e-4af8-ae7b-a87c7debfeb8.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3576163-629e-4af8-ae7b-a87c7debfeb8.png)'
- en: LaTex snippet and output formatted text for HTML
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段和输出格式化文本用于 HTML
- en: Citation
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用
- en: 'Quotes and excerpts need to be cited in reports on many occasions. This is
    done by starting each line of the text with `>`. This results in indented text
    and a citation at the end:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，报告中的引用和摘录需要注明来源。这是通过在每行文本前加上 `>` 来实现的。这会产生缩进文本，并在结尾显示引用：
- en: '![](img/0e344b9b-947d-40a7-b60f-b623fd7940a7.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e344b9b-947d-40a7-b60f-b623fd7940a7.png)'
- en: LaTex snippet and output formatted text for citation and indented text
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及输出的格式化文本用于引用和缩进文本
- en: Miscellaneous operations in Jupyter Notebook
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter Notebook 中的杂项操作
- en: Apart from text formatting and equations, some miscellaneous operations such
    as loading an image, writing a cell to a Python file, and other  are needed to
    make effective reports. In this section, we will look at these operations and
    learn how to use them.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 除了文本格式化和方程式外，还需要进行一些杂项操作，例如加载图像、将单元格写入 Python 文件等，这些对于制作有效的报告非常重要。在本节中，我们将探讨这些操作并学习如何使用它们。
- en: Loading an image
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载图像
- en: Most popular image formats, such as `.viz`, `.jpg`, `.png`, `.gif`, and so on,
    can be loaded into Jupyter Notebooks to better illustrate reports. A `.gif` can
    even be loaded and shown as an animation.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 最流行的图像格式，如 `.viz`、`.jpg`、`.png`、`.gif` 等，可以加载到 Jupyter Notebook 中，以更好地展示报告。甚至可以加载
    `.gif` 并将其作为动画展示。
- en: 'These image files need to be kept in the current working directory. The current
    working directory can be found by running `os.getcwd( )` in a code block in the
    notebook. Images to be loaded should be kept in this directory. The working directory
    can be changed by using `os.chdir` (the directory path). Note that these commands
    assume that `import os` has already been run. The following code is used to show
    a `.jpg` image, as well as its output:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 这些图像文件需要保存在当前工作目录中。当前工作目录可以通过在 Notebook 中的代码块中运行 `os.getcwd()` 来找到。要加载的图像应保存在该目录中。可以通过使用
    `os.chdir`（目录路径）来更改工作目录。请注意，这些命令假设已经运行了 `import os`。以下代码用于显示 `.jpg` 图像及其输出：
- en: '![](img/8540d50a-0945-4008-9c52-381fb9c82a9d.png)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8540d50a-0945-4008-9c52-381fb9c82a9d.png)'
- en: LaTex snippet and output .jpg image
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及输出的 .jpg 图像
- en: 'The following code is used to show a `.gif` image, as well as its output:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码用于显示 `.gif` 图像及其输出：
- en: '![](img/856b274f-3c3a-4b81-83b1-997d68461bd3.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![](img/856b274f-3c3a-4b81-83b1-997d68461bd3.png)'
- en: LaTex snippet and output .gif image
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及输出的 .gif 图像
- en: Hyperlinks
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超链接
- en: 'Hyperlinking is frequently used to navigate users to relevant resources such
    as input data, algorithm explanations, further readings, videos, and more. The
    syntax to do this is quite simple:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 超链接通常用于将用户导航到相关资源，例如输入数据、算法说明、进一步阅读、视频等。执行此操作的语法非常简单：
- en: '[PRE19]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This results in the following output:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致以下输出：
- en: '![](img/db9317ef-78d5-4be1-9da4-241b53ecbd30.png)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db9317ef-78d5-4be1-9da4-241b53ecbd30.png)'
- en: LaTex snippet and output hyperlinks
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: LaTex 代码片段及输出的超链接
- en: Writing to a Python file
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 写入 Python 文件
- en: 'The contents of a code cell(s) can be written to a Python file. This is quite
    helpful while taking code from prototyping in Jupyter Notebook to production environments
    in Python files. These files are written to the current working directory:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 代码单元的内容可以写入 Python 文件。在将 Jupyter Notebook 中的原型代码移植到生产环境中的 Python 文件时，这非常有用。这些文件会写入当前工作目录：
- en: '![](img/f512335f-e1d4-4239-a2f2-fab7db63298e.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f512335f-e1d4-4239-a2f2-fab7db63298e.png)'
- en: 'Figure 9.69: LaTex snippet for writing a code cell to a Python file'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.69：用于将代码单元写入 Python 文件的 LaTex 代码片段
- en: Running a Python file
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 Python 文件
- en: 'External Python files can be run directly from within Jupyter Notebooks. This
    can be used to load functions and classes that have been saved in Python files
    so that they can be used later in the notebook. They can also be used to run Python
    files without having to use the command prompt and so that we can see the output
    quickly. Again, these Python files need to be present in the current working directory:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 外部 Python 文件可以直接从 Jupyter Notebook 中运行。这可以用于加载已保存在 Python 文件中的函数和类，以便稍后在 Notebook
    中使用。它们还可以用于运行 Python 文件，而无需使用命令提示符，从而快速查看输出。再次提醒，这些 Python 文件需要存在于当前工作目录中：
- en: '![](img/e946910b-126e-45d9-a992-5c7d09df27b8.png)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e946910b-126e-45d9-a992-5c7d09df27b8.png)'
- en: LaTex snippet and output after running a Python file from a cell in Jupyter
    Notebook
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Jupyter Notebook 的单元格运行 Python 文件后的 LaTex 代码片段及输出
- en: Loading a Python file
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载 Python 文件
- en: 'The contents of a Python file can be loaded into a notebook cell. This is done
    to edit, modify, and test code from the interactive notebook environment:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: Python 文件的内容可以加载到 Notebook 单元中。这是为了在交互式 Notebook 环境中编辑、修改和测试代码：
- en: '![](img/10949765-9e04-4be6-b261-a69b86717fb9.png)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10949765-9e04-4be6-b261-a69b86717fb9.png)'
- en: LaTex snippet and output after loading a Python file from a cell in Jupyter
    Notebook
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 从Jupyter Notebook中的单元加载Python文件后的LaTex代码片段和输出
- en: Internal Links
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内部链接
- en: Internal (hyper)links can be created to navigate to different sections of a
    notebook from a context summary index. Clicking on the items in the index takes
    you to a specific section once the internal linking has been done.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 可以创建内部（超）链接以便从目录摘要索引跳转到笔记本的不同章节。在进行内部链接之后，点击索引中的项目会将你带到特定章节。
- en: 'Making internal links work in a Jupyter Notebook consists of two steps:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jupyter Notebook中使内部链接生效包括两个步骤：
- en: 'Create an ID or identifier for a section:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为一个章节创建ID或标识符：
- en: '![](img/d234fa45-662c-4d98-bbb7-6408a40dd8c6.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d234fa45-662c-4d98-bbb7-6408a40dd8c6.png)'
- en: LaTex snippet to create an ID identifier for a section
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 创建章节ID标识符的LaTex代码片段
- en: The ID for a section is provided in the `<a>` tag. In this case, `Simple_Operations`
    is the ID for the Simple Operations section. This ID would be used to refer to
    this section in the second step while creating the link.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 章节的ID在`<a>`标签中给出。在这种情况下，`Simple_Operations`是简单操作章节的ID。此ID将在第二步中用于创建指向该章节的链接。
- en: 'On running the two preceding cells, the following is provided as output. The
    first cell containing the ID definition becomes invisible. Make sure this cell
    has been run before clicking on the hyperlink. If it has not been run, the link
    will not work. Another important point to note is that this ID definition needs
    to happen just before we create the section header:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前两个单元后，以下内容将作为输出。第一个包含ID定义的单元会变得不可见。确保在点击超链接之前已经运行过该单元。如果没有运行，链接将无法工作。另一个重要点是，这个ID定义需要在创建章节标题之前进行：
- en: '![](img/3b252a24-1fae-4d28-bf58-5bd2fdac0607.png)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b252a24-1fae-4d28-bf58-5bd2fdac0607.png)'
- en: Output of the LaTex snippet creating an ID identifier for a section
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 创建章节ID标识符的LaTex代码片段输出
- en: Use this ID to create an internal link.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用此ID来创建内部链接。
- en: 'The syntax for creating an internal link is as follows:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 创建内部链接的语法如下：
- en: '[PRE20]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'For example, for the Simple Operations section, we need to do the following:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于简单操作章节，我们需要做以下操作：
- en: '![](img/e9bad13e-d061-4096-aef0-b680ea2f199a.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e9bad13e-d061-4096-aef0-b680ea2f199a.png)'
- en: LaTex snippet and output after creating an internal link
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 创建内部链接后的LaTex代码片段和输出
- en: Note how Simple Operations now appears as a hyperlink. Clicking on this would
    take the user to the Simple Operations section.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，简单操作现在已显示为超链接。点击它将把用户带到简单操作章节。
- en: 'Similarly, we can define section IDs for all the other sections:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以为所有其他章节定义章节ID：
- en: '![](img/2a0a62bd-e097-4b17-abdf-5f04c491de7c.png)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a0a62bd-e097-4b17-abdf-5f04c491de7c.png)'
- en: LaTex snippet for different section IDs
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 不同章节ID的LaTex代码片段
- en: 'Please note that the section ID definition should happen immediately before
    the section header markdown cell to mark the section ID definition cell as the
    beginning of that section. This has been shown as the bulk definition, just for
    illustration purposes:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，章节ID的定义应紧跟在章节标题的Markdown单元格之前，以将该单元格标记为该章节的开始。这在大宗定义中已示例，仅为说明目的：
- en: '![](img/6addddf2-d875-4767-a85c-52fbcb7d4fe3.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6addddf2-d875-4767-a85c-52fbcb7d4fe3.png)'
- en: LaTex snippet for different internal links referring to section IDs
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 用于不同内部链接的LaTex代码片段，指向章节ID
- en: 'Notice how the `<br>` tag has been used at the end of each line. This tag denotes
    a line break and takes the text that appears after it to the next line:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 注意如何在每行的末尾使用了`<br>`标签。此标签表示换行，并将它后面的文本移到下一行：
- en: '![](img/4cc153db-6ebb-4ee4-a747-e70fe37221f0.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4cc153db-6ebb-4ee4-a747-e70fe37221f0.png)'
- en: LaTex output for different internal links referring to section IDs
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 不同内部链接指向章节ID的LaTex输出
- en: Sharing Jupyter Notebook reports
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享Jupyter Notebook报告
- en: Once reports have been created, they need to shared to their audience for consumption.
    There are several options for sharing these reports. Let's take a look at these
    options now.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦报告被创建，它们就需要与受众共享以供使用。分享这些报告有几个选项。现在我们来看一下这些选项。
- en: Using NbViewer
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用NbViewer
- en: 'NbViewer is an online viewer for `ipynb` files. The following steps need to
    be followed if we wish to use this option to share Jupyter Notebook reports:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: NbViewer是一个用于查看`ipynb`文件的在线查看器。如果我们希望使用此选项分享Jupyter Notebook报告，需要按照以下步骤操作：
- en: Save the report as an `ipynb` file.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将报告保存为`ipynb`文件。
- en: Upload the `ipynb` file to GitHub and get the URL for this file.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`ipynb`文件上传到GitHub并获取该文件的URL。
- en: Paste the URL from *Step 2* into NbViewer. NbViewer can be accessed from [www.nbviewer.jupyter.org](http://www.nbviewer.jupyter.org).
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将*步骤 2*中的 URL 粘贴到 NbViewer 中。NbViewer 可以通过 [www.nbviewer.jupyter.org](http://www.nbviewer.jupyter.org)
    访问。
- en: Use this GitHub URL where we shared the Notebook that we used in this chapter: 
     [https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.ipynb](https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.ipynb).
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用这个 GitHub URL，我们在本章中使用的 Notebook 已经共享：[https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.ipynb](https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.ipynb)。
- en: Using the browser
  id: totrans-337
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用浏览器
- en: Reports can also be saved as HTML files. These HTML files can be viewed directly
    in any normal browser by double-clicking them and choosing a browser as the default
    program for HTML files. One such example file can be obtained at this link.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 报告也可以保存为 HTML 文件。这些 HTML 文件可以直接在任何普通浏览器中查看，只需双击它们并选择一个浏览器作为 HTML 文件的默认程序。可以通过这个链接获得一个示例文件。
- en: '[https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.html](https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.html).
    [](https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.html)'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.html](https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.html)。
    [](https://github.com/ashishbt08b004/Experiments/blob/master/writing_equations_in_jupyter.html)'
- en: Using Jupyter Hub
  id: totrans-340
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Jupyter Hub
- en: Jupyter Hub is a Python program that can be used to deploy and share Jupyter
    Notebook reports to multiple users. It can be thought of as a multi-user version
    of the normal Jupyter Notebook and is accessible through URLs; it is frequently
    used by companies, research groups, and course instructors to share their experiments
    and knowledge with a large group in an interactive environment.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Hub 是一个 Python 程序，可以用于部署和共享 Jupyter Notebook 报告给多个用户。它可以看作是普通 Jupyter
    Notebook 的多用户版本，通过 URL 进行访问；它通常被公司、研究小组和课程讲师用来与大规模的群体分享实验和知识，提供交互式环境。
- en: This works on Linux machines and is mostly deployed on a machine with huge computing
    power. This can be either a cloud or on-premise machine.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序在 Linux 机器上运行，通常部署在具有强大计算能力的机器上。这可以是云端或本地机器。
- en: 'Four subsystems make up JupyterHub:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: JupyterHub 由四个子系统组成：
- en: A **Hub** (tornado process), which is the heart of JupyterHub.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**Hub**（tornado 进程），是 JupyterHub 的核心。
- en: A **configurable http proxy** (node-http-proxy) that receives requests from
    the client's browser.
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**可配置的 http 代理**（node-http-proxy），接收来自客户端浏览器的请求。
- en: Multiple **single-user Jupyter notebook servers** (Python/IPython/tornado) that
    are monitored by spawners.
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个**单用户 Jupyter notebook 服务器**（Python/IPython/tornado），由生成器进行监控。
- en: 'An **authentication class** that manages how users can access the system:'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**认证类**，管理用户如何访问系统：
- en: '![](img/9e4f694b-6a47-4307-a950-52fb10cea86b.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e4f694b-6a47-4307-a950-52fb10cea86b.png)'
- en: Jupyter Hub architecture
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Hub 架构
- en: 'There are a few prerequisites for installing Jupyter Hub:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Jupyter Hub 有一些前提条件：
- en: A Linux machine (cloud or on-premise)
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台 Linux 机器（云端或本地）
- en: Python 3.5+
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.5+
- en: Nodejs/npm
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nodejs/npm
- en: TLS certificate and the key for HTTPS communication
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS 证书和用于 HTTPS 通信的密钥
- en: Domain name for the machine/server
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器/服务器的域名
- en: Jupyter Hub gives a server-client kind of multi-user environment where data
    and `ipynb` files can be shared with multiple users. It provides multiple robust
    features for security and login authentication.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Hub 提供了一个服务器-客户端类型的多用户环境，数据和 `ipynb` 文件可以与多个用户共享。它提供了多个强大的安全性和登录认证功能。
- en: The following guides can be followed for the installation and deployment of
    a notebook report for multiple users: [https://tljh.jupyter.org/en/latest/](https://tljh.jupyter.org/en/latest/)[.](https://tljh.jupyter.org/en/latest/)
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 以下指南可以用于多用户的 Notebook 报告安装和部署：[https://tljh.jupyter.org/en/latest/](https://tljh.jupyter.org/en/latest/)[.](https://tljh.jupyter.org/en/latest/)
- en: Summary
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'This chapter focused on three main themes: styling and result formatting options
    in pandas, creating interactive dashboards in Jupyter Notebook, and exploring
    formatting and typesetting options in Jupyter Notebook to create powerful reports.'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 本章集中讨论了三个主要主题：pandas 中的样式和结果格式选项、在 Jupyter Notebook 中创建交互式仪表板，以及探索 Jupyter Notebook
    中的格式化和排版选项以创建强大的报告。
- en: Output formatting such as conditional formatting, bold and italics output, highlighting
    certain sections, and so on can be done by styling options in pandas. Basic interactive
    dashboards can be created in Jupyter Notebook. LaTex, and MathJax and provide
    powerful typesetting and markdown options for writing equations and formatting
    text. Reports can be shared as `ipynb` files on GitHub, and can be viewed in an
    online viewer called **NbViewer**. Jupyter Hub is the multi-user server-based
    deployment method.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 输出格式化，例如条件格式、粗体和斜体输出、突出显示某些部分等，可以通过 pandas 的样式选项完成。基本的交互式仪表板可以在 Jupyter Notebook
    中创建。LaTex 和 MathJax 提供了强大的排版和 Markdown 选项，用于编写方程式和格式化文本。报告可以作为`ipynb`文件分享到 GitHub，并通过名为
    **NbViewer** 的在线查看器查看。Jupyter Hub 是一种基于服务器的多用户部署方式。
- en: In the next chapter, we will look at how pandas can be used to perform statistical
    calculations using packages; we will also perform calculations from scratch.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何使用 pandas 进行统计计算，包括使用包进行计算；我们还将从零开始进行计算。
