- en: Installation of pandas and Supporting Software
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 和支持软件的安装
- en: Before we can start work on pandas for doing data analysis, we need to make
    sure that the software is installed and the environment is in proper working order.
    This chapter deals with the installation of Python (if necessary), the pandas
    library, and all necessary dependencies for the Windows, macOS/X, and Linux platforms.
    The topics we address include, among other things, selecting a version of Python,
    installing Python, and installing pandas.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用 pandas 进行数据分析之前，我们需要确保软件已安装且环境正常工作。本章涉及 Python（如有必要）、pandas 库及 Windows、macOS/X
    和 Linux 平台所需的所有依赖项的安装。我们将讨论的主题包括选择 Python 版本、安装 Python 和安装 pandas 等内容。
- en: The steps outlined in the following section should work for the most part, but
    your mileage may vary depending upon the setup. On different operating system
    versions, the scripts may not always work perfectly, and the third-party software
    packages already in the system may sometimes conflict with the instructions provided.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分列出的步骤大部分应该是适用的，但根据设置的不同，效果可能有所不同。在不同操作系统版本中，脚本可能并不总是能完美运行，而且系统中已经安装的第三方软件包有时可能会与提供的说明发生冲突。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Selecting a version of Python to use
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择使用的 Python 版本
- en: Installation of Python and pandas using Anaconda
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Anaconda 安装 Python 和 pandas
- en: Dependency packages for pandas
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 的依赖包
- en: Review of items installed with Anaconda
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看使用 Anaconda 安装的项目
- en: Cross tooling—combining the pandas awesomeness with R, Julia, H20.ai, and Azure
    ML Studio command line tricks for pandas
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨工具整合——将 pandas 的强大功能与 R、Julia、H20.ai、Azure ML Studio 命令行技巧结合使用
- en: Options and settings for Pandas
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pandas 的选项和设置
- en: Selecting a version of Python to use
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择使用的 Python 版本
- en: This is a classic battle among Python developers—Python 2.7.x or Python 3.x—which
    is better? Until a year back, it was Python 2.7.x that topped the charts; the
    reason being it was a stable version. More than 70% of projects used Python 2.7,
    in the year 2016\. This number began to fall and by 2017 it was 63%. This shift
    in trends was due to the announcement that Python 2.7 would not be maintained
    from January 1, 2018, meaning that there would be no more bug fixes or new releases.
    Some libraries released after this announcement are only compatible with Python
    3.x. Several businesses have started migrating towards Python 3.x. Hence, as of
    2018, Python 3.x is the preferred version.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Python 开发者之间的经典之争——Python 2.7.x 还是 Python 3.x，哪个更好？直到一年前，Python 2.7.x 一直是排名第一的版本；原因是它是一个稳定的版本。2016
    年，超过 70% 的项目使用 Python 2.7。这个比例开始下降，到 2017 年降至 63%。这种趋势的转变是因为宣布从 2018 年 1 月 1 日起，Python
    2.7 将不再维护，意味着不会有更多的错误修复或新版本发布。一些在此公告后发布的库仅与 Python 3.x 兼容。许多企业已经开始向 Python 3.x
    迁移。因此，从 2018 年开始，Python 3.x 成为首选版本。
- en: For further information, please see [https://wiki.python.org/moin/Python2orPython3](https://wiki.python.org/moin/Python2orPython3).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多信息，请参见 [https://wiki.python.org/moin/Python2orPython3](https://wiki.python.org/moin/Python2orPython3)。
- en: The main differences between Python 2.x and 3 include better Unicode support
    in Python 3, `print` and `exec` changed to functions, and integer division. For
    more details, see *What's New in Python 3.0* at [http://docs.python.org/3/whatsnew/3.0.html](http://docs.python.org/3/whatsnew/3.0.html).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Python 2.x 和 3.x 之间的主要区别包括 Python 3 更好的 Unicode 支持，`print` 和 `exec` 被更改为函数，以及整数除法。详细信息请参见
    *Python 3.0 中的新特性*，网址为 [http://docs.python.org/3/whatsnew/3.0.html](http://docs.python.org/3/whatsnew/3.0.html)。
- en: 'However, for scientific, numeric, or data analysis work, Python 2.7 is recommended
    over Python 3 for the following reason: Python 2.7 is the preferred version for
    most current distributions, and the support for Python 3.x is not as strong for
    some libraries, although that is increasingly becoming less of an issue.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于科学、数值或数据分析工作，推荐使用 Python 2.7 而不是 Python 3，原因如下：Python 2.7 是大多数当前发行版的首选版本，而
    Python 3.x 在某些库的支持上并不强劲，尽管这个问题正逐渐得到解决。
- en: For reference, have a look at the documentation titled *Will Scientists Ever
    Move to Python 3?* at [http://bit.ly/1DOgNuX](http://bit.ly/1DOgNuX). Hence, this
    book will use a mix of Python 2.7 and 3.x as and when required. Translating Python
    code from 2.7 to 3.x or vice versa is not difficult, and the following documentation
    can be used as a reference *Porting Python 2 Code to Python 3* at [http://docs.python.org/2/howto/pyporting.html](http://docs.python.org/2/howto/pyporting.html).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，可以查看名为*科学家们会转向Python 3吗？*的文档，网址为[http://bit.ly/1DOgNuX](http://bit.ly/1DOgNuX)。因此，本书将在需要时混合使用Python
    2.7和3.x版本。将Python 2.7的代码转换为3.x，或反之并不困难，以下文档可以作为参考：*将Python 2代码移植到Python 3*，网址为[http://docs.python.org/2/howto/pyporting.html](http://docs.python.org/2/howto/pyporting.html)。
- en: However, there is a middle ground and a way to get the best of the both worlds.
    One can use the `virtualenv` package in Python that allows you to create separate
    light virtual environments from within the installed Python environment. This
    makes it possible to have, for example, the 2.7 version installed on your machine
    and to access and run the 3.x version code by launching a virtual environment
    in your computer using `virtualenv`. This virtual environment is just a separate
    installation/instance of Python at a separate location. One can install the packages
    compatible with that version and do all the computations citing that version/installation
    while running. You can create as many virtual environments as you wish. This package
    comes pre-installed with the Anaconda distribution. You can visit the following
    website for more details on using `virtualenv`: [https://docs.python-guide.org/dev/virtualenvs/](https://docs.python-guide.org/dev/virtualenvs/).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还是有一个中间方案，可以兼顾两者的优点。可以使用Python中的`virtualenv`包，它允许你在已安装的Python环境中创建独立的轻量级虚拟环境。这使得例如你可以在机器上安装2.7版本，并通过启动虚拟环境在计算机上访问和运行3.x版本的代码。这个虚拟环境只是一个位于不同位置的Python独立安装/实例。可以安装与该版本兼容的包，并在运行时引用该版本/安装进行所有计算。你可以创建任意多个虚拟环境。这个包在Anaconda发行版中预装。你可以访问以下网站，了解更多关于如何使用`virtualenv`的信息：[https://docs.python-guide.org/dev/virtualenvs/](https://docs.python-guide.org/dev/virtualenvs/)。
- en: 'The latest major release of pandas—pandas 0.23.4—was in August, 2018\. The
    following are some of the interesting feature upgrades that were made:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: pandas的最新主要版本是pandas 0.23.4，发布于2018年8月。以下是一些有趣的功能升级：
- en: Reading and writing JSON I pandas has been made more elegant as metadata will
    be preserved with the `orient = True`option set.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，读取和写入JSON的操作变得更加优雅，因为在设置`orient = True`选项时，元数据将被保留。
- en: For Python 3.6 and above, the dictionary will be assigned an order based on
    the order in which the entities were inserted. This order will be carried over
    to DataFrames or a series created from the dict.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于Python 3.6及以上版本，字典将根据插入实体的顺序分配顺序。这个顺序会被传递到由字典创建的DataFrame或系列中。
- en: Merging and sorting could now make use of a combination of index names and column
    names.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并和排序现在可以同时使用索引名称和列名称的组合。
- en: Earlier, the `DataFrame.apply()` function with `axis = 1` returned a list-like
    object. The latest improvements to pandas have modified the output to be of a
    consistent shape—either a series or a DataFrame.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 之前，`DataFrame.apply()`函数使用`axis = 1`时返回的是一个类似列表的对象。最新的pandas改进修改了输出，使其具有一致的形状——要么是系列，要么是DataFrame。
- en: Categories without any observations can now be controlled in the `groupby` function
    through the `observed = True`setting.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，可以通过`observed = True`设置，在`groupby`函数中控制没有任何观察值的类别。
- en: '`DataFrame.all()` and `DataFrame.any()` now accept `axis=None` to reduce across all
    axes to a scalar.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.all()`和`DataFrame.any()`现在接受`axis=None`，以便在所有轴上汇总为一个标量。'
- en: But before we start using pandas, let's spend some time installing Python on
    our computers.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我们开始使用pandas之前，先花些时间在我们的计算机上安装Python吧。
- en: Standalone Python installation
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 独立安装Python
- en: Here, we detail the standalone installation of Python on multiple platforms—Linux,
    Windows, and macOS/X. Standalone means just the IDLE IDE, interpreter, and some
    basic packages. Another option is to download from a distribution, which is a
    richer version and comes pre-installed with many utilities.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们详细介绍了在多个平台（Linux、Windows和macOS/X）上独立安装Python的方法。独立安装指的是只安装IDLE IDE、解释器和一些基本包。另一个选择是从发行版中下载，这是一种更丰富的版本，预安装了许多实用工具。
- en: Linux
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux
- en: 'If you''re using Linux, Python will most probably come pre-installed. If you''re
    not sure, type the following at Command Prompt:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Linux，Python 很可能会预装。如果不确定，可以在命令提示符下输入以下命令：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Python is likely to be found in one of the following folders on Linux, depending
    on your distribution and particular installation:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Python 可能会出现在 Linux 系统的以下文件夹之一，具体取决于你的发行版和安装方式：
- en: '`/usr/bin/python`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/bin/python`'
- en: '`/bin/python`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/bin/python`'
- en: '`/usr/local/bin/python`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/local/bin/python`'
- en: '`/opt/local/bin/python`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/opt/local/bin/python`'
- en: 'You can determine which particular version of Python is installed by typing
    the following at Command Prompt:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在命令提示符下输入以下命令来确定已安装的 Python 版本：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the rare event that Python isn''t already installed, you need to figure
    out which flavor of Linux you''re using and download and install it. Here are
    the install commands as well as links to the various Linux Python distributions:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在极少数情况下，如果 Python 没有预装，你需要弄清楚你使用的是哪种 Linux 版本，然后下载并安装。以下是安装命令以及各种 Linux Python
    发行版的链接：
- en: 'Debian/Ubuntu (14.04):'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian/Ubuntu（14.04）：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For more information, see the Debian Python page at [https://wiki.debian.org/Python](https://wiki.debian.org/Python).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多信息，请参见 Debian Python 页面：[https://wiki.debian.org/Python](https://wiki.debian.org/Python)。
- en: 'Redhat Fedora/Centos/RHEL:'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redhat Fedora/Centos/RHEL：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To install Fedora software, visit [http://docs.fedoraproject.org/en-US/Fedora/13/html/User_Guide/chap-User_Guide-Managing_software.html](http://docs.fedoraproject.org/en-US/Fedora/13/html/User_Guide/chap-User_Guide-Managing_software.html).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Fedora 软件，请访问 [http://docs.fedoraproject.org/en-US/Fedora/13/html/User_Guide/chap-User_Guide-Managing_software.html](http://docs.fedoraproject.org/en-US/Fedora/13/html/User_Guide/chap-User_Guide-Managing_software.html)。
- en: 'openSUSE:'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: openSUSE：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: More information on installing software can be found at [http://en.opensuse.org/YaST_Software_Management](http://en.opensuse.org/YaST_Software_Managemen).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有关安装软件的更多信息，请访问 [http://en.opensuse.org/YaST_Software_Management](http://en.opensuse.org/YaST_Software_Managemen)。
- en: '**Slackware**: For this distribution of Linux, it may be best to download a
    compressed tarball and install it from the source, as described in the following
    section.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Slackware**：对于这个 Linux 发行版，最好从源代码下载压缩的 tarball 并安装，具体操作请参见以下部分。'
- en: Installing Python from a compressed tarball
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从压缩 tarball 安装 Python
- en: 'If none of the preceding methods works for you, you can also download a compressed
    tarball (XZ or Gzip) and get it installed. Here is a brief synopsis of the steps:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果以上方法都无法解决问题，你还可以下载压缩的 tarball（XZ 或 Gzip 格式），然后进行安装。以下是简要的步骤概述：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Information on this can be found on the Python download page at [http://www.python.org/download/](http://www.python.org/download/).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此操作的信息可以在 Python 下载页面找到：[http://www.python.org/download/](http://www.python.org/download/)。
- en: Windows
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows
- en: Unlike Linux and Mac distributions, Python does not come pre-installed on Windows.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Linux 和 Mac 发行版不同，Python 在 Windows 上并不预装。
- en: Core Python installation
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 核心 Python 安装
- en: 'The standard method is to use the Windows installers from the CPython team,
    which are MSI packages. The MSI packages can be downloaded here: [http://www.python.org/download/releases/2.7.6/](http://www.python.org/download/releases/2.7.6/).'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 标准方法是使用来自 CPython 团队的 Windows 安装程序，这些程序是 MSI 包。可以在此处下载 MSI 包：[http://www.python.org/download/releases/2.7.6/](http://www.python.org/download/releases/2.7.6/)。
- en: 'Select the appropriate Windows package depending on whether your Windows is
    the 32-bit or 64-bit version. Python by default gets installed to a folder containing
    the version number, so, in this case, it will be installed to the following location:
    `C:\Python27`.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的 Windows 系统是 32 位还是 64 位，选择相应的 Windows 包。Python 默认安装到包含版本号的文件夹中，因此在这种情况下，它将被安装到以下位置：`C:\Python27`。
- en: 'This enables you to have multiple versions of Python running without problems.
    Upon installation, the following folders should be added to the `PATH` environment
    variable: `C:\Python27\` and `C:\Python27\Tools\Scripts`.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得你可以无问题地运行多个版本的 Python。安装后，以下文件夹应该被添加到 `PATH` 环境变量中：`C:\Python27\` 和 `C:\Python27\Tools\Scripts`。
- en: Installing third-party Python and packages
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装第三方 Python 和包
- en: There are a couple of Python tools that need to be installed in order to make
    the installation of other packages such as pandas easier. Install `Setuptools`
    and `pip`. Setuptools is very useful for installing other Python packages such
    as pandas. It adds to the packaging and installation functionality that is provided
    by the `distutils` tool in the standard Python distribution.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些 Python 工具需要安装，以便更轻松地安装其他包（如 pandas）。安装 `Setuptools` 和 `pip`。Setuptools 对安装其他
    Python 包（如 pandas）非常有用。它增强了标准 Python 分发版中 `distutils` 工具所提供的打包和安装功能。
- en: 'To install Setuptools, download the `ez_setup.py` script from the following
    link: [https://bitbucket.org/pypa/setuptools/raw/bootstrap](https://bitbucket.org/pypa/setuptools/raw/bootstrap).'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Setuptools，请从以下链接下载 `ez_setup.py` 脚本：[https://bitbucket.org/pypa/setuptools/raw/bootstrap](https://bitbucket.org/pypa/setuptools/raw/bootstrap)。
- en: Then, save it to `C:\Python27\Tools\Scripts`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将其保存到 `C:\Python27\Tools\Scripts`。
- en: 'Then, run `ez_setup.py`: `C:\Python27\Tools\Scripts\ez_setup.py`.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行 `ez_setup.py`：`C:\Python27\Tools\Scripts\ez_setup.py`。
- en: 'The `pip` associated command provides the developer with an easy-to-use command
    that enables a quick and easy installation of Python modules. Download the `get-pip`
    script from the following link: [http://www.pip-installer.org/en/latest/](http://www.pip-installer.org/en/latest/).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip` 相关命令为开发者提供了一个易于使用的命令，能快速、轻松地安装 Python 模块。请从以下链接下载 `get-pip` 脚本：[http://www.pip-installer.org/en/latest/](http://www.pip-installer.org/en/latest/)。'
- en: 'Then, run it from the following location: `C:\Python27\Tools\Scripts\get-pip.py`.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，从以下位置运行它：`C:\Python27\Tools\Scripts\get-pip.py`。
- en: For reference, you can also go through the documentation titled *Installing
    Python on Windows* at [http://docs.python-guide.org/en/latest/starting/install/win/](http://docs.python-guide.org/en/latest/starting/install/win/).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，你还可以阅读名为 *在 Windows 上安装 Python* 的文档：[http://docs.python-guide.org/en/latest/starting/install/win/](http://docs.python-guide.org/en/latest/starting/install/win/)。
- en: 'There are also third-party providers of Python on Windows that make the task
    of installation even easier. They are listed as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，也有一些第三方 Python 提供商，使得安装任务更加简便。它们列举如下：
- en: '**Enthought**: [https://enthought.com/](https://enthought.com/)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Enthought**: [https://enthought.com/](https://enthought.com/)'
- en: '**Continuum Analytics**: [http://www.continuum.io/](http://www.continuum.io/)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Continuum Analytics**: [http://www.continuum.io/](http://www.continuum.io/)'
- en: '**Active State Python**: [http://www.activestate.com/activepython](http://www.activestate.com/activepython)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Active State Python**: [http://www.activestate.com/activepython](http://www.activestate.com/activepython)'
- en: macOS/X
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: macOS/X
- en: 'Python 2.7 comes pre-installed on the current and recent releases (for the
    past five years) of macOS X. The pre-installed Apple-provided build can be found
    in the following folders on the Mac:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Python 2.7 已预装在当前和近五年的 macOS X 版本中。预装的由 Apple 提供的版本可以在 Mac 的以下文件夹中找到：
- en: '`/System/Library/Frameworks/Python.framework`'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/System/Library/Frameworks/Python.framework`'
- en: '`/usr/bin/python`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/bin/python`'
- en: However, you can install your own version from [http://www.python.org/download/](http://www.python.org/download/).
    The one caveat to this is that you will now have two installations of Python,
    and you have to be careful to make sure the paths and environments are cleanly
    separated.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你也可以从 [http://www.python.org/download/](http://www.python.org/download/)
    安装自己的版本。需要注意的是，这样你将有两个 Python 安装版本，你需要小心确保路径和环境的分隔清晰。
- en: Installation using a package manager
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用包管理器进行安装
- en: 'Python can also be installed using a package manager on the Mac, such as Macports
    or Homebrew. I will discuss installation using Homebrew here as it seems to be
    the most user-friendly. For reference, you can go through the documentation titled
    *Installing Python on* macOS *X* at [http://docs.python-guide.org/en/latest/starting/install/osx/](http://docs.python-guide.org/en/latest/starting/install/osx/).
    Here is a summary of the steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Python 也可以通过包管理器在 Mac 上安装，例如 Macports 或 Homebrew。我将讨论使用 Homebrew 安装的过程，因为它看起来是最用户友好的。作为参考，你可以阅读名为
    *在 macOS X 上安装 Python* 的文档：[http://docs.python-guide.org/en/latest/starting/install/osx/](http://docs.python-guide.org/en/latest/starting/install/osx/)。以下是步骤的摘要：
- en: 'Install Homebrew and run the following command:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Homebrew 并运行以下命令：
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You then need to add the Homebrew folder at the top of your `PATH` environment
    variable.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你需要将 Homebrew 文件夹添加到 `PATH` 环境变量的顶部。
- en: 'Install Python 2.7 at the Unix prompt:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Unix 提示符下安装 Python 2.7：
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Install third-party software – distribute and pip. Installation of Homebrew
    automatically installs these packages. Distribute and pip enable you to easily
    download and install/uninstall Python packages.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装第三方软件 – distribute 和 pip。安装 Homebrew 会自动安装这些包。distribute 和 pip 使你能够轻松下载并安装/卸载
    Python 包。
- en: Installation of Python and pandas using Anaconda
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Anaconda 安装 Python 和 pandas
- en: After a standalone installation of Python, each library will have to be separately
    installed. It is a bit of a hassle to ensure version compatibility between newly
    installed libraries and the associated dependencies. This is where a third-party
    distribution like Anaconda comes in handy. Anaconda is the most widely used distribution
    for Python/R, designed for developing scalable data science solutions.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在单独安装 Python 后，每个库都必须单独安装。确保新安装的库与相关依赖项的版本兼容会稍显麻烦。这时，像 Anaconda 这样的第三方发行版就派上用场了。Anaconda
    是 Python/R 最广泛使用的发行版，专为开发可扩展的数据科学解决方案而设计。
- en: What is Anaconda?
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Anaconda？
- en: Anaconda is an open source Python/R distribution, developed to seamlessly manage
    packages, dependencies and environments. It is compatible with Windows, Linux
    and macOS and requires 3 GB of disk space. It needs this memory to download and
    install quite a collection of IDEs and more than 720 packages. For instance, NumPy
    and pandas are two of the packages that come pre-installed with Anaconda.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 是一个开源的 Python/R 发行版，旨在无缝管理包、依赖关系和环境。它兼容 Windows、Linux 和 macOS，并需要 3
    GB 的磁盘空间。由于需要下载和安装大量 IDE 和超过 720 个包，因此需要这一内存。例如，NumPy 和 pandas 是 Anaconda 中预装的两个包。
- en: 'The following image shows a summary of the constituents of the Anaconda distribution.
    Each component has been summarized in the list:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 下图总结了 Anaconda 发行版的组成部分。每个组件已在列表中总结：
- en: '**ANACONDA NAVIGATOR**: A portal to access all the IDEs and tools'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**ANACONDA NAVIGATOR**：一个入口，访问所有 IDE 和工具'
- en: '**ANACONDA PROJECT**: Reproducible experiments saved as a file using notebooks
    with text guidelines, code snippets, and their output'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**ANACONDA PROJECT**：使用带有文本指南、代码片段及其输出的笔记本保存可重复的实验'
- en: '**DATA SCIENCE LIBRARIES**: Includes pre-installed packages for IDEs, scientific
    computing, visualization, and machine learning'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据科学库**：包括预安装的 IDE、科学计算、可视化和机器学习的包'
- en: '**CONDA**: A command line-based package manager to install, uninstall, and
    upgrade packages/libraries:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**CONDA**：一个基于命令行的包管理器，用于安装、卸载和升级包/库：'
- en: '![](img/dfda46b1-af7d-4e9b-bd27-6eb802ed1088.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfda46b1-af7d-4e9b-bd27-6eb802ed1088.png)'
- en: Utilities under Anaconda
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 下的工具
- en: Why Anaconda?
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择 Anaconda？
- en: Anaconda makes program development easier, and it is a tool of choice for beginners.
    Anaconda provides a simple system to set up and handle separate programming environments
    where packages can be maintained consistently to remain compatible with an application.
    This facilitates smooth collaboration and deployment. When a package is being
    installed or updated, Anaconda ensures that the dependencies are compatible and
    performs an auto-update for the dependencies if needed.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 使得程序开发变得更加容易，是初学者的首选工具。Anaconda 提供了一个简单的系统，来设置和管理独立的编程环境，确保不同包在应用程序中保持兼容性。这有助于顺利的协作和部署。在安装或更新包时，Anaconda
    会确保依赖关系兼容，并在需要时自动更新依赖项。
- en: Installing Anaconda
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Anaconda
- en: 'Separate Anaconda installers are available for 32-bit OS and 64-bit OSes. Also,
    there are different installers for Python 2.7 and Python 3.7\. The installer can
    be downloaded from [https://www.anaconda.com/download/](https://www.anaconda.com/download/).
    The website would have the following options shown in the screenshot:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 安装程序分别提供了 32 位操作系统和 64 位操作系统的版本。此外，Python 2.7 和 Python 3.7 也有不同的安装程序。可以从
    [https://www.anaconda.com/download/](https://www.anaconda.com/download/) 下载。该网站会显示以下选项，如截图所示：
- en: '![](img/f628cfb6-e01d-4371-865e-ea6fcc0ed9a7.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f628cfb6-e01d-4371-865e-ea6fcc0ed9a7.png)'
- en: Anaconda installers for different platforms
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 针对不同平台的 Anaconda 安装程序
- en: Observe the following steps to install Anaconda on a Windows machine once the
    download is done.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，按照以下步骤在 Windows 机器上安装 Anaconda。
- en: Windows Installation
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows 安装
- en: Download the Windows installer (the 32-bit/64-bit version).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 Windows 安装程序（32 位/64 位版本）。
- en: Launch the `.exe` file after the download completes.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载完成后，启动 `.exe` 文件。
- en: Follow the instructions and accept the license terms.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照指示操作并接受许可协议。
- en: Specify the destination for the installation.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定安装目标路径。
- en: 'Dialogue boxes like these should guide you through the next steps. Go with
    the default options unless you want to customize the destination folders or don''t
    want to install certain features:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的对话框应该会引导你完成接下来的步骤。除非你希望自定义目标文件夹或不想安装某些功能，否则选择默认选项：
- en: '![](img/30c5c1a0-4d69-4af4-9e46-82b26b08d6e9.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/30c5c1a0-4d69-4af4-9e46-82b26b08d6e9.png)'
- en: Windows installation of Anaconda
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Windows版Anaconda安装
- en: If you are a Mac user instead, follow the following steps for installing Anaconda
    on a windows machine once the download is done.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是Mac用户，完成下载后，按照以下步骤在Windows机器上安装Anaconda。
- en: macOS Installation
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: macOS安装
- en: 'Download the macOS installer (the 32-bit/64-bit version):'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 下载macOS安装程序（32位/64位版本）：
- en: Launch the `.pkg` file after the download completes by double-clicking it.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载完成后，通过双击`.pkg`文件启动安装。
- en: Follow the instructions and accept the license terms.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照指示操作并接受许可协议。
- en: It is recommended to install Anaconda in the home user directory.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐将Anaconda安装在用户的主目录中。
- en: 'Dialogue boxes like these should appear once you start installing. Just follow
    the instructions:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 安装时，应该会出现这样的对话框。只需按照指示操作即可：
- en: '![](img/b8d3e4fb-9a0f-4fff-82f4-d47ff4a07950.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b8d3e4fb-9a0f-4fff-82f4-d47ff4a07950.png)'
- en: macOS installation of Anaconda
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: macOS版Anaconda安装
- en: Follow the following steps for a Linux installation.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤进行Linux安装。
- en: Linux Installation
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux安装
- en: 'Download the macOS installer (the 32-bit/64-bit version):'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 下载macOS安装程序（32位/64位版本）：
- en: Enter the following commands in the shell to start installation.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在终端输入以下命令开始安装。
- en: 'For Python 3.7 installer, enter the following:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python 3.7安装程序，输入以下命令：
- en: '[PRE8]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'For Python 2.7 installer, enter the following:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python 2.7安装程序，输入以下命令：
- en: '[PRE9]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Enter `Yes` to accept the license agreement.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入`Yes`以接受许可协议。
- en: Accept the default installation location or choose a new location to complete
    the installation.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接受默认的安装位置或选择一个新位置来完成安装。
- en: Cloud installation
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云端安装
- en: Anaconda can also be installed on a cloud machine provided by popular cloud
    infrastructure providers like AWS and Azure. Depending on which kind of instance
    (Linux or Windows) you choose on your cloud account, similar steps as described
    previously can be followed to install Anaconda on your cloud machine.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda也可以安装在AWS和Azure等流行云基础设施提供商提供的云机器上。根据你在云账户中选择的实例类型（Linux或Windows），可以按照之前描述的类似步骤在云机器上安装Anaconda。
- en: 'There are two ways you can get Anaconda running on your cloud machine:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过两种方式在云机器上运行Anaconda：
- en: 'Choose a machine with Anaconda pre-installed on it—AWS and Azure provide machines
    with many software packages pre-installed on them. You can choose one of the machines
    that has Anaconda. The following link has more details: [https://aws.amazon.com/marketplace/seller-profile?id=29f81979-a535-4f44-9e9f-6800807ad996](https://aws.amazon.com/marketplace/seller-profile?id=29f81979-a535-4f44-9e9f-6800807ad996)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择一台预先安装了Anaconda的机器——AWS和Azure提供许多预装了软件包的机器。你可以选择一台已安装Anaconda的机器。以下链接提供了更多详情：[https://aws.amazon.com/marketplace/seller-profile?id=29f81979-a535-4f44-9e9f-6800807ad996](https://aws.amazon.com/marketplace/seller-profile?id=29f81979-a535-4f44-9e9f-6800807ad996)
- en: Choose a Linux/Windows machine and install Anaconda on it. This is a better
    and cheaper option giving you more flexibility for the cost of a little installation
    effort. Once you launch your cloud machine, it involves similar steps as the previous
    installation steps. The following link has the end-to-end steps for installation
    using a cloud, [https://chrisalbon.com/aws/basics/run_project_jupyter_on_amazon_ec2/](https://chrisalbon.com/aws/basics/run_project_jupyter_on_amazon_ec2/).
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择一台Linux/Windows机器并在其上安装Anaconda。这是一个更好的、更经济的选项，提供更多的灵活性，只需要稍微的安装工作。一旦启动云机器，安装步骤与之前的步骤类似。以下链接提供了使用云进行安装的完整步骤，[https://chrisalbon.com/aws/basics/run_project_jupyter_on_amazon_ec2/](https://chrisalbon.com/aws/basics/run_project_jupyter_on_amazon_ec2/)。
- en: Other numeric and analytics-focused Python distributions
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他以数字和分析为重点的Python发行版
- en: 'The following outlines various third-party data analysis-related Python distributions,
    apart from Anaconda. All of the following distributions include pandas:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下概述了除了Anaconda之外的各种第三方数据分析相关的Python发行版。所有以下发行版都包括pandas：
- en: '**Enthought Canopy**: This is a comprehensive Python data analysis environment.
    For more information, refer to [https://www.enthought.com/products/canopy/](https://www.enthought.com/products/canopy/).'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Enthought Canopy**：这是一个综合性的Python数据分析环境。欲了解更多信息，请访问[https://www.enthought.com/products/canopy/](https://www.enthought.com/products/canopy/)。'
- en: '**Python(x,y)**: This is a free scientific and engineering-oriented Python
    distribution for numerical computing, data analysis, and visualization. It is
    based on the Qt GUI package and Spyder interactive scientific development environment.
    For more information, refer to [http://python-xy.github.io/](http://python-xy.github.io/).'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Python(x,y)**：这是一个免费的、面向科学计算、数据分析和可视化的 Python 发行版，适用于数值计算。它基于 Qt GUI 包和 Spyder
    交互式科学开发环境。欲了解更多信息，请参阅 [http://python-xy.github.io/](http://python-xy.github.io/)。'
- en: '**WinPython**: This is a free open source distribution of Python for the Windows
    platform focused on scientific computing. For more information, refer to [http://winpython.sourceforge.net/](http://winpython.sourceforge.net/).'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WinPython**：这是一个面向 Windows 平台的免费的开源 Python 发行版，专注于科学计算。欲了解更多信息，请参阅 [http://winpython.sourceforge.net/](http://winpython.sourceforge.net/)。'
- en: For more information on Python distributions, go to [http://bit.ly/1yOzB7o](http://bit.ly/1yOzB7o).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Python 发行版的更多信息，请访问 [http://bit.ly/1yOzB7o](http://bit.ly/1yOzB7o)。
- en: Dependency packages for pandas
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 的依赖包
- en: Please note that if you are using Anaconda distribution, you don't need to install
    pandas separately and hence don't need to worry about installing the dependencies.
    It is still good to know the dependency packages that are being used behind the
    hood in pandas to better understand the functioning.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果你使用的是 Anaconda 发行版，则无需单独安装 pandas，因此也不需要担心安装依赖项。但了解 pandas 背后使用的依赖包仍然是有益的，有助于更好地理解其功能。
- en: 'At the time of writing, the latest stable version of pandas is the 0.23.4 version.
    The various dependencies along with the associated download locations are as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 截至撰写时，pandas 的最新稳定版本为 0.23.4 版本。各种依赖包及其相关下载位置如下：
- en: '| **Package** | **Required** | **Description** | **Download location** |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| **Package** | **必需** | **描述** | **下载位置** |'
- en: '| `NumPy : 1.9.0` or higher | Required | NumPy library for numerical operations
    | [http://www.numpy.org/](http://www.numpy.org/) |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| `NumPy : 1.9.0` 或更高版本 | 必需 | 用于数值运算的 NumPy 库 | [http://www.numpy.org/](http://www.numpy.org/)
    |'
- en: '| `python-dateutil` 2.5.0 | Required | Date manipulation and utility library
    | [http://labix.org/](http://labix.org/) |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| `python-dateutil` 2.5.0 | 必需 | 日期操作和工具库 | [http://labix.org/](http://labix.org/)
    |'
- en: '| `Pytz` | Required | Time zone support | [http://sourceforge.net/](http://sourceforge.net/)
    |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| `Pytz` | 必需 | 时区支持 | [http://sourceforge.net/](http://sourceforge.net/) |'
- en: '| `Setuptools 24.2.0` | Required | Packaging Python projects | [https://setuptools.readthedocs.io/en/latest/](https://setuptools.readthedocs.io/en/latest/)
    |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| `Setuptools 24.2.0` | 必需 | 打包 Python 项目 | [https://setuptools.readthedocs.io/en/latest/](https://setuptools.readthedocs.io/en/latest/)
    |'
- en: '| `Numexpr` | Optional, recommended | Speeding up of numerical operations |
    [https://code.google.com/](https://code.google.com/) |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| `Numexpr` | 可选，推荐 | 加速数值运算 | [https://code.google.com/](https://code.google.com/)
    |'
- en: '| `bottleneck` | Optional, recommended | Performance related | [http://berkeleyanalytics.com/](http://berkeleyanalytics.com/)
    |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| `bottleneck` | 可选，推荐 | 性能相关 | [http://berkeleyanalytics.com/](http://berkeleyanalytics.com/)
    |'
- en: '| `Cython` | Optional, recommended | C-extensions for Python used for optimization
    | [http://cython.org/](http://cython.org/) |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| `Cython` | 可选，推荐 | 用于优化的 Python C 扩展 | [http://cython.org/](http://cython.org/)
    |'
- en: '| `SciPy` | Optional, recommended | Scientific toolset for Python | [http://scipy.org/](http://scipy.org/)
    |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| `SciPy` | 可选，推荐 | Python 科学工具集 | [http://scipy.org/](http://scipy.org/) |'
- en: '| `PyTables` | Optional | Library for HDF5-based storage | [http://pytables.github.io/](http://pytables.github.io/)
    |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| `PyTables` | 可选 | 用于 HDF5 存储的库 | [http://pytables.github.io/](http://pytables.github.io/)
    |'
- en: '| `matplotlib` | Optional, recommended | Matlab-like Python plotting library
    | [http://sourceforge.net/](http://sourceforge.net/) |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| `matplotlib` | 可选，推荐 | 类似 Matlab 的 Python 绘图库 | [http://sourceforge.net/](http://sourceforge.net/)
    |'
- en: '| `statsmodels` | Optional | Statistics module for Python | [http://sourceforge.net/](http://sourceforge.net/)
    |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| `statsmodels` | 可选 | Python 的统计模块 | [http://sourceforge.net/](http://sourceforge.net/)
    |'
- en: '| `Openpyxl` | Optional | Library to read/write Excel files | [https://www.python.org/](https://www.python.org/)
    |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| `Openpyxl` | 可选 | 用于读取/写入 Excel 文件的库 | [https://www.python.org/](https://www.python.org/)
    |'
- en: '| `xlrd/xlwt` | Optional | Libraries to read/write Excel files | [http://python-excel.org/](http://python-excel.org/)
    |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| `xlrd/xlwt` | 可选 | 用于读取/写入 Excel 文件的库 | [http://python-excel.org/](http://python-excel.org/)
    |'
- en: '| `Boto` | Optional | Library to access Amazon S3 | [https://www.python.org/](https://www.python.org/)
    |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| `Boto` | 可选 | 用于访问 Amazon S3 的库 | [https://www.python.org/](https://www.python.org/)
    |'
- en: '| `BeautifulSoup` and one of `html5lib`, `lxml` | Optional | Libraries needed
    for the `read_html()` function to work | [http://www.crummy.com/](http://www.crummy.com/)
    |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| `BeautifulSoup` 和 `html5lib` 或 `lxml` | 可选 | `read_html()` 函数所需的库 | [http://www.crummy.com/](http://www.crummy.com/)
    |'
- en: '| `html5lib` | Optional | Library for parsing HTML | [https://pypi.python.org/pypi/html5lib](https://pypi.python.org/pypi/html5lib)
    |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| `html5lib` | 可选 | 用于解析 HTML 的库 | [https://pypi.python.org/pypi/html5lib](https://pypi.python.org/pypi/html5lib)
    |'
- en: '| `Lmxl` | Optional | Python library for processing XML and HTML | [http://lxml.de/](http://lxml.de/)
    |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| `Lmxl` | 可选 | 用于处理 XML 和 HTML 的 Python 库 | [http://lxml.de/](http://lxml.de/)
    |'
- en: Review of items installed with Anaconda
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Anaconda 安装项回顾
- en: 'Anaconda installs more than 200 packages and several IDEs. Some of the widely
    used packages that get installed are: `NumPy`, `pandas`, `scipy`, `scikit-learn`,
    `matplotlib`, `seaborn`, `beautifulsoup4`, `nltk`, and `dask`.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 安装了超过 200 个包和多个 IDE。一些广泛使用的包包括：`NumPy`、`pandas`、`scipy`、`scikit-learn`、`matplotlib`、`seaborn`、`beautifulsoup4`、`nltk`
    和 `dask`。
- en: 'Packages, which are not installed along with Anaconda, could be installed manually
    through Conda, Anaconda''s package manager. Any package upgradation can also be
    done through Conda. Conda will fetch the packages from the Anaconda repository,
    which is huge and has more than 1400 packages. The following commands will install
    and update packages through `conda`:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Conda（Anaconda 的包管理器）可以手动安装未随 Anaconda 一起安装的包。任何包的升级也可以通过 Conda 进行。Conda
    会从 Anaconda 仓库获取包，Anaconda 仓库非常庞大，包含超过 1400 个包。以下命令将通过 `conda` 安装和更新包：
- en: To install, use `conda install pandas`
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装方法：使用 `conda install pandas`
- en: To update, use `conda update pandas`
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新方法：使用 `conda update pandas`
- en: 'The following IDEs are installed with Anaconda:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Anaconda 自带的 IDE：
- en: JupyterLab
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JupyterLab
- en: Jupyter Notebook
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter Notebook
- en: QTConsole
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QTConsole
- en: Spyder
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spyder
- en: The IDEs could be launched either through Conda or Anaconda Navigator.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这些 IDE 可以通过 Conda 或 Anaconda Navigator 启动。
- en: Anaconda Navigator is a GUI that lets you manage environments and packages and
    launch applications like Jupyter Notebook and Spyder. In essence, the Navigator
    provides an easy interface without the problems of command-line coding, and it
    is available for Windows, Linux, and macOS.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda Navigator 是一个图形用户界面（GUI），可以帮助你管理环境和包，并启动 Jupyter Notebook 和 Spyder
    等应用程序。本质上，Navigator 提供了一个无需命令行编码的简易界面，并且适用于 Windows、Linux 和 macOS 系统。
- en: 'As the following screenshot of the Anaconda Navigator shows, Anaconda provides
    a one-stop place to access Jupyter/Spyder/IPython IDEs for Python as well as RStudio
    IDE for R:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，Anaconda 提供了一个一站式平台，可以访问 Python 的 Jupyter/Spyder/IPython IDE 以及 RStudio
    IDE：
- en: '![](img/673a06c7-3c29-47f4-90b0-f73710314f89.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/673a06c7-3c29-47f4-90b0-f73710314f89.png)'
- en: The Anaconda Navigator
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda Navigator
- en: JupyterLab
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JupyterLab
- en: 'JupyterLab is a tool used to integrate notebooks, documents, and activities.
    Some of its salient features are as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: JupyterLab 是一个用于整合笔记本、文档和活动的工具。其一些显著特点如下：
- en: It has a drag and drop facility to rearrange, move, and copy notebook cells
    between notebooks
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它具有拖放功能，可以在笔记本之间重新排列、移动和复制单元格。
- en: It can run code blocks interactively from text files (`.py`, `.R`, `.md`, `.tex`,
    and so on) from within Jupyter Notebook
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以从文本文件（`.py`、`.R`、`.md`、`.tex` 等）中交互式地运行代码块，支持在 Jupyter Notebook 中运行。
- en: It can link a code console to a notebook kernel to explore code interactively
    without cluttering up the notebook with temporary scratch work
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以将代码控制台链接到笔记本内核，允许交互式地探索代码，而不必在笔记本中堆积临时的草稿工作。
- en: It can facilitate live previews and edit popular file formats, such as Markdown,
    JSON, CSV, Vega, VegaLite, and more
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以支持实时预览并编辑流行的文件格式，如 Markdown、JSON、CSV、Vega、VegaLite 等。
- en: GlueViz
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GlueViz
- en: 'Glue is a useful Python library to explore relationships within and among related
    datasets. Its main features include the following:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Glue 是一个有用的 Python 库，用于探索相关数据集之间及其内部的关系。其主要特点包括：
- en: '**Linked Statistical Graphics**: Glue helps users create scatter plots, histograms,
    and images (two- and three-dimensional) from their data.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关联统计图形**：Glue 帮助用户从数据中创建散点图、直方图和二维或三维图像。'
- en: '**Flexible linking across data**: Glue uses the logical links to overlay different
    data visualizations existing between different datasets and to relay choices across
    datasets. These links need to be specified by the user, and are arbitrarily flexible.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活的数据关联**：Glue 使用逻辑链接来叠加不同数据集之间的不同数据可视化，并跨数据集传递选择。这些链接需要由用户指定，并且可以灵活定义。'
- en: '**Full scripting capability**: Glue is written in Python, and built on top
    of its standard scientific libraries (that is, NumPy, Matplotlib, and Scipy).
    For data input, cleaning, and analysis, users can easily incorporate their own
    Python code.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整脚本功能**：Glue 是用 Python 编写的，并基于其标准科学库（即 NumPy、Matplotlib 和 Scipy）构建。对于数据输入、清理和分析，用户可以轻松地结合自己的
    Python 代码。'
- en: '**Orange**:Orange provides open source machine learning, data visualization,
    and interactive data analysis workflow. Its USPs are interactive data visualization
    and visual programming using a GUI-based environment.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Orange**：Orange 提供开源机器学习、数据可视化和互动数据分析工作流。它的独特卖点是通过基于图形界面的环境进行互动数据可视化和可视化编程。'
- en: '**Visual Studio Code**:VS Code or Visual Studio Code is a lightweight but powerful
    source code editor that runs on your desktop and is available for Windows, macOS,
    and Linux. It comes with built-in support for JavaScript, TypeScript, and Node.js,
    and it has a rich ecosystem of extensions for other languages (such as C++, C#,
    Java, Python, PHP, and Go) and runtimes (such as .NET and Unity)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Code**：VS Code 或 Visual Studio Code 是一个轻量级但功能强大的源代码编辑器，可在桌面上运行，并且适用于
    Windows、macOS 和 Linux。它内置支持 JavaScript、TypeScript 和 Node.js，并且拥有丰富的扩展生态系统，支持其他语言（如
    C++、C#、Java、Python、PHP 和 Go）及运行时（如 .NET 和 Unity）。'
- en: Walk-through of Jupyter Notebook and Spyder
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter Notebook 和 Spyder 演示
- en: Let's catch a glimpse of working with two of the widely used Python IDEs – Jupyter
    Notebook and Spyder.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速了解一下两款广泛使用的 Python IDE——Jupyter Notebook 和 Spyder。
- en: Jupyter Notebook
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter Notebook
- en: 'Jupyter gets installed during Anaconda installation. To install Jupyter without
    Anaconda, you can execute the following command in the terminal:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 在安装 Anaconda 时一起安装。如果没有 Anaconda，您可以在终端执行以下命令来安装 Jupyter：
- en: '[PRE10]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Jupyter Notebook can be opened through Anaconda Navigator or by clicking on
    the icon in the start menu, or by entering the following command in Conda:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过 Anaconda Navigator 打开 Jupyter Notebook，或者点击开始菜单中的图标，或在 Conda 中输入以下命令来打开：
- en: '[PRE11]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Jupyter Notebook opens in the browser. All folders within the startup directory
    are accessible from Jupyter. However, the main directory cannot be changed after
    opening Jupyter. A local Python server is created for Jupyter to get launched:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 在浏览器中打开。启动目录中的所有文件夹都可以从 Jupyter 访问。然而，Jupyter 启动后，主目录是无法更改的。Jupyter
    启动时会创建一个本地 Python 服务器：
- en: '![](img/95752ec2-8658-4c49-a877-e21fc8f6a3e9.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95752ec2-8658-4c49-a877-e21fc8f6a3e9.png)'
- en: Jupyter home page
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 首页
- en: 'A new notebook can be opened by clicking on the **New** button. The new notebook
    will be created as `Untitled.ipynb`, unlike any other Python IDE, where the script
    is stored with `.py` extension. Here, **ipynb** stands for **IPython Notebook**.
    An `.ipynb` file is just a text file that converts all the content—the code, markdown
    text, and any image or plot—to metadata in a JSON format:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过点击 **新建** 按钮打开新的笔记本。新笔记本会被创建为 `Untitled.ipynb`，这与其他 Python IDE 不同，在其他 IDE
    中脚本是以 `.py` 后缀存储的。在这里，**ipynb** 代表 **IPython Notebook**。`.ipynb` 文件只是一个文本文件，它将所有内容——代码、Markdown
    文本以及任何图像或图表——转换为 JSON 格式的元数据：
- en: '![](img/eee68b71-62fe-4d57-9c04-cbf3ce1786a6.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eee68b71-62fe-4d57-9c04-cbf3ce1786a6.png)'
- en: Jupyter Notebook
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook
- en: A Jupyter notebook is comprised of cells; a cell is where your code goes in.
    The cells can be used to display Markdown code or to execute the code. In the
    preceding screenshot, the first three cells have been converted to Markdown cells,
    while the next three are code cells. A code in a cell can be run by clicking the
    **Run** button in the notebook or by hitting *Ctrl* + *Enter*.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 由多个单元组成；单元是存放代码的地方。单元可以用来显示 Markdown 代码或执行代码。在上面的截图中，前三个单元已经转换为
    Markdown 单元，而接下来的三个单元是代码单元。可以通过点击 **运行** 按钮或按 *Ctrl* + *Enter* 来运行单元中的代码。
- en: 'Jupyter Notebook features the **Save and Checkpoint** option (keyboard shortcut:
    *Ctrl* + *S*). Jupyter automatically saves and creates a checkpoint every 120
    seconds. This checkpoint helps to recover any unsaved work, and it also helps
    to revert to a previous checkpoint.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 具有 **保存和检查点** 选项（快捷键：*Ctrl* + *S*）。Jupyter 会每 120 秒自动保存并创建一个检查点。这个检查点有助于恢复未保存的工作，也有助于回退到之前的检查点。
- en: Spyder
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Spyder
- en: Spyder can be installed with pip or through Anaconda, just like Jupyter. However,
    the developers of Spyder recommend installation through Anaconda.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Spyder 可以通过 pip 或 Anaconda 安装，就像 Jupyter 一样。然而，Spyder 的开发者推荐通过 Anaconda 安装。
- en: 'Spyder can also be launched using methods similar to those for Jupyter Notebook
    or by typing `spyder` in the terminal:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: Spyder也可以通过与Jupyter Notebook类似的方法启动，或者在终端中输入`spyder`来启动：
- en: '![](img/25ada195-e2b3-4788-8233-42cb3774b16d.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25ada195-e2b3-4788-8233-42cb3774b16d.png)'
- en: Spyder
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Spyder
- en: Spyder features a script editor and an IPython console. The upper-right pane
    can shift between a help browser, variable explorer, and file explorer. The editor
    can be split into a number of cells for a more systematic programming. The IPython
    console comes in handy when using small snippets of code. The variable explorer
    provides a summary of all the global objects in the Python session.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Spyder具有脚本编辑器和IPython控制台。右上角的窗格可以在帮助浏览器、变量资源管理器和文件资源管理器之间切换。编辑器可以分割成多个单元格，更加系统化地编程。IPython控制台在使用小代码片段时非常有用。变量资源管理器提供了所有Python会话中全局对象的摘要。
- en: Cross tooling – combining pandas awesomeness with R, Julia, H20.ai, and Azure
    ML Studio
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跨工具操作 – 将pandas的强大与R、Julia、H20.ai和Azure ML Studio结合
- en: 'Pandas can be regarded as a "wonder tool" when it comes to applications like
    data manipulation, data cleaning, or handling time series data. It is extremely
    fast and efficient, and it is powerful enough to handle small to intermediate
    datasets. The best part is that the use of pandas is not restricted just to Python.
    There are methods enabling the supremacy of pandas to be utilized in other frameworks,
    like R, Julia, Azure ML Studio and H20.ai. These methods of using the benefits
    of a superior framework from another tool is called cross-tooling and is frequently
    applied. One of the main reasons for this to exist is that it is almost impossible
    for one tool to have all the functionalities. Suppose one task has two sub-tasks:
    sub-task 1 can be done well in R while the sub-task 2 in Python. One can handle
    this by doing sub-task 1 in R and sub-task 2 by calling Python code from R or
    doing sub-task 2 in Python and sub-task 1 by calling R code from Python.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据操作、数据清理或处理时间序列数据等应用中，pandas可以视为一种“神奇工具”。它非常快速高效，且强大到足以处理小到中等规模的数据集。最棒的是，pandas的使用不仅仅局限于Python。通过一些方法，可以在其他框架中利用pandas的强大功能，如R、Julia、Azure
    ML Studio和H20.ai。这种在其他工具中使用优越框架的好处的方法被称为跨工具操作，且在实践中应用非常广泛。其存在的主要原因之一是，几乎不可能有一个工具能具备所有功能。假设某个任务有两个子任务：子任务1可以在R中完成，而子任务2可以在Python中完成。可以通过在R中完成子任务1并通过调用Python代码来完成子任务2，或者在Python中完成子任务2并通过调用R代码来完成子任务1来处理。
- en: This option makes pandas even more powerful. Let's see how pandas methods and
    /or Python code in general can be used with other tools.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 这个选项使得pandas变得更强大。让我们看看pandas方法和/或Python代码如何与其他工具一起使用。
- en: Pandas with R
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用pandas与R
- en: R has a class of objects called **DataFrame**, which is the same as a pandas
    DataFrame. The R DataFrame is several times slower than pandas. Hence, learning
    pandas will also help tackle data manipulation problems in R. However, using the
    `data.table` data type to handle huge DataFrames in R is the best solution.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: R有一种叫做**DataFrame**的对象类，这与pandas DataFrame相同。然而，R中的DataFrame速度比pandas慢了好几倍。因此，学习pandas也有助于解决R中的数据处理问题。不过，在R中使用`data.table`数据类型来处理巨大的DataFrame是最佳的解决方案。
- en: 'The `reticulate` package helps to access and use Python packages in R. For
    example, you can run these Python snippets in R:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`reticulate`包帮助在R中访问和使用Python包。例如，你可以在R中运行以下Python代码片段：'
- en: '[PRE12]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The same can be done on any other package such as NumPy as well:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以在其他包（如NumPy）中执行相同的操作：
- en: '[PRE13]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If you already have a concrete pandas function written in Python, you can make
    use of it in R through the reticulate package.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经在Python中编写了具体的pandas函数，你可以通过reticulate包在R中使用它。
- en: 'Consider the following Python code snippet:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下Python代码片段：
- en: '[PRE14]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now, the preceding script is saved as `titanic.py`. This script could be used
    in R as shown:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，前面的脚本已保存为`titanic.py`。这个脚本可以在R中使用，如下所示：
- en: '[PRE15]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: An interactive Python session from R can be created using `repl_python()`.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`repl_python()`从R创建一个交互式Python会话。
- en: 'For example, you can write something like the following:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以写如下代码：
- en: '[PRE16]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: And it returns the results in the R shell itself as though it was a Python IDE.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 它会将结果直接返回到R shell中，就像是在Python IDE中一样。
- en: 'Python objects (lists, dictionaries, DataFrames, and arrays) created in a Python
    session can be accessed via R. Suppose `df` is a Python DataFrame whose summary
    needs to be found using R. It can be done as follows:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python会话中创建的Python对象（列表、字典、DataFrame和数组）可以通过R访问。假设`df`是一个Python DataFrame，需要通过R来获取其摘要。可以按如下方式进行操作：
- en: '[PRE17]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: pandas with Azure ML Studio
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用pandas与Azure ML Studio
- en: 'Azure ML Studio offers predictive analytics solutions through a drag and drop
    interface. It features the capability to add a Python script that would read a
    dataset, perform data manipulation, and then deliver the output dataset. pandas
    could play a crucial role in this data processing module of the Azure ML Studio:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML Studio通过拖放界面提供预测分析解决方案。它具有添加Python脚本的能力，脚本可以读取数据集、执行数据操作，然后交付输出数据集。pandas在Azure
    ML Studio的数据处理模块中可能发挥关键作用：
- en: '![](img/d6e3e98f-fc7b-4b9f-85e8-47a1c74887ed.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6e3e98f-fc7b-4b9f-85e8-47a1c74887ed.png)'
- en: Azure ML Studio – Flowchart
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML Studio – 流程图
- en: From the flow diagram, you can see that data is fed to the **Execute Python
    Script** module. This module can receive datasets in two of the three input ports
    and gives a DataFrame as output in one of the two output ports.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 从流程图中可以看出，数据被传入**执行Python脚本**模块。该模块可以在三个输入端口中的两个接收数据集，并在两个输出端口中的一个输出DataFrame。
- en: 'The following diagram shows the **Execute Python Script** module. This module
    accepts only DataFrames at the input ports. It allows for further data processing
    steps to take place before a single DataFrame is produced as the result at the
    output port. This is where pandas and its numerous wonderful functions play a
    role:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了**执行Python脚本**模块。此模块只接受DataFrame作为输入。它允许在输出端口生成单个DataFrame之前进行进一步的数据处理步骤。此处pandas及其众多强大功能发挥了作用：
- en: '![](img/6277476b-2331-495d-a077-766e99e0d758.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6277476b-2331-495d-a077-766e99e0d758.png)'
- en: Python execution module of Azure ML Studio
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML Studio的Python执行模块
- en: pandas with Julia
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas与Julia
- en: Julia has a DataFrame package to handle operations on DataFrames. Benchmarking
    results has shown that pandas is the clear winner when it comes to speed and computational
    efficiency. Just like R, Julia allows us to integrate pandas in the script.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: Julia拥有一个DataFrame包，用于处理DataFrame的操作。基准测试结果表明，在速度和计算效率方面，pandas显然是赢家。与R类似，Julia允许我们在脚本中集成pandas。
- en: 'After installation, pandas can be loaded into the Julia environment directly,
    as shown:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，pandas可以直接加载到Julia环境中，如下所示：
- en: '[PRE18]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: pandas with H2O
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas与H2O
- en: H2O is the super-powerful big data analysis product of H2O.ai, encapsulating
    separate modules within it to handle several aspects of a data science model,
    including data manipulation and model training.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: H2O是H2O.ai的超强大数据分析产品，封装了多个独立模块，用于处理数据科学模型的各个方面，包括数据操作和模型训练。
- en: H2O deals with data as H2O frames, and this data is entirely located within
    a designated H2O cluster. Hence, the data is not found in the memory, unlike a
    pandas dataframe.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: H2O处理数据作为H2O框架，并且这些数据完全位于指定的H2O集群内。因此，数据不像pandas DataFrame那样存储在内存中。
- en: H2O has a `as_data_frame()`method, which allows conversion from a H2O frame
    to a pandas dataframe. Following this conversion, all pandas operations could
    be performed on the converted dataframe.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: H2O有一个`as_data_frame()`方法，允许将H2O框架转换为pandas DataFrame。完成转换后，可以对转换后的DataFrame执行所有pandas操作。
- en: Command line tricks for pandas
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas的命令行技巧
- en: The command line is an important arsenal for pandas users. The command line
    can be used as an efficient and faster but tedious-to-use complement/supplement
    to pandas. Many of the data operations, like breaking a huge file into multiple
    chunks, cleaning a data file of unsupported characters, and so on, can be performed
    in the command line before feeding the data to pandas.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行是pandas用户的重要工具。命令行可以作为高效且快速的补充，但由于其操作繁琐，很多数据操作，如将一个大文件拆分成多个部分、清理数据文件中的不支持字符等，可以在命令行中完成，再将数据传递给pandas处理。
- en: 'The head function of pandas is extremely useful to quickly assess the data.
    A command line function for head makes this option even more useful:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: pandas的head函数非常有用，可以快速评估数据。一个命令行函数使得head更具实用性：
- en: '[PRE19]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The translate (`tr`) function packs within it the ability to replace characters.
    The following command converts all uppercase characters in a text file to lowercase
    characters:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: translate（`tr`）函数具有替换字符的能力。以下命令将文本文件中的所有大写字符转换为小写字符：
- en: '[PRE20]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'It is tedious and sometimes infeasible to read huge data files. In such cases,
    it becomes necessary to systematically break the huge file into smaller files.
    The split function at the command line does exactly this. It splits a file into
    several files, based on the number of lines that can be present in each file:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读巨大的数据文件既繁琐又有时不可行。在这种情况下，需要将大型文件系统地拆分为多个小文件。命令行中的 `split` 函数正是做这件事。它根据每个文件中可以包含的行数将一个文件拆分成多个文件：
- en: '[PRE21]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Use `split -b` to perform a split at a certain byte size instead of the number
    of lines.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `split -b` 按指定的字节大小进行拆分，而不是按行数。
- en: 'Sort is yet another useful pandas-like command line function. It can be used
    to sort alphabetically, by numerical value, or in reverse order with respect to
    any column. The preferred sorting order and the column key can be specified in
    the command line function. Let''s look at the following examples:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`sort` 是另一个有用的类似 pandas 的命令行函数。它可以按字母顺序、数字值或按任何列的逆序进行排序。可以在命令行函数中指定首选的排序顺序和列键。让我们来看一下以下示例：'
- en: '[PRE22]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The `-t` indicates that the file is comma delimited.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`-t` 表示文件是以逗号分隔的。'
- en: The current working directory should be changed to the directory where your
    data file in question is stored before any of these methods is applied.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用这些方法之前，当前工作目录应更改为存放相关数据文件的目录。
- en: Options and settings for pandas
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 的选项和设置
- en: pandas allows the users to modify some display and formatting options.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 允许用户修改一些显示和格式化选项。
- en: 'The `get_option()` and `set_option()` commands let the user view the current
    setting and change it:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_option()` 和 `set_option()` 命令让用户查看当前设置并进行更改：'
- en: '[PRE23]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The preceding options discussed set and reset the number of rows that are displayed
    when a dataframe is printed. Some of the other useful display options are the
    following:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 上述选项设置和重置了打印 DataFrame 时显示的行数。以下是其他一些有用的显示选项：
- en: '`max_columns`: Set the number of columns to be displayed.'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_columns`：设置要显示的列数。'
- en: '`chop_threshold`: Float values below the limit set here will be displayed as
    zeros.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chop_threshold`：小于此限制的浮动值将显示为零。'
- en: '`colheader_justify`: Set the justification for the column header.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`colheader_justify`：设置列头的对齐方式。'
- en: '`date_dayfirst`: Setting to `''True''` prints day first when displaying a datetime
    value.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_dayfirst`：将此设置为 `''True''` 时，显示日期时间值时优先显示日期。'
- en: '`date_yearfirst`: Setting to True prints year first when displaying a datetime
    value.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_yearfirst`：将此设置为 True 时，显示日期时间值时优先显示年份。'
- en: '`precision`: Setting the precision for the float values displayed.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`precision`：设置显示浮动值的小数精度。'
- en: 'The following is an example of a number formatting option, which sets the accuracy
    and determines the use of any prefix:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个数字格式化选项的示例，用于设置精度并决定是否使用前缀：
- en: '![](img/05862357-0df1-4b42-baa1-bfdafce4ae9d.png)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](img/05862357-0df1-4b42-baa1-bfdafce4ae9d.png)'
- en: Numeric formatting in Pandas
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 中的数字格式化
- en: We will discuss this in further detail in later chapters.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后续章节中详细讨论这一内容。
- en: Summary
  id: totrans-273
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'Before we delve into the awesomeness of pandas, it is mission critical that
    we install Python and pandas correctly, choose the right IDEs, and set the right
    options. In this chapter, we discussed these and more. Here is a summary of key
    takeaways from the chapter:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨 pandas 的强大功能之前，正确安装 Python 和 pandas，选择合适的 IDE，并设置正确的选项是至关重要的。在本章中，我们讨论了这些内容及更多。以下是本章的关键要点总结：
- en: Python 3.x is available, but many users still prefer to use version 2.7 as it
    is more stable and scientific-computation friendly.
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.x 已经可用，但许多用户仍然偏爱使用版本 2.7，因为它更稳定且对科学计算更友好。
- en: The support and bug fixing for version 2.7 has now been stopped.
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本 2.7 的支持和 bug 修复现已停止。
- en: Translating code from one version to other is a breeze. One can also use both
    versions together using the `virtualenv` package, which comes pre-installed with
    Anaconda.
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一个版本翻译代码到另一个版本非常简单。还可以使用 `virtualenv` 包同时使用两个版本，该包预装在 Anaconda 中。
- en: Anaconda is a popular Python distribution that comes with 700+ libraries/packages
    and several popular IDEs, such as Jupyter and Spyder.
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda 是一个流行的 Python 发行版，内置 700 多个库/包，并提供多个流行的 IDE，如 Jupyter 和 Spyder。
- en: Python codes are callable from, and usable in, other tools, like R, Azure ML
    Studio, H20.ai, and Julia.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 代码可以在其他工具中调用和使用，如 R、Azure ML Studio、H20.ai 和 Julia。
- en: Some of the day-to-day data operations, like breaking a large file into smaller
    chunks, `reading` a few lines of data, and so on, can be performed in the command
    line/shell as well.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些日常数据操作，如将大文件拆分为更小的块、`读取`几行数据等，也可以在命令行/终端中执行。
- en: The default setting options for pandas can be seen and changed via the `get_option()`
    and `set_option()` commands. Some of the options that can be changed are the maximum
    number of rows and columns displayed, the number of decimal points for float variables,
    and so on.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 的默认设置选项可以通过 `get_option()` 和 `set_option()` 命令查看和更改。一些可以更改的选项包括显示的最大行数和列数、浮动变量的小数位数等。
- en: In the next chapter, we will expand our scope a little bit from pandas and explore
    tools such as NumPy that enrich the capabilities of pandas in the Python ecosystem.
    It will be an exhaustive NumPy tutorial with real-life case studies.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将稍微扩展一下范围，超出 pandas，探索诸如 NumPy 等工具，这些工具丰富了 pandas 在 Python 生态系统中的功能。这将是一个详尽的
    NumPy 教程，并结合实际案例研究。
- en: Further reading
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[https://www.r-bloggers.com/run-python-from-r/](https://www.r-bloggers.com/run-python-from-r/)'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.r-bloggers.com/run-python-from-r/](https://www.r-bloggers.com/run-python-from-r/)'
- en: '[https://pandas.pydata.org/pandas-docs/stable/index.html](https://pandas.pydata.org/pandas-docs/stable/index.html)'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://pandas.pydata.org/pandas-docs/stable/index.html](https://pandas.pydata.org/pandas-docs/stable/index.html)'
- en: '[http://docs.glueviz.org/en/stable/](http://docs.glueviz.org/en/stable/)'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.glueviz.org/en/stable/](http://docs.glueviz.org/en/stable/)'
- en: '[https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906](https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906)'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906](https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906)'
- en: '[https://orange.biolab.si/](https://orange.biolab.si/)'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://orange.biolab.si/](https://orange.biolab.si/)'
