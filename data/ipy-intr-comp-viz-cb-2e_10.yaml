- en: Chapter 10. Signal Processing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章 信号处理
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Analyzing the frequency components of a signal with a Fast Fourier Transform
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用快速傅里叶变换分析信号的频率成分
- en: Applying a linear filter to a digital signal
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用线性滤波器于数字信号
- en: Computing the autocorrelation of a time series
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算时间序列的自相关
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: Signals are mathematical functions that describe the variation of a quantity
    across time or space. Time-dependent signals are often called **time series**.
    Examples of time series include share prices, which are typically presented as
    successive points in time spaced at uniform time intervals. In physics or biology,
    experimental devices record the evolution of variables such as electromagnetic
    waves or biological processes.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 信号是描述一个量在时间或空间上变化的数学函数。依赖于时间的信号通常被称为**时间序列**。时间序列的例子包括股价，它们通常呈现为在均匀时间间隔内的连续时间点。在物理学或生物学中，实验设备记录如电磁波或生物过程等变量的演变。
- en: In signal processing, a general objective consists of extracting meaningful
    and relevant information from raw, noisy measurements. Signal processing topics
    include signal acquisition, transformation, compression, filtering, and feature
    extraction, among others. When dealing with a complex dataset, it can be beneficial
    to clean it before applying more advanced mathematical analysis methods (such
    as machine learning, for instance).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在信号处理中，一般目标是从原始的、有噪声的测量数据中提取有意义和相关的信息。信号处理的主题包括信号获取、变换、压缩、滤波和特征提取等。当处理复杂数据集时，先清理数据可能对应用更先进的数学分析方法（例如机器学习）有帮助。
- en: In this concise chapter, we will illustrate and explain the main foundations
    of signal processing. In the next chapter, [Chapter 11](ch11.html "Chapter 11. Image
    and Audio Processing"), *Image and Audio Processing*, we will see particular signal
    processing methods adapted to images and sounds.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本简短的章节中，我们将阐明并解释信号处理的主要基础。在下一章，[第11章](ch11.html "第11章 图像与音频处理")中，我们将看到针对图像和声音的特定信号处理方法。
- en: First, we will give some important definitions in this introduction.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在本引言中我们将给出一些重要的定义。
- en: Analog and digital signals
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟信号与数字信号
- en: Signals can be time-dependent or space-dependent. In this chapter, we will focus
    on time-dependent signals.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 信号可以是时间依赖的或空间依赖的。在本章中，我们将专注于时间依赖的信号。
- en: 'Let *x(t)* be a time-varying signal. We say that:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 设*x(t)*为时变信号。我们可以说：
- en: This signal is **analog** if *t* is a continuous variable and *x(t)* is a real
    number
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果*t*是连续变量，且*x(t)*是实数，则该信号为**模拟**信号
- en: This signal is **digital** if *t* is a discrete variable (**discrete-time signal**)
    and *x(t)* can only take a finite number of values (**quantified signal**)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果*t*是离散变量（**离散时间信号**），且*x(t)*只能取有限个值（**量化信号**），则该信号为**数字**信号
- en: 'The following figure shows the difference between an analog signal (the continuous
    curve) and a digital signal (dots):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了模拟信号（连续曲线）与数字信号（点）的区别：
- en: '![Analog and digital signals](img/4818OS_10_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![模拟和数字信号](img/4818OS_10_01.jpg)'
- en: Difference between the analog and digital (quantified) signals
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟信号与数字（量化）信号之间的区别
- en: Analog signals are found in mathematics and in most physical systems such as
    electric circuits. Yet, computers being discrete machines, they can only understand
    digital signals. This is why computational science especially deals with digital
    signals.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟信号存在于数学中以及大多数物理系统中，如电路。然而，由于计算机是离散的机器，它们只能理解数字信号。这就是计算科学特别处理数字信号的原因。
- en: 'A digital signal recorded by an experimental device is typically characterized
    by two important quantities:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由实验设备记录的数字信号通常由两个重要的量来描述：
- en: '**The sampling rate**: The number of values (or samples) recorded every second
    (in Hertz)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**采样率**：每秒记录的值（或样本）数量（以赫兹为单位）'
- en: '**The resolution**: The precision of the quantization, usually in bits per
    sample (also known as **bit depth**)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分辨率**：量化的精度，通常以每个样本的位数（也称为**位深度**）表示'
- en: Digital signals with high sampling rates and bit depths are more accurate, but
    they require more memory and processing power. These two parameters are limited
    by the experimental devices that record the signals.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 具有高采样率和位深度的数字信号更为精确，但它们需要更多的内存和处理能力。这两个参数受到记录信号的实验设备的限制。
- en: The Nyquist–Shannon sampling theorem
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 奈奎斯特–香农采样定理
- en: Let's consider a continuous (analog) time-varying signal *x(t)*. We record this
    physical signal with an experimental device, and we obtain a digital signal with
    a sampling rate of *f[s]*. As the original analog signal has an infinite precision,
    whereas the recorded signal has a finite precision, we expect to lose information
    in the analog-to-digital process.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们考虑一个连续（模拟）时变信号*x(t)*。我们使用实验设备记录这个物理信号，并以采样率*f[s]*获取数字信号。由于原始模拟信号具有无限精度，而记录的信号具有有限精度，我们预计在模拟到数字的过程中会丢失信息。
- en: The **Nyquist–Shannon sampling** theorem states that under certain conditions
    on the analog signal and the sampling rate, it is possible not to lose any information
    in the process. In other words, under these conditions, we can recover the original
    continuous signal from the sampled digital signal. For more details, refer to
    [http://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem](http://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**奈奎斯特-香农采样**定理指出，在某些条件下，模拟信号和采样率可以确保采样过程中不丢失任何信息。换句话说，在这些条件下，我们可以从采样的数字信号中恢复原始的连续信号。更多细节，请参见[http://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem](http://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem)。'
- en: 'Let''s define these conditions. The **Fourier transform** ![The Nyquist–Shannon
    sampling theorem](img/4818OS_10_20.jpg) of *x(t)* is defined by:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们定义这些条件。**傅里叶变换** ![奈奎斯特-香农采样定理](img/4818OS_10_20.jpg) 是通过以下公式定义的：
- en: '![The Nyquist–Shannon sampling theorem](img/4818OS_10_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![奈奎斯特-香农采样定理](img/4818OS_10_02.jpg)'
- en: 'Here, the Fourier transform is a representation of a time-dependent signal
    in the frequency domain. The **Nyquist criterion** states that:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，傅里叶变换是时间依赖信号在频域中的表示。**奈奎斯特准则**指出：
- en: '![The Nyquist–Shannon sampling theorem](img/4818OS_10_03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![奈奎斯特-香农采样定理](img/4818OS_10_03.jpg)'
- en: 'In other words, the signal must be **bandlimited**, meaning that it must not
    contain any frequency higher than a certain cutoff frequency *B*. Additionally,
    the sampling rate *f[s]* needs to be at least twice as large as this frequency
    *B*. Here are a couple of definitions:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，信号必须是**带限**的，这意味着它不能包含任何高于某个截止频率*B*的频率。此外，采样率*f[s]*需要至少是该频率*B*的两倍。以下是几个定义：
- en: The **Nyquist rate** is *2B*. For a given bandlimited analog signal, it is the
    minimal sampling rate required to sample the signal without loss.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**奈奎斯特率**是*2B*。对于给定的带限模拟信号，它是无损采样该信号所需的最小采样率。'
- en: The **Nyquist frequency** is *f[s]*/2\. For a given sampling rate, it is the
    maximal frequency that the signal can contain in order to be sampled without loss.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**奈奎斯特频率**是*f[s]*/2。对于给定的采样率，它是信号可以包含的最大频率，以便无损采样。'
- en: Under these conditions, we can theoretically reconstruct the original analog
    signal from the sampled digital signal.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些条件下，我们理论上可以从采样的数字信号中重建原始的模拟信号。
- en: Compressed sensing
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 压缩感知
- en: Compressed sensing is a modern and important approach to signal processing.
    It acknowledges that many real-world signals are intrinsically low dimensional.
    For example, speech signals have a very specific structure depending on the general
    physical constraints of the human vocal tract.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩感知是一种现代且重要的信号处理方法。它承认许多现实世界的信号本质上是低维的。例如，语音信号具有非常特定的结构，取决于人类发音道的普遍物理约束。
- en: Even if a speech signal has many frequencies in the Fourier domain, it may be
    well approximated by a **sparse decomposition** on an adequate basis (dictionary).
    By definition, a decomposition is sparse if most of the coefficients are zero.
    If the dictionary is chosen well, every signal is a combination of a small number
    of the basis signals.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 即使一个语音信号在傅里叶域中有许多频率，它也可以通过在合适的基（字典）上进行**稀疏分解**来很好地逼近。根据定义，稀疏分解是指大多数系数为零。如果字典选择得当，每个信号都是少数基信号的组合。
- en: This dictionary contains elementary signals that are specific to the signals
    considered in a given problem. This is different from the Fourier transform that
    decomposes a signal on a *universal* basis of sine functions. In other words,
    with sparse representations, the Nyquist condition can be circumvented. We can
    precisely reconstruct a continuous signal from a sparse representation containing
    fewer samples than what the Nyquist condition requires.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这本词典包含了特定于给定问题中考虑的信号的基本信号。这与将信号分解为*通用*正弦函数基础的傅里叶变换不同。换句话说，通过稀疏表示，可以规避奈奎斯特条件。我们可以从包含比奈奎斯特条件要求的样本更少的稀疏表示中精确重建连续信号。
- en: Sparse decompositions can be found with sophisticated algorithms. In particular,
    these problems may be turned into convex optimization problems that can be tackled
    with specific numerical optimization methods.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏分解可以通过复杂的算法找到。特别是，这些问题可以转化为凸优化问题，可以用特定的数值优化方法解决。
- en: Compressed sensing has many applications in signal compression, image processing,
    computer vision, biomedical imaging, and many other scientific and engineering
    areas.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩感知在信号压缩、图像处理、计算机视觉、生物医学成像以及许多其他科学和工程领域中有许多应用。
- en: 'Here are further references about compressed sensing:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 关于压缩感知的更多参考资料：
- en: '[http://en.wikipedia.org/wiki/Compressed_sensing](http://en.wikipedia.org/wiki/Compressed_sensing)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[压缩感知](http://en.wikipedia.org/wiki/Compressed_sensing)'
- en: '[http://en.wikipedia.org/wiki/Sparse_approximation](http://en.wikipedia.org/wiki/Sparse_approximation)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[稀疏逼近](http://en.wikipedia.org/wiki/Sparse_approximation)'
- en: References
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Here are a few references:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个参考资料：
- en: '*Understanding Digital Signal Processing*, *Richard G. Lyons*, *Pearson Education*,
    *(2010)*.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*理解数字信号处理*，作者Richard G. Lyons，出版社Pearson Education，（2010）。'
- en: 'For good coverage of compressed sensing, refer to the book *A Wavelet Tour
    of Signal Processing: The Sparse Way*, *Mallat Stéphane*, *Academic Press*, *(2008)*.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要详细了解压缩感知，请参阅《信号处理的小波之旅：稀疏方法》一书，作者Mallat Stéphane，出版社Academic Press，（2008）。
- en: The book *Python for Signal Processing* by Jose Unpingco contains many more
    details than what we can cover in this chapter. The code is available as IPython
    notebooks on GitHub ([http://python-for-signal-processing.blogspot.com](http://python-for-signal-processing.blogspot.com)).
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《Python信号处理》一书由Jose Unpingco编写，比我们在本章中涵盖的内容要详细得多。代码可以在GitHub上的IPython笔记本上找到（[http://python-for-signal-processing.blogspot.com](http://python-for-signal-processing.blogspot.com)）。
- en: Digital Signal Processing on WikiBooks available at [http://en.wikibooks.org/wiki/Digital_Signal_Processing](http://en.wikibooks.org/wiki/Digital_Signal_Processing).
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在WikiBooks上提供的数字信号处理可参考[数字信号处理](http://en.wikibooks.org/wiki/Digital_Signal_Processing)。
- en: Analyzing the frequency components of a signal with a Fast Fourier Transform
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用快速傅里叶变换分析信号的频率成分
- en: In this recipe, we will show how to use a **Fast Fourier Transform** (**FFT**)
    to compute the spectral density of a signal. The spectrum represents the energy
    associated to frequencies (encoding periodic fluctuations in a signal). It is
    obtained with a Fourier transform, which is a frequency representation of a time-dependent
    signal. A signal can be transformed back and forth from one representation to
    the other without information loss.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，我们将展示如何使用**快速傅里叶变换**（**FFT**）计算信号的频谱密度。频谱表示与频率相关联的能量（编码信号中的周期波动）。它是通过傅里叶变换获得的，这是信号的频率表示。信号可以在两种表示之间来回转换而不丢失信息。
- en: In this recipe, we will illustrate several aspects of the Fourier Transform.
    We will apply this tool to weather data spanning 20 years in France obtained from
    the US National Climatic Data Center.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，我们将阐述傅里叶变换的几个方面。我们将应用这一工具于从美国国家气候数据中心获取的法国20年的天气数据。
- en: Getting ready
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Download the *Weather* dataset from the book's GitHub repository at [http://github.com/ipython-books/cookbook-data](http://github.com/ipython-books/cookbook-data),
    and extract it in the current directory.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 从书籍的GitHub存储库中下载*Weather*数据集（[http://github.com/ipython-books/cookbook-data](http://github.com/ipython-books/cookbook-data)），并将其提取到当前目录中。
- en: The data has been obtained from [www.ncdc.noaa.gov/cdo-web/datasets#GHCND](http://www.ncdc.noaa.gov/cdo-web/datasets#GHCND).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 数据来自[www.ncdc.noaa.gov/cdo-web/datasets#GHCND](http://www.ncdc.noaa.gov/cdo-web/datasets#GHCND)。
- en: How to do it...
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做……
- en: 'Let''s import the packages, including `scipy.fftpack`, which includes many
    FFT-related routines:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入包，包括`scipy.fftpack`，其中包括许多与FFT相关的例程：
- en: '[PRE0]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We import the data from the CSV file. The number `-9999` is used for N/A values.
    pandas can easily handle this. In addition, we tell pandas to parse dates contained
    in the `DATE` column:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从CSV文件中导入数据。数字`-9999`用于表示N/A值，pandas可以轻松处理。此外，我们告诉pandas解析`DATE`列中的日期：
- en: '[PRE1]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Each row contains the precipitation and extreme temperatures recorded each
    day by one weather station in France. For every date in the calendar, we want
    to get a single average temperature for the whole country. The `groupby()` method
    provided by pandas lets us do this easily. We also remove any N/A value with `dropna()`:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每一行包含法国一个气象站每天记录的降水量和极端温度。对于日历中的每个日期，我们想得到整个国家的单一平均温度。pandas提供的`groupby()`方法可以轻松实现这一点。我们还使用`dropna()`去除任何N/A值：
- en: '[PRE2]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, we get the list of dates and the list of corresponding temperatures. The
    unit is in tenths of a degree, and we get the average value between the minimal
    and maximal temperature, which explains why we divide by 20.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们得到日期列表和相应的温度列表。单位是十分之一度，我们计算的是最小和最大温度之间的平均值，这也解释了为什么我们要除以20。
- en: '[PRE3]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let''s take a look at the evolution of the temperature:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们来看一下温度的变化：
- en: '[PRE4]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![How to do it...](img/4818OS_10_04.jpg)'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_04.jpg)'
- en: 'We now compute the Fourier transform and the spectral density of the signal.
    The first step is to compute the FFT of the signal using the `fft()` function:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们计算信号的傅里叶变换和谱密度。第一步是使用`fft()`函数计算信号的FFT：
- en: '[PRE5]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Once the FFT has been obtained, we need to take the square of its absolute
    value in order to get the **power spectral density** (**PSD**):'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦得到FFT，我们需要取其绝对值的平方来获得**功率谱密度**（**PSD**）：
- en: '[PRE6]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The next step is to get the frequencies corresponding to the values of the
    PSD. The `fftfreq()` utility function does just that. It takes the length of the
    PSD vector as input as well as the frequency unit. Here, we choose an annual unit:
    a frequency of 1 corresponds to 1 year (365 days). We provide *1/365* because
    the original unit is in days.'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是获取与PSD值对应的频率。`fftfreq()`工具函数正是用来做这个的。它以PSD向量的长度和频率单位作为输入。在这里，我们选择年度单位：频率为1对应1年（365天）。我们提供*1/365*，因为原始单位是天数。
- en: '[PRE7]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `fftfreq()` function returns positive and negative frequencies. We are only
    interested in positive frequencies here, as we have a real signal (this will be
    explained in the *How it works...* section of this recipe).
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`fftfreq()`函数返回正频率和负频率。这里我们只关心正频率，因为我们有一个真实信号（这将在本配方的*它是如何工作的...*部分中解释）。'
- en: '[PRE8]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We now plot the power spectral density of our signal, as a function of the frequency
    (in unit of *1/year*). We choose a logarithmic scale for the *y* axis (**decibels**).
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们绘制信号的功率谱密度，作为频率的函数（单位为*1年*）。我们选择对*y*轴使用对数尺度（**分贝**）。
- en: '[PRE9]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![How to do it...](img/4818OS_10_05.jpg)'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_05.jpg)'
- en: Because the fundamental frequency of the signal is the yearly variation of the
    temperature, we observe a peak for *f=1*.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为信号的基频是温度的年度变化，我们观察到在*f=1*时有一个峰值。
- en: 'Now, we cut out frequencies higher than the fundamental frequency:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们去除高于基频的频率：
- en: '[PRE10]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, we perform an **inverse FFT** to convert the modified Fourier transform
    back to the temporal domain. This way, we recover a signal that mainly contains
    the fundamental frequency, as shown in the following figure:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们执行**逆FFT**将修改后的傅里叶变换转换回时间域。这样，我们恢复了一个主要包含基频的信号，如下图所示：
- en: '[PRE11]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![How to do it...](img/4818OS_10_06.jpg)'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_06.jpg)'
- en: We get a smoothed version of the signal, because the fast variations have been
    lost when we have removed the high frequencies in the Fourier transform.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们得到信号的平滑版本，因为当我们去除傅里叶变换中的高频时，快速变化的部分已经丢失。
- en: How it works...
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Broadly speaking, the Fourier transform is an alternative representation of
    a signal as a superposition of periodic components. It is an important mathematical
    result that any well-behaved function can be represented under this form. Whereas
    a time-varying signal is most naturally considered as a function of time, the
    Fourier transform represents it as a function of the frequency. A magnitude and
    a phase, which are both encoded in a single complex number, are associated to
    each frequency.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 广义而言，傅立叶变换是信号的周期分量的超级位置的替代表示。这是一个重要的数学结果，任何良好行为的函数都可以用这种形式表示。而时间变化的信号最自然的考虑方式是作为时间的函数，傅立叶变换则将其表示为频率的函数。每个频率都与一个大小和相位相关联，这两者都被编码为单一复数。
- en: The Discrete Fourier Transform
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 离散傅立叶变换
- en: 'Let''s consider a digital signal *x* represented by a vector *(x[0], ..., x[(N-1)])*.
    We assume that this signal is regularly sampled. The **Discrete Fourier Transform**
    (**DFT**) of *x* is *X = (X[0], ..., X[(N-1)])* defined as:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个由向量*(x[0], ..., x[(N-1)])*表示的数字信号*x*。我们假设这个信号是定期采样的。*x*的**离散傅立叶变换**（**DFT**）被定义为*X
    = (X[0], ..., X[(N-1)])*：
- en: '![The Discrete Fourier Transform](img/4818OS_10_07.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![离散傅立叶变换](img/4818OS_10_07.jpg)'
- en: The DFT can be computed efficiently with the Fast Fourier Transform (FFT), an
    algorithm that exploits symmetries and redundancies in this definition to considerably
    speed up the computation. The complexity of the FFT is *O(N* log *N)* instead
    of *O(N²)* for the naive DFT. The FFT is one of the most important algorithms
    of the digital universe.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: FFT可以高效地计算离散傅立叶变换（DFT），这是一种利用该定义中的对称性和冗余性以显著加快计算速度的算法。FFT的复杂度是*O(N* log *N)*，而朴素DFT的复杂度是*O(N²)*。FFT是数字宇宙中最重要的算法之一。
- en: Here is an intuitive explanation of what the DFT describes. Instead of representing
    our signal on a real line, let's represent it on a circle. We can play the whole
    signal by making 1, 2, or any number *k* of laps on the circle. Therefore, when
    *k* is fixed, we represent each value *x[n]* of the signal with an angle ![The
    Discrete Fourier Transform](img/4818OS_10_22.jpg) and a distance from the original
    equal to *x[n]*.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关于DFT描述的直观解释。我们不是在实线上表示我们的信号，而是在圆上表示它。我们可以通过在圆上进行1、2或任意数量*k*的圈来播放整个信号。因此，当*k*固定时，我们用一个角度![离散傅立叶变换](img/4818OS_10_22.jpg)和与原始距离相等的*x[n]*表示信号的每个值*x[n]*。
- en: If the signal shows a certain periodicity of *k* laps, it means that many correlated
    values will superimpose at that exact frequency so that the coefficient *X[k]*
    will be large. In other words, the modulus *|X[k]|* of the *k*-th coefficient
    represents the *energy* of the signal associated to this frequency.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果信号显示出某种周期性的*k*圈，意味着许多相关值将在该确切频率上叠加，以致系数*X[k]*将会很大。换句话说，第*k*个系数的模*|X[k]|*表示与该频率相关的信号的*能量*。
- en: In the following figure, the signal is a sine wave at the frequency *f=3 Hz*.
    The points of this signal are in blue, positioned at an angle ![The Discrete Fourier
    Transform](img/4818OS_10_22.jpg). Their algebraic sum in the complex plane is
    in red. These vectors represent the different coefficients of the signal's DFT.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的图中，信号是频率*f=3 Hz*的正弦波。该信号的点以蓝色显示，位于一个角度的位置![离散傅立叶变换](img/4818OS_10_22.jpg)。它们在复平面上的代数和以红色显示。这些向量表示信号DFT的不同系数。
- en: '![The Discrete Fourier Transform](img/4818OS_10_08.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![离散傅立叶变换](img/4818OS_10_08.jpg)'
- en: An illustration of the DFT
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: DFT的插图
- en: 'The next figure represents the previous signal''s **power spectral density**
    (**PSD**):'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张图表示前一个信号的**功率谱密度**（**PSD**）：
- en: '![The Discrete Fourier Transform](img/4818OS_10_09.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![离散傅立叶变换](img/4818OS_10_09.jpg)'
- en: The PSD of the signal in the previous example
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 前述示例中信号的PSD
- en: Inverse Fourier Transform
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 逆傅立叶变换
- en: 'By considering all possible frequencies, we have an exact representation of
    our digital signal in the frequency domain. We can recover the initial signal
    with an **Inverse Fast Fourier Transform** that computes an **Inverse Discrete
    Fourier Transform**. The formula is very similar to the DFT:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 通过考虑所有可能的频率，我们在频率域中对我们的数字信号进行了精确表示。我们可以通过计算**逆快速傅立叶变换**来恢复初始信号，这计算了**逆离散傅立叶变换**。这个公式与DFT非常相似：
- en: '![Inverse Fourier Transform](img/4818OS_10_10.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![逆傅立叶变换](img/4818OS_10_10.jpg)'
- en: The DFT is useful when periodic patterns are to be found. However, generally
    speaking, the Fourier transform cannot detect *transient* changes at specific
    frequencies. More local spectral methods are required, such as the **wavelet transform**.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要寻找周期性模式时，DFT非常有用。然而，通常来说，傅里叶变换无法检测到特定频率下的*瞬态*变化。此时需要更局部的谱方法，例如**小波变换**。
- en: There's more...
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'The following links contain more details about Fourier transforms:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接包含有关傅里叶变换的更多详细信息：
- en: Introduction to the FFT with SciPy, available at [http://scipy-lectures.github.io/intro/scipy.html#fast-fourier-transforms-scipy-fftpack](http://scipy-lectures.github.io/intro/scipy.html#fast-fourier-transforms-scipy-fftpack)
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SciPy中的FFT简介，链接地址为[http://scipy-lectures.github.io/intro/scipy.html#fast-fourier-transforms-scipy-fftpack](http://scipy-lectures.github.io/intro/scipy.html#fast-fourier-transforms-scipy-fftpack)
- en: Reference documentation for the fftpack in SciPy, available at [http://docs.scipy.org/doc/scipy/reference/fftpack.html](http://docs.scipy.org/doc/scipy/reference/fftpack.html)
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SciPy中fftpack的参考文档，链接地址为[http://docs.scipy.org/doc/scipy/reference/fftpack.html](http://docs.scipy.org/doc/scipy/reference/fftpack.html)
- en: Fourier Transform on Wikipedia, available at [http://en.wikipedia.org/wiki/Fourier_transform](http://en.wikipedia.org/wiki/Fourier_transform)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的傅里叶变换，链接地址为[http://en.wikipedia.org/wiki/Fourier_transform](http://en.wikipedia.org/wiki/Fourier_transform)
- en: Discrete Fourier Transform on Wikipedia, available at [http://en.wikipedia.org/wiki/Discrete_Fourier_transform](http://en.wikipedia.org/wiki/Discrete_Fourier_transform)
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的离散傅里叶变换，链接地址为[http://en.wikipedia.org/wiki/Discrete_Fourier_transform](http://en.wikipedia.org/wiki/Discrete_Fourier_transform)
- en: Fast Fourier Transform on Wikipedia, available at [http://en.wikipedia.org/wiki/Fast_Fourier_transform](http://en.wikipedia.org/wiki/Fast_Fourier_transform)
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的快速傅里叶变换，链接地址为[http://en.wikipedia.org/wiki/Fast_Fourier_transform](http://en.wikipedia.org/wiki/Fast_Fourier_transform)
- en: Decibel on Wikipedia, available at [https://en.wikipedia.org/wiki/Decibel](https://en.wikipedia.org/wiki/Decibel)
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的分贝，链接地址为[https://en.wikipedia.org/wiki/Decibel](https://en.wikipedia.org/wiki/Decibel)
- en: See also
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Applying a linear filter to a digital signal* recipe
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将线性滤波器应用于数字信号*方法'
- en: The *Computing the autocorrelation of a time series* recipe
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*计算时间序列的自相关*方法'
- en: Applying a linear filter to a digital signal
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将线性滤波器应用于数字信号
- en: Linear filters play a fundamental role in signal processing. With a linear filter,
    one can extract meaningful information from a digital signal.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 线性滤波器在信号处理中发挥着基础作用。通过线性滤波器，可以从数字信号中提取有意义的信息。
- en: In this recipe, we will show two examples using stock market data (the NASDAQ
    stock exchange). First, we will smooth out a very noisy signal with a low-pass
    filter to extract its slow variations. We will also apply a high-pass filter on
    the original time series to extract the fast variations. These are just two common
    examples among a wide variety of applications of linear filters.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本方法中，我们将展示两个使用股市数据（NASDAQ股票交易所）的例子。首先，我们将使用低通滤波器平滑一个非常嘈杂的信号，以提取其慢速变化。我们还将对原始时间序列应用高通滤波器，以提取快速变化。这只是线性滤波器应用中常见的两个例子，实际应用有很多种。
- en: Getting ready
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Download the *Nasdaq* dataset from the book's GitHub repository at [https://github.com/ipython-books/cookbook-data](https://github.com/ipython-books/cookbook-data)
    and extract it in the current directory.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 从本书的GitHub仓库下载*纳斯达克*数据集，链接地址为[https://github.com/ipython-books/cookbook-data](https://github.com/ipython-books/cookbook-data)，并将其解压到当前目录。
- en: The data has been obtained from [http://finance.yahoo.com/q/hp?s=^IXIC&a=00&b=1&c=1990&d=00&e=1&f=2014&g=d](http://finance.yahoo.com/q/hp?s=%5EIXIC&a=00&b=1&c=1990&d=00&e=1&f=2014&g=d).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 数据来自[http://finance.yahoo.com/q/hp?s=^IXIC&a=00&b=1&c=1990&d=00&e=1&f=2014&g=d](http://finance.yahoo.com/q/hp?s=%5EIXIC&a=00&b=1&c=1990&d=00&e=1&f=2014&g=d)。
- en: How to do it...
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Let''s import the packages:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入所需的包：
- en: '[PRE12]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We load the NASDAQ data with pandas:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用pandas加载NASDAQ数据：
- en: '[PRE13]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Let''s extract two columns: the date and the daily closing value:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们提取两列数据：日期和每日收盘值：
- en: '[PRE14]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let''s take a look at the raw signal:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们来看一下原始信号：
- en: '[PRE15]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![How to do it...](img/4818OS_10_11.jpg)'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_11.jpg)'
- en: 'Now, we will follow the first approach to get the slow variations of the signal.
    We will convolve the signal with a triangular window, which corresponds to a **FIR
    filter**. We will explain the idea behind this method in the *How it works...*
    section of this recipe. For now, let''s just say that we replace each value with
    a weighted mean of the signal around this value:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将采用第一种方法来获取信号的慢速变化。我们将信号与三角窗进行卷积，这相当于**FIR滤波器**。我们将在本食谱的*它是如何工作的...*部分解释该方法背后的原理。现在，暂且说，我们将每个值替换为该值周围信号的加权平均值：
- en: '[PRE16]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![How to do it...](img/4818OS_10_12.jpg)'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_12.jpg)'
- en: 'Now, let''s use another method. We create an IIR Butterworth low-pass filter
    to extract the slow variations of the signal. The `filtfilt()` method allows us
    to apply a filter forward and backward in order to avoid phase delays:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们使用另一种方法。我们创建一个IIR巴特沃斯低通滤波器来提取信号的慢速变化。`filtfilt()`方法允许我们前后应用滤波器，以避免相位延迟：
- en: '[PRE17]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![How to do it...](img/4818OS_10_13.jpg)'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_13.jpg)'
- en: 'Finally, we use the same method to create a high-pass filter and extract the
    *fast* variations of the signal:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们使用相同的方法来创建一个高通滤波器，并提取信号的*快速*变化：
- en: '[PRE18]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![How to do it...](img/4818OS_10_14.jpg)'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_14.jpg)'
- en: The fast variations around 2000 correspond to the dot-com bubble burst, reflecting
    the high-market volatility and the fast fluctuations of the stock market indices
    at that time. For more details, refer to [http://en.wikipedia.org/wiki/Dot-com_bubble](http://en.wikipedia.org/wiki/Dot-com_bubble).
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2000年左右的快速变化对应于互联网泡沫的破裂，反映了当时股市的高波动性和股市指数的快速波动。更多细节，请参见[http://en.wikipedia.org/wiki/Dot-com_bubble](http://en.wikipedia.org/wiki/Dot-com_bubble)。
- en: How it works...
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this section, we explain the very basics of linear filters in the context
    of digital signals.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将解释在数字信号背景下线性滤波器的基本原理。
- en: A **digital signal** is a discrete sequence *(x[n])* indexed by *n* ![How it
    works...](img/4818OS_10_26.jpg) * 0*. Although we often assume infinite sequences,
    in practice, a signal is represented by a *vector* of the finite size *N*.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字信号**是一个离散的序列*(x[n])*，由*n*索引！[它是如何工作的...](img/4818OS_10_26.jpg) * 0*。尽管我们常假设信号是无限序列，但在实际应用中，信号通常由有限大小*N*的*向量*表示。'
- en: In the continuous case, we would rather manipulate time-dependent functions
    *f(t)*. Loosely stated, we can go from continuous signals to discrete signals
    by discretizing time and transforming integrals into sums.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在连续情况下，我们更倾向于操作依赖时间的函数*f(t)*。宽泛地说，我们可以通过离散化时间并将积分转化为求和，从连续信号转化为离散信号。
- en: What are linear filters?
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是线性滤波器？
- en: 'A **linear filter** *F* transforms an input signal *x = (x[n])* to an output
    signal *y = (y[n])*. This transformation is *linear*—the transformation of the
    sum of two signals is the sum of the transformed signals: *F(x+y) = F(x)+F(y)*.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**线性滤波器** *F* 将输入信号 *x = (x[n])* 转换为输出信号 *y = (y[n])*。这种转换是*线性的*——两个信号之和的转换是转换后的信号之和：*F(x+y)
    = F(x)+F(y)*。'
- en: 'In addition to this, multiplying the input signal by a constant ![What are
    linear filters?](img/4818OS_10_25.jpg) yields the same output as multiplying the
    original output signal by the same constant: ![What are linear filters?](img/4818OS_10_23.jpg).'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，将输入信号乘以常数！[什么是线性滤波器？](img/4818OS_10_25.jpg)会产生与将原始输出信号乘以相同常数相同的输出：![什么是线性滤波器？](img/4818OS_10_23.jpg)。
- en: 'A **Linear Time-Invariant** (**LTI**) filter has an additional property: if
    the signal *(x[n])* is transformed to *(y[n])*, then the *shifted* signal *(x[(n-k)])*
    is transformed to *(y[(n-k)])*, for any fixed *k*. In other words, the system
    is time-invariant because the output does not depend on the particular time the
    input is applied.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**线性时不变** (**LTI**) 滤波器有一个额外的性质：如果信号*(x[n])*被转换为*(y[n])*，那么*移位*信号*(x[(n-k)])*将被转换为*(y[(n-k)])*，对于任何固定的*k*。换句话说，系统是时不变的，因为输出不依赖于输入应用的具体时间。'
- en: Note
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: From now on, we will only consider LTI filters.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，我们只考虑LTI滤波器。
- en: Linear filters and convolutions
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 线性滤波器与卷积
- en: 'A very important result in the LTI system theory is that LTI filters can be
    described by a single signal: the impulse response *h*. This is the output of
    the filter in response to an impulse signal. For digital filters, the impulse
    signal is *(1, 0, 0, 0, ...)*.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: LTI系统理论中的一个非常重要的结果是，LTI滤波器可以通过一个单一的信号来描述：冲激响应*h*。这是滤波器对冲激信号的响应输出。对于数字滤波器，冲激信号为*(1,
    0, 0, 0, ...)*。
- en: 'It can be shown that *x = (x[n])* is transformed to *y = (y[n])* defined by
    the **convolution** of the impulse response *h* with the signal *x*:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 可以证明，*x = (x[n])*通过**卷积**与冲激响应*h*及信号*x*变换为*y = (y[n])*：
- en: '![Linear filters and convolutions](img/4818OS_10_15.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![线性滤波器和卷积](img/4818OS_10_15.jpg)'
- en: The convolution is a fundamental mathematical operation in signal processing.
    Intuitively, and considering a convolution function peaking around zero, the convolution
    is equivalent to taking a local average of the signal (*x* here), weighted by
    a given window (*h* here).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 卷积是信号处理中一个基本的数学运算。从直觉上讲，考虑到一个在零点附近有峰值的卷积函数，卷积相当于对信号（这里是*x*）进行加权的局部平均，权重由给定的窗口（这里是*h*）决定。
- en: It is implied, by our notations, that we restrict ourselves to **causal** filters
    (*h[n] = 0* for *n < 0*). This property means that the output of the signal only
    depends on the present and the past of the input, not the future. This is a natural
    property in many situations.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们的符号，隐含着我们将自己限制在**因果**滤波器（*h[n] = 0* 当*n < 0*）中。这个特性意味着信号的输出仅依赖于输入的当前和过去，而不是未来。这在许多情况下是一个自然的特性。
- en: The FIR and IIR filters
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FIR和IIR滤波器
- en: 'The **support** of a signal *(h[n])* is the set of *n* such that ![The FIR
    and IIR filters](img/4818OS_10_24.jpg). LTI filters can be classified into two
    categories:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一个信号*(h[n])*的**支持**是满足！[FIR和IIR滤波器](img/4818OS_10_24.jpg)的*n*集合。LTI滤波器可以分为两类：
- en: A **Finite Impulse Response** (FIR) filter has an impulse response with finite
    support
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**有限冲激响应**（FIR）滤波器具有有限支持的冲激响应
- en: A **Infinite Impulse Response** (IIR) filter has an impulse response with infinite
    support
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**无限冲激响应**（IIR）滤波器具有无限支持的冲激响应
- en: 'A FIR filter can be described by a finite impulse response of size *N* (a vector).
    It works by convolving a signal with its impulse response. Let''s define *b[n]
    = h[n]* for *n* ![The FIR and IIR filters](img/4818OS_10_40.jpg) * N*. Then, *y[n]*
    is a linear combination of the last *N+1* values of the input signal:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 一个FIR滤波器可以通过大小为*N*（一个向量）的有限冲激响应来描述。它通过将信号与其冲激响应进行卷积来工作。我们定义*b[n] = h[n]*，当*n*满足！[FIR和IIR滤波器](img/4818OS_10_40.jpg)
    * N*时。然后，*y[n]*是输入信号最后*N+1*个值的线性组合：
- en: '![The FIR and IIR filters](img/4818OS_10_16.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![FIR和IIR滤波器](img/4818OS_10_16.jpg)'
- en: 'On the other hand, an IIR filter is described by an infinite impulse response
    that cannot be represented exactly under this form. For this reason, we often
    use an alternative representation:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，IIR滤波器通过具有无限冲激响应来描述，这种形式下无法精确表示。出于这个原因，我们通常使用替代表示：
- en: '![The FIR and IIR filters](img/4818OS_10_17.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![FIR和IIR滤波器](img/4818OS_10_17.jpg)'
- en: This **difference equation** expresses *y[n]* as a linear combination of the
    last *N+1* values of the *input* signal (the **feedforward** term, like for a
    FIR filter) *and* a linear combination of the last *M* values of the *output*
    signal (**feedback** term). The feedback term makes the IIR filter more complex
    than a FIR filter in that the output depends not only on the input but also on
    the previous values of the output (dynamics).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这个**差分方程**将*y[n]*表示为输入信号的最后*N+1*个值的线性组合（**前馈**项，类似于FIR滤波器），*以及*输出信号的最后*M*个值的线性组合（**反馈**项）。反馈项使得IIR滤波器比FIR滤波器更复杂，因为输出不仅依赖于输入，还依赖于输出的先前值（动态性）。
- en: Filters in the frequency domain
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 频域中的滤波器
- en: We only described filters in the temporal domain. Alternate representations
    in other domains exist such as Laplace transforms, Z-transforms, and Fourier transforms.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只描述了时域中的滤波器。其他域中的替代表示方法如拉普拉斯变换、Z变换和傅里叶变换等也存在。
- en: 'In particular, the *Fourier transform* has a very convenient property: it transforms
    convolutions into multiplications in the frequency domain. In other words, in
    the frequency domain, an LTI filter multiplies the Fourier transform of the input
    signal by the Fourier transform of the impulse response.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 特别地，*傅里叶变换*具有一个非常方便的特性：它将卷积转化为频域中的乘法。换句话说，在频域中，一个LTI滤波器将输入信号的傅里叶变换与冲激响应的傅里叶变换相乘。
- en: The low-, high-, and band-pass filters
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 低通、高通和带通滤波器
- en: 'Filters can be characterized by their effects on the amplitude of the input
    signal''s frequencies. They are as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 滤波器可以通过它们对输入信号频率幅度的影响来表征。具体如下：
- en: A **low-pass filter** attenuates the components of the signal at frequencies
    *higher* than a **cutoff frequency**
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**低通滤波器**衰减高于**截止频率**的信号分量'
- en: A **high-pass filter** attenuates the components of the signal at frequencies
    *lower* than a **cutoff frequency**
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高通滤波器**衰减低于**截止频率**的信号成分，*低频*部分'
- en: A **band-pass filter** passes the components of the signal at frequencies within
    a certain range and attenuates those outside
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**带通滤波器**通过特定频率范围内的信号成分，并衰减范围外的信号成分'
- en: In this recipe, we first convolved the input signal with a triangular window
    (with finite support). It can be shown that this operation corresponds to a low-pass
    FIR filter. It is a particular case of the **moving average** method, which computes
    a local weighted average of every value in order to smooth out the signal.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们首先将输入信号与一个三角形窗口进行卷积（窗口有限支持）。可以证明，这个操作相当于一个低通FIR滤波器。这是**移动平均**方法的一个特殊案例，该方法通过计算每个值的局部加权平均来平滑信号。
- en: Then, we applied two instances of the **Butterworth filter**, a particular kind
    of IIR filter that can act as a low-pass, high-pass, or band-pass filter. In this
    recipe, we first used it as a low-pass filter to smooth out the signal, before
    using it as a high-pass filter to extract fast variations of the signal.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，我们应用了两次**巴特沃斯滤波器**，这是一种特定类型的IIR滤波器，能够作为低通、高通或带通滤波器。在这个配方中，我们首先将其用作低通滤波器来平滑信号，接着再用作高通滤波器来提取信号中的快速变化部分。
- en: There's more...
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Here are some general references about digital signal processing and linear
    filters:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些关于数字信号处理和线性滤波器的常规参考资料：
- en: Digital signal processing on Wikipedia, available at [http://en.wikipedia.org/wiki/Digital_signal_processing](http://en.wikipedia.org/wiki/Digital_signal_processing)
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的数字信号处理，详见[http://en.wikipedia.org/wiki/Digital_signal_processing](http://en.wikipedia.org/wiki/Digital_signal_processing)
- en: Linear filters on Wikipedia, available at [http://en.wikipedia.org/wiki/Linear_filter](http://en.wikipedia.org/wiki/Linear_filter)
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的线性滤波器，详见[http://en.wikipedia.org/wiki/Linear_filter](http://en.wikipedia.org/wiki/Linear_filter)
- en: LTI filters on Wikipedia, available at [http://en.wikipedia.org/wiki/LTI_system_theory](http://en.wikipedia.org/wiki/LTI_system_theory)
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的LTI滤波器，详见[http://en.wikipedia.org/wiki/LTI_system_theory](http://en.wikipedia.org/wiki/LTI_system_theory)
- en: 'Here are some references about impulse responses, convolutions, and FIR/IIR
    filters:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些关于冲激响应、卷积以及FIR/IIR滤波器的参考资料：
- en: Impulse responses described at [http://en.wikipedia.org/wiki/Impulse_response](http://en.wikipedia.org/wiki/Impulse_response)
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 冲激响应在[http://en.wikipedia.org/wiki/Impulse_response](http://en.wikipedia.org/wiki/Impulse_response)中有描述
- en: Convolution described at [http://en.wikipedia.org/wiki/Convolution](http://en.wikipedia.org/wiki/Convolution)
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卷积在[http://en.wikipedia.org/wiki/Convolution](http://en.wikipedia.org/wiki/Convolution)中有描述
- en: FIR filters described at [http://en.wikipedia.org/wiki/Finite_impulse_response](http://en.wikipedia.org/wiki/Finite_impulse_response)
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FIR滤波器在[http://en.wikipedia.org/wiki/Finite_impulse_response](http://en.wikipedia.org/wiki/Finite_impulse_response)中有描述
- en: IIR filters described at [http://en.wikipedia.org/wiki/Infinite_impulse_response](http://en.wikipedia.org/wiki/Infinite_impulse_response)
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IIR滤波器在[http://en.wikipedia.org/wiki/Infinite_impulse_response](http://en.wikipedia.org/wiki/Infinite_impulse_response)中有描述
- en: Low-pass filters described at [http://en.wikipedia.org/wiki/Low-pass_filter](http://en.wikipedia.org/wiki/Low-pass_filter)
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低通滤波器在[http://en.wikipedia.org/wiki/Low-pass_filter](http://en.wikipedia.org/wiki/Low-pass_filter)中有描述
- en: High-pass filters described at [http://en.wikipedia.org/wiki/High-pass_filter](http://en.wikipedia.org/wiki/High-pass_filter)
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高通滤波器在[http://en.wikipedia.org/wiki/High-pass_filter](http://en.wikipedia.org/wiki/High-pass_filter)中有描述
- en: Band-pass filters described at [http://en.wikipedia.org/wiki/Band-pass_filter](http://en.wikipedia.org/wiki/Band-pass_filter)
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带通滤波器在[http://en.wikipedia.org/wiki/Band-pass_filter](http://en.wikipedia.org/wiki/Band-pass_filter)中有描述
- en: See also
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Analyzing the frequency components of a signal with a Fast Fourier Transform*
    recipe
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用快速傅里叶变换分析信号的频率成分* 配方'
- en: Computing the autocorrelation of a time series
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算时间序列的自相关
- en: The autocorrelation of a time series can inform us about repeating patterns
    or serial correlation. The latter refers to the correlation between the signal
    at a given time and at a later time. The analysis of the autocorrelation can thereby
    inform us about the timescale of the fluctuations. Here, we use this tool to analyze
    the evolution of baby names in the US, based on the data provided by the United
    States Social Security Administration.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列的自相关可以帮助我们了解重复的模式或序列相关性。后者是指信号在某一时刻与稍后时刻之间的相关性。自相关分析可以告诉我们波动的时间尺度。在这里，我们利用这一工具分析美国婴儿名字的变化，数据来源于美国社会保障管理局提供的数据。
- en: Getting ready
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Download the *Babies* dataset from the book's GitHub repository at [https://github.com/ipython-books/cookbook-data](https://github.com/ipython-books/cookbook-data),
    and extract it in the current directory.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 从本书的GitHub仓库下载*Babies*数据集，链接：[https://github.com/ipython-books/cookbook-data](https://github.com/ipython-books/cookbook-data)，并将其解压到当前目录。
- en: The data has been obtained from [www.data.gov](http://www.data.gov) ([http://catalog.data.gov/dataset/baby-names-from-social-security-card-applications-national-level-data-6315b](http://catalog.data.gov/dataset/baby-names-from-social-security-card-applications-national-level-data-6315b)).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 数据来自于[www.data.gov](http://www.data.gov)（[http://catalog.data.gov/dataset/baby-names-from-social-security-card-applications-national-level-data-6315b](http://catalog.data.gov/dataset/baby-names-from-social-security-card-applications-national-level-data-6315b)）。
- en: How to do it...
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We import the following packages:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们导入以下包：
- en: '[PRE19]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We read the data with pandas. The dataset contains one CSV file per year. Each
    file contains all baby names given that year with the respective frequencies.
    We load the data in a dictionary, containing one `DataFrame` per year:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用pandas读取数据。数据集每年包含一个CSV文件。每个文件包含该年所有婴儿名字及其相应的频率。我们将数据加载到一个字典中，字典中每年对应一个`DataFrame`：
- en: '[PRE20]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We write functions to retrieve the frequencies of baby names as a function
    of the name, gender, and birth year:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们编写函数以根据名字、性别和出生年份检索婴儿名字的频率：
- en: '[PRE21]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Let's define a function that computes the autocorrelation of a signal. This
    function is essentially based on NumPy's `correlate()` function.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们定义一个计算信号自相关的函数。这个函数本质上是基于NumPy的`correlate()`函数。
- en: '[PRE22]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now, we create a function that displays the evolution of a baby name as well
    as its (normalized) autocorrelation:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们创建一个显示婴儿名字及其（归一化）自相关演变的函数：
- en: '[PRE23]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Let''s take a look at two female names:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看一下两个女性名字：
- en: '[PRE24]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![How to do it...](img/4818OS_10_18.jpg)'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/4818OS_10_18.jpg)'
- en: The autocorrelation of Olivia is decaying much faster than Maria's. This is
    mainly because of the steep increase of the name Olivia at the end of the twentieth
    century. By contrast, the name Maria is varying more slowly globally, and its
    autocorrelation is decaying somewhat slower.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Olivia的自相关衰减速度比Maria的要快得多。这主要是因为Olivia在20世纪末的急剧增加。相比之下，Maria的变化较为缓慢，且其自相关衰减也较为缓慢。
- en: How it works...
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: A **time series** is a sequence indexed by time. Important applications include
    stock markets, product sales, weather forecasting, biological signals, and many
    others. Time series analysis is an important part of statistical data analysis,
    signal processing, and machine learning.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间序列**是按时间索引的序列。其重要应用包括股市、产品销售、天气预报、生物信号等。时间序列分析是统计数据分析、信号处理和机器学习的重要部分。'
- en: 'There are various definitions of the autocorrelation. Here, we define the autocorrelation
    of a time series *(x[n])* as:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 自相关有多种定义。在这里，我们将时间序列*(x[n])*的自相关定义为：
- en: '![How it works...](img/4818OS_10_19.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/4818OS_10_19.jpg)'
- en: In the previous plot, we normalized the autocorrelation by its maximum so as
    to compare the autocorrelation of two signals. The autocorrelation quantifies
    the average similarity between the signal and a shifted version of the same signal,
    as a function of the delay between the two. In other words, the autocorrelation
    can give us information about repeating patterns as well as the timescale of the
    signal's fluctuations. The faster the autocorrelation decays to zero, the faster
    the signal varies.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的图表中，我们通过最大值归一化自相关，以便比较两个信号的自相关。自相关量化了信号与其自身平移版本之间的平均相似性，这一相似性是延迟时间的函数。换句话说，自相关可以为我们提供有关重复模式以及信号波动时间尺度的信息。自相关衰减至零的速度越快，信号变化的速度越快。
- en: There's more...
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Here are a few references:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些参考资料：
- en: NumPy's correlation function documentation, available at [http://docs.scipy.org/doc/numpy/reference/generated/numpy.correlate.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.correlate.html)
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy的相关函数文档，见[http://docs.scipy.org/doc/numpy/reference/generated/numpy.correlate.html](http://docs.scipy.org/doc/numpy/reference/generated/numpy.correlate.html)
- en: Autocorrelation function in statsmodels, documented at [http://statsmodels.sourceforge.net/stable/tsa.html](http://statsmodels.sourceforge.net/stable/tsa.html)
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: statsmodels中的自相关函数，文档可见[http://statsmodels.sourceforge.net/stable/tsa.html](http://statsmodels.sourceforge.net/stable/tsa.html)
- en: Time series on Wikipedia, available at [http://en.wikipedia.org/wiki/Time_series](http://en.wikipedia.org/wiki/Time_series)
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科上的时间序列，见[http://en.wikipedia.org/wiki/Time_series](http://en.wikipedia.org/wiki/Time_series)
- en: Serial dependence on Wikipedia, available at [http://en.wikipedia.org/wiki/Serial_dependence](http://en.wikipedia.org/wiki/Serial_dependence)
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wikipedia 上的序列依赖，详情请见 [http://en.wikipedia.org/wiki/Serial_dependence](http://en.wikipedia.org/wiki/Serial_dependence)
- en: Autocorrelation on Wikipedia, available at [http://en.wikipedia.org/wiki/Autocorrelation](http://en.wikipedia.org/wiki/Autocorrelation)
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wikipedia 上的自相关，详情请见 [http://en.wikipedia.org/wiki/Autocorrelation](http://en.wikipedia.org/wiki/Autocorrelation)
- en: See also
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Analyzing the frequency components of a signal with a Fast Fourier Transform*
    recipe
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用快速傅里叶变换分析信号频率成分* 的方法'
