- en: R with Jupyter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R与Jupyter
- en: In this chapter we will be using R coding within Jupyter. I think R is one of
    the primary languages expected to be used within Jupyter. The full extent of the
    language is available to Jupyter users.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用R语言代码在Jupyter中进行编程。我认为R是Jupyter中预期使用的主要语言之一。Jupyter用户可以使用R的完整功能。
- en: How to set up R for Jupyter
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何为Jupyter设置R
- en: In the past, it was necessary to install the separate components of Jupyter,
    Python, and so on to have a working system. With Continuum Analytics, the process
    of installing Jupyter and adding the R engine to the solution set for Jupyter
    is easy and works on both Windows and Mac.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，必须安装Jupyter、Python等的独立组件才能构建一个工作系统。但使用Continuum Analytics后，安装Jupyter并将R引擎添加到Jupyter的解决方案集中的过程变得非常简单，并且支持Windows和Mac系统。
- en: 'Assuming you have installed conda already, we have one command to add support
    for R programming to Jupyter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经安装了conda，我们只需要一个命令就能为Jupyter添加对R编程的支持：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: At this point, when you start Jupyter, one of the kernels listed will now be
    R.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，当你启动Jupyter时，列出的内核中将会有R。
- en: R data analysis of the 2016 US election demographics
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2016年美国选举人口统计数据分析
- en: To get a flavor of the resources available to R developers, we can look at the
    2016 election data. In this case, I am drawing from Wikipedia ([https://en.wikipedia.org/wiki/United_States_presidential_election,_2016](https://en.wikipedia.org/wiki/United_States_presidential_election,_2016)),
    specifically the table named 2016 presidential vote by demographic subgroup. We
    have the following coding below.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解R开发者可用的资源，我们可以查看2016年的选举数据。在这个案例中，我引用了维基百科的资料([https://en.wikipedia.org/wiki/United_States_presidential_election,_2016](https://en.wikipedia.org/wiki/United_States_presidential_election,_2016))，特别是名为“2016年各人口子群体的总统选举投票”表格。以下是我们编写的代码：
- en: 'Define a helper function so we can print out values easily. The new `printf`
    function takes any arguments passed `(...)` and passes them along to `sprintf`:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个辅助函数，以便我们可以轻松地打印出值。新的`printf`函数接受传入的任何参数`(...)`并将其传递给`sprintf`：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'I have stored the separate demographic statistics into different **TSV** (**tab-separated
    value)** files, which can be read in using the following coding. For each table,
    we use the `read.csv` function and specify the field separator as a tab instead
    of the default comma. We then use the `head` function to display information about
    the data frame that was loaded:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我已将不同的人口统计统计数据存储在不同的**TSV**（**制表符分隔值**）文件中，可以使用以下代码读取。对于每个表格，我们使用`read.csv`函数，并将字段分隔符指定为制表符，而不是默认的逗号。然后，我们使用`head`函数显示有关已加载数据框的信息：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Across the top is a display of the columns. Every row displays the values for
    those columns in that row. Each of these `read` operations results in a display
    as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部显示了各列的名称。每一行显示该行的各列值。每次`read`操作的结果如下所示：
- en: '![](img/97bf88f3-65a1-4bf4-b964-990935c907dc.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/97bf88f3-65a1-4bf4-b964-990935c907dc.png)'
- en: 'Now, we can find the dominant characteristics of each turnout:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以找出每个投票率的主导特征：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The results are as follows for Clinton:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 克林顿的结果如下：
- en: '![](img/47a91a28-2e1f-4db3-be52-54682ae116d1.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47a91a28-2e1f-4db3-be52-54682ae116d1.png)'
- en: 'The results for Trump are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 特朗普的结果如下：
- en: '![](img/2a472ea5-a9e7-4038-98f8-1e9d1eaed4e2.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a472ea5-a9e7-4038-98f8-1e9d1eaed4e2.png)'
- en: It's interesting that there was no overlap between the majority groups supporting
    the two candidates. I think the parties targeted different groups on purpose so
    as not to overlap. There must be a guideline for spending money, by advertising
    to known, interested groups and not contend for population segments that are ambiguous.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，支持两位候选人的主要群体之间没有重叠。我认为各党派故意针对不同的群体，以避免重叠。一定有一套花钱的指南，通过广告向已知的、感兴趣的群体宣传，而不是争夺那些模糊不清的人口群体。
- en: Analyzing 2016 voter registration and voting
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析2016年选民登记与投票情况
- en: Similarly, we can look at voter registration versus actual voting (using census
    data from [https://www.census.gov/data/tables/time-series/demo/voting-and-registration/p20-580.html](https://www.census.gov/data/tables/time-series/demo/voting-and-registration/p20-580.html)).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以查看选民登记与实际投票（使用来自[https://www.census.gov/data/tables/time-series/demo/voting-and-registration/p20-580.html](https://www.census.gov/data/tables/time-series/demo/voting-and-registration/p20-580.html)的普查数据）。
- en: 'First, we load our dataset and display head information to visually check for
    accurate loading:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们加载数据集并显示头部信息，以便直观地检查加载是否准确：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/4618fa6a-47ba-4cf5-a0d7-678c92197df2.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4618fa6a-47ba-4cf5-a0d7-678c92197df2.png)'
- en: 'So, we have some registration and voting information by state. Use R to automatically
    plot all the data in *x* and *y* format using the `plot` command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们有一些按州分类的注册和投票信息。使用R自动使用`plot`命令以*x*和*y*格式绘制所有数据：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We are specifically looking at the relationship between registering to vote
    and actually voting. We can see in the following graphic that most of the data
    is highly correlated (as evidenced by the 45 degree angles of most of the relationships):'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们特别关注注册选民与实际投票之间的关系。我们可以从以下图表中看到，大多数数据高度相关（如大多数关系的45度角所示）：
- en: '![](img/4bf0119d-9dd8-4bc4-9c76-aac73e2f99bb.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4bf0119d-9dd8-4bc4-9c76-aac73e2f99bb.png)'
- en: We can produce somewhat similar results using Python, but the graphic display
    is not even close.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Python产生类似的结果，但图形显示却相差甚远。
- en: 'Import all of the packages we are using for the example:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 导入我们用于示例的所有包：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Reading a CSV file in Python is very similar. We call upon pandas to read in
    the file:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中读取CSV文件非常类似。我们调用pandas来读取文件：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'pandas will throw an error if there is string data in the data frame, so just
    delete the column (with state names):'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据框中存在字符串数据，pandas将抛出错误，因此只需删除该列（带有州名）：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'One approximate Python function is the `corr()` function, which prints out
    the numeric values for all of the cross-correlations among the items in the data
    frame. It is up to you to scan through the data, looking for correlation values
    close to `1.0`:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一个近似的Python函数是`corr()`函数，它打印出数据框中所有交叉相关项的数值。你需要扫描数据，寻找接近`1.0`的相关值：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Similarly, we have the `corrcoef()` function, which provides color intensity
    to similarly correlated items within the data frame. I did not find a way to label
    the correlated items:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们有`corrcoef()`函数，它为数据框中类似相关的项提供颜色强度。我没有找到标记相关项的方法：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](img/2a1a9c23-f2cb-49ba-b7e1-896badf30c62.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a1a9c23-f2cb-49ba-b7e1-896badf30c62.png)'
- en: 'We want to see the actual numeric value of the correlation between registration
    and voting. We can do that by calling the `cor` function to pass in the two data
    points of interest, as in:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望看到注册和投票之间的实际数值相关性。我们可以通过调用`cor`函数传入两个感兴趣的数据点来做到这一点，如下所示：
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The actual correlation value may be different from one machine class to another.
    This would have a trickling affect to follow-on values as well.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的相关值可能因机器类型而异。这会对后续数值产生影响。
- en: With a correlation of 99 percent, we are almost perfect.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于相关性达到99%，我们几乎完美。
- en: 'We can use the data points to arrive at a regression line using the `lm` function,
    where we are stating *lm(y ~ (predicted by) x)*:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用数据点来得出回归线，使用`lm`函数，其中我们说明*lm(y ~ (predicted by) x)*：
- en: '[PRE12]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: From this output, given a registered number, we multiply it by 87 percent and
    subtract 4 to get the number of actual voters. Again, the data is correlated.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 根据注册数，我们将其乘以87%并减去4以获取实际选民人数。再次强调，数据是相关的。
- en: 'We can display the characteristics of the regression line by calling the `plot`
    function and passing in the `fit` object (the `par` function is used to lay out
    the output—in this case a 2x2 matrix-like display of the four graphics):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过调用`plot`函数并传入`fit`对象来显示回归线的特征（`par`函数用于布局输出，本例中为2x2矩阵样式的四个图形）：
- en: '[PRE13]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](img/39c72cf4-b879-43c8-814a-2d0a63c48aff.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/39c72cf4-b879-43c8-814a-2d0a63c48aff.png)'
- en: 'Then, in the second part of the 2x2 display, we have these two graphics:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在2x2显示的第二部分中，我们有这两个图形：
- en: '![](img/1f8e2def-3158-412a-822b-a97743829b63.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f8e2def-3158-412a-822b-a97743829b63.png)'
- en: 'From the preceding plots we can see the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从前述图表中我们可以看到以下内容：
- en: The residual values are close to zero until we get to very large numbers
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 残差值在非常大的数值之前接近于零。
- en: The theoretical quantiles versus standardized residuals line up very well for
    most of the range
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大部分范围的理论量化与标准化残差非常匹配。
- en: The fitted values versus standardized residuals are not as close as I would
    have expected
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拟合值与标准化残差相比我预期的不是那么接近。
- en: The standardized residuals versus leverage show the same tight configuration
    among most of the values.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准化残差与杠杆的关系显示出大多数数值之间的紧密配置。
- en: 'Overall, we still have a very good model for the data. We can see what the
    residuals look like for the regression calling the `residuals` function, as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，我们对数据仍然有一个非常好的模型。我们可以通过调用`residuals`函数查看回归的残差如何：
- en: '![](img/621e7eff-331b-49b4-9a4e-a3261f032a4a.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/621e7eff-331b-49b4-9a4e-a3261f032a4a.png)'
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The residual values are bigger than I expected for such highly correlated data.
    I had expected to see very small numbers as opposed to values in the hundreds.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 残差值比我预期的要大，对于如此高度相关的数据，我本以为会看到非常小的数字，而不是数百的值。
- en: 'As always, let''s display a summary of the model that we arrived at:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，我们展示我们得到的模型摘要：
- en: '[PRE15]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You may see different results based on the machine class that you are running
    your script on.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会看到不同的结果，具体取决于你运行脚本的机器类型。
- en: 'There are many data points associated with the model in this display:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在此展示的模型中有许多数据点：
- en: Again, residuals are showing quite a range
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 再次，残差值显示出相当大的范围。
- en: Coefficients are as we saw them earlier, but the standard error is high for
    the intercept
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系数与我们之前看到的相同，但截距的标准误差较高。
- en: R squared of close to 1 is expected
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预期R平方接近1。
- en: '*p* value minimal is expected'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*p*值最小是预期的。'
- en: 'We can also use Python to arrive at a linear regression model using:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用Python来得出线性回归模型：
- en: '[PRE16]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We see the regression results in standard fashion as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到回归结果呈标准格式如下：
- en: '![](img/e6fd7aec-ffea-45b8-bd85-da4ec60a339a.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6fd7aec-ffea-45b8-bd85-da4ec60a339a.png)'
- en: 'The warnings infer some issues with the data:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 警告信息提示数据中存在一些问题：
- en: We are using the covariance matrix directly, so it is unclear how we would specify
    this otherwise
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们直接使用协方差矩阵，因此不清楚如果要以其他方式指定该矩阵该怎么做。
- en: I imagine there is strong multicollinearity as the data only has the two items
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我想数据中可能存在较强的多重共线性，因为数据只有这两个项。
- en: 'We can also plot the actual versus fitted values in Python using a script:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用Python脚本绘制实际值与拟合值的对比图：
- en: '[PRE17]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](img/4d56bfe5-424a-45ef-b46d-a4c5ecc6ed63.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d56bfe5-424a-45ef-b46d-a4c5ecc6ed63.png)'
- en: I think I like this version of the graph from Python better than the display
    from R. The added intensity circle on the bottom left is confusing.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得我更喜欢Python版本的图表，而不是R的显示。左下角添加的强度圆圈让我感到困惑。
- en: Analyzing changes in college admissions
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析大学招生变化
- en: We can look at trends in college admissions acceptance rates over the last few
    years. For this analysis, I am using the data on [https://www.ivywise.com/ivywise-knowledgebase/admission-statistics](https://www.ivywise.com/ivywise-knowledgebase/admission-statistics).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看近几年大学录取率的趋势。为此分析，我使用了[https://www.ivywise.com/ivywise-knowledgebase/admission-statistics](https://www.ivywise.com/ivywise-knowledgebase/admission-statistics)上的数据。
- en: 'First, we read in our dataset and show the summary points, from head to validate:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们读取数据集并显示摘要信息，从头部数据验证：
- en: '[PRE18]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We see the summary data for school acceptance rates as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到学校录取率的摘要数据如下：
- en: '![](img/a014b6a0-5c99-4f42-93e2-d3a6497eeedd.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a014b6a0-5c99-4f42-93e2-d3a6497eeedd.png)'
- en: It's interesting to note that the acceptance rate varies so widely, from a low
    of 5 percent to a high of 41 percent in 2017.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，录取率差异如此之大，从2017年的5%低点到41%的高点。
- en: 'Let us look at the data plots, again, to validate that the data points are
    correct:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次查看数据图，以验证数据点是否正确：
- en: '[PRE19]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](img/4b197f6e-c19c-4981-acd3-1094da8791f0.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b197f6e-c19c-4981-acd3-1094da8791f0.png)'
- en: From the correlation graphics shown, it does not look like we can use the data
    points from 2007\. The graphs show a big divergence between 2007 and the other
    years, whereas the other three have good correlations.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 从相关性图表来看，似乎无法使用2007年的数据点。图表显示2007年与其他年份之间存在较大的差异，而其他三年的相关性较好。
- en: So, we have 3 consecutive years of data from 25 major US universities. We can
    convert the data into a time series using a few steps.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们有来自25所美国主要大学的连续3年数据。我们可以通过几个步骤将数据转换为时间序列。
- en: 'First, we create a vector of the average acceptance rates for these colleges
    over the years 2015-2017\. We use the mean function to determine the average across
    all colleges in our data frame. We have some `NA` values in our data frame, so
    we need to tell the mean function to ignore those values (`na.rm=TRUE`):'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个包含2015至2017年期间这些高校平均接受率的向量。我们使用均值函数来确定数据框中所有高校的平均值。数据框中有一些`NA`值，因此我们需要告诉均值函数忽略这些值（`na.rm=TRUE`）：
- en: '[PRE20]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Next, we convert the vector points into a time series. A time series is passed
    in the vector to use the start and end points, and the frequency of the data points.
    In our case, the frequency is yearly, so `frequency = 1`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将该向量转换为时间序列。时间序列通过传入向量来使用起始和结束点，以及数据点的频率。在我们的例子中，频率是每年一次，所以`frequency
    = 1`：
- en: '[PRE21]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Then plot the time series to get a good visual:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 然后绘制时间序列，以获得一个好的可视化效果：
- en: '[PRE22]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](img/89722722-b336-4205-aae9-f1796b62006f.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89722722-b336-4205-aae9-f1796b62006f.png)'
- en: So, the clear trend is to drop acceptance rates across the board, as we see
    the initial acceptance rate at `.15` dropping steadily to `.14` in 2017.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，明显的趋势是全面降低接受率，正如我们看到的，初始接受率为`.15`，在2017年稳步下降至`.14`。
- en: 'The data looks very good and well-fitting, as data points are lining up in
    clean lines. We can use this time series to predict the next few years. There
    are versions of the Holt-Winters algorithm that can predict based on level data,
    level data plus a trend component, and level data plus a trend component plus
    a seasonality component. We have a trend, but no seasonality:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 数据看起来非常好，非常合适，因为数据点排列整齐。我们可以使用这个时间序列来预测未来几年。Holt-Winters算法的版本可以基于级别数据、级别数据加上趋势分量以及级别数据加上趋势分量和季节性分量进行预测。我们有一个趋势，但没有季节性：
- en: '[PRE23]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Our coefficients for the exponential smoothing of one-seventh and close to zero
    mean we aren't aggressively dropping acceptance rates, but they are dropping.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的指数平滑系数为七分之一，接近零意味着我们并没有大幅降低录取率，但它们正在下降。
- en: 'Now that we have a good time series model of the existing data, we can produce
    a forecast of the next three years and plot it:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了现有数据的良好时间序列模型，我们可以预测未来三年的数据并绘制出来：
- en: '[PRE24]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![](img/36892259-bcc9-40ab-b060-abcc4cabde7b.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/36892259-bcc9-40ab-b060-abcc4cabde7b.png)'
- en: 'The trend is clearly negative, but as mentioned earlier, it is not a dramatic
    drop-about half a percent a year. We can also look at similar coding from Python
    that could be used as follows. Import all of the Python packages we will be using:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 趋势显然是负面的，但如前所述，这不是一个急剧的下降，大约每年下降半个百分点。我们还可以查看Python的类似编码，如下所示。导入我们将使用的所有Python包：
- en: '[PRE25]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Read in the college acceptance to a data frame:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 将大学录取数据读入数据框架：
- en: '[PRE26]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Remove the `School` column as Python cannot calculate from strings:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 删除`School`列，因为Python无法从字符串中计算：
- en: '[PRE27]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Convert the data to sets by year:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 按年份将数据转换为集合：
- en: '[PRE28]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We see the dataset transposed to our desired shape as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到数据集转置为我们期望的形状如下：
- en: '![](img/a7d30ed7-ed83-43eb-943e-d02215fdaa82.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a7d30ed7-ed83-43eb-943e-d02215fdaa82.png)'
- en: 'See what the data looks like:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 查看数据的样子：
- en: '[PRE29]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![](img/da35730e-65ed-43af-803a-1c2ff0a54640.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/da35730e-65ed-43af-803a-1c2ff0a54640.png)'
- en: We see the same slight downtrend for acceptance.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到相同的录取率略微下降趋势。
- en: Using Holt-Winters forecasting in Python was problematic as it required transforming
    the data further. Overall, it is much more complicated to do the same processing
    that was straightforward in R in the preceding section.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中使用Holt-Winters预测存在问题，因为它需要进一步转换数据。总体而言，在前一节中R中的相同处理变得更加复杂。
- en: Predicting airplane arrival time
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预测飞机到达时间
- en: R has built-in functionality for splitting up a data frame between training
    and testing sets, building a model based on the training set, predicting results
    using the model and the testing set, and then visualizing how well the model is
    working.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: R具有内置功能，可以在训练集和测试集之间拆分数据框架，基于训练集构建模型，使用模型和测试集预测结果，然后可视化模型的工作效果。
- en: For this example, I am using airline arrival and departure times versus scheduled
    arrival and departure times from [http://stat-computing.org/dataexpo/2009/the-data.html](http://stat-computing.org/dataexpo/2009/the-data.html)
    for 2008\. The dataset is distributed as a `.bz2` file that unpacks into a CSV
    file. I like this dataset, as the initial row count is over 7 million and it all
    works nicely in Jupyter.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个例子，我使用了2008年从[http://stat-computing.org/dataexpo/2009/the-data.html](http://stat-computing.org/dataexpo/2009/the-data.html)获取的航空公司到达和出发时间与预定到达和出发时间。数据集分发为`.bz2`文件，解压后为CSV文件。我喜欢这个数据集，因为初始行数超过700万，并且在Jupyter中运行得非常顺利。
- en: 'We first read in the airplane data and display a summary. There are additional
    columns in the dataset that we are not using:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先读取飞机数据并显示摘要。数据集中还有其他我们没有使用的列：
- en: '[PRE30]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Many of the data points have `NA` values. We need to remove these in order
    to build an accurate model:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 许多数据点具有`NA`值。我们需要删除这些值以建立准确的模型：
- en: '[PRE31]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Let''s create our partitions:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建我们的分区：
- en: '[PRE32]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Let''s build our model of the arrival time (`ArrTime`) based on the fields:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们根据以下字段建立到达时间(`ArrTime`)的模型：
- en: '`CRSArrTime`: Scheduled arrival time'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRSArrTime`: 计划到达时间'
- en: '`ArrDelay`: Arrival delay'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ArrDelay`: 到达延误'
- en: '`DepDelay`: Departure delay'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DepDelay`: 出发延误'
- en: '`Diverted`: Whether the plane used a diverted route'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Diverted`: 飞机是否使用了转移路线'
- en: '`CarrierDelay`: Delay by the carrier systems'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CarrierDelay`: 航空公司系统的延误'
- en: '`WeatherDelay`: Delay due to weather'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WeatherDelay`：由于天气原因的延误'
- en: '`NASDelay`: Delay due to NAS'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NASDelay`：由于 NAS 的延误'
- en: '`SecurityDelay`: Delay due to security'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SecurityDelay`：由于安全原因的延误'
- en: '`LateAircraftDelay`: Plane arrived late due to other delay'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LateAircraftDelay`：由于其他延误导致飞机晚点'
- en: '![](img/26026249-083f-40ea-adc1-49a714edff55.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/26026249-083f-40ea-adc1-49a714edff55.png)'
- en: Two of the data items are just flags (0/1), unfortunately. The greatest predictor
    appears to be the scheduled arrival time. The other various delay factors have
    small effects. I think it just feels as if it's taking an extra 20 minutes for
    a security check or the like; it's a big deal when you are traveling.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 其中有两个数据项只是标志（0/1），很不幸。最大的预测因素似乎是计划的到达时间。其他各种延误因素的影响较小。我认为这就像是安检或类似的事情多花了额外的20分钟；对于旅行者来说，这是件大事。
- en: 'Now that we have a model, let''s use the testing set to make predictions:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了模型，让我们使用测试集来进行预测：
- en: '[PRE33]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Plot out the predicted versus actual data to get a sense of the model''s accuracy:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制预测数据与实际数据的对比图，以评估模型的准确性：
- en: '[PRE34]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![](img/80044d12-8cb5-408f-a16c-db4f00043dec.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80044d12-8cb5-408f-a16c-db4f00043dec.png)'
- en: Visually, the predictions match up well with the actuals as shown by the almost
    45 degree line. That whole set of predicted points on the lower-right portion
    of the graphic is troublesome. There appears to be many predictions that are well
    below the actuals. There must be additional factors involved, as I would have
    expected all of the data to plot in one area rather than two.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 从视觉上看，预测数据与实际数据非常吻合，几乎呈45度线对齐。然而，图表右下角的整组预测点是令人困扰的。似乎有很多预测数据远低于实际值。我认为必定还有其他因素在影响预测结果，因为我本来预期所有数据会聚集在一个区域，而不是分布在两个区域。
- en: Summary
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we first set up R as one of the engines available for a notebook.
    Then we used some rudimentary R to analyze voter demographics for the presidential
    election. We looked at voter registration versus actual voting. Next, we analyzed
    the trend in college admissions. Finally, we looked at using a predictive model
    to determine whether flights would be delayed or not.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先将 R 设置为可用于笔记本的引擎之一。然后我们使用一些基础的 R 语言分析了总统选举中的选民人口统计数据。我们分析了选民登记与实际投票情况。接下来，我们分析了大学招生趋势。最后，我们研究了使用预测模型来判断航班是否会延误。
- en: In the next chapter, we will look into wrangling data in different ways under
    Jupyter.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨在 Jupyter 中以不同方式处理数据。
