- en: Managing Packages
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包管理
- en: 'In the preface, we mentioned that this book is for readers who are looking
    for tools in the area of data science. For the researchers or practitioners working
    in the area of data science, there are several important issues. First, they need
    to understand their raw data, such as its purpose, structure, how reliable and
    complex it is, and how it is collected. Second, researchers and practitioners
    should have a good method of processing that data. In other words, they should
    master at least one computer language, such as R, Python, or Julia. After learning
    a language''s basics, they should turn to some related packages, since understanding
    these packages might determine how far they can go in the area of data science.
    In this chapter, the following topics will be covered:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前言中，我们提到本书是为那些寻求数据科学领域工具的读者编写的。对于从事数据科学领域研究或实践的人员来说，有几个重要问题。首先，他们需要了解自己的原始数据，比如数据的目的、结构、可靠性和复杂性以及如何收集这些数据。其次，研究人员和实践者应当具备处理数据的良好方法。换句话说，他们应当掌握至少一种计算机语言，如R、Python或Julia。在学习完语言的基础知识后，他们应当转向一些相关的包，因为理解这些包可能决定他们在数据科学领域能够走多远。本章将涵盖以下主题：
- en: Introduction to packages, modules, or toolboxes
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包、模块或工具箱简介
- en: Two examples of using packages
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用包的两个示例
- en: Finding all packages in R, Python, Julia, and Octave
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找R、Python、Julia和Octave中的所有包
- en: Task views for R
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R的任务视图
- en: Finding manuals
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找手册
- en: Package dependencies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包依赖性
- en: Package management in R, Python, Julia, and Octave
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R、Python、Julia和Octave中的包管理
- en: Conda-the package manager
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Conda - 包管理器
- en: Creating a set of programs in R and Python
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在R和Python中创建一组程序
- en: Finding environmental variables
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找环境变量
- en: Introduction to packages, modules, or toolboxes
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包、模块或工具箱简介
- en: Over the years, researchers or users have generated many packages around different
    specific tasks for various programming languages. For this book, we treat *module*
    or *toolbox* as a synonym for *package.* For the analyses in the area of data
    science, it is very important to use various packages to achieve our goals. There
    are several advantages in using various packages. First, we don't have to write
    our code from scratch if we can find some relevant programs contained in certain
    packages. This would save us a huge amount of time. In other words, we don't have
    to reinvent the wheel, and this is especially true for developers. Second, packages
    are usually developed by people who have certain expertise in relevant areas.
    Because of this, the quality of a package is usually higher than the programs
    written by a, relatively speaking, new user. Third, for beginners, the knowledge
    of packaging and related skill sets would help them speed up their learning process.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，研究人员或用户围绕不同的具体任务为各种编程语言生成了许多包。本书中，我们将*模块*或*工具箱*视为*包*的同义词。在数据科学领域的分析中，使用各种包来实现目标是非常重要的。使用各种包有几个优点。首先，如果我们能够找到某些包中包含的相关程序，就不需要从头开始编写代码。这将节省大量时间。换句话说，我们不必重新发明轮子，尤其对于开发人员来说更是如此。其次，包通常是由在相关领域有一定专长的人开发的。因此，包的质量通常高于由相对较新的用户编写的程序。第三，对于初学者来说，了解打包和相关的技能集将有助于加速他们的学习过程。
- en: Two examples of using packages
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用包的两个示例
- en: 'It is always a good idea to use examples to illustrate how useful or important
    it is to understand some closely related packages. The first example is extremely
    simple: generate a QR code for the CNN website. It has just two lines. Note that
    you need to run `install.packages("qrcode")` if the package is not preinstalled:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用示例来说明理解一些紧密相关的包是多么有用或重要，总是一个好主意。第一个例子非常简单：生成CNN网站的二维码。它只有两行代码。注意，如果包没有预先安装，你需要运行`install.packages("qrcode")`：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The generated QR code is shown here. Users can use the QR scanner installed
    on their cell phone to go to the CNN website:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的二维码如下所示。用户可以使用手机上安装的二维码扫描器访问CNN网站：
- en: '![](img/6470e0a7-a4c1-491a-a6d9-5e429c3d185a.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6470e0a7-a4c1-491a-a6d9-5e429c3d185a.png)'
- en: 'For the second example, we believe the best example for the researchers and
    users in the area of data science is an R package called `rattle`. If a user hasn''t
    preinstalled the package, they can type the following line of R code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第二个例子，我们认为数据科学领域的研究人员和用户最好的示例是一个名为`rattle`的R包。如果用户没有预安装该包，可以输入以下R代码：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To launch the package, type the following two lines of R code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 启动包时，请输入以下两行R代码：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the application is opened follow these steps:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 打开应用程序后，按照以下步骤操作：
- en: 'After you hit the *Enter* key, the screen displays the following:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*Enter*键后，屏幕显示以下内容：
- en: '![](img/857a8a46-2c84-4be7-a3b8-10ce066a4704.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/857a8a46-2c84-4be7-a3b8-10ce066a4704.png)'
- en: 'This is a powerful package for users in the area of data science. If we take
    the Project, Tools, Settings, and Help tabs as the first row, then the default
    location after we launch the package is on the Data tab (see the third row). Under
    Data, we can see that there are eight ways to retrieve data. Assume that we choose
    R Dataset. The advantage of this choice is that we can generate our own dataset
    with a data frame format. The following line of R code will retrieve the historical
    data for IBM. Users can also go to Yahoo! finance at [https://finance.yahoo.com](https://finance.yahoo.com)
    to download a more updated dataset:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个强大的数据科学领域用户工具包。如果我们将项目、工具、设置和帮助选项卡视为第一行，则启动该工具包后，默认位置是在数据选项卡（请参见第三行）。在“数据”下，我们可以看到有八种方法来检索数据。假设我们选择R数据集。选择该选项的优点是我们可以生成具有数据框格式的自定义数据集。以下的R代码将检索IBM的历史数据。用户也可以访问Yahoo!
    Finance [https://finance.yahoo.com](https://finance.yahoo.com) 下载更新的数据集：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'After clicking R Dataset, followed by the down arrow key to the right of Data
    Name, we will see x. Select it and click Execute – we will see the following result:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“R数据集”，然后按下数据名称右侧的向下箭头键，我们将看到x。选择它并点击“执行”——我们将看到以下结果：
- en: '![](img/ce9c6f64-5dc9-4643-b592-1a728e9f1a6b.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce9c6f64-5dc9-4643-b592-1a728e9f1a6b.png)'
- en: 'After clicking Explore, we can see several options on how to look at this specific
    dataset. For the Summary of the dataset, we have the following result:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“探索”后，我们可以看到如何查看这个特定数据集的几个选项。对于数据集的摘要，我们得到了以下结果：
- en: '![](img/e59e39db-5cc7-40d0-aeb7-d06066a85087.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e59e39db-5cc7-40d0-aeb7-d06066a85087.png)'
- en: 'The following is our third example. Click Data | Library, and then choose the
    Titanic dataset, as shown:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们的第三个示例。点击数据 | 库，然后选择泰坦尼克号数据集，如下所示：
- en: '![](img/3efdb22a-3214-4ca9-905c-f8def0c8f33d.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3efdb22a-3214-4ca9-905c-f8def0c8f33d.png)'
- en: 'After clicking Execute, the screen will display the following:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“执行”后，屏幕将显示以下内容：
- en: '![](img/ebc4cade-0842-4425-816c-7cde82712aef.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ebc4cade-0842-4425-816c-7cde82712aef.png)'
- en: Now, let's try to use a decision tree to find out the impacts of **Sepal.Length**,
    **Sepal.width**, **Petal.Length**, and **Petal.width** on the classification of
    **Species**.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试使用决策树找出**花萼长度**、**花萼宽度**、**花瓣长度**和**花瓣宽度**对**物种**分类的影响。
- en: Choose **Species **as our target variable as shown in the previous screenshot.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**物种**作为我们的目标变量，如前述截图所示。
- en: 'Click Model | Tree | Execute. From that, we will get the following result.
    To make our presentation better, the final output is divided into two parts. The
    top part is shown here:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击模型 | 树 | 执行。从中，我们将得到以下结果。为了使我们的展示更清晰，最终输出被分为两部分。顶部部分如下所示：
- en: '![](img/7af1b79e-b470-4265-a399-1c07b93b7852.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7af1b79e-b470-4265-a399-1c07b93b7852.png)'
- en: 'The second part is shown next. On the right-hand side of the previous screenshot,
    we can see Draw, which can be used to draw a decision tree:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二部分如下所示。在前述截图的右侧，我们可以看到“绘制”，它可以用来绘制决策树：
- en: '![](img/f31bdbc6-4507-469f-86cb-b39b878316ce.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f31bdbc6-4507-469f-86cb-b39b878316ce.png)'
- en: 'On the other hand, we can draw a decision tree based on the previous result
    by clicking on Draw (see the following diagram):'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一方面，我们可以根据之前的结果绘制决策树，点击“绘制”（请参见下图）：
- en: '![](img/cf74d646-03c8-48b3-a3f7-b1275a7d5d6e.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf74d646-03c8-48b3-a3f7-b1275a7d5d6e.png)'
- en: 'From the previous tree, the first layer or question is whether the **Petal.Length**
    is smaller than **2.6** or not. From the green box, we know that there were 100%
    change that it is **setosa**. If the answer is **no** (that is, the **Petal.Length**
    is bigger than **2.6**), we have another question: is the **Petal.Length** is
    longer than **4.8**.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的树中，第一层或问题是**花瓣长度**是否小于**2.6**。从绿色框中我们可以知道，如果是的话，100%是**山鸢尾**。如果答案是**否**（即**花瓣长度**大于**2.6**），我们有另一个问题：**花瓣长度**是否大于**4.8**。
- en: 'After clicking on Rules, we will see several layers of rules, as shown:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“规则”后，我们将看到几层规则，如下所示：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Another great thing is that we can recover the R program or R scripts to run
    the previous decision tree model, after clicking on Log. To save space, the related
    graph and script will not be shown here. The related code can be found at the
    bottom of the log file, where users can save it or copy and paste it to generate
    their own program. Readers will find it at [http://.canisius.edu/~yany/R/iris02.txt](http://.canisius.edu/~yany/R/iris02.txt) (This
    link will be active from June 2018).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个很棒的功能是，在点击Log后，我们可以恢复R程序或R脚本，以运行之前的决策树模型。为了节省空间，相关的图表和脚本在这里不会显示。相关代码可以在日志文件的底部找到，用户可以保存它或复制粘贴到自己的程序中。读者可以在[http://.canisius.edu/~yany/R/iris02.txt](http://.canisius.edu/~yany/R/iris02.txt)找到它（该链接将在2018年6月生效）。
- en: Finding all R packages
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找所有R包
- en: 'For R-related packages, go to [http://r-project.org](http://r-project.org)
    first. Click on CRAN and choose a mirror location, then click Packages on the
    left-hand side. We can see two lists, as shown here:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于与R相关的包，首先访问[http://r-project.org](http://r-project.org)。点击CRAN并选择一个镜像位置，然后点击左侧的Packages。我们可以看到两个列表，如下所示：
- en: '![](img/eebc1e16-8ff2-47a4-a5a0-b6a6fd1f27ef.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eebc1e16-8ff2-47a4-a5a0-b6a6fd1f27ef.png)'
- en: 'On February 22, 2018, there are 12,173 R packages available. The first list
    contains all available packages sorted by their publication dates (that is, the
    dates they updated, or published if they were never updated). The second list
    is sorted by their names. If we just want to find relevant packages, either list
    will be fine. For example, for the first list, here is a snapshot of a few lines:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 截止2018年2月22日，共有12,173个R包可用。第一个列表包含所有可用的包，并按其发布时间（即更新日期，如果从未更新则显示发布日期）排序。第二个列表按包名称排序。如果我们只想找到相关包，任何一个列表都可以。以下是第一个列表的几行快照：
- en: '![](img/05c693e8-6578-45df-959c-00d2ad1e3c08.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/05c693e8-6578-45df-959c-00d2ad1e3c08.png)'
- en: The first column shows when the packages were last updated, or published if
    no updates were available. The second column shows the names of the packages,
    while the last column offers a short description of the usage for each package.
    We can use keywords to find the packages we want. Later in the chapter, we will
    discuss **task views**, which is a summary of all the related R packages around
    a topic.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 第一列显示的是包的最后更新时间，如果没有更新则显示发布日期。第二列显示包的名称，而最后一列则简短地描述了每个包的使用方法。我们可以使用关键字来找到我们需要的包。在本章后面，我们将讨论**任务视图**，这是围绕某个主题总结的所有相关R包。
- en: Finding all Python packages
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找所有Python包
- en: 'To find all Python packages, we can go to [https://pypi.python.org/](https://pypi.python.org/).
    The following screenshot shows the top part of the website. As of February 22,
    2018, there are 130,230 packages available:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找所有Python包，我们可以访问[https://pypi.python.org/](https://pypi.python.org/)。以下截图显示了该网站的顶部部分。截止2018年2月22日，共有130,230个可用的包：
- en: '![](img/a8c13db3-9e5f-4156-a3d7-bf5864440eb5.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8c13db3-9e5f-4156-a3d7-bf5864440eb5.png)'
- en: 'To find the packages we want, just click Browse packages and use keywords.
    For example, after entering `Data Science`, we will see the following results:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找我们需要的包，只需点击Browse packages并使用关键字。例如，输入`Data Science`后，我们将看到以下结果：
- en: '![](img/c5925270-9473-402d-91ed-658d5d3f7066.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5925270-9473-402d-91ed-658d5d3f7066.png)'
- en: 'From the previous screenshot, we can see three columns: the first one gives
    the name of the package; the second one is called Weight, which can be viewed
    as the popularity index; and the last one offers a short description. The related
    URL is [https://pypi.python.org/pypi?%3Aaction=search&term=data+science&submit=search](https://pypi.python.org/pypi?%3Aaction=search&term=data+science&submit=search).'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的截图中，我们可以看到三列：第一列显示包的名称；第二列是Weight，表示流行度指数；最后一列提供简短的描述。相关的URL是[https://pypi.python.org/pypi?%3Aaction=search&term=data+science&submit=search](https://pypi.python.org/pypi?%3Aaction=search&term=data+science&submit=search)。
- en: Finding all Julia packages
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找所有Julia包
- en: 'For the packages written in Julia, we can go to [https://pkg.julialang.org/](https://pkg.julialang.org/).
    As of February 22, 2018, there are 1,725 packages available, as shown here:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于用Julia编写的包，我们可以访问[https://pkg.julialang.org/](https://pkg.julialang.org/)。截止2018年2月22日，共有1,725个包可用，如下所示：
- en: '![](img/ca4a4ed4-57f8-4dbb-b426-43f9f5e3ab25.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ca4a4ed4-57f8-4dbb-b426-43f9f5e3ab25.png)'
- en: 'Again, we can use keywords to search this list. For example, if we use `data`
    as our keyword, we will find 94 locations – the first one is shown in the following
    screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以使用关键字搜索这个列表。例如，如果我们使用`data`作为关键字，我们将找到94个位置——第一个位置如下图所示：
- en: '![](img/19000b7f-80d5-47b7-8275-ca8d39ad1b0f.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19000b7f-80d5-47b7-8275-ca8d39ad1b0f.png)'
- en: Finding all Octave packages
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找所有 Octave 包
- en: 'At [https://octave.sourceforge.io/packages.php](https://octave.sourceforge.io/packages.php),
    we can find a list of all available packages for Octave:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://octave.sourceforge.io/packages.php](https://octave.sourceforge.io/packages.php)网站上，我们可以找到所有可用的
    Octave 包列表：
- en: '![](img/ed830aff-6d9a-48bd-be93-701f691fbe35.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed830aff-6d9a-48bd-be93-701f691fbe35.png)'
- en: 'Again, we can search for keywords. If the word  `data` is used, we will find
    10 locations – the first few are shown here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以搜索关键字。如果使用了 `data` 这个词，我们会找到 10 个位置——前几个位置如下所示：
- en: '![](img/7ade8641-e758-4fc3-a0b4-bb4e695fa68f.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ade8641-e758-4fc3-a0b4-bb4e695fa68f.png)'
- en: Task views for R
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R的任务视图
- en: 'A task view is a set of R packages grouped by one or more experts around a
    specific topic. For example, for data visualization, we could choose the task
    view called Graphics. For a text analysis, we could choose the NaturalLanguageAnalysis
    task view. To find a list of all these task views, we can go to the R home page
    at [http://r-project.org](http://r-project.org). After clicking CRAN, choose a
    mirror server, then click Task Views on the left-hand side. The following screen
    will be displayed:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 任务视图是由一个或多个专家围绕特定主题组成的 R 包集合。例如，对于数据可视化，我们可以选择名为 Graphics 的任务视图。对于文本分析，我们可以选择自然语言分析（NaturalLanguageAnalysis）任务视图。要查找所有这些任务视图的列表，我们可以访问
    R 的主页 [http://r-project.org](http://r-project.org)。点击 CRAN 后，选择一个镜像服务器，然后点击左侧的任务视图（Task
    Views）。将会显示如下界面：
- en: '![](img/f19bddd2-c7d8-4b90-a9a1-8aa7b4cdcbda.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f19bddd2-c7d8-4b90-a9a1-8aa7b4cdcbda.png)'
- en: 'If we are interested in data visualization, then we can click on Graphics (see
    the following screenshot):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们对数据可视化感兴趣，那么我们可以点击 Graphics（见下图）：
- en: '![](img/45168e36-cc4e-4a6a-9175-31ac514124cd.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45168e36-cc4e-4a6a-9175-31ac514124cd.png)'
- en: 'To save space, only the top part is shown. The task view gives many R-related
    packages around the topics of **Graphic Display & Visualization**. Another great
    benefit is installing all related packages by issuing just three lines of R code.
    Assume that we are interested in the task view related to finance. We can install
    all R packages listed with the task view by issuing the following commands:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省空间，这里只显示了顶部部分。任务视图提供了许多与**图形显示与可视化**相关的 R 包。另一个很大的好处是通过发出仅三行 R 代码即可安装所有相关的包。假设我们对与金融相关的任务视图感兴趣。我们可以通过以下命令安装任务视图中列出的所有
    R 包：
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To update a specific view, we use the R function `update.views()`:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新特定视图，我们使用 R 函数 `update.views()`：
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Finding manuals
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找手册
- en: 'For an R package, the best way to find the manual is to find the location of
    the installed R package. In the following example, we use the R package called
    `rattle` as an example:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个 R 包，找到手册的最佳方式是找到已安装 R 包的位置。在下面的示例中，我们以名为`rattle`的 R 包为例：
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Note that different readers will definitively get different paths. Our result
    is shown in the following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，不同的读者会获得不同的路径。我们的结果显示在以下截图中：
- en: '![](img/ad343331-59d8-4720-9283-c988b011a2e7.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ad343331-59d8-4720-9283-c988b011a2e7.png)'
- en: 'The PDF manual and HTML manuals are located under the `doc` subdirectory. It
    is a great idea to explore these subdirectories. To save space, we will not show
    the detailed files contained under the subdirectories. The second best way is
    to go to [http://r-project.org](http://r-project.org), click `CRAN`, choose a
    nearby mirror location and click packages on the left-hand side. Then, from one
    of the two lists, search for the package. After clicking on the package, we will
    find the PDF file. For Python documentation, we can visit two websites  [https://www.python.org/doc/](https://www.python.org/doc/)
    and [https://packaging.python.org/](https://packaging.python.org/). The second
    one is shown in the following screenshot:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: PDF 手册和 HTML 手册位于 `doc` 子目录下。探索这些子目录是一个好主意。为了节省空间，我们不展示子目录下的详细文件。第二好的方法是访问 [http://r-project.org](http://r-project.org)，点击
    `CRAN`，选择一个附近的镜像位置，然后点击左侧的 packages。接着，从两个列表中搜索所需的包。点击包后，我们可以找到 PDF 文件。对于 Python
    文档，我们可以访问两个网站：[https://www.python.org/doc/](https://www.python.org/doc/) 和 [https://packaging.python.org/](https://packaging.python.org/)。第二个网站如下图所示：
- en: '![](img/47ad178c-8441-443d-bdfe-1495060ead4e.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47ad178c-8441-443d-bdfe-1495060ead4e.png)'
- en: To find related manuals for Julia and Octave, we can go to the website of the
    related package and find more information. Again, the two related websites are
    [https://pkg.julialang.org/](https://pkg.julialang.org/) and [https://octave.sourceforge.io/packages.php](https://octave.sourceforge.io/packages.php).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找Julia和Octave的相关手册，我们可以访问相关软件包的网站并查找更多信息。再次提示，两个相关网站是[https://pkg.julialang.org/](https://pkg.julialang.org/)和[https://octave.sourceforge.io/packages.php](https://octave.sourceforge.io/packages.php)。
- en: Package dependencies
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件包依赖关系
- en: 'There are two types of package dependencies. The first one is the package depending
    on the version of underlying software. For example, take the Octave package called
    `statistics`, available at [https://octave.sourceforge.io/statistics](https://octave.sourceforge.io/statistics).
    On February 22, 2018, it has a version of **1.3.0** and it requires an underlying
    Octave with a version of at least **4.0.0**, as shown in the last line of the
    following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 软件包依赖关系有两种类型。第一种是软件包依赖于底层软件的版本。例如，Octave中的`statistics`软件包，地址为[https://octave.sourceforge.io/statistics](https://octave.sourceforge.io/statistics)。在2018年2月22日，它的版本为**1.3.0**，并且需要底层的Octave版本至少为**4.0.0**，如下所示的截图的最后一行：
- en: '![](img/3cbc000b-8527-4c47-9cd6-086dd368a186.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3cbc000b-8527-4c47-9cd6-086dd368a186.png)'
- en: The second type of dependency is between packages. Developers of various packages
    use many functions embedded in other developed packages. Not only does this save
    time, but it also means they don't have to reinvent the wheel. From the last line
    of the previous screenshot, we know that this package depends on another Octave
    package called `io`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类依赖关系是软件包之间的依赖。各种软件包的开发人员使用许多嵌入在其他已开发软件包中的函数。这不仅节省了时间，还意味着他们无需重新发明轮子。从前面截图的最后一行中，我们可以知道这个软件包依赖于另一个名为`io`的Octave软件包。
- en: 'In the following, we show the process of installation. First, we download the
    ZIP file from [https://octave.sourceforge.io/statistics/](https://octave.sourceforge.io/statistics/).
    After using the correct path directing us to the ZIP file, we issue the following
    command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面，我们展示了安装过程。首先，我们从[https://octave.sourceforge.io/statistics/](https://octave.sourceforge.io/statistics/)下载ZIP文件。在使用正确的路径指向ZIP文件后，我们执行以下命令：
- en: '[PRE8]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The `error` message indicates that we have to install another package first.
    After installing the `io` package, the problem is solved, and here is the result
    after issuing the previous command the second time:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`error`消息表示我们需要先安装另一个软件包。安装完`io`软件包后，问题解决了，以下是第二次执行前述命令后的结果：'
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: For information about changes from previous versions of the `statistics` package,
    run  `news statistics`. Most of the time, users should not worry about package
    dependencies since many packages will update those packages automatically when
    we install them.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看`statistics`软件包相对于之前版本的变化，请运行`news statistics`。大多数情况下，用户不需要担心软件包依赖关系，因为许多软件包在我们安装时会自动更新那些依赖的软件包。
- en: Package management in R
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R中的软件包管理
- en: 'There are three ways to install an R package. The first way is to use the `install.packages()`
    function. For example, assume that we plan to install an R package called `rattle`.
    We can use the following code to do this:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 安装R软件包有三种方式。第一种方式是使用`install.packages()`函数。例如，假设我们计划安装一个名为`rattle`的R软件包。我们可以使用以下代码来实现：
- en: '[PRE10]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The second way is to click Packages on the menu bar, choose a mirror location,
    then find the R package from a list (see the following screenshot showing the
    top part of the list):'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法是点击菜单栏中的“Packages”，选择一个镜像位置，然后从列表中找到R软件包（参见以下截图，显示了列表的顶部部分）：
- en: '![](img/0a343207-84b1-4fa3-9445-efb590b97d89.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a343207-84b1-4fa3-9445-efb590b97d89.png)'
- en: 'The third way to install an R package is to install it from a local ZIP file.
    To do so, first, manually download a ZIP file to your computer. Then click Packages
    on the menu bar and choose Install package(s) from local files..., as shown here:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 安装R软件包的第三种方式是从本地ZIP文件安装。为此，首先手动将ZIP文件下载到计算机上。然后点击菜单栏中的“Packages”，选择“Install
    package(s) from local files...”，如下所示：
- en: '![](img/23a7ffd4-df99-46ea-8f34-5022cce98fea.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23a7ffd4-df99-46ea-8f34-5022cce98fea.png)'
- en: 'To update a package, click Packages on the menu bar, then choose Update packages...
    from the drop-down menu (that is, the fifth entry in the previous screenshot).
    Another way to update is to use the update.packages() function, shown here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新软件包，请点击菜单栏中的“Packages”，然后从下拉菜单中选择“Update packages...” （即前面截图中的第五项）。另一种更新方式是使用`update.packages()`函数，如下所示：
- en: '[PRE11]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following table lists the most frequently used commands related to handling
    R packages:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了与处理R包相关的最常用命令：
- en: '| **Action** | **R command** |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| **操作** | **R命令** |'
- en: '| Load an R package | `>library(rattle)``>require(rattle)` |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 加载一个R包 | `>library(rattle)``>require(rattle)` |'
- en: '| Install a package | `>install.packages("rattle")` |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 安装一个包 | `>install.packages("rattle")` |'
- en: '| Update a package | `>update.packages("rattle")` |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| 更新一个包 | `>update.packages("rattle")` |'
- en: '| List all loaded packages | `>search()` |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| 列出所有已加载的包 | `>search()` |'
- en: '| List all preinstall packages | `>library()` |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| 列出所有预安装包 | `>library()` |'
- en: '| XML package loaded or not | `>"package:XML" %in% search()` |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| XML包是否加载 | `>"package:XML" %in% search()` |'
- en: '| XML package installed or not | `>"package:XML" %in% .packages(all.available=T)`
    |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| XML包是否安装 | `>"package:XML" %in% .packages(all.available=T)` |'
- en: '| Unload a package | `detach(package:rattle)``>detach("package:rattle",unload=TRUE)`
    |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| 卸载一个包 | `detach(package:rattle)``>detach("package:rattle",unload=TRUE)` |'
- en: '| Find more information | `help(package=rattle)``>library(help="rattle")` |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 查找更多信息 | `help(package=rattle)``>library(help="rattle")` |'
- en: Table 6.1 R commands for handling packages
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6.1 处理包的R命令
- en: 'As mentioned before, we could install all R packages listed within a specific
    task view by issuing just three lines of code. Since machine learning is one of
    the most important areas for data science, the related task view will be used
    as an example:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们可以通过仅仅三行代码来安装在特定任务视图中列出的所有R包。由于机器学习是数据科学中最重要的领域之一，我们将以相关的任务视图为例：
- en: '[PRE12]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As of February 22, 2018, there are about 168 R packages (see a list at [http://canisius.edu/~yany/doc/taskViewMachineLearning.txt](http://canisius.edu/~yany/doc/taskViewMachineLearning.txt)). We
    can also update its specific view:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2018年2月22日，已有约168个R包（可以查看[http://canisius.edu/~yany/doc/taskViewMachineLearning.txt](http://canisius.edu/~yany/doc/taskViewMachineLearning.txt)上的列表）。我们还可以更新其特定视图：
- en: '[PRE13]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Package management in Python
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python中的包管理
- en: 'We can use conda to install Python-related packages (see the related section
    later in the chapter). If we have various Python compilers, we can install Python
    packages easily. For example, if we use the Canopy compiler by `Enthought`, we
    can use Package Manager, as shown in the following screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用conda来安装与Python相关的包（稍后在本章的相关部分中有介绍）。如果我们有多个Python编译器，可以轻松安装Python包。例如，如果我们使用`Enthought`的Canopy编译器，可以使用包管理器，如下所示的截图：
- en: '![](img/c4f448bf-2449-451d-91c7-7fd5f634a70f.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4f448bf-2449-451d-91c7-7fd5f634a70f.png)'
- en: From this, we can find out how many packages were installed and how many are
    available.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 从中我们可以了解到安装了多少包，以及有多少包是可用的。
- en: 'It''s quite simple to install or update a package. For example, to install
    a package, we simply choose one from the list. The same logic applies when we
    update one. To find all embedded functions within a package, we can use the following
    command:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 安装或更新一个包非常简单。例如，要安装一个包，我们只需从列表中选择一个。更新包时也遵循同样的逻辑。要查找包中所有嵌入的函数，我们可以使用以下命令：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The related screenshot is shown here:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 相关的截图如下所示：
- en: '![](img/579e9b75-1810-4505-90ad-6159ab5398ac.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/579e9b75-1810-4505-90ad-6159ab5398ac.png)'
- en: Package management in Julia
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Julia中的包管理
- en: 'To see a list of installed packages, we use the `Pkg.status()` function, as
    shown:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看已安装包的列表，我们使用`Pkg.status()`函数，如下所示：
- en: '![](img/384dd845-a6d3-4d8a-8db5-11e1ec3cd5da.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/384dd845-a6d3-4d8a-8db5-11e1ec3cd5da.png)'
- en: 'To save space, only the first several lines are shown. Alternatively, we can
    issue `Pkg.installed()`, which returns a dictionary, mapping installed package
    names to the versions of those which are installed, as shown here:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省空间，只显示了前几行。或者，我们可以发出`Pkg.installed()`命令，它会返回一个字典，映射已安装的包名到已安装包的版本，如下所示：
- en: '![](img/b3c07f10-e576-4ca5-aa2b-c801799960f6.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b3c07f10-e576-4ca5-aa2b-c801799960f6.png)'
- en: 'To add or remove a package, we apply the `Pkg.add()` and `Pkg.rm()` functions,
    as shown in this example:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加或删除一个包，我们使用`Pkg.add()`和`Pkg.rm()`函数，如下例所示：
- en: '[PRE15]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To get all the latest versions, we issue the following command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取所有最新版本，我们发出以下命令：
- en: '[PRE16]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Package management in Octave
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Octave中的包管理
- en: 'We will use the Octave package called `statistics` as an example. First, we
    find the ZIP file for the package at [https://octave.sourceforge.io/statistics/](https://octave.sourceforge.io/statistics/),
    as shown in the following screenshot:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Octave的`statistics`包作为示例。首先，我们在[https://octave.sourceforge.io/statistics/](https://octave.sourceforge.io/statistics/)查找该包的ZIP文件，如下图所示：
- en: '![](img/3d410c3a-5434-440b-8010-b9385e66b001.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d410c3a-5434-440b-8010-b9385e66b001.png)'
- en: 'Second, we set up our path to the directory containing the previously downloaded
    ZIP file. Third, we issue `pkg install package_name`, as shown:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 第二，我们设置路径指向包含先前下载的 ZIP 文件的目录。第三，我们执行 `pkg install package_name`，如下所示：
- en: '[PRE17]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'For information about changes from previous versions of the `statistics` package,
    run `news statistics`. To get more information about the new version, we type
    `news statistics` as mentioned previously:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 `statistics` 包的前一个版本的更改，请运行 `news statistics`。要获取新版本的更多信息，我们输入 `news statistics`，如前所述：
- en: '![](img/f41c3c8f-dc16-4e6f-8e14-e4e97f17362d.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f41c3c8f-dc16-4e6f-8e14-e4e97f17362d.png)'
- en: 'To load and unload a package, we have the following code:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要加载和卸载一个包，我们有以下代码：
- en: '[PRE18]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: As for all the other functions included in the `statistics` package, see [https://octave.sourceforge.io/statistics/overview.html](https://octave.sourceforge.io/statistics/overview.html).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 至于 `statistics` 包中的所有其他功能，请参见 [https://octave.sourceforge.io/statistics/overview.html](https://octave.sourceforge.io/statistics/overview.html)。
- en: Conda – the package manager
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Conda – 包管理器
- en: 'After we launch Anaconda Prompt and issue `conda help`, we will see the following
    output:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Anaconda Prompt 并执行 `conda help` 后，我们将看到以下输出：
- en: '![](img/5bb6556a-d35f-4ab9-a67e-17fdc29e88d2.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5bb6556a-d35f-4ab9-a67e-17fdc29e88d2.png)'
- en: 'From the previous help menu, we know that we can install, update, and uninstall
    a package. Usually, we can use `conda` to install a package. However, we may receive
    an error message (see the following example):'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的帮助菜单中，我们知道可以安装、更新和卸载包。通常，我们可以使用 `conda` 来安装包。然而，我们也可能会收到错误信息（见下例）：
- en: '![](img/32bbc595-8a56-40ed-80ab-8dfaf41cd484.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/32bbc595-8a56-40ed-80ab-8dfaf41cd484.png)'
- en: 'To update conda itself, we use `conda update -n base conda` command, as shown
    here:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新 conda 本身，我们使用 `conda update -n base conda` 命令，如下所示：
- en: '![](img/25b12823-2fc3-445a-8abc-4bf719a1e5e8.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25b12823-2fc3-445a-8abc-4bf719a1e5e8.png)'
- en: 'We could find more information about specific Python packages by using the
    search function, as shown here:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用搜索功能找到更多关于特定 Python 包的信息，如下所示：
- en: '![](img/456f341a-4ef9-463d-9dc0-79b9e6f1ae8e.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/456f341a-4ef9-463d-9dc0-79b9e6f1ae8e.png)'
- en: 'The following table lists several of the most used commands:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了几个最常用的命令：
- en: '| **Command** | **Explanation** |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **解释** |'
- en: '| `Conda help``Conda info` | Get help about the usages of `conda` |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| `Conda help` `Conda info` | 获取关于 `conda` 用法的帮助 |'
- en: '| `conda update -n base conda` | Get information related to `conda`, such as
    the current version, base environment and the related websites |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| `conda update -n base conda` | 获取有关 `conda` 的信息，如当前版本、基本环境和相关网站 |'
- en: '| `conda search matplotlib` | Find all versions about this specific Python
    package |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| `conda search matplotlib` | 查找所有版本的这个特定 Python 包 |'
- en: '| `conda install matploblit` | Install the Python package called `matplotlib`
    |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| `conda install matploblit` | 安装名为 `matplotlib` 的 Python 包 |'
- en: '| `conda update matploblit` | Update the Python packaged called `matplotlib`
    |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| `conda update matploblit` | 更新名为 `matplotlib` 的 Python 包 |'
- en: '| `conda remove matploblit` | Remove the Python package called `matplotlib`
    |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| `conda remove matploblit` | 删除名为 `matplotlib` 的 Python 包 |'
- en: Table 6.2 Most used Conda commands
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6.2 最常用的 Conda 命令
- en: Creating a set of programs in R and Python
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 R 和 Python 中创建一组程序
- en: 'On numerous occasions, for a specific research topic, researchers will collect
    many datasets and write many programs. Why not write a big program? There are
    several reasons for not doing so. First, we might need several steps to finish
    the project. Second, the project might be too complex, so we have divided the
    whole project into several small portions. Each researcher will be responsible
    for one or a few portions. Third, according to the flow of the whole process,
    we might want to have several parts, such as devoting a part to processing data,
    a part to running various regressions, and a part to summarizing the results.
    Because of this, we need a way of putting all the programs together. In the following
    example, we will show you how to achieve this in both R and Python. For R, assume
    that we have the following functions:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，对于一个特定的研究课题，研究人员会收集许多数据集并编写许多程序。为什么不写一个大型程序呢？有几个原因说明我们不这么做。首先，我们可能需要几个步骤来完成项目。第二，项目可能太复杂，因此我们将整个项目分成几个小部分，每个研究人员负责一个或几个部分。第三，根据整个过程的流程，我们可能希望有几个部分，比如专门用来处理数据的部分，专门运行回归分析的部分，以及总结结果的部分。因此，我们需要一种将所有程序整合在一起的方法。在接下来的示例中，我们将展示如何在
    R 和 Python 中实现这一目标。对于 R，假设我们有以下函数：
- en: '[PRE19]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To make our task easy, we deliberately chose these one-line functions. Assume
    that the file is called `financalCalculator.R` under `c:/temp`. We use the `source()`
    command to activate them and use the `ls()` function to list all contained functions:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化任务，我们特意选择了这些单行函数。假设文件名为`financalCalculator.R`，存放在`c:/temp`目录下。我们使用`source()`命令激活它们，并使用`ls()`函数列出所有包含的函数：
- en: '[PRE20]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'For Python, we can generate a file containing all related functions. Then we
    can use an import function to load them all. First, download a Python program
    at [http://canisius.edu/~yany/python/myPackage.py](http://canisius.edu/~yany/python/myPackage.py).
    Assume that it is saved under `c:/temp`/. We type the following two lines:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python，我们可以生成一个包含所有相关函数的文件。然后，我们可以使用导入函数将其全部加载。首先，下载一个Python程序，地址为[http://canisius.edu/~yany/python/myPackage.py](http://canisius.edu/~yany/python/myPackage.py)。假设它保存在`c:/temp/`目录下。我们输入以下两行：
- en: '[PRE21]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'After entering these two lines, we have generated a file with an extension
    of `pyc`, as shown here:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 输入这两行后，我们已经生成了一个扩展名为`pyc`的文件，如下所示：
- en: '![](img/a81a1722-a13e-4717-96c7-fcd4c70d77c6.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a81a1722-a13e-4717-96c7-fcd4c70d77c6.png)'
- en: 'Now, we can use the import function to import the contained functions, as shown
    in the following command:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用导入函数来导入其中的函数，如下所示：
- en: '[PRE22]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Note that the first command adds `c:/temp/` to the path, while the second one
    imports our package. The following screenshot shows the output:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，第一个命令将`c:/temp/`添加到路径中，而第二个命令则导入我们的包。以下截图显示了输出：
- en: '![](img/fca015e0-0ec3-4b22-b2f5-ef5d4eeee01b.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fca015e0-0ec3-4b22-b2f5-ef5d4eeee01b.png)'
- en: Finding environmental variables
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找环境变量
- en: 'For R, we can use the `Sys.getenv()` function to find all environmental variables:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 对于R，我们可以使用`Sys.getenv()`函数来查找所有环境变量：
- en: '![](img/a55d650a-fe07-4eee-9f84-b0e71deb3967.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a55d650a-fe07-4eee-9f84-b0e71deb3967.png)'
- en: 'To save space, only the top part is shown. Again, different users will get
    different results. For Python, we use the following commands:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省空间，仅显示顶部部分。同样，不同的用户会得到不同的结果。对于Python，我们使用以下命令：
- en: '[PRE23]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The top part of the output is shown here:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的顶部部分显示如下：
- en: '![](img/4b79931f-e13e-4929-ade6-7fd15a45c2ac.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b79931f-e13e-4929-ade6-7fd15a45c2ac.png)'
- en: 'For Julia, we use the `ENV` function, as in the following:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Julia，我们使用`ENV`函数，如下所示：
- en: '![](img/458f07ec-19f7-4b92-b47c-75bd396ca010.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/458f07ec-19f7-4b92-b47c-75bd396ca010.png)'
- en: 'For Octave, we can use the `getenv()` function, as shown:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Octave，我们可以使用`getenv()`函数，如下所示：
- en: '[PRE24]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Summary
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have first discussed the importance of managing packages.
    Then, we have shown how to find all the available packages for R, Python, Julia,
    and Octave, how to install and update individual packages, and how to find the
    manual for teaching the packages. In addition, we have explained the issue of
    package dependencies and how to make our programming a little easier when dealing
    with packages. The topic of systematic environment was touched on as well.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先讨论了管理包的重要性。然后，我们展示了如何查找R、Python、Julia和Octave中所有可用的包，如何安装和更新各个包，以及如何查找包的手册。此外，我们解释了包依赖的问题，以及如何在处理包时让编程变得更简单。我们还简要讨论了系统环境的话题。
- en: In [Chapter 7](d21074f6-dd03-4801-bd06-995b58b56947.xhtml), *Optimization in
    Anaconda*, we will discuss several topics around optimization, such as general
    issues for optimization problems and expressing various kinds of optimization
    problems (for example, LP and quadratic optimization). Several examples are offered
    to make our discussion more practice-oriented, such as how to choose an optimal
    stock portfolio and how to optimize wealth and resources to promote sustainable
    development and how much the government should tax. In addition, we will introduce
    several packages for optimization in R, Python, Julia, and Octave, such as `optimization`,
    `MlBayesOpt`, `rgenoud`, `colf`, and `mize`.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](d21074f6-dd03-4801-bd06-995b58b56947.xhtml)中，*Anaconda中的优化*，我们将讨论多个与优化相关的话题，如优化问题的常见问题及表达不同类型的优化问题（例如，线性规划和二次优化）。我们提供了几个示例来使讨论更具实践性，例如如何选择一个最优的股票投资组合，如何优化财富和资源以促进可持续发展，以及政府应该征收多少税。除此之外，我们还将介绍多个用于优化的包，包括R、Python、Julia和Octave中的包，如`optimization`、`MlBayesOpt`、`rgenoud`、`colf`和`mize`。
- en: Review questions and exercises
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复习题和练习
- en: Why is understanding various packages important?
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么理解各种包很重要？
- en: What are package dependencies?
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是包依赖？
- en: For R, Python, Julia, and Octave, find out how many packages are available for
    each of them, today.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于R、Python、Julia和Octave，查找今天每个语言的可用包数量。
- en: How do we install a package in R, Python, and Julia?
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在R、Python和Julia中安装包？
- en: How do we update a package in R, Python, and Julia?
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何更新R、Python和Julia中的包？
- en: What is the task view for R?
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是R的任务视图？
- en: How do we install all R packages included in a task view?
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何安装任务视图中包含的所有R包？
- en: After an R package is installed, how do you find its related directory? What
    is the usage to find its related directory? You could use the R package called
    `healthcare` as an example. Note that the package is about tools for healthcare
    machine learning.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完R包后，如何找到它的相关目录？如何使用命令来查找其相关目录？你可以使用名为`healthcare`的R包作为例子。请注意，该包与医疗健康机器学习工具相关。
- en: Find out more details about the task views related to the subject of Econometrics.
    Then install all related R packages. How many are there?
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到与计量经济学主题相关的任务视图的更多细节。然后安装所有相关的R包。一共有多少个？
- en: How do we update one R package? How would we do it for Octave?
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何更新一个R包？如果是Octave，应该怎么做？
- en: How do we find the manual for a specific package written in R, Python, Julia,
    or Octave?
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何查找一个特定包的手册，包的语言可以是R、Python、Julia或Octave？
- en: Choose a subject, such as graph, data visualization, find 10 packages for each
    language of R, Python, Julia, and Octave. Use machine learning as an example.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个主题，比如图形、数据可视化，找到R、Python、Julia和Octave语言各自的10个相关包。以机器学习为例。
- en: Write an R program to test if a specific R package is loaded or not. If it is
    not loaded but preinstalled, then load the R package. Also, if the R package is
    not installed, then remind users to install it.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写一个R程序来测试一个特定的R包是否已加载。如果没有加载但已预安装，则加载该R包。同时，如果该R包没有安装，提醒用户进行安装。
- en: How do we use conda to install a Python package called `Matplotlib`?
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用conda安装一个名为`Matplotlib`的Python包？
- en: Where can we find the manual related to a Python package called `Matplotlib`?
    How do we find all the embedded functions?
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在哪里可以找到一个名为`Matplotlib`的Python包的手册？如何找到所有嵌入的函数？
- en: How do we find the manual for an R package called Stats?
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何查找名为Stats的R包的手册？
- en: 'For exchanging data between Excel and R, we can use an R package called `XLConnect`.
    Install the package and issue the following two lines. Comment on your result:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Excel和R之间的数据交换，我们可以使用一个名为`XLConnect`的R包。安装该包并执行以下两行代码。请评论你的结果：
- en: '[PRE25]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Try about a dozen R packages to see if the function is valid for all of them.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试约十几个R包，看看这些包的功能是否对所有包都有效。
- en: How do we find the so-called environment variables in R, Python, Julia, and
    Octave?
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何查找R、Python、Julia和Octave中的所谓环境变量？
- en: Generate two dozen R programs around a topic, such as text mining. Save them
    within one file. Activate them and use them.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 针对某个主题（如文本挖掘），生成二十多个R程序并保存在同一个文件中。激活并使用它们。
- en: Repeat the previous exercise for the Python language.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对Python语言重复之前的练习。
