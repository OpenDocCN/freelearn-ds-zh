- en: '*Chapter 7*: The AzureML Python SDK'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第7章*：AzureML Python SDK'
- en: In this chapter, you will understand how the AzureML Python **Software Development
    Kit** (**SDK**) is structured and how to work with it, something that is key for
    the DP-100 exam. You will learn how to work with the **Notebooks** experience
    that is built into the AzureML Studio web portal, a tool that boosts coding productivity.
    Using the notebook editor, you will write some Python code to gain a better understanding
    of how to manage the compute targets, datastores, and datasets that are registered
    in the workspace. Finally, you are going to revisit the Azure CLI we looked at
    in [*Chapter 2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026), *Deploying Azure
    Machine Learning Workspace Resources*, to perform workspace management actions
    using the AzureML extension. This will allow you to script and automate your workspace
    management activities.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你将了解AzureML Python **软件开发工具包**（**SDK**）的结构，以及如何使用它，这对DP-100考试至关重要。你将学习如何使用内建于AzureML
    Studio网页门户中的**笔记本**功能，这是一个提高编码生产力的工具。使用笔记本编辑器，你将编写一些Python代码，更好地理解如何管理工作区中注册的计算目标、数据存储和数据集。最后，你将重新访问在[
    *第2章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)中讨论过的Azure CLI， *部署Azure机器学习工作区资源*，通过AzureML扩展来执行工作区管理操作。这将允许你编写脚本并自动化工作区管理活动。
- en: 'In this chapter, we are going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要主题：
- en: Overview of the Python SDK
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python SDK概述
- en: Working with AzureML notebooks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AzureML笔记本
- en: Basic coding with the AzureML SDK
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AzureML SDK的基础编码
- en: Working with the AzureML CLI extension
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AzureML CLI扩展
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will need to have access to an Azure subscription. Within that subscription,
    you will need a `packt-azureml-rg`. You will need to have either a `Contributor`
    or `Owner` `packt-learning-mlw`, as described in [*Chapter 2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026),
    *Deploying Azure Machine Learning Workspace Resources*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要访问一个Azure订阅。在该订阅中，你需要一个`packt-azureml-rg`。你还需要拥有`Contributor`或`Owner`权限的`packt-learning-mlw`，如[
    *第2章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)中所述， *部署Azure机器学习工作区资源*。
- en: You will also need to have a basic understanding of the **Python** language.
    The code snippets in this chapter target Python version 3.6 or later. You should
    know the basics of how a Jupyter notebook works and how the variables that you
    defined in one cell exist in the execution context of others.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要具备基础的**Python**语言知识。本章中的代码片段适用于Python 3.6或更高版本。你应该了解Jupyter笔记本的基本工作原理，以及你在某个单元中定义的变量如何在其他单元的执行上下文中存在。
- en: You can find all the notebooks and code snippets for this chapter on GitHub
    at [http://bit.ly/dp100-ch07](http://bit.ly/dp100-ch07).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在GitHub上找到本章的所有笔记本和代码片段，链接为[http://bit.ly/dp100-ch07](http://bit.ly/dp100-ch07)。
- en: Overview of the Python SDK
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python SDK概述
- en: The AzureML **SDK** is a Python library that allows you to interact with the
    AzureML services. It also provides you with data science modules that will assist
    you in your machine learning journey. The AzureML SDK is available in the R programming
    language through a Python to R interoperability package.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: AzureML **SDK**是一个Python库，可以让你与AzureML服务进行交互。它还为你提供了数据科学模块，帮助你在机器学习过程中取得进展。AzureML
    SDK通过一个Python与R的互操作包在R编程语言中也可用。
- en: 'The SDK consists of several packages that group different types of modules
    you can import into your code base. All the Microsoft-supported modules are placed
    within packages that start with `azureml`, such as `azureml.core` and `azureml.train.hyperdrive`.
    The following diagram offers a broad overview of the AzureML SDK''s most frequently
    used packages, as well as the key modules that you will see in this book and the
    exam:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: SDK由多个包组成，这些包将不同类型的模块组织在一起，你可以将这些模块导入到代码中。所有Microsoft支持的模块都位于以`azureml`开头的包中，如`azureml.core`和`azureml.train.hyperdrive`。下图提供了AzureML
    SDK中最常用包的广泛概览，以及你将在本书和考试中看到的关键模块：
- en: '![Figure 7.1 – The AzureML SDK modules and important classes'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.1 – AzureML SDK模块和重要类'
- en: '](img/B16777_07_001.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_001.jpg)'
- en: Figure 7.1 – The AzureML SDK modules and important classes
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1 – AzureML SDK模块和重要类
- en: 'Note that all the key classes that exist in the `azureml.core` package can
    also be imported from the corresponding child module. For example, the `Experiment`
    class can be imported in either way, as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`azureml.core`包中所有的关键类也可以从相应的子模块导入。例如，`Experiment`类可以通过以下两种方式导入：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Both snippets will load the same class and you only need to use one of them.
    The first one loads the class from the `azureml.core` package, while the second
    one loads it from the `experiment` module (a file named `experiment.py`), which
    is part of the `azureml.core` package. Do not be surprised if you notice this
    type of difference in various code samples you may read through.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个代码片段将加载相同的类，您只需要使用其中一个。第一个从 `azureml.core` 软件包加载类，而第二个从 `experiment` 模块（一个名为
    `experiment.py` 的文件）加载类，该模块是 `azureml.core` 软件包的一部分。如果您在阅读各种代码示例时注意到这种类型的差异，请不要感到惊讶。
- en: Important note
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: For exam purposes, you will not need to memorize the packages, but you will
    have to select the appropriate one from a drop-down list. For example, you may
    be asked to complete some code that refers to `AutoMLConfig`, and you may have
    to select between the `azureml.automl` package and the `azureml.pipeline` one,
    a choice that will become even more obvious when you finish reading the next few
    chapters. The code samples throughout this book import all the required packages
    on top of the script to help you become familiar with the location of the classes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在考试中，您无需记住这些软件包，但您需要从下拉列表中选择合适的一个。例如，您可能会被要求完成一些引用 `AutoMLConfig` 的代码，而您可能需要在
    `azureml.automl` 软件包和 `azureml.pipeline` 软件包之间进行选择，这个选择在阅读完接下来的几章后会变得更加明显。书中的所有代码示例都会在脚本的顶部导入所有所需的软件包，帮助您熟悉类的位置。
- en: In this chapter, you will focus on the SDK classes that allow you to control
    the AzureML workspace, as well as the compute resources that are deployed in the
    workspace, the datastores, and the datasets that you can register in the workspace.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将重点学习 SDK 类，这些类允许您控制 AzureML 工作区，以及在工作区中部署的计算资源、数据存储区和您可以在工作区中注册的数据集。
- en: In the next section, you will learn how to utilize the **Notebooks** experience
    that is built into AzureML Studio to write Python scripts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，您将学习如何利用 AzureML Studio 内置的 **笔记本** 体验来编写 Python 脚本。
- en: Working in AzureML notebooks
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 AzureML 笔记本中工作
- en: 'AzureML Studio offers integration with a couple of code editors that allow
    you to edit notebooks and Python scripts. These editors are powered by the **compute
    instance** you provisioned in [*Chapter 4*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053),
    *Configuring the Workspace*. If you have stopped that compute instance to save
    on costs, navigate to **Manage** | **Compute** and start it. From this view, you
    can open all third-party coding editors AzureML Studio integrates with, as shown
    in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: AzureML Studio 提供与多个代码编辑器的集成，允许您编辑笔记本和 Python 脚本。这些编辑器由您在 [*第 4 章*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053)
    中配置的**计算实例**提供支持，*配置工作区*。如果您为了节省费用停止了该计算实例，请导航至 **管理** | **计算** 并启动它。从此视图，您可以打开所有与
    AzureML Studio 集成的第三方代码编辑器，如下图所示：
- en: '![Figure 7.2 – List of third-party code editor experiences Azure Studio integrates
    with'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.2 – Azure Studio 集成的第三方代码编辑器列表'
- en: '](img/B16777_07_002.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_002.jpg)'
- en: Figure 7.2 – List of third-party code editor experiences Azure Studio integrates
    with
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – Azure Studio 集成的第三方代码编辑器列表
- en: 'The most widely known open source data science editors are Jupyter Notebook
    and its newer sibling, JupyterLab. You can open those editing environments by
    clicking on the respective links shown in the preceding screenshot. This will
    open a new browser tab, as shown in the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最广为人知的开源数据科学编辑器是 Jupyter Notebook 及其更新版本 JupyterLab。您可以通过点击前面截图中显示的相应链接打开这些编辑环境。这将打开一个新的浏览器标签页，如下图所示：
- en: '![Figure 7.3 – JupyterLab and Jupyter editing experiences provided by the compute
    instance'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.3 – 计算实例提供的 JupyterLab 和 Jupyter 编辑体验'
- en: '](img/B16777_07_003.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_003.jpg)'
- en: Figure 7.3 – JupyterLab and Jupyter editing experiences provided by the compute
    instance
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3 – 计算实例提供的 JupyterLab 和 Jupyter 编辑体验
- en: 'Besides these third-party code editing experiences, AzureML Studio offers a
    built-in enhanced notebook editor that allows you to edit, share, and collaborate
    within the Studio interface, as shown in the following screenshot. This editor
    is created on top of the Jupyter Notebook service but offers a much more improved
    code editing experience, such as inline error highlighting, automatic code completion,
    popups with parameter information for the method you are about to invoke, and
    other features that are referred to as **IntelliSense**:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些第三方代码编辑体验外，AzureML Studio还提供了一个内置的增强型笔记本编辑器，允许你在Studio界面内编辑、共享和协作，如下图所示。这个编辑器建立在Jupyter
    Notebook服务之上，但提供了更改进的代码编辑体验，比如内联错误高亮、自动代码补全、弹出窗口显示即将调用的方法的参数信息等其他功能，这些功能统称为**IntelliSense**：
- en: '![Figure 7.4 – The enhanced Notebooks experience built into AzureML Studio'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.4 – 内置于AzureML Studio中的增强型笔记本体验'
- en: '](img/B16777_07_004.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_004.jpg)'
- en: Figure 7.4 – The enhanced Notebooks experience built into AzureML Studio
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4 – 内置于AzureML Studio中的增强型笔记本体验
- en: 'The notebook editor comes with an embedded sample library that contains an
    up-to-date catalog of notebooks that demonstrate almost all the capabilities of
    the latest AzureML SDK. Once you have found a related notebook, you can review
    its contents and if you want to modify it, you can clone it in your workspace,
    an action that will copy both the Jupyter notebook and the accompanying scripts
    and data that relate to that notebook, as shown in the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本编辑器带有一个嵌入式示例库，其中包含最新的笔记本目录，展示了最新AzureML SDK几乎所有的功能。一旦你找到相关的笔记本，你可以查看其内容，如果你想修改它，可以将其克隆到你的工作区，这个操作会复制Jupyter笔记本及与该笔记本相关的脚本和数据，如下图所示：
- en: '![Figure 7.5 – Sample notebooks to help you ramp up the AzureML SDK''s capabilities'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.5 – 帮助你快速掌握AzureML SDK功能的示例笔记本'
- en: '](img/B16777_07_005.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_005.jpg)'
- en: Figure 7.5 – Sample notebooks to help you ramp up the AzureML SDK's capabilities
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5 – 帮助你快速掌握AzureML SDK功能的示例笔记本
- en: Important note
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: These notebooks are up to date with the latest version of the AzureML SDK. The
    code repository where these notebooks are hosted can be found on GitHub at [https://github.com/Azure/MachineLearningNotebooks/](https://github.com/Azure/MachineLearningNotebooks/).
    You can use GitHub to file an issue or search for a code snippet using GitHub's
    search experience.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这些笔记本已更新为最新版本的AzureML SDK。这些笔记本所在的代码库可以在GitHub上找到，网址为[https://github.com/Azure/MachineLearningNotebooks/](https://github.com/Azure/MachineLearningNotebooks/)。你可以使用GitHub提交问题或通过GitHub的搜索功能查找代码片段。
- en: 'Every AzureML workspace comes with a storage account, as mentioned in [*Chapter
    2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026), *Deploying Azure Machine
    Learning Workspace Resources*. This storage account contains a **file share**
    prefixed with **code-** that hosts all the notebooks and scripts available within
    the workspace, as shown in the following screenshot. The files in that folder
    share location are the ones that you saw previously within the Studio experience,
    in the **Files** tab:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 每个AzureML工作区都配有一个存储帐户，正如在[*第2章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)中提到的，*部署Azure机器学习工作区资源*。此存储帐户包含一个以**code-**为前缀的**文件共享**，该共享托管工作区内所有可用的笔记本和脚本，如下图所示。你在Studio体验中看到的文件，就是存储在该文件共享位置中的文件，在**Files**选项卡中：
- en: '![Figure 7.6 – The Azure portal view of the file share that hosts all'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.6 – Azure门户视图，显示托管所有AzureML工作区代码文件的文件共享'
- en: the code files in the AzureML workspace
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: AzureML工作区中的代码文件
- en: '](img/B16777_07_006.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_006.jpg)'
- en: Figure 7.6 – The Azure portal view of the file share that hosts all the code
    files in the AzureML workspace
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6 – Azure门户视图，显示托管所有AzureML工作区代码文件的文件共享
- en: Each user gets a separate folder under the **Users** folder where they can organize
    their files. All the files can be accessed by all users that have access to the
    specific AzureML workspace. This makes sharing code very easy. You can point to
    someone who has access to the AzureML workspace to a file by opening the file
    in your browser; then, you can share the URL from the browser navigation bar.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 每个用户在**Users**文件夹下都有一个单独的文件夹，用于组织他们的文件。所有具有特定AzureML工作区访问权限的用户都可以访问这些文件。这使得代码共享变得非常容易。你可以通过在浏览器中打开文件，将其指向具有AzureML工作区访问权限的某个人；然后，你可以分享浏览器导航栏中的URL。
- en: In this section, you will create a notebook where you will write and execute
    the code snippets in this chapter. To work with your files, navigate to the `chapter07`
    and then create a notebook named `chapter07.ipynb`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将创建一个笔记本，在其中编写和执行本章中的代码片段。要处理您的文件，请导航到`chapter07`，然后创建一个名为`chapter07.ipynb`的笔记本。
- en: 'Click on the three dots next to your username, as shown in the following screenshot.
    From there, you can create folder structures and upload files from your local
    computer. Click on the **Create new folder** option, as shown in the following
    screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 点击用户名旁边的三个点，如下截图所示。从那里，您可以创建文件夹结构并从本地计算机上传文件。点击**创建新文件夹**选项，如下截图所示：
- en: '![Figure 7.7 – The Create new folder option in the Notebooks experience area
    of AzureML Studio'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.7 – 在AzureML Studio的Notebooks体验区域中创建新文件夹选项'
- en: '](img/B16777_07_007.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_007.jpg)'
- en: Figure 7.7 – The Create new folder option in the Notebooks experience area of
    AzureML Studio
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7 – 在AzureML Studio的Notebooks体验区域中创建新文件夹选项
- en: 'Fill in the pop-up dialog that appears to create a folder named `chapter07`.
    Select that folder and click on the three dots. Then, select the `Users/<username>/chapter07`,
    which means that this file will be placed in the newly created folder. Regarding
    `chapter07.ipynb` and click on the **Create** button, as shown in the following
    screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 填写弹出的对话框以创建名为`chapter07`的文件夹。选择该文件夹，然后点击三个点。然后，选择`Users/<username>/chapter07`，这意味着该文件将放置在新创建的文件夹中。关于`chapter07.ipynb`并点击**Create**按钮，如下截图所示：
- en: '![Figure 7.8 – Creating a notebook to write and execute this chapter''s Python
    scripts'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.8 – 创建一个笔记本以编写和执行本章的Python脚本'
- en: '](img/B16777_07_008.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_008.jpg)'
- en: Figure 7.8 – Creating a notebook to write and execute this chapter's Python
    scripts
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8 – 创建笔记本以编写和执行本章Python脚本
- en: 'This will create two files in your folder: the notebook file, which will open
    in the editor pane, and a `.amlignore` file, a file you will read about in [*Chapter
    8*](B16777_08_Final_VK_ePub.xhtml#_idTextAnchor117), *Experimenting with Python
    Code*:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的文件夹中创建两个文件：笔记本文件，将在编辑器窗格中打开，以及一个`.amlignore`文件，您将在[*第8章*](B16777_08_Final_VK_ePub.xhtml#_idTextAnchor117)，*使用Python代码进行实验*中详细了解该文件：
- en: '![Figure 7.9 – Editing a notebook within AzureML Studio'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.9 – 在AzureML Studio中编辑笔记本'
- en: '](img/B16777_07_009.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_009.jpg)'
- en: Figure 7.9 – Editing a notebook within AzureML Studio
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.9 – 在AzureML Studio中编辑笔记本
- en: 'Starting from the left-hand side of the preceding screenshot, the Notebooks
    experience offers the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 从前述截图的左侧开始，Notebooks体验提供以下内容：
- en: The **Files** explorer, where you can create or upload new files and delete,
    download, rename, or move existing files you or your colleagues have created in
    this workspace.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**文件**资源管理器，您可以在其中创建或上传新文件，并删除、下载、重命名或移动您或您的同事在此工作区中创建的现有文件。'
- en: The name of the open file. Note that if you see an asterisk next to the name
    – for example, *** chapter07.ipynb** – this means that the file hasn't been saved
    yet. You can save the file by using the *Ctrl* + *S* shortcut for Windows and
    Linux or the *Cmd* + *S* shortcut for macOS. Alternatively, you can select the
    **Save** option from the **File options** menu, which you will read about next.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正在打开文件的名称。请注意，如果您在名称旁边看到一个星号 – 例如，*** chapter07.ipynb** – 这意味着该文件尚未保存。您可以使用Windows和Linux的*Ctrl*
    + *S*快捷键或macOS的*Cmd* + *S*快捷键保存该文件。或者，您可以从**文件选项**菜单中选择**保存**选项，您将在下面阅读到。
- en: The **File options** menu, where you have options such as the **Save** operation
    and **Focus mode**, which expands the editor pane to occupy most of the browser
    tab space. This is a dynamic menu that's based on the file type you are currently
    editing. In the preceding screenshot, a notebook is open, and the menu is offering
    additional operations such as clearing outputs, restarting the Python kernel,
    or examining the variables that are currently loaded in the Python kernel. You
    can also edit the same file in Jupyter or JupyterLab by clicking on the menu icon,
    which is the icon with the four vertical lines, and selecting the corresponding
    editor from the **Editors** option. Especially for VS Code, a very popular free
    cross-platform code editor, the **Edit in VS Code** option is available in the
    main bar.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**文件选项**菜单，提供保存操作和**焦点模式**等选项，焦点模式会将编辑器面板扩展到浏览器标签的大部分空间。这是一个动态菜单，取决于你当前正在编辑的文件类型。在前面的截图中，打开的是一个笔记本，菜单提供了其他操作，如清除输出、重启Python内核或查看当前加载的Python内核中的变量。你还可以通过点击菜单图标（即四个垂直线的图标）并从**编辑器**选项中选择相应的编辑器来在Jupyter或JupyterLab中编辑同一文件。特别是对于VS
    Code，一个非常流行的跨平台免费代码编辑器，主栏中提供了**在VS Code中编辑**的选项。'
- en: The ability to manage the compute instance where you are currently editing the
    specific file. From this section, you can quickly create a new compute instance
    or start/stop an existing one.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理当前正在编辑特定文件的计算实例的能力。在此部分，你可以快速创建一个新的计算实例或启动/停止现有的实例。
- en: The ability to select the environment to execute the notebook in. By default,
    the AzureML Python kernel is selected, which is the environment where the AzureML
    SDK is already installed. You can change the kernel to an R one if you are editing
    an R file, or you can create your own kernels if you want to customize the environment
    you are working in.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择执行笔记本的环境的能力。默认情况下，选择的是AzureML Python内核，这是已安装AzureML SDK的环境。如果你正在编辑R文件，可以将内核更改为R内核，或者如果你想自定义工作环境，也可以创建自己的内核。
- en: The main editor pane. This is where you can modify the selected file.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主编辑器面板。这是你可以修改选定文件的地方。
- en: 'In your case, the editor pane will be empty, and a single empty cell will be
    visible, as shown in the following screenshot. Each cell can either contain **Markdown**-formatted
    text or Python code. You can convert a cell into a code one by clicking on the
    pop-up menu and selecting the **M****↓** icon:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你的情况下，编辑器面板将为空，且只会显示一个空单元格，如下图所示。每个单元格可以包含**Markdown**格式的文本或Python代码。你可以通过点击弹出菜单并选择**M****↓**图标来将单元格转换为代码单元：
- en: '![Figure 7.10 – An empty code cell'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 7.10 – 一个空的代码单元格'
- en: '](img/B16777_07_010.jpg)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16777_07_010.jpg)'
- en: Figure 7.10 – An empty code cell
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.10 – 一个空的代码单元格
- en: 'Click on the **M****↓** icon and then hit the **edit** icon to add the following
    Markdown text in the cell:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**M****↓**图标，然后点击**编辑**图标，在单元格中添加以下Markdown文本：
- en: '[PRE1]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Hit *Shift* + *Enter* on your keyboard to finish editing, execute the cell,
    which in this case will render the formatted text, and move the cursor to the
    next cell. By default, the next cell will be a code one. Add the following Python
    code inside the cell:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Shift* + *Enter*键完成编辑，执行单元格，这将在本例中渲染格式化的文本，并将光标移到下一个单元格。默认情况下，下一个单元格将是代码单元。将以下Python代码添加到该单元格中：
- en: '[PRE2]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Note that while you start typing, a popup will appear containing code suggestions
    that you can select using the arrow keys. You can confirm your selection by hitting
    the *Enter* button on your keyboard. The list is an intelligent one in that it
    shows classes that start with what you have typed. It also shows frequently used
    classes that you may have misspelled or forgot to type some letters in for. For
    example, the following screenshot shows the `PermissionError` class because you
    may have forgotten to type the `print` statement is incomplete, a wavy underline
    will indicate a syntax error in that portion of the code. To execute a code cell,
    you can hit the *Shift* + *Enter* key combo, or you can click on the round button
    on the left-hand side of the cell:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，当你开始输入时，会出现一个弹出窗口，其中包含代码建议，你可以使用箭头键选择。你可以通过按下键盘上的*Enter*键来确认选择。这个列表是智能的，它会显示与你输入的内容匹配的类名，并且还会显示一些常用类，可能是因为你拼写错误或者忘记输入某些字母。例如，以下截图显示了`PermissionError`类，因为你可能忘记输入`print`语句并且不完整，当代码中的部分存在语法错误时，会有波浪下划线标记。要执行代码单元，可以按*Shift*
    + *Enter*组合键，或者点击单元格左侧的圆形按钮：
- en: '![Figure 7.11 – IntelliSense suggesting methods and classes that fit the current
    script''s scope'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.11 – IntelliSense 提示适合当前脚本范围的方法和类'
- en: '](img/B16777_07_011.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_011.jpg)'
- en: Figure 7.11 – IntelliSense suggesting methods and classes that fit the current
    script's scope
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.11 – IntelliSense 提示适合当前脚本范围的方法和类
- en: 'If an error occurs in the code cell you are executing, the error message will
    appear at the bottom of the cell and the Traceback will appear in the output section
    of the cell, as shown in the following screenshot. You can update the cell''s
    content and rerun the cell to fix this error:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在执行代码单元时发生错误，错误信息将显示在单元格的底部，Traceback 信息将出现在单元格的输出部分，如下图所示。你可以更新单元格的内容并重新运行单元格以修复此错误：
- en: '![Figure 7.12 – Script error during notebook cell execution'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.12 – 笔记本单元执行期间的脚本错误'
- en: '](img/B16777_07_012.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_012.jpg)'
- en: Figure 7.12 – Script error during notebook cell execution
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.12 – 笔记本单元执行期间的脚本错误
- en: In this section, you learned how to use the built-in Notebooks experience to
    author Python scripts. In the next section, you will start writing code fragments
    that utilize the AzureML SDK.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学习了如何使用内置的笔记本体验来编写 Python 脚本。在下一节中，你将开始编写利用 AzureML SDK 的代码片段。
- en: Basic coding with the AzureML SDK
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AzureML SDK 进行基础编码
- en: 'The first class you will work with is the AzureML `Workspace`, a class that
    gives you access to all the resources within your workspace. To create a reference
    to your workspace, you will need the following information:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你将要使用的第一个类是 AzureML 的 `Workspace` 类，这个类允许你访问工作区内的所有资源。要创建对工作区的引用，你需要以下信息：
- en: '`ab05ab05-ab05-ab05-ab05-ab05ab05ab05`. You can find this ID in the Azure portal
    in the **Properties** tab of the subscription you are using.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ab05ab05-ab05-ab05-ab05-ab05ab05ab05`。你可以在 Azure 门户中的 **属性** 标签下找到该订阅的 ID。'
- en: '**Resource group name**: The resource group that contains the AzureML workspace
    components.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源组名称**：包含 AzureML 工作区组件的资源组。'
- en: '**Workspace name**: The name of the AzureML workspace.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作区名称**：AzureML 工作区的名称。'
- en: 'You can store this information in variables by running the following assignments:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下赋值语句将这些信息存储在变量中：
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The first approach to creating the reference to the workspace is to instantiate
    the `Workspace` class, as shown in the following snippet:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 创建工作区引用的第一种方法是实例化 `Workspace` 类，如以下代码片段所示。
- en: '[PRE4]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This is the code snippet that you saw in [*Chapter 4*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053),
    *Configuring the Workspace*, when you created a dataset and explored the **Consume**
    tab of that dataset.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你在 [*第 4 章*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053) 中看到的代码片段，*配置工作区*，当你创建数据集并探索该数据集的
    **消费** 标签时。
- en: Important note
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: This book assumes that you will be writing the code in the notebook you created
    in the previous section, and that you will be editing the notebook using the `azureml-sdk`
    package by issuing the `pip instal azureml-sdk` command. In that case, you will
    be prompted to authenticate your device using an interactive authentication, something
    you will read about in the next section.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设你将在上一节中创建的笔记本中编写代码，并通过执行 `pip install azureml-sdk` 命令使用 `azureml-sdk` 包编辑笔记本。在这种情况下，你将被提示使用交互式认证来验证设备，这一点你将在下一节中阅读到。
- en: 'Another approach to creating the reference to the AzureML workspace is to use
    the `get()` method of the `Workspace` class, as shown in the following snippet:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 创建对 AzureML 工作区引用的另一种方法是使用 `Workspace` 类的 `get()` 方法，如以下代码片段所示：
- en: '[PRE5]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, regarding the `ws` variable, you assigned a reference to the AzureML workspace
    that matches the `name`, `subscription_id`, and `resource_group` values that you
    specified in the `workspace_name`, `subscription_id`, and `resource_group` variables
    at the beginning of this section.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，关于 `ws` 变量，你分配了一个引用，它指向与本节开始时在 `workspace_name`、`subscription_id` 和 `resource_group`
    变量中指定的 `name`、`subscription_id` 和 `resource_group` 值相匹配的 AzureML 工作区。
- en: Important note
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: In Python, you can invoke functions by passing arguments either by name or by
    position. In the previous examples, we invoked `Workspace.get()`by passing arguments
    by name – that is, we explicitly specified that for the `name` argument, we are
    passing the `workspace_name` variable as its value. When using this approach,
    the order of the arguments is not important. In the example before that, we instantiated
    the `Workspace` class by passing arguments by position. You did not use the `workspace_name=workspace_name`
    assignment. This means that you assigned values to the parameters of the `Workspace`
    class's constructor based on the order they were declared in. In this book, as
    well as in the exam, you will see both ways of performing assignments.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，你可以通过按名称或位置传递参数来调用函数。在之前的示例中，我们通过按名称传递参数来调用 `Workspace.get()`——也就是说，我们明确指定了对于
    `name` 参数，我们传递的是 `workspace_name` 变量的值。使用这种方法时，参数的顺序并不重要。而在前一个示例中，我们通过按位置传递参数来实例化
    `Workspace` 类。你没有使用 `workspace_name=workspace_name` 这种赋值方式。这意味着你是根据 `Workspace`
    类构造函数声明参数的顺序来赋值的。本书以及考试中，你将看到这两种赋值方式。
- en: The previous two ways of getting the AzureML workspace reference are identical.
    The main issue with them, however, is that they hardcode the workspace where the
    script is connecting to. Imagine that you want to share a notebook with a friend,
    and you have hardcoded the subscription ID, resource name, and workspace name
    in that notebook. Your friend would have to manually go and edit that cell. This
    problem becomes even more obvious when you want to write a script that runs in
    multiple environments, such as the development environment, the quality assurance
    environment, and the production environment.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 前面提到的两种获取 AzureML 工作区引用的方式是相同的。然而，主要问题在于它们将工作区硬编码在了脚本中。假设你想和朋友分享一个笔记本，但你在笔记本中硬编码了订阅
    ID、资源名称和工作区名称。你的朋友就必须手动去编辑那个单元格。这个问题在你想写一个能够在多个环境中运行的脚本时变得尤为明显，比如开发环境、质量保证环境和生产环境。
- en: 'The `Workspace` class offers the `from_config()` method to address this issue.
    This method searches the folder tree structure for the `config.json` file, which
    is in the following format and includes all the information that was mentioned
    at the beginning of this section:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`Workspace` 类提供了 `from_config()` 方法来解决这个问题。该方法会搜索文件夹树结构中的 `config.json` 文件，文件格式如下，并包含本节开始时提到的所有信息：'
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In the case of the compute instance, this file is located in the root folder
    (`/config.json`) and was automatically created there when you provisioned the
    compute instance within the AzureML workspace. If you want to run the same script
    from your local computer, you can create a similar file, place it next to the
    Python script you are editing, and write the following code to get a reference
    to the AzureML workspace:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 对于计算实例来说，这个文件位于根文件夹（`/config.json`）中，并且当你在 AzureML 工作区中配置计算实例时会自动创建该文件。如果你想从本地计算机运行相同的脚本，可以创建一个类似的文件，将其放置在正在编辑的
    Python 脚本旁边，然后编写以下代码来获取 AzureML 工作区的引用：
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If you want to spin up a new AzureML workspace, you can provision one using
    the `Workspace.create()` method. The following code snippet creates an AzureML
    workspace in the West Europe region:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想创建一个新的 AzureML 工作区，可以使用 `Workspace.create()` 方法来进行配置。以下代码片段将在西欧地区创建一个 AzureML
    工作区：
- en: '[PRE8]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This snippet will create an AzureML workspace named `packt-azureml-sdk-mlw`,
    in the subscription with the ID specified by the `subscription_id` variable. This
    resource will be deployed in the `packt-azureml-sdk-rg` resource group, which
    will be created if it does not already exist.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码片段将在指定 `subscription_id` 变量的订阅中创建一个名为 `packt-azureml-sdk-mlw` 的 AzureML
    工作区。此资源将部署在 `packt-azureml-sdk-rg` 资源组中，如果该资源组不存在，将自动创建。
- en: Important note
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: '[PRE9]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To delete the workspace you just deployed, you can use the following code snippet:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除你刚刚部署的工作区，可以使用以下代码片段：
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This code deletes the workspace being referenced by the `new_ws` variable and
    removes the dependent resources, which are the storage account, the key vault,
    and the Application Insights resources that were deployed with the AzureML workspace.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码会删除由 `new_ws` 变量引用的工作区，并移除依赖资源，包括与 AzureML 工作区一起部署的存储账户、密钥库和应用洞察资源。
- en: In this section, you learned how to get a reference to and manipulate the workspace
    resource through Python code. This section assumed that you have been using the
    built-in notebook editor of the studio web UI, so you did not have to authenticate.
    If you wanted to run the same code on your computer, you would have to authenticate
    to be able to access the resources, which is something we will look at in the
    next section.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您学习了如何通过Python代码引用和操作工作区资源。本节假定您一直在使用内置的笔记本编辑器，因此无需进行身份验证。如果您希望在自己的计算机上运行相同的代码，您需要进行身份验证以访问资源，这是我们将在下一节讨论的内容。
- en: Authenticating from your device
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从您的设备进行身份验证
- en: 'In March 2020, the **Notebooks** experience in AzureML Studio requests you
    to authenticate to the compute instance. This is a process you have to do only
    once and it is as simple as clicking the **Authenticate** button that will be
    visible in the Notebooks experience. If you are running the same code from your
    local computer, or if you are trying to execute a Python script within a terminal
    in a compute instance for the very first time, you must run an AzureML SDK command.
    A prompt will ask you to authenticate, as shown in the following screenshot:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AzureML Studio 中的**Notebooks**体验需要您对计算实例进行身份验证。这是一个只需执行一次的过程，就像点击在Notebooks体验中可见的**Authenticate**按钮一样简单。如果您从本地计算机运行相同的代码，或者尝试在计算实例的终端中首次执行Python脚本，则必须运行AzureML
    SDK命令。一个提示将要求您进行身份验证，如下面的截图所示：
- en: '![Figure 7.13 – Interactive authentication requested during the first command''s
    execution'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.13 – 在第一个命令执行期间请求的交互式身份验证'
- en: '](img/B16777_07_013.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_013.jpg)'
- en: Figure 7.13 – Interactive authentication requested during the first command's
    execution
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.13 – 在第一个命令执行期间请求的交互式身份验证
- en: 'If you see this message, navigate to the link provided, where you will be asked
    to input the request code displayed in the prompt. In this case, this is **MYRNDCODE**.
    This code is a unique identifier for a request to log in using your identity from
    your computer''s location. Select the account you are planning to use to access
    the various Azure resources, including the AzureML workspace. The following figure
    shows the overall interactive authentication flow:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看到此消息，请转到提供的链接，您将被要求输入提示中显示的请求代码。在这种情况下，代码是**MYRNDCODE**。此代码是使用您计算机位置的身份进行登录请求的唯一标识符。选择您计划用于访问各种Azure资源（包括AzureML工作区）的帐户。下图显示了整个交互式身份验证流程：
- en: '![Figure 7.14 – Using interactive login to authenticate in a compute instance'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.14 – 在计算实例中使用交互式登录进行身份验证'
- en: '](img/B16777_07_014.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_014.jpg)'
- en: Figure 7.14 – Using interactive login to authenticate in a compute instance
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14 – 在计算实例中使用交互式登录进行身份验证
- en: Important note
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The request code is a short-lived one and it expires in 15 minutes. If you fail
    to complete the process within that time frame, an error will occur, and you will
    have to start over.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 请求代码是短暂的，有效期为15分钟。如果您未能在该时间段内完成过程，将会出现错误，您将需要重新开始。
- en: 'If your account has access to multiple **Azure Active Directories** (**AADs**),
    for example, your personal AAD from the trial subscription and your company''s
    one, you may need to manually indicate which AAD tenant to authenticate to. This
    can be done by invoking the interactive authentication process manually using
    the following snippet:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的帐户可以访问多个**Azure Active Directories**（**AADs**），例如来自试用订阅的个人AAD和公司的AAD，您可能需要手动指定要进行身份验证的AAD租户。这可以通过使用以下片段手动调用交互式身份验证过程来完成：
- en: '[PRE11]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This code initiates the device authentication flow shown in the preceding figure.
    `<AAD tenant id>` is a GUID that you can get from the Azure portal by visiting
    the AAD resource.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码启动了设备身份验证流程，如前面的图所示。`<AAD tenant id>`是您可以从Azure门户中获取的GUID，访问AAD资源时会显示。
- en: In this section, you learned about interactive authentication, which allows
    you to access your AzureML workspace from any device. This authentication method
    should be used when you try to execute a script on a remote computer or if you
    are trying to execute an Azure CLI command. Once authenticated, a token is stored
    within the computer you are executing `InteractiveLoginAuthentication` on and
    you will not be prompted for another login until that token has expired.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你学习了交互式身份验证，它允许你从任何设备访问你的AzureML工作区。当你尝试在远程计算机上执行脚本，或者尝试执行Azure CLI命令时，应该使用这种身份验证方法。一旦身份验证完成，令牌将存储在你执行`InteractiveLoginAuthentication`的计算机上，直到令牌过期之前，你将无需再次登录。
- en: In the next section, you will start using the authenticated reference to your
    workspace to deploy compute targets you can use to execute scripts remotely.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，你将开始使用已认证的工作区引用来部署计算目标，以便远程执行脚本。
- en: Working with compute targets
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用计算目标
- en: As we mentioned in [*Chapter 4*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053),
    *Configuring the Workspace*, in the *Provisioning compute resources* section,
    compute resources are machines that allow you to execute scripts remotely. The
    AzureML SDK allows you to list the existing compute targets you may have in your
    workspace or provision new ones if needed.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第4章*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053)中提到的，*配置工作区*部分的*配置计算资源*一节所述，计算资源是允许你远程执行脚本的机器。AzureML
    SDK允许你列出工作区中现有的计算目标，或者在需要时配置新的目标。
- en: 'To enumerate the compute targets that you have provisioned or attached to your
    workspace, you can use the reference to the AzureML workspace that you assigned
    to the `ws` variable using `ws = Workspace.from_config()`. The workspace object
    has an attribute named `compute_targets`. This is a Python dictionary that has
    all the compute instance names as keys and a reference to that compute instance
    as a value. To enumerate and print out this list, you can use the following code:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 若要列出你已配置或附加到工作区的计算目标，你可以使用分配给`ws`变量的AzureML工作区引用，方法是使用`ws = Workspace.from_config()`。工作区对象有一个名为`compute_targets`的属性。它是一个Python字典，所有计算实例的名称作为键，而该计算实例的引用作为值。要列出并打印出此列表，你可以使用以下代码：
- en: '[PRE12]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The output should list at least the `ComputeInstance` area where you are executing
    the script and potentially the `AmlCompute` cluster you created in [*Chapter 4*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053),
    *Configuring the Workspace*. You will notice that all the compute types are defined
    within the modules of the `azureml.core.compute` package.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应至少列出你正在执行脚本的`ComputeInstance`区域，以及你在[*第4章*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053)中创建的`AmlCompute`集群，*配置工作区*。你会注意到所有的计算类型都在`azureml.core.compute`包的模块中定义。
- en: Important note
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: This code assumes that you have initialized the `ws` variable, something you
    did earlier on the notebook by following the instructions in the *Basic coding
    with the AzureML SDK* section. If you close the compute instance, the kernel will
    stop, and all the variables you defined by executing the notebook cells will be
    lost. If you want to continue working on a notebook, the easiest approach is to
    rerun all the cells, which will ensure that you have initialized all the variables.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码假设你已经初始化了`ws`变量，这是你在笔记本中按照*使用AzureML SDK进行基础编码*部分的指示进行的操作。如果你关闭计算实例，内核将停止，并且你通过执行笔记本单元定义的所有变量将会丢失。如果你想继续在笔记本上工作，最简单的做法是重新运行所有单元，这将确保你已初始化所有变量。
- en: 'Another way to get a reference to a compute target is to use the `ComputeTarget`
    constructor. You need to pass in the `Workspace` reference and the name of the
    compute target you are looking for. If the target does not exist, a `ComputeTargetException`
    exception will be raised that you have to handle in your code base, as shown in
    the following script:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 获取计算目标引用的另一种方法是使用`ComputeTarget`构造函数。你需要传入`Workspace`引用和你要查找的计算目标的名称。如果目标不存在，将引发`ComputeTargetException`异常，你必须在代码中处理该异常，如以下脚本所示：
- en: '[PRE13]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The `ComputeTarget` class offers the `create()` method, which allows you to
    provision various compute targets, including compute instances (the `ComputeInstance`
    class), compute clusters (the `AmlCompute` class), and Azure Kubernetes Service
    (the `AKSCompute` class) targets.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`ComputeTarget`类提供了`create()`方法，允许你配置各种计算目标，包括计算实例（`ComputeInstance`类）、计算集群（`AmlCompute`类）和Azure
    Kubernetes服务（`AKSCompute`类）目标。'
- en: Important note
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Whenever you are deploying a compute instance or compute cluster from the AzureML
    Studio web UI, the Azure CLI, or the SDK, the compute target will be provisioned
    in the same resource group and the same Azure Region that your machine learning
    workspace is located.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 每当您通过 AzureML Studio Web UI、Azure CLI 或 SDK 部署计算实例或计算集群时，计算目标将被配置在与您的机器学习工作区相同的资源组和
    Azure 区域内。
- en: 'To provision a compute target, you will need to create a configuration object
    that inherits from the `ComputeTargetProvisioningConfiguration` abstract class.
    In the following example, the script is trying to locate a compute cluster named
    `cpu-sm-cluster`. If the cluster exists, it assigns a reference to the cluster
    to the `cluster` variable. If the cluster does not exist, the script creates an
    instance of the `AmlComputeProvisioningConfiguration` class, which is assigned
    to the `config` variable. This instance is created through the `provisioning_configuration()`
    method of the `AmlCompute` class. This `config` is used to create the cluster
    and wait for the registration in the workspace to complete, showing the creation
    logs:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置计算目标，您需要创建一个继承自 `ComputeTargetProvisioningConfiguration` 抽象类的配置对象。在以下示例中，脚本尝试定位名为
    `cpu-sm-cluster` 的计算集群。如果集群存在，则将集群的引用分配给 `cluster` 变量。如果集群不存在，脚本将创建 `AmlComputeProvisioningConfiguration`
    类的实例，并将其分配给 `config` 变量。这个实例是通过 `AmlCompute` 类的 `provisioning_configuration()`
    方法创建的。此 `config` 用于创建集群并等待工作区中的注册完成，显示创建日志：
- en: '[PRE14]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This script specifies the virtual machine's size (the `vm_size` argument). The
    virtual machine is going to be `Standard_D1`, which is a `Standard_NC6`, `Standard_NV24s_v3`,
    and `Standard_ND40rs_v2`. Notice how all the sizes start with **N**.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本指定了虚拟机的大小（`vm_size` 参数）。虚拟机将设置为 `Standard_D1`，这是 `Standard_NC6`、`Standard_NV24s_v3`
    和 `Standard_ND40rs_v2`。注意所有的大小都以 **N** 开头。
- en: 'The script is only specifying the maximum nodes (the `max_nodes` argument)
    that the compute cluster will have. If you do not specify the minimum nodes (the
    `min_nodes` argument), the argument will be the default value of 0\. This means
    that by default, the cluster will scale down to 0 nodes, inflicting no compute
    costs when no job is running. You can find all the default values for all the
    arguments of the `provisioning_configuration()` method on Microsoft''s official
    Python SDK reference page, as shown in the following screenshot, or by using the
    Python `help` command by executing `help(AmlCompute.provisioning_configuration)`:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本仅指定计算集群的最大节点数（`max_nodes` 参数）。如果未指定最小节点数（`min_nodes` 参数），则该参数的默认值为 0。默认情况下，集群将缩减到
    0 个节点，在没有作业运行时不会产生计算成本。您可以在微软官方 Python SDK 参考页面上找到 `provisioning_configuration()`
    方法的所有参数的默认值，如以下截图所示，或者通过执行 `help(AmlCompute.provisioning_configuration)` 使用 Python
    `help` 命令：
- en: '![Figure 7.15 – Documentation for the provisioning_configuration method of
    the AmlCompute class'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.15 – AmlCompute 类的 provisioning_configuration 方法文档'
- en: '](img/B16777_07_015.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_015.jpg)'
- en: Figure 7.15 – Documentation for the provisioning_configuration method of the
    AmlCompute class
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.15 – AmlCompute 类的 provisioning_configuration 方法文档
- en: 'One of the drawbacks of having 0 minimum nodes in a compute cluster is that
    you will have to wait for the compute nodes to be allocated before the job you
    submitted gets executed. To save this slack time, it is common to scale up the
    minimum and even the maximum nodes of the cluster during workdays, and then change
    those values after business hours to save on costs. To change the number of nodes
    of a compute cluster, you can use the AzureML Studio web UI or the Azure CLI,
    or even update the `min_nodes` attribute of the compute cluster using the following
    code:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 将计算集群的最小节点数设置为 0 的一个缺点是，您必须等待计算节点分配后，您提交的作业才会执行。为了节省这段空闲时间，通常在工作日将集群的最小节点数甚至最大节点数扩大，然后在非工作时间调整这些值以节省成本。要更改计算集群的节点数，您可以使用
    AzureML Studio Web UI、Azure CLI，甚至使用以下代码更新计算集群的 `min_nodes` 属性：
- en: '[PRE15]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Important note
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Changing the number of minimum and maximum nodes of a compute cluster can be
    done through the AzureML Studio web portal, the CLI, the SDK, and ARM templates.
    Before October 2020, you could also change the number of nodes through the Azure
    portal, a functionality that has been removed since.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 AzureML Studio Web 门户、CLI、SDK 和 ARM 模板，可以更改计算集群的最小节点数和最大节点数。在 2020 年 10 月之前，您还可以通过
    Azure 门户更改节点数，但该功能已被移除。
- en: In this section, you learned how to create or get a reference to a compute target
    that you can use to execute scripts. In the next section, you will learn how to
    attach to various data sources through the SDK.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你了解了如何创建或获取计算目标的引用，以便你可以用它来执行脚本。在下一节中，你将学习如何通过 SDK 连接到各种数据源。
- en: Defining datastores
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义数据存储
- en: As we mentioned in [*Chapter 4*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053),
    *Configuring the Workspace*, in the *Connecting to datastores* section, datastores
    are the engines where your data resides and provide access to anyone authorized
    to do so. The AzureML SDK allows you to attach existing datastores to access the
    underlying data.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在[*第4章*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053)中提到的，*配置工作区*部分，在*连接到数据存储*小节中，数据存储是存放你数据的引擎，并为授权的人员提供访问权限。AzureML
    SDK 允许你附加现有的数据存储以访问底层数据。
- en: 'In this section, you are going to attach the blob container of a storage account
    to your workspace. Imagine that you have a storage account named **mydatastg**.
    This storage account has a blob container named **existing-container** that contains
    the CSV files you want to analyze and then train models against, as shown in the
    following screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将把存储帐户的 Blob 容器附加到你的工作区。假设你有一个名为**mydatastg**的存储帐户。这个存储帐户有一个名为**existing-container**的
    Blob 容器，里面包含你想要分析并训练模型的 CSV 文件，如下图所示：
- en: '![Figure 7.16 – The container in the mydatastg storage account, as seen in
    the Azure portal'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.16 – 在 Azure 门户中看到的 mydatastg 存储帐户中的容器'
- en: '](img/B16777_07_016.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_016.jpg)'
- en: Figure 7.16 – The container in the mydatastg storage account, as seen in the
    Azure portal
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.16 – 在 Azure 门户中看到的 mydatastg 存储帐户中的容器
- en: Important note
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Provisioning new storage accounts and adding containers from the Azure portal
    is an easy task and is outside the scope of the exam. Note that storage accounts
    have unique names. This means that you will probably not be able to provision
    a storage account named **mydatastg** because it belongs to someone else. You
    can use the existing storage account that was provisioned with your AzureML workspace
    to follow these steps. You can add the **existing-container** container to that
    storage account through the Azure portal or you can use the **azureml** container
    that already exists.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Azure 门户配置新的存储帐户并添加容器是一项简单的任务，超出了本考试的范围。请注意，存储帐户有唯一的名称。这意味着你可能无法创建名为**mydatastg**的存储帐户，因为它属于其他人。你可以使用随
    AzureML 工作区一起配置的现有存储帐户来执行这些步骤。你可以通过 Azure 门户将**existing-container**容器添加到该存储帐户中，或者你也可以使用已经存在的**azureml**容器。
- en: 'To register this container as a new datastore in your AzureML workspace, you
    will need to follow these steps:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此容器注册为你的 AzureML 工作区中的新数据存储，你需要按照以下步骤操作：
- en: Before going into your notebook, you will need the storage account name and
    the account key. This information is located in the Azure portal, in the **Settings**
    | **Access keys** tab of the storage account resource, as shown in the following
    screenshot:![Figure 7.17 – Storage account name and key required to connect to
    the storage account
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在进入你的笔记本之前，你需要获取存储帐户的名称和帐户密钥。这些信息位于 Azure 门户中的**设置**|**访问密钥**选项卡下，存储帐户资源中，如下图所示：![图
    7.17 – 连接存储帐户所需的存储帐户名称和密钥
- en: '](img/B16777_07_017.jpg)'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16777_07_017.jpg)'
- en: Figure 7.17 – Storage account name and key required to connect to the storage
    account
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.17 – 连接存储帐户所需的存储帐户名称和密钥
- en: 'Go to your `chapter07.ipynb` notebook and in a new code cell, assign that information
    to the following Python variables:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的`chapter07.ipynb`笔记本，在一个新的代码单元中，将这些信息赋值给以下 Python 变量：
- en: '[PRE16]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To register the blob container as a new datastore named `my_data_store`, you
    can use the `register_azure_blob_container()` method of the `Datastore` class,
    as shown in the following snippet:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将 Blob 容器注册为一个名为`my_data_store`的新数据存储，你可以使用`Datastore`类的`register_azure_blob_container()`方法，如下所示：
- en: '[PRE17]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As expected, the method requires a reference to the `Workspace` area where the
    new datastore will be created as an argument. Also, note that the `create_if_not_exists`
    argument is set to `False`, something that will make the method raise an `AzureMissingResourceHttpError`
    exception with an error code of `ContainerNotFound` if that the blob container
    does not exist.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如预期的那样，该方法需要将`Workspace`区域的引用作为参数传递，新的数据存储将在该区域创建。另外，请注意，`create_if_not_exists`参数设置为`False`，这将导致方法在
    Blob 容器不存在时抛出`AzureMissingResourceHttpError`异常，并带有`ContainerNotFound`的错误代码。
- en: 'Similar to the blob container, you can register all supported data storage
    types through the AzureML SDK''s `Datastore` class, as shown in the following
    screenshot. For example, you can use the `register_azure_data_lake_gen2()` method
    to connect to an Azure Data Lake Generation 2 datastore or the `register_azure_sql_database()`
    method to connect to an Azure SQL database:'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与 Blob 容器类似，您可以通过 AzureML SDK 的 `Datastore` 类注册所有支持的数据存储类型，如以下屏幕截图所示。例如，您可以使用
    `register_azure_data_lake_gen2()` 方法连接到 Azure 数据湖第二代数据存储，或者使用 `register_azure_sql_database()`
    方法连接到 Azure SQL 数据库：
- en: '![Figure 7.18 – Supported data storage service types from the official documentation
    page'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图7.18 – 来自官方文档页面的支持的数据存储服务类型'
- en: '](img/B16777_07_018.jpg)'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16777_07_018.jpg)'
- en: Figure 7.18 – Supported data storage service types from the official documentation
    page
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.18 – 来自官方文档页面的支持的数据存储服务类型
- en: 'To get a reference to the connected datastore, you can use the `Datastore`
    class constructor, as shown in the following snippet:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取连接的数据存储的引用，您可以使用 `Datastore` 类的构造函数，如以下代码片段所示：
- en: '[PRE18]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In [*Chapter 4*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053), *Configuring
    the Workspace*, in the list of datastores, you learn how to set one of the registered
    datastores to the default one for the AzureML workspace. The `Workspace` class
    offers a shortcut that gives a reference to that store using the `get_default_datastore()`
    method:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[*第4章*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053)《配置工作区》中，在数据存储列表中，您将学习如何将注册的数据存储设置为
    AzureML 工作区的默认数据存储。`Workspace` 类提供了一种快捷方式，可以通过 `get_default_datastore()` 方法引用该数据存储：
- en: '[PRE19]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In the rest of this book, you will be using the default datastore to store data.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本书的其余部分，您将使用默认的数据存储来存储数据。
- en: 'Datastores that refer to Azure blob containers (the `AzureBlobDatastore` class)
    or Azure file shares (the `AzureFileDatastore` class) can upload and download
    files through the SDK. The following snippet loads the `DataFrame`, which is then
    stored as a local CSV file. Once the file has been stored, the script gets a reference
    to the default datastore of the `Workspace` area, which is referenced in the `ws`
    variable, and uploads that file to `/samples/diabetes/v1/rawdata.csv` using the
    `upload()` method:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用 Azure Blob 容器（`AzureBlobDatastore` 类）或 Azure 文件共享（`AzureFileDatastore` 类）的数据存储可以通过
    SDK 上传和下载文件。以下代码片段加载 `DataFrame`，然后将其存储为本地 CSV 文件。文件存储后，脚本获取 `Workspace` 区域的默认数据存储的引用，该引用在
    `ws` 变量中，并使用 `upload()` 方法将该文件上传到`/samples/diabetes/v1/rawdata.csv`：
- en: '[PRE20]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This file will appear in the storage account that was created with your AzureML
    workspace. You can find it in the Azure portal by navigating to the storage account,
    selecting the blob container with the name that starts with **azureml-blobstore-**,
    and navigating through the **samples / diabetes / v1** folders, as shown in the
    following screenshot:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该文件将出现在与您的 AzureML 工作区一起创建的存储帐户中。您可以通过 Azure 门户找到它，方法是导航到存储帐户，选择名称以**azureml-blobstore-**开头的
    Blob 容器，然后导航到**samples / diabetes / v1**文件夹，如以下屏幕截图所示：
- en: '![Figure 7.19 – Uploaded data in the blob container that is registered as the
    default datastore'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.19 – 已上传的数据存储在注册为默认数据存储的 Blob 容器中'
- en: '](img/B16777_07_019.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_019.jpg)'
- en: Figure 7.19 – Uploaded data in the blob container that is registered as the
    default datastore
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.19 – 已上传的数据存储在注册为默认数据存储的 Blob 容器中
- en: In this section, you learned how to attach an existing Azure blob container
    to a new datastore within your AzureML workspace. You also learned how to easily
    get a reference to the workspace's default datastore, and then you uploaded a
    CSV file to that datastore. In the next section, you will learn how to define
    datasets, a construct that will help you work with your data independently from
    where it's stored.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您学习了如何将现有的 Azure Blob 容器附加到 AzureML 工作区中的新数据存储。您还学习了如何轻松获取工作区默认数据存储的引用，然后将
    CSV 文件上传到该数据存储。在下一节中，您将学习如何定义数据集，这一构建可以帮助您独立于数据存储位置进行数据操作。
- en: Working with datasets
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用数据集
- en: 'As we mentioned in [*Chapter 4*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053),
    *Configuring the Workspace*, in the *Working with datasets* section, datasets
    are an abstraction layer on top of the data that you use for training and inference.
    They contain references to the physical data''s location and provide a series
    of metadata that helps you understand their shape and statistical properties.
    They *do not copy* the data that resides within the datastores. AzureML offers
    two types of datasets:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第4章*](B16777_04_Final_VK_ePub.xhtml#_idTextAnchor053)，《配置工作区》一节中提到的，在《使用数据集》部分中，数据集是你在训练和推理过程中使用的一个抽象层。它们包含对物理数据位置的引用，并提供一系列元数据，帮助你理解数据的形状和统计特性。数据集*不会复制*存储在数据存储中的数据。AzureML提供了两种类型的数据集：
- en: '`FileDataset` allows you to reference a single file or multiple files in one
    or multiple datastores. A common example of `FileDataset` is images that are being
    used to train a computer vision model.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FileDataset`允许你引用一个或多个文件，存储在一个或多个数据存储中。`FileDataset`的一个常见例子是用于训练计算机视觉模型的图像。'
- en: '`TabularDataset` allows you to reference tabular structured data that can be
    stored in a single file or multiple files within datastores or may be stored directly
    in relational datastores such as SQL servers. The diabetes `DataFrame` that you
    loaded in the previous section is a typical tabular dataset. You can create `TabularDataset`
    by parsing various files, including CSV, TSV, Parquet, and JSON files. If your
    data contains a column/feature that has a timestamp, or the files are stored in
    a folder structure that contains a date pattern such as `/<year>/<month>/file.csv`,
    you can enable the time series trait of `TabularDataset`, something that allows
    you to perform time-based filtering of the dataset.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TabularDataset`允许你引用存储在一个文件或多个文件中的表格结构数据，这些文件可能存储在数据存储中，或者直接存储在像SQL服务器这样的关系型数据存储中。你在上一节中加载的糖尿病`DataFrame`就是一个典型的表格数据集。你可以通过解析各种文件（包括CSV、TSV、Parquet和JSON文件）来创建`TabularDataset`。如果你的数据包含一个带有时间戳的列/特征，或者文件存储在包含日期模式的文件夹结构中，比如`/<year>/<month>/file.csv`，你可以启用`TabularDataset`的时间序列特性，这样可以进行基于时间的数据集筛选。'
- en: To get some hands-on experience with this, you can define a `FileDataset` that
    references the CSV file you uploaded in the default datastore in the previous
    section. Although CSV represents tabular data, it is also a file, something that
    `FileDataset` can referenc:.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得一些实际操作经验，你可以定义一个`FileDataset`，它引用了你在上一节中上传的默认数据存储中的CSV文件。虽然CSV表示表格数据，但它也可以是一个文件，`FileDataset`可以引用这样的文件。
- en: 'In a new cell in your notebook, type the following code:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的笔记本中新建一个单元格，输入以下代码：
- en: '[PRE21]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: In this code snippet, there is a reference to the default datastore of the workstation.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这段代码中，引用了工作站的默认数据存储。
- en: 'Now, you can create an array of tuples of `Datastore` and its relative paths.
    Each tuple references a file or a folder within a specific `Datastore`. In this
    case, you are referencing the `samples/diabetes/v1` folder within the default
    `Datastore`. You can use the wildcard character, `*`, to load multiple subfolders
    or partial filenames if you want. For example, the following array of tuples loads
    all the CSV files of all the months in 2021 of the weather data that''s stored
    in `/weather/<year>/<month>/<day>.csv`:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以创建一个包含`Datastore`及其相对路径的元组数组。每个元组引用一个特定`Datastore`中的文件或文件夹。在这种情况下，你引用的是默认`Datastore`中的`samples/diabetes/v1`文件夹。如果你愿意，可以使用通配符字符`*`来加载多个子文件夹或部分文件名。例如，以下元组数组加载了2021年所有月份的天气数据CSV文件，这些文件存储在`/weather/<year>/<month>/<day>.csv`路径下：
- en: '[PRE22]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'If you wanted to explicitly load the data for the first day (`01.csv`) of January
    (`01`), February (`02`), and March (`03`) only, then you would use the following
    array of tuples:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你只想显式加载1月（`01.csv`）、2月（`02`）、和3月（`03`）的第一天数据，你可以使用以下元组数组：
- en: '[PRE23]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: It is advised to keep the array's size to less than 100 data path references
    per dataset for performance reasons.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 出于性能考虑，建议每个数据集的数组大小不要超过100个数据路径引用。
- en: Returning to the code snippet at the beginning of this section, you can now
    create an unregistered `FileDataset` using the `from_files()` method. Here, you
    must pass the array of data paths as an argument. You must also validate whether
    the data can be loaded or not via the method. If the folder did not exist or the
    datastore was protected with private endpoints and was not directly accessible
    from the compute that is executing the code, you will get `DatasetValidationError`.
    The default value of the `validate` argument is `True`, and you can disable that
    validation by passing `False` in that argument.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到本节开头的代码片段，现在您可以使用`from_files()`方法创建一个未注册的`FileDataset`。在此处，您必须将数据路径数组作为参数传递。您还必须验证数据是否可以通过该方法加载。如果文件夹不存在或数据存储由于私有端点受保护，不可直接从执行代码的计算资源访问，则会收到`DatasetValidationError`。`validate`参数的默认值为`True`，您可以通过在该参数中传递`False`来禁用该验证。
- en: Once you have created `FileDataset`, you can get a list of files that were referenced
    by invoking the `to_path()` method. The output of these two prints should look
    as follows:![Figure 7.20 – Unregistered FileDataset referencing a single CSV file
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建了`FileDataset`之后，您可以通过调用`to_path()`方法获取被引用的文件列表。这两个打印的输出应如下所示：![图 7.20 – 未注册的
    FileDataset 引用单个 CSV 文件
- en: '](img/B16777_07_020.jpg)'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16777_07_020.jpg)'
- en: Figure 7.20 – Unregistered FileDataset referencing a single CSV file
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.20 – 未注册的 FileDataset 引用单个 CSV 文件
- en: 'For the CSV files, a far better approach would be to define a `TabularDataset`
    that could parse the file and provide us with a pandas `DataFrame`. To do so,
    copy the following code in a new cell:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 CSV 文件，更好的方法是定义一个`TabularDataset`，它可以解析文件并为我们提供 pandas `DataFrame`。为此，请将以下代码复制到一个新单元格中：
- en: '[PRE24]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: In this snippet, you are reusing the `file_paths` properties that you used while
    creating `FileDataset`. This time, you are creating an unregistered `TabularDataset`
    using the `from_delimited_files()` method. Also, note that you explicitly skip
    the validation so that the data can be loaded from the current compute (`validate=False`),
    speeding up the declaration process.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此片段中，您正在重用创建`FileDataset`时使用的`file_paths`属性。这次，您正在使用`from_delimited_files()`方法创建一个未注册的`TabularDataset`。还请注意，您明确跳过验证，以便可以从当前计算资源加载数据（`validate=False`），加快声明过程。
- en: '`DataFrame`, and assign it to the `df` variable when you invoke the `to_pandas_dataframe()`
    method. Upon calling the `len()` method, you get the number of rows that `DataFrame`
    has.'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`DataFrame`，并在调用`to_pandas_dataframe()`方法时将其分配给`df`变量。调用`len()`方法时，您可以获取`DataFrame`的行数。'
- en: 'So far, the datasets that you have created have been unregistered, meaning
    that they did not register within the AzureML workspace, nor were they listed
    in the `register()` method:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到目前为止，您创建的数据集都是未注册的，这意味着它们未在 AzureML 工作区中注册，也未在`register()`方法中列出：
- en: '[PRE25]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Important note
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'If you have already registered a dataset with the same name, you will not be
    able to rerun this cell. To register a new version of the dataset you must use
    the `create_new_version` argument as follows: `tabular_dataset.register(workspace=ws,
    name="diabetes", create_new_version=True)`'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您已经注册了同名的数据集，则无法重新运行此单元格。要注册数据集的新版本，必须使用以下方式使用`create_new_version`参数：`tabular_dataset.register(workspace=ws,
    name="diabetes", create_new_version=True)`
- en: 'This method requires you to specify the workspace where you want to register
    `TabularDataset` and the name of the registration. Optionally, you can pass a
    description, tags, and whether to create a new version of the dataset with the
    specific name that is already registered in the workspace. Once the dataset has
    been registered, you can review the registration information in the Studio web
    UI, as shown in the following screenshot:'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此方法要求您指定要注册`TabularDataset`的工作区以及注册的名称。可选地，您可以传递描述、标签以及是否要使用已在工作区中注册的特定名称创建数据集的新版本。数据集注册后，您可以在
    Studio Web UI 中查看注册信息，如下截图所示：
- en: '![Figure 7.21 – Registered tabular dataset in the workspace'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 7.21 – 注册在工作区中的表格数据集'
- en: '](img/B16777_07_021.jpg)'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16777_07_021.jpg)'
- en: Figure 7.21 – Registered tabular dataset in the workspace
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.21 – 注册在工作区中的表格数据集
- en: 'If, instead of `TabularDataset`, you have a pandas `DataFrame` that you want
    to register, you can use the `register_pandas_dataframe()` method, as shown in
    the following code snippet:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您有一个 pandas `DataFrame` 而不是`TabularDataset`，并且想要注册它，可以使用`register_pandas_dataframe()`方法，如下面的代码片段所示：
- en: '[PRE26]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Note that in this snippet, you are passing the `df` pandas `DataFrame` reference
    and that you are requesting to store that `DataFrame` in the default datastore
    that is referenced by the `dstore` variable, in the `/samples/diabetes` folder.
    This method will create a new folder with a GUID name and store the data in Parquet
    file format. Since the dataset has already been registered and points to a different
    path, the command will create a new version of the dataset. In the Studio experience,
    you will notice that **Version 2** of the dataset was registered. This version
    has a different **relative path**, as shown here:'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，在这个代码片段中，你传递了 `df` pandas `DataFrame` 引用，并且请求将该 `DataFrame` 存储在由 `dstore`
    变量引用的默认数据存储中，存储路径为 `/samples/diabetes` 文件夹。此方法将创建一个具有 GUID 名称的新文件夹，并将数据以 Parquet
    文件格式存储。由于数据集已经注册并指向不同的路径，该命令将创建数据集的新版本。在 Studio 界面中，你会看到 **版本 2** 的数据集已被注册。这个版本有一个不同的
    **相对路径**，如下面所示：
- en: '![Figure 7.22 – New version of the diabetes dataset, registered directly from
    a pandas DataFrame'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 7.22 – 从 pandas DataFrame 直接注册的新版本糖尿病数据集'
- en: '](img/B16777_07_022.jpg)'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16777_07_022.jpg)'
- en: Figure 7.22 – New version of the diabetes dataset, registered directly from
    a pandas DataFrame
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.22 – 从 pandas DataFrame 直接注册的新版本糖尿病数据集
- en: Note that the Parquet file format is a compressed one, which leads to smaller
    files compared to the CSV file you used for the first version of the dataset.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，Parquet 文件格式是一种压缩格式，与用于数据集第一版的 CSV 文件相比，它的文件体积更小。
- en: 'Once you have registered a dataset, either `FileDataset` or `TabularDataset`,
    you can retrieve it using the `get_by_name()` method of the `Dataset` class using
    the following code snippet:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册数据集后，无论是 `FileDataset` 还是 `TabularDataset`，你都可以使用 `Dataset` 类的 `get_by_name()`
    方法来检索它，使用如下代码片段：
- en: '[PRE27]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Optionally, you can specify the `version` argument, which is `latest` by default.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可选地，你可以指定 `version` 参数，默认值为 `latest`。
- en: 'The preceding code snippet returns an instance of a `TabularDataset` class,
    but the data hasn''t been loaded yet. You can load the dataset partially using
    various methods of the `TabularDataset` class, as shown in the following code
    snippet:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上面的代码片段返回一个 `TabularDataset` 类的实例，但数据尚未加载。你可以通过 `TabularDataset` 类的各种方法部分加载数据集，如下所示的代码片段所示：
- en: '[PRE28]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '`partial_dataset` is a `TabularDataset` instance that was created from `diabetes_dataset`.
    This dataset skips the first 10 rows of `diabetes_dataset`, keeps two rows, and
    then drops all the columns other than the columns named `0` and `target`. No data
    was loaded during the execution of this multiline statement. Having this unregistered
    `partial_dataset` dataset defined, you can load the data into a pandas `DataFrame`
    using the following code:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`partial_dataset` 是从 `diabetes_dataset` 创建的 `TabularDataset` 实例。该数据集跳过了 `diabetes_dataset`
    的前 10 行，保留了两行，并删除了所有列，除了名为 `0` 和 `target` 的列。在执行此多行语句时没有加载任何数据。定义了这个未注册的 `partial_dataset`
    数据集后，你可以使用以下代码将数据加载到 pandas `DataFrame` 中：'
- en: '[PRE29]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This will display a small table that consists of two rows and two columns,
    as shown in the following screenshot:'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将显示一个由两行两列组成的小型表格，如下所示的屏幕截图所示：
- en: '![Figure 7.23 – Small DataFrame loaded from a sliced tabular dataset'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.23 – 从切片表格数据集加载的小型 DataFrame'
- en: '](img/B16777_07_023.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_023.jpg)'
- en: Figure 7.23 – Small DataFrame loaded from a sliced tabular dataset
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.23 – 从切片表格数据集加载的小型 DataFrame
- en: This lazy loading capability of the AzureML dataset classes gives you the flexibility
    to slice and dice huge datasets without having to load them in memory.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: AzureML 数据集类的惰性加载功能让你可以灵活地对庞大的数据集进行切片和操作，而无需将其加载到内存中。
- en: So far, you have learned how to work with the Python SDK to deploy compute targets,
    define datastores, and create datasets. In the next section, you will learn how
    to perform similar actions using the Azure CLI tool you saw in [*Chapter 2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026),
    *Deploying Azure Machine Learning Workspace Resources*, in the *Using the Azure
    CLI* section.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经学习了如何使用 Python SDK 部署计算目标、定义数据存储和创建数据集。在下一节中，你将学习如何使用在[*第 2 章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)中看到的
    Azure CLI 工具执行类似操作，*部署 Azure 机器学习工作区资源*，该章节位于 *使用 Azure CLI* 部分。
- en: Working with the AzureML CLI extension
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AzureML CLI 扩展
- en: 'In [*Chapter 2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026), *Deploying
    Azure Machine Learning Workspace Resources*, you learned how to use the Azure
    CLI and how to install the `azure-cli-ml` extension. This extension uses the Python
    SDK you saw in this chapter to perform various operations. To work with the Azure
    CLI, you can do one of the following:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 2 章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)《*部署 Azure 机器学习工作区资源*》中，你学习了如何使用
    Azure CLI，以及如何安装`azure-cli-ml`扩展。这个扩展使用你在本章看到的 Python SDK 执行各种操作。要使用 Azure CLI，你可以选择以下任一方法：
- en: Open the cloud shell in the Azure portal, as you did in [*Chapter 2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026),
    *Deploying Azure Machine Learning Workspace Resources*.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Azure 门户中的云终端，就像你在[*第 2 章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)《*部署
    Azure 机器学习工作区资源*》中所做的那样。
- en: Open a terminal in the compute instance you have been working on in this chapter.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你在本章中使用的计算实例的终端。
- en: Use the shell assignment feature of Jupyter notebooks, which allows you to execute
    commands using the underlying shell by using an exclamation mark (**!**), also
    known as **bang**.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Jupyter 笔记本的 shell 分配功能，允许你通过使用感叹号（**!**），也叫做**bang**，执行底层 shell 命令。
- en: 'In this section, you will use the notebook, something that will allow you to
    store the steps and repeat them if you need them in the future:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将使用笔记本，这将帮助你存储步骤，并在未来需要时重复这些步骤：
- en: 'The first thing you will need to do is install the `azure-cli-ml` extension
    in the Azure CLI of the compute instance you are currently working on. Create
    a new code cell in the notebook you have been editing so far and add the following
    code:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要在你当前正在使用的计算实例的Azure CLI中安装`azure-cli-ml`扩展。创建一个新的代码单元格，并添加以下代码：
- en: '[PRE30]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Note that in [*Chapter 2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026),
    *Deploying Azure Machine Learning Workspace Resources*, you executed the same
    command, without the exclamation prefix. The output of this command should be
    similar to the following:'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，在[*第 2 章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)《*部署 Azure 机器学习工作区资源*》中，你执行了相同的命令，但没有感叹号前缀。此命令的输出应类似于以下内容：
- en: '![Figure 7.24 – Installing the AzureML extension'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 7.24 – 安装 AzureML 扩展'
- en: '](img/B16777_07_024.jpg)'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B16777_07_024.jpg)'
- en: Figure 7.24 – Installing the AzureML extension
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.24 – 安装 AzureML 扩展
- en: 'Then, you will need to log in using the `az login` command. This command will
    trigger a device authentication process, similar to the one you used at the beginning
    of this chapter when you first tried to connect to the workspace through the SDK.
    Run the following command:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你需要使用`az login`命令登录。此命令将触发设备认证过程，类似于你在本章开始时尝试通过 SDK 连接到工作区时使用的认证方式。运行以下命令：
- en: '[PRE31]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'If you have access to multiple Azure subscriptions, you will need to select
    the one you are targeting using the following code snippet:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你有多个 Azure 订阅的访问权限，你需要使用以下代码片段选择你正在使用的订阅：
- en: '[PRE32]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: From this point on, you can use the AzureML CLI to perform operations against
    the workspace.
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从现在开始，你可以使用 AzureML CLI 对工作区执行操作。
- en: Important note
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: If you have multiple AzureML workspaces within your subscription, you will need
    to specify which workspace and in which resource group you are targeting each
    AzureML CLI command. To do that, you will need to use the `-g` and `-w` parameters,
    which we looked at in [*Chapter 2*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026),
    *Deploying Azure Machine Learning Workspace Resources*.
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在订阅中有多个 AzureML 工作区，你需要指定每个 AzureML CLI 命令的目标工作区和资源组。为此，你需要使用`-g`和`-w`参数，我们在[*第
    2 章*](B16777_02_Final_VK_ePub.xhtml#_idTextAnchor026)《*部署 Azure 机器学习工作区资源*》中已经介绍过。
- en: 'To list all the compute targets in your workspace, use the following code snippet:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要列出工作区中的所有计算目标，可以使用以下代码片段：
- en: '[PRE33]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'You can then update `cpu-sm-cluster` so that it has 0 minimum nodes using the
    following command:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可以使用以下命令更新`cpu-sm-cluster`，使其具有0个最小节点：
- en: '[PRE34]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'To get the default datastore that is registered in the workspace, you can use
    the following command:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取在工作区中注册的默认数据存储，可以使用以下命令：
- en: '[PRE35]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Finally, you can list the datasets registered in the workspace using the following
    snippet:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你可以使用以下代码列出工作区中注册的数据集：
- en: '[PRE36]'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The results of this command should be similar to the following:'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该命令的结果应类似于以下内容：
- en: '![Figure 7.25 – Table-formatted output of the datasets listing within the AzureML
    CLI'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.25 – 在 AzureML CLI 中列出的数据集表格格式输出'
- en: '](img/B16777_07_025.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16777_07_025.jpg)'
- en: Figure 7.25 – Table-formatted output of the datasets listing within the AzureML
    CLI
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.25 – AzureML CLI 中数据集列表的表格格式输出
- en: The AzureML CLI offers full access to the SDK options, including the ability
    to create and detach compute targets, datastores, and even define datasets. For
    the exam, you won't need to memorize the commands, so long as you have understood
    that the CLI is using the SDK under the hood and that most of the things you can
    do with the SDK have an equivalent CLI command.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: AzureML CLI 提供对 SDK 选项的完全访问权限，包括创建和分离计算目标、数据存储，甚至定义数据集的能力。对于考试，您不需要记住命令，只要您理解
    CLI 在后台使用 SDK，并且大多数您可以用 SDK 做的事情都有对应的 CLI 命令即可。
- en: Summary
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how the AzureML Python SDK is structured. You also
    discovered the AzureML notebook editor, which allows you to code Python scripts.
    You then worked with the SDK. You started your coding journey by managing the
    compute targets that are attached to the AzureML workspace. You then attached
    new datastores and got a reference to existing ones, including the default datastore
    for the workspace. Then, you worked with various files and tabular-based datasets
    and learned how to reuse them by registering them in the workspace.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了 AzureML Python SDK 的结构。您还发现了 AzureML 笔记本编辑器，允许您编写 Python 脚本。接着，您使用了
    SDK，并开始通过管理附加到 AzureML 工作区的计算目标来启动编码旅程。然后，您附加了新的数据存储并获取了现有数据存储的引用，包括工作区的默认数据存储。接下来，您处理了各种文件和基于表格的数据集，并学习了如何通过将它们注册到工作区中来重用这些数据集。
- en: Finally, you worked with the AzureML CLI extension, which is a client that utilizes
    the Python SDK you explored in this chapter.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您已经使用了 AzureML CLI 扩展，这是一个客户端，利用了您在本章中探索的 Python SDK。
- en: In the next chapter, you will build on top of this knowledge and learn how to
    use the AzureML SDK during the data science experimentation phase. You will also
    learn how to track metrics on your data science experiments, as well as how to
    scale your training into bigger computes, by running scripts in compute clusters.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将基于这些知识进一步学习如何在数据科学实验阶段使用 AzureML SDK。您还将学习如何跟踪数据科学实验中的指标，并了解如何通过在计算集群中运行脚本来将训练扩展到更大的计算资源。
- en: Questions
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Please answer the following questions to check your knowledge of the topics
    that were discussed in this chapter:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 请回答以下问题，以检查您对本章所讨论的主题的理解：
- en: What is the default minimum number of nodes for an AzureML compute cluster?
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AzureML 计算集群的默认最小节点数是多少？
- en: a. 0
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 0
- en: b. 1
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 1
- en: c. Equal to the maximum number of nodes
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 等于最大节点数
- en: You upload a CSV file to the default datastore that contains credit card transaction
    details. Which of the following methods should you use to create a dataset reference?
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将一个包含信用卡交易详情的 CSV 文件上传到默认数据存储库。您应该使用以下哪种方法来创建数据集引用？
- en: a. `Dataset.File.from_files()`
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. `Dataset.File.from_files()`
- en: b. `Dataset.Tabular.from_delimited_files()`
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. `Dataset.Tabular.from_delimited_files()`
- en: c. `Workspace.from_csv_files()`
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. `Workspace.from_csv_files()`
- en: d. `Datastore.from_csv_files()`
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. `Datastore.from_csv_files()`
- en: How can you force the creation of a blob container during the registration process
    of an Azure blob-based datastore?
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在注册 Azure Blob 存储数据存储库的过程中强制创建 Blob 容器？
- en: a. Pass the `force_create=True` parameter to the `Datastore.register_azure_blob_container()`
    method.
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 将 `force_create=True` 参数传递给 `Datastore.register_azure_blob_container()` 方法。
- en: b. Pass the `create_if_not_exists=True` parameter to the `Datastore.register_azure_blob_container()`
    method.
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 将 `create_if_not_exists=True` 参数传递给 `Datastore.register_azure_blob_container()`
    方法。
- en: c. Pass the `force_create=True` parameter to the `Datastore.register_container()`
    method.
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 将 `force_create=True` 参数传递给 `Datastore.register_container()` 方法。
- en: b. Pass the `create_if_not_exists=True` parameter to the `Datastore.register_container()`
    method.
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 将 `create_if_not_exists=True` 参数传递给 `Datastore.register_container()` 方法。
- en: Further reading
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'This section offers a list of useful web resources that will help you augment
    your knowledge of the AzureML SDK and the various third-party libraries that were
    used in this chapter:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了一些有用的网络资源，这些资源将帮助您增强对 AzureML SDK 及本章中使用的各种第三方库的知识：
- en: 'Supported data storage service types in AzureML: [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-access-data#supported-data-storage-service-types](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-access-data#supported-data-storage-service-types)'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AzureML 中支持的数据存储服务类型：[https://docs.microsoft.com/en-us/azure/machine-learning/how-to-access-data#supported-data-storage-service-types](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-access-data#supported-data-storage-service-types)
- en: 'Reference to the `DataFrame` API: [https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame` API 参考：[https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)'
- en: 'Reference to the diabetes dataset that was loaded from the scikit-learn library:
    [https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_diabetes.html](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_diabetes.html)'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考从 scikit-learn 库加载的糖尿病数据集：[https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_diabetes.html](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_diabetes.html)
- en: 'AzureML SDK Python API browser, which lists all packages, classes, and methods:
    [https://docs.microsoft.com/en-us/Python/api/?view=azure-ml-py](https://docs.microsoft.com/en-us/Python/api/?view=azure-ml-py)'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AzureML SDK Python API 浏览器，列出了所有包、类和方法：[https://docs.microsoft.com/en-us/Python/api/?view=azure-ml-py](https://docs.microsoft.com/en-us/Python/api/?view=azure-ml-py)
- en: 'Reference to the AzureML CLI extension: [https://docs.microsoft.com/cli/azure/ml(v1)?view=azure-cli-latest](https://docs.microsoft.com/cli/azure/ml(v1)?view=azure-cli-latest)'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AzureML CLI 扩展参考：[https://docs.microsoft.com/cli/azure/ml(v1)?view=azure-cli-latest](https://docs.microsoft.com/cli/azure/ml(v1)?view=azure-cli-latest)
- en: 'Free e-book – Learn Python Programming – Second Edition: [https://www.packtpub.com/free-ebook/learn-Python-programming-second-edition/9781788996662](https://www.packtpub.com/free-ebook/learn-Python-programming-second-edition/9781788996662)'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 免费电子书——《学习 Python 编程（第二版）》：[https://www.packtpub.com/free-ebook/learn-Python-programming-second-edition/9781788996662](https://www.packtpub.com/free-ebook/learn-Python-programming-second-edition/9781788996662)
