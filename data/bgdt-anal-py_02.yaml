- en: '*Chapter 2*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第二章*'
- en: Statistical Visualizations
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 统计可视化
- en: Learning Objectives
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习目标
- en: We will start our journey by understanding the power of Python to manipulate
    and visualize data, creating useful analysis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从理解Python在数据处理和可视化方面的强大能力开始，创造出有用的分析结果。
- en: 'By the end of this chapter, you will be able to:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章结束时，你将能够：
- en: Use graphs for data analysis
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用图表进行数据分析
- en: Create graphs of various types
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建各种类型的图表
- en: Change graph parameters such as color, title, and axis
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改图表参数，如颜色、标题和轴
- en: Export graphs for presentation, printing, and other uses
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出图表以用于展示、打印及其他用途
- en: In this chapter, we will illustrate how the students can generate visualizations
    with Matplotlib and Seaborn.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将演示学生如何使用Matplotlib和Seaborn生成可视化图表。
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: In the last chapter, we learned that the libraries that are most commonly used
    for data science work with Python. Although they are not big data libraries per
    se, the libraries of the Python Data Science Stack (**NumPy**, **Jupyter**, **IPython**,
    **Pandas**, and **Matplotlib**) are important in big data analysis.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了最常用于数据科学的Python库。虽然这些库本身并不是大数据库，但Python数据科学堆栈的库（**NumPy**、**Jupyter**、**IPython**、**Pandas**和**Matplotlib**）在大数据分析中非常重要。
- en: As we will demonstrate in this chapter, no analysis is complete without visualizations,
    even with big datasets, so knowing how to generate images and graphs from data
    in Python is relevant for our goal of big data analysis. In the subsequent chapters,
    we will demonstrate how to process large volumes of data and aggregate it to visualize
    it using Python tools.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章所演示的，任何分析都离不开可视化，哪怕是大数据集也不例外，因此，掌握如何从数据中生成图像和图表，对于我们大数据分析的目标非常重要。在接下来的章节中，我们将演示如何处理大量数据并使用Python工具进行聚合和可视化。
- en: There are several visualization libraries for Python, such as Plotly, Bokeh,
    and others. But one of the oldest, most flexible, and most used is Matplotlib.
    But before going through the details of creating a graph with Matplotlib, let's
    first understand what kinds of graphs are relevant for analysis.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Python有多个可视化库，如Plotly、Bokeh等。但其中最古老、最灵活、使用最广泛的就是Matplotlib。在详细讲解如何使用Matplotlib创建图表之前，我们先来了解哪些类型的图表对于分析是相关的。
- en: Types of Graphs and When to Use Them
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图表的类型及其使用时机
- en: Every analysis, whether on small or large datasets, involves a descriptive statistics
    step, where the data is summarized and described by statistics such as mean, median,
    percentages, and correlation. This step is commonly the first step in the analysis
    workflow, allowing a preliminary understanding of the data and its general patterns
    and behaviors, providing grounds for the analyst to formulate hypotheses, and
    directing the next steps in the analysis. Graphs are powerful tools to aid in
    this step, enabling the analyst to visualize the data, create new views and concepts,
    and communicate them to a larger audience.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每一次分析，无论是针对小型数据集还是大型数据集，都涉及到一个描述性统计步骤，在这个步骤中，数据通过均值、中位数、百分比和相关性等统计量进行汇总和描述。这个步骤通常是分析工作流程中的第一步，它有助于初步理解数据及其一般模式和行为，为分析师提出假设提供基础，并指导分析的下一步。图表是帮助此步骤的有力工具，它使分析师能够可视化数据，创建新的视图和概念，并将其传达给更广泛的受众。
- en: 'There is a vast amount of literature on statistics about visualizing information.
    The classic book, *Envisioning Information*, by Edward Tufte, demonstrates beautiful
    and useful examples of how to present information in graphical form. In another
    book, The *Visual Display of Quantitative Information*, Tufte enumerates a few
    qualities that a graph that will be used for analysis and transmitting information,
    including statistics, should have:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 关于可视化信息的统计学文献浩如烟海。Edward Tufte的经典书籍《*Envisioning Information*》展示了如何以图形形式呈现信息的美丽而有用的例子。在另一本书《*The
    Visual Display of Quantitative Information*》中，Tufte列举了一个用于分析和传递信息（包括统计数据）的图表应该具备的几个特征：
- en: Show the data
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示数据
- en: Avoid distorting what the data has to say
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免扭曲数据所传达的信息
- en: Make large datasets coherent
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使大型数据集具有可理解性
- en: Serve a reasonably clear purpose—description, exploration, tabulation, or decoration
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有合理清晰的目的——描述、探索、表格化或装饰
- en: Graphs must reveal information. We should think about creating graphs with these
    principles in mind when creating an analysis.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图表必须揭示信息。在创建分析时，我们应牢记这些原则来创建图表。
- en: A graph should also be able to stand out on its own, outside the analysis. Let's
    say that you are writing an analysis report that becomes extensive. Now, we need
    to create a summary of that extensive analysis. To make the analysis' points clear,
    a graph can be used to represent the data. This graph should be able to support
    the summary without the entire extensive analysis. To enable the graph to give
    more information and be able to stand out on its own in the summary, we have to
    add more information to it, such as a title and labels.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一个图表还应该能够独立于分析而突出表现。假设你正在撰写一份分析报告，这份报告变得非常详细。现在，我们需要对这份详细的分析做一个总结。为了使分析的要点清晰，图表可以用来表示数据。这个图表应该能够在没有整个详细分析的情况下支持这个总结。为了让图表能提供更多信息，并且能够在总结中独立存在，我们需要为它添加更多信息，例如标题和标签。
- en: 'Exercise 8: Plotting an Analytical Function'
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 8：绘制分析函数
- en: 'In this exercise, we will create a basic plot using the Matplotlib libraries,
    where we will visualize a function of two variables, for example, `y = f(x)`,
    where `f(x)` is `x^2`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用 Matplotlib 库创建一个基本的图表，我们将可视化一个二元函数，例如，`y = f(x)`，其中 `f(x)` 是 `x^2`：
- en: 'First, create a new Jupyter notebook and import all the required libraries:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建一个新的 Jupyter Notebook 并导入所有必需的库：
- en: '[PRE0]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, let''s generate a dataset and plot it using the following code:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们生成一个数据集并使用以下代码绘制它：
- en: '[PRE1]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Use the following command to create a basic graph with Matplotlib:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建一个基本的 Matplotlib 图表：
- en: '[PRE2]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output is as follows:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.1: Basic plot of X and Y axis](img/C12913_02_01.jpg)'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.1：X 轴和 Y 轴的基本图表](img/C12913_02_01.jpg)'
- en: 'Figure 2.1: Basic plot of X and Y axis'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.1：X 轴和 Y 轴的基本图表
- en: 'Now, modify the data generation function from `x^2` to `x^3`, keeping the same
    interval of `[-50,50]` and recreate the line plot:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将数据生成函数从 `x^2` 修改为 `x^3`，保持相同的区间 `[-50,50]`，并重新绘制线图：
- en: '[PRE3]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output is as follows:'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.2: Basic plot of X and Y axis](img/C12913_02_02.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2：X 轴和 Y 轴的基本图表](img/C12913_02_02.jpg)'
- en: 'Figure 2.2: Basic plot of X and Y axis'
  id: totrans-38
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.2：X 轴和 Y 轴的基本图表
- en: 'As you can see, the shape of the function changed, as expected. The basic type
    of graph that we used was sufficient to see the change between the `y` and `y_hat`
    values. But some questions remain: we plotted only a mathematical function, but
    generally the data that we are collecting has dimensions, such as length, time,
    and mass. How can we add this information to the plot? How do we add a title?
    Let''s explore this in the next section.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，函数的形状发生了变化，正如预期的那样。我们使用的基本图表类型足以看到 `y` 和 `y_hat` 值之间的变化。但仍然有一些问题：我们只绘制了一个数学函数，但通常我们收集的数据是有维度的，比如长度、时间和质量。我们如何将这些信息添加到图表中？我们如何添加标题？让我们在下一节中探讨这个问题。
- en: Components of a Graph
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图表的组成部分
- en: 'Each graph has a set of common components that can be adjusted. The names that
    Matplotlib uses for these components are demonstrated in the following graph:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 每个图表都有一组可以调整的公共组成部分。Matplotlib 使用的这些组件名称将在下图中展示：
- en: '![Figure 2.3: Components of a graph](img/C12913_02_03.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3：图表的组成部分](img/C12913_02_03.jpg)'
- en: 'Figure 2.3: Components of a graph'
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.3：图表的组成部分
- en: 'The components of a graph are as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图表的组成部分如下：
- en: '**Figure**: The base of the graph, where all the other components are drawn.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形**：图表的基础，所有其他组件都绘制在这里。'
- en: '**Axis**: Contains the figure elements and sets the coordinate system.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**坐标轴**：包含图形元素并设置坐标系统。'
- en: '**Title**: The title gives the graph its name.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标题**：标题给图表命名。'
- en: '**X-axis label**: The name of the *x*-axis, usually named with the units.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**X 轴标签**：*x* 轴的名称，通常带有单位。'
- en: '**Y-axis label**: The name of the *y*-axis, usually named with the units.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Y 轴标签**：*y* 轴的名称，通常带有单位。'
- en: '**Legend**: A description of the data plotted in the graph, allowing you to
    identify the curves and points in the graph.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图例**：图例是对图表中数据的描述，帮助你识别图中的曲线和点。'
- en: '**Ticks and tick labels**: They indicate the points of reference on a scale
    for the graph, where the values of the data are. The labels indicate the values
    themselves.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**刻度和刻度标签**：它们表示图表中刻度上的参考点，数据值所在的位置。标签则表示具体的数值。'
- en: '**Line plots**: These are the lines that are plotted with the data.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**线图**：这些是与数据一起绘制的线条。'
- en: '**Markers**: Markers are the pictograms that mark the point data.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标记**：标记是用来标示数据点的图形符号。'
- en: '**Spines**: The lines that delimit the area of the graph where data is plotted.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**坐标轴**：限定图表区域的线条，数据将在该区域中绘制。'
- en: Each of these components can be configured to adapt to the needs of the visualization
    task at hand. We will go through each type of graph and how to adapt the components
    as previously described.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些组件中的每一个都可以根据当前可视化任务的需求进行配置。我们将逐一介绍每种图形类型以及如何调整之前描述的组件。
- en: 'Exercise 9: Creating a Graph'
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 9：创建一个图形
- en: There are several ways to create a graph with Matplotlib. The first one is closely
    related to the MATLAB way of doing it, called **Pyplot**. Pyplot is an API that
    is a *state-based interface for Matplotlib*, meaning that it keeps the configurations
    and other parameters in the object itself. Pyplot is intended as a simple case.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 创建图形有多种方式。第一种方式与 MATLAB 的方法非常相似，称为 **Pyplot**。Pyplot 是一个 API，是
    Matplotlib 的*基于状态的接口*，这意味着它会将配置和其他参数保存在对象中。Pyplot 被设计为一种简单的用法。
- en: 'Perform the following steps to create the graph of a sine function using the
    Matplotlib library:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，使用 Matplotlib 库绘制正弦函数图形：
- en: 'Import all the required libraries, as we did in the previous exercise:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所有需要的库，就像我们在前面的练习中做的那样：
- en: '[PRE4]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A second API, called `plt.subplots` module.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第二个 API，称为 `plt.subplots` 模块。
- en: 'Now, to get a figure and an axis, use the following command:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要获取图形和坐标轴，请使用以下命令：
- en: '[PRE5]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The figure is the top container for all other graph components. The axes set
    things such as the axis, the coordinate system, and contain the plot elements,
    such as lines, text, and many more.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图形是所有其他图形组件的顶层容器。坐标轴设置了诸如轴、坐标系统等内容，并包含了图形元素，如线条、文本等。
- en: 'To add a plot to a graph created using the object-oriented API, use the following
    command:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将一个图形添加到使用面向对象 API 创建的图表中，请使用以下命令：
- en: '[PRE6]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output is as follows:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.4: Plot output using the object-oriented API](img/C12913_02_04.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4：使用面向对象 API 绘制的图形输出](img/C12913_02_04.jpg)'
- en: 'Figure 2.4: Plot output using the object-oriented API'
  id: totrans-70
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.4：使用面向对象 API 绘制的图形输出
- en: We are adding a line plot to the `ax` axis that belongs to the `fig` figure.
    Changes to the graph, such as label names, title, and so on, will be demonstrated
    later in this chapter. For now, let's look at how to create each kind of graph
    that we may use in an analysis.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在将一条线性图添加到属于 `fig` 图形的 `ax` 坐标轴中。图形的修改，如标签名称、标题等，将在本章稍后演示。现在，让我们看看如何创建我们可能在分析中使用的每种类型的图形。
- en: 'Exercise 10: Creating a Graph for a Mathematical Function'
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 10：为数学函数创建图形
- en: 'In *Exercise 1: Plotting an Analytical Function*, we created a graph for a
    mathematical function using the MATLAB-like interface, Pyplot. Now that we know
    how to use the Matplotlib object-oriented API, let''s create a new graph using
    it. Analysts have a lot of flexibility in creating graphs, whatever the data source,
    when using the object-oriented API.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在*练习 1：绘制一个解析函数*中，我们使用类似 MATLAB 的接口 Pyplot 为一个数学函数创建了图表。现在我们已经知道如何使用 Matplotlib
    的面向对象 API，让我们使用它创建一个新图表。当使用面向对象 API 时，分析人员可以根据数据来源灵活地创建图表。
- en: 'Let''s create a plot using the object-oriented API with the NumPy `sine` function
    on the interval `[0,100]`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用面向对象 API 和 NumPy 的 `sine` 函数，在区间 `[0,100]` 上创建一个图形：
- en: 'Create the data points for the `x`-axis:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `x` 轴的数据点：
- en: '[PRE7]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Create the API interface for Matplotlib:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Matplotlib 的 API 接口：
- en: '[PRE8]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Add the graph using the axis object, `ax`:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用坐标轴对象 `ax` 添加图表：
- en: '[PRE9]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output is as follows:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.5: Graph for a mathematical function](img/C12913_02_05.jpg)'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.5：数学函数的图形](img/C12913_02_05.jpg)'
- en: 'Figure 2.5: Graph for a mathematical function'
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.5：数学函数的图形
- en: Notice that we again created a linear interval of values between `[0, 100]`
    using the `linspace` function, with `200` points. We then applied the `sine` function
    over these values to create the `y` axis. This is a common approach when creating
    data intervals.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们再次使用 `linspace` 函数在线性区间 `[0, 100]` 上创建了 `200` 个值，然后对这些值应用了 `sine` 函数，生成了
    `y` 轴。这是在创建数据区间时常用的一种方法。
- en: Seaborn
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Seaborn
- en: '**Seaborn** ([https://seaborn.pydata.org/](https://seaborn.pydata.org/)) is
    part of the PyData family of tools and is a visualization library based on Matplotlib
    with the goal of creating statistical graphs more easily. It can operate directly
    on DataFrames and series, doing aggregations and mapping internally. Seaborn uses
    color palettes and styles to make visualizations consistent and more informative.
    It also has functions that can calculate some statistics, such as regression,
    estimation, and errors. Some specialized plots, such as violin plots and multi-facet
    plots, are also easy to create with Seaborn.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**Seaborn** ([https://seaborn.pydata.org/](https://seaborn.pydata.org/)) 是
    PyData 工具家族的一部分，是一个基于 Matplotlib 的可视化库，旨在更轻松地创建统计图形。它可以直接操作 DataFrame 和 Series，进行内部的聚合和映射。Seaborn
    使用颜色调色板和样式，使可视化更加一致且信息更丰富。它还具有一些可以计算统计数据的函数，例如回归、估计和误差。Seaborn 也能轻松创建一些特殊的图形，如小提琴图和多面图。'
- en: Which Tool Should Be Used?
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应该使用哪个工具？
- en: Seaborn tries to make the creation of some common analysis graphs easier than
    using Matplotlib directly. Matplotlib can be considered more low-level than Seaborn,
    and although this makes it a bit more cumbersome and verbose, it gives analysts
    much more flexibility. Some graphs, which with Seaborn are created with one function
    call, would take several lines of code to achieve using Matplotlib.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 尝试使一些常见分析图表的创建比直接使用 Matplotlib 更加简单。Matplotlib 可以被认为比 Seaborn 更低级，虽然这使得它有些繁琐和冗长，但它为分析师提供了更大的灵活性。有些图表，在
    Seaborn 中只需调用一个函数即可创建，而在 Matplotlib 中可能需要几行代码才能实现。
- en: There is no rule to determine whether an analyst should use only the pandas
    plotting interface, Matplotlib directly, or Seaborn. Analysts should keep in mind
    the visualization requirements and the level of configuration required to create
    the desired graph.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 没有明确的规则来确定分析师应该只使用 pandas 的绘图接口、直接使用 Matplotlib 还是使用 Seaborn。分析师应当牢记可视化需求以及创建所需图形所需的配置级别。
- en: Pandas' plotting interface is easier to use but is more constrained and limited.
    Seaborn has several graph patterns ready to use, including common statistical
    graphs such as pair plots and boxplots, but requires that the data is formatted
    into a tidy format and is more opinionated on how the graphs should look. Matplotlib
    is the base for both cases and is more flexible than both, but it demands a lot
    more code to create the same visualizations as the two other options.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 的绘图接口更易于使用，但功能较为受限和局限。Seaborn 提供了多种现成的图表模式，包括常见的统计图表，如配对图和箱型图，但要求数据必须以整洁的格式进行整理，并且对图表的外观有较为明确的意见。Matplotlib
    是两者的基础，比这两者更灵活，但要创建与其他两者相同的可视化效果，需要写更多的代码。
- en: 'The rule of thumb that we use in this book is: how can I create the graph that
    I need with the least amount of code and without changing the data? With that
    in mind, we will use the three options, sometimes at the same time, to attain
    our visualization goals. Analysts should not be restricted to just one of the
    options. We encourage the use of any tool that creates a meaningful visualization.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的经验法则是：如何用最少的代码、且不改变数据的情况下，创建我需要的图形？有了这个原则，我们将使用三种选择，有时同时使用它们，以达到我们的可视化目标。分析师不应该局限于使用其中一种选项。我们鼓励使用任何能够创建有意义可视化的工具。
- en: Let's go through the most common kinds of graphs used in statistical analysis.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来了解统计分析中最常见的几种图表类型。
- en: Types of Graphs
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图形类型
- en: The first type of graph that we will present is the **line graph** or **line
    chart**. A line graph displays data as a series of interconnected points on two
    axes (*x* and *y*), usually **Cartesian**, ordered commonly by the *x*-axis. Line
    charts are useful for demonstrating trends in data, such as in **time series**,
    for example.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将展示的第一种图形是**折线图**或**线性图**。折线图通过在两个坐标轴（*x* 和 *y*）上连接的点来显示数据，通常是**笛卡尔坐标系**，并通常按
    *x* 轴顺序排列。折线图用于展示数据的趋势，比如**时间序列**数据。
- en: A graph related to the line graph is the **scatter plot**. A scatter plot represents
    the data as points in Cartesian coordinates. Usually, two variables are demonstrated
    in this graph, although more information can be conveyed if the data is color-coded
    or size-coded by category, for example. Scatter plots are useful for showing the
    relationship and possible correlation between variables.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 与折线图相关的图形是**散点图**。散点图通过笛卡尔坐标系将数据表示为点。通常，这个图表展示两个变量，尽管如果通过类别对数据进行颜色编码或大小编码，可能会传达更多的信息。散点图对于展示变量之间的关系和可能的相关性非常有用。
- en: '**Histograms** are useful for representing the distribution of data. Unlike
    the two previous examples, histograms show only one variable, usually on the *x*-axis,
    while the *y*-axis shows the frequency of occurrence of the data. The process
    of creating a histogram is a bit more involved than the line graph and the scatter
    plot, so we will explain them in a bit more detail.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**直方图**用于表示数据的分布。与前两个示例不同，直方图通常只显示一个变量，通常在 *x*-轴上，而 *y*-轴显示数据的发生频率。创建直方图的过程比折线图和散点图要复杂一些，因此我们将更详细地解释它们。'
- en: '**Boxplots** can also be used for representing frequency distributions, but
    it can help to compare groups of data using some statistical measurements, such
    as mean, median, and standard deviation. Boxplots are used to visualize the data
    distribution and outliers.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**箱线图**也可用于表示频率分布，但它有助于通过一些统计量，如均值、中位数和标准差，比较数据组。箱线图用于可视化数据分布和异常值。'
- en: 'Each graph type has its applications and choosing the right type is paramount
    in the success of an analysis. For example, line graphs could be used to show
    trends in economic growth in the last century, while a boxplot for that would
    be hard to create. Another common data analysis task identifies correlations between
    variables: understanding whether two variables show related behaviors. A scatter
    plot is the tool commonly used to visualize this. Histograms are useful for visualizing
    data point numbers in a bin or a range, such as the number of cars whose efficiency
    is between 10 and 20 miles per gallon.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 每种图表类型都有其应用，选择正确的图表类型对于分析的成功至关重要。例如，折线图可以用于展示过去一个世纪的经济增长趋势，而箱线图则很难用于此类分析。另一个常见的数据分析任务是识别变量之间的相关性：理解两个变量是否表现出相关的行为。散点图是常用的可视化工具。直方图对于可视化某个范围或区间内的数据点数量很有用，例如显示每加仑油耗在
    10 到 20 英里之间的汽车数量。
- en: Line Graphs
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 折线图
- en: Line graphs, as described in the previous section, connect the data points with
    a line. Line graphs are useful for demonstrating tendencies and trends. More than
    one line can be used on the same graph, for a comparison between the behavior
    of each line, although care must be taken so that the units on the graph are the
    same. They can also demonstrate the relationship between an independent and a
    dependent variable. A common case for this is time series.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所述，折线图通过连接数据点来展示数据。折线图非常适合展示趋势和倾向。在同一图表上可以绘制多条折线，用于比较各条线的行为，尽管必须确保图表上的单位一致。折线图还可以展示自变量和因变量之间的关系。一个常见的例子就是时间序列。
- en: Time Series Plots
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间序列图
- en: '**Time series plots**, as the name suggests, graphs the behavior of the data
    with respect to time. Time series graphs are used frequently in financial areas
    and environmental sciences. For instance, a historical series of temperature anomalies
    are shown in the following graph:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间序列图**顾名思义，用于展示数据相对于时间的变化。时间序列图在金融领域和环境科学中使用频繁。例如，以下图表展示了历史温度异常的时间序列：'
- en: '![Figure 2.6: Time series plot](img/C12913_02_06.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.6: 时间序列图](img/C12913_02_06.jpg)'
- en: 'Figure 2.6: Time series plot'
  id: totrans-104
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 2.6: 时间序列图'
- en: Source
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 来源
- en: '[https://upload.wikimedia.org/wikipedia/commons/c/c1/2000_Year_Temperature_Comparison.png](https://upload.wikimedia.org/wikipedia/commons/c/c1/2000_Year_Temperature_Comparison.png)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://upload.wikimedia.org/wikipedia/commons/c/c1/2000_Year_Temperature_Comparison.png](https://upload.wikimedia.org/wikipedia/commons/c/c1/2000_Year_Temperature_Comparison.png)'
- en: Usually, a time series graph has the `time` variable on the *x*-axis.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，时间序列图的 `time` 变量位于 *x*-轴。
- en: 'Exercise 11: Creating Line Graphs Using Different Libraries'
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '练习 11: 使用不同库创建折线图'
- en: 'Let''s compare the creation process between Matplotlib, Pandas, and Seaborn.
    We will create a Pandas DataFrame with random values and plot it using various
    methods:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们比较 Matplotlib、Pandas 和 Seaborn 之间的创建过程。我们将创建一个包含随机值的 Pandas DataFrame，并使用不同的方法进行绘制：
- en: 'Create a dataset with random values:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含随机值的数据集：
- en: '[PRE10]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Plot the data using the Matplotlib Pyplot interface:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Matplotlib Pyplot 接口绘制数据：
- en: '[PRE11]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, let''s create a Pandas DataFrame with the created values:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们使用创建的值创建一个 Pandas DataFrame：
- en: '[PRE12]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Plot it using the Pyplot interface, but with the `data` argument:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Pyplot 接口绘制图表，但需要使用 `data` 参数：
- en: '[PRE13]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output is as follows:'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.7: Line graphs using different libraries](img/C12913_02_07.jpg)'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.7: 使用不同库的折线图](img/C12913_02_07.jpg)'
- en: 'Figure 2.7: Line graphs using different libraries'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 2.7: 使用不同库的折线图'
- en: 'With the same DataFrame, we can also plot directly from the Pandas DataFrame:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用相同的 DataFrame，我们还可以直接从 Pandas DataFrame 绘制：
- en: '[PRE14]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output is as follows:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.8: Line graphs from the pandas DataFrame](img/C12913_02_08.jpg)'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.8：来自 pandas DataFrame 的折线图](img/C12913_02_08.jpg)'
- en: 'Figure 2.8: Line graphs from the pandas DataFrame'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.8：来自 pandas DataFrame 的折线图
- en: 'What about Seaborn? Let''s create the same line plot with Seaborn:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那么 Seaborn 怎么样？我们来使用 Seaborn 绘制相同的折线图：
- en: '[PRE15]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output is as follows:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.9: Line graphs from the Seaborn DataFrame](img/C12913_02_09.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9：来自 Seaborn DataFrame 的折线图](img/C12913_02_09.jpg)'
- en: 'Figure 2.9: Line graphs from the Seaborn DataFrame'
  id: totrans-130
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.9：来自 Seaborn DataFrame 的折线图
- en: We can see that, in this case, the interface used by Matplotlib and Seaborn
    is quite similar.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在这种情况下，Matplotlib 和 Seaborn 使用的接口非常相似。
- en: Pandas DataFrames and Grouped Data
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pandas DataFrames 和分组数据
- en: 'As we learned in the previous chapter, when analyzing data and using Pandas
    to do so, we can use the plot functions from Pandas or use Matplotlib directly.
    Pandas uses Matplotlib under the hood, so the integration is great. Depending
    on the situation, we can either plot directly from pandas or create a **figure**
    and an **axes** with Matplotlib and pass it to pandas to plot. For example, when
    doing a GroupBy, we can separate the data into a GroupBy key. But how can we plot
    the results of GroupBy? We have a few approaches at our disposal. We can, for
    example, use pandas directly, if the DataFrame is already in the right format:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一章中学习的，当分析数据并使用 Pandas 时，我们可以使用 Pandas 的 plot 函数或直接使用 Matplotlib。Pandas
    在后台使用 Matplotlib，因此集成得非常好。根据具体情况，我们可以直接从 pandas 绘制，或者使用 Matplotlib 创建 **figure**
    和 **axes**，并将其传递给 pandas 来绘制。例如，当进行 GroupBy 时，我们可以根据 GroupBy 键将数据分开。那么如何绘制 GroupBy
    的结果呢？我们有几种方法可以选择。例如，如果 DataFrame 已经是正确格式，我们可以直接使用 pandas：
- en: Note
  id: totrans-134
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The following code is a sample and will not get executed.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是示例，无法执行。
- en: '[PRE16]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Or we can just plot each GroupBy key on the same plot:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以将每个 GroupBy 键绘制在同一个图上：
- en: '[PRE17]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For the following activity, we will use what we've learned in the previous chapter
    and read a CSV file from a URL and parse it. The dataset is the Auto-MPG dataset
    ([https://raw.githubusercontent.com/TrainingByPackt/Big-Data-Analysis-with-Python/master/Lesson02/Dataset/auto-mpg.data](https://raw.githubusercontent.com/TrainingByPackt/Big-Data-Analysis-with-Python/master/Lesson02/Dataset/auto-mpg.data)).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下活动中，我们将使用上一章中学到的内容，从 URL 读取 CSV 文件并解析它。数据集是 Auto-MPG 数据集（[https://raw.githubusercontent.com/TrainingByPackt/Big-Data-Analysis-with-Python/master/Lesson02/Dataset/auto-mpg.data](https://raw.githubusercontent.com/TrainingByPackt/Big-Data-Analysis-with-Python/master/Lesson02/Dataset/auto-mpg.data)）。
- en: Note
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: This dataset is a modified version of the dataset provided in the `StatLib`
    library. The original dataset is available in the `auto-mpg.data-original` file.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集是从 `StatLib` 库提供的数据集修改而来的。原始数据集可以在 `auto-mpg.data-original` 文件中找到。
- en: The data concerns city-cycle fuel consumption in miles per gallon, in terms
    of three multivalued discrete and five continuous attributes.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 数据涉及城市循环的每加仑燃油消耗，包含三种多值离散属性和五种连续属性。
- en: 'Activity 4: Line Graphs with the Object-Oriented API and Pandas DataFrames'
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 4：使用面向对象 API 和 Pandas DataFrame 绘制折线图
- en: In this activity, we will create a time series line graph from the Auto-MPG
    dataset as a first example of plotting using pandas and the object-oriented API.
    This kind of graph is common in analysis and helps to answer questions such as
    "is the average horsepower increasing or decreasing with time?"
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本活动中，我们将从 Auto-MPG 数据集中创建一个时间序列折线图，作为使用 pandas 和面向对象 API 绘图的第一个示例。这种类型的图在分析中非常常见，帮助回答诸如“平均马力是否随着时间的推移增加或减少？”的问题。
- en: 'Now, follow these procedures to plot a graph of average horsepower per year
    using pandas and while using the object-oriented API:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照这些步骤使用 pandas 和面向对象 API 绘制每年平均马力的图：
- en: Import the required libraries and packages into the Jupyter notebook.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所需的库和包导入 Jupyter 笔记本。
- en: Read the Auto-MPG dataset into the Spark object.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Auto-MPG 数据集读入 Spark 对象。
- en: 'Provide the column names to simplify the dataset, as illustrated here:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供列名以简化数据集，如下所示：
- en: '[PRE18]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Now read the new dataset with column names and display it.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在读取带列名的新数据集并显示它。
- en: Convert the `horsepower` and `year` data types to float and integer.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `horsepower` 和 `year` 数据类型转换为浮动和整数。
- en: 'Now plot the graph of average horsepower per year using pandas:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用 pandas 绘制每年平均马力的图：
- en: '![Figure 2.10: Line Graphs with the Object-Oriented API and Pandas DataFrame](img/Image39479.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10：使用面向对象 API 和 Pandas DataFrame 绘制的折线图](img/Image39479.jpg)'
- en: 'Figure 2.10: Line Graphs with the Object-Oriented API and Pandas DataFrame'
  id: totrans-154
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.10：使用面向对象 API 和 Pandas DataFrame 绘制的折线图
- en: Note
  id: totrans-155
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found on page 205.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此活动的解答可以在第 205 页找到。
- en: Note that we are using the plot functions from pandas but passing the axis that
    we created directly with Matplotlib as an argument. As we saw in the previous
    chapter, this is not required, but it will allow you to configure the plot outside
    pandas and change its configurations later. This same behavior can be applied
    to the other kinds of graphs. Let's now work with scatter plots.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用的是来自 pandas 的绘图函数，但将我们通过 Matplotlib 创建的轴直接作为参数传递给这些函数。如前一章所述，虽然这不是必需的，但它可以让你在
    pandas 之外配置图形，并在之后更改其配置。这种行为也适用于其他类型的图形。现在让我们来处理散点图。
- en: Scatter Plots
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 散点图
- en: To understand the correlation between two variables, scatter plots are generally
    used because they allow the distribution of points to be seen. Creating a scatter
    plot with Matplotlib is similar to creating a line plot, but instead of using
    the `plot` method, we use the `scatter` method.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解两个变量之间的相关性，通常使用散点图，因为它们可以让我们看到点的分布。使用 Matplotlib 创建散点图与创建线图类似，但我们使用的是 `scatter`
    方法，而不是 `plot` 方法。
- en: 'Let''s look at an example using the Auto-MPG dataset ([https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/](https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/)):'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个使用 Auto-MPG 数据集的例子（[https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/](https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/)）：
- en: '[PRE19]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](img/C12913_02_11.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C12913_02_11.jpg)'
- en: 'Figure 2.11: Scatter plot using Matplotlib library'
  id: totrans-163
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.11：使用 Matplotlib 库绘制的散点图
- en: 'Note that we called the scatter method directly from the axis. In Matplotlib
    parlance, we added a scatter plot to the axis, `ax`, that belongs to the `fig`
    figure. We can also add more dimensions to the plot, such as the `color` and point
    `size`, easily with Seaborn:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们是直接从轴上调用散点图方法的。在 Matplotlib 的术语中，我们向属于 `fig` 图形的轴 `ax` 添加了一个散点图。我们还可以通过
    Seaborn 很容易地向图中添加更多维度，比如 `color` 和点的 `size`：
- en: '[PRE20]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Figure 2.12: Scatter plot using Seaborn library](img/C12913_02_12.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12：使用 Seaborn 库绘制的散点图](img/C12913_02_12.jpg)'
- en: 'Figure 2.12: Scatter plot using Seaborn library'
  id: totrans-167
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.12：使用 Seaborn 库绘制的散点图
- en: As we can see, scatter plots are quite helpful for understanding the relationship
    between two variables, or even more. We can infer, for example, that there is
    a positive correlation between `horsepower` and `weight`. We can also easily see
    an outlier with the scatter plot, which could be more complicated when working
    with other kinds of graphs. The same principles for grouped data and pandas DataFrames
    that we saw on the line graphs apply here for the scatter plot.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，散点图对于理解两个变量，甚至更多变量之间的关系非常有帮助。我们可以推断出，例如，`horsepower`（马力）和 `weight`（重量）之间存在正相关。通过散点图，我们还可以轻松地看到一个异常值，而使用其他类型的图形时，可能会更复杂。我们在折线图中看到的关于分组数据和
    pandas DataFrame 的相同原则也适用于散点图。
- en: 'We can generate a scatter plot directly from pandas using the `kind` parameter:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 `kind` 参数直接从 pandas 生成散点图：
- en: '[PRE21]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create a figure and pass it to Pandas:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个图形并将其传递给 Pandas：
- en: '[PRE22]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Activity 5: Understanding Relationships of Variables Using Scatter Plots'
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 5：使用散点图理解变量之间的关系
- en: 'To continue our data analysis and learn how to plot data, let''s look at a
    situation where a scatter plot can help. For example, let''s use a scatter plot
    to answer the following question:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续我们的数据分析并学习如何绘制数据，让我们来看一个散点图可以帮助解答的问题。例如，使用散点图回答以下问题：
- en: Is there a relationship between horsepower and weight?
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 马力与重量之间是否存在关系？
- en: 'To answer this question, we need to create a scatter plot with the data from
    Auto-MPG:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，我们需要使用 Auto-MPG 数据创建一个散点图：
- en: Use the Auto-MPG dataset, already ingested.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用已经导入的 Auto-MPG 数据集。
- en: Note
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Please refer to the previous exercise for how to ingest the dataset.
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请参考前面的练习，了解如何导入数据集。
- en: 'Use the object-oriented API for Matplotlib:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 的面向对象 API：
- en: '[PRE23]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create a scatter plot using the `scatter` method:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `scatter` 方法创建一个散点图：
- en: '[PRE24]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found on page 208.
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此活动的解答可以在第 208 页找到。
- en: We can identify a roughly linear relationship between horsepower and weight,
    with some outliers with higher horsepower and lower weight. This is the kind of
    graph that would help an analyst interpret the data's behavior.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以识别出马力与重量之间的大致线性关系，其中有一些异常值，它们的马力较高但重量较低。这种图形有助于分析师解读数据的行为。
- en: Histograms
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 直方图
- en: Histograms are a bit different from the graphs that we've seen so far, as they
    only try to visualize the distribution of one variable, instead of two or more.
    Histograms have the goal of visualizing the probability distribution of one variable,
    or in other words, counting the number of occurrences of certain values divided
    into fixed intervals, or bins.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图与我们迄今所见的图形稍有不同，因为它们只尝试可视化一个变量的分布，而不是两个或多个。直方图的目标是可视化一个变量的概率分布，换句话说，就是计算某些值在固定区间（或箱子）内出现的次数。
- en: The bins are consecutive and adjacent but don't need to have the same size,
    although this is the most common arrangement.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 区间是连续且相邻的，但不需要具有相同的大小，尽管这种安排最为常见。
- en: The choice of the number of bins and bin size is more dependent on the data
    and the analysis goal than any fixed, general rule. The larger the number of bins,
    the smaller (narrower) the size of each bin, and vice versa. When data has a lot
    of noise or variation, for example, a small number of bins (with a large bin)
    will show the general outline of the data, reducing the impact of the noise in
    a first analysis. A larger number of bins is more useful when the data has a higher
    density.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 区间数和区间大小的选择更多依赖于数据和分析目标，而非任何固定的通用规则。区间数越大，每个区间的大小就越小（更窄），反之亦然。例如，当数据有很多噪声或变化时，少量的区间（较大的区间）可以显示数据的总体轮廓，从而减少噪声在初步分析中的影响。当数据的密度较高时，更多的区间会更有用。
- en: 'Exercise 12: Creating a Histogram of Horsepower Distribution'
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 12：创建马力分布的直方图
- en: 'As we strive to understand the data, we now want to see the horsepower distribution
    over all cars. Analysis questions with an adequate histogram are, for example:
    what is the most frequent value of a variable? Is the distribution centered or
    does it have a tail? Let''s plot a histogram of the horsepower distribution:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们努力理解数据时，现在我们想看看所有汽车的马力分布。具有适当直方图的分析问题包括：一个变量的最频繁值是多少？分布是集中在中间还是有尾巴？让我们绘制一个马力分布的直方图：
- en: 'Import the required libraries into the Jupyter notebook and read the dataset
    from the Auto-MPG dataset repository:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Jupyter笔记本中导入所需的库，并从Auto-MPG数据集仓库读取数据集：
- en: '[PRE25]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Provide the column names to simplify the dataset as illustrated here:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供列名称以简化数据集，如下所示：
- en: '[PRE26]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Now read the new dataset with column names and display it:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在读取带有列名的新数据集并显示它：
- en: '[PRE27]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The plot is as follows:'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图形如下：
- en: '![Figure 2.13: The auto-mpg dataset](img/C12913_02_13.jpg)'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.13：自动mpg数据集](img/C12913_02_13.jpg)'
- en: 'Figure 2.13: The auto-mpg dataset'
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.13：自动mpg数据集
- en: 'Convert the `horsepower` and `year` data types to float and integer using the
    following command:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将`horsepower`（马力）和`year`（年份）数据类型转换为浮动和整数：
- en: '[PRE28]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Create a graph directly from the Pandas DataFrame using the `plot` function
    and `kind=''hist''`:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`plot`函数和`kind='hist'`从Pandas DataFrame直接创建图形：
- en: '[PRE29]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![Figure 2.14: Histogram plot](img/C12913_02_14.jpg)'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.14：直方图图](img/C12913_02_14.jpg)'
- en: 'Figure 2.14: Histogram plot'
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.14：直方图图
- en: 'Identify the `horsepower` concentration:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别`horsepower`（马力）浓度：
- en: '[PRE30]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![Figure 2.15: Histogram concentration plot](img/Image39528.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.15：直方图浓度图](img/Image39528.jpg)'
- en: 'Figure 2.15: Histogram concentration plot'
  id: totrans-211
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.15：直方图浓度图
- en: We can see in this graph that the value distribution is skewed to the left,
    with more cars with horsepower of between `50` and `100` than greater than `200`,
    for example. This could be quite useful in understanding how some data varies
    in an analysis.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从这张图中看到，值的分布偏向左侧，比如在`50`到`100`马力之间的汽车更多，而大于`200`马力的汽车较少。这对于理解一些数据在分析中的变化可能非常有用。
- en: Boxplots
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 箱型图
- en: 'Boxplots are also used to see variations in values, but now within each column.
    We want to see how values compare when grouped by another variable, for example.
    Because of their format, boxplots are sometimes called **whisker plots** or **box**
    and **whisker plots** because of the lines that extend vertically from the main
    box:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 箱型图也用于查看值的变化，但现在是每列内的变化。我们希望看到当按另一个变量分组时，值如何比较。例如，由于它们的格式，箱型图有时被称为**胡须图**或**箱型胡须图**，因为从主框中垂直延伸出的线条：
- en: '![](img/C12913_02_16.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C12913_02_16.jpg)'
- en: 'Figure 2.16: Boxplot'
  id: totrans-216
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.16：箱型图
- en: Source
  id: totrans-217
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 来源
- en: '[https://en.wikipedia.org/wiki/File:Michelsonmorley-boxplot.svg](https://en.wikipedia.org/wiki/File:Michelsonmorley-boxplot.svg)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/File:Michelsonmorley-boxplot.svg](https://en.wikipedia.org/wiki/File:Michelsonmorley-boxplot.svg)'
- en: A boxplot uses quartiles (first and third) to create the boxes and whiskers.
    The line in the middle of the box is the second quartile – the median. The whiskers
    definition can vary, such as using one standard deviation above and below the
    mean of the data, but it's common to use 1.5 times the interquartile range (Q3
    – Q1) from the edges of the box. Anything that passes these values, either above
    or below, is plotted as a `dot` and is usually considered an outlier.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 箱型图使用四分位数（第一和第三四分位数）来创建箱子和须。箱子中的线是第二四分位数——即中位数。须的定义可以有所不同，例如使用数据的平均值上下一个标准差，但通常使用
    1.5 倍的四分位差（Q3 - Q1）从箱子的边缘开始。如果某个值超出这些范围，不论是上方还是下方，都将绘制为一个`点`，通常被认为是异常值。
- en: 'Exercise 13: Analyzing the Behavior of the Number of Cylinders and Horsepower
    Using a Boxplot'
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 13：使用箱型图分析缸数和马力的关系
- en: 'Sometimes we want not only to see the distribution of each variable, but also
    to see the variation of the variable of interest with respect to another attribute.
    We would like to know, for instance, how the horsepower varies given the number
    of cylinders. Let''s create a boxplot with Seaborn, comparing the horsepower distribution
    to the number of cylinders:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们不仅希望看到每个变量的分布，还希望看到所关注的变量相对于另一个属性的变化。例如，我们想知道给定缸数时，马力如何变化。让我们使用 Seaborn
    创建一个箱型图，将马力分布与缸数进行比较：
- en: 'Import the required libraries into the Jupyter notebook and read the dataset
    from the Auto-MPG dataset repository:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 中导入所需的库并从 Auto-MPG 数据集仓库读取数据集：
- en: '[PRE31]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Provide the column names to simplify the dataset, as illustrated here:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供列名以简化数据集，如下所示：
- en: '[PRE32]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now read the new dataset with column names and display it:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在读取带有列名的新数据集并显示它：
- en: '[PRE33]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The plot is as follows:'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图形如下所示：
- en: '![Figure 2.17: The auto-mpg dataset](img/C12913_02_17.jpg)'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.17：auto-mpg 数据集](img/C12913_02_17.jpg)'
- en: 'Figure 2.17: The auto-mpg dataset'
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.17：auto-mpg 数据集
- en: 'Convert the data type of horsepower and year to float and integer using the
    following command:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将马力和年份的数据类型转换为浮动型和整数型：
- en: '[PRE34]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Create a boxplot using the Seaborn `boxplot` function:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Seaborn 的 `boxplot` 函数创建一个箱型图：
- en: '[PRE35]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![Figure 2.18: Boxplot using the Seaborn boxplot function](img/C12913_02_18.jpg)'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.18：使用 Seaborn 箱型图函数](img/C12913_02_18.jpg)'
- en: 'Figure 2.18: Boxplot using the Seaborn boxplot function'
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.18：使用 Seaborn 箱型图函数
- en: 'Now, just for comparison purposes, create the same `boxplot` using pandas directly:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了对比目的，直接使用 pandas 创建相同的`boxplot`：
- en: '[PRE36]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '![Figure 2.19: Boxplot using pandas](img/C12913_02_19.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.19：使用 pandas 的箱型图](img/C12913_02_19.jpg)'
- en: 'Figure 2.19: Boxplot using pandas'
  id: totrans-240
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.19：使用 pandas 的箱型图
- en: On the analysis side, we can see that the variation range from **3** cylinders
    is smaller than for **8** cylinders for horsepower. We can also see that **6**
    and **8** cylinders have outliers in the data. As for the plotting, the Seaborn
    function is more complete, showing different colors automatically for different
    numbers of cylinders, and including the name of the DataFrame columns as labels
    in the graph.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析方面，我们可以看到，**3** 缸的马力变动范围小于 **8** 缸。我们还可以看到，**6** 缸和 **8** 缸的数据显示了异常值。至于绘图，Seaborn
    函数更为完整，自动为不同的缸数显示不同的颜色，并将 DataFrame 列的名称作为标签显示在图表中。
- en: 'Changing Plot Design: Modifying Graph Components'
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改图形设计：修改图形组件
- en: So far, we've looked at the main graphs used in analyzing data, either directly
    or grouped, for comparison and trend visualization. But one thing that we can
    see is that the design of each graph is different from the others, and we don't
    have basic things such as a title and legends.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经查看了用于分析数据的主要图表，无论是直接展示还是按组展示，用于比较和趋势可视化。但我们可以看到的一点是，每个图形的设计都与其他图形不同，我们没有基本的元素，比如标题和图例。
- en: We've learned that a graph is composed of several components, such as a graph
    **title**, **x** and **y** labels, and so on. When using Seaborn, the graphs already
    have **x** and **y** labels, with the names of the columns. With Matplotlib, we
    don't have this. These changes are not only cosmetic.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解到，图形由多个组件组成，例如图形**标题**、**x** 和 **y** 标签等。在使用 Seaborn 时，图形已经有了**x** 和 **y**
    标签，并且列的名称被作为标签显示。而使用 Matplotlib 时，我们没有这些。这样的变化不仅仅是外观上的。
- en: The understanding of a graph can be greatly improved when we adjust things such
    as line width, color, and point size too, besides labels and titles. A graph must
    be able to stand on its own, so title, legends, and units are paramount. How can
    we apply the concepts that we described previously to make good, informative graphs
    on Matplotlib and Seaborn?
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标签和标题外，通过调整线宽、颜色和点大小等因素，我们可以大大改善图形的理解性。一个图形必须能够独立存在，因此标题、图例和单位至关重要。我们如何应用前面描述的概念，在
    Matplotlib 和 Seaborn 中制作出好的、富有信息的图形呢？
- en: The possible number of ways that plots can be configured is enormous. Matplotlib
    is powerful when it comes to configuration, but at the expense of simplicity.
    It can be cumbersome to change some basic parameters in a graph using Matplotlib
    and this is where Seaborn and other libraries can be of help. But in some cases,
    this is desirable, for instance in a custom graph, so having this capacity somewhere
    in the stack is necessary. We will focus on how to change a few basic plot parameters
    in this section.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图的配置方式多种多样，选择极为丰富。Matplotlib 在配置方面功能强大，但也牺牲了简便性。在使用 Matplotlib 更改图形的某些基本参数时可能会显得笨重，而这时
    Seaborn 和其他库可以提供帮助。但在某些情况下，这种方式是值得的，例如在自定义图形时，因此在技术栈中具备此类能力是必要的。我们将在本节中重点讨论如何更改一些基本的绘图参数。
- en: Title and Label Configuration for Axis Objects
  id: totrans-247
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 坐标轴对象的标题和标签配置
- en: As we said before, the object-oriented API for Matplotlib is the one that provides
    greater flexibility. Let's explore how to configure the title and labels on axis
    objects in the following exercise.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Matplotlib 的面向对象 API 提供了更大的灵活性。让我们在接下来的练习中探讨如何配置坐标轴对象的标题和标签。
- en: 'Exercise 14: Configuring a Title and Labels for Axis Objects'
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 14：配置坐标轴对象的标题和标签
- en: 'Perform the following steps to configure a title and labels for the axis objects.
    We will continue from the previous exercise and follow these steps:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以配置标题和坐标轴对象的标签。我们将从上一个练习继续，并按照这些步骤进行操作：
- en: 'Set the `title`, the x-axis label, and the y-axis label by calling the `set`
    method:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过调用 `set` 方法设置 `title`、x 轴标签和 y 轴标签：
- en: '[PRE37]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The plot is as follows:'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 绘图如下：
- en: '![Figure 2.20: Configuring a title and labels](img/C12913_02_20.jpg)'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.20：配置标题和标签](img/C12913_02_20.jpg)'
- en: 'Figure 2.20: Configuring a title and labels'
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.20：配置标题和标签
- en: 'The legends for the plot can be either passed externally, when using only Matplotlib,
    or can be set on the Pandas plot and plotted with the axes. Use the following
    command to plot the legends:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图例可以通过外部传递（仅使用 Matplotlib 时），也可以在 Pandas 绘图时设置，并与坐标轴一起绘制。使用以下命令绘制图例：
- en: '[PRE38]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The plot is as follows:'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 绘图如下：
- en: '![Figure 2.21: Line graph with legends](img/C12913_02_21.jpg)'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.21：带有图例的折线图](img/C12913_02_21.jpg)'
- en: 'Figure 2.21: Line graph with legends'
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.21：带有图例的折线图
- en: 'The alternative method for plotting the legends is as follows:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制图例的替代方法如下：
- en: '[PRE39]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The plot is as follows:'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 绘图如下：
- en: '![Figure 2.22: Line graph with legends (alternate method)](img/C12913_02_22.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.22：带有图例的折线图（替代方法）](img/C12913_02_22.jpg)'
- en: 'Figure 2.22: Line graph with legends (alternate method)'
  id: totrans-265
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.22：带有图例的折线图（替代方法）
- en: Line Styles and Color
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 线条样式和颜色
- en: 'For line graphs, the color, the weight, markers, and the style of the lines
    can be configured with the `ls`, `lw`, `marker`, and `color` parameters:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 对于折线图，可以通过 `ls`、`lw`、`marker` 和 `color` 参数来配置线条的颜色、粗细、标记和样式：
- en: '[PRE40]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![Figure 2.23: Line graph with color and style](img/C12913_02_23.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.23：带有颜色和样式的折线图](img/C12913_02_23.jpg)'
- en: 'Figure 2.23: Line graph with color and style'
  id: totrans-270
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.23：带有颜色和样式的折线图
- en: Figure Size
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图形大小
- en: 'We can also configure the size of the figure. The `figsize` parameter can be
    passed to all plot functions as a tuple (`x`-axis, `y`-axis) with the size in
    inches:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以配置图形的大小。`figsize` 参数可以作为一个元组（`x` 轴，`y` 轴）传递给所有绘图函数，单位为英寸：
- en: '[PRE41]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![Figure 2.24: Plot with bigger figure size](img/C12913_02_24.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.24：更大图形大小的绘图](img/C12913_02_24.jpg)'
- en: 'Figure 2.24: Plot with bigger figure size'
  id: totrans-275
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.24：更大图形大小的绘图
- en: 'Exercise 15: Working with Matplotlib Style Sheets'
  id: totrans-276
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 15：使用 Matplotlib 样式表
- en: 'Matplotlib has some style sheets that define general rules for graphs, such
    as **background** **color**, **ticks**, **graph colors**, and **palettes**. Let''s
    say that we want to change the style so our graph has better colors for printing.
    To accomplish that, follow these steps:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 有一些样式表，定义了图形的一般规则，如**背景** **颜色**、**刻度线**、**图形颜色**和**调色板**。假设我们想更改样式，以便我们的图形在打印时具有更好的颜色。为此，按照以下步骤操作：
- en: 'Let''s first print the list of available styles using the following command:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先使用以下命令打印可用样式列表：
- en: '[PRE42]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The output is as follows:'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE43]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Now, let''s create a scatter plot with the style as `classic`. Make sure you
    import the Matplotlib library first before proceeding:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `classic` 样式创建一个散点图。在继续之前，确保先导入 Matplotlib 库：
- en: '[PRE44]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The output is as follows:'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/Image39625.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image39625.jpg)'
- en: 'Figure 2.25: Scatter plot with the style as classic'
  id: totrans-286
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.25：使用 classic 样式的散点图
- en: Note
  id: totrans-287
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: 'To use a style sheet, use the following command:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用样式表，请使用以下命令：
- en: '`plt.style.use(''presentation'')`'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.style.use(''presentation'')`'
- en: One of the changes that Seaborn makes when it is imported is to add some styles
    to the list of available ones. Styles are also useful when creating images for
    different audiences, such as one for visualization in a notebook and another for
    printing or displaying in a presentation.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 在导入时所做的其中一项更改是将一些样式添加到可用样式列表中。样式在为不同受众创建图像时也非常有用，例如为笔记本中的可视化创建一个样式，为打印或演示创建另一个样式。
- en: Exporting Graphs
  id: totrans-291
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导出图表
- en: 'After generating our visualizations and configuring the details, we can export
    our graphs to a hard copy format, such as PNG, JPEG, or SVG. If we are using the
    interactive API in the notebook, we can just call the `savefig` function over
    the `pyplot` interface, and the last generated graph will be exported to the file:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成可视化并配置好细节后，我们可以将图表导出为硬拷贝格式，如 PNG、JPEG 或 SVG。如果我们在笔记本中使用交互式 API，我们只需在 `pyplot`
    接口上调用 `savefig` 函数，最后生成的图表将被导出到文件：
- en: '[PRE45]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '![Figure 2.26: Exporting the graphs](img/C12913_02_26.jpg)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.26：导出图表](img/C12913_02_26.jpg)'
- en: 'Figure 2.26: Exporting the graphs'
  id: totrans-295
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.26：导出图表
- en: 'All plot configurations will be carried to the `plot`. To export a graph when
    using the object-oriented API, we can call `savefig` from the figure:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的图表配置将传递到 `plot`。要在使用面向对象的 API 时导出图表，我们可以从图形中调用 `savefig`：
- en: '[PRE46]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '![Figure 2.27: Saving the graph](img/C12913_02_27.jpg)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.27：保存图表](img/C12913_02_27.jpg)'
- en: 'Figure 2.27: Saving the graph'
  id: totrans-299
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.27：保存图表
- en: 'We can change some parameters for the saved image:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以更改一些保存图像的参数：
- en: '**dpi**: Adjust the saved image resolution.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**dpi**：调整保存的图像分辨率。'
- en: '**facecolor**: The face color of the figure.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**facecolor**：图形的面颜色。'
- en: '**edgecolor**: The edge color of the figure, around the graph.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**edgecolor**：图形周围的边框颜色。'
- en: '**format**: Usually PNG, PDF, PS, EPS, JPG, or SVG. Inferred from the filename
    extension.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**format**：通常为 PNG、PDF、PS、EPS、JPG 或 SVG。根据文件名扩展名推断。'
- en: 'Seaborn also uses the same underlying Matplotlib mechanism to save figures.
    Call the `savefig` method directly from a Seaborn graph:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 也使用相同的底层 Matplotlib 机制来保存图形。直接从 Seaborn 图表中调用 `savefig` 方法：
- en: '[PRE47]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '![Figure 2.28: Plot using the savefig method](img/C12913_02_28.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.28：使用 savefig 方法绘制图表](img/C12913_02_28.jpg)'
- en: 'Figure 2.28: Plot using the savefig method'
  id: totrans-308
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.28：使用 savefig 方法绘制图表
- en: With these complementary options, the analyst has the capability of generating
    visualizations for different audiences, either in notebooks, on websites, or in
    print.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些补充选项，分析人员可以为不同的受众生成可视化内容，无论是在笔记本中、网站上，还是打印出来。
- en: 'Activity 6: Exporting a Graph to a File on Disk'
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 6：将图表导出到磁盘文件
- en: 'Saving our work to a file is a good way to enable sharing the results in different
    media. It also helps if we want to keep it for future reference. Let''s create
    a graph and save it to disk:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们的工作保存到文件中是一个很好的方法，可以使结果在不同媒介中共享。如果我们想要将其留作未来参考，这也是一个好方法。让我们创建一个图表并保存到磁盘：
- en: Ingest the Auto-MPG dataset.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 Auto-MPG 数据集。
- en: 'Create any kind of graph using the Matplotlib object-oriented API. For example,
    here''s a histogram on weight:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 面向对象的 API 创建任何类型的图表。例如，这里是一个体重的直方图：
- en: '[PRE48]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Export this to a PNG file using the `savefig` function:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `savefig` 函数将其导出为 PNG 文件：
- en: '[PRE49]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Note
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found on page 209.
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本活动的解决方案可以在第 209 页找到。
- en: 'Activity 7: Complete Plot Design'
  id: totrans-319
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 7：完整的图表设计
- en: To make our graphs stand alone, separated from analysis, we need to add more
    information to it, for other analysis or for other users be able to grasp the
    graph content and understand what's being represented. We will now combine all
    of what we've learned in this chapter to create a complete graph, including a
    title, labels, and legends, and adjust the plot size.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让我们的图表独立存在，与分析分离，我们需要在图表中添加更多信息，以便其他分析人员或用户能够理解图表的内容，并明白所表示的内容。我们现在将结合本章所学，创建一个完整的图表，包括标题、标签和图例，并调整图表大小。
- en: As an analyst, we want to understand whether the average miles per year increased
    or not, and we want to group by number of cylinders. For example, what is the
    behavior, in fuel consumption, of a car with three cylinders, over time? Is it
    higher or lower than a car with four cylinders?
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 作为分析师，我们希望了解每年平均每加仑英里数是否增加，并希望按气缸数进行分组。例如，三缸车的燃油消耗随时间变化如何？它的表现是高于还是低于四缸车？
- en: 'Follow these steps to create our final graph:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建我们的最终图表：
- en: Ingest the Auto-MPG dataset.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入Auto-MPG数据集。
- en: Perform the `groupby` operations on `year` and `cylinders`, and unset the option
    to use them as indexes.
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对`year`和`cylinders`进行`groupby`操作，并取消将它们作为索引的选项。
- en: Calculate the average miles per gallon over the grouping and set year as index.
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算分组后的平均每加仑英里数，并将年份设置为索引。
- en: Set year as the DataFrame index.
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将年份设置为数据框的索引。
- en: Create the figure and axes using the object-oriented API.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用面向对象的API创建图形和坐标轴。
- en: Perform the `groupby` operations on the `df_g` dataset by cylinders and plot
    the miles per gallon variable using the axes created with size `(10,8)`.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`df_g`数据集上按气缸数进行`groupby`操作，并使用大小为`(10,8)`的坐标轴绘制每加仑英里数变量。
- en: Set the **title**, **x** label, and **y** label on the axes.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在坐标轴上设置**标题**、**x**轴标签和**y**轴标签。
- en: Include the legends in the plot.
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在图表中包含图例。
- en: Save the figure to disk as a PNG file.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图形保存为PNG文件到磁盘。
- en: Note
  id: totrans-332
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found on page 211.
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个活动的解决方案可以在第211页找到。
- en: We can infer from this graph that cars with four cylinders are more economical
    than cars with eight cylinders. We can also infer that all cars increased fuel
    efficiency during the studied period, with a decrease of four cylinders between
    1980 and 1982.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从这张图表中推断出，四缸车比八缸车更为经济。我们还可以推断出，在研究期间，所有汽车的燃油效率都有所提高，1980到1982年间，四缸车的燃油效率有所下降。
- en: Note
  id: totrans-335
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Notice that with the label axes and legend, the complicated transformation that
    was done using Pandas (group by and averaging, then setting the index) is easy
    to explain in the final result.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，借助标签轴和图例，使用Pandas所做的复杂转换（按组汇总和平均，之后设置索引）在最终结果中变得容易解释。
- en: Summary
  id: totrans-337
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have seen the importance of creating meaningful and interesting
    visualizations when analyzing data. A good data visualization can immensely help
    the analyst's job, representing data in a way that can reach larger audiences
    and explain concepts that could be hard to translate into words or to represent
    with tables.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到，在分析数据时，创建有意义且有趣的可视化图形的重要性。一张好的数据可视化图能够极大地帮助分析师的工作，以一种能够触及更广泛受众的方式呈现数据，并解释那些可能难以用文字表达或用表格展示的概念。
- en: A graph, to be effective as a data visualization tool, must show the data, avoid
    distortions, make understanding large datasets easy, and have a clear purpose,
    such as description or exploration. The main goal of a graph is to communicate
    data, so the analyst must keep that in mind when creating a graph. A useful graph
    is more desirable than a beautiful one.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 一张有效的图表，作为数据可视化工具，必须展示数据，避免失真，使理解大型数据集变得容易，并有明确的目的，比如描述或探索。图表的主要目标是传达数据，因此分析师在创建图表时必须牢记这一点。一张有用的图表比一张美丽的图表更为重要。
- en: 'We demonstrated some kinds of graphs commonly used in analysis: the line graph,
    the scatter plot, the histogram, and the boxplot. Each graph has its purpose and
    application, depending on the data and the goal. We have also shown how to create
    graphs directly from Matplotlib, from pandas, or a combination of both, with Matplotlib''s
    APIs: Pyplot, the interactive API, and the object-oriented API. We finished this
    chapter with an explanation of the options for changing the appearance of a graph,
    from line styles to markers and colors, and how to save a graph to a hard copy
    format for printing or sharing.'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了一些在分析中常用的图表类型：折线图、散点图、直方图和箱形图。每种图表都有其目的和应用，取决于数据和目标。我们还展示了如何直接从Matplotlib、从pandas，或是两者结合使用Matplotlib的API（Pyplot、交互式API和面向对象API）来创建图表。我们以解释如何更改图表外观的选项（从线条样式到标记和颜色），以及如何将图表保存为打印或共享的硬拷贝格式，结束了本章。
- en: There are plenty of ways to configure graphs that we didn't cover here. Visualization
    is a large field and the tools also have a large set of options.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们没有覆盖的还有许多配置图形的方式。可视化是一个庞大的领域，工具也提供了大量的选项。
- en: In the next chapters, we will focus on data processing, including the manipulation
    of large-scale data with Hadoop and Spark. After going through the basics of both
    of those tools, we will return to the analysis process, which will include graphs
    in diverse forms.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将重点讨论数据处理，包括使用 Hadoop 和 Spark 操作大规模数据。在学习这两种工具的基础知识后，我们将回到分析过程，其中将包含各种形式的图表。
