- en: Key Performance Indicators and Visualizations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键绩效指标和可视化
- en: When you run marketing campaigns or any other marketing efforts, you would most
    likely want to know how well each of them performs and understand the weaknesses
    and strengths of each of your marketing efforts. In this chapter, we are going
    to discuss commonly used **key performance indicators** (**KPIs**) that help you
    track the performances of your marketing efforts. More specifically, we will cover
    such KPIs as sales revenue, **cost per acquisition** (**CPA**), digital marketing
    KPIs, and site traffic. We will learn how these KPIs can help you stay on track
    toward your marketing goals.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当你进行营销活动或其他任何营销工作时，你很可能想要了解每个活动的表现如何，并理解每个营销努力的优缺点。在本章中，我们将讨论一些常用的**关键绩效指标**（**KPI**），这些指标帮助你跟踪营销工作表现。更具体地说，我们将涵盖诸如销售收入、**客户获取成本**（**CPA**）、数字营销KPI和网站流量等指标。我们将学习这些KPI如何帮助你朝着营销目标稳步前进。
- en: After discussing some of the commonly used KPIs, we will then learn how we can
    use Python and/or R to compute such KPIs and build visualizations of those KPIs.
    In this chapter, we will use a bank marketing dataset that showcases a real-world
    case of marketing campaigns for finance organizations. For the Python project,
    we will learn how we can use the `pandas` and `matplotlib` libraries to analyze
    data and build visualizations. For the R project, we will introduce the `dplyr`
    and `ggplot2` libraries to analyze and manipulate data and build visualizations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了一些常用的KPI后，我们将学习如何使用 Python 和/或 R 来计算这些KPI并构建它们的可视化。在本章中，我们将使用一个银行营销数据集，展示一个金融组织营销活动的真实案例。对于Python项目，我们将学习如何使用`pandas`和`matplotlib`库来分析数据并构建可视化图表。对于R项目，我们将介绍`dplyr`和`ggplot2`库来分析和处理数据，并创建可视化图表。
- en: 'In particular, we will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 特别地，本章将涵盖以下主题：
- en: KPIs to measure performances of different marketing efforts
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于衡量不同营销活动表现的KPI
- en: Computing and visualizing KPIs using Python
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Python 计算和可视化关键绩效指标（KPI）
- en: Computing and visualizing KPIs using R
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 R 计算和可视化关键绩效指标（KPI）
- en: KPIs to measure performances of different marketing efforts
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于衡量不同营销活动表现的KPI
- en: Every marketing effort costs money to the company. When you run marketing campaigns
    through emails, sending each email costs some money. When you are running marketing
    efforts on social network services or broadcast media, it also requires some capital.
    As every marketing effort is associated with some costs, it is critical to look
    at the performances of marketing campaigns and track the **return on investments**
    (**ROI**) of your marketing campaigns. We will mainly discuss how to track sales
    revenue, CPA, and digital marketing KPIs in this section.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每一项营销努力都需要公司投入资金。当你通过电子邮件进行营销活动时，发送每封邮件都会产生一定的费用。当你在社交网络服务或广播媒体上开展营销活动时，也需要一些资本。由于每项营销活动都涉及一定的成本，因此，检查营销活动的表现并跟踪营销活动的**投资回报率**（**ROI**）是至关重要的。本节我们将主要讨论如何跟踪销售收入、CPA和数字营销KPI。
- en: Sales revenue
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 销售收入
- en: It is clear that the goal of every marketing effort is to generate and grow
    more revenue for the company. No company wants to spend more money on marketing
    than it generates. In order to correctly report the sales revenue, you will need
    to clearly define how you want to attribute sales to each of your marketing efforts.
    Some sales might come from email marketing campaigns, while some others might
    come from advertisements placed on TV or public transportation. Some sales could
    even come naturally, without any attributions to any of your marketing campaigns.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，每个营销努力的目标都是为公司创造和增长更多的收入。没有公司希望在营销上的花费超过其带来的收入。为了准确报告销售收入，你需要清楚地定义如何将销售归因于每一项营销活动。部分销售可能来源于电子邮件营销活动，而另一些可能来自电视或公共交通上的广告。也有可能一些销售是自然发生的，并没有归因于任何营销活动。
- en: In order to correctly report how much sales revenue each of your marketing efforts
    drives, you will have to clearly define the rules to attribute your sales to each
    of your marketing efforts. For example, if you are an ecommerce company and promoting
    special offers through email and TV marketing campaigns, you might want to put
    a different URL in the emails than the URL in your TV commercials. This way, you
    can identify and differentiate those sales from email marketing campaigns from
    those sales from marketing efforts through TV.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确报告每个营销活动所带来的销售收入，你需要明确定义规则，将销售额归因于每个营销活动。例如，如果你是一家电子商务公司，通过电子邮件和电视广告活动进行促销，你可能希望在电子邮件中使用与电视广告中不同的URL。这样，你就可以将通过电子邮件营销活动获得的销售与通过电视营销活动获得的销售区分开来。
- en: 'Depending on your needs, you might also want to report time-series sales revenue
    data. You can report it in a spreadsheet format, such as the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的需求，你可能还希望报告时间序列的销售收入数据。你可以以电子表格的格式报告，如下所示：
- en: '![](img/b625535c-0106-4f31-929a-f002fefc79eb.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b625535c-0106-4f31-929a-f002fefc79eb.png)'
- en: 'You can also report time-series sales revenue data in a line chart, such as
    the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过折线图报告时间序列的销售收入数据，如下所示：
- en: '![](img/747bf180-1b19-4247-8601-dbcf45c6d315.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/747bf180-1b19-4247-8601-dbcf45c6d315.png)'
- en: We will discuss more about the different types of plots and data visualizations
    you can use for reporting KPIs when we work through the Python and R exercises
    toward the end of this chapter.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章末的Python和R练习中讨论更多关于报告KPI时可以使用的不同类型的图表和数据可视化方式。
- en: Cost per acquisition (CPA)
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 每客户获取成本（CPA）
- en: Another way to look at the effectiveness of your marketing efforts is CPA. This
    KPI metric tells you how much it costs you to acquire a customer through your
    marketing efforts. A high CPA means it costs more to acquire a new customer, while
    a low CPA clearly means it costs less to acquire a new customer. Depending on
    the type of business, you can still have a very profitable marketing campaign
    with high CPA. For example, if you are selling a very luxurious and high-end product,
    where the pool of targeted customers is small and it costs more to acquire such
    customers, your CPA might be high, but the value of each customer you acquired
    might be even higher and result in a profitable marketing campaign.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个衡量营销效果的方法是CPA（每客户获取成本）。这个KPI指标告诉你，通过营销活动获取一个客户的成本是多少。高CPA意味着获取新客户的成本较高，而低CPA显然意味着获取新客户的成本较低。根据不同的业务类型，即使CPA较高，你仍然可以拥有一个非常有利可图的营销活动。例如，如果你销售的是非常奢华且高端的产品，目标客户群体较小，获取这些客户的成本较高，那么你的CPA可能较高，但你所获得的每个客户的价值可能更高，从而导致一个有利可图的营销活动。
- en: 'We will take a look at the following hypothetical case:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一下以下这个假设案例：
- en: '![](img/a5badd7a-3ac4-4829-9ea4-eddf96d26b2a.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a5badd7a-3ac4-4829-9ea4-eddf96d26b2a.png)'
- en: If you look at this spreadsheet, **Happy Hour Event** was the most expensive
    marketing event, in terms of both the total cost and CPA. However, it generated
    the most **Sales** and **Sales per Customer**; thus, it was the most valuable
    campaign. On the other hand, **Radio Commercial** was the lowest CPA marketing
    campaign, even though the total cost is the second highest, because it helped
    the business to acquire the most number of customers. However, the total sales
    from these customers did not exceed the total cost of this campaign and introduced
    a net loss to the company.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看这个电子表格，**欢乐时光活动**是最昂贵的营销活动，无论是从总成本还是CPA来看。然而，它产生了最多的**销售额**和**每客户销售额**；因此，它是最有价值的活动。另一方面，**广播广告**的CPA最低，尽管总成本是第二高的，因为它帮助企业获得了最多的客户。然而，这些客户的总销售额并没有超过该活动的总成本，并给公司带来了净亏损。
- en: Even though this is a hypothetical situation, a similar case can happen in real
    life. Marketing efforts, such as **Happy Hour Event** and **Webinar** have better-targeted
    customers than **Radio Commercial**. The quality of customers acquired through
    highly-targeted marketing campaigns is many times better compared to non-targeted
    marketing campaigns.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 即使这是一个假设情境，类似的情况也可能发生在现实生活中。营销活动，比如**欢乐时光活动**和**网络研讨会**，比**广播广告**更能精准地瞄准客户。通过高度精准的营销活动获取的客户质量比通过非精准营销活动获取的客户好得多。
- en: Now that we have seen how we can break down the marketing campaign results to
    analyze the cost-effectiveness in more depth, we will look at some of the commonly
    used KPIs for digital marketing.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到如何分解营销活动结果，以更深入地分析成本效益，我们将看看一些常用的数字营销KPI。
- en: Digital marketing KPIs
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数字营销KPI
- en: As the choices of marketing channels grow into online space, such as on social
    network services, blogs, and search engines, reporting the performances of digital
    marketing efforts has become more and more important. Previously discussed KPIs,
    sales revenue, and cost per acquisition, apply in the digital marketing space
    as well.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 随着营销渠道选择的增加，如社交网络服务、博客和搜索引擎，报告数字营销效果变得越来越重要。之前讨论过的KPI、销售收入和获取成本，同样适用于数字营销领域。
- en: 'As an example, based on individual attribution logic, you can analyze how much
    sales are generated through different social network services, such as Facebook,
    LinkedIn, and Instagram. You can also analyze how many customers are acquired
    through such marketing channels and see what individual digital marketing campaigns''
    CPAs and generated values are. Let''s discuss some more digital marketing KPIs:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个例子，基于单一归因逻辑，你可以分析通过不同社交网络服务（如Facebook、LinkedIn和Instagram）生成了多少销售。你还可以分析通过这些营销渠道获得了多少客户，并查看各个数字营销活动的CPA和所生成的价值。让我们来讨论更多的数字营销KPI：
- en: '**Click-through rate** (**CTR**) is another KPI that is commonly looked at
    for digital marketing efforts. CTR is the percentage of people who viewed your
    advertisement and then went on to click the advertisement. The formula looks as
    follows:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**点击率**（**CTR**）是另一个数字营销中常常关注的KPI。CTR是观看了广告并点击广告的人的百分比。公式如下：'
- en: '![](img/3475a6d1-f101-400a-b723-31b7ac1aed70.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3475a6d1-f101-400a-b723-31b7ac1aed70.png)'
- en: CTR is an important measure in digital marketing channels, as it measures how
    effective your online marketing is in bringing traffic to your website.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 点击率（CTR）是数字营销渠道中的一个重要指标，因为它衡量了你的在线营销在将流量引导到你的网站方面的效果。
- en: Then, you can use **lead ratio** to measure how much of the website traffic
    can be converted into leads. Typically, only a subset of website traffic is a
    good fit to become your customers. These **marketing qualified leads** (**MQL**)
    are the leads that are ready to be marketed to and meet business-specific criteria
    to become customers who are likely to make purchases, based on their characteristics.
    As you start marketing to these qualified leads, you should also look at conversion
    rates.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，你可以使用**潜在客户比率**来衡量有多少网站流量可以转化为潜在客户。通常，只有一部分网站流量适合成为你的客户。这些**营销合格潜在客户**（**MQL**）是那些已经准备好接受营销的潜在客户，符合特定商业标准，有可能成为会购买的客户，基于他们的特征。当你开始对这些合格的潜在客户进行营销时，你也应该关注转化率。
- en: 'The** conversion rate** is the percentage of leads that are converted into
    active customers. You can define what should be considered as conversions, based
    on your marketing goals. If your goal is to see what percentage of leads became
    paying customers, then you can compute the conversion rate somewhat similar to
    the following formula:'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转化率**是将潜在客户转化为活跃客户的百分比。你可以根据你的营销目标来定义什么应当视为转化。如果你的目标是查看有多少潜在客户变成了付费客户，那么你可以按照类似下面的公式计算转化率：'
- en: '![](img/8f945f3a-851b-460b-9b69-ab2086f7b8b6.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8f945f3a-851b-460b-9b69-ab2086f7b8b6.png)'
- en: 'If your goal is to see what percentage of leads signed up on your website,
    then you can compute the conversion rate as in the following formula:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的目标是查看有多少潜在客户在你的网站上注册，那么你可以按照以下公式计算转化率：
- en: '![](img/257bbf18-22d1-4498-9855-90865d946ee9.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/257bbf18-22d1-4498-9855-90865d946ee9.png)'
- en: We have looked at various KPIs so far and discussed how these KPIs can help
    you track the progress and performances of your marketing efforts. We will now
    look at how to use Python and/or R to compute such KPIs and build visualizations.
    If you plan on using one of the two programming languages, Python and R, used
    in this book, you can skip to the section that you'd like to work on.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经查看了各种KPI，并讨论了这些KPI如何帮助你跟踪营销工作的进展和效果。接下来，我们将看看如何使用Python和/或R来计算这些KPI并进行可视化。如果你计划使用本书中介绍的两种编程语言之一，Python或R，你可以跳过并直接进入你想要学习的部分。
- en: Computing and visualizing KPIs using Python
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python计算和可视化KPI
- en: In this section, we are going to discuss how we can use Python to compute and
    visualize the KPIs we have discussed in the previous sections. We will primarily
    focus on analyzing conversion rates using bank marketing data. For those readers
    who would like to use R for this exercise, you can skip to the next section. We
    will be using the `pandas` and `matplotlib` libraries in Python to manipulate
    and analyze data and build various charts to accurately report the progress and
    performances of marketing efforts.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何使用Python计算和可视化我们在前几节中讨论的关键绩效指标（KPI）。我们将主要集中于使用银行营销数据分析转化率。对于那些希望使用R进行本次练习的读者，您可以跳到下一节。我们将使用`pandas`和`matplotlib`库来操作和分析数据，并构建各种图表，以准确报告营销工作的进展和表现。
- en: For the exercise in this section, we are going to use the *UCI's Bank Marketing
    Data Set*, which can be found at this link:[ https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing).
    You can follow this link and download the data by clicking the `Data Folder` link
    in the top-left corner. For this exercise, we downloaded the `bank-additional.zip`
    data and we will use the `bank-additional-full.csv` file in that zipped file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的练习中，我们将使用*UCI的银行营销数据集*，可以通过以下链接找到：[https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing)。您可以访问该链接，并通过点击左上角的`Data
    Folder`链接下载数据。对于本次练习，我们下载了`bank-additional.zip`数据，并将使用其中的`bank-additional-full.csv`文件。
- en: 'When you open this `bank-additional-full.csv` file, you will notice that a
    semi-colon (`;`) is used as a separator, instead of a comma (`,`). In order to
    load this data, you can use the following code to read in this data into a `pandas`
    `DataFrame`:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当您打开这个`bank-additional-full.csv`文件时，您会注意到使用分号（`;`）作为分隔符，而不是逗号（`,`）。为了加载这些数据，您可以使用以下代码将数据读取到`pandas`的`DataFrame`中：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see from this code, we are importing the `pandas` library with the
    alias, `pd`, and we are using the `read_csv` function to load the data. For separators
    other than commas, you can define a custom separator with the `sep` argument within
    the `read_csv` function.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在这段代码中看到的，我们导入了`pandas`库，并使用别名`pd`，我们还使用`read_csv`函数来加载数据。对于除逗号外的其他分隔符，您可以在`read_csv`函数中使用`sep`参数来定义自定义分隔符。
- en: 'If you look at the field description in the data download page ([https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing)),
    the output variable, `y`, which has information on whether a client has subscribed
    to a term deposit, is encoded as `''yes''` or `''no''`. In order to simplify our
    conversion rate computations, we will encode this variable as `1` for `''yes''`
    and `0` for `''no''`. You can use the following code for this encoding:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看数据下载页面中的字段描述（[https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing)），您会发现输出变量`y`（它包含客户是否订阅定期存款的信息）被编码为`'yes'`或`'no'`。为了简化我们的转化率计算，我们将把该变量编码为`'yes'`对应`1`，`'no'`对应`0`。您可以使用以下代码进行编码：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As you can see from this code snippet, we are using the `apply` function to
    encode `''yes''` as `1` and `''no''` as `0` for the variable, `y`, and then adding
    this encoded data as a new column, `conversion`. The code and the loaded data
    in our Jupyter Notebook will look like the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在这段代码中看到的，我们使用`apply`函数将变量`y`中的`'yes'`编码为`1`，将`'no'`编码为`0`，然后将这些编码后的数据作为新列`conversion`添加进去。代码和我们在Jupyter
    Notebook中加载的数据如下所示：
- en: '![](img/b122168c-72eb-431e-91af-644d51aad7e6.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b122168c-72eb-431e-91af-644d51aad7e6.png)'
- en: Now that we have successfully read the data into a `pandas` `DataFrame`, we
    will start looking at how to analyze and visualize conversion rates, using various
    methods and plots.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经成功将数据读取到`pandas`的`DataFrame`中，我们将开始查看如何使用各种方法和图表来分析和可视化转化率。
- en: Aggregate conversion rate
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚合转化率
- en: First, we are going to look at the aggregate conversion rate. We can calculate
    this metric by dividing the total number of clients subscribed to a term deposit
    by the total number of clients in the data. Since we have already encoded the
    output variable as `1` for those who have converted and `0` for those who have
    not, in a column named `conversion`, we can simply sum over this column to get
    the total number of conversions.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将查看聚合转化率。我们可以通过将订阅定期存款的客户总数除以数据中客户的总数来计算这个指标。由于我们已经将输出变量编码为`1`（表示已转化）和`0`（表示未转化），并将其存储在名为`conversion`的列中，我们可以简单地对这一列求和来获得转化的总数。
- en: 'The following code snippet shows how we can sum over the `conversion` column
    and get the total number of clients in the data:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段展示了我们如何对`conversion`列进行求和，并获得数据中客户的总数：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following is what our code for conversion rate calculations in the Jupyter
    Notebook look like:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们在Jupyter Notebook中进行转化率计算的代码：
- en: '![](img/5b8cd4a4-f2ef-42d8-b18c-a3596a1d6930.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b8cd4a4-f2ef-42d8-b18c-a3596a1d6930.png)'
- en: As you can see from this code output in the Jupyter Notebook, we have `4640`
    converted clients out of a total of `41188` bank clients, which suggests the aggregate
    conversion rate is `11.27%`. In the following section, we are going to analyze
    how these conversion rates vary by different age groups.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在Jupyter Notebook中的代码输出结果中，我们从总计`41188`名银行客户中转换了`4640`名客户，这表明总体转化率为`11.27%`。在接下来的部分，我们将分析这些转化率如何根据不同年龄组的变化。
- en: Conversion rates by age
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按年龄的转化率
- en: Aggregate conversion rate tells us the overall performance of our marketing
    campaign. However, it does not give us that much insight. When we are reporting
    and tracking the progress of marketing efforts, we typically would want to dive
    deeper into the data and break down the customer base into multiple segments and
    compute KPIs for individual segments. We will first break our data into smaller
    segments by `age` and see how the conversion rates differ by different age groups.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 总体转化率告诉我们营销活动的整体表现。然而，它并没有给我们太多的洞察。当我们报告并跟踪营销进展时，通常需要深入分析数据，将客户群体细分为多个部分，并计算每个部分的关键绩效指标（KPI）。我们将首先按`age`将数据划分为更小的细分，并查看不同年龄组的转化率差异。
- en: 'We will look at the following code first:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先来看以下代码：
- en: '[PRE3]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you can see from this code, we are using the `groupby` function to calculate
    conversion rates by each age.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在这段代码中，我们使用了`groupby`函数按年龄计算转化率。
- en: We first group by a variable name, `age`, and sum over the `conversion` column,
    using the `sum` function, to get the total number of conversions by each age.
    Then, we group by `age` again and count the number of records in each `age` group
    by using the `count` function.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先根据变量名`age`进行分组，并使用`sum`函数对`conversion`列进行求和，以获得每个年龄段的总转化数。然后，我们再次按`age`进行分组，使用`count`函数统计每个年龄段记录的数量。
- en: 'Using these two computations, we can calculate the conversion rates for each
    `age`, as shown in the code. A part of the calculated conversion rates for each
    `age` looks as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两项计算，我们可以按`age`计算每个年龄段的转化率，如代码所示。以下是每个`age`的部分转化率计算结果：
- en: '![](img/3101f3f1-1c3d-4036-bb46-3c3719a4122a.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3101f3f1-1c3d-4036-bb46-3c3719a4122a.png)'
- en: 'Another way to look at conversion rates across client ages is by plotting a
    line chart, as shown in the following screenshot:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种查看不同客户年龄段转化率的方法是通过绘制折线图，如下图所示：
- en: '![](img/fd275a9a-750e-40d7-a624-3e0b95d3a0dd.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd275a9a-750e-40d7-a624-3e0b95d3a0dd.png)'
- en: 'The code to visualize conversion rates across different ages looks as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 用于可视化不同年龄段转化率的代码如下所示：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As this code shows, we are using the `conversions_by_age` variable that we built
    previously and the `plot` function for a line chart. As you can see from this
    code, you can change the size of a figure by an argument, named `figsize`, and
    the title of the chart with an argument, named `title`. In order to change the
    labels of the *x*-axis and *y*-axis, you can use the `set_xlabel` and `set_ylabel`
    functions.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如代码所示，我们使用了之前构建的`conversions_by_age`变量和`plot`函数来绘制折线图。如你从代码中看到的那样，可以通过名为`figsize`的参数改变图形的大小，通过名为`title`的参数改变图表的标题。为了更改*X*轴和*Y*轴的标签，可以使用`set_xlabel`和`set_ylabel`函数。
- en: One thing that is noticeable in the previous line chart is the fact that there
    seems to be lots of noise in old age groups. Conversion rates for those who are
    `70` or older vary a lot and if you look at the data, this is mostly because the
    number of clients in this age group is relatively small, compared to other age
    groups.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的折线图中，有一点值得注意的是，老年组的数据显示似乎有很多噪音。对于`70`岁或以上的人群，转化率波动较大，如果你查看数据，会发现这主要是因为这个年龄组的客户数量相对较少，和其他年龄组相比差距较大。
- en: 'In order to reduce this unwanted noise, we can group multiple ages together.
    In this exercise, we group bank clients into six different groups, based on their
    age—between `18` and `30`, between `30` and `40`, between `40` and `50`, between
    `50` and `60`, between `60` and `70`, and `70` and older. The following code can
    be used to group the clients into their corresponding groups:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少这种不必要的噪音，我们可以将多个年龄组合并。在本练习中，我们将银行客户根据年龄分为六个不同的组——`18`到`30`岁，`30`到`40`岁，`40`到`50`岁，`50`到`60`岁，`60`到`70`岁，以及`70`岁及以上。可以使用以下代码将客户分组：
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you look at this code, we are using the `apply` function on the column,
    `age`, to group clients into six different age groups and add this data to a new
    column, named `age_group`. In order to calculate the conversion rates for these
    newly created age groups, we can use the following code:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看这段代码，我们正在对`age`列应用`apply`函数，将客户分为六个不同的年龄组，并将这些数据添加到一个名为`age_group`的新列中。为了计算这些新创建的年龄组的转化率，我们可以使用以下代码：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Similar to the previous case, we are using the `groupby`, `sum`, and `count`
    functions to calculate conversion rates for these six different age groups. The
    resulting data looks like the following screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的情况类似，我们使用`groupby`、`sum`和`count`函数来计算这六个不同年龄组的转化率。结果数据如下所示：
- en: '![](img/c87019e0-eeb8-4d7b-ae77-3e2cf41f8573.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c87019e0-eeb8-4d7b-ae77-3e2cf41f8573.png)'
- en: 'As you can see from this, the variations by each age group are much smaller
    than before, especially in old age groups. We can visualize this data using a
    bar plot, as shown in the following screenshot:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个结果可以看出，各年龄组之间的差异比之前要小得多，尤其是在老年组。我们可以使用条形图来可视化这些数据，如下所示的屏幕截图所示：
- en: '![](img/6400ebaa-c9a5-430f-9512-3e4c1f509fe0.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6400ebaa-c9a5-430f-9512-3e4c1f509fe0.png)'
- en: 'The code to build this bar plot looks like the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 构建此条形图的代码如下所示：
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see from this code, we are using the same `plot` function that we
    used before to build a line plot. The only difference is the `kind` argument,
    with which we can define different types of plots we would like to build. Here,
    we are giving a value of `bar` to this `kind` argument to build a bar plot.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你从这段代码中看到的，我们使用了之前用来绘制线形图的相同`plot`函数。唯一的区别是`kind`参数，通过它我们可以定义想要绘制的不同类型的图形。在这里，我们将`kind`参数的值设置为`bar`，以绘制条形图。
- en: You can find the full code in the following repository: [https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下仓库中找到完整的代码：[https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb)。
- en: Conversions versus non-conversions
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转化与未转化
- en: One other thing we can look at is the demographic differences between the converted
    clients and non-converted clients. This type of analysis can help us identify
    what differentiates converted groups from non-converted groups in our marketing
    campaigns and help us understand our target clients better and what types of customers
    respond better to our marketing efforts. In this exercise, we will compare the
    distributions of the marital status among the conversions and non-conversions
    groups.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个我们可以观察的方面是已转化客户与未转化客户之间的人口统计差异。这种分析可以帮助我们识别在营销活动中，已转化组与未转化组之间的区别，帮助我们更好地了解目标客户以及哪些类型的客户更容易响应我们的营销活动。在本练习中，我们将比较已转化组与未转化组之间婚姻状况的分布。
- en: 'We will first count the number of conversions and non-conversions for each
    marital status. The following code shows how we can compute this using `pandas`
    functions:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先计算每个婚姻状况的转化和未转化的数量。以下代码展示了如何使用`pandas`函数来计算这一点：
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As you can see from this code, we are using the `pivot_table` function in the `pandas`
    library. We are grouping by the columns, `marital` and `conversion`, where `marital`
    will become the index and `conversion` will become the column of the new `DataFrame`.
    With the `aggfunc` argument, we can supply the type of aggregation we want to
    perform. Here, we are using the `len` function to simply count the number of clients
    for each group. The resulting data looks like the following screenshot:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码中可以看出，我们正在使用`pandas`库中的`pivot_table`函数。我们根据`marital`和`conversion`列进行分组，其中`marital`将成为新`DataFrame`的索引，`conversion`将成为列。通过`aggfunc`参数，我们可以指定要执行的聚合类型。在这里，我们使用`len`函数简单地计算每个组的客户数量。生成的数据如下所示：
- en: '![](img/5a85b170-769b-4e0b-af04-85822cbe4e16.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5a85b170-769b-4e0b-af04-85822cbe4e16.png)'
- en: 'Another way to represent this data is by using pie charts, as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种表示这些数据的方式是使用饼图，如下所示：
- en: '![](img/0b8ac645-7b7f-403a-8b37-8d4132cfe650.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b8ac645-7b7f-403a-8b37-8d4132cfe650.png)'
- en: 'The following code shows how we can build these pie charts:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了我们如何构建这些饼图：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As you can see from this code, we are using the same `plot` function as before,
    but using `pie` as the kind of plot that we would like to build. You can use the `autopct`
    argument to format the label for each group in the pie charts.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码中可以看出，我们使用了与之前相同的`plot`函数，但使用`pie`作为我们希望构建的图表类型。你可以使用`autopct`参数来格式化饼图中每个群体的标签。
- en: Compared to the tabular format of the data output, pie charts make it much easier
    to understand the overall distributions of the data. With pie charts, we can easily
    see that the `married` group takes up the largest proportions in both conversions
    and non-conversions groups, while the `single` group comes as the second. Using
    pie charts, we can easily visualize the similarities and differences between two
    groups.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 与数据输出的表格格式相比，饼图使得理解数据的整体分布变得更加容易。通过饼图，我们可以轻松看到`married`群体在转化组和非转化组中占据最大的比例，而`single`群体则排在第二。使用饼图，我们可以轻松地可视化两个群体之间的相似性和差异。
- en: Conversions by age and marital status
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按年龄和婚姻状况的转化
- en: So far, we have aggregated our data by one criterion. However, there are cases
    where you want to group the data by more than one column. In this section, we
    will discuss how we can analyze and report conversion rates by more than one criterion.
    As an exercise, we will use age groups that we have built in the previous section
    and the marital status as the two columns to group by.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经根据一个标准对数据进行了汇总。然而，有时你可能希望根据多个列来对数据进行分组。在本节中，我们将讨论如何根据多个标准分析和报告转化率。作为一个练习，我们将使用前一节中构建的年龄组和婚姻状况作为两个列进行分组。
- en: 'Let''s first look at the code:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看看代码：
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'As you can see from this code, we are grouping our data by the two columns,
    `age_group` and `marital`, and summing the number of conversions. Then, we divide
    this by the total number of clients in each group. The resulting data looks like
    the following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码中可以看出，我们正在根据两个列`age_group`和`marital`对数据进行分组，并求出转化的数量。然后，我们将这个数量除以每个群体中的客户总数。生成的数据如下所示：
- en: '![](img/a834d935-1164-4371-abb1-533264c4e68b.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a834d935-1164-4371-abb1-533264c4e68b.png)'
- en: 'As you can see from this data, we can now see the distribution of conversion
    rates based on two criteria, age group and martial status. For example, the conversion
    rate of clients who are single and between **18** and **30** years old is 13.25%,
    while the conversion rate of clients who are married and between **60** and **70**
    years old is 30.11%. Another way to visualize this data is to use a bar plot that
    looks like the following:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从这些数据中看到的，我们现在可以根据两个标准（年龄组和婚姻状况）看到转化率的分布。例如，单身且年龄在**18**到**30**岁之间的客户转化率为13.25%，而已婚且年龄在**60**到**70**岁之间的客户转化率为30.11%。另一种可视化这些数据的方式是使用如下所示的条形图：
- en: '![](img/a7a55ab6-0b06-46af-a335-3b8770e229a3.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a7a55ab6-0b06-46af-a335-3b8770e229a3.png)'
- en: 'In this bar chart, we can easily see the distributions of conversion rates
    for each of the age and marital status groups. The code we used to build this
    bar plot looks is shown here:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这张条形图中，我们可以清楚地看到每个年龄和婚姻状态群体的转化率分布。我们用来构建这张条形图的代码如下所示：
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Similar to previous cases, we are using the `plot` function of the `pandas`
    library and passing `bar` to the `kind` argument of the function. Since the `DataFrame`,
    `age_marital_df`, has four columns for each of the marital statuses and is indexed
    by age groups, the `plot` function builds a bar plot with four bars for each of
    the marital statuses for each of the age groups.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的情况类似，我们使用了`pandas`库的`plot`函数，并将`bar`传递给该函数的`kind`参数。由于`DataFrame`对象`age_marital_df`对于每种婚姻状态有四列，并且按年龄组进行索引，因此`plot`函数为每个年龄组的每种婚姻状态构建了一个包含四个条形的条形图。
- en: 'If you would like to stack those four bars for each age group, then you can
    use the following code for a stacked bar plot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要将每个年龄组的四个条形图叠加起来，您可以使用以下代码绘制堆叠条形图：
- en: '[PRE12]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As you can see from this code, the only difference is the argument, `stacked`,
    that we used in this code. When this argument is set to `True`, it will build
    a stacked bar plot, which looks like the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在这段代码中看到的，唯一的区别是我们在代码中使用的参数`stacked`。当此参数设置为`True`时，它将构建一个堆叠条形图，效果如下：
- en: '![](img/2634f436-965d-41af-bfd5-d27600fcc768.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2634f436-965d-41af-bfd5-d27600fcc768.png)'
- en: As you can see from this stacked bar plot, different marital statuses are stacked
    on top of each other for each of the age groups. This way, we can not only easily
    see the overall trends in conversion rates across different age groups, but also
    the proportions of converted clients with different marital statuses for each
    age group.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个堆叠条形图中可以看到，不同的婚姻状态在每个年龄组中被叠加在一起。通过这种方式，我们不仅可以轻松看到不同年龄组的转化率的整体趋势，还可以看到每个年龄组中不同婚姻状态的转化客户的比例。
- en: The full code and Jupyter Notebook that we used for this Python exercise can
    be found in the following repository: [https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在此Python练习中使用的完整代码和Jupyter Notebook可以在以下仓库中找到：[https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/python/ConversionRate.ipynb)。
- en: Computing and visualizing KPIs using R
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用R计算和可视化KPI
- en: In this section, we are going to discuss how we can use R to compute and visualize
    the KPIs we have discussed in the previous sections. We will primarily focus on
    analyzing conversion rates using bank marketing data. For those readers, who would
    like to use Python for this exercise, you can find the Python exercise in the
    previous section. We will be using the `dplyr` and `ggplot2` libraries in R to
    manipulate and analyze data and build various charts to accurately report the
    progress and performances of marketing efforts. The `dplyr` library provides various
    functionalities for data manipulation for data science and machine learning tasks.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何使用R计算和可视化我们在前几节中讨论的KPI。我们将主要专注于使用银行营销数据分析转化率。对于那些希望使用Python进行此练习的读者，您可以在前一节中找到Python的练习代码。我们将使用R中的`dplyr`和`ggplot2`库来处理和分析数据，并构建各种图表，以准确报告营销工作中的进展和效果。`dplyr`库提供了多种用于数据科学和机器学习任务的数据处理功能。
- en: For the exercise in this section, we are going to use the **UCI**'s **Bank Marketing
    Data Set**, which can be found at this link: [https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing).
    You can follow this link and download the data by clicking the `Data Folder` link
    in the top-left corner. For this exercise, we downloaded the `bank-additional.zip` data
    and we will use the `bank-additional-full.csv` file in that zipped file.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 本节练习中，我们将使用**UCI**的**银行营销数据集**，可以通过以下链接找到：[https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing)。您可以点击此链接，在左上角点击`Data
    Folder`链接下载数据。为了进行此练习，我们下载了`bank-additional.zip`数据，并将在该压缩文件中的`bank-additional-full.csv`文件中使用数据。
- en: 'When you open this `bank-additional-full.csv` file, you will notice that a
    semi-colon (`;`) is used as a separator, instead of a comma (`,`). In order to
    load this data, you can use the following code to read in this data into a `DataFrame`:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当您打开这个`bank-additional-full.csv`文件时，您会注意到文件中使用分号（`;`）作为分隔符，而不是逗号（`,`）。为了加载此数据，您可以使用以下代码将数据读取到一个`DataFrame`中：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: As you can see from this code, we are using the `read.csv` function to load
    the data. For separators other than commas, you can define a custom separator
    with the `sep` argument within the `read.csv` function. If your data file contains
    a row for the header, you can set the argument, `header`, to `TRUE`. On the other
    hand, if your data file does not contain a row for the header and the data starts
    from the first row, you can set it to `FALSE`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码中可以看出，我们使用`read.csv`函数来加载数据。对于逗号以外的分隔符，你可以在`read.csv`函数中通过`sep`参数定义自定义分隔符。如果你的数据文件包含标题行，你可以将`header`参数设置为`TRUE`。另一方面，如果数据文件没有标题行，并且数据从第一行开始，你可以将其设置为`FALSE`。
- en: 'If you look at the field description in the data download page ([https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing)),
    the output variable, `y`, which has information on whether a client has subscribed
    to a term deposit, is encoded as `''yes''` or `''no''`. In order to simplify our
    conversion rate computations, we will encode this variable as `1` for `''yes''`
    and `0` for `''no''`. You can use the following code for this encoding:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看数据下载页面中的字段描述（[https://archive.ics.uci.edu/ml/datasets/bank+marketing](https://archive.ics.uci.edu/ml/datasets/bank+marketing)），输出变量`y`表示客户是否订阅了定期存款，其信息编码为`'yes'`或`'no'`。为了简化我们的转化率计算，我们将该变量编码为`'yes'`对应`1`，`'no'`对应`0`。你可以使用以下代码来进行编码：
- en: '[PRE14]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As you can see from this code snippet, we are using the `as.integer` function
    to encode `''yes''` as `1` and `''no''` as `0` for the variable, `y`, and then
    adding this encoded data as a new column, `conversion`. Since the `as.integer`
    function will use `1` and `2` for `''no''` and `''yes''` encodings by default,
    we are subtracting the values by `1`. The data now looks like the following in
    our RStudio:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码片段可以看出，我们使用了`as.integer`函数将`'yes'`编码为`1`，将`'no'`编码为`0`，并将这个编码后的数据作为新列`conversion`添加到数据中。由于`as.integer`函数默认会将`'no'`和`'yes'`分别编码为`1`和`2`，所以我们将其值减去`1`。现在，数据在RStudio中的显示情况如下：
- en: '![](img/d9e71c7f-eaba-4b63-8567-0aecc6b1a58b.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d9e71c7f-eaba-4b63-8567-0aecc6b1a58b.png)'
- en: Now that we have successfully read the data into an `R` `DataFrame`, we will
    start looking at how to analyze and visualize conversion rates, using various
    methods and plots.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经成功将数据读取到`R`的`DataFrame`中，接下来我们将开始探索如何分析和可视化转化率，使用不同的方法和图表。
- en: Aggregate conversion rate
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总体转化率
- en: 'First, we are going to look at is the aggregate conversion rate. We can calculate
    this metric by dividing the total number of clients subscribed to a term deposit
    by the total number of clients in the data. Since we have already encoded the
    output variable as 1 for those who have converted and 0 for those who have not
    in a column, named `conversion`, we can simply sum over this column to get the
    total number of conversions. The following code snippet shows how we can sum over
    the `conversion` column and get the total number of clients in the data:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们要查看的是总体转化率。我们可以通过将订阅了定期存款的客户数量除以数据中总客户数量来计算这个指标。由于我们已经将输出变量编码为1（表示已转化）和0（表示未转化），并将其存储在名为`conversion`的列中，我们可以简单地对该列求和，得到转化的总客户数量。以下代码片段展示了我们如何对`conversion`列求和并得到数据中的总客户数：
- en: '[PRE15]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: As you can see from this code snippet, we are using the `sum` function in R
    to calculate the total number of conversions and the `nrow` function to count
    the number of rows in our dataset. On a side note, as with `nrow`, you can use
    the `ncol` function to count the number of columns of a `DataFrame`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码中可以看出，我们使用了R中的`sum`函数来计算总的转化数量，并使用`nrow`函数来统计数据集中行的数量。顺便提一句，和`nrow`类似，你可以使用`ncol`函数来统计`DataFrame`的列数。
- en: 'The following screenshot shows what the code looks like on our RStudio:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了我们在RStudio中的代码显示情况：
- en: '![](img/5b064e7d-c589-41fa-9129-bac465e2a0d6.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b064e7d-c589-41fa-9129-bac465e2a0d6.png)'
- en: As you can see from this code output in the RStudio, we have `4640` converted
    clients out of a total of `41188` bank clients, which suggests the aggregate conversion
    rate is `11.27%`. In the following section, we are going to analyze how these
    conversion rates vary by different age groups. We are using the `sprintf` function
    to format a string with integers and floating point numbers.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 从RStudio中的代码输出可以看出，我们在`41188`个银行客户中，共有`4640`个客户进行了转化，这表明总体转化率为`11.27%`。在接下来的部分，我们将分析不同年龄组的转化率差异。我们使用了`sprintf`函数来格式化包含整数和浮点数的字符串。
- en: Conversion rates by age
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按年龄分组的转化率
- en: Aggregate conversion rate tells us the overall performance of our marketing
    campaign. However, it does not give us that much insight. When we are reporting
    and tracking the progress of marketing efforts, we typically would want to dive
    deeper into the data and break down the customer base into multiple segments and
    compute KPIs for individual segments. We will first break our data into smaller
    segments by age and see how the conversion rates differ by different age groups.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合转化率告诉我们营销活动的整体表现。然而，它并没有给我们太多的洞察。在报告和跟踪营销进展时，我们通常希望更深入地分析数据，将客户基础拆分为多个细分市场，并计算各个细分市场的KPI。我们将首先按年龄将数据拆分成更小的段，并查看不同年龄组的转化率差异。
- en: 'We will look at the following code first:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先来看以下这段代码：
- en: '[PRE16]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The pipe operator, `%>%`, in this code, is the way you can apply different functions
    sequentially. In this code snippet, we are passing `conversionDF` to a `group_by`
    function, then passing the results of this `group_by` function to the `summarise`
    function, and lastly to the `mutate` function.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码中的管道操作符`%>%`是你可以按顺序应用不同函数的方式。在这段代码中，我们将`conversionDF`传递给`group_by`函数，然后将`group_by`函数的结果传递给`summarise`函数，最后传递给`mutate`函数。
- en: In the `group_by` function, we are grouping the `DataFrame` by the column `age`.
    Then, for each age group, we are counting the number of records in each group,
    by using a function, `n()`, and naming it `TotalCount`. Also, we are summing over
    the column, `conversion`, for each age group, by using the `sum` function, and
    naming it `NumConversions`.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在`group_by`函数中，我们通过`age`列对`DataFrame`进行分组。然后，针对每个年龄组，我们使用函数`n()`计算每组的记录数，并将其命名为`TotalCount`。同时，我们使用`sum`函数对每个年龄组的`conversion`列求和，并将其命名为`NumConversions`。
- en: Lastly, we are using the `mutate` function, which adds new variables, while
    preserving the original `DataFrame`, to compute conversion rates for each age
    group. As you can see, we are simply dividing `NumConversion` by `TotalCount`
    and multiplying it by `100.0` to get the conversion rates.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用`mutate`函数，该函数添加新的变量，同时保留原始的`DataFrame`，来计算每个年龄组的转化率。如你所见，我们只是将`NumConversion`除以`TotalCount`，然后乘以`100.0`来获得转化率。
- en: 'The resulting data is shown in the following screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 结果数据如下所示：
- en: '![](img/ebdf5a19-e660-43bb-8d27-d35b2e8e86da.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ebdf5a19-e660-43bb-8d27-d35b2e8e86da.png)'
- en: 'Another way to look at conversion rates across client ages is by plotting a
    line chart, as shown in the following screenshot:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 查看不同年龄段客户的转化率的另一种方法是绘制折线图，如下图所示：
- en: '![](img/b44831d7-3be8-48fe-b526-910b16b7ee62.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b44831d7-3be8-48fe-b526-910b16b7ee62.png)'
- en: 'The code to visualize conversion rates across different ages is shown here:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 用于可视化不同年龄段转化率的代码如下所示：
- en: '[PRE17]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As you can see from this code, we are using the `ggplot` function to initialize
    a `ggplot` object with `conversionsByAge` as the data and the column, `Age`, as
    the *x*-axis and the column, `ConversionRate`, as the *y*-axis.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码中可以看出，我们使用`ggplot`函数初始化一个`ggplot`对象，数据为`conversionsByAge`，其中`Age`列作为*x*轴，`ConversionRate`列作为*y*轴。
- en: Then, we use `geom_line` function to connect the observations and create a line
    chart. You can change the title of a plot, by using `ggtitle` function. Also,
    you can use `xlab` and `ylab` functions to rename the x-axis label and y-axis
    label respectively.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用`geom_line`函数连接观测值，绘制折线图。你可以使用`ggtitle`函数更改图表标题。此外，你还可以使用`xlab`和`ylab`函数分别重命名x轴和y轴标签。
- en: One thing that is noticeable in the previous line chart is the fact that there
    seems to be lots of noise in older age groups. Conversion rates for those who
    are 70 or older vary a lot and if you look at the data, this is mostly because
    the number of clients in this age group is relatively small, compared to other
    age groups.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一张折线图中，显而易见的一点是，较高年龄组的噪声似乎很多。70岁或以上的转化率变化较大，如果你查看数据，会发现这主要是因为该年龄组的客户数量相对较少，与其他年龄组相比。
- en: 'In order to reduce this unwanted noise, we can group multiple ages together.
    In this exercise, we group bank clients into six different groups, based on their
    age—between `18` and `30`, between `30` and `40`, between `40` and `50`, between
    `50` and `60`, between `60` and `70`, and `70` and older. The following code can
    be used to group the clients into their corresponding groups:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少这种不必要的噪音，我们可以将多个年龄段合并。在本练习中，我们根据银行客户的年龄将其分为六个不同的组——`18`到`30`岁之间、`30`到`40`岁之间、`40`到`50`岁之间、`50`到`60`岁之间、`60`到`70`岁之间、以及`70`岁及以上。以下代码可以用于将客户分组：
- en: '[PRE18]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: As with the previous case, we are using the `group_by` function to group the `conversionsDF`
    data by the `age` column. The difference here is how we used the `cut` function
    to create the age range for each age group.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的情况一样，我们使用了`group_by`函数根据`age`列将`conversionsDF`数据分组。这里的不同之处在于，我们如何使用`cut`函数为每个年龄组创建年龄范围。
- en: The `breaks` argument defines the points at which the `cut` function is going
    to divide the `DataFrame`. The argument, `seq(20, 70, by = 10)`, means we are
    going to create a sequence from `20` to `70` in increments of `10`. Once the data
    is grouped by these age groups, the rest are the same as before. We are using
    the `summarise` and `mutate` functions to compute for the `TotalCount`, `NumConversions`,
    and `ConversionRate` columns.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`breaks`参数定义了`cut`函数将如何划分`DataFrame`。参数`seq(20, 70, by = 10)`表示我们将从`20`到`70`以`10`为增量创建一个序列。一旦数据按这些年龄段分组，其他操作与之前相同。我们使用`summarise`和`mutate`函数来计算`TotalCount`、`NumConversions`和`ConversionRate`列。'
- en: 'The resulting `DataFrame` is shown in the following screenshot:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的`DataFrame`在以下截图中展示：
- en: '![](img/cb4e8d9d-88b5-47ef-ad3e-995d207e832e.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cb4e8d9d-88b5-47ef-ad3e-995d207e832e.png)'
- en: 'As you can see from this, the variations by each age group are much smaller
    than before, especially in old age groups. We can visualize this data using a
    bar plot, as shown here:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 从中可以看出，每个年龄组的差异远小于之前，尤其是在老年组。我们可以通过条形图来可视化这些数据，如下所示：
- en: '![](img/2de62aed-8ebd-4451-9130-c038d4fc8794.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2de62aed-8ebd-4451-9130-c038d4fc8794.png)'
- en: 'The code to build this bar plot is shown here:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 构建此条形图的代码如下所示：
- en: '[PRE19]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As you can see from this code, we are passing the `conversionsByAgeGroup` data
    to the `ggplot` object with the `AgeGroup` column as the *x*-axis and the `ConversionRate`
    column as the *y*-axis. We are using the `geom_bar` function to build a bar plot.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码可以看出，我们将`conversionsByAgeGroup`数据传递给了`ggplot`对象，*x*轴使用了`AgeGroup`列，*y*轴使用了`ConversionRate`列。我们使用了`geom_bar`函数来构建条形图。
- en: The `width` argument defines the width of each bar in the bar plot. Similar
    to the previous line chart, you can use `ggtitle` to rename the title of the plot
    and the `xlab` and `ylab` functions to rename the labels of the *x*-axis and *y*-axis.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`width`参数定义了条形图中每个条形的宽度。与之前的折线图类似，你可以使用`ggtitle`来重新命名图表标题，使用`xlab`和`ylab`函数来重新命名*
    x *轴和* y *轴的标签。'
- en: You can find the full code in the following repository: [https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下仓库中找到完整的代码：[https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R)。
- en: Conversions versus non-conversions
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转化与非转化
- en: One other thing we can look at is the demographic differences between the converted
    clients and non-converted clients. This type of analysis can help us identify
    what differentiates converted groups from non-converted groups in our marketing
    campaigns and helps us understand our target clients better and what types of
    customers respond better to our marketing efforts. In this exercise, we will compare
    the distributions of the marital status among the conversions and non-conversions
    groups.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个我们可以查看的方面是转化客户与非转化客户之间的群体差异。这种类型的分析可以帮助我们识别在市场营销活动中，转化组与非转化组的不同之处，帮助我们更好地理解目标客户，并了解哪些类型的客户对我们的营销活动反应更好。在本练习中，我们将比较转化组与非转化组之间婚姻状况的分布。
- en: 'We will first count the number of conversions and non-conversions for each
    marital status. The following code shows how we can compute this using `R` functions:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先计算每个婚姻状况下的转化和非转化数量。以下代码展示了我们如何使用`R`函数来计算这一点：
- en: '[PRE20]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As you can see from this code, we are using the pipe operator, `%>%`, in the `dplyr`
    package to pass the `DataFrame`, `conversionsDF` to the `group_by` function and
    then to the `summarise` function. In the `group_by` function, we are grouping
    by two columns, `marital` and `conversion`. In the `summarise` function, we are
    simply counting the number of records in each group, by using the `n` function.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码可以看出，我们正在使用`dplyr`包中的管道操作符`%>%`将`DataFrame`，`conversionsDF`传递给`group_by`函数，然后传递给`summarise`函数。在`group_by`函数中，我们按两个列进行分组，`marital`和`conversion`。在`summarise`函数中，我们只是通过使用`n`函数计算每个组中的记录数量。
- en: 'The resulting data is shown in the following screenshot:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 结果数据显示在以下截图中：
- en: '![](img/75f9ff53-7e1f-4509-b02c-e51634534181.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/75f9ff53-7e1f-4509-b02c-e51634534181.png)'
- en: 'Another way to represent this data is by using pie charts:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种表示这些数据的方式是使用饼图：
- en: '![](img/5ecad4e9-16f5-49c0-9297-a45a28411cdd.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ecad4e9-16f5-49c0-9297-a45a28411cdd.png)'
- en: 'The following code shows how we can build these pie charts in R:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了我们如何在R中构建这些饼图：
- en: '[PRE21]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: For building a pie chart in R, we are using the same `geom_bar` function, just
    as if we are building a bar chart. The difference here is `coord_polar("y")`,
    which transforms a bar chart into a pie chart. Then, we are using the `facet_wrap`
    function to create two columns of pie charts by the column, `Conversion`. This
    builds two pie charts, one for the conversions group and another for the non-conversions
    group.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中构建饼图时，我们使用相同的`geom_bar`函数，就像我们在构建柱状图时一样。这里的区别在于`coord_polar("y")`，它将柱状图转换为饼图。接着，我们使用`facet_wrap`函数根据`Conversion`列创建两列饼图。这会生成两个饼图，一个用于转化组，另一个用于非转化组。
- en: Compared to the tabular format of the data output, pie charts make it much easier
    to understand the overall distributions of the data. With pie charts, we can easily
    see that the `married` group takes up the largest proportions in both conversions
    and non-conversions groups, while the `single` group comes second. Using pie charts,
    we can easily visualize the similarities and differences between two groups.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 与数据输出的表格格式相比，饼图更容易理解数据的整体分布。通过饼图，我们可以很容易看到`married`组在转化组和非转化组中都占据了最大的比例，而`single`组位居第二。通过饼图，我们可以轻松地可视化两个组之间的相似性和差异。
- en: Conversions by age and marital status
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按年龄和婚姻状况分组的转化情况
- en: So far, we have aggregated our data by one criterion. However, there are cases
    where you want to group the data by more than one column. In this section, we
    will discuss how we can analyze and report conversion rates by more than one criterion.
    As an exercise, we will use the age groups that we have built in the previous
    section and the marital status as the two columns to group by.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经根据一个标准对数据进行了汇总。然而，有时你可能希望根据多个列来分组数据。在本节中，我们将讨论如何根据多个标准来分析和报告转化率。作为练习，我们将使用上一节中构建的年龄组和婚姻状况作为两个分组标准。
- en: 'Let''s first look at the code:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看一下代码：
- en: '[PRE22]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Similar to when we built custom age groups, we are using the `cut` function
    in `group_by` to create age groups from `20` to `70` in increments of `10`. However,
    we are grouping by the column, `marital`, as well this time.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于我们构建自定义年龄组时，我们在`group_by`中使用`cut`函数，将年龄分组为从`20`到`70`，每10岁一组。然而，这次我们也按`marital`列进行分组。
- en: Then, we are using the `summarise` function to compute the number of records
    in each group `Count`, and the number of conversions in each group, `NumConversions`.
    Then, using the `mutate` function, we calculate the total counts in each age group,
    named `TotalCount`, and the conversion rates in each group, named `ConversionRate`.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用`summarise`函数计算每个组中的记录数量`Count`，以及每个组中的转化次数`NumConversions`。接着，使用`mutate`函数计算每个年龄组的总记录数，命名为`TotalCount`，以及每个组的转化率，命名为`ConversionRate`。
- en: 'The resulting data is shown in the following screenshot:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 结果数据显示在以下截图中：
- en: '![](img/94774145-f1a9-4d75-8967-a246e7766c99.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/94774145-f1a9-4d75-8967-a246e7766c99.png)'
- en: As you can see from this data, we can now see the distribution of conversion
    rates based on two criteria, age group and martial status. For example, the conversion
    rate of clients who are single and between **20** and **30** years old is 11.10%,
    while the conversion rate of clients who are married and between **40** and **50**
    years old is 5.74%.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些数据中可以看出，我们现在可以根据两个标准来查看转化率的分布：年龄组和婚姻状况。例如，单身且年龄在**20**到**30**岁之间的客户转化率为11.10%，而已婚且年龄在**40**到**50**岁之间的客户转化率为5.74%。
- en: 'Another way to visualize this data is to use a bar plot:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种可视化这些数据的方法是使用条形图：
- en: '![](img/617745e6-5fcc-44dc-a6b9-5b8cac7eed42.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/617745e6-5fcc-44dc-a6b9-5b8cac7eed42.png)'
- en: 'In this bar chart, we can easily see the distributions of conversion rates
    for each of the age and marital status groups. The code we used to build this
    bar plot is shown here:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个条形图中，我们可以轻松地看到每个年龄组和婚姻状况组的转化率分布。我们用来构建这个条形图的代码如下：
- en: '[PRE23]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here, we are creating a `ggplot` object with the `conversionsByAgeMarital` data.
    We are using `AgeGroup` for the *x*-axis and `ConversionRate` for the *y*-axis,
    while we are using `Marital` column to use different colors for different types
    of marital status. Then, we are building a bar plot by using the `geom_bar` function.
    With this configuration, `ggplot` builds a bar plot of conversion rates against
    age groups with breakdowns by marital status, which we saw in the previous bar
    chart.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们创建了一个`ggplot`对象，使用了`conversionsByAgeMarital`数据。我们使用`AgeGroup`作为*X*轴，`ConversionRate`作为*Y*轴，同时用`Marital`列为不同的婚姻状况类型指定不同的颜色。接着，我们通过使用`geom_bar`函数来构建条形图。通过这个配置，`ggplot`会构建一个按婚姻状况细分的转化率与年龄组之间的堆积条形图，这一点在之前的条形图中已经展示过了。
- en: 'If you would like to stack those four bars for each age group, then you can
    use the following code for a stacked bar plot:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要为每个年龄组堆叠这四个条形图，可以使用以下代码来绘制堆积条形图：
- en: '[PRE24]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'As you can see from this code, the only difference is the code, `position="stack"`,
    in the `geom_bar` function. If you pass the value, `"dodge"`, to this `position`
    argument of the `geom_bar` function, it will create an unstacked bar plot. Whereas,
    if you pass the value, `"stack"`, to this `position` argument of the `geom_bar`
    function, it will build a stacked bar plot, which looks like the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 从这段代码中可以看出，唯一的不同之处在于`geom_bar`函数中的代码`position="stack"`。如果你将值`"dodge"`传递给`geom_bar`函数的`position`参数，它将创建一个未堆叠的条形图。而如果你将值`"stack"`传递给`geom_bar`函数的`position`参数，它将创建一个堆积条形图，效果如下：
- en: '![](img/2c6297ad-bd1e-4726-87f2-44ddd21d5fcf.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2c6297ad-bd1e-4726-87f2-44ddd21d5fcf.png)'
- en: As you can see from this stacked bar plot, different marital statuses are stacked
    on top of each other for each of the age groups. This way, we can not only easily
    see the overall trends in conversion rates across different age groups, but also
    the proportions of converted clients with different marital statuses for each
    age group.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个堆积条形图中可以看到，不同的婚姻状况在每个年龄组中堆叠在一起。这样，我们不仅可以轻松地看到不同年龄组之间转化率的总体趋势，还可以看到每个年龄组中不同婚姻状况的转化客户比例。
- en: The full code that we used for this R exercise can be found in the following
    repository: [https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R).
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这个R练习中使用的完整代码可以在以下仓库中找到：[https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R](https://github.com/yoonhwang/hands-on-data-science-for-marketing/blob/master/ch.2/R/ConversionRate.R)。
- en: Summary
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have discussed how to use descriptive analysis for reporting
    and analytics on the progress and performances of marketing efforts. We have discussed
    various KPIs that are often used in marketing to track the progress of marketing
    campaigns. We have learned how important it is to look at how much sales revenue
    each marketing strategy generates. When analyzing the sales revenue metrics, we
    have seen that it is important to approach it from different angles. You might
    want to look at not only the aggregate sales revenue, but also time-series (monthly,
    quarterly, or yearly) sales revenue. You might also want to look at sales attributed
    to each individual marketing campaigns and how much revenue each campaign generated
    for your company. We have also discussed CPAmetrics, with which you can tell the
    cost-effectiveness of your marketing strategies. We have learned various metrics
    to analyze for digital marketing channels as well, such as CTR, lead ratio, and
    conversion rates. As we have seen and experimented in the Python and R exercises,
    we can go multiple levels deeper into these KPI metrics.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了如何使用描述性分析来报告和分析营销努力的进展和表现。我们讨论了营销中常用的各种关键绩效指标（KPIs），用以跟踪营销活动的进展。我们了解到，评估每个营销策略产生的销售收入有多么重要。在分析销售收入指标时，我们发现从不同角度进行分析非常关键。你可能不仅想查看总销售收入，还要查看时间序列（按月、季度或年度）的销售收入。你还可能希望查看归因于每个营销活动的销售收入，并分析每个活动为公司带来了多少收入。我们还讨论了CPA指标，通过这些指标你可以评估营销策略的成本效益。我们也学习了用于数字营销渠道的各种指标，比如点击率（CTR）、潜在客户转化率和转化率。正如我们在Python和R练习中所看到和实验的那样，我们可以对这些KPI指标进行更深入的多层次分析。
- en: In the next chapter, we are going to learn how we can apply data science and
    machine learning techniques for explanatory analysis. More specifically, we will
    discuss how we can use regression analysis and models to understand the drivers
    behind marketing engagement. We will also cover how we can interpret the regression
    analysis results in the following chapter.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何应用数据科学和机器学习技术进行解释性分析。更具体地说，我们将讨论如何使用回归分析和模型来理解营销参与背后的驱动因素。我们还将在下一章中讲解如何解读回归分析结果。
