- en: Anaconda Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Anaconda Cloud
- en: 'Nowadays, one of the big buzzwords in computing is *cloud*. The simplest example
    is that for many users, Google Drive is a kind of cloud where users can save their
    files, photos, and programs and share them with their colleagues, family members,
    or others. Another example is so-called cloud computing. According to the National
    Institute of Standards and Technology, cloud computing is a model for enabling
    convenient, on-demand network access to a shared pool of configurable computing
    resources (for example, networks, servers, storage, applications, and services)
    that can be rapidly provisioned and released with minimal management effort or
    service provider interaction. In Old English, *mass of rock, hill*, was related
    to cloud. The *metaphoric extension to raincloud, mass of evaporated water in
    the sky,* was attested by c. 1200, based on the similarity of cumulus clouds and
    rock masses. The usual *Old English* word for cloud was *weolcan.* In Middle English,
    *skie* also originally meant cloud. In this chapter, the following topics will
    be covered:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现如今，计算机领域的一个流行词是*云*。最简单的例子是，对于许多用户来说，Google Drive 就是一种云，用户可以在其中保存文件、照片和程序，并与同事、家人或其他人分享。另一个例子是所谓的云计算。根据美国国家标准与技术研究院的定义，云计算是一种模型，使得用户能够便捷、按需地通过网络访问共享的可配置计算资源池（例如，网络、服务器、存储、应用程序和服务），这些资源能够快速配置和释放，且对管理和服务提供者的交互要求最小。古英语中，*岩石、山丘*与云有关。*比喻意义上的雨云，蒸发水的聚集体*大约在1200年左右就有了，这源于积云和岩石块的相似性。古英语中表示云的常用词是*weolcan*。在中古英语中，*skie*最初也表示云。在本章中，将涉及以下主题：
- en: Introduction to Anaconda Cloud
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda Cloud 介绍
- en: Jupyter Notebook in depth
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入了解 Jupyter Notebook
- en: Replicating others' environments locally
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地复制他人的环境
- en: Downloading a package from Anaconda
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Anaconda 下载一个包
- en: Introduction to Anaconda Cloud
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Anaconda Cloud 介绍
- en: Nowadays, we have used or at least heard of the word cloud. Usually, it means
    that we can save our data on other people's servers. For Anaconda Cloud, users
    can use the platform to save and share packages, notebooks, projects, and environments.
    The process, platform, and the methodology make it much easier for package management
    and collaboration, including sharing of their packages and projects. The public
    projects and notebooks are free. At the moment, private plans start at $7 per
    month. Anaconda Cloud allows users to create or distribute software packages.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现如今，我们已经使用过或至少听说过“云”这个词。通常，它意味着我们可以将数据保存在其他人的服务器上。对于 Anaconda Cloud，用户可以利用这个平台保存和分享包、笔记本、项目和环境。该过程、平台以及方法使得包管理和协作更加便捷，包括共享他们的包和项目。公开项目和笔记本是免费的。目前，私人计划的起价为每月
    7 美元。Anaconda Cloud 允许用户创建或分发软件包。
- en: For a Windows version of Anaconda, click All Programs | Anaconda, and then choose
    Anaconda Cloud.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Windows 版本的 Anaconda，点击“所有程序”|“Anaconda”，然后选择 Anaconda Cloud。
- en: After double-clicking on Cloud, the welcome screen will appear.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 双击 Cloud 后，欢迎屏幕将会出现。
- en: 'Based on the information presented by the welcome screen, we know that we need
    an account with Anaconda before we can use it. After login, we will see the following
    screen:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 根据欢迎屏幕提供的信息，我们知道在使用 Anaconda 之前需要一个账户。登录后，我们将看到以下界面：
- en: '![](img/c2dc6afe-4a30-4e5f-8d9e-e319862238bf.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c2dc6afe-4a30-4e5f-8d9e-e319862238bf.png)'
- en: For example, if you double-click on Installing your first package, you will
    get more information on **Anaconda Cloud**. We do not need to be logged in, or
    even need a cloud account, to search for public packages, download, and install
    them. We need an account only to access private packages without a token or to
    share your packages with others.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你双击“安装你的第一个包”，你将获得更多关于**Anaconda Cloud**的信息。我们无需登录，甚至不需要云账户，就可以搜索、下载和安装公共包。只有在没有令牌的情况下访问私有包或分享包时，我们才需要一个账户。
- en: Jupyter Notebook in depth
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入了解 Jupyter Notebook
- en: 'In this section, many examples are borrowed from the following web page: [https://github.com/ipython/ipython-in-depth](https://github.com/ipython/ipython-in-depth).
    If you are interested, you can explore more by going to the web page in order
    to download a ZIP file. The following screenshot shows the content of examples:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，许多例子来自以下网页：[https://github.com/ipython/ipython-in-depth](https://github.com/ipython/ipython-in-depth)。如果你有兴趣，可以访问该网页并下载
    ZIP 文件。以下截图展示了示例内容：
- en: '![](img/d56f9156-4b65-4449-b6f2-0c45eacbe337.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d56f9156-4b65-4449-b6f2-0c45eacbe337.png)'
- en: 'After launching Jupyter Notebook, we can search the `example` subdirectory.
    For example, we can upload a notebook called `factoring.ipynb` under the `Interactive
    Widgets` subdirectory(see the following screenshot):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Jupyter Notebook 后，我们可以搜索`example`子目录。例如，我们可以上传一个名为`factoring.ipynb`的笔记本，位于`Interactive
    Widgets`子目录下（见下图）：
- en: '![](img/461e8e0d-e1d9-4757-b02e-950e2e931341.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/461e8e0d-e1d9-4757-b02e-950e2e931341.png)'
- en: 'After clicking Run, we can change the value of `n` (see the following result
    when we choose `8` for the variable):'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 点击运行后，我们可以更改`n`的值（当我们选择变量为`8`时，结果如下）：
- en: '![](img/adf6f6c8-2960-4309-9593-d507f645ccaf.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/adf6f6c8-2960-4309-9593-d507f645ccaf.png)'
- en: 'After increasing `n` to `20,` we have the corresponding output:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当`n`增加到`20`时，我们得到了相应的输出：
- en: '![](img/7ac714b8-fc67-4c93-938a-01050c91643e.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ac714b8-fc67-4c93-938a-01050c91643e.png)'
- en: 'Sometimes, after running a Jupyter Notebook and logging out, we need a token
    or password to login again. We can run the following code to locate our token:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，在运行 Jupyter Notebook 并退出登录后，我们需要令牌或密码才能再次登录。我们可以运行以下代码来查找我们的令牌：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Alternatively, we can run the following code to save our token to a text file:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以运行以下代码将令牌保存到文本文件中：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The next example shows how to activate Jupyter QtConsole, that is, how to connect
    to an existing IPython kernel using the QtConsole. Again, the Jupyter Notebook
    is also included in the preceding download. First, we upload the notebook called
    `Connecting with the Qt Console.ipynb`. To save space, only the first several
    lines are shown here:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例展示了如何激活 Jupyter QtConsole，也就是如何使用 QtConsole 连接到现有的 IPython 内核。同样，Jupyter
    Notebook 也包含在前面的下载中。首先，我们上传名为`Connecting with the Qt Console.ipynb`的笔记本。为了节省空间，这里仅显示前几行：
- en: '![](img/29e5a190-d273-4206-8f1d-9b607bd39e57.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/29e5a190-d273-4206-8f1d-9b607bd39e57.png)'
- en: 'After the program runs without any issues, we will see the following window:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 程序运行没有问题后，我们将看到以下窗口：
- en: '![](img/d64e7096-d537-48c8-a571-cfca8564df7b.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d64e7096-d537-48c8-a571-cfca8564df7b.png)'
- en: 'Then, we type our commands here. The **QtConsole** is a lightweight application
    that feels like a Terminal. However, it provides a number of enhancements only
    possible in a GUI, such as inline figures, proper multi-line editing with syntax
    highlighting, and graphical calltips. The QtConsole can use any Jupyter kernel.
    Here is one example:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在此输入命令。**QtConsole**是一个轻量级应用程序，类似于终端。然而，它提供了只有在图形界面中才能实现的许多增强功能，例如内联图形、带语法高亮的多行编辑和图形化的调用提示。QtConsole
    可以使用任何 Jupyter 内核。以下是一个示例：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The associated diagram is shown here:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 相关图示如下：
- en: '![](img/54657814-e72e-4df0-b536-2b12258008ee.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/54657814-e72e-4df0-b536-2b12258008ee.png)'
- en: Formats of Jupyter Notebook
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter Notebook 格式
- en: In this section, we discuss the backbone of issues related to Jupyter Notebook's
    formats.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论与 Jupyter Notebook 格式相关的问题的核心内容。
- en: 'For more information associated with the formats for Jupyter Notebook, you
    will find a useful link here: [https://nbformat.readthedocs.io/en/latest/](https://nbformat.readthedocs.io/en/latest/).
    First, let''s look at one of the simplest notebooks, `Custom Widget –Spreadsheet.ipynb`.
    It has just five lines, shown here:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解与 Jupyter Notebook 格式相关的更多信息，请参考此处有用的链接：[https://nbformat.readthedocs.io/en/latest/](https://nbformat.readthedocs.io/en/latest/)。首先，让我们看一个最简单的笔记本，`Custom
    Widget –Spreadsheet.ipynb`。它仅有五行，如下所示：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The whole notebook code is included in a pair of curly brackets. At the highest
    level, a Jupyter notebook is a dictionary with the following few keys:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 整个笔记本代码包含在一对大括号中。在最高层次，Jupyter 笔记本是一个字典，包含以下几个键：
- en: '`metadata` (`dict`)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata`（`dict`）'
- en: '`nbformat` (`int`)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nbformat`（`int`）'
- en: '`nbformat_minor` (`int`)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nbformat_minor`（`int`）'
- en: '`cells` (`list`)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cells`（`list`）'
- en: 'In the previous example code block, both the cells and metadata are empty.
    The notebook format has a value of `4`. It is always a good idea that we ourselves
    generate a simple program. Save it as a Jupyter notebook. Then we can look at
    its structure. Next, let''s generate a simple Python program via Jupyter Notebook
    (see the following three lines):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例代码块中，`cells`和`metadata`都是空的。笔记本格式的值为`4`。通常情况下，自己生成一个简单程序并保存为 Jupyter Notebook
    格式，然后查看其结构是一个好主意。接下来，让我们通过 Jupyter Notebook 生成一个简单的 Python 程序（见下方三行）：
- en: '![](img/670961c4-e66a-42f6-b982-3c0507a7acd3.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/670961c4-e66a-42f6-b982-3c0507a7acd3.png)'
- en: 'To download this program, just click File | Download As and choose Notebook
    (.ipynb) as the format. Here is the related code for the preceding three lines.
    Its name is `c11_01simplePython.ipynb`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 若要下载此程序，只需点击文件 | 下载为，并选择 Notebook（.ipynb）作为格式。以下是前面三行代码相关内容。它的文件名为`c11_01simplePython.ipynb`：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Sharing of notebooks
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 笔记本共享
- en: 'To share a notebook or project, follow these steps:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要共享笔记本或项目，请按照以下步骤操作：
- en: Save your notebook.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的笔记本。
- en: Log in by running the Anaconda login command.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行Anaconda登录命令进行登录。
- en: 'To upload your notebook to the cloud, open the Anaconda prompt or Terminal
    and enter the following command:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将你的笔记本上传到云端，请打开Anaconda提示符或终端，并输入以下命令：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To check, we can try the link at [http://notebooks.anaconda.org/<USERNAME>/my-notebook](http://notebooks.anaconda.org/%3cUSERNAME%3e/my-notebook),
    where USERNAME would be your username. The following shows an example where we
    generate a simple Jupyter notebook, using the earlier code:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了检查，我们可以尝试访问[http://notebooks.anaconda.org/<USERNAME>/my-notebook](http://notebooks.anaconda.org/%3cUSERNAME%3e/my-notebook)链接，其中USERNAME是你的用户名。以下展示了一个例子，我们生成了一个简单的Jupyter笔记本，使用了之前的代码：
- en: '![](img/b14ee075-544a-485e-be28-4c7946bee3a1.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b14ee075-544a-485e-be28-4c7946bee3a1.png)'
- en: Assume that we download it as `c11_01.ipynb`*.* First, we launch the Anaconda
    prompt.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们将其下载为`c11_01.ipynb`*.* 首先，启动Anaconda提示符。
- en: 'Move to the correct subdirectory containing our Jupyter notebook. Then issue
    the following command:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移动到包含我们Jupyter笔记本的正确子目录。然后输入以下命令：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The corresponding output is shown here:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相应的输出如下所示：
- en: '![](img/35e4eaa0-d400-4dbb-b8b7-3c6128dbe840.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35e4eaa0-d400-4dbb-b8b7-3c6128dbe840.png)'
- en: 'The last instruction shown in the preceding screenshot tells us that we can
    locate it at [https://anaconda.org/paulyan/c11_01](https://anaconda.org/paulyan/c11_01)
    (see the following screenshot):'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上一张截图中的最后一条指令告诉我们，可以在[https://anaconda.org/paulyan/c11_01](https://anaconda.org/paulyan/c11_01)找到它（见下图）：
- en: '![](img/ac7ab64b-6405-4ba8-b29a-63906f962102.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac7ab64b-6405-4ba8-b29a-63906f962102.png)'
- en: Obviously, after that, we can share the link with our partners or coauthors.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，在那之后，我们可以与合作伙伴或共同作者共享该链接。
- en: Sharing of projects
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目共享
- en: 'First, let''s look at the definition of a project. A project is a folder that
    contains an `anaconda-project.yml` configuration file together with scripts (code),
    notebooks, datasets, and other files. We can add a folder into a project by adding
    a configuration file named `anaconda-project.yml` to the folder. The configuration
    file can include the following sections: commands, variables, services, downloads,
    packages, channels, and environment specifications. Data scientists can use projects
    to encapsulate data science projects and make them easily portable. A project
    is usually compressed into a `.tar.bz2` file for sharing and storing.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看项目的定义。项目是一个包含`anaconda-project.yml`配置文件的文件夹，文件夹内有脚本（代码）、笔记本、数据集和其他文件。我们可以通过将名为`anaconda-project.yml`的配置文件添加到文件夹中，将文件夹加入到项目中。配置文件可以包括以下部分：命令、变量、服务、下载、包、通道和环境规范。数据科学家可以使用项目来封装数据科学项目并使其易于移植。项目通常会被压缩成`.tar.bz2`文件以便共享和存储。
- en: '**Anaconda Project** automates setup steps, so that people with whom you share
    projects can run your projects with the following single command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**Anaconda Project** 自动化了设置步骤，这样你与之共享项目的人只需要以下命令就可以运行你的项目：'
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To install Anaconda Project, type the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Anaconda Project，请键入以下命令：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Anaconda Project encapsulates data science projects and makes them easily portable.
    It automates setup steps such as installing the right packages, downloading files,
    setting environment variables, and running commands. Project makes it easy to
    reproduce your work, share projects with others, and run them on different platforms.
    It also simplifies deployment to servers. Anaconda projects run the same way on
    your machine, on another user's machine, or when deployed to a server.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda Project封装了数据科学项目，使它们易于移植。它自动化了设置步骤，如安装正确的包、下载文件、设置环境变量和运行命令。Project使得重新制作工作、与他人共享项目以及在不同平台上运行它们变得简单。它还简化了部署到服务器的过程。Anaconda项目在你的机器上、其他用户的机器上或部署到服务器时运行相同。
- en: Traditional build scripts such as `setup.py` automate building of the project
    – going from source code to something runnable – while Project automates running
    the project, taking build artifacts, and doing any necessary setup before executing
    them.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的构建脚本，如`setup.py`，自动化项目的构建——从源代码到可运行的东西——而Project则自动化了运行项目的过程，处理构建产物，并在执行之前进行必要的设置。
- en: 'We can use Project on Windows, macOS, and Linux. Project is supported and offered
    by Anaconda Inc® and contributors under a three-clause BSD license. Project sharing
    will save us a great deal of time, since other developers will not spend too much
    time on the work done already. Here is the procedure:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 Windows、macOS 和 Linux 上使用 Project。Project 是由 Anaconda Inc® 及其贡献者在三条款 BSD
    许可证下支持并提供的。项目共享将节省我们大量时间，因为其他开发人员不会在已经完成的工作上浪费过多时间。以下是具体步骤：
- en: Build up your project
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建你的项目
- en: Log in to Anaconda
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Anaconda
- en: 'From the project''s directory on your computer, type the following command:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从计算机上的项目目录中，输入以下命令：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Alternatively, from Anaconda Navigator, in the Projects tab, upload via the
    bottom-right Upload to Anaconda Cloud.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，在 Anaconda Navigator 中，在 Projects 标签页下，点击右下角的上传按钮，将项目上传到 Anaconda Cloud。
- en: 'Projects can be any directory of code and assets. Often, projects will contain
    notebooks or Bokeh applications, for example. Here, we show how to generate a
    project called `project01`. First, we want to move to the correct location. Assume
    that we choose `c:/temp/`. The key command is given here:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 项目可以是任何代码和资源的目录。例如，项目通常包含笔记本或 Bokeh 应用程序。在这里，我们展示如何生成一个名为`project01`的项目。首先，我们需要进入正确的位置。假设我们选择了`c:/temp/`，关键命令如下所示：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, both commands are shown side by side as well:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，两个命令并排显示：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The corresponding output is shown here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的输出如下所示：
- en: '![](img/0d31d7d9-9772-47e8-a686-1c5f16268d3e.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d31d7d9-9772-47e8-a686-1c5f16268d3e.png)'
- en: 'We can also turn any existing directory into a project by switching to the
    directory and then running `anaconda-project init` without options or arguments.
    We can use MS Word to open `anaconda-project.yml` (see the first couple of lines
    shown here):'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过切换到该目录并运行`anaconda-project init`（不带选项或参数）将任何现有目录转换为项目。我们可以使用 MS Word
    打开`anaconda-project.yml`（以下显示的是前几行）：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'There are two ways to share our projects with others. First, we archive the
    project by issuing the following command:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以与他人共享我们的项目。首先，我们通过输入以下命令来归档项目：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Then, we email the ZIP file to our colleague or others. The second way of sharing
    a project is to use Anaconda Cloud. Log in to Anaconda Cloud first. From the project's
    directory on our computer, type `anaconda-project upload`, or, from Anaconda Navigator,
    in the Projects tab, upload via the bottom-right Upload to Anaconda Cloud.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将 ZIP 文件通过电子邮件发送给我们的同事或其他人。共享项目的第二种方式是使用 Anaconda Cloud。首先登录到 Anaconda
    Cloud。从我们计算机上的项目目录中，输入`anaconda-project upload`，或者在 Anaconda Navigator 中，在 Projects
    标签页下，点击右下角的上传按钮，将项目上传到 Anaconda Cloud。
- en: Sharing of environments
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 环境共享
- en: In terms of computer software, an operating environment or integrated applications
    environment is the environment in which users can execute software. Usually, such
    an environment consists of a user interface and an API. To a certain degree, the
    term *platform* could be viewed as its synonym. There are many reasons why we
    want to share our environment with someone else. For example, they can re-create
    a test that we have done. To allow them to quickly reproduce our environment with
    all of its packages and versions, give them a copy of your `environment.yml` file.
    Depending on the operating system, we have the following methods to export our
    environment file. Note that if we already have an `environment.yml` file in our
    current directory, it will be overwritten during this task.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 就计算机软件而言，操作环境或集成应用环境是用户可以执行软件的环境。通常，这样的环境由用户界面和 API 组成。在一定程度上，术语*平台*可以看作它的同义词。我们希望与他人共享我们的环境有很多原因。例如，他们可以重现我们做过的测试。为了让他们能够快速重建我们带有所有软件包和版本的环境，可以将你的`environment.yml`文件副本提供给他们。根据操作系统的不同，我们有以下方法导出环境文件。请注意，如果当前目录中已有`environment.yml`文件，执行此任务时它将被覆盖。
- en: 'There are different ways to activate the `myenv` environment file depending
    on the systems used. For Windows users, in our Anaconda prompt, type the following
    command:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 根据使用的操作系统，有不同的方法来激活`myenv`环境文件。对于 Windows 用户，在 Anaconda 提示符下输入以下命令：
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'On macOS and Linux, in our Terminal window, issue the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在 macOS 和 Linux 系统中，在终端窗口输入以下命令：
- en: '[PRE15]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Note that we replace `myenv` with the name of the environment. To export our
    active environment to a new file, type the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们将`myenv`替换为环境的名称。要将我们当前活动的环境导出到新文件中，输入以下命令：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To share, we can simply email or copy the exported `environment.yml` file to
    the other person. On the other hand, in order to remove an environment, run the
    following code in our Terminal window or at an Anaconda prompt:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 若要共享，我们可以简单地通过电子邮件或复制导出的 `environment.yml` 文件给对方。另一方面，为了删除一个环境，我们可以在终端窗口或 Anaconda
    提示符下运行以下代码：
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Alternatively, we can specify the name, as shown here:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以像这里一样指定名称：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To verify that the environment was removed, run the following command line:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证环境是否已被移除，请运行以下命令：
- en: '[PRE19]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Replicating others' environments locally
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在本地复制他人环境
- en: 'First, we can export our Anaconda environment by using the following command:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们可以通过以下命令导出我们的 Anaconda 环境：
- en: '[PRE20]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'After generating this file, the notepad can be used to open it (see the following
    few lines of our output file). To save space, only the first and last few lines
    are shown:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 生成此文件后，可以使用记事本打开它（请参见以下几个输出文件的行）。为了节省空间，仅显示第一行和最后几行：
- en: '[PRE21]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Then, the receivers of the preceding file can recreate it by using the following
    command:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，接收上述文件的人可以通过以下命令重新创建它：
- en: '[PRE22]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Downloading a package from Anaconda
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Anaconda 下载软件包
- en: 'Sometimes, users might generate their own packages and upload them to Anaconda
    Cloud. For a group project, group members can do so as well. Thus, we need to
    know how to download a package from Anaconda Cloud. Here is the general procedure:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，用户可能会生成自己的软件包并上传到 Anaconda Cloud。对于一个团队项目，团队成员也可以这么做。因此，我们需要了解如何从 Anaconda
    Cloud 下载软件包。以下是一般的操作步骤：
- en: Go to [http://anaconda.org](http://anaconda.org)
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [http://anaconda.org](http://anaconda.org)
- en: 'Search packages by using a keyword or keywords, as in the example here:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用关键字或多个关键字搜索软件包，如此示例所示：
- en: '![](img/6277e754-71e4-4ab1-872d-18073549880b.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6277e754-71e4-4ab1-872d-18073549880b.png)'
- en: Assume that we are interested in the r-data.table package.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们对 r-data.table 软件包感兴趣。
- en: 'Issue the following command:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE23]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Sometimes, we can generate a set of functions and share with others. Here is
    one simple example. Assume that we generate the following program with several
    functions:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们可以生成一组函数并与他人共享。以下是一个简单示例。假设我们生成了以下带有多个函数的程序：
- en: '[PRE24]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: To save space, there is help for only the first function. Assume the preceding
    function is called `myfincal.py` and is located under `c:/temp`. We can use the
    following command to generate a `myfincal.pyc` and import `py_compile`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省空间，这里仅展示第一个函数的帮助信息。假设之前的函数叫做 `myfincal.py` 并保存在 `c:/temp` 下。我们可以使用以下命令生成
    `myfincal.pyc` 并导入 `py_compile`。
- en: '[PRE25]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We have generated a set of functions contained in `fincal.pyc`. If you are
    interested, you can use the following procedure to download and import it:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经生成了一组包含在 `fincal.pyc` 中的函数。如果你有兴趣，可以按照以下步骤下载并导入它：
- en: Download it at [http://canisius.edu/~yany/python/fincal.pyc](http://canisius.edu/~yany/python/fincal.pyc).
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://canisius.edu/~yany/python/fincal.pyc](http://canisius.edu/~yany/python/fincal.pyc)
    下载它。
- en: 'Launch Python and try to import it. There are several ways to make `fincal.pyc`
    accessible:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Python 并尝试导入它。有几种方法可以使 `fincal.pyc` 可访问：
- en: '**Method 1**: Assume that the file is saved under `c:/temp/`. Change the path,
    as in the right-hand side of this screenshot:'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方法 1**：假设文件保存在 `c:/temp/` 目录下。可以像截图右侧那样更改路径：'
- en: '![](img/b04f7f8e-7a72-48fd-bb8c-8c77cafd70aa.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b04f7f8e-7a72-48fd-bb8c-8c77cafd70aa.png)'
- en: '**Method 2**: Copy `fincal.pyc` to one of the accessible subdirectories. To
    see all paths, issue the following code:'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方法 2**：将 `fincal.pyc` 复制到一个可访问的子目录下。要查看所有路径，执行以下代码：'
- en: '[PRE26]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The output is shown here. Different users will have different output:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示。不同用户将会有不同的输出：
- en: '![](img/4784b9b5-b81c-46de-9b73-c4432b468f10.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4784b9b5-b81c-46de-9b73-c4432b468f10.png)'
- en: Now, you simply copy `fincal.pyc` to one of the preceding subdirectories.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只需将 `fincal.pyc` 复制到上述子目录之一即可。
- en: '**Method 3**: Add the path instead, see the code here:'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方法 3**：改为添加路径，见下面的代码：'
- en: '[PRE27]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'We can issue `sys.path` to check, see the following screenshot:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以执行 `sys.path` 来检查，见以下截图：
- en: '![](img/f795574f-cf70-4ab5-8d4e-217d1b345dc1.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f795574f-cf70-4ab5-8d4e-217d1b345dc1.png)'
- en: 'Note that if we want to remove a path, we can use the following code:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果我们想删除路径，可以使用以下代码：
- en: '[PRE28]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, we could import that module, see the following code:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以导入该模块，见下面的代码：
- en: '[PRE29]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The related output is shown here:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下所示：
- en: '![](img/34aee0f7-7a45-4b41-8165-71925761c396.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34aee0f7-7a45-4b41-8165-71925761c396.png)'
- en: Note that since Yahoo!Finance and Google Finance have changed their data structures,
    many functions related to downloading data from their websites will not work.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于 Yahoo!Finance 和 Google Finance 改变了它们的数据结构，许多与从它们的网站下载数据相关的功能将无法使用。
- en: Summary
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have discussed Anaconda Cloud. Some topics included the
    Jupyter Notebook in depth, different formats of the Jupyter Notebook, how to share
    notebooks with your partner, how to share different projects over different platforms,
    how to share your working environments, and how to replicate others' environments
    locally.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了 Anaconda Cloud。内容包括深入探讨 Jupyter Notebook，Jupyter Notebook 的不同格式，如何与伙伴共享笔记本，如何在不同平台间共享项目，如何共享工作环境，以及如何在本地复制他人的环境。
- en: For the next chapter, we will discuss distributed computing and Anaconda Accelerate.
    When our data or tasks become more complex, we'll need a good system or a set
    of tools to process data and run a complex algorithm. For this purpose, distributed
    computing is one solution. In particular, we will explain many concepts, such
    as compute nodes, project add-ons, parallel processing advanced Python for data
    parallelism. In addition, we will give several examples showing how to use distributed
    computing.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论分布式计算和 Anaconda Accelerate。当我们的数据或任务变得更加复杂时，我们将需要一个良好的系统或一套工具来处理数据并运行复杂的算法。为此，分布式计算是一个解决方案。具体来说，我们将解释许多概念，例如计算节点、项目附加组件、并行处理、数据并行的高级
    Python 等。除此之外，我们还将提供几个示例，展示如何使用分布式计算。
- en: Review questions and exercises
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复习问题和练习
- en: What does *cloud* mean?
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*云* 是什么意思？'
- en: What does *cloud computing* mean?
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*云计算* 是什么意思？'
- en: Why do we care about sharing our working environments with others?
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么我们关心与他人共享我们的工作环境？
- en: How do we register on Anaconda Cloud?
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何在 Anaconda Cloud 上注册？
- en: Do users need an account to use the Anaconda Cloud platform?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户需要账户才能使用 Anaconda Cloud 平台吗？
- en: How do we upload our notebook to Anaconda Cloud?
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何将笔记本上传到 Anaconda Cloud？
- en: Why is it important to share our projects?
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么共享我们的项目很重要？
- en: How do you share your project? Build a project and share it with someone else.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何共享你的项目？创建一个项目并与他人共享。
- en: How do you recreate your partner's Anaconda environment?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何重建你伙伴的 Anaconda 环境？
- en: 'What is the meaning of the following two command lines:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下两行命令的含义是什么：
- en: '[PRE30]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: How can we launch a Jupyter QtConsole?
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何启动 Jupyter QtConsole？
- en: Run a Jupyter notebook called `Octave Maric.ipynb` under the subdirectory of
    `examples/Builtin Extension`. Note that you have to find a way to install a package
    called `octavemagic` first.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `examples/Builtin Extension` 子目录下运行名为 `Octave Maric.ipynb` 的 Jupyter 笔记本。请注意，首先你需要找到方法安装一个名为
    `octavemagic` 的包。
- en: Share your environment with another person to see the effect.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与他人共享你的环境，以查看效果。
- en: Generate a set of functions around a topic and produce a corresponding `.pyc`
    file and share it with your colleagues or co-workers.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 围绕一个主题生成一组函数，并生成相应的 `.pyc` 文件，与同事或合作伙伴共享。
