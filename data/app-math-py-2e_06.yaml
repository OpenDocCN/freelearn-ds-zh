- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Working with Data and Statistics
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据和统计学的应用
- en: One of the most attractive features of Python for people who need to analyze
    data is the huge ecosystem of data manipulation and analysis packages, as well
    as the active community of data scientists working with Python. Python is easy
    to use, while also offering very powerful, fast libraries, which enables even
    relatively novice programmers to quickly and easily process vast sets of data.
    At the heart of many data science packages and tools is the pandas library. pandas
    provides two data container types that build on top of NumPy arrays and have good
    support for labels (other than simple integers). These data containers make working
    with large sets of data extremely easy.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于需要分析数据的人来说，Python最吸引人的特点之一是其庞大的数据处理和分析包生态系统，以及活跃的Python数据科学社区。Python易于使用，同时提供了非常强大、快速的库，使得即使是相对初学的程序员也能够快速、轻松地处理大量数据。许多数据科学包和工具的核心是pandas库。pandas提供了两种基于NumPy数组的数据容器类型，并且对标签（不仅仅是简单的整数）有很好的支持。这些数据容器使得处理大型数据集变得非常简单。
- en: Data and statistics are part of everything in the modern world. Python is leading
    the charge in trying to make sense of the vast quantity of data produced every
    day, and usually, this all starts with pandas – Python’s basic library for working
    with data. First, we’ll see some basic techniques for working with data using
    pandas. Then, we’ll discuss the basics of statistics, which will provide us with
    a systematic approach to understanding a whole population by looking at a small
    sample.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 数据和统计学是现代世界中无处不在的一部分。Python在试图理解每天产生的大量数据中处于领先地位，通常，这一切都从pandas开始——Python用于处理数据的基础库。首先，我们将了解一些使用pandas处理数据的基本技巧。然后，我们将讨论统计学的基础知识，这将为我们提供通过观察一个小样本来理解整个群体的系统方法。
- en: In this chapter, we will learn how to leverage Python and pandas to work with
    large sets of data and perform statistical tests.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们将学习如何利用Python和pandas处理大规模数据集并进行统计检验。
- en: 'This chapter covers the following recipes:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包括以下内容：
- en: Creating Series and DataFrame objects
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Series和DataFrame对象
- en: Loading and storing data from a DataFrame
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从DataFrame加载和存储数据
- en: Manipulating data in DataFrames
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在DataFrame中操作数据
- en: Plotting data from a DataFrame
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从DataFrame中绘制数据
- en: Getting descriptive statistics from a DataFrame
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从DataFrame中获取描述性统计数据
- en: Understanding a population using sampling
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用抽样理解总体
- en: Performing operations on grouped data in a DataFrame
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在DataFrame中对分组数据进行操作
- en: Testing hypotheses using t-tests
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用t检验测试假设
- en: Testing hypotheses using ANOVA
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用ANOVA检验假设
- en: Testing hypotheses for non-parametric data
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对非参数数据进行假设检验
- en: Creating interactive plots with Bokeh
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Bokeh创建交互式图表
- en: What is statistics?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是统计学？
- en: Statistics is the systematic study of data using mathematical – specifically,
    probability – theory. There are two major aspects to statistics. The first aspect
    of statistics is **summarizing data**. This is where we find numerical values
    that describe a set of data, including characteristics such as the center (mean
    or median) and spread (standard deviation or variance) of the data. These values
    are called **descriptive statistics**. What we’re doing here is fitting a probability
    distribution that describes the likelihood of a particular characteristic appearing
    in a population. Here, a *population* simply means a complete set of measurements
    of a particular characteristic – for example, the height of every person currently
    alive on Earth.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 统计学是通过数学——特别是概率——理论来系统地研究数据。统计学有两个主要方面。第一个方面是**数据总结**。在这里，我们找到描述一组数据的数值，包括数据的中心（均值或中位数）和分布（标准差或方差）等特征。这些值被称为**描述性统计**。我们在做的事情是拟合一个概率分布，用来描述某一特征在总体中出现的可能性。在这里，*总体*指的是某一特征的所有测量值的完整集合——例如，地球上所有活着的人的身高。
- en: The second – and arguably more important – aspect of statistics is **inference**.
    Here, we try to estimate the distribution of data describing a population by computing
    numerical values on a relatively small sample of that population. Not only do
    we try to estimate the distribution of the population, but we also try to quantify
    how good our approximation is. This usually takes the form of a confidence interval.
    A confidence interval is a range of values where we are confident the true value
    lies given the data we have observed. We usually give 95% or 99% confidence intervals
    for estimated values.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 统计学的第二个——也是可以说是更重要的——方面是**推断**。在这里，我们通过计算该总体相对较小样本的数值来估计描述总体数据的分布。我们不仅尝试估计总体的分布，还试图量化我们的近似值有多准确。通常这以置信区间的形式呈现。置信区间是一个值的范围，我们可以有信心地认为真值位于该范围内，基于我们观察到的数据。我们通常会为估计值提供95%或99%的置信区间。
- en: Inference also includes tests for whether two or more sets of sampled data come
    from the same population. This is the area of **hypothesis testing**. Here, we
    compare the likely distributions of both sets of data to determine whether they
    are likely to be the same. Many hypothesis tests require that the data is a normal
    distribution or, more likely, that we can apply the *central limit theorem*. These
    tests are sometimes described as parametric tests and include t-tests and ANOVA.
    However, if your data is not sufficiently nice that the central limit theorem
    can help, then some tests do not require the assumption of normality. These are
    called non-parametric tests.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 推断还包括测试两个或多个样本数据集是否来自同一总体。这就是**假设检验**的领域。在这里，我们比较两个数据集的可能分布，以确定它们是否可能是相同的。许多假设检验要求数据符合正态分布，或者更可能的是我们可以应用*中心极限定理*。这些检验有时被描述为参数检验，包括t检验和方差分析（ANOVA）。然而，如果你的数据不符合足够的正态性，以至于无法应用中心极限定理，那么一些检验不需要假设正态性。这些检验被称为非参数检验。
- en: Technical requirements
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, we will mostly make use of the pandas library for data manipulation,
    which provides R-like data structures, such as `Series` and `DataFrame` objects,
    for storing, organizing, and manipulating data. We will also use the Bokeh data
    visualization library in the final recipe of this chapter. These libraries can
    be installed using your favorite package manager, such as `pip`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，我们将主要使用pandas库进行数据处理，它提供了类似R的数据结构，例如用于存储、组织和操作数据的`Series`和`DataFrame`对象。在本章的最后一节食谱中，我们还将使用Bokeh数据可视化库。这些库可以通过你喜欢的包管理器安装，例如`pip`：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We will also make use of the NumPy and SciPy packages.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用NumPy和SciPy包。
- en: The code for this chapter can be found in the `Chapter 06` folder of this book’s
    GitHub repository at [https://github.com/PacktPublishing/Applying-Math-with-Python-2nd-Edition/tree/main/Chapter%2006](https://github.com/PacktPublishing/Applying-Math-with-Python-2nd-Edition/tree/main/Chapter%2006).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在本书的GitHub仓库中的`Chapter 06`文件夹找到：[https://github.com/PacktPublishing/Applying-Math-with-Python-2nd-Edition/tree/main/Chapter%2006](https://github.com/PacktPublishing/Applying-Math-with-Python-2nd-Edition/tree/main/Chapter%2006)。
- en: Creating Series and DataFrame objects
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Series和DataFrame对象
- en: Most data handling in Python is done using the pandas library, which builds
    on NumPy to provide R-like structures for holding data. These structures allow
    the easy indexing of rows and columns, using strings or other Python objects besides
    just integers. Once data is loaded into a pandas `DataFrame` or `Series`, it can
    be easily manipulated, just as if it were in a spreadsheet. This makes Python,
    when combined with pandas, a powerful tool for processing and analyzing data.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，大多数数据处理是通过pandas库完成的，pandas基于NumPy提供类似R的结构来存储数据。这些结构允许使用字符串或其他Python对象（除了整数）进行轻松的行列索引。一旦数据被加载到pandas
    `DataFrame`或`Series`中，它就可以像在电子表格中一样轻松操作。这使得Python与pandas结合时，成为处理和分析数据的强大工具。
- en: In this recipe, we will see how to create new pandas `Series` and `DataFrame`
    objects and access items from them.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将看到如何创建新的pandas `Series`和`DataFrame`对象，并访问其中的项目。
- en: Getting ready
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will import the pandas library as `pd` using the following
    command:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本食谱，我们将使用以下命令将pandas库导入为`pd`：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The NumPy package is `np`. We must also create a (seeded) random number generator
    from NumPy, as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy包是`np`。我们还必须从NumPy中创建一个（带种子的）随机数生成器，如下所示：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps outline how to create `Series` and `DataFrame` objects
    that hold data:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤概述了如何创建保存数据的`Series`和`DataFrame`对象：
- en: 'First, create the random data that we will store in the `Series` and `DataFrame`
    objects:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建我们将存储在`Series`和`DataFrame`对象中的随机数据：
- en: '[PRE3]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, create a `Series` object that holds `diff_data`. We’ll print `Series`
    to produce a view of the data:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建一个包含`diff_data`的`Series`对象。我们将打印`Series`以查看数据：
- en: '[PRE5]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, create a `DataFrame` object with two columns:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，创建一个包含两列的`DataFrame`对象：
- en: '[PRE7]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Print the `DataFrame` object to produce a view of the data it holds:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`DataFrame`对象以查看它所包含的数据：
- en: '[PRE11]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The printed objects are as follows; the `Series` object is on the left and
    the `DataFrame` object is on the right:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出的对象如下；左边是`Series`对象，右边是`DataFrame`对象：
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As expected, both `Series` and `DataFrame` contain 100 rows. Since the data
    in the series is of a single type – guaranteed by the fact that it is just a NumPy
    array – the data type is shown as `float64`. `DataFrame` has two columns, which
    may have different data types in general (although here, they both have `float64`).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，`Series`和`DataFrame`都包含100行。由于系列中的数据是单一类型的——这通过它只是一个NumPy数组来保证——数据类型显示为`float64`。`DataFrame`有两列，通常这两列可能有不同的数据类型（尽管在这里，它们都有`float64`）。
- en: How it works...
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: The pandas package provides the `Series` and `DataFrame` classes, which mirror
    the function and capabilities of their R counterparts. `Series` is used to store
    one-dimensional data, such as time series data, and `DataFrame` is used to store
    multidimensional data; you can think of a `DataFrame` object as a “spreadsheet.”
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: pandas包提供了`Series`和`DataFrame`类，它们的功能和特性与R语言中的类似对象相对应。`Series`用于存储一维数据，如时间序列数据，而`DataFrame`用于存储多维数据；你可以将`DataFrame`对象视为一个“电子表格”。
- en: What separates `Series` from a simple NumPy `ndarray` is the way that `Series`
    indexes its items. A NumPy array is indexed by integers, which is also the default
    for a `Series` object. However, `Series` can be indexed by any hashable Python
    object, including strings and `datetime` objects. This makes `Series` useful for
    storing time series data. A `Series` can be created in several ways. In this recipe,
    we used a NumPy array, but any Python iterable, such as a list, can be used instead.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`与简单的NumPy `ndarray`的区别在于`Series`对其项的索引方式。NumPy数组是通过整数索引的，这也是`Series`对象的默认索引方式。然而，`Series`可以通过任何可哈希的Python对象进行索引，包括字符串和`datetime`对象。这使得`Series`在存储时间序列数据时非常有用。`Series`可以通过多种方式创建。在这个示例中，我们使用了NumPy数组，但也可以使用任何Python可迭代对象，如列表。'
- en: Each column in a `DataFrame` object is a series containing rows, just as in
    a traditional database or spreadsheet. In this recipe, the columns are given labels
    when the `DataFrame` object is constructed via the keys of the dictionary.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`对象中的每一列都是包含行的系列，就像传统的数据库或电子表格一样。在这个示例中，`DataFrame`对象通过字典的键来构建时，列会被赋予标签。'
- en: The `DataFrame` and `Series` objects create a summary of the data they contain
    when printed. This includes column names, the number of rows and columns, and
    the first and last five rows of the frame (series). This is useful for quickly
    obtaining an overview of the object and the spread of data it contains.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`和`Series`对象在打印时会创建一个数据摘要。这包括列名、行数和列数，以及框架（序列）的前五行和后五行。这有助于快速获取对象及其数据分布的概况。'
- en: There’s more...
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: The individual rows (records) of a `Series` object can be accessed using the
    usual index notation by providing the corresponding index. We can also access
    the rows by their numerical position using the special `iloc` property object.
    This allows us to access the rows by their numerical (integer) index, such as
    with Python lists or NumPy arrays.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`对象的单独行（记录）可以通过常规的索引符号访问，只需提供相应的索引。我们也可以通过特殊的`iloc`属性对象按其数字位置访问行。这允许我们像在Python列表或NumPy数组中一样，通过数字（整数）索引访问行。'
- en: The columns in a `DataFrame` object can be accessed using the usual index notation,
    providing the name of the column. The result of this is a `Series` object that
    contains the data from the selected column. `DataFrame` also provides two properties
    that can be used to access data. The `loc` attribute provides access to individual
    rows by their index, whatever this object may be. The `iloc` attribute provides
    access to the rows by numerical index, just as for the `Series` object.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`对象中的列可以通过常规的索引符号访问，提供列名即可。这样得到的结果是一个包含所选列数据的`Series`对象。`DataFrame`还提供了两个可以用于访问数据的属性。`loc`属性通过索引访问单独的行，无论该对象是什么。而`iloc`属性通过数字索引访问行，就像在`Series`对象中一样。'
- en: You can provide selection criteria to `loc` (or just use index notation for
    the object) to select data. This includes a single label, a list of labels, a
    slice of labels, or a Boolean array (of an appropriate size). The `iloc` selection
    method accepts similar criteria.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以向 `loc` 提供选择标准（或仅使用对象的索引表示法）来选择数据。这包括单个标签、标签列表、标签切片或布尔数组（大小适当）。`iloc` 选择方法接受类似的标准。
- en: There are other ways to select data from a `Series` or `DataFrame` object beyond
    the simple methods we describe here. For example, we can use the `at` attribute
    to access a single value at a specified row (and column) in the object.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `Series` 或 `DataFrame` 对象中选择数据的方式有很多，超出了我们在此所描述的简单方法。例如，我们可以使用 `at` 属性访问对象中指定行（和列）的单个值。
- en: 'Sometimes, a pandas `Series` or `DataFrame` is not sufficiently rich to describe
    the data because they are inherently low-dimensional. The `xarray` package builds
    upon the pandas interface and provides support for labeled multidimensional arrays
    (that is, NumPy arrays). We’ll learn about `xarray` in the *Loading and storing
    data from NetCDF files* recipe in [*Chapter 10*](B19085_10.xhtml#_idTextAnchor395).
    More information about `xarray` can be found in the documentation: [https://docs.xarray.dev/en/stable/index.html](https://docs.xarray.dev/en/stable/index.html).'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，pandas 的 `Series` 或 `DataFrame` 不能充分描述数据，因为它们本身是低维的。`xarray` 包基于 pandas
    接口并提供对带标签的多维数组（即 NumPy 数组）的支持。在 [*第 10 章*](B19085_10.xhtml#_idTextAnchor395) 的
    *从 NetCDF 文件加载和存储数据* 示例中，我们将学习关于 `xarray` 的内容。更多关于 `xarray` 的信息可以在文档中找到：[https://docs.xarray.dev/en/stable/index.html](https://docs.xarray.dev/en/stable/index.html)。
- en: See also
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'The pandas documentation contains a detailed description of the different ways
    to create and index a `DataFrame` or `Series` object: [https://pandas.pydata.org/docs/user_guide/indexing.html](https://pandas.pydata.org/docs/user_guide/indexing.html).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 文档包含了创建和索引 `DataFrame` 或 `Series` 对象的不同方式的详细描述：[https://pandas.pydata.org/docs/user_guide/indexing.html](https://pandas.pydata.org/docs/user_guide/indexing.html)。
- en: Loading and storing data from a DataFrame
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 DataFrame 加载和存储数据
- en: It is fairly unusual to create a `DataFrame` object from the raw data in a Python
    session. In practice, the data will often come from an external source, such as
    an existing spreadsheet or CSV file, database, or API endpoint. For this reason,
    pandas provides numerous utilities for loading and storing data to file. Out of
    the box, pandas supports loading and storing data from CSV, Excel (`xls` or `xlsx`),
    JSON, SQL, Parquet, and Google BigQuery. This makes it very easy to import your
    data into pandas and then manipulate and analyze this data using Python.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 会话中从原始数据创建 `DataFrame` 对象是相当不寻常的。实际上，数据通常来自外部来源，例如现有的电子表格或 CSV 文件、数据库或
    API 接口。因此，pandas 提供了许多用于加载和存储数据到文件的工具。pandas 默认支持从 CSV、Excel（`xls` 或 `xlsx`）、JSON、SQL、Parquet
    和 Google BigQuery 加载和存储数据。这使得将数据导入 pandas 并使用 Python 操作和分析这些数据变得非常简单。
- en: In this recipe, we will learn how to load and store data in a CSV file. The
    instructions will be similar for loading and storing data in other file formats.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们将学习如何加载和存储 CSV 文件中的数据。加载和存储其他文件格式的数据的操作方法将类似。
- en: Getting ready
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will need to import the pandas package under the `pd` alias
    and the NumPy library as `np`. We must also create a default random number generator
    from NumPy using the following commands:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例，我们需要导入 pandas 包并使用 `pd` 别名，同时导入 NumPy 库并命名为 `np`。我们还必须使用以下命令从 NumPy 创建一个默认的随机数生成器：
- en: '[PRE13]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Let’s learn how to store and then load data from a `DataFrame`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何存储数据并从 `DataFrame` 中加载数据。
- en: How to do it...
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to store data in a file and then load the data back into
    Python:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤将数据存储到文件中，然后将数据加载回 Python：
- en: 'First, we’ll create a sample `DataFrame` object using random data. Then, we
    will print this `DataFrame` object so that we can compare it to the data that
    we will read later:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将使用随机数据创建一个示例的 `DataFrame` 对象。然后，我们将打印这个 `DataFrame` 对象，以便我们可以将其与稍后读取的数据进行比较：
- en: '[PRE14]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We will store the data in this `DataFrame` object in the `sample.csv` file
    by using the `to_csv` method on the `DataFrame` object. We will use the `index=False`
    keyword argument so that the index is not stored in the CSV file:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将通过在 `DataFrame` 对象上使用 `to_csv` 方法，将数据存储到 `sample.csv` 文件中。我们将使用 `index=False`
    关键字参数，以确保索引不被存储在 CSV 文件中：
- en: '[PRE21]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now, we can use the `read_csv` routine from pandas to read the `sample.csv`
    file into a new `DataFrame` object. We will print this object to show the result:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用pandas中的`read_csv`方法将`sample.csv`文件读入一个新的`DataFrame`对象。我们将打印这个对象，以展示结果：
- en: '[PRE22]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The two printed DataFrames are shown side by side. The `DataFrame` object from
    *step 1* is on the left and the `DataFrame` object from *step 3* is on the right:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 两个打印出来的DataFrame并排显示。*第一步*中的`DataFrame`对象在左侧，*第三步*中的`DataFrame`对象在右侧：
- en: '[PRE24]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: As we can see from the rows, these two DataFrames are identical.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们从行中所看到的，这两个DataFrame是完全相同的。
- en: How it works...
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The core of this recipe is the `read_csv` routine in pandas. This routine takes
    path- or file-like objects as an argument and reads the contents of the file as
    CSV data. We can customize the delimiter using the `sep` keyword argument, which
    is a comma (`,`) by default. There are also options to customize the column headers
    and customize the type of each column.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程的核心是pandas中的`read_csv`方法。该方法接受路径或类似文件的对象作为参数，并将文件内容读取为CSV数据。我们可以通过`sep`关键字参数定制分隔符，默认是逗号（`,`）。还可以定制列头以及每列的类型。
- en: The `to_csv` method in a `DataFrame` or `Series` stores the contents in a CSV
    file. We used the `index` keyword argument here so that the indices are not printed
    into the file. This means that pandas will infer the index from the row number
    in the CSV file. This behavior is desirable if the data is indexed by integers,
    but this might not be the case if the data is indexed by times or dates, for example.
    We can also use this keyword argument to specify which column in the CSV file
    is the indexing column.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`或`Series`中的`to_csv`方法将内容存储到CSV文件中。我们在这里使用了`index`关键字参数，以确保索引不会被打印到文件中。这意味着pandas会根据CSV文件中的行号推断索引。如果数据是按整数索引的，这种行为是可取的，但如果数据是按时间或日期索引的，情况可能不同。我们还可以使用这个关键字参数指定CSV文件中作为索引的列。'
- en: See also
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'See the pandas documentation for a list of supported file formats: [https://pandas.pydata.org/docs/reference/io.html](https://pandas.pydata.org/docs/reference/io.html).'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅pandas文档，了解支持的文件格式：[https://pandas.pydata.org/docs/reference/io.html](https://pandas.pydata.org/docs/reference/io.html)。
- en: Manipulating data in DataFrames
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作DataFrame中的数据
- en: Once we have data in a `DataFrame`, we often need to apply some simple transformations
    or filters to the data before we can perform any analysis. This could include,
    for example, filtering the rows that are missing data or applying a function to
    individual columns.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了`DataFrame`中的数据，我们通常需要对数据进行一些简单的转换或筛选，然后才能进行分析。这可能包括，例如，筛选出缺失数据的行，或者对单独的列应用函数。
- en: In this recipe, we will learn how to perform some basic manipulation of `DataFrame`
    objects to prepare the data for analysis.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何对`DataFrame`对象进行一些基本操作，以准备数据进行分析。
- en: Getting ready
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will need the pandas package imported under the `pd` alias,
    the NumPy package imported under the `np` alias, and a default random number generator
    object from NumPy to be created using the following commands:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个教程，我们需要导入pandas库，别名为`pd`，导入NumPy库，别名为`np`，并通过以下命令创建一个默认的NumPy随机数生成器对象：
- en: '[PRE25]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Let’s learn how to perform some simple manipulations on data in a `DataFrame`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何对`DataFrame`中的数据进行一些简单的操作。
- en: How to do it...
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'The following steps illustrate how to perform some basic filtering and manipulations
    on a pandas `DataFrame`:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了如何对pandas `DataFrame`进行一些基本的筛选和操作：
- en: 'First, we will create a sample `DataFrame` using random data:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将使用随机数据创建一个示例`DataFrame`：
- en: '[PRE26]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Next, we will generate a new column from an existing column. This new column
    will hold `True` if the corresponding entry of the `"one"` column is greater than
    `0.5`, and `False` otherwise:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将从现有的列生成一个新列。这个新列将存储`True`，如果对应的`"one"`列的值大于`0.5`，否则存储`False`：
- en: '[PRE33]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now, let’s create a new function that we will apply to our `DataFrame`. This
    function multiplies the row `"two"` value by the maximum of row `"one"` and `0.5`
    (there are more concise ways to write this function):'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个新函数，我们将应用到我们的`DataFrame`上。这个函数将把行 `"two"` 的值乘以行 `"one"` 和`0.5`中的最大值（还有更简洁的方式来写这个函数）：
- en: '[PRE34]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now, we will apply the previously defined function to each row in the DataFrame
    to generate a new column. We will also print the updated DataFrame for comparison
    later:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将把之前定义的函数应用到DataFrame的每一行，生成一个新列。我们还将打印更新后的DataFrame，方便后续对比：
- en: '[PRE38]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Finally, we have to filter out the rows in the DataFrame that contain a **Not
    a Number** (**NaN**) value. We will print the resulting DataFrame:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们需要过滤掉包含**非数字**（**NaN**）值的 DataFrame 行。我们将打印出处理后的 DataFrame：
- en: '[PRE41]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The output from the `print` command in *step 4* is as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '*步骤 4* 中 `print` 命令的输出如下：'
- en: '[PRE43]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'There is a single NaN value visible in row 98\. As expected, we have 100 rows
    total and 5 columns of data. Now, we can compare this to the output of the `print`
    command in *step 6*:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 98 行可见一个 NaN 值。正如预期的那样，我们总共有 100 行数据和 5 列数据。现在，我们可以将其与 *步骤 6* 中 `print` 命令的输出进行对比：
- en: '[PRE44]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: As expected, the number of rows has dropped by 12, since we have removed all
    the rows that contain a NaN value. (Notice that row 98 no longer contains NaN
    in column 3.)
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，行数减少了 12 行，因为我们已删除了所有包含 NaN 值的行。（请注意，第 98 行在第 3 列中不再包含 NaN。）
- en: How it works...
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: New columns can be added to an existing `DataFrame` by simply assigning them
    to the new column index. However, some care needs to be taken here. In some situations,
    pandas will create a “view” of a `DataFrame` object rather than copying, and in
    this case, assigning it to a new column might not have the desired effect. This
    is discussed in the pandas documentation ([https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy](https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy)).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过简单地将新列分配给新的列索引来向现有的 `DataFrame` 中添加新列。然而，这里需要特别注意。在某些情况下，pandas 会创建 `DataFrame`
    对象的“视图”而不是复制对象，在这种情况下，将新列分配给 `DataFrame` 可能不会产生预期的效果。有关这一点，可以参阅 pandas 文档（[https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy](https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy)）。
- en: pandas `Series` objects (columns in a `DataFrame`) support rich comparison operators,
    such as equality and less than or greater than (in this recipe, we used the greater
    than operator). These comparison operators return a `Series` containing Boolean
    values corresponding to the positions at which the comparison was true and false.
    This can, in turn, be used to index the original `Series` and get just the rows
    where the comparison was true. In this recipe, we simply added this `Series` of
    Boolean values to the original `DataFrame`.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 的 `Series` 对象（即 `DataFrame` 中的列）支持丰富的比较运算符，比如等于、小于和大于（在本示例中，我们使用了大于运算符）。这些比较运算符返回一个
    `Series`，其中包含与比较结果为真或假的位置相对应的布尔值。接着，可以利用这个布尔值 `Series` 来索引原始的 `Series`，从而获取比较结果为真的行。在这个示例中，我们只是将这个布尔值
    `Series` 添加到原始的 `DataFrame` 中。
- en: The `apply` method takes a function (or other callable function) and applies
    it to each column in the `DataFrame` object. In this recipe, we instead wanted
    to apply the function to each row, so we used the `axis=1` keyword argument to
    apply the function to each row in the `DataFrame` object. In either case, the
    function is provided with a `Series` object indexed by the rows (columns). We
    also applied a function to each row, which returned a value computed using the
    data from each row. In practice, this application would be quite slow if the `DataFrame`
    object contains a large number of rows. If possible, you should operate on the
    columns as a whole, using functions designed to operate on NumPy arrays, for better
    efficiency. This is especially true for performing simple arithmetic on values
    in columns of a `DataFrame`. Just like NumPy arrays, `Series` objects implement
    standard arithmetic operations, which can greatly improve the operation time for
    large DataFrames.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply` 方法接受一个函数（或其他可调用的函数），并将其应用于 `DataFrame` 对象中的每一列。在这个示例中，我们希望将函数应用于每一行，因此使用了
    `axis=1` 关键字参数，将函数应用于 `DataFrame` 对象中的每一行。无论哪种方式，函数都会获得一个按行（列）索引的 `Series` 对象。我们还对每一行应用了一个函数，该函数返回一个基于每一行数据计算出的值。实际上，如果
    `DataFrame` 对象包含大量行，这样的操作会非常慢。如果可能的话，你应该操作整个列，使用专为 NumPy 数组设计的函数，这样效率更高。尤其是在对
    `DataFrame` 中列的值进行简单算术运算时，这一点尤为重要。就像 NumPy 数组一样，`Series` 对象也实现了标准的算术运算，这可以大大提高处理大规模
    DataFrame 的速度。'
- en: In the final step of this recipe, we used the `dropna` method to quickly select
    only the rows from the DataFrames that do not contain a NaN value. pandas uses
    NaN to represent missing data in a `DataFrame`, so this method selects the rows
    that don’t contain a missing value. This method returns a view to the original
    `DataFrame` object, but it can also modify the original `DataFrame` by passing
    the `inplace=True` keyword argument. As in this recipe, this is roughly equivalent
    to using the indexing notation to select rows using an indexing array containing
    Boolean values.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程的最后一步，我们使用了`dropna`方法来快速选择仅包含非NaN值的DataFrame行。pandas使用NaN来表示`DataFrame`中的缺失数据，因此此方法选择那些不包含缺失值的行。该方法返回原始`DataFrame`对象的视图，但也可以通过传递`inplace=True`关键字参数来修改原始`DataFrame`。正如本教程所示，这大致相当于使用索引数组选择行，数组中包含布尔值。
- en: Note
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You should always be cautious when modifying original data directly since it
    might not be possible to return to this data to repeat your analysis later. If
    you do need to modify the data directly, you should make sure that it is either
    backed up or that the modifications do not remove data that you might need later.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在直接修改原始数据时，您应始终小心，因为可能无法返回该数据以便以后重复分析。如果确实需要直接修改数据，您应确保数据已备份，或者确保修改不会删除以后可能需要的数据。
- en: There’s more...
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Most pandas routines deal with missing data (NaN) sensibly. However, if you
    do need to remove or replace missing data in a `DataFrame`, then there are several
    ways to do this. In this recipe, we used the `dropna` method to simply drop the
    rows from the DataFrames that are missing data. Instead, we could fill all the
    missing values with a specific value using the `fillna` method, or interpolate
    missing values using the surrounding values using the `interpolate` method.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数pandas例程都能合理处理缺失数据（NaN）。然而，如果确实需要在`DataFrame`中删除或替换缺失数据，则有几种方法可以做到。在本教程中，我们使用`dropna`方法简单地删除了缺失数据的行。作为替代方案，我们可以使用`fillna`方法将所有缺失值填充为特定值，或者使用`interpolate`方法根据周围的值插值缺失值。
- en: More generally, we can use the `replace` method to replace specific (non-NaN)
    values with other values. This method can work with both numeric values and string
    values, including pattern-matching with regex.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 更一般来说，我们可以使用`replace`方法将特定的（非NaN）值替换为其他值。此方法可以同时处理数值和字符串类型的值，包括使用正则表达式进行模式匹配。
- en: The `DataFrame` class has many useful methods. We’ve only covered the very basic
    methods here, but there are two other methods that we should also mention. These
    are the `agg` method and the `merge` method.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`类有许多有用的方法。我们这里只介绍了最基本的方法，但还有另外两个方法也值得提及。这些方法是`agg`方法和`merge`方法。'
- en: The `agg` method aggregates the results of one or more operations over a given
    axis of the `DataFrame` object. This allows us to quickly produce summary information
    for each column (or row) by applying an aggregating function. The output is a
    `DataFrame` that contains the names of the functions applied as the rows, and
    the labels for the chosen axis (column labels, for instance) for the columns.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`agg`方法对给定轴上的一个或多个操作的结果进行聚合。这允许我们通过应用聚合函数快速生成每列（或每行）的汇总信息。输出是一个`DataFrame`，其中包含应用函数的名称作为行，所选轴（例如列标签）的标签作为列。'
- en: 'The `merge` method performs a SQL-like join over two DataFrames. This will
    produce a new `DataFrame` that contains the result of the join. Various parameters
    can be passed to the `how` keyword argument to specify the type of merge to be
    performed, with the default being `inner`. The name of the column or index over
    which to perform the join should be passed to either the `on` keyword argument
    – if both `DataFrame` objects contain the same key – or to `left_on` and `right_on`.
    Here is a very simple example of a merge on DataFrames:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`merge`方法在两个DataFrame之间执行类似SQL的连接操作。这将生成一个新的`DataFrame`，包含连接操作的结果。可以通过`how`关键字参数指定要执行的连接类型，默认是`inner`。连接操作的列名或索引应通过`on`关键字参数传递——如果两个`DataFrame`对象包含相同的键——或者通过`left_on`和`right_on`传递。以下是一个简单的DataFrame连接示例：'
- en: '[PRE45]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'This will produce a `DataFrame` that contains rows with `label`, `data1`, and
    `data2` corresponding to the rows from `df1` and `df2` that share the same label.
    Let’s print the three DataFrames to see the result:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成一个包含`label`、`data1`和`data2`的`DataFrame`，这些数据对应于`df1`和`df2`中具有相同标签的行。我们打印这三个DataFrame来查看结果：
- en: '[PRE46]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Here, you can see that each combination of `data1` and `data2` values from `df1`
    and `df2`, respectively, with matching labels, have a row in `df3`. Moreover,
    the row with label `D` from `df2` is not used since there is no row with label
    `D` in `df1`.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到每一组来自`df1`和`df2`的`data1`和`data2`值组合，配有相应的标签，都会有一行出现在`df3`中。此外，`df2`中标签为`D`的行未被使用，因为`df1`中没有标签为`D`的行。
- en: Plotting data from a DataFrame
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制来自DataFrame的数据
- en: As with many mathematical problems, one of the first steps to finding some way
    to visualize the problem and all the information is to formulate a strategy. For
    data-based problems, this usually means producing a plot of the data and visually
    inspecting it for trends, patterns, and the underlying structure. Since this is
    such a common operation, pandas provides a quick and simple interface for plotting
    data in various forms, using Matplotlib under the hood by default, directly from
    a `Series` or `DataFrame`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 正如许多数学问题一样，找到一种可视化问题和所有信息的方法的第一步通常是制定策略。对于数据相关问题，这通常意味着生成数据的图表，并通过目视检查来寻找趋势、模式和潜在结构。由于这是一个常见的操作，pandas提供了一个快速简单的接口，用于直接从`Series`或`DataFrame`绘制数据，默认情况下使用Matplotlib作为后台。
- en: In this recipe, we will learn how to plot data directly from a `DataFrame` or
    `Series` to understand the underlying trends and structure.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何直接从`DataFrame`或`Series`绘制数据，以理解其背后的趋势和结构。
- en: Getting ready
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will need the pandas library imported as `pd`, the NumPy
    library imported as `np`, the Matplotlib `pyplot` module imported as `plt`, and
    a default random number generator instance created using the following commands:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们将需要导入`pandas`库（作为`pd`），`NumPy`库（作为`np`），`Matplotlib`的`pyplot`模块（作为`plt`），并使用以下命令创建默认的随机数生成器实例：
- en: '[PRE47]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: How to do it...
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to create a simple `DataFrame` using random data and produce
    plots of the data it contains:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤，使用随机数据创建一个简单的`DataFrame`并绘制其包含的数据图表：
- en: 'Create a sample `DataFrame` using random data:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用随机数据创建一个示例`DataFrame`：
- en: '[PRE48]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Next, we have to create a blank figure with two subplots ready for plotting:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要创建一个空白图形，包含两个子图以备绘制：
- en: '[PRE54]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'We have to plot the `walk` column as a standard line graph. This can be done
    by using the `plot` method on the `Series` (column) object without additional
    arguments. We will force the plotting on `ax1` by passing the `ax=ax1` keyword
    argument:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要将`walk`列绘制为标准的折线图。这可以通过在`Series`（列）对象上使用`plot`方法，且不需要额外的参数来完成。我们将通过传递`ax=ax1`关键字参数强制在`ax1`上绘制：
- en: '[PRE55]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Now, we have to plot a histogram of the `diffs` column by passing the `kind="hist"`
    keyword argument to the `plot` method:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要通过将`kind="hist"`关键字参数传递给`plot`方法，绘制`diffs`列的直方图：
- en: '[PRE58]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The resulting plots are shown here:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 结果图形如下所示：
- en: '![Figure 6.1 – Plot of the walk value and a histogram of differences from a
    DataFrame'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.1 – 来自DataFrame的行走值和差异的直方图'
- en: '](img/6.1.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/6.1.jpg)'
- en: Figure 6.1 – Plot of the walk value and a histogram of differences from a DataFrame
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – 来自DataFrame的行走值和差异的直方图
- en: Here, we can see that the histogram of differences approximates a standard normal
    distribution (mean 0 and variance 1). The random walk plot shows the cumulative
    sum of the differences and oscillates (fairly symmetrically) above and below 0.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到，差异的直方图接近标准正态分布（均值0，方差1）。随机游走图展示了差异的累计和，并且围绕0上下摆动（相当对称）。
- en: How it works...
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `plot` method on a `Series` (or a `DataFrame`) is a quick way to plot the
    data it contains against the row index. The `kind` keyword argument is used to
    control the type of plot that is produced, with a line plot being the default.
    There are lots of options for the plotting type, including `bar` for a vertical
    bar chart, `barh` for a horizontal bar chart, `hist` for a histogram (also seen
    in this recipe), `box` for a box plot, and `scatter` for a scatter plot. There
    are several other keyword arguments to customize the plot that it produces. In
    this recipe, we also provided the `title` keyword argument to add a title to each
    subplot.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`（或`DataFrame`）上的`plot`方法是一种快速的方式，用于将其包含的数据与行索引进行绘制。`kind`关键字参数用于控制绘制的图表类型，默认情况下是折线图。还有许多绘图类型的选项，包括`bar`用于垂直条形图，`barh`用于水平条形图，`hist`用于直方图（在本教程中也有提到），`box`用于箱线图，`scatter`用于散点图。还有其他几个关键字参数可用于自定义生成的图表。在本教程中，我们还提供了`title`关键字参数，为每个子图添加标题。'
- en: Since we wanted to put both plots on the same figure side by side using subplots
    that we had already created, we used the `ax` keyword argument to pass in the
    respective axes handles to the plotting routine. Even if you let the `plot` method
    construct a figure, you may still need to use the `plt.show` routine to display
    the figure with certain settings.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们希望将两个图表并排放置在同一图形上，使用之前已创建的子图，因此我们使用 `ax` 关键字参数将相应的坐标轴句柄传递给绘图例程。即使你让 `plot`
    方法构建图形，你可能仍然需要使用 `plt.show` 例程来显示图形并应用某些设置。
- en: There’s more...
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: We can produce several common types of plots using the pandas interface. This
    includes, in addition to those mentioned in this recipe, scatter plots, bar plots
    (horizontal bars and vertical bars), area plots, pie charts, and box plots. The
    `plot` method also accepts various keyword arguments to customize the appearance
    of the plot.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 pandas 接口生成几种常见的图表类型。除了本食谱中提到的图表外，还包括散点图、条形图（水平条形图和垂直条形图）、区域图、饼图和箱型图。`plot`
    方法还接受各种关键字参数，用于自定义图表的外观。
- en: Getting descriptive statistics from a DataFrame
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 DataFrame 获取描述性统计数据
- en: Descriptive statistics, or summary statistics, are simple values associated
    with a set of data, such as the mean, median, standard deviation, minimum, maximum,
    and quartile values. These values describe the location and spread of a dataset
    in various ways. The mean and median are measures of the center (location) of
    the data, and the other values measure the spread of the data from the mean and
    median. These statistics are vital for understanding a dataset and form the basis
    for many techniques for analysis.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 描述性统计数据，或称汇总统计数据，是与一组数据相关的简单值，例如均值、中位数、标准差、最小值、最大值和四分位数。这些值从不同角度描述了数据集的位置和分布。均值和中位数是数据中心（位置）的度量，而其他值衡量数据从均值和中位数的分散程度。这些统计数据对于理解数据集至关重要，并且构成了许多分析技术的基础。
- en: In this recipe, we will learn how to generate descriptive statistics for each
    column in a `DataFrame`.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何为 `DataFrame` 中的每一列生成描述性统计数据。
- en: Getting ready
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we need the pandas package imported as `pd`, the NumPy package
    imported as `np`, the Matplotlib `pyplot` module imported as `plt`, and a default
    random number generator created using the following commands:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本食谱，我们需要导入 pandas 包并命名为 `pd`，导入 NumPy 包并命名为 `np`，导入 Matplotlib 的 `pyplot`
    模块并命名为 `plt`，并通过以下命令创建默认的随机数生成器：
- en: '[PRE61]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: How to do it...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'The following steps show how to generate descriptive statistics for each column
    in a `DataFrame`:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了如何为 `DataFrame` 中的每一列生成描述性统计数据：
- en: 'First, we will create some sample data that we can analyze:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将创建一些示例数据供我们分析：
- en: '[PRE62]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Next, we will plot histograms of the data so that we can understand the distribution
    of the data in the `DataFrame` object:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将绘制数据的直方图，以便了解 `DataFrame` 对象中数据的分布：
- en: '[PRE71]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'To get a proper view of the distribution for the `bimodal` data, we will change
    the number of bins in the histogram to `20`:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了更好地观察 `bimodal` 数据的分布，我们将直方图的箱数更改为 `20`：
- en: '[PRE77]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'pandas `DataFrame` objects have a method for getting several common descriptive
    statistics for each column. The `describe` method creates a new `DataFrame`, where
    the column headers are the same as from the original object and each row contains
    a different descriptive statistic:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: pandas `DataFrame` 对象有一个方法，可以获取每一列的几种常见描述性统计数据。`describe` 方法会创建一个新的 `DataFrame`，该
    `DataFrame` 的列标题与原始对象相同，每一行包含不同的描述性统计数据：
- en: '[PRE79]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'We must also compute the *kurtosis* and add this to the new `DataFrame` object
    we just obtained. We must also print the descriptive statistics to the console
    to see what the values are:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还必须计算 *峰度* 并将其添加到我们刚刚获得的新 `DataFrame` 对象中。我们还必须将描述性统计数据打印到控制台，以查看这些值是什么：
- en: '[PRE80]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Finally, we must add vertical lines to the histograms to illustrate the value
    of the mean in each case:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们必须在直方图中添加垂直线，以显示每种情况下均值的值：
- en: '[PRE92]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'The resulting histograms are shown here:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的直方图如下所示：
- en: '![Figure 6.2 – Histograms of three sets of data with their mean values indicated'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.2 – 三组数据的直方图及其均值标示'
- en: '](img/6.2.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/6.2.jpg)'
- en: Figure 6.2 – Histograms of three sets of data with their mean values indicated
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 三组数据的直方图及其均值标示
- en: Here, we can see that the mean is central to the normally distributed data (middle),
    but for the uniformly distributed data (left), the “mass” of the distribution
    is slightly more biased toward the lower values to the left of the mean. With
    the bimodal day (right), the mean line lies exactly between the two components
    of mass.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到平均值对于正态分布的数据（中间）是中心的，但对于均匀分布的数据（左侧），分布的“质量”稍微偏向于左侧的较低值。对于双峰日（右侧），平均线恰好位于质量的两个组成部分之间。
- en: How it works...
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'The `describe` method returns a `DataFrame` with rows for the following descriptive
    statistics of the data: the count, mean, standard deviation, minimum value, 25%
    quartile, median (50% quartile), 75% quartile, and maximum value. The count is
    fairly self-explanatory, as are the minimum and maximum values. The mean and the
    median are two different *averages* of the data, which roughly represent the central
    value of the data. The definition of the mean should be familiar, as the sum of
    all values divided by the number of values. We can express this quantity using
    the following formula:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`describe` 方法返回一个包含以下数据描述统计的 `DataFrame`：计数、平均值、标准差、最小值、25% 四分位数、中位数（50% 四分位数）、75%
    四分位数和最大值。计数、最小值和最大值都很容易理解。平均值和中位数是数据的两种不同的*平均值*，大致代表数据的中心值。平均值的定义应该很熟悉，即所有值的总和除以值的数量。我们可以用以下公式表示这个数量：'
- en: '![](img/Formula_06_001.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_06_001.png)'
- en: Here, the ![](img/Formula_06_002.png) values represent the data values and ![](img/Formula_06_003.png)
    is the number (count) of values. Here, we also adopt the common notation of the
    bar to represent the mean value. The median is the “middle value” when all the
    data is sorted (taking an average of the two middle values if there is an odd
    number of values). The quartile values at 25% and 75% are similarly defined, but
    taking the value at 25% or 75% of the way through the ordered values. You might
    also think of the minimum as the 0% quartile and the maximum as the 100% quartile.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，![](img/Formula_06_002.png) 值代表数据值，![](img/Formula_06_003.png) 是数值（计数）的数量。在这里，我们还采用了用横线表示平均值的常见符号。中位数是当所有数据排序时的“中间值”（如果值的数量为奇数，则取两个中间值的平均值）。25%
    和 75% 处的四分位数同样定义，但是取有序值的25%或75%处的值。你也可以将最小值视为0%四分位数，最大值视为100%四分位数。
- en: '**Standard deviation** is a measure of the spread of the data from the mean
    and is related to another quantity that is frequently mentioned in statistics:
    the **variance**. The variance is the square of the standard deviation and is
    defined as follows:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '**标准差**是数据与平均值之间的分布范围的度量，与统计学中经常提到的另一个量**方差**有关。方差是标准差的平方，定义如下：'
- en: '![](img/Formula_06_004.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_06_004.png)'
- en: You might also see ![](img/Formula_06_005.png) appear in the fraction here,
    which is a correction for **bias** when estimating population parameters from
    a sample. We will discuss population parameters and their estimation in the next
    recipe. The standard deviation, variance, quartiles, and maximum and minimum values
    describe the spread of the data. For example, if the maximum value is 5, the minimum
    value is 0, the 25% quartile is 2, and the 75% quartile is 4, then this indicates
    that most (at least 50% of the values, in fact) of the data is concentrated between
    2 and 4.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里你可能也会看到分数中出现的![](img/Formula_06_005.png)，这是在从样本估计总体参数时对**偏差**的校正。我们将在下一个示例中讨论总体参数及其估计。标准差、方差、四分位数、最大值和最小值描述了数据的分布。例如，如果最大值为5，最小值为0，25%四分位数为2，75%四分位数为4，则表示大部分（实际上至少50%的值）的数据集中在2和4之间。
- en: The *kurtosis* is a measure of how much the data is concentrated in the “tails”
    of the distribution (far from the mean). This is not as common as the other quantities
    we have discussed in this recipe, but it does appear in some analyses. We have
    included it here mostly as a demonstration of how to compute summary statistic
    values that do not appear in the `DataFrame` object returned from the `describe`
    method using the appropriately named method – here, `kurtosis`. There are, of
    course, separate methods for computing the mean (`mean`), standard deviation (`std`),
    and the other quantities from the `describe` method.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '*峰度*是衡量数据在分布的“尾部”（远离均值的地方）集中程度的指标。这种指标不像我们在本教程中讨论的其他量那样常见，但它确实在某些分析中会出现。我们在这里主要是为了演示如何计算在`describe`方法返回的`DataFrame`对象中未出现的汇总统计量——这里是`kurtosis`方法。对于计算均值（`mean`）、标准差（`std`）以及`describe`方法中的其他量，当然也有单独的方法。'
- en: Note
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When pandas computes the quantities described in this recipe, it will automatically
    ignore any “missing values” represented by NaN. This will also be reflected in
    the count reported in the descriptive statistics.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 当pandas计算本教程中描述的各项量时，它会自动忽略任何由NaN表示的“缺失值”。这也会反映在描述性统计中报告的计数中。
- en: There’s more...
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The third dataset that we included in our statistics illustrates the importance
    of looking at the data to make sure the values we have calculated make sense.
    Indeed, we compute the mean as approximately `2.9`, but looking at the histogram,
    it is clear that most of the data is relatively far from this value. We should
    always check whether the summary statistics that we calculate give an accurate
    summary of the data in our sample. Simply quoting the mean might give an inaccurate
    representation of the sample.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在统计中包含的第三个数据集说明了观察数据的重要性，以确保我们计算的数值合理。事实上，我们计算出的均值约为`2.9`，但从直方图来看，显然大多数数据远离这个值。我们应该始终检查我们计算的汇总统计量是否能准确地反映样本数据的特征。仅仅引用均值可能会对样本产生不准确的描述。
- en: Understanding a population using sampling
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用抽样理解总体
- en: One of the central problems in statistics is to make estimations – and quantify
    how good these estimations are – of the distribution of an entire population given
    only a small (random) sample. A classic example is to estimate the average height
    of all the people in a country when measuring the height of a randomly selected
    sample of people. These kinds of problems are particularly interesting when the
    true population distribution, by which we usually mean the mean of the whole population,
    cannot feasibly be measured. In this case, we must rely on our knowledge of statistics
    and a (usually much smaller) randomly selected sample to estimate the true population
    mean and standard deviation, and also quantify how good our estimations are. It
    is the latter that is the source of confusion, misunderstanding, and misrepresentation
    of statistics in the wider world.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 统计学中的一个核心问题是进行估计——并量化这些估计的准确性——即在只有一个小（随机）样本的情况下，估计整个总体的分布。一个经典的例子是估计一个国家所有人群的平均身高，方法是测量一个随机选取的人的身高。这类问题在真实的总体分布无法实测时特别有趣，通常我们指的总体均值就是指整体人口的均值。在这种情况下，我们必须依赖统计学知识和一个（通常要小得多的）随机选取的样本来估计总体的真实均值和标准差，同时也量化我们估计的准确性。正是后者导致了公众对统计学的困惑、误解和错误解读。
- en: In this recipe, we will learn how to estimate the population mean and give a
    **confidence interval** for these estimates.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何估算总体均值，并为这些估算提供**置信区间**。
- en: Getting ready
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we need the pandas package imported as `pd`, the `math` module
    from the Python standard library, and the SciPy `stats` module, imported using
    the following command:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们需要导入`pandas`包并使用别名`pd`，导入Python标准库中的`math`模块，并导入SciPy的`stats`模块，使用以下命令：
- en: '[PRE98]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Let’s learn how to construct confidence intervals using the statistical routines
    from SciPy.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何使用SciPy的统计函数构建置信区间。
- en: How to do it...
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the following steps, we will give an estimation of the mean height of males
    in the United Kingdom, based on a randomly selected sample of 20 people:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，我们将基于随机选取的20人的样本，估算英国男性的平均身高：
- en: 'First, we must load our sample data into a pandas `Series`:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须将样本数据加载到pandas `Series`中：
- en: '[PRE99]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'Next, we must compute the sample mean and standard deviation:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们必须计算样本的均值和标准差：
- en: '[PRE104]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Then, we must compute the **standard error**, as follows:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们必须计算**标准误差**，如下所示：
- en: '[PRE108]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'We must compute the **critical values** for the confidence values we desire
    from the student t distribution:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须从学生t分布中计算出我们希望的置信度所需的**临界值**：
- en: '[PRE110]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'Now, we can compute the 95% and 99% confidence intervals for the true population
    mean using the following code:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用以下代码计算真实总体均值的95%和99%置信区间：
- en: '[PRE111]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: How it works...
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The key to parameter estimation is normal distribution, which we discussed in
    [*Chapter 4*](B19085_04.xhtml#_idTextAnchor138), *Working with Randomness and
    Probability*. If we find the critical value of ![](img/Formula_06_006.png) for
    which the probability that a standard, normally distributed random number lies
    below this value ![](img/Formula_06_007.png) is 97.5%, then the probability that
    such a number lies between the values of ![](img/Formula_06_008.png) and ![](img/Formula_06_009.png)
    is 95% (2.5% in each tail). This critical value of ![](img/Formula_06_010.png)
    turns out to be 1.96, rounded to 2 decimal places. That is, we can be 95% sure
    that the value of a standard normally distributed random number lies between ![](img/Formula_06_011.png)
    and ![](img/Formula_06_012.png). Similarly, the critical value of 99% confidence
    is 2.58 (rounded to 2 decimal places).
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 参数估计的关键是正态分布，我们在[*第4章*](B19085_04.xhtml#_idTextAnchor138)《与随机性和概率打交道》中讨论过它。如果我们找到标准正态分布的临界值！[](img/Formula_06_006.png)，使得一个标准正态分布随机数小于该值的概率为97.5%，那么该随机数位于！[](img/Formula_06_008.png)和！[](img/Formula_06_009.png)之间的概率为95%（每尾2.5%）。这个临界值！[](img/Formula_06_010.png)的结果是1.96，保留到小数点后两位。也就是说，我们可以95%确定一个标准正态分布随机数的值介于！[](img/Formula_06_011.png)和！[](img/Formula_06_012.png)之间。类似地，99%置信度的临界值是2.58（保留到小数点后两位）。
- en: If our sample is “large,” we could invoke the `stats.t.ppf` routine from the
    SciPy `stats` module.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的样本是“大的”，我们可以调用SciPy `stats`模块中的`stats.t.ppf`例程。
- en: The student t distribution is related to the normal distribution but has a parameter
    – the degree of freedom – that changes the shape of the distribution. As the number
    of degrees of freedom increases, the student t distribution will look more and
    more like a normal distribution. The point at which you consider the distributions
    to be sufficiently similar depends on your application and your data. A general
    rule of thumb says that a sample size of 30 is sufficient to invoke the central
    limit theorem and simply use the normal distribution, but it is by no means a
    good rule. You should be very careful when making deductions based on a sample,
    especially if the sample is very small compared to the total population.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 学生t分布与正态分布相关，但它有一个参数——自由度——改变分布的形态。随着自由度的增加，学生t分布将越来越像正态分布。你认为分布足够相似的临界点取决于你的应用和数据。一个常见的经验法则是样本量为30时，可以调用中心极限定理，直接使用正态分布，但这并不一定是一个好规则。你在基于样本做出推论时要非常小心，尤其是当样本相对于总体来说非常小的时候。
- en: Once we have the critical values, the confidence interval for the true population
    mean can be computed by multiplying the critical value by the standard error of
    the sample and adding and subtracting this from the sample mean. The standard
    error is an approximation of the spread of the distribution of sample means of
    a given sample size from the true population mean. This is why we use the standard
    error to give the confidence interval for our estimation of the population mean.
    When we multiply the standard error by the critical value taken from the student
    t distribution (in this case), we obtain an estimate of the maximum difference
    between the observed sample mean and the true population mean at the given confidence
    level.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们得到了临界值，就可以通过将临界值乘以样本的标准误差，然后将结果加减到样本均值上来计算真实总体均值的置信区间。标准误差是给定样本量的样本均值分布的扩展的近似值，相对于真实总体均值。这就是为什么我们使用标准误差来提供我们对总体均值估计的置信区间。当我们将标准误差乘以从学生t分布（在此情况下）获得的临界值时，我们得到了观察到的样本均值与真实总体均值之间的最大差异估计值，该差异值对应于给定的置信水平。
- en: In this recipe, that means that we are 95% certain that the mean height of UK
    males lies between 168.7 cm and 175.6 cm, and we are 99% certain that the mean
    height of UK males lies between 167.4 cm and 176.9 cm. Our sample was drawn from
    a population with a mean of 175.3 cm and a standard deviation of 7.2 cm. This
    true mean (175.3 cm) does indeed lie within both of our confidence intervals,
    but only just.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，这意味着我们有 95% 的信心认为英国男性的平均身高位于 168.7 cm 和 175.6 cm 之间，且我们有 99% 的信心认为英国男性的平均身高位于
    167.4 cm 和 176.9 cm 之间。我们的样本来自一个均值为 175.3 cm，标准差为 7.2 cm 的总体。这个真实的均值（175.3 cm）确实位于我们的两个置信区间内，但只是勉强。
- en: See also
  id: totrans-292
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: There is a useful package called `uncertainties` for doing computations involving
    values with some uncertainty attached. See the *Accounting for uncertainty in
    calculations* recipe in [*Chapter 10*](B19085_10.xhtml#_idTextAnchor395), *Improving
    Your Productivity*, for more information.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个非常有用的包叫做 `uncertainties`，用于处理涉及带有不确定性的值的计算。更多信息请参见 [*第10章*](B19085_10.xhtml#_idTextAnchor395)
    中的 *计算中的不确定性处理* 配方，位于 *提高生产力* 一章。
- en: Performing operations on grouped data in a DataFrame
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 `DataFrame` 中对分组数据执行操作
- en: One of the great features of pandas DataFrames is the ability to group the data
    by the values in particular columns. For example, we might group assembly line
    data by the line ID and the shift ID. The ability to operate on this grouped data
    ergonomically is very important since data is often aggregated for analysis but
    needs to be grouped for preprocessing.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: pandas `DataFrame` 的一个重要特性是可以通过特定列中的值对数据进行分组。例如，我们可以按生产线 ID 和班次 ID 对装配线数据进行分组。能够以符合人体工程学的方式对这些分组数据进行操作非常重要，因为数据通常是为了分析而聚合的，但在预处理时需要进行分组。
- en: In this recipe, we will learn how to perform operations on grouped data in a
    `DataFrame`. We’ll also take the opportunity to show how to operate on rolling
    windows of (grouped) data.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何对 `DataFrame` 中的分组数据执行操作。我们还将借此机会展示如何对（分组的）数据的滚动窗口进行操作。
- en: Getting ready
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will need the NumPy library imported as `np`, the Matplotlib
    `pyplot` interface imported as `plt`, and the pandas library imported as `pd`.
    We’ll also need an instance of the default random number generator created as
    follows:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本节，我们需要导入 NumPy 库并命名为 `np`，导入 Matplotlib 的 `pyplot` 接口并命名为 `plt`，还需要导入 pandas
    库并命名为 `pd`。我们还需要如下创建一个默认随机数生成器的实例：
- en: '[PRE121]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'Before we start, we also need to set up the Matplotlib plotting settings to
    change the plotting style in this recipe. We’re going to change the mechanism
    that cycles through the plotting style when multiple plots are produced on the
    same axes, which usually results in different colors. To do this, we’re going
    to change this to produce black lines with different line styles:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们还需要设置 Matplotlib 绘图设置，以便在本节中更改绘图样式。我们将改变在同一坐标轴上生成多个图形时，循环使用的绘图样式机制，这通常会导致不同的颜色。为了实现这一点，我们将其更改为生成黑色线条并使用不同的线条样式：
- en: '[PRE122]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Now, let’s learn how to use the grouping features of pandas DataFrames.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何使用 pandas `DataFrame` 的分组功能。
- en: How to do it...
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to perform operations on grouped data inside
    a pandas `DataFrame`:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤，学习如何在 pandas `DataFrame` 中对分组数据执行操作：
- en: 'First, we need to generate some sample data in a `DataFrame`. For this example,
    we’re going to generate two label columns and one column of numerical data:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要在 `DataFrame` 中生成一些示例数据。对于这个示例，我们将生成两个标签列和一个数值数据列：
- en: '[PRE123]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '[PRE126]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Next, let’s add a new column that consists of the cumulative sum of the `"data"`
    column, grouped by the first label, `"label1"`:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们添加一个新列，该列由按第一个标签 `"label1"` 分组的 `"data"` 列的累积和组成：
- en: '[PRE127]'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'The first five rows of `df` are now as follows:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`df` 的前五行如下：
- en: '[PRE129]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Here, we can see that the `"first_group"` column contains the cumulative sum
    for each of the labels in the `"label1"` column. For instance, the row 0 and row
    1 sums are just the value from the `"data"` column. The new entry in row 2 is
    the sum of the data in row 0 and row 2 since these are the first two rows with
    the label “`C`”.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到 `"first_group"` 列包含了 `"label1"` 列中每个标签的累积和。例如，第 0 行和第 1 行的和只是 `"data"`
    列中的值。第 2 行的新条目是第 0 行和第 2 行数据的总和，因为这两行是第一个带有标签 "`C`" 的行。
- en: 'Now, let’s perform a grouping on both the `"label1"` and `"label2"` columns
    simultaneously:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们对 `"label1"` 和 `"label2"` 列同时进行分组：
- en: '[PRE130]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'Now, we can compute the rolling mean over consecutive entries within each group
    using the `transform` and `rolling` methods on the grouped data:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 `transform` 和 `rolling` 方法在分组数据上计算每组内连续条目的滚动均值：
- en: '[PRE131]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '[PRE133]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE134]'
- en: 'The first five printed rows are as follows:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 前五行打印结果如下：
- en: '[PRE135]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: 'As before, the first few rows all represent different groups, so the values
    in the `"second_group"` column are the same as the corresponding values in the
    `"data"` column. The value in row 4 is the mean of the data values in rows 3 and
    4\. The next five printed rows are those with the label `C`:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前一样，前几行都表示不同的组，因此 `"second_group"` 列中的值与 `"data"` 列中的相应值相同。第 4 行的值是第 3 行和第
    4 行数据值的平均值。接下来的五行是标签为 `C` 的行：
- en: '[PRE136]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Here, we can see the rolling average and cumulative sums more clearly. All but
    the first row have the same labels.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以更清楚地看到滚动平均值和累计和。除了第一行外，其他行的标签都相同。
- en: 'Finally, let’s plot the values of the `"first_group"` column grouped by the
    `"``label1"` column:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，让我们绘制由 `"label1"` 列分组的 `"first_group"` 列的值：
- en: '[PRE137]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '[PRE139]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '[PRE140]'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'The resulting plot is shown in *Figure 6**.3*:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 结果图如 *图 6.3* 所示：
- en: '![Figure 6.3 – Plot of cumulative sums by the label1 group'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.3 – 按 `label1` 组绘制的累计和图'
- en: '](img/6.3.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/6.3.jpg)'
- en: Figure 6.3 – Plot of cumulative sums by the label1 group
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – 按 `label1` 组绘制的累计和图
- en: Here, we can see that each of the groups has produced a distinct line on the
    plot. This is a quick and easy way to produce plots of grouped data from a `DataFrame`.
    (Remember that we changed the default style cycle in the *Getting ready* section
    to make the plot style more distinctive on the page.)
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到每个组在图上都产生了一条不同的线。这是一种快速简便的方法，可以从 `DataFrame` 中绘制分组数据的图。（请记住，在 *准备工作*
    部分中我们更改了默认的样式周期，使得图表风格在页面上更加鲜明。）
- en: How it works...
  id: totrans-338
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `groupby` method creates a proxy for the DataFrame with an index generated
    from the requested columns. We can then perform operations on this proxy object.
    In this case, we used the `cumsum` method to generate the cumulative sum of the
    numerical values in the `"data"` column within each of the groups. We can use
    this approach to generate summary statistics of the grouped data in the same way.
    This is very useful for data exploration.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '`groupby` 方法为 DataFrame 创建了一个代理，其索引是从请求的列中生成的。我们可以在这个代理对象上执行操作。在这种情况下，我们使用
    `cumsum` 方法来生成每个组内 `"data"` 列的累计和。我们可以使用这种方法以相同的方式生成分组数据的汇总统计信息。这对于数据探索非常有用。'
- en: In the second part of this recipe, we grouped by two different label columns
    and computed a rolling average (with window length 2) on each group. Notice that
    we “wrap” this computation using the `transform` method rather than calling `rolling`
    directly on the grouped `DataFrame`. This is so that the result has the correct
    indexing to be put back into `df`. Otherwise, the output of `mean` will inherit
    the grouped index, and we will not be able to put the result into `df`. We used
    the `min_periods` optional argument on `rolling` to make sure that all rows had
    a value. Otherwise, the rows that appeared before the window size would be assigned
    NaN.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱的第二部分，我们根据两个不同的标签列进行了分组，并对每个组计算了滚动平均值（窗口长度为 2）。请注意，我们使用 `transform` 方法“包装”了这个计算，而不是直接在分组的
    `DataFrame` 上调用 `rolling`。这样做是为了确保结果具有正确的索引，可以放回到 `df` 中。否则，`mean` 的输出将继承分组索引，我们将无法将结果放回到
    `df` 中。我们在 `rolling` 上使用了 `min_periods` 可选参数，以确保所有行都有值。否则，窗口大小之前的行将被分配为 NaN。
- en: The final part of this recipe used the `plot` routine on the data grouped by
    `"label1"`. This is a fast and easy way to plot multiple streams of data from
    within the same `DataFrame` object. Unfortunately, it is a little difficult to
    customize the plotting in this case, although it can be done using the `rcparams`
    settings in Matplotlib.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱的最后一部分使用了 `plot` 函数，绘制了按 `"label1"` 分组的数据。这是一种快速简便的方法，可以从同一个 `DataFrame`
    对象中绘制多个数据流。不幸的是，在这种情况下，定制绘图稍显困难，尽管可以通过使用 Matplotlib 中的 `rcparams` 设置来完成。
- en: Testing hypotheses using t-tests
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 t 检验进行假设检验
- en: One of the most common tasks in statistics is to test the validity of a hypothesis
    about the mean of a normally distributed population, given that you have collected
    sample data from that population. For example, in quality control, we might wish
    to test that the thickness of a sheet produced at a mill is 2 mm. To test this,
    we can randomly select sample sheets and measure the thickness to obtain our sample
    data. Then, we can use a `stats` module to compute a t statistic and a ![](img/Formula_06_017.png)
    value. If the ![](img/Formula_06_018.png) value is below 0.05, then we accept
    the null hypothesis with 5% significance (95% confidence). If the ![](img/Formula_06_019.png)
    value is larger than 0.05, then we must reject the null hypothesis in favor of
    our alternative hypothesis.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 统计学中最常见的任务之一是测试一个关于正态分布人口均值的假设有效性，前提是你已经从该人口中收集了样本数据。例如，在质量控制中，我们可能希望检验一个生产厂的板材厚度是否为
    2 毫米。为了进行此测试，我们可以随机选择样本板材并测量其厚度，从而获得样本数据。然后，我们可以使用 `stats` 模块计算 t 统计量和 ![](img/Formula_06_017.png)
    值。如果 ![](img/Formula_06_018.png) 值低于 0.05，则我们以 5% 的显著性水平（95% 的置信度）接受零假设。如果 ![](img/Formula_06_019.png)
    值大于 0.05，则我们必须拒绝零假设，支持替代假设。
- en: In this recipe, we will learn how to use a t-test to test whether the assumed
    population mean is valid given a sample.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将学习如何使用 t 检验来检验给定样本的假设人口均值是否有效。
- en: Getting ready
  id: totrans-345
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe we will need the pandas package imported as `pd` and the SciPy
    `stats` module imported using the following command:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们需要导入 pandas 包并命名为 `pd`，同时导入 SciPy `stats` 模块，使用以下命令：
- en: '[PRE141]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: Let’s learn how to perform t-tests using the SciPy `stats` module.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何使用 SciPy `stats` 模块进行 t 检验。
- en: How to do it...
  id: totrans-349
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to use a t-test to test the validity of a proposed population
    mean given some sample data:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用 t 检验来检验给定一些样本数据的假设人口均值的有效性：
- en: 'First, we must load the data into a pandas `Series`:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须将数据加载到 pandas `Series` 中：
- en: '[PRE142]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '[PRE143]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE143]'
- en: '[PRE144]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE144]'
- en: '[PRE145]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '[PRE146]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE146]'
- en: '[PRE147]'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '[PRE148]'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE149]'
- en: 'Now, let’s set the hypothesized population mean and the significance level
    that we will be testing at:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们设置假设的人口均值和我们将进行检验的显著性水平：
- en: '[PRE150]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '[PRE151]'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'Next, we will use the `ttest_1samp` routine from the SciPy `stats` module to
    generate the t statistic and the ![](img/Formula_06_020.png) value:'
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用 SciPy `stats` 模块中的 `ttest_1samp` 例程来生成 t 统计量和 ![](img/Formula_06_020.png)
    值：
- en: '[PRE152]'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'Finally, let’s test whether the ![](img/Formula_06_020.png) value is smaller
    than the significance level we chose:'
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，让我们测试 ![](img/Formula_06_020.png) 值是否小于我们选择的显著性水平：
- en: '[PRE155]'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '[PRE157]'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE159]'
- en: We can conclude with 95% confidence that the mean of the population from which
    the data was sampled is not equal to 2\. (Given that most of the numbers shown
    in the sample are greater than 2, this isn’t much of a surprise.) We can be very
    confident that this is the case given how small the ![](img/Formula_06_020.png)
    value is here.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以有 95% 的信心得出结论：样本数据来源的人口均值不等于 2（由于样本中大多数数值大于 2，这并不令人惊讶）。鉴于这里的 ![](img/Formula_06_020.png)
    值如此之小，我们可以非常有信心地认为这一点是正确的。
- en: How it works...
  id: totrans-374
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The t statistic is computed using the following formula:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: t 统计量通过以下公式计算：
- en: '![](img/Formula_06_023.png)'
  id: totrans-376
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_06_023.png)'
- en: Here, ![](img/Formula_06_024.png) is the hypothesized mean (from the null hypothesis),
    ![](img/Formula_06_025.png) is the sample mean, ![](img/Formula_06_026.png) is
    the sample standard deviation, and ![](img/Formula_06_027.png) is the size of
    the sample. The t statistic is an estimation of the difference between the observed
    sample mean and the hypothesized population mean, ![](img/Formula_06_028.png),
    normalized by the standard error. Assuming the population is normally distributed,
    the t statistic will follow a t distribution with ![](img/Formula_06_029.png)
    degrees of freedom. Looking at where the t statistic lies within the corresponding
    student t distribution gives us an idea of how likely it is that the sample mean
    we observed came from the population with the hypothesized mean. This is given
    in the form of a ![](img/Formula_06_030.png) value.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，![](img/Formula_06_024.png) 是假设的均值（来自零假设），![](img/Formula_06_025.png) 是样本均值，![](img/Formula_06_026.png)
    是样本标准差，![](img/Formula_06_027.png) 是样本的大小。t 统计量是观察到的样本均值与假设人口均值 ![](img/Formula_06_028.png)
    之间差异的估算值，经过标准误差标准化。如果假设人口呈正态分布，t 统计量将遵循 t 分布，具有 ![](img/Formula_06_029.png) 自由度。通过查看
    t 统计量在相应的学生 t 分布中的位置，我们可以大致了解观察到的样本均值来自假设均值人口的可能性。这个值用 ![](img/Formula_06_030.png)
    来表示。
- en: The ![](img/Formula_06_020.png) value is the probability of observing a more
    extreme value than the sample mean we have observed, given the assumption that
    the population mean is equal to ![](img/Formula_06_032.png). If the ![](img/Formula_06_033.png)
    value is smaller than the significance value we have chosen, then we cannot expect
    the true population mean to be the value, ![](img/Formula_06_034.png), that we
    assumed. In this case, we accept the alternative hypothesis that the true population
    norm is not equal to ![](img/Formula_06_035.png).
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/Formula_06_020.png)值是观察到的样本均值比假设总体均值更极端的概率，前提是假设总体均值等于![](img/Formula_06_032.png)。如果![](img/Formula_06_033.png)值小于我们选择的显著性值，则不能期望真实的总体均值是我们假设的值![](img/Formula_06_034.png)。在这种情况下，我们接受备择假设，认为真实的总体均值不等于![](img/Formula_06_035.png)。'
- en: There’s more...
  id: totrans-379
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: The test that we demonstrated in this recipe is the most basic use of a t-test.
    Here, we compared the sample mean to a hypothesized population mean to decide
    whether it was reasonable that the mean of the whole population is this hypothesized
    value. More generally, we can use t-tests to compare two independent populations
    given samples taken from each using a **two-sample t-test**, or compare the populations
    where data is paired (in some way) using a **paired t-test**. This makes the t-test
    an important tool for a statistician.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方中演示的检验是t检验的最基本应用。在这里，我们将样本均值与假设的总体均值进行比较，以决定整个总体均值是否合理地是这个假设值。更一般来说，我们可以使用t检验来比较两个独立的总体，前提是从每个总体中抽取了样本，使用**双样本t检验**，或者比较数据以某种方式配对的总体，使用**配对t检验**。这使得t检验成为统计学家重要的工具。
- en: Significance and confidence are two concepts that occur frequently in statistics.
    A statistically significant result has a high probability of being correct. In
    many contexts, we consider any result that has a probability of being wrong below
    a certain threshold (usually either 5% or 1%) to be statistically significant.
    Confidence is a quantification of how certain we are about a result. The confidence
    of a result is 1 minus the significance.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 显著性和置信度是统计学中经常出现的两个概念。统计学上显著的结果有很高的正确概率。在许多情况下，我们认为任何错误概率低于某个阈值（通常是5%或1%）的结果都是统计显著的。置信度是我们对结果有多确定的量化表示。结果的置信度是1减去显著性。
- en: Unfortunately, the significance of a result is something that is often misused
    or misunderstood. To say that a result is statistically significant at 5% is to
    say that there is a 5% chance that we have wrongly accepted the null hypothesis.
    That is, if we repeated the same test on 20 other samples from the population,
    we would expect at least one of them to give the opposite result. That, however,
    is not to say that one of them is guaranteed to do so.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，结果的显著性往往被误用或误解。说一个结果在5%的显著性水平上是显著的，意味着我们有5%的概率错误地接受了零假设。换句话说，如果我们对来自总体的20个其他样本重复相同的测试，我们期望至少其中一个样本会给出相反的结果。然而，这并不意味着其中一个样本必然会如此。
- en: High significance indicates that we are more sure that the conclusion we have
    reached is correct, but it is certainly not a guarantee that this is indeed the
    case. The results found in this recipe are evidence for this; the sample that
    we used was drawn from a population with a mean of `2.5` and a standard deviation
    of `0.35`. (Some rounding was applied to the sample after creation, which will
    have altered the distribution slightly.) This is not to say that our analysis
    is wrong, or that the conclusion we reached from our sample is not the right one.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 高显著性表明我们更确定我们得出的结论是正确的，但这并不能保证情况确实如此。这个配方中的结果就是证据；我们使用的样本来自一个均值为`2.5`，标准差为`0.35`的总体。（样本在创建后进行了某些四舍五入处理，这稍微改变了分布。）这并不是说我们的分析是错误的，或者我们从样本中得出的结论不是正确的。
- en: It is important to remember that t-tests are only valid when the underlying
    populations follow a normal distribution, or at least approximately do so. If
    this is not the case, then you might need to use a non-parametric test instead.
    We will discuss this in the *Testing hypotheses for non-parametric* *data* recipe.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要记住，t检验仅在基础总体遵循正态分布，或至少大致符合时才有效。如果不是这种情况，您可能需要使用非参数检验。我们将在*非参数* *数据*假设检验的章节中讨论这一点。
- en: Testing hypotheses using ANOVA
  id: totrans-385
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ANOVA进行假设检验
- en: Suppose we have designed an experiment that tests two new processes against
    the current process and we want to test whether the results of these new processes
    are different from the current process. In this case, we can use **Analysis of
    Variance** (**ANOVA**) to help us determine whether there are any differences
    between the mean values of the three sets of results (for this, we need to assume
    that each sample is drawn from a normal distribution with a common variance).
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们设计了一个实验，测试两个新流程与当前流程的差异，并且我们想要测试这些新流程的结果是否与当前流程不同。在这种情况下，我们可以使用**方差分析**（**ANOVA**）来帮助我们判断三组结果的均值是否存在差异（为此，我们需要假设每个样本来自具有共同方差的正态分布）。
- en: In this recipe, we will learn how to use ANOVA to compare multiple samples with
    one another.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何使用 ANOVA 来比较多个样本之间的差异。
- en: Getting ready
  id: totrans-388
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'For this recipe, we need the SciPy `stats` module. We will also need to create
    a default random number generator instance using the following commands:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们需要使用 SciPy 的 `stats` 模块。我们还需要通过以下命令创建一个默认的随机数生成器实例：
- en: '[PRE160]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: How to do it...
  id: totrans-391
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to perform a (one-way) ANOVA test to test for differences
    between three different processes:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤执行（单因素）ANOVA 检验，以测试三个不同流程之间的差异：
- en: 'First, we will create some sample data, which we will analyze:'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将创建一些样本数据，然后进行分析：
- en: '[PRE161]'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '[PRE162]'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE163]'
- en: 'Next, we will set the significance level for our test:'
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将设置我们检验的显著性水平：
- en: '[PRE164]'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE164]'
- en: 'Then, we will use the `f_oneway` routine from the SciPy `stats` module to generate
    the F-statistic and the ![](img/Formula_06_036.png) value:'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将使用 SciPy `stats` 模块中的 `f_oneway` 例程生成 F 统计量和 ![](img/Formula_06_036.png)
    值：
- en: '[PRE165]'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE165]'
- en: '[PRE166]'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '[PRE167]'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '[PRE168]'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'Now, we must test whether the ![](img/Formula_06_020.png) value is sufficiently
    small to see whether we should accept or reject our null hypothesis that all mean
    values are equal:'
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们必须测试 ![](img/Formula_06_020.png) 值是否足够小，以判断我们是否应接受或拒绝原假设，即所有均值相等：
- en: '[PRE169]'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE169]'
- en: '[PRE170]'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE170]'
- en: '[PRE171]'
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE171]'
- en: '[PRE172]'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE172]'
- en: '[PRE173]'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE173]'
- en: Here, the ![](img/Formula_06_038.png) value is so small (of order ![](img/Formula_06_039.png))
    that the difference is significant not only at 95% confidence (that is, ![](img/Formula_06_040.png))
    but also at 99% confidence (![](img/Formula_06_041.png)).
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，![](img/Formula_06_038.png) 值非常小（在 ![](img/Formula_06_039.png) 级别），因此差异在
    95% 置信度下显著（即，![](img/Formula_06_040.png)），并且在 99% 置信度下也显著（![](img/Formula_06_041.png)）。
- en: How it works...
  id: totrans-411
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: ANOVA is a powerful technique for comparing multiple samples against one another
    simultaneously. It works by comparing the variation in the samples relative to
    the overall variation. ANOVA is especially powerful when comparing three or more
    samples since no cumulative error is incurred from running multiple tests. Unfortunately,
    if ANOVA detects that not all the mean values are equal, then there is no way
    from the test information to determine which sample(s) are significantly different
    from the others. For this, you would need to use an extra test to find the differences.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: ANOVA 是一种强大的技术，可以同时比较多个样本之间的差异。它通过比较样本之间的变异性与总体变异性来工作。ANOVA 在比较三个或更多样本时尤其强大，因为它不会因进行多次检验而产生累积误差。不幸的是，如果
    ANOVA 检测到并非所有均值相等，则无法通过检验信息确定哪些样本之间存在显著差异。为此，您需要使用额外的检验来找出差异。
- en: The `f_oneway` SciPy `stats` module routine performs a one-way ANOVA test –
    the test statistic generated in ANOVA follows an F-distribution. Again, the ![](img/Formula_06_018.png)
    value is the crucial piece of information coming from the test. We accept the
    null hypothesis if the ![](img/Formula_06_030.png) value is less than our predefined
    significance level (in this recipe, 5%) and reject the null hypothesis otherwise.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '`f_oneway` SciPy `stats` 模块中的例程执行单因素方差分析（ANOVA）检验——ANOVA 中生成的检验统计量遵循 F 分布。再次强调，![](img/Formula_06_018.png)
    值是检验中最关键的信息。如果 ![](img/Formula_06_030.png) 值小于我们预先设定的显著性水平（在本食谱中为 5%），我们接受原假设；否则拒绝原假设。'
- en: There’s more...
  id: totrans-414
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: The ANOVA method is very flexible. The one-way ANOVA test that we presented
    here is the most simple case as there is only a single factor to test. A two-way
    ANOVA test can be used to test for differences between two different factors.
    This is useful in clinical trials of medicines, for example, where we test against
    a control measure but also measure the effects of gender (for instance) on the
    outcomes. Unfortunately, SciPy does not have a routine for performing two-way
    ANOVA in the `stats` module. You will need to use an alternative package, such
    as the `statsmodels` package.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: ANOVA 方法非常灵活。我们在这里介绍的一元 ANOVA 检验是最简单的情况，因为这里只有一个因子需要检验。二元 ANOVA 检验可以用来检验两个不同因子之间的差异。例如，在药物临床试验中，我们可以进行对照组的测试，同时还衡量性别（例如）对结果的影响。不幸的是，SciPy
    在 `stats` 模块中没有执行二元 ANOVA 的例程。你需要使用其他包，如 `statsmodels` 包。
- en: As mentioned previously, ANOVA can only detect whether there are differences.
    It cannot detect where these differences occur if there are significant differences.
    For example, we can use Durnett’s test to test whether the other sample’s mean
    values differ from a control sample, or Tukey’s range test to test each group’s
    mean against every other group’s mean.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，ANOVA 只能检测是否存在差异。如果存在显著差异，它无法检测这些差异发生在哪里。例如，我们可以使用 Durnett 检验来测试其他样本的均值是否与对照样本的均值不同，或者使用
    Tukey 范围检验来测试每个组的均值与其他所有组的均值。
- en: Testing hypotheses for non-parametric data
  id: totrans-417
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 非参数数据的假设检验
- en: 'Both t-tests and ANOVA have a major drawback: the population that is being
    sampled must follow a normal distribution. In many applications, this is not too
    restrictive because many real-world population values follow a normal distribution,
    or some rules, such as the central limit theorem, allow us to analyze some related
    data. However, it is simply not true that all possible population values follow
    a normal distribution in any reasonable way. For these (thankfully, rare) cases,
    we need some alternative test statistics to use as replacements for t-tests and
    ANOVA.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: t 检验和 ANOVA 的一个主要缺点是：所采样的总体必须遵循正态分布。在许多应用中，这并不太具限制性，因为许多实际的总体值遵循正态分布，或者某些定理（例如中心极限定理）允许我们分析相关数据。然而，实际上并非所有的总体值都以合理的方式遵循正态分布。对于这些（幸运的是，较为少见的）情况，我们需要使用一些替代的检验统计量，作为
    t 检验和 ANOVA 的替代方法。
- en: In this recipe, we will use a Wilcoxon rank-sum test and the Kruskal-Wallis
    test to test for differences between two (or more, in the latter case) populations.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 在本方案中，我们将使用 Wilcoxon 秩和检验和 Kruskal-Wallis 检验来检验两个（或更多，在后一种情况下）总体之间的差异。
- en: Getting ready
  id: totrans-420
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will need the pandas package imported as `pd`, the SciPy
    `stats` module, and a default random number generator instance created using the
    following commands:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此方案，我们将需要导入 pandas 包作为 `pd`，SciPy 的 `stats` 模块，以及使用以下命令创建一个默认的随机数生成器实例：
- en: '[PRE174]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: Let’s learn how to use the non-parametric hypothesis testing tools in SciPy
    `stats`.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何使用 SciPy `stats` 中的非参数假设检验工具。
- en: How to do it...
  id: totrans-424
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to compare the populations of two or more populations that
    are not normally distributed:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤比较两个或更多非正态分布的样本：
- en: 'First, we will generate some sample data to use in our analysis:'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将生成一些样本数据来进行分析：
- en: '[PRE175]'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE175]'
- en: '[PRE176]'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE176]'
- en: '[PRE177]'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'Next, we will set the significance level that we will use in this analysis:'
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将设定分析中使用的显著性水平：
- en: '[PRE178]'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'Now, we will use the `stats.kruskal` routine to generate the test statistic
    and the ![](img/Formula_06_038.png) value for the null hypothesis that the populations
    have the same median value:'
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用 `stats.kruskal` 例程生成检验统计量和 ![](img/Formula_06_038.png) 值，用于检验原假设，即总体具有相同的中位数值：
- en: '[PRE179]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE179]'
- en: '[PRE180]'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '[PRE181]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '[PRE182]'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE182]'
- en: 'We will use a conditional statement to print a statement about the outcome
    of the test:'
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用条件语句打印测试结果的陈述：
- en: '[PRE183]'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '[PRE184]'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE184]'
- en: '[PRE185]'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE185]'
- en: '[PRE186]'
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE186]'
- en: '[PRE187]'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE187]'
- en: 'Now, we will use Wilcoxon rank-sum tests to obtain the ![](img/Formula_06_033.png)
    values for the comparisons between each pair of samples. The null hypothesis for
    these tests is that they are drawn from the same distribution:'
  id: totrans-443
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用 Wilcoxon 秩和检验获取每对样本比较的 ![](img/Formula_06_033.png) 值。这些检验的原假设是它们来自同一分布：
- en: '[PRE188]'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE188]'
- en: '[PRE189]'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '[PRE190]'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE190]'
- en: 'Next, we will use conditional statements to print out messages for those comparisons
    that indicate a significant difference:'
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用条件语句打印出那些表示显著差异的比较结果：
- en: '[PRE191]'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE191]'
- en: '[PRE192]'
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE192]'
- en: '[PRE193]'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE193]'
- en: '[PRE194]'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE194]'
- en: '[PRE195]'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE195]'
- en: '[PRE196]'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE196]'
- en: '[PRE197]'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE197]'
- en: '[PRE198]'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE198]'
- en: '[PRE199]'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE199]'
- en: '[PRE200]'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE200]'
- en: '[PRE201]'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE201]'
- en: '[PRE202]'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE202]'
- en: '[PRE203]'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE203]'
- en: '[PRE204]'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE204]'
- en: '[PRE205]'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE205]'
- en: '[PRE206]'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE206]'
- en: '[PRE207]'
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE207]'
- en: '[PRE208]'
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE208]'
- en: These printed lines show that our tests have detected significant differences
    between populations A and B and populations A and C, but not between populations
    B and C.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 这些打印出来的线条显示我们的测试发现，A组和B组、A组和C组之间存在显著差异，但B组和C组之间没有差异。
- en: How it works...
  id: totrans-467
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We say that data is non-parametric if the population from which the data was
    sampled does not follow a distribution that can be described by a small number
    of parameters. This usually means that the population is not normally distributed
    but is broader than this. In this recipe, we sampled from uniform distributions,
    but this is still a more structured example than we would generally have when
    non-parametric tests are necessary. Non-parametric tests can and should be used
    in any situation where we are not sure about the underlying distribution. The
    cost of doing this is that the tests are slightly less powerful.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 我们说数据是非参数的，如果数据来源的总体不符合可以通过少量参数描述的分布。这通常意味着总体不是正态分布的，但范围比这更广。在本示例中，我们从均匀分布中抽样，但这仍然是一个比我们通常需要使用非参数检验时更为结构化的例子。非参数检验可以且应该用于任何我们不确定基础分布的情况。这样做的代价是，检验的效力稍微较弱。
- en: The first step of any (real) analysis should be to plot a histogram of the data
    and inspect the distribution visually. If you draw a random sample from a normally
    distributed population, you might also expect the sample to be normally distributed
    (we have seen this several times in this book). If your sample shows the characteristic
    bell curve of a normal distribution, then it is fairly likely that the population
    is itself normally distributed. You might also use a `kind="kde"`. If you still
    aren’t sure whether the population is normal, you can apply a statistical test,
    such as D’Agostino’s K-squared test or Pearson’s Chi-squared test for normality.
    These two tests are combined into a single routine to test for normality called
    `normaltest` in the SciPy `stats` module, along with several other tests for normality.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 任何（真实的）分析的第一步应该是绘制数据的直方图并直观地检查分布。如果你从一个正态分布的总体中抽取随机样本，你也可以预期样本呈正态分布（在本书中我们已经多次看到这一点）。如果你的样本显示出正态分布的特征性钟形曲线，那么该总体很可能是正态分布的。你还可以使用`kind="kde"`。如果你仍然不确定总体是否符合正态分布，可以使用统计检验，例如D'Agostino的K-squared检验或皮尔逊卡方检验来检验正态性。这两种检验被结合成一个名为`normaltest`的常规方法，用于在SciPy的`stats`模块中进行正态性检验，此外还包括其他几种正态性检验。
- en: The Wilcoxon rank-sum test is a non-parametric replacement for a two-sample
    t-test. Unlike the t-test, the rank-sum test does not compare the sample mean
    values to quantify whether the populations have different distributions. Instead,
    it combines the data of the samples and ranks them in order of size. The test
    statistic is generated from the sum of the ranks from the sample with the fewest
    elements. From here, as usual, we generate a ![](img/Formula_06_033.png) value
    for the null hypothesis that the two populations have the same distribution.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: Wilcoxon秩和检验是两样本t检验的非参数替代方法。与t检验不同，秩和检验不是通过比较样本均值来量化总体是否具有不同的分布。相反，它将样本数据合并并按大小排序。检验统计量由样本中元素最少的那一组的秩和生成。从这里开始，像往常一样，我们生成![](img/Formula_06_033.png)值，用于检验两个总体是否具有相同分布的原假设。
- en: The Kruskal-Wallis test is a non-parametric replacement for a one-way ANOVA
    test. Like the rank-sum test, it uses the ranking of the sample data to generate
    a test statistic and ![](img/Formula_06_030.png) values for the null hypothesis
    that all the populations have the same median value. As with one-way ANOVA, we
    can only detect whether all the populations have the same median, not where the
    differences lie. For this, we would have to use additional tests.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: Kruskal-Wallis检验是单因素方差分析（ANOVA）检验的非参数替代方法。与秩和检验类似，它利用样本数据的排序生成检验统计量和![](img/Formula_06_030.png)值，用以检验所有总体的中位数是否相同的原假设。与单因素方差分析一样，我们只能检测所有总体的中位数是否相同，而不能指出差异所在。要做这个，我们还需要使用额外的检验方法。
- en: In this recipe, we used the Kruskal-Wallis test to determine whether there were
    any significant differences between the populations corresponding to our three
    samples. A difference was detected with a ![](img/Formula_06_018.png) value with
    a very small ![](img/Formula_06_020.png) value. We then used rank-sum tests to
    determine where significant differences occur between the populations. Here, we
    found that sample A is significantly different from samples B and C, but B is
    not significantly different from sample C. This is hardly surprising given the
    way that these samples were generated.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们使用了 Kruskal-Wallis 测试来判断我们的三个样本对应的群体之间是否存在显著差异。我们发现了一个差异，具有非常小的 ![](img/Formula_06_020.png)
    值。接着我们使用秩和检验来确定群体之间差异的具体位置。在这里，我们发现样本 A 与样本 B 和 C 有显著差异，但 B 与 C 之间没有显著差异。考虑到这些样本的生成方式，这并不令人惊讶。
- en: Note
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Unfortunately, since we have used multiple tests in this recipe, our overall
    confidence in our conclusions is not as high as we might expect it to be. We performed
    four tests with 95% confidence, which means our overall confidence in our conclusion
    is only approximately 81%. This is because errors aggregate over multiple tests,
    reducing the overall confidence. To correct this, we would have to adjust our
    significance threshold for each test, using the Bonferroni correction (or similar).
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，由于我们在本食谱中使用了多个测试，我们对结论的整体信心并不像我们预期的那样高。我们进行了四次95%置信度的测试，这意味着我们对结论的总体信心只有大约81%。这是因为多次测试的误差会累积，从而降低总体信心。为了解决这个问题，我们需要调整每个测试的显著性阈值，使用
    Bonferroni 校正（或类似方法）。
- en: Creating interactive plots with Bokeh
  id: totrans-475
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Bokeh 创建交互式图表
- en: Test statistics and numerical reasoning are good for systematically analyzing
    sets of data. However, they don’t give us a good picture of the whole set of data
    like a plot would. Numerical values are definitive but can be difficult to understand,
    especially in statistics, whereas a plot instantly illustrates differences between
    sets of data and trends. For this reason, there is a large number of libraries
    for plotting data in even more creative ways. One particularly interesting package
    for producing plots of data is Bokeh, which allows us to create interactive plots
    in the browser by leveraging JavaScript libraries.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 测试统计和数值推理对于系统地分析数据集非常有用。然而，它们并不能像图表那样给我们一个整体数据的清晰图像。数值值是确定性的，但在统计学中往往难以理解，而图表则能立即直观地展示数据集之间的差异和趋势。因此，存在大量的库，可以用更富创意的方式绘制数据。一个特别有趣的数据绘图库是
    Bokeh，它通过利用 JavaScript 库，允许我们在浏览器中创建交互式图表。
- en: In this recipe, we will learn how to use Bokeh to create an interactive plot
    that can be displayed in the browser.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何使用 Bokeh 创建一个可以在浏览器中显示的交互式图表。
- en: Getting ready
  id: totrans-478
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will need the pandas package imported as `pd`, the NumPy
    package imported as `np`, an instance of the default random number generator constructed
    with the following code, and the `plotting` module from Bokeh, which we have imported
    under the `bk` alias:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本食谱，我们需要导入 pandas 包作为 `pd`，导入 NumPy 包作为 `np`，并使用以下代码构造默认的随机数生成器实例，还需要导入 Bokeh
    的 `plotting` 模块，并用 `bk` 别名导入：
- en: '[PRE209]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: How to do it...
  id: totrans-481
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'These steps show how to create an interactive plot in the browser using Bokeh:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤展示了如何使用 Bokeh 在浏览器中创建交互式图表：
- en: 'First, we need to create some sample data to plot:'
  id: totrans-483
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要创建一些样本数据来绘制图表：
- en: '[PRE210]'
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE210]'
- en: '[PRE211]'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE211]'
- en: '[PRE212]'
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE212]'
- en: 'Next, we must specify the output file where the HTML code for the plot will
    be stored by using the `output_file` routine:'
  id: totrans-487
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们必须使用 `output_file` 函数指定一个输出文件，用于存储图表的 HTML 代码：
- en: '[PRE213]'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE213]'
- en: 'Now, we will create a new figure and set the title and axes labels, and set
    the ![](img/Formula_06_050.png)-axis type to `datetime` so that our date index
    will be correctly displayed:'
  id: totrans-489
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个新的图形，并设置标题和坐标轴标签，同时将 ![](img/Formula_06_050.png) 轴类型设置为 `datetime`，以便我们的日期索引能够正确显示：
- en: '[PRE214]'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE214]'
- en: '[PRE215]'
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE215]'
- en: '[PRE216]'
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE216]'
- en: '[PRE217]'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE217]'
- en: 'We will add the data to the figure as a line:'
  id: totrans-494
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将数据作为一条线添加到图形中：
- en: '[PRE218]'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE218]'
- en: 'Finally, we can use either the `show` routine or the `save` routine to save
    or update the HTML in the specified output file. We are using `show` here to cause
    the plot to open in the browser:'
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们可以使用 `show` 函数或 `save` 函数来保存或更新指定输出文件中的 HTML。在这里我们使用 `show` 来使图表在浏览器中打开：
- en: '[PRE219]'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE219]'
- en: 'Bokeh plots are not static objects and are supposed to be interactive via the
    browser. The data as it will appear in the Bokeh plot has been recreated here,
    using `matplotlib` for comparison:'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: Bokeh图表不是静态对象，应该通过浏览器进行交互。为了进行比较，这里使用`matplotlib`重新创建了Bokeh图表中将显示的数据：
- en: '![Figure 6.4 – Plot of time series data created using Matplotlib'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.4 – 使用Matplotlib创建的时间序列数据图](img/6.4.jpg)'
- en: '](img/6.4.jpg)'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: '[图6.4 – 使用Matplotlib创建的时间序列数据图](img/6.4.jpg)'
- en: Figure 6.4 – Plot of time series data created using Matplotlib
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 – 使用Matplotlib创建的时间序列数据图
- en: The real power of Bokeh is its ability to insert dynamic, interactive plots
    into web pages and documents (for example, Jupyter notebooks) so that the reader
    can look into the detail of the data that is plotted.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: Bokeh的真正优势在于其能够将动态、交互式的图表插入到网页和文档中（例如，Jupyter笔记本），这样读者就可以深入查看绘制数据的细节。
- en: How it works...
  id: totrans-503
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Bokeh uses a JavaScript library to render a plot in a browser, using data provided
    by the Python backend. The advantage of this is that it can generate plots that
    a user can inspect for themselves. For instance, we can zoom in to see detail
    in the plot that might otherwise be hidden, or pan through the data naturally.
    The example given in this recipe is just a taster of what is possible using Bokeh.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: Bokeh使用JavaScript库在浏览器中渲染图表，数据由Python后端提供。这样做的优点是，用户可以自行检查图表。例如，我们可以放大以查看可能隐藏的图表细节，或自然地平移数据。此食谱中给出的示例只是使用Bokeh可以实现的功能的一个尝试。
- en: The `figure` routine creates an object representing the plot, which we add elements
    to – such as a line through the data points – in the same way that we would add
    plots to a Matplotlib `Axes` object. In this recipe, we created a simple HTML
    file that contains JavaScript code to render the data. This HTML code is dumped
    to the specified file whenever we save or, as is in the recipe, call the `show`
    routine. In practice, the smaller the ![](img/Formula_06_033.png) value, the more
    confident we can be that the hypothesized population mean is correct.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '`figure`例程创建一个表示图表的对象，我们向其中添加元素——例如，通过数据点的线——就像我们在Matplotlib `Axes`对象中添加图表一样。在这个食谱中，我们创建了一个简单的HTML文件，其中包含JavaScript代码来渲染数据。每次保存或调用`show`例程时，这段HTML代码会被导出到指定文件。实际上，![](img/Formula_06_033.png)值越小，我们就越能确信假设的总体均值是正确的。'
- en: There’s more...
  id: totrans-506
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: The capabilities of Bokeh go far beyond what is described here. Bokeh plots
    can be embedded in files such as Jupyter notebooks, which are also rendered in
    the browser, or into existing websites. If you are using a Jupyter notebook, you
    should use the `output_notebook` routine instead of the `output_file` routine
    to print the plot directly into the notebook. It has a wide array of different
    plotting styles, supports sharing data between plots (data can be selected in
    one plot and highlighted in the other(s), for example), and supports streaming
    data.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: Bokeh的功能远远超出了这里的描述。Bokeh图表可以嵌入到诸如Jupyter笔记本之类的文件中，而这些文件也会在浏览器中渲染，或者嵌入到现有的网站中。如果你使用的是Jupyter笔记本，应该使用`output_notebook`例程，而不是`output_file`例程，将图表直接打印到笔记本中。它具有多种不同的绘图样式，支持在图表之间共享数据（例如，数据可以在一个图表中选择并在其他图表中突出显示），并支持流数据。
- en: Further reading
  id: totrans-508
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'There are a large number of textbooks on statistics and statistical theory.
    The following books are good references for the statistics covered in this chapter:'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 统计学和统计理论方面有大量的教材。以下书籍是本章所涉及的统计学内容的良好参考：
- en: 'Mendenhall, W., Beaver, R., and Beaver, B. (2006), *Introduction To Probability
    And Statistics*. 12th ed., (Belmont, Calif.: Thomson Brooks/Cole).'
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mendenhall, W., Beaver, R., 和 Beaver, B.（2006年），*概率与统计导论*。第12版，（加利福尼亚州贝尔蒙特：Thomson
    Brooks/Cole）。
- en: 'Freedman, D., Pisani, R., and Purves, R. (2007), *Statistics*. New York: W.W.
    Norton.'
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Freedman, D., Pisani, R., 和 Purves, R.（2007年），*统计学*。纽约：W.W. Norton。
- en: 'The pandas documentation ([https://pandas.pydata.org/docs/index.html](https://pandas.pydata.org/docs/index.html))
    and the following pandas book serve as good references for working with pandas:'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: pandas文档（[https://pandas.pydata.org/docs/index.html](https://pandas.pydata.org/docs/index.html)）和以下的pandas书籍是学习pandas的好参考：
- en: 'McKinney, W., (2017), *Python for Data Analysis*. 2nd ed., (Sebastopol: O’Reilly
    Media, Inc, US).'
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: McKinney, W.（2017年），*Python数据分析*。第二版，（Sebastopol：O'Reilly Media, Inc，美国）。
- en: The SciPy documentation ([https://docs.scipy.org/doc/scipy/tutorial/stats.html](https://docs.scipy.org/doc/scipy/tutorial/stats.html))
    also contains detailed information about the statistics module that was used several
    times in this chapter.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy 文档 ([https://docs.scipy.org/doc/scipy/tutorial/stats.html](https://docs.scipy.org/doc/scipy/tutorial/stats.html))
    还包含了关于本章多次使用的统计模块的详细信息。
