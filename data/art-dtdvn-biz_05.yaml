- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Selecting the Optimal Price with Price Demand Elasticity
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用价格需求弹性选择最佳价格
- en: Price elasticity of demand measures how much a product’s consumption changes
    in response to price changes. A good is elastic if a price adjustment results
    in a significant shift in either supply or demand. If a price adjustment for the
    goods does not significantly affect demand or supply, it is inelastic. The elasticity
    of a product is impacted by the accessibility of an alternative. Demand won’t
    change as the price increases if the product is necessary and there are no suitable
    alternatives, making it inelastic.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 需求的价格弹性衡量的是产品消费量对价格变化的响应程度。如果价格调整导致供给或需求发生显著变化，则商品是有弹性的。如果商品的价格调整对需求或供给没有显著影响，则其为无弹性。产品的弹性受替代品可获得性的影响。如果该产品是必需品且没有合适的替代品，价格上涨时需求不会改变，从而使其具有无弹性。
- en: 'In this chapter, we will learn about the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下内容：
- en: What is price elasticity and how it can be used to maximize revenue?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是价格弹性，如何利用它来最大化收入？
- en: Exploring the data to determine pricing patterns and consumer behavior around
    them
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索数据以确定定价模式及其周围的消费者行为
- en: Determining the demand curve for different products
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定不同产品的需求曲线
- en: Optimizing the price to maximize revenue for all items
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化价格以最大化所有商品的收入
- en: In this case, we will use food truck sales data to analyze the impact of different
    pricing strategies.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们将使用餐车销售数据来分析不同定价策略的影响。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In order to be able to follow the steps in this chapter, you will need to meet
    the next requirements:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够跟随本章的步骤，你需要满足以下要求：
- en: A Jupyter Notebook instance running Python 3.7 or above. You can also use the
    Google Colab notebook to run the steps if you have a Google Drive account.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个运行 Python 3.7 或更高版本的 Jupyter Notebook 实例。如果你有 Google Drive 账户，也可以使用 Google
    Colab 笔记本来运行这些步骤。
- en: Understanding of basic math and statistical concepts.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解基本的数学和统计学概念。
- en: Understanding price demand elasticity
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解价格需求弹性
- en: The concept of price elasticity is used when trying to explain the responsiveness
    of the number of goods sold to proportional increases in price. This is valuable
    information for managers that need to anticipate how the finance of the company
    will be affected by price rises and cuts.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 价格弹性概念用于解释销售的商品数量对价格上涨或下跌的响应程度。这对于需要预测价格变动如何影响公司财务的经理来说，具有重要价值。
- en: 'Mathematically, it is as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从数学角度来看，其表达式如下：
- en: '![](img/Formula_05_001.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_05_001.png)'
- en: 'Here, each term represents the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，每个术语代表以下内容：
- en: '![](img/Formula_05_002.png): Price elasticity'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/Formula_05_002.png)：价格弹性'
- en: '*Q*: Quantity of the demanded good'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Q*：需求商品的数量'
- en: '![](img/Formula_05_003.png): Variation in the quantity of the demanded good'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/Formula_05_003.png)：需求商品数量的变化'
- en: '*P*: Price of the demanded good'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*P*：需求商品的价格'
- en: '![](img/Formula_05_004.png): Variation in the price of the demanded good'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/Formula_05_004.png)：需求商品价格的变化'
- en: Price elasticity is a measure of how sensitive the quantity required is to price,
    with nearly all goods seeing a fall in demand when prices rise but some seeing
    a greater decline. Price elasticity determines, while holding all other factors
    constant, the percentage change in quantity demanded by a 1% rise in price. When
    the elasticity is -2, the amount demanded decreases by 2% for every 1% increase
    in price. Outside of certain circumstances, price elasticity is negative. When
    a good is described as having an elasticity of 2, it almost invariably indicates
    that the formal definition of that elasticity is -2.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 价格弹性是衡量需求量对价格变化敏感度的指标，几乎所有商品在价格上涨时需求都会下降，但某些商品的需求下降幅度更大。价格弹性在保持其他因素不变的情况下，衡量价格上涨1%时需求量的百分比变化。当弹性为-2时，价格每上涨1%，需求量就会下降2%。在某些特定情况下，价格弹性为负数。当商品的弹性为2时，几乎可以肯定地表明该弹性的正式定义为-2。
- en: The term **more elastic** means that the elasticity of a good is greater, regardless
    of the sign. Two uncommon exceptions to the rule of demand, the Veblen and Giffen
    goods are two groups of goods with positive elasticity. A good’s demand is considered
    to be inelastic when its absolute value of elasticity is less than 1, meaning
    that price changes have a relatively minor impact on the amount demanded. If a
    good’s demand is more elastic than 1, it is considered to be elastic. A good with
    an elastic demand of -2 has a drop-in quantity that is twice as great as its price
    rise, whereas a good with an inelastic demand of -0.5 has a decrease in the quantity
    that is only half as great as the price increase.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**更多弹性**（**more elastic**）意味着商品的弹性更大，无论符号如何。需求法则的两个不常见例外，费布伦商品和吉芬商品，是两类具有正弹性的商品。当商品的需求的弹性绝对值小于1时，需求被认为是缺乏弹性的，意味着价格变化对需求量的影响相对较小。如果商品的需求弹性大于1，则被认为是有弹性的。一种需求弹性为-2的商品，其数量下降是价格上涨的两倍，而需求弹性为-0.5的商品，其数量下降仅为价格上涨的一半。'
- en: When the price is chosen so that the elasticity is exactly 1, revenue is maximized.
    The incidence (or “burden”) of a tax on a good can be predicted using the elasticity
    of the good. To ascertain price elasticity, a variety of research techniques are
    employed, such as test markets, historical sales data analysis, and conjoint analysis.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当价格选择使得弹性恰好为1时，收入最大化。税收对商品的影响（或“负担”）可以通过商品的弹性来预测。为了确定价格弹性，采用了多种研究技术，如测试市场、历史销售数据分析和联合分析。
- en: Exploring the data
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索数据
- en: The experiment’s initial data source is the sales of a food truck outside of
    office buildings. It’s vital to review excessive prices because of the pressure
    on costs. The proprietor of a food truck must be aware of how a price increase
    affects the store’s demand for hamburgers. In other words, to determine how much
    the price can be raised, it is critical to understand the price elasticity of
    demand for the burgers in the store. In actuality, price elasticity measures how
    much a product’s price influences demand.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 实验的初始数据源是位于办公楼外的食品卡车销售情况。由于成本压力，审查过高的价格至关重要。食品卡车的经营者必须了解价格上涨如何影响店内汉堡的需求。换句话说，要确定价格能够提高多少，了解汉堡的价格弹性至关重要。实际上，价格弹性衡量的是产品价格对需求的影响程度。
- en: 'We will use the following Python modules in the next example:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一个示例中使用以下Python模块：
- en: '**Pandas**: A Python package for data analysis and data manipulation.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pandas**：一个用于数据分析和数据处理的Python包。'
- en: '**NumPy**: This is a library that adds support for large, multi-dimensional
    arrays and matrices, along with a large collection of high-level mathematical
    functions to operate on these arrays.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NumPy**：这是一个支持大型多维数组和矩阵的库，并提供大量高层次的数学函数来操作这些数组。'
- en: '**statsmodels**: A Python package that provides a complement to SciPy for statistical
    computations, including descriptive statistics and estimation and inference for
    statistical models. It provides classes and functions for the estimation of many
    different statistical models. It’s a Python package that is used for statistical
    methods and descriptive statistics, as well as other models’ statistical models.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**statsmodels**：一个Python包，提供对SciPy的补充，用于统计计算，包括描述性统计和统计模型的估计与推断。它提供了用于估计多种不同统计模型的类和函数。它是一个用于统计方法和描述性统计的Python包，以及其他模型的统计模型。'
- en: '**Seaborn and Matplotlib**: Python packages for effective data visualization.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Seaborn 和 Matplotlib**：用于有效数据可视化的Python包。'
- en: 'The following block of code will load all the required packages as well as
    load the data and show the first five rows of it:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码块将加载所有所需的包，加载数据并显示数据的前五行：
- en: '[PRE0]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This results in the next DataFrame, showing the data that contains the transactional
    data of items sold by a food truck, along with some other external variables:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生下一个数据框，展示了包含食品卡车销售的商品交易数据以及其他一些外部变量的数据：
- en: '![Figure 5.1: Food truck sales data to be analyzed ](img/B19026_05_1.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图5.1：待分析的食品卡车销售数据](img/B19026_05_1.jpg)'
- en: 'Figure 5.1: Food truck sales data to be analyzed'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1：待分析的食品卡车销售数据
- en: 'The data consists of the following variables:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包含以下变量：
- en: '**SELLER**: Identifier of who sold the item'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SELLER**：销售商品的标识符'
- en: '**CAT**: Variable indicating whether the product was sold by itself (**0**)
    or as part of a combo (**2**)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CAT**：表示商品是单独销售（**0**）还是作为组合的一部分销售（**2**）的变量'
- en: '**ITEM_ID**: Identifier of the item sold'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ITEM_ID**：售出的物品标识符'
- en: '**ITEM_NAME**: Full name of the item'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ITEM_NAME**：物品的全名'
- en: '**DATE**: When the item was sold'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DATE**：物品销售的时间'
- en: '**YEAR**: Year extracted from the date'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YEAR**：从日期中提取的年份'
- en: '**HOLIDAY**: Boolean variable that indicates whether that day was a holiday'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HOLIDAY**：布尔变量，指示当天是否为节假日'
- en: '**WEEKEND**: Boolean variable indicating whether it was a weekend'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WEEKEND**：布尔变量，指示是否为周末'
- en: '**SCHOOLBREAK**: Boolean variable indicating whether it was a school break'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SCHOOLBREAK**：布尔变量，指示是否为学校假期'
- en: '**AVG_TEMPERATURE**: Temperature that day in degrees Fahrenheit'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AVG_TEMPERATURE**：当天的温度（华氏度）'
- en: In the next command, we will run a descriptive statistical analysis, previously
    removing the **ITEM_ID** column, because although this is understood as a numeric
    variable, it represents a categorical dimension.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个命令中，我们将进行描述性统计分析，之前已经删除了**ITEM_ID**列，因为尽管它被理解为一个数值变量，但它代表的是一个分类维度。
- en: '[PRE10]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This results in the following output:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.2: Statistical description summary of the data ](img/B19026_05_2.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.2：数据的统计描述摘要](img/B19026_05_2.jpg)'
- en: 'Figure 5.2: Statistical description summary of the data'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2：数据的统计描述摘要
- en: 'One of the things we are interested to know is the different types of products
    that we will find in the data. In this case, we will just pick the **SELLER**,
    **ITEM_ID**, and **ITEM_NAME** data and remove the duplicates:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们感兴趣的一件事是，我们将在数据中找到的不同类型的产品。在这种情况下，我们将只选择**SELLER**、**ITEM_ID**和**ITEM_NAME**数据，并删除重复项：
- en: '[PRE11]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This results in the following output:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.3: Products that are being sold ](img/B19026_05_3.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.3：正在出售的产品](img/B19026_05_3.jpg)'
- en: 'Figure 5.3: Products that are being sold'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3：正在出售的产品
- en: 'By transforming this data into dummies, we can see that the seller column actually
    shows different combinations of products, some of them being sold alone and some
    of them being sold as combos, such as **4104**, which is a burger and a bottle
    of water:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将这些数据转换为虚拟变量，我们可以看到，卖家列实际上展示了不同的产品组合，其中一些是单独出售的，而另一些是作为组合出售的，例如**4104**，它是一个汉堡和一瓶水：
- en: '[PRE13]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This results in the following output:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.4: Combination of products sold ](img/B19026_05_4.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.4：产品组合销售](img/B19026_05_4.jpg)'
- en: 'Figure 5.4: Combination of products sold'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4：产品组合销售
- en: 'One of the ways that we can use to start exploring the data is by running a
    pair plot. This Seaborn plot allows us to see the distribution of the values,
    as well as the relationship between the variables. It’s really useful if we want
    to be able to see any possible relationship between them at first glance:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们开始探索数据的一种方式是运行配对图。这个Seaborn图可以让我们看到值的分布以及变量之间的关系。如果我们想在第一眼看到它们之间是否存在关系，它非常有用：
- en: '[PRE14]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This results in the following output:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.5: Pair plot of price and quantity ](img/B19026_05_5.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.5：价格与数量的配对图](img/B19026_05_5.jpg)'
- en: 'Figure 5.5: Pair plot of price and quantity'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5：价格与数量的配对图
- en: At a simple glance, we can see that there are many superimposed trends in the
    relationship between price and quantity. We can also see two very distinct groups,
    one placed in the lower-left quadrant and the other in the upper-right quadrant.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一眼看去，我们可以看到价格与数量之间有许多重叠的趋势。我们还可以看到两个非常明显的组，一个位于左下象限，另一个位于右上象限。
- en: 'We can explore the relationship between price and the `CAT` variable to dive
    into these differences using the Seaborn histogram plot and using the `CAT` variable
    as the hue. The next block of code does exactly this, first by creating a `matplotlib`
    figure, which is then populated with the defined histogram. This is useful for
    certain kinds of Seaborn plots that require this setup to define the figure size
    properly:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用Seaborn直方图绘图并将`CAT`变量作为色调，来探讨价格与`CAT`变量之间的关系，进一步分析这些差异。下一段代码正是做了这一点，首先创建了一个`matplotlib`图形，然后用定义好的直方图填充它。这对于某些需要此设置来正确定义图形大小的Seaborn图非常有用：
- en: '[PRE15]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This results in the following output:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.6: Price histogram differentiated by CAT ](img/B19026_05_6.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.6：按CAT区分的价格直方图](img/B19026_05_6.jpg)'
- en: 'Figure 5.6: Price histogram differentiated by CAT'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6：按CAT区分的价格直方图
- en: We can see in the preceding plot that the products that have a `CAT` value of
    **2** are more highly priced than the other ones.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图表中我们可以看到，`CAT`值为**2**的产品价格比其他产品更高。
- en: 'These are the product sold in combos, so this is a reasonable outcome. We can
    keep exploring these price differences by running a new pair plot – this time,
    looking for the relationship between `PRICE`, `QUANTITY`, and `ITEM_NAME`:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些是作为套餐出售的产品，因此这是一个合理的结果。我们可以通过运行新的散点图进一步探索这些价格差异——这次，我们将寻找 `PRICE`、`QUANTITY`
    和 `ITEM_NAME` 之间的关系：
- en: '[PRE18]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This results in the following output:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.7: Price, quantity, and item name pair plot ](img/B19026_05_7.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.7：价格、数量和商品名称的散点图](img/B19026_05_7.jpg)'
- en: 'Figure 5.7: Price, quantity, and item name pair plot'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7：价格、数量和商品名称的散点图
- en: We can see now the differences between the prices of each item in a bit more
    detail. In this case, the burgers have the highest price, and water is the cheapest
    (again, reasonable). What is interesting to see is that for the same items, we
    have different prices, and differences in the number of units being sold.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以更详细地看到每个商品的价格差异。在这个案例中，汉堡是价格最高的，而水是最便宜的（这很合理）。有趣的是，对于相同的商品，我们看到不同的价格，并且销量也有所不同。
- en: We can conclude then that is necessary to analyze the price difference by having
    a clear distinction per item, as we will most likely have different elasticities
    and optimal prices for each one of them.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以得出结论，必须通过对每个商品进行明确区分来分析价格差异，因为我们很可能会对每个商品有不同的需求弹性和最优定价。
- en: 'The next block of code will create a Matplotlib figure of `10` x `6` inches
    and fill it up with a Seaborn histogram plot that will show us the distribution
    of item names per category:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个代码块将创建一个 `10` x `6` 英寸的 Matplotlib 图形，并填充一个 Seaborn 直方图，展示每个类别中商品名称的分布：
- en: '[PRE19]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This results in the following output:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '![Figure 5.8: Histogram of item names per category ](img/B19026_05_8.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.8：每个类别的商品名称直方图](img/B19026_05_8.jpg)'
- en: 'Figure 5.8: Histogram of item names per category'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.8：每个类别的商品名称直方图
- en: From this histogram, we can see that the burger is the only item that belongs
    to category **0**, so that is sold alone. This means that Coke, water, and coffee
    are all sold in a bundle along with a burger. This is useful information, as it
    shows us the way the food truck owner sells their products, thus allowing us to
    think of better ways to price or combine products to be offered to customers.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个直方图中，我们可以看到汉堡是唯一属于 **0** 类别的商品，因此它是单独销售的。这意味着可乐、水和咖啡与汉堡一起作为套餐销售。这是有用的信息，它展示了食品车老板的销售方式，从而帮助我们思考更好的定价或产品组合方式，以提供给客户。
- en: 'The next block of code will filter the data to only contain items that fall
    into `CAT` = `2` and will create a Seaborn relation plot to explain the relationship
    between price and quantity:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个代码块将过滤数据，仅包含 `CAT` = `2` 的商品，并创建一个 Seaborn 关系图来解释价格与销量之间的关系：
- en: '[PRE21]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Figure 5.9: Price versus quality relationship for CAT = 2 items ](img/B19026_05_9.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.9：CAT = 2 商品的价格与质量关系](img/B19026_05_9.jpg)'
- en: 'Figure 5.9: Price versus quality relationship for CAT = 2 items'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9：CAT = 2 商品的价格与质量关系
- en: In the relationship plot shown here, we can see the relationship between price
    and quality in items that belong to the second category, meaning that all of them
    were sold as part of a combo. Besides the outliers, which were priced much higher
    than the rest of the data points, most of the items are within a certain range.
    Although we are looking at several items at the same time, we can see a certain
    relationship by realizing that items that were priced lower were sold in greater
    quantities. Our job will now be to dive into the specifics of these relationships
    at the item level in order to be able to determine the price that will maximize
    the revenue.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里显示的关系图中，我们可以看到属于第二类商品（即作为套餐出售的商品）之间价格和质量的关系。除了那些价格明显高于其他数据点的离群值外，大多数商品的价格都处于某个范围内。虽然我们同时观察了多个商品，但通过意识到价格较低的商品售出数量较多，我们仍然可以看到一定的关系。接下来，我们的任务是深入挖掘这些关系的具体细节，以便能够确定最大化收益的价格。
- en: 'In the next block of code, we will try to capture the changes in price and
    the quantities being sold over time. We will create a new set of data in which
    we will look at the prices and quantities in a normalized way by subtracting the
    mean and dividing it by the range:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个代码块中，我们将尝试捕捉价格和销量随时间变化的情况。我们将创建一个新的数据集，并以标准化的方式查看价格和数量，通过减去均值并除以范围：
- en: '[PRE23]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Once we have normalized the price and quantities on a scale that ranges from
    -1 to 1, we will set `d[''DATE'']` as the index, and finally, apply a rolling
    average to soften the curves, and use the plot method of the pandas DataFrame
    object:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们将价格和数量标准化到-1到1的范围内，我们将把`d['DATE']`设置为索引，最后应用滚动平均来平滑曲线，并使用pandas DataFrame对象的绘图方法：
- en: '[PRE26]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Figure 5.10: Price versus quality relationship over time ](img/B19026_05_10.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.10：价格与质量关系随时间变化](img/B19026_05_10.jpg)'
- en: 'Figure 5.10: Price versus quality relationship over time'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.10：价格与质量关系随时间变化
- en: It is interesting to see that price reductions have always led to increases
    in the quantities being sold. In this case, we can see that the biggest price
    drop was in the first half of 2020, which led to an increase in the quantities
    being sold. The question that we need to ask is whether the amount of revenue
    that was lost by this price reduction has been compensated for by an increase
    in the number of products sold.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，降价始终会导致销售数量的增加。在这种情况下，我们可以看到最大幅度的降价发生在2020年上半年，这导致了销售数量的增加。我们需要问的问题是，这次降价所丧失的收入是否已经通过销量的增加得到了弥补。
- en: 'In the next block of code, we will try to dive into the correlation between
    the different variables and price. To do this, we will use both the `corr()` method
    of the pandas Dataframe, and the NumPy library to create a mask to “cover” the
    repeated values above the diagonal, as well as the `matplotlib` library to create
    a `12` x `12`-inch figure to populate with a Seaborn heat map:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个代码块中，我们将深入探讨不同变量与价格之间的相关性。为此，我们将使用pandas DataFrame的`corr()`方法，以及NumPy库来创建一个掩码，以“遮盖”对角线以上的重复值，还将使用`matplotlib`库创建一个`12`
    x `12`英寸的图形，并用Seaborn热图进行填充：
- en: '[PRE29]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![Figure 5.11: Correlation between variables ](img/B19026_05_11.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.11：变量之间的相关性](img/B19026_05_11.jpg)'
- en: 'Figure 5.11: Correlation between variables'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11：变量之间的相关性
- en: The data shown here gives us an idea of how the variables are correlated. We
    can see that there is a negative correlation between price versus temperature
    (people do not fancy a coffee and a burger combo when it is too hot perhaps),
    positive with a school break (maybe kids also buy products on these days), and
    a negative relationship with the weekend, which might indicate that the location
    of the food truck has less traffic during the weekends.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示的数据给了我们一个关于变量如何相关的概念。我们可以看到价格与温度之间存在负相关关系（也许在天气炎热时人们不太愿意买咖啡和汉堡组合），与学校假期之间有正相关关系（也许孩子们在这些日子里也会购买产品），而与周末之间存在负相关关系，这可能表明食品车的位置在周末的流量较少。
- en: Please take these conclusions with a grain of salt, as we would need to go through
    a case-by-case analysis by item to corroborate these assumptions, and always remember
    the maxima that correlation does not imply causation.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 请谨慎看待这些结论，因为我们需要逐项逐案例分析来验证这些假设，并始终记住最大原则：相关性不代表因果关系。
- en: Now that we have explored the data to understand the price differences for what
    would otherwise have seemed like the same items, as well as to understand how
    this distribution looks, we can try to estimate the demand curve. Knowing the
    demand curve allows us to establish the relationship between price and quantity
    sold, and it’s what we will do in the next section.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经探索了数据，以理解看似相同的商品之间的价格差异，以及了解这种分布的样子，我们可以尝试估算需求曲线。了解需求曲线可以帮助我们建立价格和销售数量之间的关系，这也是我们将在下一节中做的事情。
- en: Finding the demand curve
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找需求曲线
- en: A demand curve in economics is a graph that depicts the relationship between
    the price of a specific good and the amount of that good needed at that price.
    Individual demand curves are used for price-volume interactions between individual
    consumers, while market-wide demand curves are utilized for all consumers (a market
    demand curve).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 经济学中的需求曲线是一个图表，描绘了某种商品的价格与在该价格下所需数量之间的关系。个别需求曲线用于描述个别消费者之间的价格与数量交互，而市场需求曲线则用于描述所有消费者（即市场需求曲线）。
- en: It is generally accepted that the demand curve declines because of the law of
    demand. For the majority of things, demand declines as price rises. This law does
    not apply in several peculiar circumstances. These include speculative bubbles,
    Veblen goods, and Giffen goods, and when prices rise, purchasers are drawn to
    the products.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一般认为需求曲线向下倾斜是由于需求法则的作用。对于大多数商品来说，价格上升时需求下降。但在一些特殊情况下，这一法则并不适用。这些情况包括投机泡沫、费布伦商品和吉芬商品，当价格上涨时，消费者反而更倾向于购买这些商品。
- en: Demand curves are used in combination with supply curves to establish an equilibrium
    price. At this ideal point, both sellers and buyers have achieved a mutual understanding
    of how valuable a good or service really is, which allows us to produce just enough
    to satisfy the demand without shortages or excess.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 需求曲线与供给曲线结合使用，以确定均衡价格。在这一理想点，买卖双方已经达成了对商品或服务实际价值的共识，从而使我们能够生产出足够的商品以满足需求，而不会出现短缺或过剩。
- en: Exploring the demand curve in code
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在代码中探索需求曲线
- en: 'In order to find the demand curve for each one of the items, first, we will
    isolate the data for each item into a separate data frame:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找到每个商品的需求曲线，首先，我们将每个商品的数据隔离到一个单独的数据框中：
- en: 'In the next block of code, we create a DataFrame for `burger_2752` to dive
    into the specifics of the price versus demand relationship of this specific item,
    as we suspect that each item has its own specific demand curve:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一段代码中，我们为 `burger_2752` 创建一个数据框，深入探讨这个特定商品的价格与需求关系，因为我们怀疑每个商品都有其特定的需求曲线：
- en: '[PRE35]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![Figure 5.12: Burger data ](img/B19026_05_12.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.12：汉堡数据](img/B19026_05_12.jpg)'
- en: 'Figure 5.12: Burger data'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12：汉堡数据
- en: 'Once we have isolated the data, we can start to determine the relationship
    between price versus data. To do this, we will use the `statsmodels` package,
    specifically the `"QUANTITY ~ PRICE"` as a parameter to the OLS function. This
    way, the OLS function will interpret `Quantity` as a dependent variable and `Price`
    as the independent variable. We could also pass other variables as dependent but
    for now, we will just focus on `Price`:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们隔离了数据，我们可以开始确定价格与数据之间的关系。为此，我们将使用 `statsmodels` 包，特别是将 `"QUANTITY ~ PRICE"`
    作为 OLS 函数的参数。这样，OLS 函数将 `Quantity` 视为因变量，`Price` 视为自变量。我们也可以传入其他变量作为因变量，但目前我们只关注
    `Price`：
- en: '[PRE38]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Once the model is properly fitted to the data, we can print the slope of the
    relationship as the given item, `price_elasticity`, as well as the other parameters
    on the OLS model:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦模型正确拟合数据，我们可以打印出给定商品的关系斜率，`价格弹性`，以及 OLS 模型的其他参数：
- en: '[PRE39]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '![Figure 5.13: Burger OLS model summary ](img/B19026_05_13.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.13：汉堡 OLS 模型总结](img/B19026_05_13.jpg)'
- en: 'Figure 5.13: Burger OLS model summary'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13：汉堡 OLS 模型总结
- en: One of the ways in which we can analyze the model performance is by looking
    at the regression plots of the intercept and error. These are scatter plots that
    provide us with a sense of the relationship between dependent and independent
    variables in linear regression.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 分析模型表现的一种方法是查看截距和误差的回归图。这些散点图帮助我们理解线性回归中因变量和自变量之间的关系。
- en: 'The next block of code will create a Matplotlib figure of `12` x `8` inches,
    and use `statsmodels` to create the partial regression plot for the model:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一段代码将创建一个尺寸为 `12` x `8` 英寸的 Matplotlib 图形，并使用 `statsmodels` 创建模型的偏回归图：
- en: '[PRE43]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '![Figure 5.14: Burger OLS model partial regression plot ](img/B19026_05_14.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.14：汉堡 OLS 模型偏回归图](img/B19026_05_14.jpg)'
- en: 'Figure 5.14: Burger OLS model partial regression plot'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14：汉堡 OLS 模型偏回归图
- en: 'The next step in our analysis will be to create a function to pack the creation
    of the models, determine the price elasticity, and return the price elasticity
    and the model itself. This function takes the data for each item as a parameter:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们分析的下一步是创建一个函数来打包模型的创建，确定价格弹性，并返回价格弹性和模型本身。该函数以每个商品的数据作为参数：
- en: '[PRE45]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Now that we have defined the function, we will create two dictionaries to store
    the results: one for the elasticities, and the other for the models themselves.
    After this, we will loop over all the unique items in the data, apply the function
    to the subset of data, and finally, store the results for each one of the items:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经定义了函数，我们将创建两个字典来存储结果：一个用于弹性，另一个用于模型本身。之后，我们将遍历数据中所有独特的项目，将函数应用于数据子集，最后存储每个项目的结果：
- en: '[PRE53]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: After running through all the unique items, we can print the results of the
    elasticities for each item.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行所有唯一项之后，我们可以打印每个项目的弹性结果。
- en: '![Figure 5.15: Product items elasticities ](img/B19026_05_15.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.15: 产品项目弹性](img/B19026_05_15.jpg)'
- en: 'Figure 5.15: Product items elasticities'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.15: 产品项目弹性'
- en: Now that we have determined the price elasticities for each item, we can simulate
    the different possible prices and find the point which maximizes revenue.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了每个项目的价格弹性，我们可以模拟不同的可能价格，并找到能够最大化收入的点。
- en: Optimizing revenue using the demand curve
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用需求曲线优化收入
- en: 'Once we have established the relationship between the price and the quantity,
    we can simulate the revenue for each one of the possible prices. To do this, we
    will find the minimum and maximum price for each item, establish a threshold,
    create a range of possible prices, and use the stored model to predict the quantity
    sold. The next step is to determine the total revenue by multiplying the price
    by quantity. It is important to note that in this kind of analysis, it is always
    better to look at the revenue rather than the profit because most of the time,
    we don’t have the data for the cost of each item. We will explore how to do so
    using the following steps:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们建立了价格与数量之间的关系，就可以模拟每一个可能价格的收入。为此，我们将找到每个项目的最低和最高价格，设定一个阈值，创建可能价格的区间，并使用存储的模型来预测销售数量。下一步是通过将价格与数量相乘来确定总收入。需要注意的是，在这种分析中，通常最好查看收入而非利润，因为大多数时候我们没有每个项目的成本数据。我们将通过以下步骤探索如何进行：
- en: 'The next block of code will take the data for `burger_2752`, determine the
    upper and lower price boundaries, create a range using a NumPy range, and finally,
    use the trained model to predict the quantity sold and therefore the revenue:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个代码块将获取`burger_2752`的数据，确定上下价格边界，使用 NumPy 的范围创建一个区间，最后，使用训练好的模型预测销售数量，从而预测收入：
- en: '[PRE62]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '![Figure 5.16: First rows of the predicted revenue for each price ](img/B19026_05_16.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.16: 每个价格下预测的收入的前几行](img/B19026_05_16.jpg)'
- en: 'Figure 5.16: First rows of the predicted revenue for each price'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.16: 每个价格下预测的收入的前几行'
- en: 'To be able to visualize the relationship between the variables, regardless
    of the unit of measure, we will normalize the data variables by subtracting the
    mean and diving by the range. Finally, we will use the plot method to visualize
    the data:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了能够直观地呈现变量之间的关系，无论度量单位如何，我们将通过减去均值并除以范围来标准化数据变量。最后，我们将使用绘图方法来可视化数据：
- en: '[PRE69]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '![Figure 5.17: burger_2752 demand curve ](img/B19026_05_17.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.17: burger_2752 需求曲线](img/B19026_05_17.jpg)'
- en: 'Figure 5.17: burger_2752 demand curve'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.17: burger_2752 需求曲线'
- en: We can see from the demand curve that this item is inelastic, meaning that even
    if the price goes up, more of this kind of product will continue to sell. To get
    a better picture, we will repeat the same exercise for a different item.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 从需求曲线中我们可以看到，这个项目是非弹性的，意味着即使价格上涨，这种产品的销售仍然会继续增加。为了获得更清晰的图像，我们将对另一个项目重复相同的练习。
- en: 'We will use the `coffee` data and repeat the same exercise to visualize the
    demand curve:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用`coffee`数据并重复相同的练习来可视化需求曲线：
- en: '[PRE73]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: By running the preceding code, we can see that the demand curve is concave,
    with a negative elasticity, which means that if the price goes up, fewer units
    will be sold. Although this will create a decrease in revenue due to fewer units
    being sold, it also means that it will increase due to the higher price.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行之前的代码，我们可以看到需求曲线是凹形的，且弹性为负，这意味着如果价格上涨，销售的单位数会减少。虽然这会由于销售单位减少而导致收入下降，但也意味着由于价格上涨，收入会增加。
- en: '![Figure 5.18: coffee_3052 demand curve ](img/B19026_05_18.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.18: coffee_3052 需求曲线](img/B19026_05_18.jpg)'
- en: 'Figure 5.18: coffee_3052 demand curve'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.18: coffee_3052 需求曲线'
- en: Now, we can take this procedure and transform it into a function that can be
    applied to each item’s data to obtain the demand curve, and also determine the
    optimal price.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以将这个过程转换为一个可以应用于每个项目数据的函数，从而获得需求曲线，并确定最优价格。
- en: 'The way in which we can determine the optimal price is quite simple. We just
    need to find the maximum value in the `where` clause, which will return the values
    at which the revenue is highest:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 确定最优价格的方式非常简单。我们只需要在`where`语句中找到最大值，这样就能返回收入最高时的价格：
- en: '[PRE84]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Now that we have the function to determine the maximum profit, we can calculate
    the optimal price for all items and store them in a dictionary:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经有了确定最大利润的函数，我们可以计算所有项目的最优价格并将其存储在一个字典中：
- en: '[PRE85]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: After running this for all of the items in the data, we can determine the parameters
    that will maximize the revenue for the food truck.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在对数据中的所有项目运行此代码后，我们可以确定那些能够最大化食品卡车收入的参数。
- en: '![Figure 5.19: item_6249 demand curve ](img/B19026_05_19.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.19：item_6249 的需求曲线](img/B19026_05_19.jpg)'
- en: 'Figure 5.19: item_6249 demand curve'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.19：item_6249 的需求曲线
- en: We can see for the other two items left to be analyzed that their elasticity
    is also negative, implicating that the higher the price, the lower the number
    of units sold is.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，剩下的另外两个待分析的项目，其弹性也为负值，这意味着价格越高，销售的单位数量就越少。
- en: '![Figure 5.20: item_4273 demand curve ](img/B19026_05_20.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.20：item_4273 的需求曲线](img/B19026_05_20.jpg)'
- en: 'Figure 5.20: item_4273 demand curve'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.20：item_4273 的需求曲线
- en: 'Now that we have the optimal prices, we can print the parameters that lead
    to a maximization of the revenue. The next block of code iterates over the `optimal_price`
    dictionary:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经得到了最优价格，我们可以打印出导致收入最大化的参数。接下来的代码块遍历了 `optimal_price` 字典：
- en: '[PRE91]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '![Figure 5.21: Optimal parameters for each item ](img/B19026_05_21.jpg)'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 5.21：每个项目的最优参数](img/B19026_05_21.jpg)'
- en: 'Figure 5.21: Optimal parameters for each item'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.21：每个项目的最优参数
- en: In this way, we can determine the optimal price, regardless of the item’s characteristics,
    and how much the customers are willing to pay for each item.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们可以确定最优价格，无论项目的特性如何，以及客户愿意为每个项目支付的金额。
- en: Summary
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we dived into the relationship between the price of an item
    and the number of items being sold. We studied that different items have different
    demand curves, which means that in most cases, a higher price leads to the least
    items being sold, but this is not always the case. The relationship between price
    and quantity being sold can be modeled using price elasticity, which gives us
    an idea of how much the number of products being sold will be reduced by a given
    increase in the price.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入探讨了项目价格与销售数量之间的关系。我们研究了不同项目有不同的需求曲线，这意味着在大多数情况下，价格越高，售出的商品数量越少，但并非总是如此。价格与销售数量之间的关系可以通过价格弹性来建模，它能帮助我们了解价格上涨时，商品销售数量会减少多少。
- en: We looked into the food truck sales data in order to determine the best price
    for each one of their items and we discovered that these items have different
    elasticities and that for each item, we can determine the price, which will maximize
    the revenue.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们查看了食品卡车的销售数据，旨在确定每个项目的最佳价格，并发现这些项目具有不同的弹性，对于每个项目，我们可以确定一个价格，该价格将最大化收入。
- en: In the next chapter, we will focus on improving the way we bundle and recommend
    products by looking at how to perform a Market Basket analysis to recommend meaningful
    products that are frequently bought together.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将专注于改进我们捆绑和推荐产品的方式，通过分析市场购物篮来推荐经常一起购买的有意义的产品。
