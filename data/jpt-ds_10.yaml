- en: Optimizing Jupyter Notebooks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化 Jupyter Notebook
- en: Before a Jupyter Notebook is developed you should confront optimizations that
    should occur before the public starts their access. Optimizations cover a gamut
    of options running from language-specific issues (use best practice R coding style)
    to deploying your notebook in a highly available environment.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发 Jupyter Notebook 之前，你应该处理在公众开始访问之前需要进行的优化。这些优化包括从特定语言问题（使用最佳实践的 R 编码风格）到将笔记本部署到高可用环境中的一系列选项。
- en: Deploying notebooks
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署笔记本
- en: A Jupyter Notebook is a website. You could host a website on the computer that
    you are using to display this document. There may be a machine available in your
    department that is in use as a web server.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 是一个网站。你可以在用来显示此文档的计算机上托管网站。你所在部门可能有一台机器正在用作 Web 服务器。
- en: If you were to deploy on a local machine you would have a single user website
    where additional users would be blocked from access or would collide with each
    other. The first step towards publishing your notebook involves using a hosting
    service that provides multiple user access.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在本地机器上进行部署，你将拥有一个单用户网站，其他用户将被阻止访问，或者会发生冲突。发布笔记本的第一步是使用提供多用户访问的托管服务。
- en: Deploying to JupyterHub
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到 JupyterHub
- en: The predominant Jupyter hosting product currently is JupyterHub. To be clear,
    JupyterHub is installed into a machine under your control. It provides multi-user
    access to your notebooks. This means you could install JupyterHub on a machine
    in your environment and only internal users (multiple internal users) could access
    it.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当前主流的 Jupyter 托管产品是 JupyterHub。为了明确，JupyterHub 是安装在你控制的机器上。它为你的笔记本提供多用户访问。这意味着你可以在你的环境中的一台机器上安装
    JupyterHub，并且只有内部用户（多个内部用户）可以访问它。
- en: When JupyterHub starts it begins a hub or controlling agent. The hub will start
    an instance of a listener or proxy for Jupyter requests. When the proxy gets requests
    for Jupyter it turns them over to the hub. If the hub decides this is a new user
    it will generate a new instance of the Jupyter server and attach all further interactions
    between that user and Jupyter to their own version of the server. This feature
    provides multi-user access.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当 JupyterHub 启动时，它会开始一个 hub 或控制代理。该 hub 将启动一个监听器或代理实例来处理 Jupyter 请求。当代理收到 Jupyter
    请求时，它将把请求交给 hub。如果 hub 判断这是一个新用户，它将生成一个新的 Jupyter 服务器实例，并将该用户与 Jupyter 之间的所有后续交互绑定到该用户的版本服务器上。此功能提供了多用户访问。
- en: Installing JupyterHub
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 JupyterHub
- en: 'JupyterHub requires Python 3.3 or better and we will use the Python tool `pip3`
    to install JupyterHub. The commands to install are:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: JupyterHub 需要 Python 3.3 或更高版本，我们将使用 Python 工具 `pip3` 来安装 JupyterHub。安装命令是：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Accessing a JupyterHub Installation
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问 JupyterHub 安装
- en: 'We can now start JupyterHub directly from the command line:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以直接从命令行启动 JupyterHub：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Instead of the typical `jupyter notebook` that you have been using.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 替代你一直在使用的典型 `jupyter notebook`。
- en: Again, as discussed, JupyterHub is the entry point for users accessing your
    notebooks. Under the covers it is instantiating Jupyter instances for users.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，JupyterHub 是用户访问笔记本的入口点。它在背后为用户实例化 Jupyter 实例。
- en: 'There are slight differences with the user interface presented as well, as
    shown in the following screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 用户界面也有一些小差异，如下图所示：
- en: '![](img/0a6619ba-2d9b-4df8-8dc1-ca2391c2899b.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a6619ba-2d9b-4df8-8dc1-ca2391c2899b.png)'
- en: 'Note the additional buttons on the top right of the screen:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意屏幕右上方的额外按钮：
- en: 'Control Panel: For control of JupyterHub'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制面板：用于控制 JupyterHub
- en: 'Logout: Logout would be used with the SSL feature of JupyterHub to control
    access to your notebook'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注销：注销将在 JupyterHub 的 SSL 功能中用于控制对笔记本的访问。
- en: 'The Control Panel gives two options:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 控制面板提供了两个选项：
- en: 'Stop My Server: Stops JupyterHub from responding further. Useful if you need
    to upgrade some part of the system.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止我的服务器：停止 JupyterHub 的进一步响应。如果需要升级系统的某些部分，这个选项很有用。
- en: 'My Server: Return to the JupyterHub home page (previous screenshot).'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的服务器：返回到 JupyterHub 的主页（上一张截图）。
- en: If you start two browser instances on your desktop and access the notebook on
    JupyterHub you would be presented different information for each user as the user
    information is separately allocated to each user.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在桌面上启动两个浏览器实例并访问 JupyterHub 上的笔记本，你将看到为每个用户呈现不同的信息，因为用户信息是分别分配给每个用户的。
- en: Jupyter hosting
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter 托管
- en: If you want to share your notebook with a larger audience one of the better
    mechanisms is to use a public hosting service for presenting your notebook. This
    alleviates the need for some of the extensive security and availability requirements
    you would incur doing this yourself.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将笔记本分享给更广泛的观众，一个更好的机制是使用公共托管服务来展示你的笔记本。这可以减轻你自己做这件事时需要承担的一些大量安全性和可用性要求。
- en: 'There are an increasing number of (hosting) vendors that are providing Jupyter
    Notebook hosting as well. A couple of the major vendors are:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 提供 Jupyter Notebook 托管服务的（托管）供应商越来越多。一些主要的供应商包括：
- en: '**Rackspace**: Rackspace is particularly geared towards education notebooks
    where they provide special handling for clients running from the education sector'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rackspace**：Rackspace 特别面向教育笔记本，提供为教育领域客户运行时的特殊处理'
- en: '**Azure**: The server hosting service by Microsoft—provides full notebook hosting'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure**：由微软提供的服务器托管服务—提供完整的笔记本托管'
- en: '**GitHub**: One of the primary source repositories for programming artifacts,
    such as your notebook'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitHub**：主要的编程工件源仓库之一，例如你的笔记本'
- en: A great feature of these hosting services is you no longer must install any
    libraries you are accessing from your notebook script. The hosting companies have
    already downloaded (and maintained and updated) all the libraries that you would
    normally use. GitHub does this maintenance. The others are pure web-hosting companies
    and expect you to install any necessary software needed.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些托管服务的一个伟大特点是，你不再需要安装从笔记本脚本中访问的任何库。托管公司已经下载（并维护和更新）了你通常会使用的所有库。GitHub 负责这些维护工作。其他托管公司则是纯粹的网络托管公司，期望你安装任何必要的软件。
- en: Optimizing your script
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化你的脚本
- en: There are optimizations that you can make to have your notebook scripts run
    more efficiently. The optimizations are script language dependent. We have covered
    using Python and R scripts in our notebooks and will cover optimizations that
    can be made for those two languages.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以对笔记本脚本进行优化，使其运行更高效。这些优化是依赖于脚本语言的。我们已经在笔记本中讨论了 Python 和 R 脚本，并将讨论可以为这两种语言进行的优化。
- en: Jupyter does support additional languages, such as Scala and Spark. The other
    languages have their own optimization tools and strategies.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 确实支持其他语言，如 Scala 和 Spark。其他语言有自己的优化工具和策略。
- en: Optimizing your Python scripts
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化你的 Python 脚本
- en: 'Performance tuning your Python scripts can be done using several tools:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 性能调优你的 Python 脚本可以使用多种工具：
- en: '`timeit`'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeit`'
- en: Python regular expressions
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 正则表达式
- en: String handling
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串处理
- en: Loop optimizations
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环优化
- en: '`hotshot` profiling'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hotshot` 性能分析'
- en: Determining how long a script takes
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定脚本执行所需的时间
- en: The `timeit` function in Python takes a line of code and determines how long
    it takes to execute. You can also repeatedly execute the same script to see if
    there are start-up issues that need to be addressed.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Python 中的 `timeit` 函数接收一行代码并确定执行所需的时间。你还可以重复执行相同的脚本，查看是否有需要解决的启动问题。
- en: '`timeit` is used in this manner:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`timeit` 以这种方式使用：'
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `repeat()` function is telling `timeit` to execute the timed instruction
    two times at 2,000,000 times each. The numbers displayed after the `repeat()`
    call are the three of the times taken as representative of the repeated calls.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`repeat()` 函数告诉 `timeit` 执行定时指令两次，每次执行 2,000,000 次。`repeat()` 调用后的数字是三次时间的展示，作为重复调用的代表。'
- en: You would normally use this to test out a complete function, not something that
    interacts with the user in any way.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你通常会用它来测试完整的函数，而不是与用户进行任何交互的部分。
- en: Using Python regular expressions
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 正则表达式
- en: There are many cases where you need your script to evaluate a string of data,
    possibly entered by a user. Yes, you could do this by hand, but the Python regular
    expression processing is extremely efficient and catches all the edge cases that
    you may not be aware of.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多情况下你需要让脚本评估一个数据字符串，可能是由用户输入的。是的，你可以手动完成这个过程，但 Python 正则表达式处理非常高效，并能捕捉到你可能没有注意到的所有边界情况。
- en: Using Python string handling
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 字符串处理
- en: Strings are notoriously bad allocations of memory repeatedly as slight changes
    are made to the string. Furthermore, even small things such as capitalizing a
    letter in a larger string means a reallocation. Best off to process an entire
    string, such as capitalizing, in one step as we reduce the reallocation to one
    shot.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串在内存分配方面表现较差，每当对字符串进行微小的修改时，就会重复进行内存分配。此外，像将字母大写这样的小操作也会导致重新分配。最好一次性处理整个字符串（比如大写化），这样就能将重新分配的次数减少到一次。
- en: Minimizing loop operations
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最小化循环操作
- en: There are many times when you develop a script that you place steps inside of
    a loop as it was convenient to do so when developed and probably did not make
    much difference to performance when running against smaller test data. For example,
    on any of the scripts in this book I would normally extract a small set of rows
    to work with. That would provide confidence that I am accessing the data correctly.
    However, I may have adjusted loop operations to have flagging operations occur.
    On a smaller dataset of 20 rows or so there is no big effect. However, when I
    start using the true dataset, which may have millions of rows, the setting of
    that flag continuously for every row would affect the overall performance of the
    operation.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在很多情况下，你可能会开发一个脚本，并将一些步骤放在循环内，因为在开发时这样做较为方便，而且对较小的测试数据运行时，性能差异可能不大。例如，在本书中的任何脚本里，我通常会提取一小部分数据行来处理。这样可以确保我正确地访问数据。然而，我可能会调整循环操作，使标记操作发生在其中。在大约
    20 行的小数据集上，这种影响不大。然而，当我开始使用真正的数据集，可能包含数百万行时，每一行都需要设置标记，这将影响整个操作的性能。
- en: However, once you are working with larger data those minor operations that are
    occurring every time the loop executes become expensive. There are usually operations
    that can be pulled out of the loop and executed once outside of the loop. For
    example, if we were looking for the largest number in a loop we would initialize
    our result outside of the loop to an unrealistic value and inside the loop, if
    we see the unrealistic value we initialize the result with the first result. This
    test occurs on every loop operation. Instead we could set the result from the
    first record BEFORE entering the loop.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一旦处理较大的数据集时，那些每次循环执行时都会发生的小操作变得非常昂贵。通常有些操作可以从循环中提取出来，放到循环外执行一次。例如，如果我们想在循环中找到最大的数字，我们可以在循环外将结果初始化为一个不现实的值，在循环内部，如果看到这个不现实的值，就用第一个结果来初始化结果。这个测试会在每次循环操作时进行。然而，我们可以在进入循环之前就设置好第一个记录的结果。
- en: Profiling your script
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析脚本
- en: The hotshot profiler is available in Python to give a complete rundown of the
    execution of your script. Hotshot would have to be installed for you to execute.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 热点分析器（hotshot profiler）在 Python 中可用，能够完整地展示脚本执行的过程。你需要先安装 Hotshot 才能执行。
- en: 'It can be used as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以这样使用：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then to view a summary of the profiler''s results use the commands:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，要查看分析器的结果总结，可以使用以下命令：
- en: '[PRE4]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Optimizing your R scripts
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化你的 R 脚本
- en: 'R also has tools available that will help pinpoint performance issues with
    your R coding:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: R 也提供了一些工具，帮助定位 R 代码的性能问题：
- en: '`microbenchmark`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`microbenchmark`'
- en: Modify a function used frequently
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改常用函数
- en: Optimize name lookup
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化名称查找
- en: Optimize data frame value extraction
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化数据框值提取
- en: R implementations
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R 实现
- en: Change algorithm
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改算法
- en: Using microbenchmark to profile R script
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 microbenchmark 来分析 R 脚本
- en: '`microbenchmark` is provided as part of an R library. Once included in your
    script you then surround the code in question with a `microbenchmark` tag and
    once executed the tool will output profiling information for the script in question.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`microbenchmark` 是作为 R 库的一部分提供的。一旦将其包含在脚本中，你就可以将待分析的代码用 `microbenchmark` 标签包裹起来，执行后该工具会输出该脚本的性能分析信息。'
- en: 'For example, we could have this use:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以这样使用：
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Which would exercise the surrounded code 125 times (100 by default) and output
    profiling information such as:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这样会对包含的代码进行 125 次（默认 100 次）执行，并输出诸如以下的分析信息：
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Where we are concerned with the mean as a good indication of how long each iteration
    is taking. We should also notice where there is a large divergence from the mean
    with very distant min and max values—which is what we have here.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们关注的是均值，它能很好地指示每次迭代所需的时间。我们还应该注意到，若最小值和最大值相差很大，意味着存在明显的偏差——这正是我们在这里看到的情况。
- en: Modifying provided functionality
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改提供的功能
- en: R allows you to change the behavior of most objects, including most well-known
    functions provided. An extreme example would be to rework how the `mean()` function
    works. Maybe you have insight into the exact nature of the data you are working
    with and can increase performance accordingly in your special case.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: R 允许你更改大多数对象的行为，包括提供的大多数知名函数。例如，一个极端的例子是重新设计`mean()`函数的工作方式。也许你对正在处理的数据有深入的理解，可以在特定情况下相应地提高性能。
- en: As with the preceding tool, you could exercise the provided functionality and
    then your implementation, and compare profile information provided by `microbenchmark`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 与前面的工具一样，你可以先执行提供的功能，再进行你的实现，并比较 `microbenchmark` 提供的性能分析信息。
- en: Optimizing name lookup
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化名称查找
- en: R allows for dynamic naming of objects, so every time you access a variable
    R must look through a list of scopes to find where the object currently resides.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: R 允许动态命名对象，因此每次你访问一个变量时，R 必须遍历一系列作用域，找到对象当前所在的位置。
- en: You may instead use a local cache mechanism to access your exact value directly
    circumventing R looking for a variable in all scopes.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用本地缓存机制直接访问确切的值，从而避免 R 在所有作用域中查找变量。
- en: Optimizing data frame value extraction
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化数据框值提取
- en: With its variety of coding styles R allows you to access a particular value
    in a data frame in several manners. If your coding is accessing a large data frame
    frequently to extract singular values it is worthwhile to benchmark different
    alternatives to see which access method provides the most performance.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: R 提供多种编码风格，允许你以多种方式访问数据框中的特定值。如果你的代码频繁访问大型数据框以提取单个值，那么值得对不同的替代方法进行基准测试，看看哪种访问方式能提供最佳性能。
- en: Changing R Implementation
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改 R 实现
- en: R is implemented by a handful of different companies. Each has its own performance
    spectrum. It may be worthwhile with severe cases to experiment with different
    R implementations to determine which works best for you. It may be difficult to
    change the R engine used by Jupyter.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: R 是由几家公司实现的，每个实现都有其自己的性能范围。在极端情况下，尝试不同的 R 实现可能会很有价值，以确定哪个最适合你。更改 Jupyter 使用的
    R 引擎可能会比较困难。
- en: Changing algorithms
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改算法
- en: Whenever you program your notebook you have taken an approach to solving the
    problem. The approach is referred to as the *algorithm* used. Your algorithm may
    include looping over records or querying records inside of the database directly
    to obtain the records of interest. Many times, you will select an algorithm early
    in the process which appears to work adequately. There may be other algorithms
    which solve the problem in a much more efficient manner.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你编写笔记本代码时，你已采用某种方法来解决问题。这种方法被称为*算法*。你的算法可能包括遍历记录或直接查询数据库中的记录来获取感兴趣的记录。很多时候，你会在过程初期选择一个看似足够有效的算法。也许还有其他算法能够以更高效的方式解决问题。
- en: The largest boost to any programming implementation will come by changing the
    overall approach to handling. Unfortunately, this is the hardest change to accomplish
    as redesign and rewrite of your coding is required. And even then, like the other
    techniques, you need to compare benchmarks of your different approaches to make
    sure the new approach is better.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 对任何编程实现来说，最大的提升来自于改变整体处理方法。不幸的是，这是最难实现的变动，因为需要重新设计和重写代码。即便如此，像其他技巧一样，你仍然需要比较不同方法的基准，确保新方法更好。
- en: Monitoring Jupyter
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控 Jupyter
- en: As with the earlier discussions in this chapter on optimization, you can also
    use programming tools to monitor the overall interactions of your notebook. The
    predominant tool for Linux/Mac environments is `memory_profiler`. If you start
    this tool then your notebook, the profiler will keep track of memory use of your
    notebook.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 与本章之前关于优化的讨论一样，你也可以使用编程工具来监控笔记本的整体交互。Linux/Mac 环境下主要的工具是`memory_profiler`。如果你启动这个工具，然后再启动笔记本，分析器将会跟踪笔记本的内存使用情况。
- en: With this record of information points you may be able to adjust your programmatic
    memory allocation to be smaller in profile if you find a large memory use occurring.
    For example, the profiler may highlight that you are creating (and dropping) a
    large memory item continuously inside of a loop. When you go back to your coding
    you realize this memory access could be pulled out of the loop and just done once
    or that size of the allocation could be minimized easily.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 根据此信息记录，如果您发现发生了大量内存使用，您可能能够调整程序的内存分配以减小内存占用。例如，性能分析器可能会突出显示您在一个循环中不断创建（和丢弃）一个大内存项。当您回到代码时，您会意识到这个内存访问可以从循环中提取出来，或者可以轻松地减少分配的大小。
- en: Caching your notebook
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缓存您的笔记本
- en: Caching is a common programming practice to speed up performance. If the computer
    does not have to reload a section of code or variable or file, but can just access
    directly from a cache this will improve performance.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存是一种常见的编程实践，用于加速性能。如果计算机不需要重新加载某一段代码、变量或文件，而是可以直接从缓存中访问，这将提高性能。
- en: There is a mechanism to cache your notebook if you are deploying into a Docker
    space. Docker is a mechanism for virtualizing code over many instances in one
    machine. It has become common practice to do so in the Java programming world.
    Luckily, Docker is very flexible and a method has been determined to use Jupyter
    in Docker as well. Once in Docker, it is a minor adjustment to automatically cache
    your pages in Docker. The underlying tool used is `memcached`, yet another widespread
    common tool for caching anything, in this case Jupyter Notebooks.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将笔记本部署到Docker环境中，则有一种机制可以缓存您的笔记本。Docker是一种在一台机器上虚拟化代码的机制，在Java编程领域，采用这种方法已经成为常规做法。幸运的是，Docker非常灵活，已经确定了一种方法，可以将Jupyter用在Docker中。一旦进入Docker，自动缓存页面就变得相对简单。底层工具是`memcached`，这也是一个常见的缓存工具，用于缓存任何内容，这里是Jupyter笔记本。
- en: Securing a notebook
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 笔记本的安全
- en: 'Securing a notebook can be accomplished by several methods such as:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本的安全性可以通过多种方法实现，例如：
- en: Manage authorization
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理授权
- en: Securing notebook content
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记本内容的安全
- en: Managing notebook authorization
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理笔记本授权
- en: A notebook can be secured to use username/password authorization. Authorization
    is on by default in your notebook. Under Jupyter it is token/password instead
    of username/password as a token is more open to interpretation. See Jupyter documentation
    on implementing authorization as this has changed slightly over time.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本可以通过用户名/密码授权进行保护。默认情况下，您的笔记本启用了授权。在Jupyter中，使用的是令牌/密码，而不是用户名/密码，因为令牌在解释时更灵活。请参阅Jupyter文档，了解如何实现授权，因为这一点随着时间的推移有所变化。
- en: Securing notebook content
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 笔记本内容的安全
- en: 'A notebook has possible security issues with several parts of standard content
    that are secured automatically by Jupyter:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一个笔记本可能存在安全问题，Jupyter会自动保护其中一些标准内容：
- en: Untrusted HTML is sanitized
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不信任的HTML会被清理
- en: Untrusted JavaScript is not executed
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不信任的JavaScript不会被执行
- en: HTML and JavaScript in markdown cells is not trusted
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Markdown单元中的HTML和JavaScript不被信任
- en: Notebook output is not trusted
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记本输出不被信任
- en: Other HTML or JavaScript in the notebook is not trusted
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记本中的其他HTML或JavaScript不被信任
- en: 'Where trust comes down to the question: Did the user do this or did the Jupyter
    script? Untrusted means it will not be generated.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 信任问题归结为一个问题：是用户执行了这个操作，还是Jupyter脚本执行了？不信任意味着不会生成内容。
- en: Sanitized code is wrapped to force the values to be text display only—no executed
    code will be generated. For example, if your notebook cell were to produce HTML,
    such as an additional `H1` header tag, Jupyter would sanitize the output such
    that the raw HTML, in this case something like `<H1&gt;Additional Heading</H1&gt;` would
    produce the raw HTML with the `H1` tags rather than the desired effect of an HTML
    heading appearing on your page.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 被清理过的代码会被包装，强制其值仅以文本显示—不会生成可执行代码。例如，如果您的笔记本单元格生成HTML，如额外的`H1`标题标签，Jupyter会清理输出，使其呈现原始HTML，而不是页面上显示的HTML标题效果，原始HTML可能是类似`<H1&gt;Additional
    Heading</H1&gt;`的内容。
- en: Scaling Jupyter Notebooks
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展Jupyter笔记本
- en: Scaling is the process of providing very large numbers of concurrent users to
    a notebook without a degradation in performance. The one vendor that is doing
    this today is Azure. They have thousands of pages and users working at scale daily.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展是指提供大量并发用户访问一个笔记本，而不降低性能。今天，唯一实现这一点的供应商是Azure。他们每天都有成千上万的页面和用户在大规模使用。
- en: Most amazingly this is a **free** service.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 最令人惊讶的是，这是一项**免费的**服务。
- en: Sharing Jupyter Notebooks
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 共享 Jupyter 笔记本
- en: Jupyter Notebooks can be shared by placing the notebook on a server (there are
    several kinds) or converting the notebook to another format (it will not be interactive,
    but the content will be available).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 笔记本可以通过将笔记本放置在服务器上（有多种类型）或将笔记本转换为其他格式来共享（虽然它将不再具备交互性，但内容仍然可用）。
- en: Sharing Jupyter Notebook on a notebook server
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在笔记本服务器上共享 Jupyter 笔记本
- en: 'Built into the notebook configuration are extensions that can be used to expose
    a notebook server, directly. The notebook configuration can be generated using
    the following command:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本配置内置了可以直接公开笔记本服务器的扩展功能。可以使用以下命令生成笔记本配置：
- en: '[PRE7]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the resulting `jupyter_notebook_config.py` file there are settings that
    can be used to set:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成的 `jupyter_notebook_config.py` 文件中，有一些设置可以用于配置：
- en: IP/port address of your notebook
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记本的 IP/端口地址
- en: Encryption certificate location
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密证书位置
- en: Password
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码
- en: By setting this and starting Jupyter you should be able to access the notebook
    at the IP address specified from other machines in your network.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 通过设置此项并启动 Jupyter，您应该能够在网络中的其他计算机上通过指定的 IP 地址访问笔记本。
- en: You should work with your network security personnel before doing so.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样做之前，您应该与您的网络安全人员协作。
- en: Sharing encrypted Jupyter Notebook on a notebook server
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在笔记本服务器上共享加密的 Jupyter 笔记本
- en: If you specify the certificate information correctly in the previous configuration
    file the notebook will only be accessible over HTTPS or a secure, encrypted channel.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在前述配置文件中正确指定了证书信息，则笔记本只能通过 HTTPS 或安全的加密通道访问。
- en: Sharing notebook on a web server
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Web 服务器上共享笔记本
- en: Another part of the configuration file is the `tornado_settings`. This set of
    settings describes the web server that will channel web traffic to your notebook.
    Again, once these settings are in place you can access your notebook through the
    web server-using the web servers IP address.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件的另一部分是 `tornado_settings`。这一系列设置描述了将 web 流量引导到您的笔记本的 Web 服务器。再次强调，一旦这些设置完成，您可以通过
    Web 服务器的 IP 地址访问您的笔记本。
- en: This might be useful to present notebook access as part of your existing website.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这在将笔记本访问呈现为您现有网站的一部分时可能会很有用。
- en: Sharing notebook on Docker
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Docker 上共享笔记本
- en: Docker is a framework that provides for hosting instances of software based
    on a small configuration file, the `Dockerfile`. Docker allows for multiple instances
    of software to be instantiated automatically as needed. So, we would have multiple
    instances of our notebook available to users. Users would not be able to distinguish
    the multiple instances as they just reference the one notebook. Docker redirects
    user traffic to one or the other instances based on initial connection to the
    system.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 是一个框架，通过一个小的配置文件 `Dockerfile` 提供软件实例的托管服务。Docker 允许根据需要自动实例化多个软件实例。因此，我们将有多个笔记本实例可供用户使用。用户无法区分多个实例，因为他们只会引用同一个笔记本。Docker
    根据用户最初连接到系统的情况，将流量引导到某个实例。
- en: The `Dockerfile` has the environment settings that tell the Docker system what
    system components need to be present in an instance in order for the referenced
    object, in this case a notebook, can be executed.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`Dockerfile` 包含环境设置，告诉 Docker 系统需要在实例中存在哪些系统组件，以便可以执行所引用的对象，在本例中是笔记本。'
- en: Converting a notebook
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换笔记本
- en: You can also share a notebook with others by converting the notebook to a readable
    form for recipients. Notebooks can be converted to a number of formats using the
    Download As feature in the notebook File menu.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过将笔记本转换为可供接收者阅读的格式与他人共享笔记本。可以使用笔记本文件菜单中的“另存为”功能将笔记本转换为多种格式。
- en: 'Notebooks can be converted in this way to the formats:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本可以转换为以下格式：
- en: '**<language&gt; format**: This option is dependent on the language used to
    create the notebook. For example, an R notebook would have the choice to Download
    as R script.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<language&gt; format**：此选项取决于用于创建笔记本的语言。例如，R 笔记本可以选择将其下载为 R 脚本。'
- en: 'HTML: This representation is the HTML encoding to display the page as it appears
    in your notebook using HTML constructs.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML：这种表示方式是 HTML 编码，用于显示笔记本中呈现页面的 HTML 构造。
- en: 'Markdown: Markdown is a simple display tag format used by some older Linux
    systems.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Markdown：Markdown 是一种简单的显示标签格式，某些较旧的 Linux 系统使用该格式。
- en: 'reST: Another markdown type of format that has simpler display constructs than
    HTML.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: reST：另一种 Markdown 格式，它比 HTML 更简洁。
- en: PDF.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PDF。
- en: Versioning a notebook
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本控制笔记本
- en: A common practice in the programming world is to maintain a history of the changes
    made to a program. Over time the different versions of the program are maintained
    in a software repository where the programmer can retrieve prior versions to return
    to an older, working state of their program.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在编程领域，一个常见的做法是维护程序更改的历史记录。随着时间的推移，程序的不同版本会被保存在一个软件仓库中，程序员可以检索先前的版本，以便回到程序的旧有、可用状态。
- en: In the previous section we mentioned placing your notebook on GitHub. Git is
    a software repository in wide use. GitHub is an internet-based instance of Git.
    Once you have any software in Git it will automatically be versioned. The next
    time you update your notebook in GitHub. Git will take the current instance, store
    it as a version in your history, and place the new instance as the current—where
    anyone accessing your GitHub repository will see the latest version by default.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们提到过将笔记本放置在 GitHub 上。Git 是一个广泛使用的软件仓库，GitHub 是 Git 的一个基于互联网的实例。一旦你将任何软件放入
    Git 中，它会自动进行版本管理。下次你更新 GitHub 中的笔记本时，Git 会将当前实例存储为历史版本，并将新实例放为当前版本——这样，任何访问你 GitHub
    仓库的人都会默认看到最新版本。
- en: Summary
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we deployed our notebook to a set of different environments.
    We looked into optimizations that can be made to our notebook scripts. We learned
    about different ways to share our notebook. Lastly, we looked into converting
    our notebook for users without access to Jupyter.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将笔记本部署到了一组不同的环境中。我们探讨了可以对笔记本脚本进行的优化。我们学习了不同的分享笔记本的方式。最后，我们研究了如何将笔记本转换为没有
    Jupyter 访问权限的用户使用的格式。
