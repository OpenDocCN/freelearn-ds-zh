- en: Accelerating Spark with Alluxio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Alluxio加速Spark
- en: '"It has become appallingly obvious that our technology has exceeded our humanity."'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “显而易见，我们的技术已经超出了我们的人性。”
- en: '- Albert Einstein'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '- 阿尔伯特·爱因斯坦'
- en: Here, you will learn how to use Alluxio with Spark to accelerate the speed of
    processing. Alluxio is an open source distributed memory storage system, useful
    in accelerating the speed of many applications across platforms, including Apache
    Spark.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您将学习如何使用Alluxio与Spark加速处理速度。Alluxio是一个开源的分布式内存存储系统，可用于加速跨平台的许多应用程序的速度，包括Apache
    Spark。
- en: 'In a nutshell, the following topics will be covered throughout this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，本章将涵盖以下主题：
- en: The need for Alluxio
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对Alluxio的需求
- en: Getting started with Alluxio
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用Alluxio
- en: Integration with YARN
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与YARN集成
- en: Using Alluxio in Spark
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Spark中使用Alluxio
- en: The need for Alluxio
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对Alluxio的需求
- en: We have seen Apache Spark and the various functionalities around Spark core,
    Streaming, GraphX, Spark SQL, and Spark machine learning. We also looked at many
    use cases and operations surrounding data manipulations and processing. The key
    steps in any processing task are data input, data processing, and data output.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了Apache Spark以及围绕Spark核心、流式处理、GraphX、Spark SQL和Spark机器学习的各种功能。我们还看了许多围绕数据操作和处理的用例和操作。任何处理任务中的关键步骤是数据输入、数据处理和数据输出。
- en: 'Shown here is an illustration of a Spark job:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示了一个Spark作业的示例：
- en: '![](img/00323.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00323.jpeg)'
- en: As seen here, the input and output of a job are often dependent on slower storage
    options based on disk, while the processing usually is done using the memory/RAM.
    Since the memory is 100x faster than disk access, the performance of a job can
    clearly improve significantly if we can reduce the disk usage and use memory more.
    It is not necessary or even possible that we do not use any disk at all in any
    job; rather, we just intend to use memory as much as possible.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，作业的输入和输出通常依赖于基于磁盘的较慢存储选项，而处理通常是使用内存/RAM完成的。由于内存比磁盘访问快100倍，如果我们可以减少磁盘使用并更多地使用内存，作业的性能显然可以显著提高。在任何作业中，不需要甚至不可能完全不使用任何磁盘；相反，我们只是打算尽可能多地使用内存。
- en: As a start, we can try to cache as much data as possible in the memory in order
    to accelerate the processing using executors. While this might work for some jobs,
    it's not possible to have so much memory in GBs or TBs for large jobs running
    in a distributed cluster running Spark. Moreover, even if there is a big cluster
    for your usage, there will be many users in the environment, thus making it difficult
    to use so many resources for all jobs.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们可以尝试尽可能多地在内存中缓存数据，以加速使用执行器进行处理。虽然这对某些作业可能有效，但对于在运行Spark的分布式集群中运行的大型作业来说，不可能拥有如此多的GB或TB内存。此外，即使您的使用环境中有一个大型集群，也会有许多用户，因此很难为所有作业使用如此多的资源。
- en: We know of distributed storage systems such as HDFS, S3, and NFS. Similarly,
    if we had a distributed memory system, we could use this as a storage system for
    all the jobs to reduce the I/O needed for a job or intermediate jobs in a pipeline.
    Alluxio provides exactly that by implementing a distributed in-memory filesystem
    that can be used by Spark for all input/output needs.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道分布式存储系统，如HDFS、S3和NFS。同样，如果我们有一个分布式内存系统，我们可以将其用作所有作业的存储系统，以减少作业或管道中的中间作业所需的I/O。Alluxio正是通过实现分布式内存文件系统来提供这一点，Spark可以使用它来满足所有输入/输出需求。
- en: Getting started with Alluxio
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用Alluxio
- en: 'Alluxio, formerly known as Tachyon, unifies data access and bridges computation
    frameworks and the underlying storage systems. Alluxio''s memory-centric architecture
    enables data access orders of magnitude faster than the existing solutions. Alluxio
    is also Hadoop compatible, thus providing seamless integration into the existing
    infrastructure. The existing data analytics applications, such as Spark and MapReduce
    programs, can run on top of Alluxio without any code change, which means that
    the transition time is insignificant with the benefit of better performance:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Alluxio，以前称为Tachyon，统一了数据访问并桥接了计算框架和底层存储系统。Alluxio的内存为中心的架构使得数据访问比现有解决方案快几个数量级。Alluxio也与Hadoop兼容，因此可以无缝集成到现有基础设施中。现有的数据分析应用程序，如Spark和MapReduce程序，可以在Alluxio之上运行，而无需进行任何代码更改，这意味着过渡时间微不足道，而性能更好：
- en: '![](img/00326.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00326.jpeg)'
- en: Downloading Alluxio
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载Alluxio
- en: 'You can download Alluxio by registering your name and email address using the
    [http://www.alluxio.org/download](http://www.alluxio.org/download) website:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在[http://www.alluxio.org/download](http://www.alluxio.org/download)网站上注册您的姓名和电子邮件地址来下载Alluxio：
- en: '![](img/00207.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00207.jpeg)'
- en: 'Alternatively, you can also just go to [http://downloads.alluxio.org/downloads/files](http://downloads.alluxio.org/downloads/files)
    and download the latest version:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您也可以直接转到[http://downloads.alluxio.org/downloads/files](http://downloads.alluxio.org/downloads/files)并下载最新版本：
- en: '![](img/00216.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00216.jpeg)'
- en: Installing and running Alluxio locally
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和在本地运行Alluxio
- en: We will install and run 1.5.0 locally. You can do the same with any other version.
    If you downloaded version 1.5.0, you will see a file like `alluxio-1.5.0-hadoop2.7-bin.tar.gz`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本地安装和运行1.5.0。您可以使用任何其他版本进行相同操作。如果您下载了版本1.5.0，您将看到一个名为`alluxio-1.5.0-hadoop2.7-bin.tar.gz`的文件。
- en: A prerequisite for Alluxio is to have JDK 7 or higher installed.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Alluxio的先决条件是已安装JDK 7或更高版本。
- en: 'Unzip the downloaded `alluxio-1.5.0-hadoop2.7-bin.tar.gz` file:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 解压下载的`alluxio-1.5.0-hadoop2.7-bin.tar.gz`文件：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Also, if running locally, Alluxio will need an environment variable to properly
    bind to the host, so run the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果在本地运行，Alluxio将需要一个环境变量才能正确绑定到主机，因此运行以下命令：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Format the Alluxio filesystem using the `/bin/alluxio` command.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`/bin/alluxio`命令格式化Alluxio文件系统。
- en: This step is only required when you run Alluxio for the first time and, when
    run, all the previously stored data and metadata in the Alluxio filesystem will
    be erased.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在首次运行Alluxio时才需要此步骤，运行时，Alluxio文件系统中以前存储的所有数据和元数据将被删除。
- en: 'Run the `/bin/alluxio` format command to format the filesystem:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`/bin/alluxio`格式命令来格式化文件系统：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Start the Alluxio filesystem locally:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地启动Alluxio文件系统：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can stop Alluxio by using a similar syntax.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用类似的语法停止Alluxio。
- en: You can stop Alluxio by running `./bin/alluxio-stop.sh` local.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在本地运行`./bin/alluxio-stop.sh`来停止Alluxio。
- en: 'Verify that Alluxio is running by running the Alluxio script with the `runTests`
    argument:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`runTests`参数运行Alluxio脚本来验证Alluxio是否正在运行：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Refer to [http://www.alluxio.org/docs/master/en/Running-Alluxio-Locally.html](http://www.alluxio.org/docs/master/en/Running-Alluxio-Locally.html)
    for additional options and details.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有关其他选项和详细信息，请参阅[http://www.alluxio.org/docs/master/en/Running-Alluxio-Locally.html](http://www.alluxio.org/docs/master/en/Running-Alluxio-Locally.html)。
- en: You can also use the web UI to look at the Alluxio process by opening a browser
    and typing in `http://localhost:19999/`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用Web UI来查看Alluxio进程，方法是打开浏览器并输入`http://localhost:19999/`。
- en: Overview
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: 'The Overview tab shows summary information, such as Master Address, Running
    Workers, Version, and Uptime of the cluster. Also shown is the cluster usage summary,
    which shows the workers capacity and filesystem UnderFS Capacity. Then, the storage
    usage summary is also seen, which shows the space capacity and the used space:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 概述选项卡显示摘要信息，例如主地址、运行的工作节点、版本和集群的正常运行时间。还显示了集群使用摘要，显示了工作节点的容量和文件系统UnderFS容量。然后，还可以看到存储使用摘要，显示了空间容量和已使用空间：
- en: '![](img/00219.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00219.jpeg)'
- en: Browse
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浏览
- en: 'The Browse tab allows you to look at the current content of the in-memory filesystem.
    This tab shows what is in the filesystem, the name of the file, size, and block
    size, whether we loaded the data into memory, and the ACLs and permissions on
    the file, specifying who can access it and perform operations such as read and
    write. You will see all the files managed in Alluxio in the Browse tab:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览选项卡允许您查看内存文件系统的当前内容。此选项卡显示文件系统中的内容，文件的名称、大小和块大小，我们是否将数据加载到内存中，以及文件的ACL和权限，指定谁可以访问它并执行读写等操作。您将在浏览选项卡中看到Alluxio中管理的所有文件：
- en: '![](img/00225.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00225.jpeg)'
- en: Configuration
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置
- en: 'The Configuration tab shows all the configuration parameters used. Some of
    the most important parameters are the configuration directory used, CPU resources,
    and memory resource allocations to the master as well as the workers. Also seen
    are the filesystem name, path, JDK settings, and so on. All these can be overridden
    to customize Alluxio for your use cases. Any changes here will also need a restart
    of the cluster:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 配置选项卡显示使用的所有配置参数。一些最重要的参数是使用的配置目录、主节点和工作节点的CPU资源和内存资源分配。还可以看到文件系统名称、路径、JDK设置等。所有这些都可以被覆盖以定制Alluxio以适应您的用例。这里的任何更改也将需要重新启动集群。
- en: '![](img/00231.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00231.jpeg)'
- en: Workers
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作者
- en: 'The **Workers** tab simply shows the workers in the Alluxio cluster. This will
    just show the local machine in our case of local setup, but in a typical cluster
    of many workers, you will see all the worker nodes along with the state of the
    node, the worker''s capacity, the space used, and the last heartbeat received,
    which shows whether a worker is alive and participating in the cluster operations
    or not:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Workers选项卡只是显示Alluxio集群中的工作节点。在我们的本地设置中，这只会显示本地机器，但在典型的许多工作节点的集群中，您将看到所有工作节点以及节点的状态，工作节点的容量，已使用的空间和最后接收到的心跳，这显示了工作节点是否存活并参与集群操作：
- en: '![](img/00234.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00234.jpeg)'
- en: In-Memory Data
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内存数据
- en: 'The In-Memory Data tab shows the current data in the memory of the Alluxio
    filesystem. This shows the content in the memory of the cluster memory. Typical
    information shown for each of the dataset in memory includes the permissions,
    ownership, creation, and modification times:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 内存数据选项卡显示Alluxio文件系统内存中的当前数据。这显示了集群内存中的内容。内存中每个数据集显示的典型信息包括权限、所有权、创建和修改时间：
- en: '![](img/00243.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00243.jpeg)'
- en: Logs
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志
- en: 'The Logs tab allows you to look at various log files for debugging and monitoring
    purpose. You will see the log file named `master.log` for the master node, the
    log file named `worker.log` for the worker nodes, `task.log`, `proxy.log`, and
    a user log too. Each of the log files grows independently and can be very useful
    in diagnosing problems or just monitoring the health of the cluster:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 日志选项卡允许您查看各种日志文件，用于调试和监视目的。您将看到名为`master.log`的主节点的日志文件，名为`worker.log`的工作节点的日志文件，`task.log`，`proxy.log`以及用户日志。每个日志文件都会独立增长，并且在诊断问题或仅监视集群的健康状况方面非常有用：
- en: '![](img/00252.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00252.jpeg)'
- en: Metrics
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指标
- en: 'The Metrics tab shows metrics useful to monitor the current state of the Alluxio
    filesystem. The main information here includes the capacity of the master node
    and the filesystem capacity. Also shown are the counters of various operations,
    such as logical operations of files created and deleted, and directories created
    and deleted. Another section shows the RPC invocations that you can use to monitor
    the CreateFile, DeleteFile, and GetFileBlockInfo operations, among others:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 指标选项卡显示有用的指标，用于监视Alluxio文件系统的当前状态。这里的主要信息包括主节点和文件系统容量。还显示了各种操作的计数器，例如文件创建和删除的逻辑操作，以及目录创建和删除。另一部分显示了RPC调用，您可以使用它来监视CreateFile、DeleteFile和GetFileBlockInfo等操作：
- en: '![](img/00255.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00255.jpeg)'
- en: Current features
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当前功能
- en: 'As seen earlier, Alluxio provides a lot of functionalities to support a high-speed
    in-memory filesystem, significantly accelerating Spark or many other computing
    systems. The current release has many features, and some of the main features
    can be described as in the following list:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面所看到的，Alluxio提供了许多功能，以支持高速内存文件系统，显着加速Spark或许多其他计算系统。当前版本具有许多功能，以下是一些主要功能的描述：
- en: '**Flexible file API** provides a Hadoop compatible filesystem, allowing Hadoop
    MapReduce and Spark to use Alluxio.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活的文件API**提供了与Hadoop兼容的文件系统，允许Hadoop MapReduce和Spark使用Alluxio。'
- en: '**Pluggable under storage** checkpoints in-memory data to the underlying storage
    system, which supports Amazon S3, Google Cloud Storage, OpenStack Swift, HDFS,
    and so on.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可插拔的底层存储**将内存中的数据检查点到底层存储系统，支持Amazon S3、Google Cloud Storage、OpenStack Swift、HDFS等。'
- en: '**Tiered storage** can manage SSDs and HDDs in addition to memory, allowing
    for larger datasets to be stored in Alluxio.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分层存储**可以管理SSD和HDD，除了内存，还允许将更大的数据集存储在Alluxio中。'
- en: '**Unified namespace** enables effective data management across different storage
    systems through the mount feature. In addition, transparent naming ensures that
    filenames and the directory hierarchy for objects created in Alluxio are preserved
    when persisting these objects to the underlying storage system.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**统一命名空间**通过挂载功能在不同存储系统之间实现有效的数据管理。此外，透明命名确保在将这些对象持久化到底层存储系统时，Alluxio中创建的对象的文件名和目录层次结构得以保留。'
- en: '**Lineage** can achieve high throughput writes without compromising fault-tolerance
    using lineage, where lost output is recovered by reexecuting the jobs that created
    the output, just like the DAGs in Apache Spark.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**血统**可以通过血统实现高吞吐量写入，而不会影响容错性，其中丢失的输出通过重新执行创建输出的作业来恢复，就像Apache Spark中的DAG一样。'
- en: '**Web UI and command line** allows users to browse the filesystem easily through
    the web UI. Under the debug mode, administrators can view detailed information
    of each file, including locations and checkpoint paths. Users can also use `./bin/alluxio
    fs` to interact with Alluxio, for example, copy data in and out of the filesystem.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web UI和命令行**允许用户通过Web UI轻松浏览文件系统。在调试模式下，管理员可以查看每个文件的详细信息，包括位置和检查点路径。用户还可以使用`./bin/alluxio
    fs`与Alluxio进行交互，例如，复制数据进出文件系统。'
- en: Refer to [http://www.alluxio.org/](http://www.alluxio.org/) for the latest features
    and more up-to-date information.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有关最新功能和更多最新信息，请参阅[http://www.alluxio.org/](http://www.alluxio.org/)。
- en: This is all good enough to get Alluxio started locally. Next, we will see how
    to integrate with a cluster manager, such as YARN.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这已经足够让Alluxio在本地启动了。接下来，我们将看到如何与集群管理器（如YARN）集成。
- en: Integration with YARN
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与YARN集成
- en: YARN is one of the most used cluster managers, followed by Mesos. If you can
    recollect from [Chapter 5](part0148.html#4D4J81-21aec46d8593429cacea59dbdcd64e1c),
    *Tackle Big Data - Spark Comes to The Party*, YARN can manage the resources of
    a Hadoop cluster and allow hundreds of applications to share the cluster resources.
    We can run long-running Spark jobs to process real-time credit card transactions,
    for example, using YARN and Spark integration.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: YARN是最常用的集群管理器之一，其次是Mesos。如果您还记得[第5章](part0148.html#4D4J81-21aec46d8593429cacea59dbdcd64e1c)中的内容，*处理大数据
    - Spark加入派对*，YARN可以管理Hadoop集群的资源，并允许数百个应用程序共享集群资源。我们可以使用YARN和Spark集成来运行长时间运行的Spark作业，以处理实时信用卡交易，例如。
- en: However, it is not recommended to try running Alluxio as a YARN application;
    rather, Alluxio should be run as a standalone cluster alongside YARN. Alluxio
    should be run alongside YARN so that all the YARN nodes have access to a local
    Alluxio worker. For YARN and Alluxio to coexist, we must inform YARN of the resources
    used by Alluxio. For instance, YARN needs to know how much memory and CPU to leave
    for Alluxio.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，不建议尝试将Alluxio作为YARN应用程序运行；相反，应该将Alluxio作为独立集群与YARN一起运行。Alluxio应该与YARN一起运行，以便所有YARN节点都可以访问本地的Alluxio
    worker。为了使YARN和Alluxio共存，我们必须通知YARN有关Alluxio使用的资源。例如，YARN需要知道为Alluxio留下多少内存和CPU。
- en: Alluxio worker memory
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Alluxio worker内存
- en: The Alluxio worker requires some memory for its JVM process and some memory
    for its RAM disk; 1 GB is generally fine for the JVM memory since this memory
    is only used for buffering and metadata.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Alluxio worker需要一些内存用于其JVM进程和一些内存用于其RAM磁盘；通常1GB对于JVM内存来说是足够的，因为这些内存仅用于缓冲和元数据。
- en: The RAM disk memory can be configured by setting `alluxio.worker.memory.size`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: RAM磁盘内存可以通过设置`alluxio.worker.memory.size`进行配置。
- en: Data stored in non-memory tiers, such as SSD or HDD, does not need to be included
    in the memory-size calculation.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在非内存层中的数据，如SSD或HDD，不需要包括在内存大小计算中。
- en: Alluxio master memory
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Alluxio master内存
- en: The Alluxio master stores metadata about every file in Alluxio, so it should
    be at least 1 GB and up to 32 GB for larger cluster deployment.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Alluxio master存储有关Alluxio中每个文件的元数据，因此对于更大的集群部署，它应该至少为1GB，最多为32GB。
- en: CPU vcores
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CPU vcores
- en: Each Alluxio worker should have one vcore as a minimum, and Alluxio master can
    use at least one and up to four vcores in production deployments.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Alluxio worker至少应该有一个vcore，生产部署中Alluxio master可以使用至少一个到四个vcores。
- en: To inform YARN of the resources to reserve for Alluxio on each node, modify
    the YARN configuration parameters in `yarn-site.xml`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要通知YARN在每个节点上为Alluxio保留的资源，请修改`yarn-site.xml`中的YARN配置参数。
- en: Change `yarn.nodemanager.resource.memory-mb` to reserve some memory for the
    Alluxio worker.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 将`yarn.nodemanager.resource.memory-mb`更改为为Alluxio worker保留一些内存。
- en: After determining how much memory to allocate to Alluxio on the node, subtract
    this from `yarn.nodemanager.resource.memory-mb` and update the parameter with
    the new value.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 确定在节点上为Alluxio分配多少内存后，从`yarn.nodemanager.resource.memory-mb`中减去这个值，并使用新值更新参数。
- en: Change `yarn.nodemanager.resource.cpu-vcores` to reserve CPU vcores for the
    Alluxio worker.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 将`yarn.nodemanager.resource.cpu-vcores`更改为为Alluxio worker保留CPU vcores。
- en: After determining how much memory to allocate to Alluxio on the node, subtract
    this from `yarn.nodemanager.resource.cpu-vcores` and update the parameter with
    the new value.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 确定在节点上为Alluxio分配多少内存后，从`yarn.nodemanager.resource.cpu-vcores`中减去这个值，并使用新值更新参数。
- en: After updating the YARN configuration, restart YARN so that it picks up the
    changes.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 更新YARN配置后，重新启动YARN以使其应用更改。
- en: Using Alluxio with Spark
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Alluxio与Spark
- en: In order to use Alluxio with Spark, you will need a couple of dependency JARs.
    This is to enable Spark to connect to the Alluxio filesystem and to read/write
    data. Once we start Spark with Alluxio integration, most of the Spark code remains
    exactly the same, with changes only to the reading and writing portions of the
    code as now you have to use `alluxio://` to denote the Alluxio filesystem.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在Spark中使用Alluxio，您将需要一些依赖的JAR文件。这是为了使Spark能够连接到Alluxio文件系统并读取/写入数据。一旦我们启动具有Alluxio集成的Spark，大部分Spark代码仍然保持完全相同，只有代码的读取和写入部分发生了变化，因为现在您必须使用`alluxio://`来表示Alluxio文件系统。
- en: However, once the Alluxio cluster is set up, Spark jobs (executors) will connect
    to Alluxio master for metadata and the Alluxio workers for the actual data read/write
    operations.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一旦设置了Alluxio集群，Spark作业（执行器）将连接到Alluxio主服务器以获取元数据，并连接到Alluxio工作节点进行实际数据读取/写入操作。
- en: 'Shown here is an illustration of an Alluxio cluster used from a Spark job:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '这里显示了从Spark作业中使用的Alluxio集群的示例： '
- en: '![](img/00261.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00261.jpeg)'
- en: 'The following are the steps on how to start Spark-shell with Alluxio and run
    some code:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何使用Alluxio启动Spark-shell并运行一些代码的步骤：
- en: '**Step 1**, Change the directory into the directory where Spark was extracted:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**第1步**，将目录更改为提取Spark的目录：'
- en: '[PRE5]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Step 2**, Copy the JARs from Alluxio to Spark:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**第2步**，将JAR文件从Alluxio复制到Spark：'
- en: '[PRE6]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Step 3**, Start Spark-shell with the Alluxio JARs:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**第3步**，使用Alluxio JAR文件启动Spark-shell：'
- en: '[PRE7]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Step 4, Copy a sample dataset into the Alluxio filesystem:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 第4步，将样本数据集复制到Alluxio文件系统中：
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can verify the file in Alluxio using the Browse tab; it is the Sentiment_Analysis_Dataset10k.csv
    of size 801.29KB file:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用浏览选项卡在Alluxio中验证文件；它是大小为801.29KB的Sentiment_Analysis_Dataset10k.csv文件：
- en: '![](img/00053.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: Step 4\. Access the file with and without Alluxio.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 第4步。访问带有和不带有Alluxio的文件。
- en: 'First, set the Alluxio filesystem configuration in the shell:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在shell中设置Alluxio文件系统配置：
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Load the text file from Alluxio:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 从Alluxio加载文本文件：
- en: '[PRE10]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Load the same text file from the local filesystem:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 从本地文件系统加载相同的文本文件：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If you can load Alluxio with a lot of data, Alluxio integration will provide
    greater performance without needing to cache the data. This yields several advantages,
    including removal of the need to cache large datasets by every user who is using
    the Spark cluster.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您可以加载大量数据到Alluxio中，Alluxio集成将提供更高的性能，而无需缓存数据。这带来了几个优势，包括消除了每个使用Spark集群的用户缓存大型数据集的需要。
- en: Summary
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this appendix, we explored the use of Alluxio as a way of accelerating Spark
    applications using the in-memory filesystem capabilities of Alluxio. This yields
    several advantages, including removal of the need to cache large datasets by every
    user who is using the Spark cluster.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本附录中，我们探讨了使用Alluxio作为加速Spark应用程序的一种方式，利用了Alluxio的内存文件系统功能。这带来了几个优势，包括消除了每个使用Spark集群的用户缓存大型数据集的需要。
- en: In the next appendix, we will explore how to use Apache Zeppelin, a web-based
    notebook to perform interactive data analysis.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个附录中，我们将探讨如何使用Apache Zeppelin，一个基于Web的笔记本，进行交互式数据分析。
