- en: '>'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: Appendix A
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录A
- en: About
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section is included to assist the students to perform the activities present
    in the book. It includes detailed steps that are to be performed by the students
    to complete and achieve the objectives of the activity.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容是为了帮助学生执行书中提供的活动，包含详细步骤，学生需要按照这些步骤完成活动并实现其目标。
- en: 'Chapter 1: Jupyter Fundamentals'
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第1章：Jupyter基础
- en: 'Activity 1: Building a Third-Order Polynomial Model'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动1：构建三次多项式模型
- en: Scroll to the empty cells at the bottom of `Subtopic C` in your Jupyter Notebook.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到Jupyter Notebook中`Subtopic C`底部的空单元格。
- en: These will be found beneath the linear-model `Activity` heading.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些将位于线性模型`Activity`标题下方。
- en: Note
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: You should fill these empty cells in with code as we complete the activity.
    You may need to insert new cells as these become filled up; please do so as needed.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随着活动的进行，您应该在这些空单元格中填充代码。由于这些单元格会逐渐填满，您可能需要插入新单元格；请根据需要操作。
- en: 'We will first pull out our dependent feature from and target variable from
    `df.` using the following:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先从`df.`中提取我们的依赖特征和目标变量，使用以下方法：
- en: '[PRE0]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is identical to what we did earlier for the linear model.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这与我们之前为线性模型所做的完全相同。
- en: 'Verify what `x` looks like by printing the first few samples with `print(x[:3])`:![Figure
    1.49: Printing first three values of x using print()](img/C13018_01_491.jpg)'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过打印前几个样本`print(x[:3])`来验证`x`的样子：![图1.49：使用print()打印x的前三个值](img/C13018_01_491.jpg)
- en: 'Figure 1.49: Printing first three values of x using print()'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.49：使用print()打印x的前三个值
- en: Notice how each element in the array is itself an array with length 1\. This
    is what `reshape(-1,1)` does, and it is the form expected by scikit-learn.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，数组中的每个元素本身是一个长度为1的数组。这就是`reshape(-1,1)`的作用，它是scikit-learn所期望的格式。
- en: 'Transform `x` into "polynomial features" by importing the appropriate transformation
    tool from scikit-learn and instantiating the third-degree polynomial feature transformer:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过从scikit-learn导入适当的转换工具并实例化三次多项式特征转换器，将`x`转化为“多项式特征”：
- en: '[PRE1]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The rationale for this step may not be immediately obvious but will be explained shortly.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这一步骤的理由可能一时不太明显，但稍后将会解释。
- en: 'Transform the `x`) by running the `fit_transform` method. Build the polynomial
    feature set by running the following code:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行`fit_transform`方法转换`x`，并通过运行以下代码构建多项式特征集：
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here, we have used the instance of the transformer feature to transform the
    LSTAT variable.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们使用了该转换器的实例来转换LSTAT变量。
- en: 'Verify what `x_poly` looks like by printing the first few samples with `print(x_poly[:3])`.![Figure
    1.50: Printing first three values of x_poly using print()](img/C13018_01_501.jpg)'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过打印前几个样本`print(x_poly[:3])`来验证`x_poly`的样子。![图1.50：使用print()打印x_poly的前三个值](img/C13018_01_501.jpg)
- en: 'Figure 1.50: Printing first three values of x_poly using print()'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.50：使用print()打印x_poly的前三个值
- en: Unlike *x*, the arrays in each row now have length 4, where the values have
    been calculated as *xº*, *x¹*, *x²* and *x³*.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与*x*不同，现在每一行中的数组长度为4，其中的值被计算为*xº*、*x¹*、*x²*和*x³*。
- en: 'We are now going to use this data to fit a linear model. Labeling the features
    as *a*, *b*, *c*, and *d*, we will calculate the coefficients αₒ, α1, α2, and
    α3 and of the linear model:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们现在将使用这些数据来拟合线性模型。将特征标记为*a*、*b*、*c*和*d*，我们将计算线性模型的系数αₒ、α1、α2和α3：
- en: '![](img/C13018_01_50_a.jpg)'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C13018_01_50_a.jpg)'
- en: 'We can plug in the definitions of a, b, c, and d, to get the following polynomial
    model, where the coefficients are the same as the previous ones:'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以代入a、b、c和d的定义，得到以下多项式模型，其中系数与之前的相同：
- en: '![](img/C13018_01_50_b.jpg)'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C13018_01_50_b.jpg)'
- en: 'Import the `LinearRegression` class and build our linear classification model
    the same way as done while calculating the MSE. Run the following:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`LinearRegression`类，并像计算MSE时一样构建我们的线性分类模型。运行以下代码：
- en: '[PRE3]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Extract the coefficients and print the polynomial model using the following
    code:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码提取系数并打印多项式模型：
- en: '[PRE4]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 1.51: Extracting coefficients and printing the polynomial model](img/C13018_01_511.jpg)'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.51：提取系数并打印多项式模型](img/C13018_01_511.jpg)'
- en: 'Figure 1.51: Extracting coefficients and printing the polynomial model'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.51：提取系数并打印多项式模型
- en: To get the actual model intercept, we have to add the `intercept_` and `coef_`
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要获得实际的模型截距，我们必须添加`intercept_`和`coef_`。
- en: '`[0]` attributes. The higher-order coefficients are then given by the remaining
    values of `coef_`.'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`[0]`属性。更高阶的系数由`coef_`的其余值给出。'
- en: 'Determine the predicted values for each sample and calculate the residuals
    by running the following code:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码来确定每个样本的预测值并计算残差：
- en: '[PRE5]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Print some of the residual values by running `print(resid_MEDV[:10])`:![Figure
    1.52: Printing residual values](img/C13018_01_521.jpg)'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行`print(resid_MEDV[:10])`打印部分残差值：![图1.52：打印残差值](img/C13018_01_521.jpg)
- en: 'Figure 1.52: Printing residual values'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.52：打印残差值
- en: We'll plot these soon to compare with the linear model residuals, but first
    we will calculate the MSE.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将很快绘制这些图形以与线性模型的残差进行比较，但首先我们将计算MSE。
- en: 'Run the following code to print the MSE for the third-order polynomial model:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码以打印第三阶多项式模型的MSE：
- en: '[PRE6]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Figure 1.53: Calculating the mean squared error](img/C13018_01_531.jpg)'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.53：计算均方误差](img/C13018_01_531.jpg)'
- en: 'Figure 1.53: Calculating the mean squared error'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.53：计算均方误差
- en: As can be seen, the **MSE** is significantly less for the polynomial model compared
    to the linear model (which was 38.5). This error metric can be converted to an
    average error in dollars by taking the square root. Doing this for the polynomial
    model, we find the average error for the median house value is only $5,300.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如图所示，**MSE**在多项式模型下显著低于线性模型（线性模型的MSE为38.5）。这个误差指标可以通过取平方根转换为以美元为单位的平均误差。对于多项式模型，经过计算后，发现中位数房价的平均误差仅为$5,300。
- en: Now, we'll visualize the model by plotting the polynomial line of best fit along
    with the data.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们将通过绘制最佳拟合的多项式线与数据一起，来可视化模型。
- en: 'Plot the polynomial model along with the samples by running the following:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码绘制多项式模型并与样本一起显示：
- en: '[PRE7]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Figure 1.54: Plotting the polynomial model for MEDV and LSTAT](img/C13018_01_541.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.54：绘制MEDV与LSTAT的多项式模型](img/C13018_01_541.jpg)'
- en: 'Figure 1.54: Plotting the polynomial model for MEDV and LSTAT'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.54：绘制MEDV与LSTAT的多项式模型
- en: Here, we are plotting the red curve by calculating the polynomial model predictions
    on an array of `x` values. The array of `x` values was created using `np.linspace`,
    resulting in 50 values arranged evenly between 2 and 38.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们通过计算多项式模型在一组`x`值上的预测来绘制红色曲线。这组`x`值是使用`np.linspace`创建的，生成了50个均匀分布在2到38之间的值。
- en: Now, we'll plot the corresponding residuals. Whereas we used Seaborn for this
    earlier, we'll have to do it manually to show results for a scikit-learn model.
    Since we already calculated the residuals earlier, as reference by the `resid_MEDV`
    variable, we simply need to plot this list of values on a scatter chart.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们将绘制相应的残差。尽管我们之前使用了Seaborn来完成这项任务，但为了展示scikit-learn模型的结果，我们需要手动绘制。由于我们之前已经计算了残差，参考`resid_MEDV`变量，我们只需要将这些值绘制在散点图上。
- en: 'Plot the residuals by running the following:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码绘制残差：
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Figure 1.55: Plotting the residuals for LSTAT and MEDV](img/C13018_01_551.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图1.55：绘制LSTAT与MEDV的残差](img/C13018_01_551.jpg)'
- en: 'Figure 1.55: Plotting the residuals for LSTAT and MEDV'
  id: totrans-57
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.55：绘制LSTAT与MEDV的残差
- en: Compared to the linear model **LSTAT** residual plot, the polynomial model residuals
    appear to be more closely clustered around *y -* ŷ *= 0.* Note that y is the sample
    **MEDV** and ŷ is the predicted value. There are still clear patterns, such as
    the cluster near *x = 7* and *y = -7* that indicates suboptimal modeling.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 与线性模型**LSTAT**残差图相比，多项式模型的残差似乎更紧密地聚集在*y - ŷ = 0*附近。请注意，y是样本**MEDV**，而ŷ是预测值。仍然可以看到明显的模式，例如在*x
    = 7*和*y = -7*附近的聚类，这表明建模存在不优化之处。
- en: Having successfully modeled the data using a polynomial model, let's finish
    up this chapter by looking at categorical features. In particular, we are going
    to build a set of categorical features and use them to explore the dataset in
    more detail.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 成功地使用多项式模型建模数据后，让我们通过查看类别特征来完成这一章。特别是，我们将构建一组类别特征，并使用它们更详细地探索数据集。
- en: 'Chapter 2: Data Cleaning and Advanced Machine'
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二章：数据清理与高级机器学习
- en: 'Activity 2: Preparing to Train a Predictive Model for the Employee-Retention
    Problem'
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动2：准备为员工留存问题训练预测模型
- en: Scroll to the `Activity A` section of the `lesson-2-workbook.ipynb` notebook
    file.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到`lesson-2-workbook.ipynb`笔记本文件中的`Activity A`部分。
- en: 'Check the head of the table by running the following code:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码来查看表格的前几行：
- en: '[PRE9]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Judging by the output, convince yourself that it looks to be in standard CSV
    format. For CSV files, we should be able to simply load the data with pd.read_csv.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从输出结果来看，确认它看起来是标准的CSV格式。对于CSV文件，我们应该能够通过`pd.read_csv`轻松加载数据。
- en: Load the data with Pandas by running `df = pd.read_csv('../data/hr- analytics/hr_data.csv')`.
    Write it out yourself and use tab completion to help type the file path.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Pandas加载数据，运行`df = pd.read_csv('../data/hr-analytics/hr_data.csv')`。自己输入，并使用Tab键完成文件路径的输入。
- en: 'Inspect the columns by printing `df.columns` and make sure the data has loaded
    as expected by printing the DataFrame `head` and `tail` with `df.head()` and `df.tail()`:![Figure
    2.46: Output for inspecting head and tail of columns](img/C13018_02_46.jpg)'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过打印`df.columns`来检查列，确保数据已按预期加载，通过打印数据框的`head`和`tail`来检查：`df.head()`和`df.tail()`：![图
    2.46：检查列头和尾部的输出](img/C13018_02_46.jpg)
- en: 'Figure 2.46: Output for inspecting head and tail of columns'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.46：检查列头和尾部的输出
- en: We can see that it appears to have loaded correctly. Based on the tail index
    values, there are nearly 15,000 rows; let's make sure we didn't miss any.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到它似乎已经正确加载。根据尾部索引值，数据共有近15,000行；让我们确保没有遗漏任何行。
- en: 'Check the number of rows (including the header) in the CSV file with the following code:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码检查CSV文件中的行数（包括标题）：
- en: '[PRE10]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Figure 2.46: Output after checking for number of rows](img/C13018_02_47.jpg)'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.46：检查行数后的输出](img/C13018_02_47.jpg)'
- en: 'Figure 2.47: Output after checking for number of rows'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.47：检查行数后的输出
- en: 'Compare this result to `len(df)` to make sure you''ve loaded all the data:![Figure
    2.48: Output after checking for number of sample uploaded](img/C13018_02_48.jpg)'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此结果与`len(df)`进行比较，确保你已经加载了所有数据：![图 2.48：检查上传样本数量后的输出](img/C13018_02_48.jpg)
- en: 'Figure 2.48: Output after checking for number of sample uploaded'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.48：检查上传样本数量后的输出
- en: Now that our client's data has been properly loaded, let's think about how we
    can use predictive analytics to find insights into why their employees are leaving.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们的客户数据已经正确加载，让我们思考如何使用预测分析来找出员工离职的原因。
- en: 'Let''s run through the first steps for creating a predictive analytics plan:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们走过创建预测分析计划的第一步：
- en: 'Look at the available data: You''ve already done this by looking at the columns,
    datatypes, and the number of samples.'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看可用数据：你已经通过查看列、数据类型和样本数量完成了此操作。
- en: 'Determine the business needs: The client has clearly expressed their needs:
    reduce the number of employees who leave.'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确定业务需求：客户明确表达了他们的需求：减少离职员工的数量。
- en: 'Assess the data for suitability: Let''s try to determine a plan that can help
    satisfy the client''s needs, given the provided data'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 评估数据的适用性：让我们尝试制定一个能够满足客户需求的计划，基于所提供的数据。
- en: Recall, as mentioned earlier, that effective analytics techniques lead to impactful
    business decisions. With that in mind, if we were able to predict how likely an
    employee is to quit, the business could selectively target those employees for
    special treatment. For example, their salary could be raised or their number of
    projects reduced. Furthermore, the impact of these changes could be estimated
    using the model!
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前所述，有效的分析技术能够带来有影响力的商业决策。考虑到这一点，如果我们能够预测员工离职的可能性，企业可以选择性地对这些员工进行特别待遇。例如，可以提高他们的薪水或减少他们的项目数量。此外，使用模型可以估算这些变化的影响！
- en: To assess the validity of this plan, let's think about our data. Each row represents
    an employee who either works for the company or has left, as labeled by the column
    named left. We can therefore train a model to predict this target, given a set
    of features.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了评估这个计划的有效性，让我们思考一下数据。每一行代表一个员工，该员工要么仍在公司工作，要么已经离开，这由名为“left”的列标记。因此，我们可以根据一组特征训练一个模型来预测这一目标变量。
- en: 'Assess the target variable. Check the distribution and number of missing entries
    by running the following code:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评估目标变量。通过运行以下代码检查分布和缺失项数量：
- en: '[PRE11]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 2.49: Distribution of the target variables](img/C13018_02_49.jpg)'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.49：目标变量的分布](img/C13018_02_49.jpg)'
- en: 'Figure 2.49: Distribution of the target variables'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.49：目标变量的分布
- en: 'Here''s the output of the second code line:'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是第二行代码的输出：
- en: '![Figure 2.50: Output to check missing data points](img/C13018_02_50.jpg)'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.50：检查缺失数据点的输出](img/C13018_02_50.jpg)'
- en: 'Figure 2.50: Output to check missing data points'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.50：检查缺失数据点的输出
- en: About three-quarters of the samples are employees who have not left. The group
    that has left make up the other quarter of the samples. This tells us we are dealing
    with an imbalanced classification problem, which means we'll have to take special
    measures to account for each class when calculating accuracies. We also see that
    none of the target variables are missing (no `NaN` values).
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 大约四分之三的样本是没有离职的员工。离职的员工占了剩下的四分之一。这告诉我们我们正在处理一个不平衡的分类问题，这意味着在计算准确度时需要特别注意每个类别的权重。我们还看到目标变量没有缺失（没有
    `NaN` 值）。
- en: 'Now, we''ll assess the features:'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们将评估这些特征：
- en: 'Print the datatype of each by executing `df.dtypes`. Observe how we have a
    mix of continuous and discrete features:![Figure 2.51: Printing data types for
    verification](img/C13018_02_51.jpg)'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行 `df.dtypes` 打印每个数据的类型。观察一下，我们有连续型和离散型特征的混合：![图 2.51：打印数据类型进行验证](img/C13018_02_51.jpg)
- en: 'Figure 2.51: Printing data types for verification'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.51：打印数据类型进行验证
- en: 'Display the feature distributions by running the following code:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码来显示特征的分布：
- en: '[PRE12]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: 'Figure 2.52: Distribution of all features: satisfaction_level and last_evaluation'
  id: totrans-97
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.52：所有特征的分布：satisfaction_level 和 last_evaluation
- en: '![Figure 2.52: Distribution of all remaining features](img/C13018_02_53.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.52：所有剩余特征的分布](img/C13018_02_53.jpg)'
- en: 'Figure 2.53: Distribution of all remaining features'
  id: totrans-99
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.53：所有剩余特征的分布
- en: '![Figure 2.54: Distribution for the variable promotion_last_5years](img/C13018_02_54.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.54：promotion_last_5years 变量的分布](img/C13018_02_54.jpg)'
- en: 'Figure 2.54: Distribution for the variable promotion_last_5years'
  id: totrans-101
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.54：promotion_last_5years 变量的分布
- en: For many features, we see a wide distribution over the possible values, indicating
    a good variety in the feature spaces. This is encouraging; features that are strongly
    grouped around a small range of values may not be very informative for the model.
    This is the case for `promotion_last_5years`, where we see that the vast majority
    of samples are `0`.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多特征，我们看到它们在可能值范围内有较宽的分布，这表明特征空间有很好的多样性。这是令人鼓舞的；如果特征大部分集中在一个狭小的值区间内，可能对模型没有很大帮助。`promotion_last_5years`
    就是这种情况，大多数样本的值都是 `0`。
- en: The next thing we need to do is remove any `NaN` values from the dataset.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们需要做的是从数据集中删除所有的 `NaN` 值。
- en: 'Check how many `NaN` values are in each column by running the following code:'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行以下代码，检查每一列中有多少 `NaN` 值：
- en: '[PRE13]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Figure 2.55: Verification for the number of NaN values](img/C13018_02_55.jpg)'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.55：验证 NaN 值的数量](img/C13018_02_55.jpg)'
- en: 'Figure 2.55: Verification for the number of NaN values'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.55：验证 NaN 值的数量
- en: We can see there are about 2.5% missing for `average_montly_hours`, 1% missing
    for `time_spend_company`, and 98% missing for `is_smoker!` Let's use a couple
    of different strategies that you've learned to handle these.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到，`average_montly_hours` 有大约 2.5% 的缺失值，`time_spend_company` 有 1% 的缺失值，而
    `is_smoker` 则有 98% 的缺失值！我们可以使用你学到的几种策略来处理这些。
- en: 'Drop the `is_smoker` column as there is barely any information in this metric.
    Do this by running: `del df[''is_smoker'']`.*   Fill the `NaN` values in the `time_spend_company`
    column. This can be done with the following code:'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除 `is_smoker` 列，因为这个指标几乎没有任何信息。执行以下代码：`del df['is_smoker']`。*   填充 `time_spend_company`
    列中的 `NaN` 值。可以使用以下代码来完成：
- en: '[PRE14]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The final column to deal with is `average_montly_hours`. We could do something
    similar and use the median or rounded mean as the integer fill value. Instead
    though, let's try to take advantage of its relationship with another variable.
    This may allow us to fill the missing data more accurately.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后一列需要处理的是 `average_montly_hours`。我们可以做类似的处理，使用中位数或四舍五入后的均值作为整数填充值。不过，还是让我们尝试利用它与其他变量的关系。这样可以更准确地填充缺失的数据。
- en: 'Make a boxplot of `average_montly_hours` segmented by `number_project`. This
    can be done by running the following code:'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行以下代码，绘制 `average_montly_hours` 按 `number_project` 分组的箱型图：
- en: '[PRE15]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Figure 2.56: Boxplot for average_monthly_hours and number_project](img/C13018_02_56.jpg)'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.56：average_monthly_hours 和 number_project 的箱型图](img/C13018_02_56.jpg)'
- en: 'Figure 2.56: Boxplot for average_monthly_hours and number_project'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.56：average_monthly_hours 和 number_project 的箱型图
- en: We can see how the number of projects is correlated with `average_ monthly_hours`,
    a result that is hardly surprising. We'll exploit this relationship by filling
    in the `NaN` values of `average_montly_hours` differently, depending on the number
    of projects for that sample.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到项目数量与`average_ monthly_hours`之间的相关性，这是一个毫不奇怪的结果。我们将利用这一关系，根据每个样本的项目数量来填充`average_montly_hours`中的`NaN`值。
- en: Specifically, we'll use the mean of each group.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具体而言，我们将使用每个组的均值。
- en: 'Calculate the mean of each group by running the following code:'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行以下代码计算每个组的均值：
- en: '[PRE16]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Figure 2.57: Calculation of mean values for average_monthly_hours](img/C13018_02_57.jpg)'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 2.57：平均每月工时的均值计算](img/C13018_02_57.jpg)'
- en: 'Figure 2.57: Calculation of mean values for average_monthly_hours'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.57：平均每月工时的均值计算
- en: We can then map this onto the `number_project` column and pass the resulting
    series object as the argument to `fillna`.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，我们可以将其映射到`number_project`列，并将生成的序列对象作为参数传递给`fillna`。
- en: 'Fill the `NaN` values in `average_montly_hours` by executing the following
    code:'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过执行以下代码填充`average_montly_hours`中的`NaN`值：
- en: '[PRE17]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Confirm that `df` has no more `NaN` values by running the following assertion
    test. If it does not raise an error, then you have successfully removed the `NaNs`
    from the table:'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行以下断言测试，确认`df`没有更多的`NaN`值。如果没有抛出错误，则说明你已成功地从表格中去除了`NaNs`：
- en: '[PRE18]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: We pass `index=False` so that the index is not written to file. In this case,
    the index is a set of integers spanning from 0 to the DataFrame length, and it
    therefore tells us nothing important.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们传递`index=False`，这样索引就不会写入文件。在这种情况下，索引是一组从0到DataFrame长度的整数，因此它并没有提供任何重要信息。
- en: 'Transform the string and Boolean fields into integer representations. In particular,
    we''ll manually convert the target variable `left` from `yes` and `no` to `1`
    and `0` and build the one-hot encoded features. Do this by running the following
    code:'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将字符串和布尔字段转换为整数表示。特别地，我们将手动把目标变量`left`从`yes`和`no`转换为`1`和`0`，并构建独热编码特征。运行以下代码来实现：
- en: '[PRE19]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Print `df.columns` to show the fields:![Figure 2.58: A screenshot of the different
    fields in the dataframe](img/C13018_02_58.jpg)'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印`df.columns`以显示字段：![图 2.58：数据框中不同字段的截图](img/C13018_02_58.jpg)
- en: 'Figure 2.58: A screenshot of the different fields in the dataframe'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.58：数据框中不同字段的截图
- en: We can see that department and salary have been split into various binary features.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到部门和薪资已经被拆分成各种二进制特征。
- en: The final step to prepare our data for machine learning is scaling the features,
    but for various reasons (for example, some models do not require scaling), we'll
    do it as part of the model-training workflow in the next activity.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 准备数据以进行机器学习的最后一步是对特征进行缩放，但出于各种原因（例如，一些模型不需要缩放），我们将在下一个活动中的模型训练工作流中进行缩放。
- en: 'We have completed the data preprocessing and are ready to move on to training
    models! Let''s save our preprocessed data by running the following code:'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们已经完成了数据预处理，准备开始训练模型了！让我们通过运行以下代码来保存我们的预处理数据：
- en: '[PRE20]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Chapter 3: Web Scraping and Interactive Visualizations'
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第3章：网页抓取与交互式可视化
- en: 'Activity 3: Web Scraping with Jupyter Notebooks'
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 3：使用 Jupyter 笔记本进行网页抓取
- en: 'For this page, the data can be scraped using the following code snippet:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于此页面，数据可以通过以下代码片段进行抓取：
- en: '[PRE21]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the `lesson-3-workbook.ipynb` Jupyter Notebook, scroll to `Activity A: Web
    scraping with Python`.'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在`lesson-3-workbook.ipynb` Jupyter Notebook中，滚动到`Activity A: 使用 Python 进行网页抓取`。'
- en: 'Set the `url` variable and load an IFrame of our page in the notebook by running
    the following code:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`url`变量，并通过运行以下代码在笔记本中加载我们的页面IFrame：
- en: '[PRE22]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The page should load in the notebook. Scrolling down, we can see the **Countries
    in the world by population** heading and the table of values beneath it. We'll
    scrape the first three columns from this table to get the countries, populations,
    and yearly population changes.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 页面应该在笔记本中加载。向下滚动，我们可以看到**世界各国按人口排序**的标题以及其下方的值表格。我们将从这个表格中抓取前三列数据，获取国家、人口和每年人口变化。
- en: Close the IFrame by selecting the cell and clicking **Current Outputs** | **Clear**
    from the **Cell** menu in the Jupyter Notebook.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择单元格并点击Jupyter Notebook中的**当前输出** | **清除**，关闭IFrame。
- en: 'Request the page and load it as a `BeautifulSoup` object by running the following
    code:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请求页面并通过运行以下代码将其加载为`BeautifulSoup`对象：
- en: '[PRE23]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: We feed the page content to the `BeautifulSoup` constructor. Recall that previously,
    we used `page.text` here instead. The difference is that `page.content` returns
    the raw binary response content, whereas `page.text` returns the UTF-8 decoded
    content. It's usually best practice to pass the bytes object and let `BeautifulSoup`
    decode it, rather than doing it with Requests using `page.text`.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将页面内容传递给`BeautifulSoup`构造函数。回想一下之前，我们在这里使用的是`page.text`。区别在于，`page.content`返回的是原始的二进制响应内容，而`page.text`返回的是UTF-8解码后的内容。通常，最佳实践是传递字节对象并让`BeautifulSoup`解码，而不是使用`page.text`通过Requests进行解码。
- en: 'Print the H1 for the page by running the following code:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码打印页面的H1：
- en: '[PRE24]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We'll scrape the table by searching for `<th>`, `<tr>`, and `<td>` elements,
    as in the previous exercise.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将通过搜索`<th>`、`<tr>`和`<td>`元素来抓取表格，正如在之前的练习中所做的那样。
- en: 'Get and print the table headings by running the following code:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码获取并打印表格标题：
- en: '[PRE25]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We are only interested in the first three columns. Select these and parse the
    text with the following code:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只对前3列数据感兴趣。选择这些并使用以下代码解析文本：
- en: '[PRE26]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: After selecting the subset of table headers we want, we parse the text content
    from each and remove any newline characters.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在选择我们需要的表格头部子集后，我们解析每个表头的文本内容，并移除其中的换行符。
- en: Now, we'll get the data. Following the same prescription as the previous exercise,
    we'll test how to parse the data for a sample row.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们将获取数据。按照之前练习中的方法，我们将测试如何解析一个样本行的数据。
- en: 'Get the data for a sample row by running the following code:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码获取样本行的数据：
- en: '[PRE27]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How many columns of data do we have? Print the length of `row_data` by running
    `print(len(row_data))`.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有多少列数据？通过运行`print(len(row_data))`来打印`row_data`的长度。
- en: 'Print the first elements by running `print(row_data[:4])`:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行`print(row_data[:4])`打印前几个元素：
- en: '[PRE28]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: It's pretty obvious that we want to select list indices 1, 2, and 3\. The first
    data value can be ignored, as it's simply the index.
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 很明显，我们需要选择列表索引1、2和3。第一个数据值可以忽略，因为它只是索引。
- en: 'Select the data elements we''re interested in parsing by running the following code:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码选择我们感兴趣的解析数据元素：
- en: '[PRE29]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Looking at the `row_data` output, we can find out how to correctly parse the
    data. We''ll want to select the content of the `<a>` element in the first data
    element, and then simply get the text from the others. Test these assumptions
    by running the following code:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看`row_data`的输出，我们可以找出如何正确解析数据。我们将选择第一个数据元素中`<a>`元素的内容，然后简单地获取其他元素的文本。通过运行以下代码测试这些假设：
- en: '[PRE30]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Excellent! This looks to be working well. Now, we're ready to scrape the entire table.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 很棒！看起来运行得很顺利。现在，我们准备好抓取整个表格。
- en: 'Scrape and parse the table data by running the following code:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码抓取并解析表格数据：
- en: '[PRE31]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This is quite similar to before, where we try to parse the text and skip the
    row if there's some error.
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这与之前非常相似，我们尝试解析文本并在出现错误时跳过该行。
- en: 'Print the head of the scraped data by running `print(data[:10])`:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行`print(data[:10])`打印抓取数据的头部：
- en: '[PRE32]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: It looks like we have managed to scrape the data! Notice how similar the process
    was for this table compared to the Wikipedia one, even though this web page is
    completely different. Of course, it will not always be the case that data is contained
    within a table, but regardless, we can usually use `find_all` as the primary method
    for parsing.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 看起来我们已经成功抓取了数据！请注意，尽管这个网页与维基百科页面完全不同，但抓取过程非常相似。当然，并不是所有数据都包含在表格中，但无论如何，我们通常可以使用`find_all`作为解析的主要方法。
- en: 'Finally, save the data to a CSV file for later use. Do this by running the
    following code:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将数据保存为CSV文件以供后续使用。通过运行以下代码完成此操作：
- en: '[PRE33]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Activity 4: Exploring Data with Interactive Visualizations'
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 4：使用交互式可视化探索数据
- en: 'In the `lesson-3-workbook.ipynb` file, scroll to the `Activity B: Interactive
    visualizations with Bokeh` section.'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在`lesson-3-workbook.ipynb`文件中，滚动到`Activity B: 使用Bokeh进行交互式可视化`部分。'
- en: 'Load the previously scraped, merged, and cleaned web page data by running the
    following code:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码加载之前抓取、合并和清理过的网页数据：
- en: '[PRE34]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Recall what the data looks like by displaying the DataFrame:![Figure 3.18:
    Output of the data within DataFrame](img/C13018_03_18.jpg)'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过显示数据框来回顾数据的外观：![图 3.18：数据框中数据的输出](img/C13018_03_18.jpg)
- en: 'Figure 3.18: Output of the data within DataFrame'
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.18：数据框中数据的输出
- en: Whereas in the previous exercise we were interested in learning how Bokeh worked,
    now we are interested in what this data looks like. In order to explore this dataset,
    we are going to use interactive visualizations.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 而在前一个练习中，我们关注的是学习 Bokeh 的工作原理，现在我们更关心的是这些数据的具体表现。为了探索这个数据集，我们将使用交互式可视化。
- en: 'Draw a scatter plot of the population as a function of the interest rate by
    running the following code:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码，绘制人口与利率之间的散点图：
- en: '[PRE35]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![Figure 3.19: Scatter plot of population and interest rate'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.19：人口与利率的散点图'
- en: '](img/C13018_03_19.jpg)'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_19.jpg)'
- en: 'Figure 3.19: Scatter plot of population and interest rate'
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.19：人口与利率的散点图
- en: This is quite similar to the final examples we looked at when introducing Bokeh
    in the previous exercise. We set up a customized data source with the *x* and
    *y* coordinates for each point, along with the country name. This country name
    is passed to the Hover Tool, so that it's visible when hovering the mouse over
    the dot. We pass this tool to the figure, along with a set of other useful tools.
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这与我们在前一个练习中介绍 Bokeh 时看到的最终示例非常相似。我们设置了一个自定义数据源，其中包括每个点的 *x* 和 *y* 坐标，以及国家名称。这个国家名称被传递给悬停工具，因此在悬停鼠标于点上时可以看到它。我们将这个工具与一组其他有用的工具一起传递给图形。
- en: 'In the data, we see some clear outliers with high populations. Hover over these
    to see what they are:![Figure 3.20: Labels obtained by hovering over data points'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据中，我们看到一些明显的异常值，具有高人口。将鼠标悬停在这些点上以查看它们：![图 3.20：通过悬停在数据点上获得的标签
- en: '](img/C13018_03_20.jpg)'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_20.jpg)'
- en: 'Figure 3.20: Labels obtained by hovering over data points'
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.20：通过悬停在数据点上获得的标签
- en: We see they belong to India and China. These countries have fairly average interest
    rates. Let's focus on the rest of the points by using the Box Zoom tool to modify
    the view window size.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们看到它们属于印度和中国。这些国家的利率相对平均。让我们通过使用框缩放工具来调整视图窗口的大小，专注于其余的数据点。
- en: 'Select the Box Zoom tool and alter the viewing window to better see the majority
    of the data:![Figure 3.21: The Box Zoom tool'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择框缩放工具并调整查看窗口，以更好地查看大多数数据：![图 3.21：框缩放工具
- en: '](img/C13018_03_21.jpg)'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_21.jpg)'
- en: 'Figure 3.21: The Box Zoom tool'
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.21：框缩放工具
- en: '![Figure 3.22: Scatter plot with majority of the data points within the box'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.22：散点图，框内包含大多数数据点'
- en: '](img/C13018_03_22.jpg)'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_22.jpg)'
- en: 'Figure 3.22: Scatter plot with majority of the data points within the box'
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.22：散点图，框内包含大多数数据点
- en: 'Explore the points and see how the interest rates compare for various countries.
    What are the countries with the highest interest rates?:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 探索这些点，看看不同国家的利率如何比较。哪些国家的利率最高？：
- en: '![Figure 3.23: Hovering over data points to view detailed data'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.23：悬停在数据点上查看详细数据'
- en: '](img/C13018_03_23.jpg)'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_23.jpg)'
- en: 'Figure 3.23: Hovering over data points to view detailed data'
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.23：悬停在数据点上查看详细数据
- en: 'Some of the lower population countries appear to have negative interest rates.
    Select the **Wheel Zoom** tool and use it to zoom in on this region. Use the **Pan**
    tool to re-center the plot, if needed, so that the negative interest rate samples
    are in view. Hover over some of these and see what countries they correspond to:![Figure
    3.24: Screen shot of the Wheel Zoom tool'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一些低人口的国家似乎有负利率。选择**轮缩放**工具，并用它缩小这个区域。如果需要，使用**平移**工具重新集中图形，以确保负利率的样本在视图中。将鼠标悬停在这些点上，看看它们对应的是哪些国家：![图
    3.24：轮缩放工具的屏幕截图
- en: '](img/C13018_03_24.jpg)'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_24.jpg)'
- en: 'Figure 3.24: Screen shot of the Wheel Zoom tool'
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.24：轮缩放工具的屏幕截图
- en: '![Figure 3.25: Data points of negative interest rates countries'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.25：负利率国家的数据点'
- en: '](img/C13018_03_25.jpg)'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_25.jpg)'
- en: 'Figure 3.25: Data points of negative interest rates countries'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.25：负利率国家的数据点
- en: Let's re-plot this, adding a color based on the date of last interest rate change.
    This will be useful to search for relations between the date of last change and
    the interest rate or population size.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们重新绘制图形，添加一个基于最后利率更改日期的颜色。这将有助于我们寻找最后更改日期与利率或人口规模之间的关系。
- en: 'Add a **Year of last change** column to the DataFrame by running the following
    code:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码，在数据框中添加**最后更改年份**列：
- en: '[PRE36]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create a map to group the last change date into color categories by running
    the following code:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码，创建一个地图，将最后更改日期分组为颜色类别：
- en: '[PRE37]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Once mapped to the **Year of last change** column, this will assign values
    to colors based on the available categories: 2018, 2017, 2016, and Other. The
    colors here are standard strings, but they could alternatively by represented
    by hexadecimal codes.'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦映射到 **最后变动年份** 列，这将根据可用的类别（2018、2017、2016 和其他）为颜色分配值。这里的颜色是标准字符串，也可以用十六进制代码表示。
- en: 'Create the colored visualization by running the following code:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码来创建彩色可视化：
- en: '[PRE38]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Note
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注释
- en: 'For the complete code, refer to the following: [https://bit.ly/2Si3K04](https://bit.ly/2Si3K04)'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完整代码请参阅以下链接：[https://bit.ly/2Si3K04](https://bit.ly/2Si3K04)
- en: '![Figure 3.26: Visualization obtained after assigning values to colors'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.26：赋值给颜色后的可视化结果'
- en: '](img/C13018_03_26.jpg)'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_26.jpg)'
- en: 'Figure 3.26: Visualization obtained after assigning values to colors'
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.26：赋值给颜色后的可视化结果
- en: There are some technical details that are important here. First of all, we add
    the colors and labels for each point to the `ColumnDataSource`. These are then
    referenced when plotting the circles by setting the `fill_color` and legend arguments.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里有一些重要的技术细节。首先，我们将每个点的颜色和标签添加到 `ColumnDataSource` 中。然后，在绘制圆圈时，通过设置 `fill_color`
    和图例参数来引用这些信息。
- en: 'Looking for patterns, zoom in on the lower population countries:![Figure 3.27:
    A zoomed in view of the lower population countries'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 寻找模式时，放大查看低人口国家：![图 3.27：低人口国家的放大视图
- en: '](img/C13018_03_27.jpg)'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_27.jpg)'
- en: 'Figure 3.27: A zoomed in view of the lower population countries'
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.27：低人口国家的放大视图
- en: We can see how the dark dots are more prevalent to the right-hand side of the
    plot. This indicates that countries that have higher interest rates are more likely
    to have been recently updated.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到，深色的点在图表右侧更为集中。这表明，利率较高的国家更有可能最近进行了更新。
- en: The one data column we have not yet looked at is the year-over-year change in
    population. Let's visualize this compared to the interest rate and see if there
    is any trend. We'll also enhance the plot by setting the circle size based on
    the country population.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们尚未查看的一个数据列是年度人口变化。让我们将其与利率进行可视化，并看看是否存在任何趋势。我们还将通过根据国家人口设置圆圈大小来增强图表。
- en: 'Plot the interest rate as a function of the year-over-year population change
    by running the following code:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码，将利率绘制为年度人口变化的函数：
- en: '[PRE39]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '![Figure 3.28: Plotting interest rate as a function of YoY population change'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.28：将利率绘制为年度人口变化的函数'
- en: '](img/C13018_03_28.jpg)'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_28.jpg)'
- en: 'Figure 3.28: Plotting interest rate as a function of YoY population change'
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.28：将利率与年度人口变化绘制成函数
- en: Here, we use the square root of the population for the radii, making sure to
    also scale down the result to a good size for the visualization.
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们使用人口的平方根作为半径，并确保将结果缩放到适合可视化的大小。
- en: We see a strong correlation between the year-over-year population change and
    the interest rate. This correlation is especially strong when we take the population
    sizes into account, by looking primarily at the bigger circles. Let's add a line
    of best fit to the plot to illustrate this correlation.
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们看到年度人口变化和利率之间有着强烈的相关性。当我们考虑到人口规模时，这种相关性尤其强烈，主要通过观察较大的圆圈来实现。让我们在图表上添加一条最佳拟合线来说明这一相关性。
- en: We'll use scikit-learn to create the line of best fit, using the country populations
    (as visualized in the preceding plot) as weights.
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将使用 scikit-learn 来创建最佳拟合线，使用国家人口（如前面的图表所示）作为权重。
- en: 'Determine the line of best fit for the previously plotted relationship by running
    the following code:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码来确定之前绘制的关系的最佳拟合线：
- en: '[PRE40]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The scikit-learn code should be familiar from earlier in this book. As promised,
    we are using the transformed populations, as seen in the previous plot, as the
    weights. The line of best fit is then calculated by predicting the linear model
    values for a range of x values.
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: scikit-learn 代码在本书前面部分应该很熟悉。如同承诺的那样，我们使用的是转换后的人口数据（如前面的图表所示）作为权重。然后，通过预测一系列
    x 值的线性模型值来计算最佳拟合线。
- en: To plot the line, we can reuse the preceding code, adding an extra call to the
    `line` module in Bokeh. We'll also have to set a new data source for this line.
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了绘制这条线，我们可以重用前面的代码，向 Bokeh 中添加额外的 `line` 模块调用。我们还需要为这条线设置一个新的数据源。
- en: 'Re-plot the preceding figure, adding a line of best fit, by running the following
    code:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码重新绘制前面的图表，并添加最佳拟合线：
- en: '[PRE41]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![Figure 3.29: Adding a best fit line to the plot of YoY population change
    and interest rates'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.29：为同比人口变化与利率的图表添加最佳拟合线'
- en: '](img/C13018_03_29.jpg)'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13018_03_29.jpg)'
- en: 'Figure 3.29: Adding a best fit line to the plot of YoY population change and
    interest rates'
  id: totrans-245
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.29：为同比人口变化与利率的图表添加最佳拟合线
- en: For the line source, `lm_source`, we include `N/A` as the country name and population,
    as these are not applicable values for the line of best fit. As can be seen by
    hovering over the line, they indeed appear in the tooltip.
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于线性源 `lm_source`，我们将 `N/A` 作为国家名称和人口值，因为这些值不适用于最佳拟合线。如通过悬停在线条上所见，它们确实出现在工具提示中。
- en: The interactive nature of this visualization gives us a unique opportunity to
    explore outliers in this dataset, for example, the tiny dot in the lower-right
    corner.
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该可视化的交互性质使我们有独特的机会来探索数据集中的异常值，例如右下角的那个微小点。
- en: 'Explore the plot by using the zoom tools and hovering over interesting samples.
    Note the following:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用缩放工具浏览图表并悬停在有趣的样本上。请注意以下几点：
- en: 'Ukraine has an unusually high interest rate, given the low year-over-year population
    change:'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于乌克兰年人口变化较低，因此其利率异常高：
- en: '![Figure 3.30: Using the Zoom tool to explore the data for Ukraine'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.30：使用缩放工具探索乌克兰的数据'
- en: '](img/C13018_03_30.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13018_03_30.jpg)'
- en: 'Figure 3.30: Using the Zoom tool to explore the data for Ukraine'
  id: totrans-252
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.30：使用缩放工具探索乌克兰的数据
- en: 'The small country of Bahrain has an unusually low interest rate, given the
    high year-over-year population change:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 巴林这个小国，尽管年人口变化较大，但其利率异常低：
- en: '![Figure 3.31: Using the Zoom tool to explore the data for Bahrain](img/C13018_03_31.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.31：使用缩放工具探索巴林的数据](img/C13018_03_31.jpg)'
- en: 'Figure 3.31: Using the Zoom tool to explore the data for Bahrain'
  id: totrans-255
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.31：使用缩放工具探索巴林的数据
- en: Contents
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录
- en: '[Preface](C13018_Preface_comm_Final.xhtml#_idParaDest-1)'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[前言](C13018_Preface_comm_Final.xhtml#_idParaDest-1)'
- en: '[About the Book](C13018_Preface_comm_Final.xhtml#_idParaDest-2)'
  id: totrans-258
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[关于本书](C13018_Preface_comm_Final.xhtml#_idParaDest-2)'
- en: '[About the Author](C13018_Preface_comm_Final.xhtml#_idParaDest-3)'
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[关于作者](C13018_Preface_comm_Final.xhtml#_idParaDest-3)'
- en: '[Objectives](C13018_Preface_comm_Final.xhtml#_idParaDest-4)'
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[目标](C13018_Preface_comm_Final.xhtml#_idParaDest-4)'
- en: '[Audience](C13018_Preface_comm_Final.xhtml#_idParaDest-5)'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[受众](C13018_Preface_comm_Final.xhtml#_idParaDest-5)'
- en: '[Approach](C13018_Preface_comm_Final.xhtml#_idParaDest-6)'
  id: totrans-262
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[方法](C13018_Preface_comm_Final.xhtml#_idParaDest-6)'
- en: '[Minimum Hardware Requirements](C13018_Preface_comm_Final.xhtml#_idParaDest-7)'
  id: totrans-263
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[最低硬件要求](C13018_Preface_comm_Final.xhtml#_idParaDest-7)'
- en: '[Software Requirements](C13018_Preface_comm_Final.xhtml#_idParaDest-8)'
  id: totrans-264
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[软件要求](C13018_Preface_comm_Final.xhtml#_idParaDest-8)'
- en: '[Installation and Setup](C13018_Preface_comm_Final.xhtml#_idParaDest-9)'
  id: totrans-265
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[安装与设置](C13018_Preface_comm_Final.xhtml#_idParaDest-9)'
- en: '[Installing Anaconda](C13018_Preface_comm_Final.xhtml#_idParaDest-10)'
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[安装 Anaconda](C13018_Preface_comm_Final.xhtml#_idParaDest-10)'
- en: '[Updating Jupyter and Installing Dependencies](C13018_Preface_comm_Final.xhtml#_idParaDest-11)'
  id: totrans-267
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[更新 Jupyter 并安装依赖](C13018_Preface_comm_Final.xhtml#_idParaDest-11)'
- en: '[Additional Resources](C13018_Preface_comm_Final.xhtml#_idParaDest-12)'
  id: totrans-268
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[附加资源](C13018_Preface_comm_Final.xhtml#_idParaDest-12)'
- en: '[Conventions](C13018_Preface_comm_Final.xhtml#_idParaDest-13)'
  id: totrans-269
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[约定](C13018_Preface_comm_Final.xhtml#_idParaDest-13)'
- en: '[Jupyter Fundamentals](C13018_1_comm_Final.xhtml#_idParaDest-14)'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Jupyter 基础](C13018_1_comm_Final.xhtml#_idParaDest-14)'
- en: '[Introduction](C13018_1_comm_Final.xhtml#_idParaDest-15)'
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[简介](C13018_1_comm_Final.xhtml#_idParaDest-15)'
- en: '[Basic Functionality and Features](C13018_1_comm_Final.xhtml#_idParaDest-16)'
  id: totrans-272
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[基本功能与特点](C13018_1_comm_Final.xhtml#_idParaDest-16)'
- en: '[What is a Jupyter Notebook and Why is it Useful?](C13018_1_comm_Final.xhtml#_idParaDest-17)'
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[什么是 Jupyter Notebook，它为什么有用？](C13018_1_comm_Final.xhtml#_idParaDest-17)'
- en: '[Navigating the Platform](C13018_1_comm_Final.xhtml#_idParaDest-18)'
  id: totrans-274
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[平台导航](C13018_1_comm_Final.xhtml#_idParaDest-18)'
- en: '[Exercise 1: Introducing Jupyter Notebooks](C13018_1_comm_Final.xhtml#_idParaDest-19)'
  id: totrans-275
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 1：介绍 Jupyter Notebooks](C13018_1_comm_Final.xhtml#_idParaDest-19)'
- en: '[Jupyter Features](C13018_1_comm_Final.xhtml#_idParaDest-20)'
  id: totrans-276
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Jupyter 功能](C13018_1_comm_Final.xhtml#_idParaDest-20)'
- en: '[Exercise 2: Implementing Jupyter''s Most Useful Features](C13018_1_comm_Final.xhtml#_idParaDest-21)'
  id: totrans-277
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 2：实现 Jupyter 最有用的功能](C13018_1_comm_Final.xhtml#_idParaDest-21)'
- en: '[Converting a Jupyter Notebook to a Python Script](C13018_1_comm_Final.xhtml#_idParaDest-22)'
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[将 Jupyter Notebook 转换为 Python 脚本](C13018_1_comm_Final.xhtml#_idParaDest-22)'
- en: '[Python Libraries](C13018_1_comm_Final.xhtml#_idParaDest-23)'
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Python 库](C13018_1_comm_Final.xhtml#_idParaDest-23)'
- en: '[Exercise 3: Importing the External Libraries and Setting Up the Plotting Environment](C13018_1_comm_Final.xhtml#_idParaDest-24)'
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 3：导入外部库并设置绘图环境](C13018_1_comm_Final.xhtml#_idParaDest-24)'
- en: '[Our First Analysis - The Boston Housing Dataset](C13018_1_comm_Final.xhtml#_idParaDest-25)'
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[我们的首次分析 - 波士顿住房数据集](C13018_1_comm_Final.xhtml#_idParaDest-25)'
- en: '[Loading the Data into Jupyter Using a Pandas DataFrame](C13018_1_comm_Final.xhtml#_idParaDest-26)'
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 Pandas DataFrame 将数据加载到 Jupyter 中](C13018_1_comm_Final.xhtml#_idParaDest-26)'
- en: '[Exercise 4: Loading the Boston Housing Dataset](C13018_1_comm_Final.xhtml#_idParaDest-27)'
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 4：加载波士顿住房数据集](C13018_1_comm_Final.xhtml#_idParaDest-27)'
- en: '[Data Exploration](C13018_1_comm_Final.xhtml#_idParaDest-28)'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[数据探索](C13018_1_comm_Final.xhtml#_idParaDest-28)'
- en: '[Exercise 5: Analyzing the Boston Housing Dataset](C13018_1_comm_Final.xhtml#_idParaDest-29)'
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 5：分析波士顿住房数据集](C13018_1_comm_Final.xhtml#_idParaDest-29)'
- en: '[Introduction to Predictive Analytics with Jupyter Notebooks](C13018_1_comm_Final.xhtml#_idParaDest-30)'
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Jupyter Notebooks 中的预测分析简介](C13018_1_comm_Final.xhtml#_idParaDest-30)'
- en: '[Exercise 6: Applying Linear Models With Seaborn and Scikit-learn](C13018_1_comm_Final.xhtml#_idParaDest-31)'
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 6：使用 Seaborn 和 Scikit-learn 应用线性模型](C13018_1_comm_Final.xhtml#_idParaDest-31)'
- en: '[Activity 1: Building a Third-Order Polynomial Model](C13018_1_comm_Final.xhtml#_idParaDest-32)'
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 1：构建三次多项式模型](C13018_1_comm_Final.xhtml#_idParaDest-32)'
- en: '[Using Categorical Features for Segmentation Analysis](C13018_1_comm_Final.xhtml#_idParaDest-33)'
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用分类特征进行分段分析](C13018_1_comm_Final.xhtml#_idParaDest-33)'
- en: '[Exercise 7: Creating Categorical Fields From Continuous Variables and Make
    Segmented Visualizations](C13018_1_comm_Final.xhtml#_idParaDest-34)'
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 7：从连续变量创建分类字段并制作分段可视化](C13018_1_comm_Final.xhtml#_idParaDest-34)'
- en: '[Summary](C13018_1_comm_Final.xhtml#_idParaDest-35)'
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[总结](C13018_1_comm_Final.xhtml#_idParaDest-35)'
- en: '[Data Cleaning and Advanced Machine Learning](C13018_2_comm_Final.xhtml#_idParaDest-36)'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[数据清洗与高级机器学习](C13018_2_comm_Final.xhtml#_idParaDest-36)'
- en: '[Introduction](C13018_2_comm_Final.xhtml#_idParaDest-37)'
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[介绍](C13018_2_comm_Final.xhtml#_idParaDest-37)'
- en: '[Preparing to Train a Predictive Model](C13018_2_comm_Final.xhtml#_idParaDest-38)'
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[准备训练预测模型](C13018_2_comm_Final.xhtml#_idParaDest-38)'
- en: '[Determining a Plan for Predictive Analytics](C13018_2_comm_Final.xhtml#_idParaDest-39)'
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[确定预测分析计划](C13018_2_comm_Final.xhtml#_idParaDest-39)'
- en: '[Exercise 8: Explore Data Preprocessing Tools and Methods](C13018_2_comm_Final.xhtml#_idParaDest-40)'
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 8：探索数据预处理工具和方法](C13018_2_comm_Final.xhtml#_idParaDest-40)'
- en: '[Activity 2: Preparing to Train a Predictive Model for the Employee-Retention
    Problem](C13018_2_comm_Final.xhtml#_idParaDest-41)'
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 2：为员工留任问题准备训练预测模型](C13018_2_comm_Final.xhtml#_idParaDest-41)'
- en: '[Training Classification Models](C13018_2_comm_Final.xhtml#_idParaDest-42)'
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[训练分类模型](C13018_2_comm_Final.xhtml#_idParaDest-42)'
- en: '[Introduction to Classification Algorithms](C13018_2_comm_Final.xhtml#_idParaDest-43)'
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[分类算法介绍](C13018_2_comm_Final.xhtml#_idParaDest-43)'
- en: '[Exercise 9: Training Two-Feature Classification Models With Scikit-learn](C13018_2_comm_Final.xhtml#_idParaDest-44)'
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 9：使用 Scikit-learn 训练两特征分类模型](C13018_2_comm_Final.xhtml#_idParaDest-44)'
- en: '[The plot_decision_regions Function](C13018_2_comm_Final.xhtml#_idParaDest-45)'
  id: totrans-301
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[plot_decision_regions 函数](C13018_2_comm_Final.xhtml#_idParaDest-45)'
- en: '[Exercise 10: Training K-nearest Neighbors for Our Model](C13018_2_comm_Final.xhtml#_idParaDest-46)'
  id: totrans-302
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 10：为我们的模型训练 K 最近邻算法](C13018_2_comm_Final.xhtml#_idParaDest-46)'
- en: '[Exercise 11: Training a Random Forest](C13018_2_comm_Final.xhtml#_idParaDest-47)'
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 11：训练随机森林](C13018_2_comm_Final.xhtml#_idParaDest-47)'
- en: '[Assessing Models With K-fold Cross-Validation and Validation Curves](C13018_2_comm_Final.xhtml#_idParaDest-48)'
  id: totrans-304
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 K 折交叉验证与验证曲线评估模型](C13018_2_comm_Final.xhtml#_idParaDest-48)'
- en: '[Exercise 12: Using K-fold Cross Validation and Validation Curves in Python
    With Scikit-learn](C13018_2_comm_Final.xhtml#_idParaDest-49)'
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 12：使用 Scikit-learn 中的 K 折交叉验证与验证曲线](C13018_2_comm_Final.xhtml#_idParaDest-49)'
- en: '[Dimensionality Reduction Techniques](C13018_2_comm_Final.xhtml#_idParaDest-50)'
  id: totrans-306
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[降维技术](C13018_2_comm_Final.xhtml#_idParaDest-50)'
- en: '[Exercise 13: Training a Predictive Model for the Employee Retention Problem](C13018_2_comm_Final.xhtml#_idParaDest-51)'
  id: totrans-307
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 13：为员工留任问题训练预测模型](C13018_2_comm_Final.xhtml#_idParaDest-51)'
- en: '[Summary](C13018_2_comm_Final.xhtml#_idParaDest-52)'
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[总结](C13018_2_comm_Final.xhtml#_idParaDest-52)'
- en: '[Web Scraping and Interactive Visualizations](C13018_3_comm_Final.xhtml#_idParaDest-53)'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[网页抓取与交互式可视化](C13018_3_comm_Final.xhtml#_idParaDest-53)'
- en: '[Introduction](C13018_3_comm_Final.xhtml#_idParaDest-54)'
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[介绍](C13018_3_comm_Final.xhtml#_idParaDest-54)'
- en: '[Scraping Web Page Data](C13018_3_comm_Final.xhtml#_idParaDest-55)'
  id: totrans-311
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[抓取网页数据](C13018_3_comm_Final.xhtml#_idParaDest-55)'
- en: '[Introduction to HTTP Requests](C13018_3_comm_Final.xhtml#_idParaDest-56)'
  id: totrans-312
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[HTTP 请求简介](C13018_3_comm_Final.xhtml#_idParaDest-56)'
- en: '[Making HTTP Requests in the Jupyter Notebook](C13018_3_comm_Final.xhtml#_idParaDest-57)'
  id: totrans-313
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[在 Jupyter Notebook 中进行 HTTP 请求](C13018_3_comm_Final.xhtml#_idParaDest-57)'
- en: '[Exercise 14: Handling HTTP Requests With Python in a Jupyter Notebook](C13018_3_comm_Final.xhtml#_idParaDest-58)'
  id: totrans-314
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 14：在 Jupyter Notebook 中使用 Python 处理 HTTP 请求](C13018_3_comm_Final.xhtml#_idParaDest-58)'
- en: '[Parsing HTML in the Jupyter Notebook](C13018_3_comm_Final.xhtml#_idParaDest-59)'
  id: totrans-315
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[在 Jupyter Notebook 中解析 HTML](C13018_3_comm_Final.xhtml#_idParaDest-59)'
- en: '[Exercise 15: Parsing HTML With Python in a Jupyter Notebook](C13018_3_comm_Final.xhtml#_idParaDest-60)'
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 15：在 Jupyter Notebook 中使用 Python 解析 HTML](C13018_3_comm_Final.xhtml#_idParaDest-60)'
- en: '[Activity 3: Web Scraping With Jupyter Notebooks](C13018_3_comm_Final.xhtml#_idParaDest-61)'
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 3：使用 Jupyter Notebook 进行网页抓取](C13018_3_comm_Final.xhtml#_idParaDest-61)'
- en: '[Interactive Visualizations](C13018_3_comm_Final.xhtml#_idParaDest-62)'
  id: totrans-318
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[交互式可视化](C13018_3_comm_Final.xhtml#_idParaDest-62)'
- en: '[Building a DataFrame to Store and Organize Data](C13018_3_comm_Final.xhtml#_idParaDest-63)'
  id: totrans-319
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[构建数据框以存储和组织数据](C13018_3_comm_Final.xhtml#_idParaDest-63)'
- en: '[Exercise 16: Building and Merging Pandas DataFrames](C13018_3_comm_Final.xhtml#_idParaDest-64)'
  id: totrans-320
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 16：构建和合并 Pandas 数据框](C13018_3_comm_Final.xhtml#_idParaDest-64)'
- en: '[Introduction to Bokeh](C13018_3_comm_Final.xhtml#_idParaDest-65)'
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Bokeh 简介](C13018_3_comm_Final.xhtml#_idParaDest-65)'
- en: '[Exercise 17: Introduction to Interactive Visualization With Bokeh](C13018_3_comm_Final.xhtml#_idParaDest-66)'
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[练习 17：Bokeh 交互式可视化简介](C13018_3_comm_Final.xhtml#_idParaDest-66)'
- en: '[Activity 4: Exploring Data with Interactive Visualizations](C13018_3_comm_Final.xhtml#_idParaDest-67)'
  id: totrans-323
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 4：使用交互式可视化探索数据](C13018_3_comm_Final.xhtml#_idParaDest-67)'
- en: '[Summary](C13018_3_comm_Final.xhtml#_idParaDest-68)'
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[总结](C13018_3_comm_Final.xhtml#_idParaDest-68)'
- en: '[Appendix A](C13018_Solutions_Final.xhtml#_idParaDest-69)'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[附录 A](C13018_Solutions_Final.xhtml#_idParaDest-69)'
- en: '[Chapter 1: Jupyter Fundamentals](C13018_Solutions_Final.xhtml#_idParaDest-70)'
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[第一章：Jupyter 基础](C13018_Solutions_Final.xhtml#_idParaDest-70)'
- en: '[Activity 1: Building a Third-Order Polynomial Model](C13018_Solutions_Final.xhtml#_idParaDest-71)'
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 1：构建三阶多项式模型](C13018_Solutions_Final.xhtml#_idParaDest-71)'
- en: '[Chapter 2: Data Cleaning and Advanced Machine](C13018_Solutions_Final.xhtml#_idParaDest-72)'
  id: totrans-328
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[第二章：数据清洗与高级机器学习](C13018_Solutions_Final.xhtml#_idParaDest-72)'
- en: '[Activity 2: Preparing to Train a Predictive Model for the Employee-Retention
    Problem](C13018_Solutions_Final.xhtml#_idParaDest-73)'
  id: totrans-329
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 2：为员工留任问题准备训练预测模型](C13018_Solutions_Final.xhtml#_idParaDest-73)'
- en: '[Chapter 3: Web Scraping and Interactive Visualizations](C13018_Solutions_Final.xhtml#_idParaDest-74)'
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[第三章：网页抓取与交互式可视化](C13018_Solutions_Final.xhtml#_idParaDest-74)'
- en: '[Activity 3: Web Scraping with Jupyter Notebooks](C13018_Solutions_Final.xhtml#_idParaDest-75)'
  id: totrans-331
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 3：使用 Jupyter Notebook 进行网页抓取](C13018_Solutions_Final.xhtml#_idParaDest-75)'
- en: '[Activity 4: Exploring Data with Interactive Visualizations](C13018_Solutions_Final.xhtml#_idParaDest-76)'
  id: totrans-332
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[活动 4：使用交互式可视化探索数据](C13018_Solutions_Final.xhtml#_idParaDest-76)'
- en: Landmarks
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 地标
- en: '[Cover](Images/cover.xhtml)'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[封面](Images/cover.xhtml)'
- en: '[Table of Contents](C13018_Credits_comm_Final.xhtml#_idContainer004)'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[目录](C13018_Credits_comm_Final.xhtml#_idContainer004)'
