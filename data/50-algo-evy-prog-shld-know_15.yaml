- en: '12'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '12'
- en: Recommendation Engines
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐引擎
- en: The best recommendation I can have is my own talents, and the fruits of my own
    labors, and what others will not do for me, I will try and do for myself.
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我能得到的最好推荐是我自己的才华，和我自己的努力成果，而别人无法为我做的事，我会尽力为自己去做。
- en: ''
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —18–19th-century scientist John James Audubon
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —18至19世纪科学家约翰·詹姆斯·奥杜邦
- en: Recommendation engines harness the power of available data on user preferences
    and item details to offer tailored suggestions. At their core, these engines aim
    to identify commonalities among various items and understand the dynamics of user-item
    interactions. Rather than just focusing on products, recommendation systems cast
    a wider net, considering any type of item – be it a song, a news article, or a
    product – and tailoring their suggestions accordingly.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐引擎利用可用的用户偏好和物品详细数据，提供量身定制的建议。推荐引擎的核心目标是识别不同物品之间的共性，并理解用户与物品互动的动态。推荐系统不仅仅专注于产品，还考虑任何类型的物品——无论是歌曲、新闻文章还是产品——并根据这些来定制推荐。
- en: This chapter starts by presenting the basics of recommendation engines. Then,
    it discusses various types of recommendation engines. In the subsequent sections
    of this chapter, we’ll explore the inner workings of recommendation systems. These
    systems are adept at suggesting tailored items or products to users, but they’re
    not without their challenges. We’ll discuss both their strengths and the limitations
    they present. Finally, we will learn to use recommendation engines to solve a
    real-world problem.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章首先介绍推荐引擎的基础知识。接着，讨论推荐引擎的各种类型。在本章的后续部分，我们将探讨推荐系统的内部工作原理。这些系统能够为用户推荐量身定制的物品或产品，但也面临着挑战。我们将讨论它们的优势和局限性。最后，我们将学习如何使用推荐引擎解决现实世界中的问题。
- en: 'In this chapter, we’ll cover:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: An overview of recommendation engines
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐引擎概述
- en: Different categories of recommendation systems
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同类型的推荐系统
- en: Recognizing the constraints of recommendation approaches
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认识到推荐方法的限制
- en: Areas of practical application
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际应用领域
- en: A practical example
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个实际的例子
- en: By the end of this chapter, you should be able to understand how to use recommendation
    engines to suggest various items based on some preference criteria.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该能够理解如何利用推荐引擎根据某些偏好标准推荐不同的物品。
- en: Let’s start by looking into the background concepts of recommendation engines.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从推荐引擎的背景概念开始了解。
- en: Introducing recommendation systems
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍推荐系统
- en: Recommendation systems are powerful tools, initially crafted by researchers
    but now widely adopted in commercial settings, that predict items a user might
    find appealing. Their ability to deliver personalized item suggestions makes them
    an invaluable asset, especially in the digital shopping landscape.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统是强大的工具，最初由研究人员设计，但现在在商业环境中得到广泛应用，能够预测用户可能感兴趣的物品。它们通过提供个性化的物品推荐，使得推荐系统成为一个不可或缺的资产，尤其在数字购物领域中。
- en: When used in e-commerce applications, recommendation engines use sophisticated
    algorithms to improve the shopping experience for shoppers, allowing service providers
    to customize products according to the preferences of the users.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当推荐引擎应用于电子商务时，使用复杂的算法来改善购物体验，允许服务提供商根据用户的偏好定制产品。
- en: A classic example of the significance of these systems is the Netflix Prize
    challenge in 2009\. Netflix, aiming to refine its recommendation algorithm, offered
    a whopping $1 million prize for any team that could enhance its current recommendation
    system, Cinematch, by 10%. This challenge saw participation from researchers globally,
    with BellKor’s Pragmatic Chaos team emerging as the winner. Their achievement
    underlines the essential role and potential of recommendation systems in the commercial
    domain. More about this fascinating challenge can be explored in this chapter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些系统的重要性的经典例子是2009年的Netflix奖挑战。Netflix为了优化其推荐算法，提供了100万美元的奖金，奖励任何能够将现有推荐系统Cinematch提升10%的团队。这个挑战吸引了全球研究人员的参与，BellKor的Pragmatic
    Chaos团队最终获胜。他们的成就突显了推荐系统在商业领域中至关重要的作用和潜力。关于这个有趣挑战的更多内容，可以在本章中了解。
- en: Types of recommendation engines
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐引擎的类型
- en: 'We can broadly classify recommendation engines into three main categories:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将推荐引擎大致分为三大类：
- en: '**Content-based recommendation engines**: They focus on item attributes, matching
    the features of one product to another.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于内容的推荐引擎**：它们关注物品属性，将一个产品的特征与另一个产品进行匹配。'
- en: '**Collaborative filtering engines**: They predict preferences based on user
    behaviors.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协同过滤引擎**：它们根据用户行为预测偏好。'
- en: '**Hybrid recommendation engines**: A blend of both worlds, these engines integrate
    the strengths of content-based and collaborative filtering methods to refine their
    suggestions.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**混合推荐引擎**：这是一种融合了基于内容和协同过滤方法优点的推荐引擎，用于优化建议。'
- en: 'Having established the categories, let’s start by diving into the details of
    these three types of recommendation engines one by one:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在建立了类别之后，让我们逐一深入了解这三种推荐引擎的细节：
- en: Content-based recommendation engines
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于内容的推荐引擎
- en: '**Content-based recommendation engines** operate on a straightforward principle:
    they recommend items that are like ones the user has previously engaged with.
    The crux of these systems lies in accurately measuring the likeness between items.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**基于内容的推荐引擎**基于一个简单的原理：它们推荐用户以前互动过的类似物品。这些系统的关键在于准确地衡量物品之间的相似性。'
- en: 'To illustrate, imagine the scenario depicted in *Figure 12.1*:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，想象一下*图12.1*中描述的场景：
- en: '![Diagram, schematic  Description automatically generated](img/B18046_12_01.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![Diagram, schematic Description automatically generated](img/B18046_12_01.png)'
- en: 'Figure 12.1: Content-based recommendation system'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.1：基于内容的推荐系统
- en: Let’s say that *User1* has read *Doc1*. Due to the similarities between the
    documents, we could then recommend *Doc2* to *User1*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 假设*用户1*阅读了*文档1*。由于文档之间的相似性，我们可以向*用户1*推荐*文档2*。
- en: This method would only be effective if we could identify and quantify these
    similarities. Thus, identifying similarities between items is pivotal for recommendations.
    Let’s delve into how to quantify these similarities.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法只有在我们能够识别并量化这些相似性时才有效。因此，识别物品之间的相似性对于推荐至关重要。接下来我们将探讨如何量化这些相似性。
- en: Determining similarities in unstructured documents
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确定非结构化文档中的相似性
- en: One way of determining the similarities between different documents is by using
    the co-occurrence matrix, which works on the premise that items frequently bought
    together likely share similarities or belong to complementary categories.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 确定不同文档之间相似性的一种方法是使用共现矩阵，它的前提是经常一起购买的物品可能共享相似性或属于互补类别。
- en: 'For instance, someone buying a razor might also need shaving gel. Let’s decode
    this with data from four users’ buying habits:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，购买剃须刀的人可能还需要购买剃须膏。我们可以通过四个用户的购买习惯数据来解码这一点：
- en: '|  | **Razor** | **Apple** | **Shaving cream** | **Bike** | **Hummus** |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|  | **剃须刀** | **苹果** | **剃须膏** | **自行车** | **鹰嘴豆泥** |'
- en: '| **Mike** | 1 | 1 | 1 | 0 | 1 |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **Mike** | 1 | 1 | 1 | 0 | 1 |'
- en: '| **Taylor** | 1 | 0 | 1 | 1 | 1 |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **Taylor** | 1 | 0 | 1 | 1 | 1 |'
- en: '| **Elena** | 0 | 0 | 0 | 1 | 0 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **Elena** | 0 | 0 | 0 | 1 | 0 |'
- en: '| **Amine** | 1 | 0 | 1 | 0 | 0 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **Amine** | 1 | 0 | 1 | 0 | 0 |'
- en: 'To construct the co-occurrence matrix, follow these steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建共现矩阵，请按照以下步骤操作：
- en: Initialize an *NxN* matrix, where *N* is the number of items. This matrix will
    store the co-occurrence counts.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化一个*NxN*矩阵，其中*N*是物品的数量。该矩阵将存储共现计数。
- en: For each user in the user-item matrix, update the co-occurrence matrix by incrementing
    the cell values for pairs of items that the user has interacted with.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于用户-物品矩阵中的每个用户，通过增加用户与物品对交互的单元格值来更新共现矩阵。
- en: The final matrix showcases the associations between items based on user interactions.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终矩阵展示了基于用户交互的物品关联性。
- en: 'The occurrence matrix of the above table will be as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 上表的共现矩阵如下所示：
- en: '|  | **Razor** | **Apple** | **Shaving cream** | **Bike** | **Hummus** |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '|  | **剃须刀** | **苹果** | **剃须膏** | **自行车** | **鹰嘴豆泥** |'
- en: '| **Razor** | - | 1 | 3 | 1 | 2 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| **剃须刀** | - | 1 | 3 | 1 | 2 |'
- en: '| **Apple** | 1 | - | 1 | 0 | 1 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| **Apple** | 1 | - | 1 | 0 | 1 |'
- en: '| **Shaving cream** | 3 | 1 | - | 1 | 2 |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| **剃须膏** | 3 | 1 | - | 1 | 2 |'
- en: '| **Bike** | 1 | 0 | 1 | - | 1 |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| **自行车** | 1 | 0 | 1 | - | 1 |'
- en: '| **Hummus** | 2 | 1 | 2 | 1 | - |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **鹰嘴豆泥** | 2 | 1 | 2 | 1 | - |'
- en: This matrix, in essence, showcases the likelihood of two items being bought
    together. It’s a valuable tool for recommendation.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 本矩阵本质上展示了两种物品一起购买的可能性。它是推荐系统中的一种有价值的工具。
- en: Collaborative filtering recommendation engines
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 协同过滤推荐引擎
- en: 'The recommendations from **collaborative filtering** are based on the analysis
    of the historical buying patterns of users. The basic assumption is that if two
    users show interest in mostly the same items, we can classify both users as similar.
    In other words, we can assume the following:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**协同过滤**的推荐基于用户历史购买模式的分析。基本假设是，如果两位用户对大部分相同的项目表现出兴趣，我们可以将这两位用户归为相似用户。换句话说，我们可以假设以下情况：'
- en: If the overlap in the buying history of two users exceeds a threshold, we can
    classify them as similar users.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果两位用户的购买历史重叠度超过某个阈值，我们可以将他们归类为相似用户。
- en: Looking at the history of similar users, the items that do not overlap in the
    buying history become the basis of future recommendations through collaborative
    filtering.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过查看相似用户的历史，购买历史中没有重叠的项目将成为协同过滤推荐的基础。
- en: 'For example, let’s look at a specific example. We have two users, *User1* and
    *User2*, as shown in the following diagram:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们看一个具体的例子。我们有两个用户，*User1*和*User2*，如下面的图所示：
- en: '![A diagram of a couple of people  Description automatically generated](img/B18046_12_02.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![一张两个人的示意图  描述自动生成](img/B18046_12_02.png)'
- en: 'Figure 12.2: Collaborative filtering recommendation engine'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.2：协同过滤推荐引擎
- en: 'Note the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意以下几点：
- en: Both *User1* and *User2* have shown interest in exactly the same documents,
    *Doc1* and *Doc2*.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*User1*和*User2*都对完全相同的文档，*Doc1*和*Doc2*，表现出了兴趣。'
- en: Based on their similar historical patterns, we can classify both of them as
    similar users.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据他们相似的历史模式，我们可以将两者归类为相似用户。
- en: If *User1* now reads *Doc3*, then we can suggest *Doc3* to *User2* as well.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果*User1*现在阅读*Doc3*，我们也可以将*Doc3*推荐给*User2*。
- en: This strategy of suggesting items to users based on their history will not always
    work. Let us look into the issues related to collaborative filtering in more detail.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 基于用户历史记录向其推荐项目的策略并不总是有效。让我们更详细地了解与协同过滤相关的问题。
- en: Issues related to collaborative filtering
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与协同过滤相关的问题
- en: 'There are three potential issues related to collaborative filtering:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤涉及的三个潜在问题是：
- en: Inaccuracies due to a limited sample size
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于样本量有限而导致的不准确性
- en: A vulnerability to **isolated analysis**
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 容易受到**孤立分析**的影响
- en: Over-reliance on history
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对历史的过度依赖
- en: Let us look into the limitations in more detail.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地了解这些局限性。
- en: Inaccuracies due to a limited sample size
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 由于样本量有限而导致的不准确性
- en: The accuracy and efficacy of a collaborative filtering system also hinge on
    the sample size. For instance, if only three documents are analyzed, the potential
    for accurate recommendations is limited.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤系统的准确性和有效性还取决于样本量。例如，如果仅分析三份文档，那么做出准确推荐的可能性就会受到限制。
- en: However, if a system has data on hundreds or thousands of documents and interactions,
    its predictive capabilities become significantly more reliable. It’s akin to the
    difference between making predictions based on a handful of data points versus
    having a comprehensive dataset to draw insights from.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果系统拥有数百或数千个文档和交互数据，它的预测能力将变得更加可靠。这就像是基于少量数据点做出预测与拥有全面数据集以进行洞察分析之间的区别。
- en: Even when equipped with vast amounts of data, collaborative filtering isn’t
    foolproof. The reason is that it relies purely on the historical interactions
    between users and items, without accounting for any external factors.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 即使拥有大量数据，协同过滤也并非万无一失。原因在于它完全依赖于用户和项目之间的历史交互，而忽视了任何外部因素。
- en: Vulnerable to isolated analysis
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 容易受到孤立分析的影响
- en: Collaborative filtering zeroes in on patterns formed by user behaviors and their
    interactions with items. This means it often misses out on external influences
    that might dictate a user’s choice. For instance, a user might opt for a particular
    book not because of personal interest but because of academic needs or a friend’s
    recommendation. The collaborative filtering model won’t recognize these nuances.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤关注的是用户行为及其与项目互动形成的模式。这意味着它通常会忽视那些可能影响用户选择的外部因素。例如，用户选择某本书可能并非出于个人兴趣，而是因为学术需要或朋友推荐。协同过滤模型无法识别这些细微差别。
- en: Over-reliance on history
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 对历史的过度依赖
- en: Because the system hinges on historical data, it can sometimes end up reinforcing
    stereotypes or not catching up with a user’s evolving tastes. Imagine if a user
    once had a phase where they loved sci-fi movies but has since transitioned to
    enjoying romantic films. If they watched numerous sci-fi movies in the past, the
    system might still primarily recommend them, missing out on their current preferences.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 因为系统依赖历史数据，它有时会加强刻板印象，或者跟不上用户不断变化的口味。想象一下，如果一个用户曾经有一段时间喜欢科幻电影，但现在转而喜欢浪漫影片。如果他们过去看了大量的科幻电影，系统可能仍然主要推荐这些电影，而忽视了他们当前的偏好。
- en: In essence, while collaborative filtering is powerful, especially with more
    data, it’s essential to understand its inherent limitations stemming from its
    isolated method of operation.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，尽管协同过滤在数据量大时非常强大，但理解其固有的局限性非常重要，因为它是通过孤立的操作方式来工作的。
- en: Next, let’s look at hybrid recommendation engines.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看看混合推荐引擎。
- en: Hybrid recommendation engines
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 混合推荐引擎
- en: 'So far, we have discussed content-based and collaborative-filtering-based recommendation
    engines. Both types of recommendation engines can be combined to create a **hybrid
    recommendation engine**. To do so, we follow these steps:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们讨论了基于内容和基于协同过滤的推荐引擎。这两种推荐引擎可以结合起来创建一个**混合推荐引擎**。为此，我们遵循以下步骤：
- en: Generate a similarity matrix of the items.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成物品的相似度矩阵。
- en: Generate preference matrices of the users.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成用户的偏好矩阵。
- en: Generate recommendations.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成推荐。
- en: Let’s look into these steps one by one.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步分析这些步骤。
- en: Generating a similarity matrix of the items
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生成物品的相似度矩阵
- en: In hybrid recommendations, we start by creating a similarity matrix of items
    using content-based recommendations. This can be done by using the co-occurrence
    matrix or any distance measure to quantify the similarities between items.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在混合推荐中，我们首先通过内容推荐创建物品的相似度矩阵。这可以通过使用共现矩阵或任何距离度量来量化物品之间的相似度。
- en: 'Let’s assume that we currently have five items. Using content-based recommendations,
    we generate a matrix that captures the similarities between items, as shown in
    *Figure 12.3*:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们目前有五个物品。通过基于内容的推荐，我们生成一个矩阵，捕捉物品之间的相似度，如*图12.3*所示：
- en: '![Calendar  Description automatically generated with low confidence](img/B18046_12_03.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![Calendar  Description automatically generated with low confidence](img/B18046_12_03.png)'
- en: 'Figure 12.3: Similarity matrix'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.3：相似度矩阵
- en: Let’s see how we can combine this similarity matrix with a preference matrix
    to generate recommendations.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何将相似度矩阵与偏好矩阵结合，以生成推荐。
- en: Generating reference vectors of the users
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生成用户的参考向量
- en: Based on the history of each of the users of the system, we will produce a preference
    vector that captures those users’ interests.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 根据系统中每个用户的历史记录，我们将生成一个捕捉这些用户兴趣的偏好向量。
- en: Let’s assume that we want to generate recommendations for an online store named
    *KentStreetOnline*, which sells 100 unique items. *KentStreetOnline* is popular
    and has 1 million active subscribers. It is important to note that we need to
    generate only one similarity matrix with dimensions of 100 by 100\. We also need
    to generate a preference vector for each of the users; this means that we need
    to generate 1 million preference vectors for each of the 1 million users.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们要为一家名为*KentStreetOnline*的在线商店生成推荐，该商店销售100种独特的商品。*KentStreetOnline*非常受欢迎，拥有100万活跃订阅者。需要注意的是，我们只需要生成一个尺寸为100×100的相似度矩阵。同时，我们还需要为每个用户生成一个偏好向量；这意味着我们需要为100万用户生成100万个偏好向量。
- en: Each entry of the performance vector represents a preference for an item. The
    value of the first row means that the preference weight for *Item 1* is *4*. The
    preference score isn’t a direct reflection of purchase counts. Instead, it’s a
    weighted metric, potentially considering factors like browsing history, past purchases,
    item ratings, and more.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 性能向量的每一项代表了对某个物品的偏好。第一行的值表示*Item 1*的偏好权重为*4*。偏好分数并不是购买次数的直接反映，而是一个加权指标，可能考虑浏览历史、过去的购买、物品评分等因素。
- en: A score of *4* could represent a combination of interest and past interactions
    with *Item 1*, suggesting a strong likelihood that the user would appreciate that
    item.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*4*的分数可能代表了对*Item 1*的兴趣和过去的互动，表明用户很可能会喜欢这个物品。
- en: 'This is graphically shown in *Figure 12.4*:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这在*图12.4*中有图示：
- en: '![Table  Description automatically generated](img/B18046_12_04.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![表格 描述自动生成](img/B18046_12_04.png)'
- en: 'Figure 12.4: User preference matrix'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.4：用户偏好矩阵
- en: Now, let’s look into how we can generate recommendations based on the similarity
    matrix, *S*, and the user preference matrix, *U*.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看如何基于相似度矩阵*S*和用户偏好矩阵*U*生成推荐。
- en: Generating recommendations
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生成推荐
- en: 'To make recommendations, we can multiply the matrices. Users are more likely
    to be interested in an item that co-occurs frequently with an item that they gave
    a high rating to:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行推荐，我们可以对矩阵进行相乘。用户更可能对与他们给出高评分的物品频繁共现的物品感兴趣：
- en: '*Matrix*[*S*] × *Matrix*[*U*] = *Matrix*[*R*]'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*矩阵*[*S*] × *矩阵*[*U*] = *矩阵*[*R*]'
- en: 'This calculation is shown graphically in *Figure 12.5*:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这个计算在*图12.5*中以图形方式展示：
- en: '![Table  Description automatically generated](img/B18046_12_05.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![表格 描述自动生成](img/B18046_12_05.png)'
- en: 'Figure 12.5: Generation of a recommendation matrix'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5：推荐矩阵的生成
- en: A separate resultant matrix is generated for each of the users. The numbers
    in the recommendation matrix, *Matrix[R]*, quantify the predicted interest of
    a user in each of the items. For example, in the resultant matrix, the fourth
    item has the highest number, 58\. So this item is highly recommended for this
    particular user.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 为每个用户生成一个单独的结果矩阵。推荐矩阵*Matrix[R]*中的数字量化了用户对每个项目的预测兴趣。例如，在结果矩阵中，第四个项目的数字最大，达到58。所以这个项目被强烈推荐给这个特定的用户。
- en: Evolving the recommendation system
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发展推荐系统
- en: Recommendation systems aren’t static; they thrive on constant refinement. How
    does this evolution occur? By juxtaposing the recommended items (predictions)
    with the user’s actual choices. By analyzing discrepancies, the system identifies
    areas to improve. Over time, by recalibrating based on user feedback and observed
    behaviors, the system enhances its recommendation accuracy, ensuring users always
    receive the most relevant suggestions.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统不是静态的；它们依赖于不断的优化。这个演变是如何发生的呢？通过将推荐的项目（预测）与用户的实际选择进行对比。通过分析差异，系统可以识别出需要改进的地方。随着时间的推移，通过基于用户反馈和观察到的行为进行重新校准，系统提高了推荐的准确性，确保用户始终能收到最相关的建议。
- en: Now, let’s look into the limitations of different recommendation systems.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看不同推荐系统的局限性。
- en: Understanding the limitations of recommendation systems
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解推荐系统的局限性
- en: Recommendation engines use predictive algorithms to suggest recommendations
    to a bunch of users. It is a powerful technology, but we should be aware of its
    limitations. Let’s look into the various limitations of recommendation systems.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐引擎使用预测算法向一群用户推荐内容。这是一项强大的技术，但我们也应当了解其局限性。让我们来探讨推荐系统的各种限制。
- en: The cold start problem
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 冷启动问题
- en: 'At the core of collaborative filtering lies a crucial dependency: historical
    user data. Without a track record of user preferences, generating accurate suggestions
    becomes a challenge. For a new entrant into the system, the absence of data means
    our algorithms largely operate on assumptive grounds, which can lead to imprecise
    recommendations. Similarly, in content-based recommendation systems, fresh items
    might lack comprehensive details, making the suggestion process less reliable.
    This data dependency – the need for established user and item data to produce
    sound recommendations – is what’s termed **the cold start problem**.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤的核心是一个至关重要的依赖性：历史用户数据。没有用户偏好的记录，生成准确的推荐将变得困难。对于一个新加入系统的用户，由于缺乏数据，我们的算法主要基于假设，这可能导致不精确的推荐。同样，在基于内容的推荐系统中，新项目可能缺乏全面的细节，这使得推荐过程不太可靠。这种数据依赖性——需要有一定的用户和项目数据才能产生可靠的推荐——就是所谓的**冷启动问题**。
- en: 'There are several strategies to counterbalance the cold start challenge:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种策略可以应对冷启动问题：
- en: '**Hybrid systems**: Merging collaborative and content-based filtering can offset
    the limitations of one system using the strengths of the other.'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**混合系统**：将协同过滤与基于内容的过滤相结合，可以通过利用另一种系统的优势来弥补某个系统的局限性。'
- en: '**Knowledge-based recommendations**: If historical data is scant, leaning on
    explicit knowledge about users and items can help bridge the gap.'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基于知识的推荐**：如果历史数据稀缺，依靠关于用户和项目的显式知识可以帮助弥补这一空白。'
- en: '**Onboarding questionnaires**: For new users, a brief questionnaire about preferences
    can seed the system with initial data, guiding early recommendations.'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**新手问卷**：对于新用户，可以通过简短的偏好问卷为系统提供初步数据，从而引导早期推荐。'
- en: Understanding and countering these challenges ensures that recommendation systems
    remain an effective and reliable tool in user engagement strategies.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 理解并应对这些挑战，确保推荐系统在用户参与策略中始终是一种有效且可靠的工具。
- en: Metadata requirements
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 元数据需求
- en: While content-based recommendation systems can function without metadata, incorporating
    such details can enhance their precision. It’s important to note that metadata
    isn’t confined to just textual descriptions. In our multifaceted digital ecosystem,
    items span various media types like images, audio, or movies. For such media,
    the “content” can be derived from their inherent properties. For instance, image-based
    metadata might be pulled from visual patterns; audio metadata from elements like
    waveforms or spectral features; and for movies, aspects like genre, cast, or scene
    structure can be considered.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然基于内容的推荐系统可以在没有元数据的情况下运行，但纳入这些细节可以提升其精度。值得注意的是，元数据不仅限于文本描述。在我们多元化的数字生态系统中，商品涵盖了各种媒体类型，如图像、音频或电影。对于这些媒体，“内容”可以从其固有属性中提取。例如，图像相关的元数据可能来自视觉模式；音频的元数据可以来自波形或频谱特征；对于电影，可以考虑如类型、演员阵容或场景结构等方面。
- en: Integrating these diverse content dimensions allows recommendation systems to
    be more adaptable, offering refined suggestions across a wide range of items.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些多样的内容维度进行整合，可以使推荐系统更加适应，提供跨广泛商品范围的精确建议。
- en: The data sparsity problem
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据稀疏问题
- en: Across an enormous number of items, a user will have rated only a few items,
    resulting in a very sparse user/item rating matrix.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在大量商品中，用户可能只会评价少数商品，从而导致一个非常稀疏的用户/商品评分矩阵。
- en: Amazon has around a billion users and a billion items. Amazon’s recommendation
    engine is said to have the sparsest data for any recommendation engine in the
    world.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊拥有大约十亿用户和十亿个商品。亚马逊的推荐引擎被认为是全球数据最稀疏的推荐引擎之一。
- en: To tackle such sparsity, various techniques are deployed. **Matrix factorization
    methods**, for example, can predict potential ratings in these sparse areas, providing
    a more complete user-item interaction landscape. Additionally, **hybrid recommendation
    systems**, which combine elements of content-based and collaborative filtering,
    can generate meaningful recommendations even when user-item interactions are limited.
    By integrating these and other approaches, recommendation systems can effectively
    navigate and mitigate the challenges posed by sparse datasets.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 为了应对这种稀疏性，采用了多种技术。例如，**矩阵分解方法**可以预测这些稀疏区域中的潜在评分，从而提供更完整的用户-项目交互景观。此外，**混合推荐系统**结合了基于内容的过滤和协同过滤的元素，即使在用户-项目交互有限的情况下，也能生成有意义的推荐。通过整合这些及其他方法，推荐系统能够有效应对和缓解稀疏数据集带来的挑战。
- en: The double-edged sword of social influence in recommendation systems
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐系统中的社交影响力的双刃剑
- en: Recommendation systems can be significantly influenced by social dynamics. Indeed,
    our social circles often have a marked impact on our preferences and choices.
    For instance, friends tend to make similar purchases and rate products or services
    in similar ways.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统可以受到社交动态的显著影响。事实上，我们的社交圈常常对我们的偏好和选择产生重要影响。例如，朋友们往往做出相似的购买决策，并以相似的方式对产品或服务进行评价。
- en: On the positive side, leveraging social connections can boost recommendation
    relevance. If a system observes that individuals within a particular social group
    enjoyed a certain movie or product, it might make sense to recommend that same
    item to other members of the group. This could lead to increased user satisfaction
    and, potentially, higher conversion rates.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 从积极的方面来看，利用社交连接可以提升推荐的相关性。如果系统发现某个特定社交群体中的个体喜欢某部电影或某个产品，那么推荐同样的商品给群体中的其他成员可能是有意义的。这可能会带来更高的用户满意度，并且有可能提高转化率。
- en: However, there’s a downside. Relying too heavily on social influence can introduce
    bias into the recommendations. It might inadvertently create echo chambers where
    users are only exposed to items their immediate social circle appreciate, limiting
    diversity and potentially missing out on products or services that could be more
    individually suited. Furthermore, this could lead to a self-reinforcing feedback
    loop, where the same items keep getting recommended, overshadowing other potentially
    valuable items.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，也存在一个缺点。过度依赖社交影响可能会在推荐中引入偏见。它可能会无意间创建回音室效应，让用户只接触到他们社交圈内认可的项目，从而限制了多样性，并可能错过那些更符合个人需求的产品或服务。此外，这还可能导致自我强化的反馈循环，同样的项目不断被推荐，压倒其他潜在的有价值项目。
- en: Thus, while social influence is a powerful tool in shaping user preferences,
    it’s essential for recommendation systems to balance it with individual user behavior
    and broader trends to ensure a diverse and personalized user experience.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，尽管社交影响力是塑造用户偏好的强大工具，推荐系统仍需要将其与用户个体行为和更广泛的趋势平衡，以确保多样化和个性化的用户体验。
- en: Areas of practical applications
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际应用领域
- en: Recommendation systems play a pivotal role in our daily digital interactions.
    To truly understand their significance, let’s delve into their applications across
    various industries.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统在我们日常的数字互动中扮演着关键角色。为了真正理解它们的重要性，我们将探讨它们在各个行业中的应用。
- en: Based on the comprehensive details provided about Netflix’s use of data science
    and its recommendation system, let’s look at the restructured statement addressing
    the points mentioned.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 根据提供的关于Netflix使用数据科学及其推荐系统的全面信息，让我们来看一下调整后的陈述，涵盖了这些要点。
- en: Netflix’s mastery of data-driven recommendations
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Netflix在数据驱动推荐方面的精通
- en: Netflix, a leader in streaming, has harnessed data analytics to fine-tune content
    recommendations, with 800 engineers in Silicon Valley advancing this effort. Their
    emphasis on data-driven strategies is evident in the Netflix Prize challenge.
    The winning team, BellKor’s Pragmatic Chaos, used 107 diverse algorithms, from
    matrix factorization to restricted Boltzman machines, investing 2,000 hours in
    its development.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 作为流媒体行业的领导者，Netflix通过数据分析优化内容推荐，硅谷的800名工程师在推动这一努力。它们对数据驱动策略的重视在Netflix Prize挑战中得到了体现。获胜团队BellKor’s
    Pragmatic Chaos使用了107种不同的算法，从矩阵分解到限制玻尔兹曼机，投入了2,000小时的开发时间。
- en: The results were a significant 10.06% improvement in their “Cinematch” system.
    This translated to more streaming hours, fewer subscription cancellations, and
    substantial savings for Netflix. Interestingly, recommendations now influence
    about 75% of what users watch. Töscher et al. (2009) highlighted a curious “one-day
    effect” suggesting shared accounts or user mood variations.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是他们的“Cinematch”系统显著提高了10.06%。这转化为更多的流媒体观看时长、更少的订阅取消，以及Netflix的巨大节省。有趣的是，现在大约75%的用户观看内容是由推荐决定的。Töscher等人（2009年）提出了一种有趣的“1天效应”，暗示共享账户或用户情绪波动可能影响推荐。
- en: While the challenge showcased Netflix’s commitment to data, it also hinted at
    the potential of ensemble techniques in striking a balance between recommendation
    diversity and accuracy.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个挑战展示了Netflix对数据的承诺，但它也暗示了集成技术在平衡推荐多样性和准确性方面的潜力。
- en: Today, elements of the winning model remain core to Netflix’s recommendation
    engine, but with ever-evolving technology, there’s potential for further refinements,
    like integrating reinforcement algorithms and improved A/B testing.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，获胜模型的元素仍然是Netflix推荐引擎的核心，但随着技术的不断发展，仍有进一步改进的潜力，例如集成强化算法和改进的A/B测试。
- en: 'Here’s the source for the Netflix statistic: [https://towardsdatascience.com/netflix-recommender-system-a-big-data-case-study-19cfa6d56ff5](https://towardsdatascience.com/netflix-recommender-system-a-big-data-case-study-19cfa6d56ff5).'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Netflix统计数据的来源：[https://towardsdatascience.com/netflix-recommender-system-a-big-data-case-study-19cfa6d56ff5](https://towardsdatascience.com/netflix-recommender-system-a-big-data-case-study-19cfa6d56ff5)。
- en: The evolution of Amazon’s recommendation system
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亚马逊推荐系统的演变
- en: In the early 2000s, Amazon transformed its recommendation engine by shifting
    from user-based collaborative filtering to item-to-item collaborative filtering,
    as detailed in a seminal 2003 paper by Linden, Smith, and York. The strategy switched
    from recommending products based on similar users to suggesting products linked
    to individual product purchases.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2000 年代初期，亚马逊通过将推荐引擎从基于用户的协同过滤转变为物品与物品之间的协同过滤，彻底改变了其推荐系统。正如林登、史密斯和约克在 2003
    年的开创性论文中所详细介绍的，这一策略从基于相似用户推荐产品转变为根据个别产品购买情况推荐相关产品。
- en: The essence of this “relatedness” was deciphered from observed customer purchasing
    patterns. If Harry Potter book buyers often bought a Harry Potter bookmark, the
    items were considered related. Yet, the initial system had flaws. For high-volume
    buyers, the recommendations weren’t as refined, leading Smith and his team to
    make necessary algorithmic tweaks.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这种“相关性”的本质来自于观察到的客户购买模式。如果《哈利·波特》书籍的买家经常购买哈利·波特书签，那么这些物品就被认为是相关的。然而，初始系统存在缺陷。对于高频购买者，推荐不够精细，这促使史密斯和他的团队对算法进行了必要的调整。
- en: Fast-forward a few years – during a 2019 re:MARS conference, Amazon highlighted
    its significant advancements in movie recommendations for Prime Video customers,
    achieving a twofold improvement.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 快进到几年后——在 2019 年的 re:MARS 大会上，亚马逊强调了其在为 Prime Video 客户提供电影推荐方面的重大进展，实现了两倍的提升。
- en: The technique utilized for this was inspired by a matrix completion problem.
    This method involves representing Prime Video customers and movies in a grid and
    predicting the probability of a customer watching a particular movie. Amazon then
    applied deep neural networks to this matrix problem, leading to more accurate
    and personalized movie recommendations.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 该技术灵感来源于矩阵补全问题。这种方法涉及将 Prime Video 用户和电影表示在一个网格中，并预测用户观看特定电影的概率。亚马逊随后应用深度神经网络来解决这个矩阵问题，从而实现了更准确和个性化的电影推荐。
- en: The future holds even more potential. With continued research and advancements,
    the Amazon team aims to further refine and revolutionize their recommendation
    algorithms, always striving to enhance the customer experience.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 未来充满潜力。随着持续的研究和进步，亚马逊团队计划进一步优化和革新推荐算法，不断提升客户体验。
- en: 'You can find the Amazon statistic here: [https://www.amazon.science/the-history-of-amazons-recommendation-algorithm](https://www.amazon.science/the-history-of-amazons-recommendation-algorithm).'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里找到亚马逊的统计数据：[https://www.amazon.science/the-history-of-amazons-recommendation-algorithm](https://www.amazon.science/the-history-of-amazons-recommendation-algorithm)。
- en: Now, let’s try to use a recommendation engine to solve a real-world problem.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试使用推荐引擎来解决一个实际问题。
- en: Practical example – creating a recommendation engine
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际案例 – 创建一个推荐引擎
- en: Let’s build a recommendation engine that can recommend movies to a bunch of
    users. We will use data put together by the GroupLens Research group at the University
    of Minnesota.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建一个推荐引擎，能够为一群用户推荐电影。我们将使用由明尼苏达大学 GroupLens 研究小组整理的数据。
- en: 1\. Setting up the framework
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 搭建框架
- en: 'Our first task is to ensure we have the right tools for the job. In the world
    of Python, this means importing necessary libraries:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一项任务是确保拥有正确的工具。对于 Python 来说，这意味着导入必要的库：
- en: '[PRE0]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '2\. Data loading: ingesting reviews and titles'
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 数据加载：导入评论和标题
- en: 'Now, let’s import the `df_reviews` and `df_movie_titles` datasets:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们导入 `df_reviews` 和 `df_movie_titles` 数据集：
- en: '[PRE1]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `reviews.csv` dataset encompasses a rich collection of user reviews. Each
    entry features a user’s ID, a movie ID they’ve reviewed, their rating, and a timestamp
    of when the review was made.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`reviews.csv` 数据集包含了丰富的用户评论集合。每个条目包含用户的 ID、他们评论过的电影 ID、评分以及评论时间戳。'
- en: '![A table with numbers and text  Description automatically generated](img/B18046_12_06.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![带有数字和文本的表格 自动生成的描述](img/B18046_12_06.png)'
- en: 'Figure 12.6: Contents of the reviews.csv dataset'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.6：reviews.csv 数据集的内容
- en: The `movies.csv` dataset is a compilation of movie titles and their details.
    Each record usually contains a unique movie ID, the movie’s title, and its associated
    genre or genres.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`movies.csv` 数据集是电影标题及其详细信息的汇编。每条记录通常包含一个独特的电影 ID、电影标题以及其相关的类别或类别。'
- en: '![A screenshot of a computer  Description automatically generated](img/B18046_12_07.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![计算机截图 自动生成的描述](img/B18046_12_07.png)'
- en: 'Figure 12.7: Contents of the movies.csv dataset'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.7：movies.csv 数据集的内容
- en: '3\. Merging data: crafting a comprehensive view'
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 合并数据：打造全面视图
- en: 'For a holistic perspective, we need to merge these datasets. The `''movieId''`
    serves as our bridge between them:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 从全局角度看，我们需要合并这些数据集。`'movieId'` 是我们连接它们的桥梁：
- en: '[PRE2]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The merged datasets should contain the following information:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 合并后的数据集应包含以下信息：
- en: '![A table with numbers and words  Description automatically generated](img/B18046_12_08.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![一个包含数字和文字的表格，描述自动生成](img/B18046_12_08.png)'
- en: 'Figure 12.8: Merged movie data'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.8：合并的电影数据
- en: 'Here’s a brief on each column:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是每一列的简要说明：
- en: '`userId`: A unique identifier for each user.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`userId`：每个用户的唯一标识符。'
- en: '`movieId`: A unique identifier for each movie.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`movieId`：每部电影的唯一标识符。'
- en: '`rating`: Represents the rating assigned by a user to a movie, ranging from
    1 to 5.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rating`：表示用户对电影的评分，范围从 1 到 5。'
- en: '`timestamp`: Denotes when a particular movie was rated.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestamp`：表示特定电影被评分的时间。'
- en: '`title`: The movie’s title.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title`：电影的标题'
- en: '`genres`: The genre(s) associated with the movie.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`genres`：与电影相关的类型。'
- en: '4\. Descriptive analysis: gleaning insights from ratings'
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. 描述性分析：从评分中获取洞察
- en: 'Let’s dive into the heart of our data: the ratings. A good starting point is
    to compute the average rating for each movie. Alongside, understanding the number
    of users who rated a movie can provide insights into its popularity:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解数据的核心：评分。一个好的起点是计算每部电影的平均评分。同时，了解评分人数也能提供有关电影受欢迎程度的线索：
- en: '[PRE3]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `mean` rating for each movie should be the following:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 每部电影的 `mean` 评分应如下所示：
- en: '![A screenshot of a computer  Description automatically generated](img/B18046_12_09.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![计算机截图，描述自动生成](img/B18046_12_09.png)'
- en: 'Figure 12.9: Calculating the mean rating'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.9：计算平均评分
- en: With these aggregated metrics, we can discern popular movies with high average
    ratings, potential blockbusters with numerous ratings, or hidden gems that might
    have fewer reviews but high averages.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些聚合指标，我们可以识别出评分较高的热门电影，具有大量评分的潜在大片，或者可能有较少评论但平均评分较高的隐藏佳作。
- en: This foundation will pave the way for the subsequent steps, where we’ll delve
    into building the actual recommendation engine. As we progress, our understanding
    of user preferences will refine, enabling us to suggest movies that resonate with
    individual tastes.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基础将为后续步骤铺平道路，我们将深入构建实际的推荐引擎。随着进展，我们对用户偏好的理解将不断深化，从而使我们能够推荐更符合个人口味的电影。
- en: '5\. Structuring for recommendations: crafting the matrix'
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5. 为推荐构建结构：构建矩阵
- en: 'The next logical step is to convert our dataset into a structure optimized
    for recommendations. Visualize this structure as a matrix:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将我们的数据集转换为适合推荐的结构。可以将这个结构想象成一个矩阵：
- en: Rows represent our users (indexed by `userId`)
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行表示我们的用户（按 `userId` 索引）
- en: Columns signify movie titles
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表示电影标题
- en: Cells within the matrix are populated with ratings, revealing what a user thought
    of a specific movie
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵中的单元格填充了评分，显示了用户对特定电影的评价
- en: 'The `pivot_table` function in Pandas is a versatile tool that helps reshape
    or pivot data in a DataFrame to provide a summarized view. The function essentially
    creates a new derived table out of the original one:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 中的 `pivot_table` 函数是一个多功能工具，帮助重塑或透视 DataFrame 中的数据，以提供总结视图。该函数本质上是从原始表创建一个新的派生表：
- en: '[PRE4]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note that the preceding code will generate a very sparse matrix.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前面的代码将生成一个非常稀疏的矩阵。
- en: '6\. Putting the engine to test: recommending movies'
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6. 测试引擎：推荐电影
- en: Let’s see our engine in action. Suppose a user has just watched *Avatar* (2009).
    How can we find other movies they might enjoy?
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看引擎如何工作。假设一个用户刚刚看过 *阿凡达*（2009）。我们如何找到他们可能喜欢的其他电影呢？
- en: 'Our first task is to isolate all users who’ve rated *Avatar* (2009):'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个任务是隔离所有评分过 *阿凡达*（2009）的用户：
- en: '[PRE5]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'From the preceding code, note the following:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的代码中，注意以下几点：
- en: '**userId**: This represents the unique identifier for each user in our dataset.
    The `userId` list contains `10`, `15`, `18`, `21`, and `22` – the first five users
    in our data snapshot who have rated *Avatar* (2009).'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**userId**：表示我们数据集中每个用户的唯一标识符。`userId` 列表包含 `10`、`15`、`18`、`21` 和 `22`——我们数据快照中前五个评分
    *阿凡达*（2009）的用户。'
- en: '**Ratings**: The numbers adjacent to each `userId` (`2.5`, `3.0`, `4.0`, `4.0`,
    and `3.5`) represent the ratings these users assigned to *Avatar* (2009). The
    ratings range between `1` and `5`, where a higher value indicates a more favorable
    opinion about the movie. For example, *User 10* rated *Avatar* (2009) a `2.5`,
    suggesting they found the movie average or perhaps slightly below their expectations,
    and *User 22* rated it a `3.5`, expressing a slightly above-average appreciation
    for the movie.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**评分**：与每个`userId`（`2.5`、`3.0`、`4.0`、`4.0`、`3.5`）相邻的数字代表这些用户给*阿凡达*（2009）电影的评分。评分范围为`1`到`5`，其中更高的评分表示用户对电影的评价更高。例如，*用户10*给*阿凡达*（2009）的评分是`2.5`，意味着他们觉得电影一般，甚至略低于预期，而*用户22*给出了`3.5`的评分，表明他们对电影有略高于平均水平的评价。'
- en: Let’s build a recommendation engine that can recommend movies to a bunch of
    users.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建一个推荐引擎，能够为一群用户推荐电影。
- en: Finding movies correlating with Avatar (2009)
  id: totrans-201
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 寻找与《阿凡达》（2009）相关的电影
- en: By determining how other movies correlate in rating patterns with *Avatar* (2009),
    we can suggest movies that might appeal to fans of *Avatar*.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 通过确定其他电影与*阿凡达*（2009）的评分模式的相关性，我们可以建议可能吸引*阿凡达*粉丝的电影。
- en: 'To present our findings neatly:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁地呈现我们的发现：
- en: '[PRE7]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 10,000 BC (2008) -0.075431 Understanding correlation
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 《公元10000年》（2008） -0.075431 理解相关性
- en: A higher correlation (close to 1) means a movie’s rating pattern is similar
    to *Avatar* (2009). A negative value indicates the opposite.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 较高的相关性（接近1）表示一部电影的评分模式与*阿凡达*（2009）相似。负值则表示相反的情况。
- en: However, it’s crucial to approach the recommendations with caution. For instance,
    **batteries not included* (1987) emerged as a top recommendation for *Avatar*
    (2009) fans, which might not seem accurate. This could be due to the limitations
    of relying solely on user ratings without considering other factors, like genres
    or movie themes. Adjustments and refinements would be needed for a more precise
    recommendation system.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，必须谨慎处理推荐。例如，电影**《电池未 included》（1987）**成了*阿凡达*（2009）粉丝的热门推荐，这看起来并不准确。可能是因为仅依赖用户评分而忽视其他因素（如类型或电影主题）会导致问题。为了更精确的推荐系统，必须进行调整和优化。
- en: The resulting table showcases movies that correlate in terms of user rating
    behavior with *Avatar*. The table produced at the end of our analysis lists movies
    in terms of their correlation to *Avatar* based on user ratings. But what does
    this mean in simpler terms?
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的表格展示了与*阿凡达*的用户评分行为相关的电影。我们分析结束时生成的表格按与*阿凡达*的相关性列出了电影。但是，这到底意味着什么呢？
- en: 'Correlation, in this context, refers to a statistical measure that explains
    how one set of data moves in relation to another set of data. Specifically, we
    used the Pearson correlation coefficient, which ranges from -1 to 1:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，相关性指的是一种统计度量，用来解释一组数据相对于另一组数据的变化关系。具体来说，我们使用了皮尔逊相关系数，它的取值范围是从-1到1：
- en: '**1**: Perfect positive correlation. This means if *Avatar* received a high
    rating from a user, the other movie also received a high rating from the same
    user.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1**：完美正相关。这意味着如果*阿凡达*收到某用户的高评分，那么同一用户给的其他电影也会获得高评分。'
- en: '**-1**: Perfect negative correlation. If *Avatar* got a high rating from a
    user, the other movie got a low rating from the same user.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-1**：完美负相关。如果用户给*阿凡达*打了高分，那么同一用户给的其他电影评分会很低。'
- en: '**0**: No correlation. The ratings of *Avatar* and the other movie are independent
    of each other.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**0**：无相关性。*阿凡达*与其他电影的评分彼此独立。'
- en: In our movie recommendation context, movies with a higher positive correlation
    value (closer to 1) to *Avatar* are deemed to be more suitable recommendations
    for users who liked *Avatar*. This is because these movies have shown a pattern
    of receiving ratings similar to *Avatar* from the users.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的电影推荐情境中，与*阿凡达*相关性较高（接近1）的电影被认为更适合推荐给喜欢*阿凡达*的用户。这是因为这些电影展示了与*阿凡达*相似的评分模式。
- en: By inspecting the table, you can identify which movies have a rating behavior
    akin to *Avatar* and, thus, can be potential recommendations for its fans.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查表格，你可以识别出哪些电影的评分行为与*阿凡达*类似，因此它们可能成为*阿凡达*粉丝的潜在推荐。
- en: This means that we can use these movies as recommendations for the user.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以将这些电影作为推荐项提供给用户。
- en: Evaluating the model
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评估模型
- en: Testing and evaluation are critical. One way to evaluate our model is by using
    methods like train-test split, where a portion of data is set aside for testing.
    The model’s recommendations for the test set are then compared to actual user
    ratings. Metrics like **Mean Absolute Error** (**MAE**) or **Root Mean Square
    Error** (**RMSE**) can quantify the differences.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 测试和评估至关重要。评估我们模型的一种方法是使用诸如训练-测试分割等方法，将部分数据留作测试。然后将模型在测试集上的推荐与实际用户评分进行比较。像**平均绝对误差**（**MAE**）或**均方根误差**（**RMSE**）等指标可以量化这些差异。
- en: 'Retraining over time: incorporating user feedback'
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 随着时间的推移重新训练：融入用户反馈
- en: User preferences evolve. Retraining the recommendation model periodically with
    fresh data ensures its recommendations remain relevant. Incorporating a feedback
    loop where users can rate or review recommendations further refines the model’s
    accuracy.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 用户偏好会不断变化。定期用新数据重新训练推荐模型，确保其推荐结果始终相关。引入反馈循环，让用户对推荐进行评分或评论，进一步提升模型的准确性。
- en: Summary
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about recommendation engines. We studied the selection
    of the right recommendation engine based on the problem that we are trying to
    solve. We also looked into how we can prepare data for recommendation engines
    to create a similarity matrix. We also learned how recommendation engines can
    be used to solve practical problems, such as suggesting movies to users based
    on their past patterns.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们学习了推荐引擎。我们研究了如何根据我们要解决的问题选择合适的推荐引擎。我们还探讨了如何为推荐引擎准备数据，以创建相似度矩阵。我们还学习了推荐引擎如何用于解决实际问题，例如根据用户过去的行为模式推荐电影。
- en: In the next chapter, we will focus on the algorithms that are used to understand
    and process data.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将重点介绍用于理解和处理数据的算法。
- en: Learn more on Discord
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Discord上了解更多
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的Discord社区——在这里你可以分享反馈、向作者提问以及了解新版本——请扫描下面的二维码：
- en: '[https://packt.link/WHLel](https://packt.link/WHLel)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/WHLel](https://packt.link/WHLel)'
- en: '![](img/QR_Code1955211820597889031.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code1955211820597889031.png)'
