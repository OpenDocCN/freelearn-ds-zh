- en: Getting Your Data Ready
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备你的数据
- en: Have you ever asked yourself whether your data is clean enough to be analyzed?
    It’s likely that everyone who works with data has, which is why this chapter is
    dedicated to getting your data ready for analysis, otherwise known as data cleaning.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你有没有问过自己，你的数据是否足够干净，能被分析？很可能，所有与数据打交道的人都有过这样的疑问，这也是本章致力于帮助你准备好数据进行分析的原因，这个过程通常被称为数据清理。
- en: The first part of this chapter is theory-oriented and does not include exercises.
    A careful reading of this information is encouraged since it provides a foundation
    for greater insight. The latter portion of the chapter provides various exercises
    specifically focused on data preparation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第一部分偏向理论，不包括练习。建议仔细阅读这些信息，因为它为更深入的理解提供了基础。本章后半部分提供了专门关注数据准备的各种练习。
- en: Now let’s dive into this fascinating topic with the goal of enriching our understanding
    and becoming ever-better data stewards.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入探讨这个令人着迷的话题，目标是丰富我们的理解，成为更好的数据管理者。
- en: 'In this chapter, we will discuss the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Understanding Hyper
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解Hyper
- en: Focusing on data preparation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚焦数据准备
- en: Surveying data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查数据
- en: Cleaning messy data
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清理杂乱的数据
- en: Since Tableau Desktop 10.5 has been on the market for some time, you may already
    have heard of Hyper. Regardless of whether you have or not, continue reading for
    a primer on this feature!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Tableau Desktop 10.5已经上市一段时间，你可能已经听说过Hyper。不管你是否听说过，继续阅读，了解这个功能的基础知识！
- en: Understanding Hyper
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Hyper
- en: In this section, we will explore Tableau’s data-handling engine, and how it
    enables structured yet organic data mining processes in enterprises. Since the
    release of Tableau 10.5, we can make use of Hyper, a high-performing database,
    allowing us to query source data faster than ever before. Hyper is usually not
    well understood, even by advanced developers, because it’s not an overt part of
    day-to-day activities; however, if you want to truly grasp how to prepare data
    for Tableau, this understanding is crucial.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探索Tableau的数据处理引擎，以及它如何在企业中实现结构化而富有活力的数据挖掘过程。自Tableau 10.5发布以来，我们可以利用Hyper这一高性能数据库，让我们能够比以往更快地查询源数据。即使是高级开发人员，也通常对Hyper了解不深，因为它并不是日常活动中显而易见的一部分；然而，如果你真想掌握如何为Tableau准备数据，这种理解至关重要。
- en: 'Hyper originally started as a research project at the University of Munich
    in 2008\. In 2016, it was acquired by Tableau and appointed as the dedicated data
    engine group of Tableau, maintaining its base and employees in Munich. Initially
    in Tableau 10.5, Hyper replaced the earlier data-handling engine only for extracts.
    It is still true that live connections are not touched by Hyper, but Tableau Prep
    Builder now runs on the Hyper engine too, with more use cases to follow. As stated
    on [tableau.com](http://tableau.com), “*Hyper can slice and dice massive volumes
    of data in seconds, you will see up to 5X faster query speed and up to 3X faster
    extract creation speed*.” And if you still can’t get enough, there is always the
    option to use Hyper through API calls in your preferred programming language:
    [https://help.tableau.com/current/api/hyper_api/en-us/docs/hyper_api_reference.html](https://help.tableau.com/current/api/hyper_api/en-us/docs/hyper_api_reference.html).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Hyper最初是2008年在慕尼黑大学作为一个研究项目开始的。2016年，它被Tableau收购，并被指定为Tableau的专用数据引擎小组，仍然保持其在慕尼黑的总部和员工。最初在Tableau
    10.5中，Hyper仅替代了早期的数据处理引擎，用于提取。至今，Hyper仍然没有涉及实时连接，但Tableau Prep Builder现在也使用Hyper引擎，并且未来会有更多的使用场景。如[tableau.com](http://tableau.com)所述，“*Hyper可以在几秒钟内切片并处理大量数据，你将看到查询速度提高最多5倍，提取创建速度提高最多3倍*。”如果你仍然意犹未尽，始终可以通过API调用在你喜欢的编程语言中使用Hyper：[https://help.tableau.com/current/api/hyper_api/en-us/docs/hyper_api_reference.html](https://help.tableau.com/current/api/hyper_api/en-us/docs/hyper_api_reference.html)。
- en: But what makes Hyper so fast? Let’s have a look under the hood!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，是什么让Hyper如此快速呢？让我们看看它的工作原理！
- en: The Tableau data-handling engine
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Tableau的数据处理引擎
- en: The vision shared by the founders of Hyper was to create a high-performing,
    next-generation database—one system, one state, no trade-offs, and no delays.
    And it worked—today, Hyper can serve general database purposes, data ingestion,
    and analytics at the same time.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Hyper的创始人共享的愿景是创建一个高性能的下一代数据库——一个系统，一个状态，没有妥协，没有延迟。并且它成功了——今天，Hyper能够同时承担通用数据库用途、数据摄取和分析。
- en: Memory prices have decreased exponentially. The same goes for CPUs; transistor
    counts increased according to Moore’s law, while other features stagnated. Memory
    is cheap but processing still needs to be improved.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 内存价格已呈指数下降。CPU也是如此；晶体管数量根据摩尔定律增加，而其他特性则停滞不前。内存变便宜了，但处理能力仍需提升。
- en: Moore’s Law is the observation made by Intel co-founder Gordon Moore that the
    number of transistors on a chip doubles every two years while the costs are halved.
    Information on Moore’s Law can be found on Investopedia at [https://www.investopedia.com/terms/m/mooreslaw.asp](https://www.investopedia.com/terms/m/mooreslaw.asp).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 摩尔定律是英特尔联合创始人戈登·摩尔提出的观察结果：芯片上晶体管的数量每两年翻一番，而成本减半。关于摩尔定律的更多信息可以在Investopedia上找到：[https://www.investopedia.com/terms/m/mooreslaw.asp](https://www.investopedia.com/terms/m/mooreslaw.asp)。
- en: While experimenting with Hyper, the founders measured that handwritten C code
    is faster than any existing database engine, so they came up with the idea to
    transform Tableau queries into C code and optimize it simultaneously, all behind
    the scenes, so the Tableau user won’t notice it. This translation and optimization
    come at a cost; traditional database engines can start executing code immediately.
    Tableau needs to first translate queries into code, optimize that code, then compile
    it into machine code, after which it can be executed. The big question is, is
    it still faster? As proven by many tests on Tableau Public and other workbooks,
    the answer is yes!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在Hyper的实验过程中，创始人测量发现手写的C代码比任何现有的数据库引擎都要快，于是他们想到了一个点子：将Tableau查询转换为C代码，并同时优化它，所有这些操作都在后台进行，用户不会察觉。这种翻译和优化是有成本的；传统的数据库引擎可以立即开始执行代码，而Tableau需要先将查询转换为代码，再优化这段代码，然后编译成机器代码，最后才能执行。大问题是，这样做还会更快吗？通过在Tableau
    Public和其他工作簿上的许多测试验证，答案是肯定的！
- en: Furthermore, if there is a query estimated to be faster if executed without
    the compilation to machine code, Tableau has its own **virtual machine** (**VM**)
    on which the query will be executed right away. And next to this, Hyper can utilize
    99% of available CPU computing power, whereas other parallel processes can only
    utilize 29% of available CPU compute. This is due to the unique and innovative
    technique of morsel-driven parallelization.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果有一个查询预计在不编译成机器代码的情况下执行会更快，Tableau拥有自己的**虚拟机**（**VM**），可以立即执行该查询。与此并行，Hyper能够利用99%的可用CPU计算能力，而其他并行处理只能利用29%的CPU计算能力。这归功于**小块驱动并行化**这一独特且创新的技术。
- en: For those of you that want to know more about morsel-driven parallelization,
    a paper, which later on served as a baseline for the Hyper engine, can be found
    at [https://15721.courses.cs.cmu.edu/spring2016/papers/p743-leis.pdf](https://15721.courses.cs.cmu.edu/spring2016/papers/p743-leis.pdf).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些想了解更多关于**小块驱动并行化**的人，后来成为Hyper引擎基准的论文可以在[https://15721.courses.cs.cmu.edu/spring2016/papers/p743-leis.pdf](https://15721.courses.cs.cmu.edu/spring2016/papers/p743-leis.pdf)找到。
- en: If you want to know more about the Hyper engine, I highly recommend the following
    video at [https://youtu.be/h2av4CX0k6s](https://youtu.be/h2av4CX0k6s).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于Hyper引擎的信息，我强烈推荐观看以下视频：[https://youtu.be/h2av4CX0k6s](https://youtu.be/h2av4CX0k6s)。
- en: 'Hyper parallelizes three steps of traditional data warehousing operations:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Hyper将传统数据仓库操作的三步进行并行化：
- en: Transactions and **Continuous Data Ingestion** (**Online Transaction Processing**,
    or **OLTP**)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事务处理和**连续数据摄取**（**在线事务处理**，或**OLTP**）
- en: '**Analytics** (**Online Analytical Processing**, or **OLAP**)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析处理**（**在线分析处理**，或**OLAP**）'
- en: '**Beyond Relational** (**Online Beyond Relational Processing**, or **OBRP**)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超越关系型**（**在线超越关系型处理**，或**OBRP**）'
- en: Executing those steps simultaneously makes Hyper more efficient and more performant,
    as opposed to traditional systems where those three steps are separated and executed
    one after the other.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 同时执行这些步骤使Hyper更加高效和性能更强，这与传统系统不同，传统系统将这三步分开并按顺序执行。
- en: To sum up, Hyper is a highly specialized database engine that allows us as users
    to get the best out of our queries. If you recall, in *Chapter 1*, *Reviewing
    the Basics*, we already saw that every change on a sheet or dashboard, including
    drag and drop pills, filters, and calculated fields, among others, is translated
    into a query. Those queries are pretty much SQL lookalikes; however, in Tableau
    we call the querying engine VizQL.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Hyper 是一个高度专业化的数据库引擎，它允许我们作为用户从查询中获得最佳结果。如果你还记得，在*第1章*，*回顾基础知识*中，我们已经看到，工作表或仪表板上的每一个变化，包括拖放字段、筛选器和计算字段等，都会被转换成一个查询。这些查询基本上是
    SQL 类似的；然而，在 Tableau 中，我们将查询引擎称为 VizQL。
- en: VizQL, another hidden gem on your Tableau Desktop, is responsible for visualizing
    data in a chart format and is fully executed in memory. The advantage is that
    no additional space on the database side is required here. VizQL is generated
    when a user places a field on a shelf. VizQL is then translated into SQL, MDX,
    or **Tableau Query Language** (**TQL**) and passed to the backend data source
    with a driver.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: VizQL，是 Tableau Desktop 中的另一个隐藏宝藏，负责以图表形式可视化数据，并完全在内存中执行。其优势在于，这里不需要额外的数据库空间。VizQL
    在用户将字段放置到货架时生成。然后，VizQL 被转换为 SQL、MDX 或 **Tableau 查询语言**（**TQL**）并通过驱动程序传递到后端数据源。
- en: Hyper takeaways
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hyper 要点
- en: This overview of the Tableau data-handling engine demonstrates a flexible approach
    to interfacing with data. Knowledge of the data-handling engine can reduce data
    preparation and data modeling efforts, thus helping us streamline the overall
    data mining life cycle. Don’t worry too much about data types and data that can
    be calculated based on the fields you have in your database. Tableau can do all
    the work for you in this respect. In the next section, we will discuss what you
    should consider from a data source perspective.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Tableau 数据处理引擎的概述展示了与数据接口的灵活方法。了解数据处理引擎可以减少数据准备和数据建模的工作量，从而帮助我们简化整个数据挖掘生命周期。在这一点上，你不需要过多担心数据类型和可以基于数据库字段计算的数据。Tableau
    可以为你完成所有这方面的工作。在下一节中，我们将讨论从数据源的角度，你需要考虑的事项。
- en: Focusing on data preparation
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 专注于数据准备
- en: Tableau can be used effectively with various data preparation phases. Unfortunately,
    a single chapter is not sufficient to thoroughly explore how Tableau can be used
    in each phase. Indeed, such a thorough exploration may be worthy of an entire
    book! Our focus, therefore, will be directed to ward data preparation, since that
    phase has historically accounted for up to 60% of the data mining effort. Our
    goal will be to learn how Tableau can be used to streamline that effort.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 可以在多个数据准备阶段有效使用。不幸的是，仅凭一章内容无法深入探讨 Tableau 如何在每个阶段中使用。实际上，这样的深入探讨可能值得写一本书！因此，我们的重点将集中在数据准备阶段，因为这个阶段历史上占据了数据挖掘工作量的
    60%。我们的目标是学习如何利用 Tableau 来简化这一过程。
- en: Surveying data
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据调查
- en: Tableau can be a very effective tool for simply surveying data. Sometimes in
    the survey process, you may discover ways to clean the data or populate incomplete
    data based on existing fields. Sometimes, regretfully, there are simply not enough
    pieces of the puzzle to put together an entire dataset. In such cases, Tableau
    can be useful to communicate exactly what the gaps are, and this, in turn, may
    incentivize the organization to more fully populate the underlying data.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 可以是一个非常有效的工具，用于简单的数据调查。在调查过程中，有时你可能会发现清理数据或基于现有字段填充不完整数据的方法。有时，遗憾的是，拼凑一个完整的数据集所需的拼图碎片并不充足。在这种情况下，Tableau
    可以有效地帮助你明确哪些地方存在缺失，这反过来可能会激励组织更完整地填充底层数据。
- en: In this exercise, we will explore how to use Tableau to quickly discover the
    percentage of null values for each field in a dataset. Next, we’ll explore how
    data might be extrapolated from existing fields to fill in the gaps.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将探索如何使用 Tableau 快速发现数据集中每个字段的空值百分比。接下来，我们将探索如何从现有字段推断数据以填补空缺。
- en: Establishing null values
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 建立空值
- en: 'The following are the steps to survey the data:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是调查数据的步骤：
- en: If you haven’t done so just yet, navigate to [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)
    to locate and download the workbook associated with this chapter.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你还没有完成，请访问 [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)
    查找并下载与本章相关的工作簿。
- en: Navigate to the worksheet entitled `Surveying` `&` `Exploring``Data` and select
    `Happiness Report` data source.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到名为`Surveying` `&` `Exploring``Data`的工作表，并选择`Happiness Report`数据源。
- en: 'Drag **Region** and **Country** to the **Rows** shelf. Observe that in some
    cases the **Region** field has **Null** values for some countries:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Region**和**Country**拖动到**Rows**架上。观察到在某些情况下，**Region**字段对于某些国家具有**Null**值：
- en: '![](img/B18435_02_01.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_01.png)'
- en: 'Figure 2.1: Null regions'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1：空区域
- en: 'Right-click and **Edit** the parameter entitled `Select Field`. Note that the
    **Data Type** is set to **Integer** and we can observe a list that contains an
    entry for each field name in the dataset:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击并**编辑**名为`Select Field`的参数。注意，**数据类型**已设置为**整数**，我们可以看到一个包含数据集中每个字段名称的列表：
- en: '![Graphical user interface'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![Graphical user interface'
- en: Description automatically generated](img/B18435_02_02.png)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成的描述](img/B18435_02_02.png)
- en: 'Figure 2.2: Editing a parameter'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2：编辑参数
- en: In the **Data** pane, right-click on the parameter we just created and select
    **Show Parameter** Control.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**窗格中，右键点击我们刚创建的参数并选择**显示参数**控制。
- en: 'Create a calculated field entitled `% Populated` and write the following calculation:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`% Populated`的计算字段，并编写以下计算：
- en: '[PRE0]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the **Data** pane, right-click on **% Populated** and select **Default Properties**
    | **Number Format…**:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**窗格中，右键点击**% Populated**并选择**默认属性** | **数字格式...**：
- en: '![Graphical user interface, application'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![Graphical user interface, application'
- en: Description automatically generated](img/B18435_02_03.png)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成的描述](img/B18435_02_03.png)
- en: 'Figure 2.3: Adjusting default properties'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3：调整默认属性
- en: In the resulting dialog box, choose **Percentage**.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的对话框中，选择**百分比**。
- en: Create a calculated field entitled `Null & Populated` and add the following
    code. Note that the complete case statement is fairly lengthy but also repetitive.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Null & Populated`的计算字段，并添加以下代码。注意，完整的case语句较长，但也很重复。
- en: In cases requiring a lengthy but repetitive calculation, consider using Excel
    to more quickly and accurately write the code. By using Excel’s `CONCATENATE`
    function, you may be able to save time and avoid typos.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在需要进行较长但重复计算的情况下，考虑使用Excel更快速、准确地编写代码。通过使用Excel的`CONCATENATE`函数，您可能节省时间并避免输入错误。
- en: 'In the following code block, the code lines represent only a percentage of
    the total but should be sufficient to enable you to produce the whole block:'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在以下代码块中，代码行只表示总数的一部分，但应该足够帮助您生成整个块：
- en: '[PRE1]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Remove **Region** and **Country** from the **Rows** shelf.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**Rows**架上移除**Region**和**Country**。
- en: 'Place **Null & Populated** on the **Rows** and **Color** shelves and **% Populated**
    on the **Columns** and **Label** shelves:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Null & Populated**放置在**Rows**和**Color**架上，将**% Populated**放置在**Columns**和**Label**架上：
- en: '![](img/B18435_02_04.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_04.png)'
- en: 'Figure 2.4: Populated values'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4：已填充值
- en: Change the colors to red for **Null Values** and green for **Populated Values**
    if desired. You can do so by clicking on **Color** in the **Marks** card and **Edit
    Colors**.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有需要，可以将**Null Values**的颜色更改为红色，将**Populated Values**的颜色更改为绿色。可以通过点击**Marks**卡上的**Color**并选择**编辑颜色**来实现。
- en: Click on the arrow in the upper-right corner of the **Select Field** parameter
    on your sheet and select **Single Value List**.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击工作表右上角的**Select Field**参数中的箭头，并选择**单一值列表**。
- en: 'Select various choices in the **Select Field** parameter and note that some
    fields have a high percentage of null values. For example, in the following diagram,
    **32.98%** of records do not have a value for **Region**:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Select Field**参数中选择各种选项，并注意某些字段有较高的空值百分比。例如，在以下图表中，**32.98%**的记录没有**Region**值：
- en: '![A picture containing graphical user interface'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![A picture containing graphical user interface'
- en: Description automatically generated](img/B18435_02_05.png)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成的描述](img/B18435_02_05.png)
- en: 'Figure 2.5: Comparing null and populated values'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5：比较空值和已填充值
- en: Building on this exercise, let’s explore how we might clean and extrapolate
    data from existing data using the same dataset.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这个练习，让我们探索如何使用相同的数据集清理和推断现有数据。
- en: Extrapolating data
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 推断数据
- en: 'This exercise will expand on the previous exercise by cleaning existing data
    and populating some of the missing data from known information. We will assume
    that we know which country belongs to which region. We’ll use that knowledge to
    fix errors in the `Region` field and also to fill in the gaps using Tableau:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 本练习将扩展前一练习，通过清理现有数据并从已知信息中填充部分缺失数据来完成。我们将假设我们知道哪个国家属于哪个地区。我们将利用这些知识来修复`区域`字段中的错误，并使用Tableau填充空白数据：
- en: 'Starting from where the previous exercise ended, create a calculated field
    entitled `Region Extrapolated` with the following code block:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从前一练习结束的地方开始，创建一个名为`区域外推`的计算字段，其中包含以下代码块：
- en: '[PRE2]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As an alternative to a `CASE` statement, you could use an `IF` statement like:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为`CASE`语句的替代方案，您可以使用`IF`语句，例如：
- en: '[PRE3]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To speed up the tedious creation of a long calculated field, you could download
    the data to an Excel file and create the calculated field by concatenating the
    separate parts, as shown here:'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了加快长计算字段的繁琐创建过程，您可以将数据下载到Excel文件中，并通过连接各个部分来创建计算字段，如下所示：
- en: '![Graphical user interface, text, application'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图形用户界面，文本，应用程序'
- en: Description automatically generated](img/B18435_02_06.png)
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自动生成的描述](img/B18435_02_06.png)
- en: 'Figure 2.6: Compiling a calculation in Excel'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.6：在Excel中编译计算
- en: You can then copy them from Excel into Tableau. However, for this exercise,
    I have created a backup field called `Backup`, which can be found in the Tableau
    workbook associated with this chapter, which contains the full calculation needed
    for the `Region Extrapolated` field. Use this at your convenience. The **Solutions**
    dashboard also contains all of the countries. You can therefore copy the `Region
    Extrapolated` field from that file too.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，您可以将它们从Excel复制到Tableau中。但是，在本练习中，我创建了一个名为`备份`的备用字段，该字段可在与本章相关的Tableau工作簿中找到，其中包含`区域外推`字段所需的完整计算。您可以随时使用这个备份。**解决方案**仪表板还包含所有国家。因此，您还可以从该文件复制`区域外推`字段。
- en: 'Add a **Region Extrapolated** option to the **Select Field** parameter:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择字段**参数中添加一个**区域外推**选项：
- en: '![](img/B18435_02_07.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_07.png)'
- en: 'Figure 2.7: Adding Region Extrapolated to the parameter'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7：将区域外推添加到参数中
- en: 'Add the following code to the `Null & Populated` calculated field:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到`空值和填充`计算字段中：
- en: '[PRE4]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Note that the **Region Extrapolated** field is now fully populated:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意**区域外推**字段现在已经完全填充：
- en: '![](img/B18435_02_08.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_08.png)'
- en: 'Figure 2.8: Fully populated Region Extrapolated field'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8：完全填充的区域外推字段
- en: Now let’s consider some of the specifics from the previous exercises.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们考虑一下前面练习中的一些具体细节。
- en: Let’s look at the following code block.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下以下代码块。
- en: 'Note that the complete `CASE` statement is several lines long. The following
    is a representative portion:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，完整的`CASE`语句有几行长。以下是其中的一部分代表性内容：
- en: '[PRE5]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This case statement is a row-level calculation that considers each field in
    the dataset and determines which rows are populated and which are not. For example,
    in the representative line of the preceding code, every row of the `Country` field
    is evaluated for nulls. The reason for this is that a calculated field will add
    a new column to the existing data—only in Tableau, not in the data source itself—and
    every row will get a value. These values can be N/A or null values.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 此`CASE`语句是一个逐行计算，考虑数据集中的每个字段，并确定哪些行是填充的，哪些不是。例如，在上述代码的代表行中，将评估`Country`字段的每一行是否为null。这是因为计算字段将在现有数据的基础上添加一个新列——仅在Tableau中，而不是数据源本身——并且每一行都将获得一个值。这些值可以是N/A或null值。
- en: 'The following code is the equivalent of the quick table calculation `Percent
    of Total`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码相当于快速表计算`总比例`：
- en: '[PRE6]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In conjunction with the `Null & Populated` calculated field, it allows us to
    see what percentage of our fields are actually populated with values.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 与`空值和填充`计算字段一起，它允许我们查看实际填充了多少字段的百分比。
- en: It’s a good idea to get into the habit of writing table calculations from scratch,
    even if an equivalent quick table calculation is available. This will help you
    more clearly understand the table calculations.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 习惯于从头开始编写表计算是个好主意，即使有等效的快速表计算可用。这将帮助您更清楚地理解表计算。
- en: 'The following CASE statement is an example of how you might use one or more
    fields to extrapolate what another field should be:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下`CASE`语句是一个示例，说明如何使用一个或多个字段来外推另一个字段的内容：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For example, the `Region` field in the dataset had a large percentage of null
    values, and even the existing data had errors. Based on our knowledge of the business
    (that is, which country belongs to which region), we were able to use the `Country`
    field to achieve 100% population of the dataset with accurate information.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，数据集中的`地区`字段有很大比例的空值，甚至现有的数据也存在错误。根据我们对业务的了解（即哪个国家属于哪个地区），我们能够使用`国家`字段填充数据集中的所有区域，并确保信息的准确性。
- en: Nulls are a part of almost every extensive real dataset. Understanding how many
    nulls are present in each field can be vital to ensuring that you provide accurate
    business intelligence. It may be acceptable to tolerate some null values when
    the final results will not be substantially impacted, but too many nulls may invalidate
    results. However, as demonstrated here, in some cases, one or more fields can
    be used to extrapolate the values that should be entered into an underpopulated
    or erroneously populated field.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 空值几乎是所有大型真实数据集的一部分。了解每个字段中有多少空值，对于确保提供准确的商业智能至关重要。当最终结果不会受到显著影响时，可能可以容忍一些空值，但空值过多可能会使结果无效。然而，正如本节所示，在某些情况下，可以使用一个或多个字段来推断应输入到数据不足或错误填充字段中的值。
- en: As demonstrated in this section, Tableau gives you the ability to effectively
    communicate to your data team which values are missing, which are erroneous, and
    how possible workarounds can be invaluable to the overall data mining effort.
    Next, we will look into data that is a bit messier and not in a nice column format.
    Don’t worry, Tableau has us covered.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如本节所示，Tableau使你能够有效地向数据团队传达哪些值缺失，哪些值有误，以及如何进行可能的变通方法，这对整体数据挖掘工作至关重要。接下来，我们将研究一些稍微复杂的数据，这些数据不是以规范的列格式呈现。别担心，Tableau能够应对这些情况。
- en: Cleaning messy data
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清理杂乱数据
- en: The United States government provides helpful documentation for various bureaucratic
    processes. For example, the **Department of Health and Human Services** (**HSS**)
    provides lists of ICD-9 codes, otherwise known as International Statistical Classification
    of Diseases and Related Health Problems codes. Unfortunately, these codes are
    not always in easily accessible formats.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 美国政府为各种行政流程提供了有用的文档。例如，**健康与公共服务部**（**HSS**）提供了ICD-9代码列表，即国际疾病分类与相关健康问题分类代码。不幸的是，这些代码并不总是以易于访问的格式提供。
- en: As an example, let’s consider an actual HHS document known as R756OTN, which
    can be found at [https://www.cms.gov/Regulations-and-Guidance/Guidance/Transmittals/downloads/R756OTN.pdf](https://www.cms.gov/Regulations-and-Guidance/Guidance/Transmittals/downloads/R756OTN.pdf).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个示例，我们来看一个实际的HHS文档，名为R756OTN，可以在[https://www.cms.gov/Regulations-and-Guidance/Guidance/Transmittals/downloads/R756OTN.pdf](https://www.cms.gov/Regulations-and-Guidance/Guidance/Transmittals/downloads/R756OTN.pdf)找到。
- en: Cleaning the data
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 清理数据
- en: 'Navigate to the `Cleaning the Data` worksheet in the workbook accompanying
    this chapter and execute the following steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 转到本章随附工作簿中的`清理数据`工作表，并执行以下步骤：
- en: 'Within the **Data** pane, select the **R756OTN Raw** data source:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**面板中，选择**R756OTN原始**数据源：
- en: '![Graphical user interface, text, application'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![图形用户界面，文本，应用程序'
- en: Description automatically generated](img/B18435_02_09.png)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成的描述](img/B18435_02_09.png)
- en: 'Figure 2.9: Selecting the raw file'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9：选择原始文件
- en: 'Drag **Diagnosis** to the **Rows** shelf and choose **Add all members**. Click
    on the **AZ** sign to sort the **Diagnosis** column. Note the junk data that occurs
    in some rows:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**诊断**拖到**行**架上，并选择**添加所有成员**。点击**AZ**符号对**诊断**列进行排序。注意到某些行中出现的无效数据：
- en: '![](img/B18435_02_10.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_10.png)'
- en: 'Figure 2.10: Adding Diagnosis to Rows'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10：将诊断添加到行
- en: 'Create a calculated field named `DX` with the following code:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`DX`的计算字段，包含以下代码：
- en: '[PRE8]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create a calculated field named `Null Hunting` with the following code:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`空值排查`的计算字段，包含以下代码：
- en: '[PRE9]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In the **Data** pane, drag `Null Hunting` from **Measures** to **Dimensions**.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**面板中，将`空值排查`从**度量**拖到**维度**。
- en: 'Drag **Diagnosis**, **DX**, and **Null Hunting** to the **Rows** shelf. Observe
    that **Null** is returned when the second character in the **Diagnosis** field
    is not numeric:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**诊断**、**DX**和**空值排查**拖到**行**架上。观察当**诊断**字段中的第二个字符不是数字时，返回**空值**：
- en: '![](img/B18435_02_11.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_11.png)'
- en: 'Figure 2.11: Ordering fields on Rows'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11：在行上排序字段
- en: 'Create a calculated field named `Exclude from ICD codes` containing the following
    code:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`从ICD代码中排除`的计算字段，包含以下代码：
- en: '[PRE10]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Clear the sheet of all fields, as demonstrated in *Chapter 1*, *Reviewing the
    Basics*, and set the **Marks** card to **Shape**.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除所有字段，如 *第 1 章* 所示，*回顾基础知识*，并将 **标记** 卡设置为 **形状**。
- en: 'Place **Exclude from ICD Codes** on the **Color**, and **Shape** shelves, and
    then place **DX** on the **Rows** shelf. Observe the rows labeled as **True**:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **Exclude from ICD Codes** 放到 **颜色** 和 **形状** 区域，然后将 **DX** 放到 **行** 区域。观察标记为
    **True** 的行：
- en: '![](img/B18435_02_12.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_12.png)'
- en: 'Figure 2.12: Excluding junk data'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12：排除垃圾数据
- en: In order to exclude the junk data (that is, those rows where `Exclude from ICD
    Codes` equates to `True`), place `Exclude from ICD Codes` on the **Filter** shelf
    and deselect **True**.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了排除垃圾数据（即那些 `Exclude from ICD Codes` 为 `True` 的行），将 `Exclude from ICD Codes`
    放到 **筛选器** 区域，并取消选择 **True**。
- en: 'Create a calculated field named `Diagnosis Text` containing the following code:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Diagnosis Text` 的计算字段，包含以下代码：
- en: '[PRE11]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Place **Diagnosis Text** on the **Rows** shelf after **DX**. Also, remove **Exclude
    from ICD Codes** from the **Rows** shelf and the **Marks** card, and set the mark
    type to **Automatic**:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **Diagnosis Text** 放到 **行** 区域，放在 **DX** 后面。同时，将 **Exclude from ICD Codes**
    从 **行** 区域和 **标记** 卡中移除，并将标记类型设置为 **自动**：
- en: '![](img/B18435_02_13.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_13.png)'
- en: 'Figure 2.13: Observing the cleaned data'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13：观察清理后的数据
- en: 'Now that we’ve completed the exercise, let’s take a moment to consider the
    code we have used:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了练习，来花点时间回顾一下我们所用的代码：
- en: 'The `SPLIT` function was introduced in Tableau 9.0:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPLIT` 函数在 Tableau 9.0 中引入：'
- en: '[PRE12]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As described in Tableau’s help documentation about the function, the function
    does the following:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如 Tableau 帮助文档中关于该函数的描述，该函数执行以下操作：
- en: '*Returns a substring from a string, as determined by the delimiter extracting
    the characters from the beginning or end of the string*.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*返回由分隔符确定的子字符串，提取字符串开头或结尾的字符*。'
- en: This function can also be called directly in the **Data Source** tab when clicking
    on a column header and selecting **Split**. To extract characters from the end
    of the string, the token number (that is, the number at the end of the function)
    must be negative.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该函数也可以在 **数据源** 标签中直接调用，通过点击列标题并选择 **拆分**。要从字符串的末尾提取字符，令函数的最后一个参数（即令牌数）为负值。
- en: 'Consider the following code, which we used to create the `Null Hunting` field:'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑以下代码，这是我们用于创建 `Null Hunting` 字段的代码：
- en: '[PRE13]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The use of `MID` is quite straightforward and much the same as the corresponding
    function in Excel. The use of `INT` in this case, however, may be confusing. Casting
    an alpha character with an `INT` function will result in Tableau returning `Null`.
    This satisfactorily fulfills our purpose, since we simply need to discover those
    rows not starting with an integer by locating the nulls.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MID` 函数的使用非常直观，和 Excel 中的对应函数类似。然而，`INT` 函数的使用在这里可能会让人困惑。将一个字母字符与 `INT` 函数结合使用时，Tableau
    会返回 `Null`。这正好满足了我们的需求，因为我们只需要通过找到空值来识别那些没有以数字开头的行。'
- en: '`ISNULL` is a Boolean function that simply returns `TRUE` in the case of `Null`:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ISNULL` 是一个布尔函数，当值为 `Null` 时，它会返回 `TRUE`：'
- en: '[PRE14]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The `REPLACE` function was used while creating the `Diagnosis Text` field:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建 `Diagnosis Text` 字段时使用了 `REPLACE` 函数：
- en: '[PRE15]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This calculated field uses the ICD-9 codes isolated in `DX` to remove those
    same codes from the `Diagnosis` field and thus provides a fairly clean description.
    Note the phrase *fairly clean*. The rows that were removed were initially associated
    with longer descriptions that thus included a carriage return. The resulting additional
    rows are what we removed in this exercise. Therefore, the longer descriptions
    are truncated in this solution using the `replace` calculation.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个计算字段使用 `DX` 中提取的 ICD-9 代码，去除 `Diagnosis` 字段中相同的代码，从而提供了一个相对干净的描述。注意 *相对干净*
    这一说法。被移除的行最初是与较长描述相关联的，因此包括了换行符。最终结果中增加的行就是我们在本练习中移除的那些。因此，较长的描述在此解决方案中通过 `replace`
    计算被截断了。
- en: The final output for this exercise could be to export the data from Tableau
    as an additional source of data. This data could then be used by Tableau and other
    tools for future reporting needs. For example, the `DX` field could be useful
    in data blending.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 本次练习的最终输出可以是将数据从 Tableau 导出，作为额外的数据源。这些数据可以供 Tableau 以及其他工具用于未来的报告需求。例如，`DX`
    字段在数据融合中可能会有用。
- en: Does Tableau offer a better approach that might solve the issue of truncated
    data associated with the preceding solution? Yes! Let’s turn our attention to
    the next exercise, where we will consider regular expression functions.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau是否提供了更好的方法来解决与前面解决方案相关的数据截断问题？是的！让我们转向下一个练习，考虑正则表达式函数。
- en: Extracting data
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提取数据
- en: Although, as shown in the previous exercise, *Cleaning the data*, the `SPLIT`
    function can be useful for cleaning clean data, regular expression functions are
    far more powerful, representing a broadening of the scope from Tableau’s traditional
    focus on visualization and analytics to also include data cleaning capabilities.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如前面练习所示，*清洗数据*中，`SPLIT`函数可以用于清洗干净的数据，但正则表达式函数更加强大，扩展了Tableau传统的可视化和分析重点，也包括数据清洗能力。
- en: Let’s look at an example that requires us to deal with some pretty messy data
    in Tableau. Our objective will be to extract phone numbers.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个在Tableau中需要处理非常混乱数据的例子。我们的目标是提取电话号码。
- en: 'The following are the steps:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是步骤：
- en: If you have not already done so, please download the workbook from [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)
    and open it in Tableau.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果尚未这样做，请从[https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)下载并在Tableau中打开工作簿。
- en: Select the `Extracting the Data` tab.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`提取数据`选项卡。
- en: 'In the **Data** pane, select the **String of Data** data source and drag the
    **String of Data** field to the **Rows** shelf. Observe the challenges associated
    with extracting the phone numbers:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据**面板中，选择**数据串**数据源，并将**数据串**字段拖放到**行**架上。观察提取电话号码时遇到的挑战：
- en: '![](img/B18435_02_14.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_14.png)'
- en: 'Figure 2.14: Extracting data from a messy data format'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.14：从混乱数据格式中提取数据
- en: 'Access the underlying data by clicking the **View data** button and copying
    several rows:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击**查看数据**按钮并复制几行来访问底层数据：
- en: '![](img/B18435_02_15.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18435_02_15.png)'
- en: 'Figure 2.15: Accessing underlying data'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.15：访问底层数据
- en: 'Navigate to [http://regexpal.com/](http://regexpal.com/) and paste the data
    into the pane labeled **Test String**—that is, the second pane:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://regexpal.com/](http://regexpal.com/)并将数据粘贴到标有**测试字符串**的面板中，即第二个面板：
- en: '![Graphical user interface, text, application, email'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![图形用户界面，文本，应用程序，电子邮件'
- en: Description automatically generated](img/B18435_02_16.png)
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成描述](img/B18435_02_16.png)
- en: 'Figure 2.16: Regexpal'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.16：Regexpal
- en: 'In the first pane (the one labeled **Regular Expression**), type the following:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一个面板（标有**正则表达式**）中，输入以下内容：
- en: '[PRE16]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Return to Tableau and create a calculated field called `Phone Number` with
    the following code block. Note the regular expression nested in the calculated
    field:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回Tableau并创建一个名为`Phone Number`的计算字段，使用以下代码块。注意计算字段中嵌套的正则表达式：
- en: '[PRE17]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Place **Phone Number** on the **Rows** shelf, and observe the result:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Phone Number**放置在**行**架上，并观察结果：
- en: '![Text'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![文本'
- en: Description automatically generated with medium confidence](img/B18435_02_17.png)
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 自动以中等置信度生成描述](img/B18435_02_17.png)
- en: 'Figure 2.17: Extracting data final view'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.17：提取数据的最终视图
- en: 'Now let’s consider some of the specifics from the preceding exercise in more
    detail:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们更详细地考虑前面练习中的一些具体内容：
- en: 'Consider the following code block:'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑以下代码块：
- en: '[PRE18]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The expression pattern is purposely excluded here as it will be covered in
    detail later. The ‘`()`'' code acts as a placeholder for the expression pattern.
    The `REGEXP_EXTRACT` function used in this example is described in Tableau’s help
    documentation as follows:'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这里故意排除表达式模式，因为稍后将详细介绍。‘`()`’代码充当表达式模式的占位符。本例中使用的`REGEXP_EXTRACT`函数在Tableau的帮助文档中描述如下：
- en: '*Returns a substring of the given string that matches the capturing group within
    the regular expression pattern.*'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '*返回与正则表达式模式中捕获组匹配的给定字符串的子字符串。*'
- en: Note that as of the time of writing, the Tableau documentation does not communicate
    how to ensure that the pattern input section of the function is properly delimited.
    For this example, be sure to include ‘`()`' around the pattern input section to
    avoid a null output.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，截至撰写本文时，Tableau文档未说明如何确保函数的模式输入部分正确分隔。为了本例，请确保在模式输入部分周围包含‘`()`’以避免空输出。
- en: Nesting within a calculated field that is itself nested within a `VizQL` query
    can affect performance (if there are too many levels of nesting/aggregation).
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一个计算字段中嵌套的`VizQL`查询本身的嵌套可能会影响性能（如果嵌套/聚合的层次过多）。
- en: There are numerous regular expression websites that allow you to enter your
    own code and help you out, so to speak, by providing immediate feedback based
    on sample data that you provide. [http://regexpal.com/](http://regexpal.com/)
    is only one of those sites, so search as desired to find one that meets your needs!
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有许多正则表达式网站允许你输入自己的代码并通过提供基于你提供的示例数据的即时反馈来帮助你。[http://regexpal.com/](http://regexpal.com/)只是其中一个网站，随意搜索以找到一个符合你需求的站点！
- en: 'Now, consider the expression:'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，考虑一下这个表达式：
- en: '[PRE19]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In this context, the `\` indicates that the next character should not be treated
    as special but as literal. For our example, we are literally looking for an open
    parenthesis. `[0-9]` simply declares that we are looking for one or more digits.
    Alternatively, consider `\d` to achieve the same results. The `{3}` designates
    that we are looking for three consecutive digits.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`\`表示接下来的字符不应被视为特殊字符，而是字面量字符。在我们的示例中，我们字面上寻找一个左括号。`[0-9]`表示我们正在寻找一个或多个数字。或者，考虑使用`\d`来获得相同的结果。`{3}`表示我们正在寻找连续的三个数字。
- en: As with the opening parenthesis at the beginning of the pattern, the `\` character
    designates the closing parentheses as a literal. The `-` is a literal that specifically
    looks for a hyphen. The rest of the expression pattern should be decipherable
    based on the preceding information.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 与模式开始时的左括号一样，`\`字符表示右括号是字面量字符。`-`是一个字面量字符，专门用于匹配连字符。其余的表达式模式应根据前面的信息进行解读。
- en: 'After reviewing this exercise, you may be curious about how to return just
    the email address. According to [http://www.regular-expressions.info/email.html](http://www.regular-expressions.info/email.html),
    the regular expression for email addresses adhering to the RFC 5322 standard is
    as follows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在回顾完这个练习后，你可能会好奇如何仅返回电子邮件地址。根据[http://www.regular-expressions.info/email.html](http://www.regular-expressions.info/email.html)，符合RFC
    5322标准的电子邮件地址的正则表达式如下：
- en: '[PRE20]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Emails do not always adhere to RFC 5322 standards, so additional work may be
    required to truly clean email address data.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件并不总是遵循RFC 5322标准，因此可能需要额外的工作来真正清理电子邮件地址数据。
- en: Although I won’t attempt a detailed explanation of this code, you can read all
    about it at [http://www.regular-expressions.info/email.html](http://www.regular-expressions.info/email.html),
    which is a great resource for learning more about regular expressions. Also, YouTube
    has several helpful regular expression tutorials.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我不会详细解释这段代码，但你可以在[http://www.regular-expressions.info/email.html](http://www.regular-expressions.info/email.html)阅读相关内容，这个网站是学习正则表达式的一个很好的资源。此外，YouTube上也有很多有用的正则表达式教程。
- en: The final output for this exercise should probably be used to enhance existing
    source data. **Data dumps** such as this example do not belong in data warehouses;
    however, even important and necessary data can be hidden in such dumps, and Tableau
    can be effectively used to extract it.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这个练习的最终输出可能应该用来增强现有的源数据。**数据转储**这样的例子不应该出现在数据仓库中；然而，即使是重要且必要的数据，也可能隐藏在这些转储中，Tableau可以有效地用来提取这些数据。
- en: Summary
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We began this chapter with a discussion of the Tableau data-handling engine.
    This illustrated the flexibility Tableau provides in working with data. The data-handling
    engine is important to understand in order to ensure that your data mining efforts
    are intelligently focused. Otherwise, your effort may be wasted on activities
    not relevant to Tableau.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章开始时讨论了Tableau的数据处理引擎。这展示了Tableau在处理数据时的灵活性。了解数据处理引擎非常重要，以确保你的数据挖掘工作能够智能地聚焦。如果不了解，它可能会浪费在与Tableau无关的活动上。
- en: Next, we focused on data preparation. We considered using Tableau to survey
    and also clean data. The data cleaning capabilities represented by the regular
    expression functions are particularly intriguing and are worth further investigation.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们集中讨论了数据准备工作。我们考虑使用Tableau进行调查并清理数据。由正则表达式函数所代表的数据清理功能特别引人注目，值得进一步研究。
- en: Having completed our first data-centric discussion, we’ll continue with *Chapter
    3*, *Using* *Tableau Prep Builder*, looking at one of the newer features Tableau
    has brought to the market. Tableau Prep Builder is a dedicated data pre-processing
    interface that is able to greatly reduce the amount of time you need for pre-processing.
    We’ll take a look at cleaning, merging, filtering, joins, and the other functionality
    Tableau Prep Builder has to offer.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成了我们的第一次以数据为中心的讨论后，我们将继续进行*第三章*，*使用* *Tableau Prep Builder*，并探讨Tableau带来的一个新功能。Tableau
    Prep Builder是一个专门的数据预处理界面，可以大大减少你在预处理阶段所需的时间。我们将深入了解清理、合并、过滤、连接等功能，以及Tableau Prep
    Builder的其他功能。
- en: Learn more on Discord
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Discord上了解更多
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的Discord社区——在这里你可以分享反馈、向作者提问，并了解新版本发布——请扫描下面的二维码：
- en: '[https://packt.link/tableau](https://packt.link/tableau)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/tableau](https://packt.link/tableau)'
- en: '![](img/QR_Code2044012316175764640.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code2044012316175764640.png)'
