- en: Appendix D
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 D
- en: Complex Numbers
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 复数
- en: Learning is an upward spiral. Depending on where we are on our journey, we keep
    revisiting past knowledge, looking at it from a different angle.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 学习是一个向上的螺旋。根据我们在学习旅程中的位置，我们会不断回顾过去的知识，并从不同的角度去审视它。
- en: Complex numbers is one of those topics to revisit, and understanding them makes
    us reevaluate certain pieces of knowledge that we take for granted. For example,
    you were probably taught that −1 does not have a square root. However, after familiarizing
    yourself with complex numbers, you’ll see that there are actually two of them;
    both are complex numbers.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 复数是需要不断复习的一个主题，理解它们使我们重新评估某些我们习以为常的知识。例如，你可能曾被教导过 −1 没有平方根。然而，在熟悉了复数之后，你会发现其实有两个平方根；它们都是复数。
- en: Our primary example here is going to be the quadratic equation
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的主要例子是二次方程：
- en: '![x2 + 1 = 0\. ](img/file2193.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![x2 + 1 = 0\. ](img/file2193.png)'
- en: To see that it doesn’t have any solutions (or roots, in other words) among real
    numbers, we can check that the discriminant b² − 4ac = −4 is less than 0, but
    we can also simply plot the graph of x² + 1.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 为了证明它在实数范围内没有解（或者说没有根），我们可以检查判别式 b² − 4ac = −4 小于 0，但我们也可以简单地绘制 x² + 1 的图像。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![PIC](img/file2194.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file2194.png)'
- en: 'Figure D.1: Graph of x² + 1'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '图 D.1: x² + 1 的图像'
- en: It might not seem like a big deal, but a polynomial equation with real coefficients
    not having real solutions is a huge problem. Lots of essential quantities are
    described in terms of roots of polynomials, like the eigenvalues of matrices.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这看似不是什么大问题，但具有实数系数的多项式方程如果没有实数解，那将是一个巨大的问题。许多重要的量都是通过多项式的根来描述的，比如矩阵的特征值。
- en: So, how can we solve this?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们该如何解决这个问题呢？
- en: In most cases, we can factor quadratic polynomials into the product of two linear
    terms. For example,
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，我们可以将二次多项式分解为两个线性项的积。例如，
- en: '![x2 − 1 = (x − 1)(x + 1), ](img/file2195.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![x2 − 1 = (x − 1)(x + 1), ](img/file2195.png)'
- en: revealing the solutions of the equation x² − 1 = 0 (which are x = 1 and x =
    −1 in this case).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这揭示了方程 x² − 1 = 0 的解（在这个例子中，解为 x = 1 和 x = −1）。
- en: To factorize the polynomial x² − 1, we used the identity
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了因式分解多项式 x² − 1，我们使用了恒等式：
- en: '![x2 − a2 = (x − a)(x + a). ](img/file2196.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![x2 − a2 = (x − a)(x + a). ](img/file2196.png)'
- en: What can we do for x² + 1? Let’s get a bit more creative. We can write our polynomial
    as
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们能怎么做呢？对于 x² + 1，我们可以稍微发挥一点创造力。我们可以将我们的多项式写作：
- en: '![x2 + 1 = x2 − (− 1), ](img/file2197.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![x2 + 1 = x2 − (− 1), ](img/file2197.png)'
- en: 'where in principle, we can use the previous identity. However, there is a problem:
    no real number satisfies a² = −1.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 其中原则上我们可以使用前面的恒等式。然而，有一个问题：没有实数满足 a² = −1。
- en: 'The solution that took mathematicians a few centuries to figure out is straightforward:
    we imagine such a number. In mathematics, the most creative abuse of rules can
    often prove to be most rewarding. So, suppose that our imaginary number i satisfies'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 经过几个世纪，数学家们最终得出了这个解决方案，这其实很简单：我们假设有这样的一个数。在数学中，最具创造性的规则滥用往往能够带来最大的回报。所以，假设我们的虚数
    i 满足：
- en: '![i2 = − 1\. ](img/file2198.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![i2 = − 1\. ](img/file2198.png)'
- en: This way, we have
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们得到：
- en: '![ 2 2 2 x + 1 = x − i = (x − i)(x + i). ](img/file2199.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![ 2 2 2 x + 1 = x − i = (x − i)(x + i). ](img/file2199.png)'
- en: In other words, the solutions for the notorious quadratic equation x² + 1 =
    0 are x = i and x = −i. This i is called an imaginary number, and its discovery
    opened the gates to complex numbers.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，著名的二次方程 x² + 1 = 0 的解是 x = i 和 x = −i。这个 i 被称为虚数，它的发现开启了复数的世界。
- en: So, what are these exotic objects?
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这些奇异的对象到底是什么？
- en: D.1 The definition of complex numbers
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D.1 复数的定义
- en: Let’s jump into the definition right away.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们直接进入定义。
- en: Definition 113\. (Complex numbers)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 113. （复数）
- en: The set of numbers written in the form
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 形如以下的数集：
- en: '![z = a + bi, a,b ∈ ℝ, ](img/file2200.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![z = a + bi, a,b ∈ ℝ, ](img/file2200.png)'
- en: where i² = −1 is satisfied, is called complex numbers. We call a the real part
    and b the imaginary part of z, denoted by
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 满足 i² = −1 的数，被称为复数。我们称 a 为实部，b 为虚部，记作：
- en: '![Re (z) = a, Im (z) = b. ](img/file2201.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![Re (z) = a, Im (z) = b. ](img/file2201.png)'
- en: If a + bi and c + di are two complex numbers, then we define addition and multiplication
    by
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 a + bi 和 c + di 是两个复数，那么我们定义加法和乘法为：
- en: (a)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: (a)
- en: '![(a + bi) + (c + di) := (a+ c) + (b + d)i, ](img/file2202.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![(a + bi) + (c + di) := (a+ c) + (b + d)i, ](img/file2202.png)'
- en: (b)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: (b)
- en: '![(a + bi)(c + di) := (ac − bd)+ (ad + bc)i. ](img/file2203.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![(a + bi)(c + di) := (ac − bd)+ (ad + bc)i. ](img/file2203.png)'
- en: The set of complex numbers is denoted with ℂ. Thus, we write
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 复数集用 ℂ 表示。因此，我们写作：
- en: '![ℂ := {a + bi : a,b ∈ ℝ}. ](img/file2204.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![ℂ := {a + bi : a,b ∈ ℝ}. ](img/file2204.png)'
- en: According to the definition, addition is straightforward. However, multiplication
    seems a little bit convoluted. To see why it is defined this way, multiply them
    term by term, as you do with two polynomials.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 根据定义，加法很简单。然而，乘法看起来有些复杂。为了理解为什么这样定义，像处理两个多项式一样逐项相乘。
- en: An important property of complex numbers is their absolute value, or in other
    words, their distance from 0.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 复数的一个重要特性是它们的模，换句话说，就是它们与0的距离。
- en: Definition 114\. (Absolute value of complex numbers)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 114.（复数的模）
- en: Let z = a + bi be a complex number. Its absolute value is defined by
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 设z = a + bi为复数。它的模定义为
- en: '![ ∘ --2---2 |z| := a + b . ](img/file2205.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![ ∘ --2---2 |z| := a + b . ](img/file2205.png)'
- en: In addition, each complex number has a conjugate, which, as we shall see later,
    corresponds to its mirror image with respect to the real axis.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，每个复数都有一个共轭复数，正如我们稍后将看到的，它对应于关于实轴的镜像。
- en: Definition 115\. (Conjugate of complex numbers)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 115.（复数的共轭）
- en: Let z = a + bi be a complex number. Its conjugate z is defined by
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 设z = a + bi为复数。它的共轭复数z定义为
- en: '![z-:= a − bi. ](img/file2206.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![z- := a − bi. ](img/file2206.png)'
- en: Note that zz = jzj².
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到zz = |z|²。
- en: Besides the algebraic representation z = a + bi, complex numbers have a rich
    geometric interpretation, as we are about to see.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 除了代数表示法z = a + bi，复数还有丰富的几何解释，正如我们接下来要看到的那样。
- en: D.2 The geometric representation
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D.2 几何表示法
- en: We can represent complex numbers in ways other than the one in the definition.
    If you think about it, each number z = a + bi can be seen as an ordered pair (a,b).
    These can be visualized as vectors on the Cartesian plane.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用不同于定义中的方式来表示复数。如果你仔细想一想，每个复数z = a + bi可以看作有序对(a,b)。这些可以在笛卡尔平面上作为向量来可视化。
- en: '![PIC](img/file2207.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/file2207.png)'
- en: 'Figure D.2: Complex numbers as vectors on the Cartesian plane'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 D.2：复数作为笛卡尔平面上的向量
- en: The absolute value |z| = ![√ ------- a2 + b2](img/file2208.png) of a complex
    number z = a + bi represents the length of the vector (a,b) from the origin, while
    conjugation z = a−bi corresponds to reflecting the point across the real axis.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 复数z = a + bi的模|z| = ![√ ------- a2 + b2](img/file2208.png)表示从原点到向量(a,b)的长度，而共轭复数z
    = a−bi则对应于将该点关于实轴进行反射。
- en: This geometric view gives us a new algebraic way to represent complex numbers.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这种几何视角为我们提供了一种新的代数方式来表示复数。
- en: To see why, recall the relation of the unit circle and the trigonometric functions
    on the plane.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解原因，回顾一下单位圆和平面上三角函数的关系。
- en: '![PIC](img/file2209.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/file2209.png)'
- en: 'Figure D.3: Geometric representation of complex numbers'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 D.3：复数的几何表示
- en: This means that every complex number with unit absolute value can be written
    in the form cos(φ) + isin(φ). From the geometric representation, we can see that
    every complex number is uniquely determined by its absolute value jzj and the
    angle φ. So, we can write all complex numbers in the so-called polar form
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着每个模为1的复数都可以写成cos(φ) + isin(φ)的形式。从几何表示中，我们可以看到每个复数都由其模|z|和角度φ唯一确定。所以，我们可以将所有复数写成所谓的极坐标形式
- en: '![ ( ) z = r cos(φ )+ isin (φ ) , r ∈ [0,∞ ), φ ∈ [0,2π), ](img/file2210.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) z = r cos(φ )+ isin (φ ) , r ∈ [0,∞ ), φ ∈ [0,2π), ](img/file2210.png)'
- en: where r = jzj is called the modulus, while φ is called the phase or argument.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 其中r = |z|被称为模，而φ被称为相位或辐角。
- en: This geometric representation can also help us make more sense of multiplication.
    To see this, let’s do some algebra first! When multiplying the complex numbers
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这种几何表示法也能帮助我们更好地理解乘法。为了更清楚地理解这一点，我们先做一些代数运算！当我们乘以复数时
- en: '![ ( ) z1 = r1 cos(φ1 )+ isin(φ1) , ( ) z2 = r2 cos(φ2 )+ isin(φ2) ](img/file2211.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) z1 = r1 cos(φ1 )+ isin(φ1) , ( ) z2 = r2 cos(φ2 )+ isin(φ2) ](img/file2211.png)'
- en: together, we obtain
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 合起来，我们得到
- en: '![ [( ) z1z2 = r1r2 cos(φ1 )cos(φ2 )− sin (φ1 )sin(φ2) ( )] + i cos(φ1)sin
    (φ2 )+ cos(φ2)sin (φ1 ) . ](img/file2212.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![ [( ) z1z2 = r1r2 cos(φ1 )cos(φ2 )− sin (φ1 )sin(φ2) ( )] + i cos(φ1)sin
    (φ2 )+ cos(φ2)sin (φ1 ) . ](img/file2212.png)'
- en: Do you recognize the real and imaginary parts? These are the famous trigonometric
    addition formulas. With these, we have
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你能识别出实部和虚部吗？这正是著名的三角函数加法公式。有了这些公式，我们得到了
- en: '![z1z2 = r1r2(cos(φ1 + φ2 )+ isin (φ1 + φ2)). ](img/file2213.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![z1z2 = r1r2(cos(φ1 + φ2 )+ isin (φ1 + φ2)). ](img/file2213.png)'
- en: This reveals a lot that is unclear from the algebraic definition. Most importantly,
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这揭示了代数定义中不明确的许多内容。最重要的是，
- en: the modulus of the product is the product of the moduli,
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 乘积的模是各自模的乘积，
- en: and the argument of the product is the sum of the arguments. (Moduli is the
    plural of modulus.)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并且积的辐角是各个辐角的和。（模是模数的复数形式。）
- en: 'In other words, multiplication in the complex plane is equivalent to a scaling
    and a rotation. All of a sudden, identities like i² = −1 make much more sense:
    since the argument of i is π∕2 (or 90 degrees), rotating it anticlockwise by π∕2
    yields −1.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，复平面中的乘法等同于一个缩放和旋转。突然间，像 i² = −1 这样的恒等式变得更加有意义：由于 i 的辐角是 π∕2（或 90 度），将其逆时针旋转
    π∕2 就得到 −1。
- en: So, why do we like real numbers? Because all polynomial equations have a solution
    there. Let’s see!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么我们喜欢实数呢？因为所有的多项式方程在实数范围内都有解。让我们看看！
- en: D.3 The fundamental theorem of algebra
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D.3 代数基本定理
- en: Remember our motivating example? We introduced the imaginary number i so that
    the equation x² + 1 = 0 can have a solution. It turned out that complex numbers
    provide a solution for any polynomial equation.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 还记得我们的动机例子吗？我们引入了虚数 i 使得方程 x² + 1 = 0 有解。事实证明，复数为任何多项式方程提供了解。
- en: 'Let’s introduce the set of polynomials with complex coefficients:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们介绍一组具有复系数的多项式：
- en: '![ { } ∑ n k ℂ [x ] := ckx : ck ∈ ℂ, n ∈ ℕ0 . k=0 ](img/file2214.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![ { } ∑ n k ℂ [x ] := ckx : ck ∈ ℂ, n ∈ ℕ0 . k=0 ](img/file2214.png)'
- en: Analogously, ℝ[x],ℚ[x],ℤ[x] and ℕ[x] can be defined as well. The degree of a
    polynomial (or deg p for short) is the highest power of x. (For example, −3x⁸
    + πx has a degree of 8.)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，ℝ[x]、ℚ[x]、ℤ[x] 和 ℕ[x] 也可以被定义。多项式的次数（或简称 deg p）是 x 的最高幂。（例如，−3x⁸ + πx 的次数为
    8。）
- en: For a given polynomial p(x), solutions of the equation p(x) = 0 are called roots.
    Algebraically, it is desirable that for a given set of polynomials over a particular
    set of numbers, each polynomial has roots there as well. As we have seen, it is
    not true for ℝ[x], since x² + 1 = 0 has no real solutions.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的多项式 p(x)，方程 p(x) = 0 的解称为根。从代数角度看，我们希望对于特定数集上的一组多项式，每个多项式在该数集上都有根。正如我们所看到的，这在
    ℝ[x] 中不成立，因为 x² + 1 = 0 没有实数解。
- en: However, this changes for ℂ[x], as stated by the fundamental theorem of algebra.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这对于 ℂ[x] 来说有所不同，正如代数基本定理所述。
- en: Theorem 156\. (The fundamental theorem of algebra)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 定理 156．（代数基本定理）
- en: Every non-constant polynomial p(x) ∈ℂ[x] (i.e., a polynomial with deg p ≥ 1)
    has at least one root in ℂ.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 每个非恒定多项式 p(x) ∈ ℂ[x]（即次数 deg p ≥ 1 的多项式）至少在 ℂ 中有一个根。
- en: Although this looks easy to prove, I assure you, it is not. The original algebraic
    proof is very long and involved, and although there is a shorter version, it requires
    advanced tools from mathematical analysis.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然看起来很容易证明，但我向你保证，这并不简单。原始的代数证明非常长且复杂，尽管有更简短的版本，但它需要高级的数学分析工具。
- en: We can take the fundamental theorem of algebra a bit further. If p(x) is a polynomial
    with a degree of at least 1 and x[1] is its root, then
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以进一步理解代数基本定理。如果 p(x) 是一个次数至少为 1 的多项式，且 x[1] 是它的根，那么
- en: '![ p (x ) q(x ) =------ x − x1 ](img/file2215.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![ p(x) q(x) =------ x − x1 ](img/file2215.png)'
- en: is a polynomial of degree deg q = deg p − 1\. If q is non-constant, the fundamental
    theorem of algebra once again guarantees that q also has a root in ℂ. Ultimately,
    the repeated application of the theorem yields that p(x) can be written in the
    form
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 是一个次数为 deg q = deg p − 1 的多项式。如果 q 不是恒定的，代数基本定理再次保证 q 也在 ℂ 中有一个根。最终，定理的反复应用导致
    p(x) 可以写成
- en: '![p(x) = (x − x1)(x− x2) ...(x − xn), ](img/file2216.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![ p(x) = (x − x1)(x − x2) ...(x − xn), ](img/file2216.png)'
- en: where x[1],x[2],…,x[n] are the roots of p. Some of them can match, and the number
    of times a given x[i] can be found among its roots is called its algebraic multiplicity.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 x[1], x[2], …, x[n] 是 p 的根。它们中的某些可以相同，一个给定的 x[i] 在其根中出现的次数称为其代数重数。
- en: Definition 116\. (Algebraic multiplicity of roots)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 116．（根的代数重数）
- en: Let p(x) ∈ℂ[x] and suppose that
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 令 p(x) ∈ ℂ[x]，并假设
- en: '![ ∏l p(x) = (x − xi)pi, xi ⁄= xj for i ⁄= j. i=1 ](img/file2217.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![ ∏l p(x) = (x − xi)pi, xi ⁄= xj for i ⁄= j. i=1 ](img/file2217.png)'
- en: The integer p[i] is called the algebraic multiplicity of the root x[i].
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 整数 p[i] 称为根 x[i] 的代数重数。
- en: The fundamental theorem of algebra is called fundamental for a reason. For instance,
    this is the reason why matrices have eigenvalues, as we learned in Chapter [6](ch012.xhtml#eigenvalues-and-eigenvectors).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 代数基本定理之所以被称为基本定理，是有原因的。例如，这就是为什么矩阵有特征值的原因，正如我们在第 [6](ch012.xhtml#eigenvalues-and-eigenvectors)
    章中学到的。
- en: D.4 Why are complex numbers important?
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D.4 为什么复数很重要？
- en: 'At first glance, complex numbers might not seem so important in machine learning.
    Let me assure you that this is not the case: they are absolutely essential. In
    this section, we will take a quick look forward and see what complex numbers make
    possible.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 初看之下，复数在机器学习中似乎不那么重要。让我向你保证，事实并非如此：它们是绝对必不可少的。在本节中，我们将简要展望一下复数所能实现的功能。
- en: For instance, one of the most important applications of complex numbers is the
    eigenvalue-eigenvector pairs of matrices. For a given matrix A, there are special
    numbers λ called eigenvalues, and corresponding vectors v called eigenvectors,
    such that Av = λv holds. In the language of linear transformations, this means
    that in the linear subspace spanned by the eigenvectors of λ, the transformation
    A is just a stretching.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，复数最重要的应用之一就是矩阵的特征值-特征向量对。对于给定的矩阵A，有一些特殊的数字λ，称为特征值，以及相应的向量v，称为特征向量，使得Av =
    λv成立。在线性变换的语言中，这意味着在λ的特征向量所张成的线性子空间中，变换A仅仅是一个拉伸操作。
- en: These are very powerful, as under certain conditions, eigenvalues allow us to
    simplify the matrix.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具非常强大，因为在某些条件下，特征值允许我们简化矩阵。
- en: Certain square real matrices can be written in the form
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 某些实数方阵可以写成以下形式
- en: '![ ( ) λ1 0 ... 0 | | −1 || 0 λ2 ... 0 || A = U ΣU , Σ = || .. .. ... .. ||
    ( . . . ) 0 0 ... λn ](img/file2218.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![ ( ) λ1 0 ... 0 | | −1 || 0 λ2 ... 0 || A = U ΣU , Σ = || .. .. ... .. ||
    ( . . . ) 0 0 ... λn ](img/file2218.png)'
- en: 'is a diagonal matrix composed of the eigenvalues of A. Guess what guarantees
    the existence of eigenvalues: the fundamental theorem of algebra.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 是由A的特征值组成的对角矩阵。猜猜是什么保证了特征值的存在：代数基本定理。
- en: 'By going from real to complex numbers, we obtain a larger degree of freedom
    and a more powerful set of tools. One such tool is the famous Fourier transform.
    To give you a practical example, let’s talk about audio. Audio data comes in the
    form of a function f : ℝ →ℝ, mapping time to signal intensity. However, in signal
    processing, it is instrumental to understand the signal in terms of frequencies.
    Every sound is the superposition of sine waves with various frequencies, and quantifying
    the contribution of each frequency reveals a lot about the signal.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '通过从实数到复数的转换，我们获得了更大的自由度和更强大的工具集。其中一个工具就是著名的傅里叶变换。为了给你一个实际的例子，让我们谈谈音频。音频数据以函数f
    : ℝ →ℝ的形式出现，将时间映射到信号强度。然而，在信号处理领域，将信号理解为频率是非常重要的。每个声音都是不同频率的正弦波的叠加，量化每个频率的贡献可以揭示信号的许多信息。'
- en: '[PRE2]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![PIC](img/file2219.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/file2219.png)'
- en: 'Figure D.4: Fourier transform'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图D.4：傅里叶变换
- en: The thing is, the Fourier transform is a complex integral. That is, the transform
    of f is defined by
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，傅里叶变换是一个复数积分。也就是说，f的变换是由下式定义的
- en: '![ ∫ ∞ ( ) ˆf(ξ) := f (t) cos(2πtξ) − isin(2πtξ) dt. −∞ ](img/file2220.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![ ∫ ∞ ( ) ˆf(ξ) := f (t) cos(2πtξ) − isin(2πtξ) dt. −∞ ](img/file2220.png)'
- en: Without complex numbers, this tool is not available to us.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 没有复数，我们无法使用这个工具。
- en: Although we will not deal with Fourier transforms in detail, they are an indispensable
    tool in probability theory. When applied to probability distributions, their convergence
    properties can be studied easily. For instance, some versions of the central limit
    theorem ([https://en.wikipedia.org/wiki/Central_limit_theorem](https://en.wikipedia.org/wiki/Central_limit_theorem))
    are proven this way.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们不会详细讨论傅里叶变换，但它们在概率论中是不可或缺的工具。应用于概率分布时，它们的收敛性特性可以轻松地研究。例如，一些版本的中心极限定理（[https://en.wikipedia.org/wiki/Central_limit_theorem](https://en.wikipedia.org/wiki/Central_limit_theorem)）就是通过这种方式证明的。
- en: Join our community on Discord
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我们在Discord上的社区
- en: Read this book alongside other users, Machine Learning experts, and the author
    himself. Ask questions, provide solutions to other readers, chat with the author
    via Ask Me Anything sessions, and much more. Scan the QR code or visit the link
    to join the community. [https://packt.link/math](https://packt.link/math)
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、机器学习专家以及作者本人一起阅读本书。提问、为其他读者提供解决方案、通过问我任何问题环节与作者互动，更多内容等你来发现。扫描二维码或访问链接加入社区。[https://packt.link/math](https://packt.link/math)
- en: '![PIC](img/file1.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/file1.png)'
