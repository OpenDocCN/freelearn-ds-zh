- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Discovering Snowpark
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Snowpark
- en: Snowpark is the recent major innovation released by Snowflake that provides
    an intuitive set of libraries and runtimes for querying and processing data at
    scale in Snowflake. This chapter aims to guide you through Snowpark to understand
    its unique capabilities. In addition, the chapter helps you learn how to utilize
    Python with Snowpark and implement it in various workloads such as data engineering,
    data science, and data applications. By the end of this chapter, you will have
    grasped Snowpark’s capabilities and benefits, including faster data processing,
    scalability, and reduced costs.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark 是 Snowflake 最近发布的一项重大创新，它提供了一套直观的库和运行时，用于在 Snowflake 中进行大规模的数据查询和处理。本章旨在引导您了解
    Snowpark 的独特功能。此外，本章还帮助您学习如何利用 Python 与 Snowpark 一起使用，并在各种工作负载中实现它，如数据工程、数据科学和数据应用。到本章结束时，您将掌握
    Snowpark 的功能和优势，包括更快的数据处理、可扩展性和降低成本。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Introducing Snowpark
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Snowpark
- en: Leveraging Python for Snowpark
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用 Python 为 Snowpark 提供支持
- en: Understanding Snowpark for different workloads
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Snowpark 在不同工作负载中的应用
- en: Realizing the value of using Snowpark
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现使用 Snowpark 的价值
- en: Introducing Snowpark
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Snowpark
- en: Snowflake, founded in 2012, started its journey to the data cloud by completely
    re-engineering the world of data and rethinking how a reliable, secure, high-performance,
    and scalable data-processing system should be architected for the cloud. It started
    with offering cloud-based data warehousing through a managed **Software as a Service**
    (**SaaS**) platform to load, analyze, and process large volumes of data. The success
    of Snowflake lies in the fact that it is a cloud-native managed solution that
    is built on top of the major public cloud providers such as Amazon Web Services,
    Microsoft Azure, and Google Cloud Platform by automatically providing a reliable,
    secure, high-performance, and scalable data processing system for organizations
    without the need to deploy hardware or install or configure any software.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Snowflake 成立于 2012 年，通过完全重新设计数据世界并重新思考如何为云构建一个可靠、安全、高性能和可扩展的数据处理系统，开始了其数据云之旅。它从提供基于云的数据仓库服务开始，通过一个托管
    **软件即服务**（**SaaS**）平台来加载、分析和处理大量数据。Snowflake 的成功在于它是一个云原生托管解决方案，它建立在主要的公共云提供商之上，如亚马逊网络服务、微软
    Azure 和谷歌云平台，通过自动提供可靠、安全、高性能和可扩展的数据处理系统，为组织提供支持，无需部署硬件或安装或配置任何软件。
- en: As with any cloud data warehousing, Snowflake supports **American National Standards
    Institute** (**ANSI**) SQL as the language of choice. Although SQL is a powerful
    declarative language that allows users to ask questions about data, it is constrained
    to data warehouse workloads, limiting the support for advanced workloads such
    as data science and data engineering, which require developers to write the solution
    in other programming languages leading them to move data out of Snowflake to perform
    these workloads.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何云数据仓库一样，Snowflake 支持作为首选语言的 **美国国家标准协会**（**ANSI**）SQL。尽管 SQL 是一种强大的声明性语言，允许用户对数据进行提问，但它仅限于数据仓库工作负载，限制了高级工作负载（如数据科学和数据工程）的支持，这些工作负载需要开发者用其他编程语言编写解决方案，从而导致他们需要将数据从
    Snowflake 移出以执行这些工作负载。
- en: Snowflake’s solution to this challenge is **Snowpark**, an innovative developer
    framework that streamlines the process of building complex data pipelines. With
    Snowpark, data scientists and developers can directly interact with Snowflake
    using their preferred programming language, enabling them to quickly and securely
    deploy **machine learning** (**ML**) models, execute data pipelines, and develop
    data applications on Snowflake’s virtual compute warehouse in a serverless manner
    without having to transfer data outside of Snowflake.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 雪花解决方案应对这一挑战的是 **Snowpark**，这是一个创新的开发者框架，它简化了构建复杂数据管道的过程。通过 Snowpark，数据科学家和开发者可以直接使用他们偏好的编程语言与
    Snowflake 进行交互，使他们能够快速且安全地部署 **机器学习**（**ML**）模型，执行数据管道，并在 Snowflake 的虚拟计算仓库中无服务器地开发数据应用，而无需将数据转移到
    Snowflake 之外。
- en: Snowpark enables data teams to collaborate on the data by natively supporting
    work with DataFrame style programming in Python, Scala, or Java, exposing deeply
    integrated interfaces in these languages to augment Snowflake’s original SQL language
    and minimizing the complexity of having to manage different environments for advanced
    data pipelines. This has led developers to leverage Snowflake’s robust and scalable
    computing power to ship code to the data without exporting it outside Snowflake
    into other environments.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark通过原生支持在Python、Scala或Java中使用DataFrame风格的编程，暴露了与这些语言的深度集成接口，从而增强了Snowflake原始的SQL语言，并最小化了管理不同环境以进行高级数据管道的复杂性。这导致开发者能够利用Snowflake强大且可扩展的计算能力，将代码发送到数据中，而无需将其导出到Snowflake之外的其他环境中。
- en: In this section, we covered a brief introduction to Snowpark and learned how
    it fits into the Snowflake ecosystem and how it helps developers. The following
    section will cover how to leverage Python for Snowpark.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们简要介绍了Snowpark，并学习了它如何融入Snowflake生态系统以及它如何帮助开发者。下一节将介绍如何利用Python进行Snowpark开发。
- en: Leveraging Python for Snowpark
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用Python进行Snowpark开发
- en: In June 2022, Snowflake made a significant announcement, revealing the much-anticipated
    **Snowpark for Python**. This new release has rapidly emerged as the preferred
    programming language for Snowpark, providing users with a more extensive range
    of options for programming data in Snowflake. Moreover, Snowpark has simplified
    managing data architectures, enabling users to operate more quickly and efficiently.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 2022年6月，Snowflake发布了一项重大公告，揭示了备受期待的**Snowpark for Python**。这个新版本迅速成为Snowpark的首选编程语言，为用户提供在Snowflake中编程数据的更广泛选项。此外，Snowpark简化了数据架构的管理，使用户能够更快、更有效地操作。
- en: Snowpark for Python is a cutting-edge, enterprise-grade, open-source innovation
    integrated into the Snowflake data cloud. As a result, the platform delivers a
    seamless, unified experience for data scientists and developers. In addition,
    the Snowpark for Python package is built upon the Snowflake Python connector.
    The Python connector enables users to execute SQL commands and other essential
    functions in Snowflake and Snowpark for Python empowers users to undertake more
    advanced data applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark for Python是一个前沿的、企业级的、开源的创新，集成到Snowflake数据云中。因此，该平台为数据科学家和开发者提供了一种无缝、统一的体验。此外，Snowpark
    for Python包建立在Snowflake Python连接器之上。Python连接器使用户能够在Snowflake和Snowpark中执行SQL命令和其他基本功能，而Snowpark
    for Python则赋予用户执行更高级数据应用的能力。
- en: For instance, the platform permits users to run **user-defined functions** (**UDFs**),
    **external functions**, and **stored procedures** directly within Snowflake. This
    powerful new functionality enables data scientists, engineers, and developers
    to create robust and secure data pipelines and ML models within Snowflake. As
    a result, they can leverage the platform’s superior performance, elasticity, and
    security features to deliver advanced insights and drive meaningful business outcomes.
    Overall, Snowpark for Python represents a significant step forward for Snowflake,
    offering users enhanced functionality and flexibility while retaining the platform’s
    exceptional performance and security features.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，该平台允许用户在Snowflake中直接运行**用户定义函数**（**UDFs**）、**外部函数**和**存储过程**。这一强大的新功能使数据科学家、工程师和开发者能够在Snowflake内创建强大且安全的数据管道和机器学习模型。因此，他们可以利用平台优越的性能、弹性和安全功能来提供高级见解并推动有意义的业务成果。总的来说，Snowpark
    for Python代表了Snowflake向前迈出的重要一步，为用户提供增强的功能和灵活性，同时保留了平台卓越的性能和安全功能。
- en: Snowpark for Python supports pre-vetted open-source packages through integration
    with the **Anaconda** environment that executes on an Anaconda-powered sandbox
    inside Snowflake’s virtual compute warehouses, which provides a familiar interface
    for the developers. The integrated Anaconda package manager is valuable for developers
    as it comes with a comprehensive set of curated open-source packages and supports
    resolving dependencies between different packages and versions. It is a huge time-saver
    and helps prevent developers from dealing with “dependency hell.”
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark for Python通过集成在Snowflake虚拟计算仓库内运行的Anaconda环境中的预审开源包来支持预审的开源包。这个环境为开发者提供了一个熟悉的界面。集成的Anaconda包管理器对开发者来说非常有价值，因为它附带了一套全面的精选开源包，并支持解决不同包和版本之间的依赖关系。这节省了大量时间，并帮助开发者避免处理“依赖地狱”的问题。
- en: Capabilities of Snowpark for Python
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Snowpark for Python的功能
- en: 'Snowpark for Python is generally available across all cloud instances of Snowflake.
    It helps accelerate different workloads and comes with a rich set of capabilities,
    as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark for Python在Snowflake的所有云实例中普遍可用。它有助于加速不同的工作负载，并附带一系列丰富的功能，如下所示：
- en: It allows developers to write Python code within Snowflake, enabling them to
    directly leverage the power of Python libraries and frameworks in Snowflake
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许开发者直接在Snowflake中编写Python代码，使他们能够直接利用Python库和框架在Snowflake中的强大功能
- en: It supports popular open-source Python libraries such as pandas, NumPy, SciPy,
    and scikit-learn, along with other libraries, allowing developers to perform complex
    data analysis and ML tasks directly within Snowflake
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持流行的开源Python库，如pandas、NumPy、SciPy和scikit-learn，以及其他库，允许开发者直接在Snowflake中执行复杂的数据分析和ML（机器学习）任务
- en: It also provides access to external data sources such as AWS S3, Azure Blob
    storage, and Google Cloud Storage, allowing developers to work with data stored
    outside Snowflake
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它还提供了访问外部数据源，如AWS S3、Azure Blob存储和Google Cloud Storage，允许开发者处理存储在Snowflake之外的数据
- en: It provides seamless integration with Snowflake’s SQL engine, allowing developers
    to write queries using functional programming methods with Python that compile
    to SQL
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了与Snowflake SQL引擎的无缝集成，允许开发者使用Python编写函数式编程方法编写的查询，这些查询编译为SQL
- en: It also supports distributed processing, allowing developers to scale their
    Python code to handle large datasets and complex logic
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它还支持分布式处理，允许开发者扩展其Python代码以处理大型数据集和复杂逻辑
- en: It enables developers to build custom UDFs that can be used within SQL queries,
    allowing for greater flexibility and customization of data processing workflows
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使开发者能够构建自定义的UDF（用户定义函数），这些函数可以在SQL查询中使用，从而提供更大的灵活性和数据处理的定制化
- en: Snowpark provides a Python development environment within Snowflake, allowing
    developers to write, test, and debug Python code directly within the Snowflake
    UI
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snowpark在Snowflake中提供了一个Python开发环境，允许开发者直接在Snowflake UI中编写、测试和调试Python代码
- en: It enables developers to work with various data formats such as CSV, JSON, Parquet,
    and Avro, providing data processing and analysis flexibility
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使开发者能够处理各种数据格式，如CSV、JSON、Parquet和Avro，提供数据处理和分析的灵活性
- en: It provides a unified data processing experience that works with SQL and Python
    in a single environment
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一个统一的数据处理体验，在单一环境中与SQL和Python协同工作
- en: It enables developers to create custom data pipelines using Python code, making
    integrating Snowflake with other data sources and data processing tools easier
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使开发者能够使用Python代码创建自定义数据管道，使得将Snowflake与其他数据源和数据处理工具集成更加容易
- en: It can handle real-time and batch data processing, making it easier to build
    data-intensive workloads
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以处理实时和批量数据处理，使得构建数据密集型工作负载更加容易
- en: It provides a robust framework built on Snowflake that ensures data privacy
    and compliance with industry standards such as the **Health Insurance Portability
    and Accountability Act** (**HIPAA**), **General Data Protection Regulation** (**GDPR**),
    and **Security Operations** **Center** (**SOC**)
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一个基于Snowflake的强大框架，确保数据隐私并符合行业标准，如**健康保险可携带性和问责制法案**（**HIPAA**）、**通用数据保护条例**（**GDPR**）和**安全运营中心**（**SOC**）
- en: Snowpark supports enhancing data by leveraging **Snowflake Marketplace**
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snowpark通过利用**Snowflake Marketplace**来增强数据
- en: Snowpark for Python packs many capabilities that help developers use it efficiently
    for various workloads and use cases within Snowflake.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark for Python集成了许多功能，帮助开发者高效地在Snowflake的各种工作负载和用例中使用它。
- en: Why Python for Snowpark
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么选择Python用于Snowpark
- en: Although Snowpark supports Python, Scala, and Java, this book will focus only
    on Python, a de facto for Snowpark development. Python’s growing popularity through
    high-level built-in data structures with dynamic typing and binding makes it ideal
    for data operations. In addition, the language is very flexible and easy to learn
    by developers. Its power lies in the rich open-source ecosystem that is well-supported
    with a growing list of popular packages.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Snowpark支持Python、Scala和Java，但本书将仅关注Python，这是Snowpark开发的实际标准。Python通过具有动态类型和绑定的高级内置数据结构而日益流行，使其非常适合数据操作。此外，该语言对开发者来说非常灵活且易于学习。其力量在于丰富的开源生态系统，得到了越来越多的流行包的支持。
- en: Python is a general-purpose, versatile programming language for different purposes,
    such as data engineering, data science, and data applications. It enables developers
    to learn a single programming language for all their needs.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种通用、多用途的编程语言，适用于各种目的，如数据工程、数据科学和数据应用。它使开发者能够学习一种编程语言来满足所有需求。
- en: Snowflake is also heavily investing in Python to make it easier for data scientists,
    engineers, and application developers to build even more in the data cloud without
    governance trade-offs.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Snowflake 也在大力投资 Python，以使数据科学家、工程师和应用开发者能够在数据云中构建更多内容，而无需做出治理权衡。
- en: In this section, we covered the capabilities of Snowpark for Python and why
    Python is a preferred language for developing Snowpark. The following section
    will cover how Snowpark can be used for different workloads.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们介绍了 Snowpark for Python 的功能以及为什么 Python 是开发 Snowpark 的首选语言。下一节将介绍 Snowpark
    如何用于不同的工作负载。
- en: Understanding Snowpark for different workloads
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Snowpark 在不同工作负载中的应用
- en: The release of Snowpark transformed Snowflake into a complete data platform
    designed to support various workloads. Snowpark supports multiple workloads, such
    as data science and ML, data engineering, and data applications.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark 的发布将 Snowflake 转变为一个完整的数据平台，旨在支持各种工作负载。Snowpark 支持多种工作负载，如数据科学和机器学习、数据工程和数据应用。
- en: Data science and ML
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据科学和机器学习
- en: Python is the favorite language for data scientists. Snowpark for Python supports
    popular libraries and frameworks such as pandas, NumPy, and scikit-learn, making
    it the ideal framework for data scientists to perform ML development in Snowflake.
    In addition, data scientists can use the DataFrames API to interact with data
    inside Snowflake and perform batch training and inference inside Snowflake. Developers
    can also use Snowpark for feature engineering, ML model inference, and end-to-end
    ML pipelines. Snowpark also provides a SnowparkML library to support data science
    and ML in Snowpark.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是数据科学家的首选语言。Snowpark for Python 支持流行的库和框架，如 pandas、NumPy 和 scikit-learn，使其成为数据科学家在
    Snowflake 中进行机器学习开发的理想框架。此外，数据科学家可以使用 DataFrames API 与 Snowflake 内部的数据进行交互，并在
    Snowflake 内进行批量训练和推理。开发者还可以使用 Snowpark 进行特征工程、机器学习模型推理和端到端机器学习管道。Snowpark 还提供了一个
    SnowparkML 库，以支持 Snowpark 中的数据科学和机器学习。
- en: Data engineering
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据工程
- en: Data cleansing and ELT workloads are complex, and building a data pipeline with
    just SQL is where Snowpark can be of great benefit. Snowpark lets developers factor
    code for readability and reuse it while providing a better capability for unit
    tests. In addition, with the support of Anaconda, developers can use open-source
    Python libraries for building reliable data pipelines. The other major challenge
    with data processing is that the infrastructure requires significant manual effort
    and maintenance. Snowpark solves this problem by being highly performant, enabling
    data engineers to work with large datasets quickly and efficiently, building complex
    data pipelines, and processing large volumes of data without performance issues.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 数据清洗和 ELT 工作负载非常复杂，仅使用 SQL 构建数据管道正是 Snowpark 可以发挥巨大作用的地方。Snowpark 允许开发者编写易于阅读和重用的代码，同时提供更好的单元测试能力。此外，借助
    Anaconda 的支持，开发者可以使用开源 Python 库来构建可靠的数据管道。数据处理的其他主要挑战是，基础设施需要大量的手动努力和维护。Snowpark
    通过高性能解决这一问题，使数据工程师能够快速高效地处理大型数据集，构建复杂的数据管道，并处理大量数据而不会出现性能问题。
- en: Data governance and security
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据治理和安全
- en: Snowpark supports developing solutions that incorporate data governance and
    security. Data governance is critical and augments the data science and data engineering
    use cases. Snowpark simplifies the governance posture by helping organizations
    understand and improve data quality. Developers can quickly create a function
    to perform data tests and detect anomalies. Snowpark can utilize the data classification
    capability to detect **personally identifiable information** (**PII**) and classify
    data that is critical to an organization. Custom functions developed in Snowpark
    can mask sensitive data such as credit card numbers using the robust dynamic data
    masking feature while retaining the existing security model in Snowflake.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark支持开发结合数据治理和安全的解决方案。数据治理至关重要，并增强了数据科学和数据工程用例。Snowpark通过帮助组织理解和改进数据质量来简化治理态势。开发者可以快速创建一个函数来执行数据测试和检测异常。Snowpark可以利用数据分类功能来检测**个人身份信息**（**PII**）并分类对组织至关重要的数据。在Snowpark中开发的自定义函数可以使用强大的动态数据掩码功能来屏蔽敏感数据，如信用卡号码，同时保留Snowflake中现有的安全模型。
- en: Data applications
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据应用
- en: Snowpark helps the team develop dynamic data applications that run directly
    on Snowflake without moving the data outside. Using **Streamlit**, a powerful
    open-source library that Snowflake acquired, developers can build native applications
    using the familiar Python environment. Interactive ML-powered applications can
    be developed and shared with users securely utilizing role-based access controls
    entirely on Snowflake’s governed platform, taking advantage of its scale, performance,
    and governance. The Snowflake Native Application Framework provides a streamlined
    path to monetize apps through Snowflake Marketplace, where you can make your app
    available to other Snowflake customers and open new revenue opportunities.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark帮助团队开发直接在Snowflake上运行而不需要将数据移出Snowflake的动态数据应用。使用Snowflake收购的强大开源库**Streamlit**，开发者可以使用熟悉的Python环境构建原生应用。利用基于角色的访问控制，可以在Snowflake管理的平台上安全地开发和共享交互式ML应用，利用其规模、性能和治理优势。Snowflake原生应用框架提供了一个通过Snowflake
    Marketplace货币化应用的简化路径，在那里你可以让你的应用可供其他Snowflake客户使用，并开辟新的收入机会。
- en: Snowpark supports different workloads and makes Snowflake a complete data cloud
    solution. The following section will highlight Snowpark’s technical and business
    benefits.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Snowpark支持不同的工作负载，使Snowflake成为一个完整的数据云解决方案。以下部分将突出Snowpark的技术和业务优势。
- en: Realizing the value of using Snowpark
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现使用Snowpark的价值
- en: 'The traditional big data approach has been in the industry for a long time
    and is unsuitable for modern cloud-based scalable workloads. Traditional architecture
    has many challenges, such as the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的大数据方法在业界已经存在很长时间，不适合现代基于云的可扩展工作负载。传统架构存在许多挑战，如下所述：
- en: De-coupling the compute and data into separate systems
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将计算和数据解耦到独立的系统中
- en: Running separate processing clusters for different languages
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为不同的语言运行独立的处理集群
- en: Complexity in managing the system
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统管理的复杂性
- en: Data silos and data duplication
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据孤岛和数据重复
- en: Lack of unified security and governance
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏统一的安全和治理
- en: 'Snowflake solves the traditional system’s challenges using Snowpark, providing
    tremendous value to the data ecosystem and Snowflake users. The following diagram
    shows the difference between a traditional approach and Snowflake’s streamlined
    approach:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Snowflake通过Snowpark解决了传统系统的挑战，为数据生态系统和Snowflake用户提供了巨大的价值。以下图表显示了传统方法与Snowflake简化方法的区别：
- en: '![Figure 1.1 – Traditional versus Snowflake approach](img/B19923_01_001.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1 – 传统方法与Snowflake方法的对比](img/B19923_01_001.jpg)'
- en: Figure 1.1 – Traditional versus Snowflake approach
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – 传统方法与Snowflake方法的对比
- en: 'As you can see from the difference between both approaches, Snowpark’s streamlined
    approach benefits both the business and the developers by providing a flexible,
    efficient, and cost-effective way to build data that scales with the business
    needs. Some of the significant values of using Snowpark are as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从两种方法的区别中可以看到，Snowpark的简化方法通过提供一种灵活、高效且成本效益高的方式来构建与业务需求同步扩展的数据，从而既有利于业务也有利于开发者。使用Snowpark的一些显著价值如下：
- en: Snowpark can access data programmatically through the DataFrame APIs, making
    the data ingestion and integration consistent, as you can integrate various structured
    and unstructured data
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snowpark可以通过DataFrame API编程访问数据，这使得数据摄取和集成保持一致，因为你可以集成各种结构化和非结构化数据
- en: Snowpark standardizes the approach to data processing since the data pipelines
    are in Python code; they can be tested and deployed and are easier to understand
    and interpret
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snowpark通过将数据处理管道标准化为Python代码，实现了数据处理方法的标准化；它们可以接受测试和部署，并且更容易理解和解释
- en: Anaconda powers Snowpark for Python and provides easy access to third-party
    Python libraries that are open source, which enhances the data processing capabilities
    and empowers developers to perform more
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda为Snowpark提供Python支持，并提供了对开源的第三方Python库的便捷访问，这增强了数据处理能力，并赋予开发者更多的能力
- en: Snowpark integrates and runs seamlessly on the existing Snowflake virtual warehouse,
    allowing developers to build data applications designed to scale without any additional
    infrastructure
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snowpark与现有的Snowflake虚拟仓库无缝集成和运行，允许开发者构建旨在无需额外基础设施即可扩展的数据应用
- en: Snowpark’s framework supports various workloads, such as data engineering, data
    science, and data applications, providing a unified experience for development
    on the data cloud
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snowpark的框架支持各种工作负载，如数据工程、数据科学和数据应用，为数据云上的开发提供了一个统一的使用体验
- en: Snowpark delivers a secure, governed environment as it is easy to enforce governance
    policies, and there is no data movement outside Snowflake
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snowpark提供了一个安全、受控的环境，因为它易于执行治理策略，并且没有数据在Snowflake之外移动
- en: Let’s wrap up this chapter.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结本章内容。
- en: Summary
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Snowflake’s Snowpark perfectly coalesces SQL and Python, running complex data
    processing jobs in the Snowflake data cloud and enabling data engineers, data
    scientists, and developers to take advantage of Snowflake. In this chapter, we
    have seen the benefits of Snowpark and why Python is the preferred development
    language. We also covered different workloads that Snowpark supports.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Snowflake的Snowpark完美地融合了SQL和Python，在Snowflake数据云中运行复杂的数据处理作业，并使数据工程师、数据科学家和开发者能够利用Snowflake。在本章中，我们看到了Snowpark的优势以及为什么Python是首选的开发语言。我们还介绍了Snowpark支持的不同工作负载。
- en: In the next chapter, we will examine configuring and operating with Snowpark
    in detail and learn how to use Snowpark for various workloads.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将详细探讨配置和操作Snowpark，并学习如何使用Snowpark处理各种工作负载。
