["```py\ndocker run -p 8888:8888 -v 'pwd':/notebooks -it rcshubhadeep/packt-data-wrangling-base:latest ipython\n```", "```py\nlist_example = [51, 27, 34, 46, 90, 45, -19]\n```", "```py\nlist_example2 = [15, \"Yellow car\", True, 9.456, [12, \"Hello\"]]\n```", "```py\n    list_1 = [34, 12, 89, 1]\n    ```", "```py\n    list_1[0] #34\n    ```", "```py\n    list_1[3] #1\n    ```", "```py\n    list_1[len(list_1) - 1] #1\n    ```", "```py\n    list_1[-1] #1\n    ```", "```py\n    list_1[1:3] # [12, 89]\n    ```", "```py\n    list_1[-2:] # [89, 1]\n    ```", "```py\n    list_1[:-2] # [34, 12]\n    ```", "```py\n    list_1[-1::-1] # [1, 89, 12, 34]\n    ```", "```py\n    list_1 = []\n    for x in range(0, 10):\n        list_1.append(x)\n    list_1\n    ```", "```py\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    ```", "```py\n    list_2 = [x for x in range(0, 100)]\n    list_2\n    ```", "```py\n    i = 0\n    while i < len(list_1) :\n        print(list_1[i]) \n        i += 1\n    ```", "```py\n    list_3 = [x for x in range(0, 100) if x % 5 == 0]\n    list_3\n    ```", "```py\n    [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95]\n    ```", "```py\n    list_1 = [1, 4, 56, -1]\n    list_2 = [1, 39, 245, -23, 0, 45]\n    list_3 = list_1 + list_2\n    list_3\n    ```", "```py\n    [1, 4, 56, -1, 1, 39, 245, -23, 0, 45]\n    ```", "```py\n    list_1.extend(list_2)\n    list_1\n    ```", "```py\n    list_1 = [x for x in range(0, 100)]\n    for i in range(0, len(list_1)):\n        print(list_1[i])\n    ```", "```py\n    for i in list_1:\n        print(i)\n    ```", "```py\n     25 in list_1\n    ```", "```py\n     -45 in list_1\n    ```", "```py\n    list_1.sort(reverse=True)\n    list_1\n    ```", "```py\n    list_1.reverse()\n    list_1\n    ```", "```py\n    import random\n    ```", "```py\n    list_1 = [random.randint(0, 30) for x in range (0, 100)]\n    ```", "```py\n    list_1\n    ```", "```py\nlist_12 = list(set(list_1))\n```", "```py\nlist_12\n```", "```py\nset1 = {\"Apple\", \"Orange\", \"Banana\"}\nset2 = {\"Pear\", \"Peach\", \"Mango\", \"Banana\"}\n```", "```py\nset1 | set2\n```", "```py\n{'Apple', 'Banana', 'Mango', 'Orange', 'Peach', 'Pear'}\n```", "```py\nset1 & set2\n```", "```py\n{'Banana'}\n```", "```py\nnull_set_1 = set({})\nnull_set_1\n```", "```py\nset()\n```", "```py\nnull_set_2 = {}\nnull_set_2\n```", "```py\n{}\n```", "```py\ndict_1 = {\"key1\": \"value1\", \"key2\": \"value2\"}\ndict_1\n```", "```py\n{'key1': 'value1', 'key2': 'value2'}\n```", "```py\ndict_2 = {\"key1\": 1, \"key2\": [\"list_element1\", 34], \"key3\": \"value3\",\n          \"key4\": {\"subkey1\": \"v1\"}, \"key5\": 4.5}\ndict_2\n```", "```py\n{'key1': 1,\n 'key2': ['list_element1', 34],\n 'key3': 'value3',\n 'key4': {'subkey1': 'v1'},\n 'key5': 4.5}\n```", "```py\n    dict_2[\"key2\"]\n    ```", "```py\n    ['list_element1', 34]\n    ```", "```py\n    dict_2[\"key2\"] = \"My new value\"\n    ```", "```py\n    dict_3 = {}  # Not a null set. It is a dict\n    dict_3[\"key1\"] = \"Value1\"\n    dict_3\n    ```", "```py\n    {'key1': 'Value1'}\n    ```", "```py\n    dict_1 = {\"key1\": 1, \"key2\": [\"list_element1\", 34], \"key3\": \"value3\", \"key4\": {\"subkey1\": \"v1\"}, \"key5\": 4.5}\n    ```", "```py\n    for k, v in dict_1.items():\n        print(\"{} - {}\".format(k, v))\n    ```", "```py\n    key1 - 1\n    key2 - ['list_element1', 34]\n    key3 - value3\n    key4 - {'subkey1': 'v1'}\n    key5 - 4.5\n    ```", "```py\n    list_1 = [random.randint(0, 30) for x in range (0, 100)]\n    ```", "```py\n    list(dict.fromkeys(list_1).keys())\n    ```", "```py\n    dict_1 = {\"key1\": 1, \"key2\": [\"list_element1\", 34], \"key3\": \"value3\",\n              \"key4\": {\"subkey1\": \"v1\"}, \"key5\": 4.5}\n    dict_1\n    ```", "```py\n    {'key1': 1,\n     'key2': ['list_element', 34],\n     'key3': 'value3',\n     'key4': {'subkey1': 'v1'},\n     'key5': 4.5}\n    ```", "```py\n    del dict_1[\"key2\"]\n    ```", "```py\n    {'key3': 'value3', 'key4': {'subkey1': 'v1'}, 'key5': 4.5}\n    ```", "```py\n    list_1 = [x for x in range(0, 10)]\n    dict_1 = {x : x**2 for x in list_1}\n    dict_1\n    ```", "```py\n    {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}\n    ```", "```py\n    dict_2 = dict([('Tom', 100), ('Dick', 200), ('Harry', 300)])\n    dict_2\n    ```", "```py\n    {'Tom': 100, 'Dick': 200, 'Harry': 300}\n    ```", "```py\n    dict_3 = dict(Tom=100, Dick=200, Harry=300)\n    dict_3\n    ```", "```py\n    {'Tom': 100, 'Dick': 200, 'Harry': 300}\n    ```", "```py\ntuple_1 = 24, 42, 2.3456, \"Hello\"\n```", "```py\ntuple_1 = ()\n```", "```py\ntuple_1 = \"Hello\",\n```", "```py\ntuple_1 = \"hello\", \"there\"\ntuple_12 = tuple_1, 45, \"Sam\"\n```", "```py\ntuple_1 = \"Hello\", \"World!\"\ntuple_1[1] = \"Universe!\"\n```", "```py\ntuple_1 = \"Hello\", \"World\"\nhello, world = tuple_1\nprint(hello)\nprint(world)\n```", "```py\nHello\nWorld\n```", "```py\n    tupleE = \"1\", \"3\", \"5\"\n    tupleE\n    ```", "```py\n    ('1', '3', '5')\n    ```", "```py\n    tupleE[1] = \"5\"\n    ```", "```py\n    1, 3, 5 = tupleE\n    ```", "```py\n    print(1)\n    print(3)\n    ```", "```py\n    1\n    3\n    ```", "```py\nstring1 = 'Hello World!' \n```", "```py\nstring2 = \"Hello World 2!\"\n```", "```py\n    str_1 = \"Hello World!\"\n    ```", "```py\n    str_1[0]\n    ```", "```py\n    'H'\n    ```", "```py\n    str_1[4]\n    ```", "```py\n    'o'\n    ```", "```py\n    str_1[len(str_1) - 1]\n    ```", "```py\n    '!'\n    ```", "```py\n    str_1[-1]\n    ```", "```py\n    '!'\n    ```", "```py\n    str_1 = \"Hello World! I am learning data wrangling\"\n    ```", "```py\n    str_1[2:10]\n    ```", "```py\n    'llo Worl'\n    ```", "```py\n    str_1[-31:]\n    ```", "```py\n    'd! I am learning data wrangling'\n    ```", "```py\n    str_1[-10:-5]\n    ```", "```py\n    ' wran'\n    ```", "```py\nstr_1 = \"Hello World! I am learning data wrangling\"\nlen(str_1)\n```", "```py\nstr_1 = \"A COMPLETE UPPER CASE STRING\"\nstr_1.lower()\nstr_1.upper()\n```", "```py\n'A COMPLETE UPPER CASE STRING'\n```", "```py\nstr_1 = \"A complicated string looks like this\"\nstr_1.find(\"complicated\")\nstr_1.find(\"hello\")# This will return -1\n```", "```py\nstr_1 = \"A complicated string looks like this\"\nstr_1.replace(\"complicated\", \"simple\")\n```", "```py\n'A simple string looks like this'\n```", "```py\n    str_1 = \"Name, Age, Sex, Address\"\n    list_1 = str_1.split(\",\")\n    list_1\n    ```", "```py\n    ['Name', ' Age', ' Sex', ' Address']\n    ```", "```py\n    \" | \".join(list_1) \n    ```", "```py\n    'Name |  Age |  Sex |  Address'\n    ```"]