["```py\nCreate Table < managed_table_name>  \n   Column1 <data type>, \n   Column2 <data type>, \n   Column3 <data type> \nRow format delimited Fields Terminated by \"t\"; \n```", "```py\nLoad data inpath <hdfs_folder_name> into table <managed_table_name>; \n```", "```py\nDrop table <managed_table_name>; \n```", "```py\nCreate Table < external_table_name>  \n   Column1 <data type>, \n   Column2 <data type>, \n   Column3 <data type> \nRow format delimited Fields Terminated by \"t\" \nLocation <hdfs_folder_name>; \n```", "```py\nLoad data inpath <hdfs_folder_name> into table <external_table_name>; \n```", "```py\nDrop table <managed_table_name>;  \n```", "```py\nhive> create database if not exists ORDERS; \nOK \nTime taken: 0.036 seconds \n\nhive> use orders; \nOK \nTime taken: 0.262 seconds \n\nhive> CREATE TABLE if not exists ORDEERS_DATA \n    > (Ord_id INT, \n    > Ord_month INT, \n    > Ord_customer_id INT, \n    > Ord_city  STRING, \n    > Ord_zip   STRING, \n    > ORD_amt   FLOAT \n    > ) \n    > ROW FORMAT DELIMITED \n    > FIELDS TERMINATED BY  ',' \n    > ; \nOK \nTime taken: 0.426 seconds \nhive> \n```", "```py\n101,1,100,'Los Angeles','90001',1200 \n102,2,200,'Los Angeles','90002',1800 \n103,3,300,'Austin','78701',6500 \n104,4,400,'Phoenix','85001',7800 \n105,5,500,'Beverly Hills','90209',7822 \n106,6,600,'Gaylord','49734',8900 \n107,7,700,'Los Angeles','90001',7002 \n108,8,800,'Los Angeles','90002',8088 \n109,9,900,'Reno','89501',6700 \n110,10,1000,'Los Angeles','90001',8500 \n111,10,1000,'Logan','84321',2300 \n112,10,1000,'Fremont','94539',9500 \n113,10,1000,'Omaha','96245',7500 \n114,11,2000,'New York','10001',6700 \n115,12,3000,'Los Angeles','90003',1000 \n```", "```py\n[root@sandbox order_data]# hadoop fs -put /root/order_data/orders.txt /tmp \n\n[root@sandbox order_data]# hadoop fs -ls /tmp \nFound 3 items \n-rw-r--r--   1 root      hdfs        530 2017-09-02 18:06 /tmp/orders.txt \n```", "```py\nhive> load data inpath '/tmp/orders.txt' into table ORDERS_DATA; \nLoading data to table orders.orders_data \nTable orders.orders_data stats: [numFiles=1, numRows=0, totalSize=530, rawDataSize=0] \nOK \nTime taken: 0.913 seconds \n\nhive> select * from ORDERS_DATA; \nOK \n101      1     100   'Los Angeles'     '90001'     1200.0 \n102      2     200   'Los Angeles'     '90002'     1800.0 \n103      3     300   'Austin'    '78701'     6500.0 \n104      4     400   'Phoenix'   '85001'     7800.0 \n105      5     500   'Beverly Hills'   '90209'     7822.0 \n106      6     600   'Gaylord'   '49734'     8900.0 \n107      7     700   'Los Angeles'     '90001'     7002.0 \n108      8     800   'Los Angeles'     '90002'     8088.0 \n109      9     900   'Reno'      '89501'     6700.0 \n110      10    1000  'Los Angeles'     '90001'     8500.0 \n111      10    1000  'Logan'     '84321'     2300.0 \n112      10    1000  'Fremont'   '94539'     9500.0 \n113      10    1000  'Omaha'     '96245'     7500.0 \n114      11    2000  'New York'  '10001'     6700.0 \n115      12    3000  'Los Angeles'     '90003'     1000.0 \nTime taken: 0.331 seconds, Fetched: 15 row(s) \n```", "```py\nhive>  select * from ORDERS where Ord_city = 'Los Angeles' ; \n\n```", "```py\nhive> use orders; \n\nhive> CREATE TABLE orders_part \n    > (Ord_id INT, \n    > Ord_month INT, \n    > Ord_customer_id INT, \n    > Ord_zip   STRING, \n    > ORD_amt   FLOAT \n    > ) \n    > PARTITIONED BY  (Ord_city INT) \n    > ROW FORMAT DELIMITED \n    > FIELDS TERMINATED BY  ',' \n    > ; \nOK \nTime taken: 0.305 seconds \nhive> \n```", "```py\nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Los Angeles'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Austin'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Phoenix'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Beverly Hills'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Gaylord'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city=Reno'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Fremont'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Omaha'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='New York'); \nload data inpath '/tmp/orders.txt' into table orders_part partition(Ord_city='Logan'); \n\n[root@sandbox order_data]# hadoop fs -ls /apps/hive/warehouse/orders.db/orders_part \nFound 10 items \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=Austin \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=Beverly Hills \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=Fremont \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=Gaylord \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:33 /apps/hive/warehouse/orders.db/orders_part/ord_city=Logan \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=Los Angeles \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=New York \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=Omaha \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:32 /apps/hive/warehouse/orders.db/orders_part/ord_city=Phoenix \ndrwxrwxrwx   - root hdfs          0 2017-09-02 18:33 /apps/hive/warehouse/orders.db/orders_part/ord_city=Reno \n[root@sandbox order_data]  \n```", "```py\nset hive.mapred.mode = strict;  \n```", "```py\nSET hive.exec.dynamic.partition = true;\nSET hive.exec.dynamic.partition.mode = nonstrict;  \n```", "```py\nhive> use orders; \nOK \nTime taken: 1.595 seconds \nhive> drop table orders_New; \nOK \nTime taken: 0.05 seconds \nhive> CREATE TABLE orders_New \n    > (Ord_id INT, \n    > Ord_month INT, \n    > Ord_customer_id INT, \n    > Ord_city  STRING, \n    > Ord_zip   STRING, \n    > ORD_amt   FLOAT \n    > ) \n    > ) \n    > PARTITIONED BY  (Ord_city STRING) \n    > ROW FORMAT DELIMITED \n    > FIELDS TERMINATED BY  ',' \n    > ; \nOK \nTime taken: 0.458 seconds \nhive> \n```", "```py\nhive> SET hive.exec.dynamic.partition = true; \nhive> SET hive.exec.dynamic.partition.mode = nonstrict; \nhive>  \n    > insert into table orders_new  partition(Ord_city) select * from orders_part; \nQuery ID = root_20170902184354_2d409a56-7bfc-416e-913a-2323ea3b339a \nTotal jobs = 1 \nLaunching Job 1 out of 1 \nStatus: Running (Executing on YARN cluster with App id application_1504299625945_0013) \n\n-------------------------------------------------------------------------------- \n        VERTICES      STATUS  TOTAL  COMPLETED  RUNNING  PENDING  FAILED  KILLED \n-------------------------------------------------------------------------------- \nMap 1 ..........   SUCCEEDED      1          1        0        0       0       0 \n-------------------------------------------------------------------------------- \nVERTICES: 01/01  [==========================>>] 100%  ELAPSED TIME: 3.66 s      \n-------------------------------------------------------------------------------- \nLoading data to table orders.orders_new partition (ord_city=null) \n    Time taken to load dynamic partitions: 2.69 seconds \n   Loading partition {ord_city=Logan} \n   Loading partition {ord_city=Los Angeles} \n   Loading partition {ord_city=Beverly Hills} \n   Loading partition {ord_city=Reno} \n   Loading partition {ord_city=Fremont} \n   Loading partition {ord_city=Gaylord} \n   Loading partition {ord_city=Omaha} \n   Loading partition {ord_city=Austin} \n   Loading partition {ord_city=New York} \n   Loading partition {ord_city=Phoenix} \n    Time taken for adding to write entity : 3 \nPartition orders.orders_new{ord_city=Austin} stats: [numFiles=1, numRows=1, totalSize=13, rawDataSize=12] \nPartition orders.orders_new{ord_city=Beverly Hills} stats: [numFiles=1, numRows=1, totalSize=13, rawDataSize=12] \nPartition orders.orders_new{ord_city=Fremont} stats: [numFiles=1, numRows=1, totalSize=15, rawDataSize=14] \nPartition orders.orders_new{ord_city=Gaylord} stats: [numFiles=1, numRows=1, totalSize=13, rawDataSize=12] \nPartition orders.orders_new{ord_city=Logan} stats: [numFiles=1, numRows=1, totalSize=15, rawDataSize=14] \nPartition orders.orders_new{ord_city=Los Angeles} stats: [numFiles=1, numRows=6, totalSize=82, rawDataSize=76] \nPartition orders.orders_new{ord_city=New York} stats: [numFiles=1, numRows=1, totalSize=15, rawDataSize=14] \nPartition orders.orders_new{ord_city=Omaha} stats: [numFiles=1, numRows=1, totalSize=15, rawDataSize=14] \nPartition orders.orders_new{ord_city=Phoenix} stats: [numFiles=1, numRows=1, totalSize=13, rawDataSize=12] \nPartition orders.orders_new{ord_city=Reno} stats: [numFiles=1, numRows=1, totalSize=13, rawDataSize=12] \nOK \nTime taken: 10.493 seconds \nhive>  \n```", "```py\nhive> show partitions ORDERS_NEW; \nOK \nord_city=Austin \nord_city=Beverly Hills \nord_city=Fremont \nord_city=Gaylord \nord_city=Logan \nord_city=Los Angeles \nord_city=New York \nord_city=Omaha \nord_city=Phoenix \nord_city=Reno \nTime taken: 0.59 seconds, Fetched: 10 row(s) \nhive>  \n```", "```py\nSET hive.exec.dynamic.partition = true; \nSET hive.exec.dynamic.partition.mode = nonstrict; \nSET hive.exec.mx_dynamic.partition=20000; \nSET hive.exec.mx_dynamic.partition.pernode=20000; \nSET hive.enforce.bucketing = true; \n\nhive> use orders; \nOK \nTime taken: 0.221 seconds \nhive>  \n    > CREATE TABLE ORDERS_BUCKT_non_partition \n    > (Ord_id INT, \n    > Ord_month INT, \n    > Ord_customer_id INT, \n    > Ord_city  STRING, \n    > Ord_zip   STRING, \n    > ORD_amt   FLOAT \n    > ) \n    > CLUSTERED BY (Ord_city) into 4 buckets stored as textfile; \nOK \nTime taken: 0.269 seconds \nhive>  \n\n```", "```py\nhive> insert into ORDERS_BUCKT_non_partition select * from orders_data; \nQuery ID = root_20170902190615_1f557644-48d6-4fa1-891d-2deb7729fa2a \nTotal jobs = 1 \nLaunching Job 1 out of 1 \nTez session was closed. Reopening... \nSession re-established. \nStatus: Running (Executing on YARN cluster with App id application_1504299625945_0014) \n\n-------------------------------------------------------------------------------- \n        VERTICES      STATUS  TOTAL  COMPLETED  RUNNING  PENDING  FAILED  KILLED \n-------------------------------------------------------------------------------- \nMap 1 ..........   SUCCEEDED      1          1        0        0       0       0 \nReducer 2 ......   SUCCEEDED      4          4        0        0       0       0 \n-------------------------------------------------------------------------------- \nVERTICES: 02/02  [==========================>>] 100%  ELAPSED TIME: 9.58 s      \n-------------------------------------------------------------------------------- \nLoading data to table orders.orders_buckt_non_partition \nTable orders.orders_buckt_non_partition stats: [numFiles=4, numRows=15, totalSize=560, rawDataSize=545] \nOK \nTime taken: 15.55 seconds \nhive> \n\n```", "```py\n\n[root@sandbox order_data]# hadoop fs -ls /apps/hive/warehouse/orders.db/orders_buckt_non_partition \nFound 4 items \n-rwxrwxrwx   1 root hdfs         32 2017-09-02 19:06 /apps/hive/warehouse/orders.db/orders_buckt_non_partition/000000_0 \n-rwxrwxrwx   1 root hdfs        110 2017-09-02 19:06 /apps/hive/warehouse/orders.db/orders_buckt_non_partition/000001_0 \n-rwxrwxrwx   1 root hdfs        104 2017-09-02 19:06 /apps/hive/warehouse/orders.db/orders_buckt_non_partition/000002_0 \n-rwxrwxrwx   1 root hdfs        314 2017-09-02 19:06 /apps/hive/warehouse/orders.db/orders_buckt_non_partition/000003_0 \n[root@sandbox order_data]# \n```", "```py\nSET hive.exec.dynamic.partition = true; \nSET hive.exec.dynamic.partition.mode = nonstrict; \nSET hive.exec.mx_dynamic.partition=20000; \nSET hive.exec.mx_dynamic.partition.pernode=20000; \nSET hive.enforce.bucketing = true; \n\nhive> CREATE TABLE ORDERS_BUCKT_partition \n    > (Ord_id INT, \n    > Ord_month INT, \n    > Ord_customer_id INT, \n    > Ord_zip   STRING, \n    > ORD_amt   FLOAT \n    > ) \n    > PARTITIONED BY  (Ord_city STRING) \n    > CLUSTERED BY (Ord_zip) into 4 buckets stored as textfile; \nOK \nTime taken: 0.379 seconds \n```", "```py\nhive> SET hive.exec.dynamic.partition = true; \nhive> SET hive.exec.dynamic.partition.mode = nonstrict; \nhive> SET hive.exec.mx_dynamic.partition=20000; \nQuery returned non-zero code: 1, cause: hive configuration hive.exec.mx_dynamic.partition does not exists. \nhive> SET hive.exec.mx_dynamic.partition.pernode=20000; \nQuery returned non-zero code: 1, cause: hive configuration hive.exec.mx_dynamic.partition.pernode does not exists. \nhive> SET hive.enforce.bucketing = true; \nhive> insert into ORDERS_BUCKT_partition partition(Ord_city) select * from orders_part; \nQuery ID = root_20170902194343_dd6a2938-6aa1-49f8-a31e-54dafbe8d62b \nTotal jobs = 1 \nLaunching Job 1 out of 1 \nStatus: Running (Executing on YARN cluster with App id application_1504299625945_0017) \n\n-------------------------------------------------------------------------------- \n        VERTICES      STATUS  TOTAL  COMPLETED  RUNNING  PENDING  FAILED  KILLED \n-------------------------------------------------------------------------------- \nMap 1 ..........   SUCCEEDED      1          1        0        0       0       0 \nReducer 2 ......   SUCCEEDED      4          4        0        0       0       0 \n-------------------------------------------------------------------------------- \nVERTICES: 02/02  [==========================>>] 100%  ELAPSED TIME: 7.13 s      \n-------------------------------------------------------------------------------- \nLoading data to table orders.orders_buckt_partition partition (ord_city=null) \n    Time taken to load dynamic partitions: 2.568 seconds \n   Loading partition {ord_city=Phoenix} \n   Loading partition {ord_city=Logan} \n   Loading partition {ord_city=Austin} \n   Loading partition {ord_city=Fremont} \n   Loading partition {ord_city=Beverly Hills} \n   Loading partition {ord_city=Los Angeles} \n   Loading partition {ord_city=New York} \n   Loading partition {ord_city=Omaha} \n   Loading partition {ord_city=Reno} \n   Loading partition {ord_city=Gaylord} \n    Time taken for adding to write entity : 3 \nPartition orders.orders_buckt_partition{ord_city=Austin} stats: [numFiles=1, numRows=1, totalSize=22, rawDataSize=21] \nPartition orders.orders_buckt_partition{ord_city=Beverly Hills} stats: [numFiles=1, numRows=1, totalSize=29, rawDataSize=28] \nPartition orders.orders_buckt_partition{ord_city=Fremont} stats: [numFiles=1, numRows=1, totalSize=23, rawDataSize=22] \nPartition orders.orders_buckt_partition{ord_city=Gaylord} stats: [numFiles=1, numRows=1, totalSize=23, rawDataSize=22] \nPartition orders.orders_buckt_partition{ord_city=Logan} stats: [numFiles=1, numRows=1, totalSize=26, rawDataSize=25] \nPartition orders.orders_buckt_partition{ord_city=Los Angeles} stats: [numFiles=1, numRows=6, totalSize=166, rawDataSize=160] \nPartition orders.orders_buckt_partition{ord_city=New York} stats: [numFiles=1, numRows=1, totalSize=23, rawDataSize=22] \nPartition orders.orders_buckt_partition{ord_city=Omaha} stats: [numFiles=1, numRows=1, totalSize=25, rawDataSize=24] \nPartition orders.orders_buckt_partition{ord_city=Phoenix} stats: [numFiles=1, numRows=1, totalSize=23, rawDataSize=22] \nPartition orders.orders_buckt_partition{ord_city=Reno} stats: [numFiles=1, numRows=1, totalSize=20, rawDataSize=19] \nOK \nTime taken: 13.672 seconds \nhive>  \n```", "```py\nCREATE VIEW [IF NOT EXISTS] [db_name.]view_name [(column_name [COMMENT column_comment], ...) ] \n  [COMMENT view_comment] \n  [TBLPROPERTIES (property_name = property_value, ...)] \n  AS SELECT ...;\n```", "```py\nCreate view table_x_view as select * from Table_X; \n```", "```py\nCreate view table_x_view as select xcol_1,xcol_3  from Table_X; \n```", "```py\nCreate view table_x_view as select * from Table_X where XCol_3 > 40 and  XCol_2 is not null; \n```", "```py\ncreate view table_union_view  as select XCol_1, XCol_2, XCol_3,Null from Table_X \n   where XCol_2  = \"AAA\" \n   union all \n   select YCol_1, YCol_2, YCol_3, YCol_4 from Table_Y \n   where YCol_3 = \"BBB\"; \n\n   create view table_join_view as select * from Table_X \n   join Table_Y on Table_X. XCol_1 = Table_Y. YCol_1; \n```", "```py\nCREATE INDEX table_x_idx_1 ON TABLE table_x (xcol_1) AS 'COMPACT';  \nSHOW INDEX ON table_x_idx;  \nDROP INDEX table_x_idx ON table_x; \n\nCREATE INDEX table_x_idx_2 ON TABLE table_x (xcol_1) AS 'COMPACT' WITH DEFERRED REBUILD;  \nALTER INDEX table_x_idx_2 ON table_x REBUILD;  \nSHOW FORMATTED INDEX ON table_x; \n```", "```py\nCREATE INDEX table_x_idx_3 ON TABLE table_x (table_x) AS 'COMPACT' ROW FORMAT DELIMITED  \nFIELDS TERMINATED BY 't'  \nSTORED AS TEXTFILE; \n```", "```py\nCREATE INDEX table_x_bitmap_idx_4 ON TABLE table_x (table_x) AS 'BITMAP' WITH DEFERRED REBUILD;  \nALTER INDEX table_x_bitmap_idx_4 ON table03 REBUILD;  \nSHOW FORMATTED INDEX ON table_x; \nDROP INDEX table_x_bitmap_idx_4 ON table_x; \n```", "```py\n{\"username\":\"abc\",\"tweet\":\"Sun shine is bright.\",\"time1\": \"1366150681\" } \n{\"username\":\"xyz\",\"tweet\":\"Moon light is mild .\",\"time1\": \"1366154481\" } \n```", "```py\n[root@sandbox ~]# cat Sample-Json-simple.json \n{\"username\":\"abc\",\"tweet\":\"Sun shine is bright.\",\"timestamp\": 1366150681 } \n{\"username\":\"xyz\",\"tweet\":\"Moon light is mild .\",\"timestamp\": 1366154481 } \n[root@sandbox ~]#  \n```", "```py\n[root@sandbox ~]# hadoop fs -mkdir  /user/hive-simple-data/ \n[root@sandbox ~]# hadoop fs -put Sample-Json-simple.json /user/hive-simple-data/ \n```", "```py\nhive> use orders; \nOK \nTime taken: 1.147 seconds \nhive>  \nCREATE EXTERNAL TABLE simple_json_table ( \nusername string, \ntweet string, \ntime1 string) \nROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe' \nLOCATION '/user/hive-simple-data/'; \nOK \nTime taken: 0.433 seconds \nhive>  \n```", "```py\nhive> select * from simple_json_table ; \nOK \nabc      Sun shine is bright.    1366150681 \nxyz      Moon light is mild .    1366154481 \nTime taken: 0.146 seconds, Fetched: 2 row(s) \nhive>  \n```", "```py\n{\"DocId\":\"Doc1\",\"User1\":{\"Id\":9192,\"Username\":\"u2452\",\"ShippingAddress\":{\"Address1\":\"6373 Sun Street\",\"Address2\":\"apt 12\",\"City\":\"Foster City\",\"State\":\"CA\"},\"Orders\":[{\"ItemId\":5343,\"OrderDate\":\"12/23/2017\"},{\"ItemId\":7362,\"OrderDate\":\"12/24/2017\"}]}} \n```", "```py\n[root@sandbox ~]# hadoop fs -mkdir  /user/hive-complex-data/ \n[root@sandbox ~]# hadoop fs -put Sample-Json-complex.json /user/hive-complex-data/ \n```", "```py\nhive>  \nCREATE EXTERNAL TABLE json_nested_table( \nDocId string, \nuser1 struct<Id: int, username: string, shippingaddress:struct<address1:string,address2:string,city:string,state:string>, orders:array<struct<ItemId:int,orderdate:string>>> \n) \nROW FORMAT SERDE \n'org.apache.hive.hcatalog.data.JsonSerDe' \nLOCATION \n'/user/hive-complex-data/'; \nOK \nTime taken: 0.535 seconds \nhive>  \n```", "```py\nhive> select DocId,user1.username,user1.orders FROM json_nested_table; \nOK \nDoc1     u2452   [{\"itemid\":5343,\"orderdate\":\"12/23/2017\"},{\"itemid\":7362,\"orderdate\":\"12/24/2017\"}] \nTime taken: 0.598 seconds, Fetched: 1 row(s) \nhive>  \n```", "```py\nmysql -u root -p \n\nGRANT ALL PRIVILEGES ON *.* TO 'sales'@'localhost' IDENTIFIED BY 'xxx';  \n\nmysql -u sales  -p \n\nmysql> create database orders; \n\nmysql> use orders; \n\nCREATE TABLE customer( \ncust_id INT , \ncust_name  VARCHAR(20) NOT NULL, \ncust_city VARCHAR(20) NOT NULL, \nPRIMARY KEY ( cust_id ) \n); \n```", "```py\nINSERT into customer (cust_id,cust_name,cust_city) values (1,'Sam James','Austin'); \nINSERT into customer (cust_id,cust_name,cust_city) values (2,'Peter Carter','Denver'); \nINSERT into customer (cust_id,cust_name,cust_city) values (3,'Doug Smith','Sunnyvale'); \nINSERT into customer (cust_id,cust_name,cust_city) values (4,'Harry Warner','Palo Alto'); \n\n```", "```py\n\nhadoop fs -rmr /user/sqoop_data/avro \nsqoop import -Dmapreduce.job.user.classpath.first=true  \n--connect jdbc:mysql://localhost:3306/orders   \n--driver com.mysql.jdbc.Driver  \n--username sales --password xxx  \n--target-dir /user/sqoop_data/avro  \n--table customer  \n--as-avrodatafile  \n\n```", "```py\n[root@sandbox ~]# hadoop fs -ls /user/sqoop_data/avro \nFound 7 items \n-rw-r--r--   1 root hdfs          0 2017-09-09 08:57 /user/sqoop_data/avro/_SUCCESS \n-rw-r--r--   1 root hdfs        472 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00000.avro \n-rw-r--r--   1 root hdfs        475 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00001.avro \n-rw-r--r--   1 root hdfs        476 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00002.avro \n-rw-r--r--   1 root hdfs        478 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00003.avro \n```", "```py\nuse orders; \ndrop table customer ; \nCREATE EXTERNAL TABLE customer  \n( \ncust_id INT , \ncust_name  STRING , \ncust_city STRING   \n) \nSTORED AS AVRO \nlocation '/user/sqoop_data/avro/'; \n```", "```py\nhive> select * from customer; \nOK \n1  Sam James   Austin \n2  Peter Carter      Denver \n3  Doug Smith  Sunnyvale \n4  Harry Warner      Palo Alto \nTime taken: 0.143 seconds, Fetched: 4 row(s) \nhive>  \n\n```", "```py\nmysql -u sales  -p \n\nmysql>  \nALTER TABLE customer \nADD COLUMN cust_state VARCHAR(15) NOT NULL; \n\nmysql> desc customer; \n+------------+-------------+------+-----+---------+-------+ \n| Field      | Type        | Null | Key | Default | Extra | \n+------------+-------------+------+-----+---------+-------+ \n| cust_id    | int(11)     | NO   | PRI | 0       |       | \n| cust_name  | varchar(20) | NO   |     | NULL    |       | \n| cust_city  | varchar(20) | NO   |     | NULL    |       | \n| CUST_STATE | varchar(15) | YES  |     | NULL    |       | \n+------------+-------------+------+-----+---------+-------+ \n4 rows in set (0.01 sec) \n\nmysql>  \n```", "```py\nINSERT into customer (cust_id,cust_name,cust_city,cust_state) values (5,'Mark Slogan','Huston','TX'); \nINSERT into customer (cust_id,cust_name,cust_city,cust_state) values (6,'Jane Miller','Foster City','CA'); \n```", "```py\nsqoop import -Dmapreduce.job.user.classpath.first=true  \n--connect jdbc:mysql://localhost:3306/orders   \n--driver com.mysql.jdbc.Driver  \n--username sales --password xxx  \n--table customer  \n--append  \n--target-dir /user/sqoop_data/avro  \n--as-avrodatafile  \n--where \"cust_id > 4\"  \n```", "```py\n[root@sandbox ~]# hadoop fs -ls /user/sqoop_data/avro \nFound 7 items \n-rw-r--r--   1 root hdfs          0 2017-09-09 08:57 /user/sqoop_data/avro/_SUCCESS \n-rw-r--r--   1 root hdfs        472 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00000.avro \n-rw-r--r--   1 root hdfs        475 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00001.avro \n-rw-r--r--   1 root hdfs        476 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00002.avro \n-rw-r--r--   1 root hdfs        478 2017-09-09 08:57 /user/sqoop_data/avro/part-m-00003.avro \n-rw-r--r--   1 root hdfs        581 2017-09-09 09:00 /user/sqoop_data/avro/part-m-00004.avro \n-rw-r--r--   1 root hdfs        586 2017-09-09 09:00 /user/sqoop_data/avro/part-m-00005.avro \n```", "```py\nhive> select * from customer; \nOK \n1  Sam James   Austin \n2  Peter Carter      Denver \n3  Doug Smith  Sunnyvale \n4  Harry Warner      Palo Alto \nTime taken: 0.143 seconds, Fetched: 4 row(s \n```", "```py\n\nhive> use orders; \nhive> ALTER TABLE customer ADD COLUMNS (cust_state STRING); \nhive> desc customer; \nOK \ncust_id              int                                          \ncust_name            string                                       \ncust_city            string                                       \ncust_state           string                                       \nTime taken: 0.488 seconds, Fetched: 4 row(s \n```", "```py\nhive> select * from customer; \nOK \n1  Sam James   Austin      NULL \n2  Peter Carter      Denver      NULL \n3  Doug Smith  Sunnyvale   NULL \n4  Harry Warner      Palo Alto   NULL \n5  Mark Slogan Huston      TX \n6  Jane Miller Foster City CA \nTime taken: 0.144 seconds, Fetched: 6 row(s) \nhive>  \n```", "```py\nmysql -u sales -p\nmysql> use orders;\nmysql> select * from customer;\n+---------+--------------+--------------+------------+\n| cust_id | cust_name | cust_city | InsUpd_on |\n+---------+--------------+--------------+------------+\n| 1 | Sam James | Austin | 1505095030 |\n| 2 | Peter Carter | Denver | 1505095030 |\n| 3 | Doug Smith | Sunnyvale | 1505095030 |\n| 4 | Harry Warner | Palo Alto | 1505095032 |\n| 5 | Jen Turner | Cupertino | 1505095036 |\n| 6 | Emily Stone | Walnut Creek | 1505095038 |\n| 7 | Bill Carter | Greenville | 1505095040 |\n| 8 | Jeff Holder | Dallas | 1505095042 |\n| 10 | Mark Fisher | Mil Valley | 1505095044 |\n| 11 | Mark Fisher | Mil Valley | 1505095044 |\n+---------+--------------+--------------+------------+\n10 rows in set (0.00 sec)\n```", "```py\nhbase shell\ncreate 'customer','cf1'\n```", "```py\nhbase\nsqoop import --connect jdbc:mysql://localhost:3306/orders --driver com.mysql.jdbc.Driver --username sales --password sales1 --table customer --hbase-table customer --column-family cf1 --hbase-row-key cust_id\n```", "```py\nhbase shell\nscan 'customer'\n```", "```py\nmysql -u sales -p\nmysql> use orders;\n```", "```py\nmysql> Update customer set cust_city = 'Dublin', InsUpd_on = '1505095065' where cust_id = 4;\nQuery OK, 1 row affected (0.00 sec)\nRows matched: 1 Changed: 1 Warnings: 0\n\nmysql> INSERT into customer (cust_id,cust_name,cust_city,InsUpd_on) values (12,'Jane Turner','Glen Park',1505095075);\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> commit;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> select * from customer;\n+---------+--------------+--------------+------------+\n| cust_id | cust_name | cust_city | InsUpd_on |\n+---------+--------------+--------------+------------+\n| 1 | Sam James | Austin | 1505095030 |\n| 2 | Peter Carter | Denver | 1505095030 |\n| 3 | Doug Smith | Sunnyvale | 1505095030 |\n| 4 | Harry Warner | Dublin | 1505095065 |\n| 5 | Jen Turner | Cupertino | 1505095036 |\n| 6 | Emily Stone | Walnut Creek | 1505095038 |\n| 7 | Bill Carter | Greenville | 1505095040 |\n| 8 | Jeff Holder | Dallas | 1505095042 |\n| 10 | Mark Fisher | Mil Valley | 1505095044 |\n| 11 | Mark Fisher | Mil Valley | 1505095044 |\n| 12 | Jane Turner | Glen Park | 1505095075 | +---------+--------------+--------------+------------+\n11 rows in set (0.00 sec)\nmysql>\n```", "```py\nsqoop import --connect jdbc:mysql://localhost:3306/orders --driver com.mysql.jdbc.Driver --username sales --password sales1 --table customer --hbase-table customer --column-family cf1 --hbase-row-key cust_id --append -- -m 1 --where \"InsUpd_on > 1505095060\"\n\nhbase shell\nhbase(main):010:0> get 'customer', '4'\nCOLUMN          CELL\ncf1:InsUpd_on   timestamp=1511509774123, value=1505095065\ncf1:cust_city   timestamp=1511509774123, value=Dublin cf1:cust_name   timestamp=1511509774123, value=Harry Warner\n3 row(s) in 0.0200 seconds\n\nhbase(main):011:0> get 'customer', '12'\nCOLUMN           CELL\ncf1:InsUpd_on    timestamp=1511509776158, value=1505095075\ncf1:cust_city    timestamp=1511509776158, value=Glen Park\ncf1:cust_name    timestamp=1511509776158, value=Jane Turner\n3 row(s) in 0.0050 seconds\n\nhbase(main):012:0>\n```", "```py\ncreate external table customer_hbase(cust_id string, cust_name string, cust_city string, InsUpd_on string)\nSTORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'with serdeproperties (\"hbase.columns.mapping\"=\":key,cf1:cust_name,cf1:cust_city,cf1:InsUpd_on\")tblproperties(\"hbase.table.name\"=\"customer\");\n\nhive> select * from customer_hbase;\nOK\n1 Sam James Austin 1505095030\n10 Mark Fisher Mil Valley 1505095044\n11 Mark Fisher Mil Valley 1505095044\n12 Jane Turner Glen Park 1505095075\n2 Peter Carter Denver 1505095030\n3 Doug Smith Sunnyvale 1505095030\n4 Harry Warner Dublin 1505095065\n5 Jen Turner Cupertino 1505095036\n6 Emily Stone Walnut Creek 1505095038\n7 Bill Carter Greenville 1505095040\n8 Jeff Holder Dallas 1505095042\nTime taken: 0.159 seconds, Fetched: 11 row(s)\nhive>\n```"]