["```py\nrequire([\n\"dojox/charting/Chart\",  // object\n\"dojox/charting/plot2d/Pie\",   // style\n\"dojox/charting/themes/MiamiNice\",   // theme\n\"dojox/charting/action2d/Highlight\",  // action\n\"dojox/charting/action2d/Tooltip\",  // action\n\"dojo/ready\"],\n  function(Chart, Pie, MiamiNice, Highlight, Tooltip, ready){\n  ready(function(){\n    var myChart = new Chart(\"myChart \");\n    myChart.setTheme(MiamiNice)\n     .addPlot(\"default\", {\n        type: Pie,\n        font: \"normal normal 11pt Tahoma\",\n        fontColor: \"black\",\n        labelOffset: -30,\n        radius: 80\n    }).addSeries(\"Series A\", [\n      {y: 3, text: \"Red\", stroke: \"black\", tooltip: \"Red Alert\"},\n      {y: 5, text: \"Green\", stroke: \"black\", tooltip: \"Green Day\"},\n      {y: 8, text: \"Blue\",  stroke: \"black\", tooltip: \"I'm Blue!\"},\n      {y: 13, text: \"Other\", stroke: \"black\", tooltip: \"A bit different\"}\n    ]);\n    var anim_a = new Highlight(myChart, \"default\");\n    var anim_b = new Tooltip(myChart, \"default\");\n    myChart.render();\n  });\n});\n```", "```py\nrequire([\"dojox/charting/Chart\", \"dojox/charting/axis2d/Default\", \"dojox/charting/plot2d/Lines\", \"dojo/ready\"],\n  function(Chart, Default, Lines, ready){\n  ready(function(){\n    var chart1 = new Chart(\"fibonacci\");\n    chart1.addPlot(\"default\", {type: Lines});\n    chart1.addAxis(\"x\");\n    chart1.addAxis(\"y\", {vertical: true});\n    chart1.addSeries(\"Series 1\", [1, 1, 2, 3, 5, 8, 13, 21]);\n    chart1.render();\n  });\n});\n```", "```py\nrequire([\"dojox/charting/Chart3D\", \"dojox/charting/plot3d/Bars\", \"dojox/gfx3d/matrix\", \"dojo/ready\"\n], function(Chart3D, Bars, m, ready){\n  ready(function(){\n    var chart3d = new Chart3D(\"chart3d\", {\n       lights: [{direction: {x: 6, y: 6, z: -6}, color: \"white\"}],\n       ambient:  {color:\"white\", intensity: 3},\n       specular: \"white\"\n     },\n    [m.cameraRotateXg(10), m.cameraRotateYg(-10), m.scale(0.8), m.cameraTranslate(-50, -50, 0)]),\n      bars3d_a = new Bars(500, 500, {gap: 8, material: \"red\"}), \n      bars3d_b = new Bars(500, 500, {gap: 8, material: \"#0F0\"}), \n      bars3d_c = new Bars(500, 500, {gap: 8, material: \"blue\"});\n    bars3d_a.setData([3, 5, 2, 4, 6, 3, 2, 1]);\n    chart3d.addPlot(bars3d_a);\n\n    bars3d_b.setData([5, 6, 4, 2, 3, 1, 5, 4]);\n    chart3d.addPlot(bars3d_b);\n\n    bars3d_c.setData([4, 2, 5, 1, 2, 4, 6, 3]);\n    chart3d.addPlot(bars3d_c);\n\n    chart3d.generate().render();\n  });\n});\n```", "```py\nrequire([\"dojox/charting/Chart\", \"dojox/charting/axis2d/Default\", \"dojox/charting/plot2d/Lines\", \"dojox/charting/themes/MiamiNice\", \"dojo/ready\"],\n  function(Chart, Default, Lines, MiamiNice, ready){\n  ready(function(){\n    var chart1 = new Chart(\"simplechart\");\n    chart1.addPlot(\"default\", {type: Lines});\n    chart1.addAxis(\"x\");\n    chart1.addAxis(\"y\", {vertical: true});\n chart1.setTheme(MiamiNice);\n    chart1.addSeries(\"Fibonacci\", [1, 1, 2, 3, 5, 8, 13, 21]);\n    chart1.render();\n  });\n});\n```", "```py\nvar BaseballBlues = new SimpleTheme({\n  colors: [ \"#0040C0\", \"#4080e0\", \"#c0e0f0\", \"#4060a0\", \"#c0c0e0\"]\n});\nmyChart.setTheme(BaseballBlues);\n```", "```py\nrequire([\"dojox/charting/Chart\", \n  …,\n  \"dojox/charting/action2d/Tooltip\"],\n  function(Chart, …, Tooltip){\n    var chart = new Chart(\"test\");\n    …\n    new Tooltip(chart, \"default\", {\n text: function(o){\n return \"Population: \"+o.y;\n }\n });\n    chart.render();\n});\n```", "```py\n    define([…\n      \"dojo/on\",\n      \"dojox/charting/Chart\", \n      \"dojox/charting/plot2d/Pie\",\n      \"dojox/charting/plot2d/Bars\",\n      \"dojox/charting/action2d/Highlight\",\n      \"dojox/charting/action2d/Tooltip\",\n      \"dojox/charting/themes/PrimaryColors\",\n      \"dojox/charting/SimpleTheme\",.\n    ], function (…, dojoOn, Chart, Pie, Bars, Highlight, Tooltip, PrimaryColors, SimpleTheme, …) { … });\n    ```", "```py\n_onMapLoad: function () {\n  …\n  dojoOn(this.map.infoWindow, \"selection-change\", lang.hitch(this, \n    this._onInfoWindowSelect));\n}, \n  …\n_onInfoWindowSelect: function () {\n  //content goes here\n}\n```", "```py\n_onInfoWindowSelect: function () {\n  var graphic = this.map.infoWindow.getSelectedFeature(),\n    ethnicData, genderData, ageData;\n  if (graphic && graphic.attributes) {\n // load and render the ethnic data\n ethnicData = this.ethnicData(graphic.attributes);\n this.ethnicGraph(ethnicData);\n // load and render the gender data\n genderData = this.genderData(graphic.attributes);\n this.genderGraph(genderData);\n // load and render the age data\n ageData = this.ageData(graphic.attributes);\n this.ageGraph(ageData);\n }\n},\n…\nethnicData: function (attributes) { },\nethnicGraph: function (data) { },\ngenderData: function (attributes) { },\ngenderGraph: function (data) { },\nageData: function (attributes) { },\nageGraph: function (data) { }\n```", "```py\n…\n<b>Ethnic Groups</b>\n<div id=\"ethnicgraph\"></div> \n…\n```", "```py\n…\nformatAttributesForGraph: function (attributes, fieldLabels) {\n  var data = [], field;\n  for (field in fieldLabels) {\n    data.push({ \n tooltip: fieldLabels[field], \n y: +attributes[field] \n });\n  }\n  return data;\n},\n…\n```", "```py\n…\nethnicData: function (attributes) {\n  var data = [],\n fields = [\"WHITE\", \"BLACK\", \"AMERI_ES\", \"ASIAN\", \"HAWN_PI\", \"HISPANIC\", \"OTHER\", \"MULT_RACE\"],\n labels = [\"Caucasian\", \"African-American\", \"Native American /<br> Alaskan Native\", \"Asian\", \"Hawaiian /<br> Pacific Islander\", \"Hispanic\", \"Other\", \"Multiracial\"];\n},\n…\n```", "```py\n…\nethnicData: function (attributes) {\n  var fieldLabels = {\n    \"WHITE\": \"Caucasian\", \n    \"BLACK\": \"African-American\", \n    \"AMERI_ES\":\"Native American /<br> Alaskan Native\", \n    \"ASIAN\": \"Asian\", \n    \"HAWN_PI\":\"Hawaiian /<br> Pacific Islander\", \n    \"HISPANIC\": \"Hispanic\", \"OTHER\": \"Other\", \n    \"MULT_RACE\": \"Multi-racial\"\n  }\n return this.formatAttributesForGraph(attributes, fieldLabels);\n},\n…\n```", "```py\ngenderData: function (attributes) {\n  var fieldLabels = {\n    \"MALES\": \"Males\", \"FEMALES\", \"Females\"\n  }\n return this.formatAttributesForGraph(attributes, fieldLabels);\n},\n…\n```", "```py\nageData: function (attributes) {\n  var fieldLabels = {\n    \"AGE_UNDER5\": \"&lt; 5\", \"AGE_5_17\": \"5-17\", \"AGE_18_21\": \"18-21\", \n \"AGE_22_29\": \"22-29\", \"AGE_30_39\": \"30-39\", \"AGE_40_49\": \"40-49\", \n \"AGE_50_64\": \"50-64\", \"AGE_65_UP\": \"65+\"\n };\n return this.formatAttributesForGraph(attributes, fieldLabels);\n},\n```", "```py\nethnicGraph: function (data) {\n  var ethnicChart = new Chart(\"ethnicgraph\");\n  ethnicChart.setTheme(PrimaryColors)\n    .addPlot(\"default\", {\n      type: Pie,\n      font: \"normal normal 11pt Tahoma\",\n      fontColor: \"black\",\n      radius: 90\n  }).addSeries(\"Series A\", data);\n  var anim_a = new Tooltip(ethnicChart, \"default\");\n  var anim_b = new Highlight(ethnicChart, \"default\");\n  ethnicChart.render();\n},\n```", "```py\ngenderGraph: function (data) {\n var genderTheme = new SimpleTheme({\n colors: [\"#8888ff\", \"#ff8888\"]\n }),\n  genderChart = new Chart(\"gendergraph\");\n\n  genderChart.setTheme(genderTheme)\n    .addPlot(\"default\", {\n      type: Pie,\n      font: \"normal normal 11pt Tahoma\",\n      fontColor: \"black\",\n      radius: 90\n  }).addSeries(\"Series A\", data);\n  var anim_a = new Tooltip(genderChart, \"default\");\n  var anim_b = new Highlight(genderChart, \"default\");\n  genderChart.render();\n},\n```", "```py\nageGraph: function (data) {\n  var ageChart = new Chart(\"agegraph\");\n  ageChart.setTheme(PrimaryColors)\n   .addPlot(\"default\", {\n     type: Bars,\n      font: \"normal normal 11pt Tahoma\",\n      fontColor: \"black\",\n      gap: 2,\n      maxBarSize: 220\n  }).addSeries(\"Series A\", data);\n  var anim_a = new Tooltip(ageChart, \"default\");\n  var anim_b = new Highlight(ageChart, \"default\");\n  ageChart.render();\n}\n```", "```py\nd3.select(\".addflair\").append(\"span\").text(\"I've got flair!\");\n```", "```py\n…\n  <link rel=\"stylesheet\" \n  href=\"https://js.arcgis.com/3.13/esri/css/esri.css\" />\n  <script src=\"img/\"></script>\n  <script src=https://d3js.org/d3.v3.js\"></script>\n</head>\n…\n```", "```py\ndojoConfig = {\n  async: true,\n  packages: [\n    {\n      name: \"d3\",\n      location: \"http://cdnjs.cloudflare.com/ajax/libs/d3/3.4.12/\"\n    }\n  ]\n};\n```", "```py\nrequire([…, \"d3/d3\", …], function (…, d3, …) { … });\n```", "```py\ndojoConfig = {\n  async: true,\n  packages: [\n    {\n      name: 'y2k',\n      location: location.pathname.replace(/\\/[^\\/]*$/, '') +'/js'\n    },\n    {\n name: \"d3\",\n location: \"http://cdnjs.cloudflare.com/ajax/libs/d3/3.4.12/\"\n }\n  ]\n};\n```", "```py\ndefine([\n  …,\n  \"esri/config\", \"d3/d3\"\n], function (\n  …,\n  esriConfig, d3\n) {\n…\n});\n```", "```py\n…\nformatAttributesForGraph: function (attributes, fieldLabels) {\n  var data = [], field;\n  for (field in fieldLabels) {\n    data.push({ \n name: fieldLabels[field], \n population: +attributes[field] \n });\n  }\n  return data;\n},\n…\n```", "```py\n    ethnicGraph: function (data) {\n          var width = 240,\n            height = 210,\n            radius = Math.min(width, height) / 2;\n\n          var color = d3.scale.ordinal()\n            .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\", \"#c7d223\"]);\n          var arc = d3.svg.arc()\n            .outerRadius(radius - 10)\n            .innerRadius(0);\n\n          var pie = d3.layout.pie()\n            .sort(null)\n            .value(function(d) { return d.population; });\n\n          var svg = d3.select(\".censusethnic\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width/2 + \",\" + height/2 + \")\");\n\n          if (!data || !data.length) {\n            return;\n          }\n\n          var g = svg.selectAll(\".arc\")\n            .data(pie(data))\n            .enter().append(\"g\")\n            .attr(\"class\", \"arc\");\n\n          g.append(\"path\")\n            .attr(\"d\", arc)\n            .style(\"fill\", function(d) { return color(d.data.name); });\n\n          g.append(\"text\")\n            .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n            .attr(\"dy\", \".35em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(function(d) { return d.data.name; });\n        },\n    ```", "```py\n    genderGraph: function (data) {\n    …\n      var color = d3.scale.ordinal().range([\"#8888ff\", \"#ff8888\"]);\n    …\n    }, \n    ```", "```py\n    g.append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.data.name; })\n      .append(\"tspan\")\n      .text(function(d) { return d.data.population;})\n      .attr(\"x\", \"0\").attr(\"dy\", '15');\n    ```", "```py\nageGraph: function (data) {\n  // calculate max data value\n  var maxData = d3.max(arrayUtils.map(data, function (item) {return item.population;}));\n  // create a scale to convert data value to bar width\n  var x = d3.scale.linear()\n            .domain([0, maxData])\n            .range([0, 240]);\n  // draw bar graph and label it.\n  d3.select(\".censusages\")\n    .selectAll(\"div\")\n    .data(data)\n      .enter().append(\"div\")\n      .style(\"width\", function(d) { return x(d.population) + \"px\"; })\n      .text(function(d) { return d.age + \": \" + d.population; });\n}\n```", "```py\n.censusages > div {\n  background: #12af12;\n  color: white;\n  font-size: 0.9em;\n  line-height: 1.5;\n}\n.censusages > div:nth-child(even) {\n  background: #64ff64;\n  color: #222;\n  margin: 1px 0;\n}\n```"]