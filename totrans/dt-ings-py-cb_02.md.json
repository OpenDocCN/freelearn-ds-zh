["```py\n    CREATE SCHEMA `your_schema_name` DEFAULT CHARACTER SET utf8 ;\n    ```", "```py\n    CREATE TABLE `cookbook-data`.`people_city` (\n      `id` INT NOT NULL,\n      `name` VARCHAR(45) NULL,\n      `country` VARCHAR(45) NULL,\n      `occupation` VARCHAR(45) NULL,\n      PRIMARY KEY (`id`));\n    ```", "```py\n    CREATE user 'admin'@'localhost' identified by 'password';\n    > Query OK, 0 rows affected\n    ```", "```py\n    $ mysql -u admin -p password -h localhost\n    Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n    mysql>\n    ```", "```py\n    create ROLE administration;\n    ```", "```py\ngrant alter,create,delete,drop,index,insert,select,update,trigger,alter routine,create routine, execute, create temporary tables on `cookbook_data`.* to 'administration';\n```", "```py\ngrant 'administration' to 'admin';\n```", "```py\nset default role 'administration' to 'admin';\n```", "```py\n    INSERT INTO `cookbook_data`.`people_city` (id, `name`, country, occupation)\n    VALUES (1, 'Lin', 'PT', 'developer');\n    > 1 row(s) affected\n    ```", "```py\nError Code: 1142\\. INSERT command denied to user 'reader'@'localhost' for table 'people_city'\n```", "```py\nError Code: 1142\\. INSERT command denied to user 'reader'@'localhost' for table 'people_city'\n```", "```py\n    $ pip install pysftp\n    ```", "```py\n    import pysftp\n    host = \" test.rebex.net\"\n    username = \"demo\"\n    password = \"password\"\n    with pysftp.Connection(host=host, username=username, password=password) as sftp:\n        print(\"Connection successfully established ... \")\n    ```", "```py\n$ python accessing_sftp_files.py\n```", "```py\nConnection successfully established ...\n```", "```py\n    import pysftp\n    host = \"test.rebex.net\"\n    username = \"demo\"\n    password = \"password\"\n    with pysftp.Connection(host=host, username=username, password=password) as sftp:\n        print(\"Connection successfully established ... \")\n        # Switch to a remote directory\n        sftp.cwd('pub/example/')\n        # Obtain structure of the remote directory '/pub/example'\n        directory_structure = sftp.listdir_attr()\n        # Print data\n        for attr in directory_structure:\n            print(attr.filename, attr)\n    ```", "```py\nimport pysftp\nhost = \"test.rebex.net\"\nusername = \"demo\"\npassword = \"password\"\nwith pysftp.Connection(host=host, username=username, password=password) as sftp:\n    print(\"Connection successfully established ... \")\n    # Switch to a remote directory\n    sftp.cwd('pub/example/')\n    print(\"Changing to pub/example directory... \")\n    sftp.get('readme.txt', 'readme.txt')\n    print(\"File downloaded ... \")\n    sftp.close()\n```", "```py\nConnection successfully established ...\nChanging to pub/example directory...\nFile downloaded ...\n```", "```py\n    $ pip3 install requests\n    ```", "```py\n    import requests\n    import json\n    params = { 'key': 'YOUR-API-KEY',\n              'country': 'BR',\n              'year': 2022\n    }\n    url = \"https://holidayapi.com/v1/holidays?\"\n    req = requests.get(url, params=params)\n    print(req.json())\n    ```", "```py\n{'status': 200, 'warning': 'These results do not include state and province holidays. For more information, please visit https://holidayapi.com/docs', 'requests': {'used': 7, 'available': 9993, 'resets': '2022-11-01 00:00:00'}, 'holidays': [{'name': \"New Year's Day\", 'date': '2021-01-01', 'observed': '2021-01-01', 'public': True, 'country': 'BR', 'uuid': 'b58254f9-b38b-42c1-8b30-95a095798b0c',{...}\n```", "```py\n    import requests\n    import json\n    params = { 'key': 'YOUR-API-KEY',\n              'country': 'BR',\n              'year': 2022\n    }\n    url = \"https://holidayapi.com/v1/holidays?\"\n    req = requests.get(url, params=params)\n    with open(\"holiday_brazil.json\", \"w\") as f:\n        json.dump(req.json(), f)\n    ```", "```py\n    $ sudo apt-get install gnupg\n    ```", "```py\n    $ pip3 install python-gnupg\n    Collecting python-gnupg\n      Downloading python_gnupg-0.5.0-py2.py3-none-any.whl (18 kB)\n    Installing collected packages: python-gnupg\n    Successfully installed python-gnupg-0.5.0\n    ```", "```py\n    import gnupg\n    # Create gnupg directory\n    gpg = gnupg.GPG(gnupghome='gpghome')\n    # Open and import the key\n    key_data = open('mykeyfile.asc').read()\n    import_result = gpg.import_keys(key_data)\n    # Show the fingerprint of our key\n    print(import_result.results)\n    ```", "```py\n    with open('spotify_data.csv.gpg', 'rb') as f:\n        status = gpg.decrypt_file(f, passphrase='mypassphrase', output='spotify_data.csv')\n    print(status.ok)\n    print(status.status)\n    print('error: ', status.stderr)\n    ```", "```py\nfrom cryptography.fernet import Fernet\n# Retrieving key\nfernet_key = Fernet(key)\n# Getting and opening the encrypted file\nwith open('spotify_data.csv', 'rb') as enc_file:\n    encrypted = enc_file.read()\n# Decrypting the file\ndecrypted = fernet_key.decrypt(encrypted)\n# Creating a decrypted file\nwith open('spotify_data.csv', 'wb') as dec_file:\n    dec_file.write(decrypted)\n```", "```py\n    {\n       \"Version\":\"2012-10-17\",\n       \"Statement\":[\n          {\n             \"Effect\":\"Allow\",\n             \"Action\": \"s3:ListAllMyBuckets\",\n             \"Resource\":\"*\"\n          },\n          {\n             \"Effect\":\"Allow\",\n             \"Action\":[\"s3:ListBucket\",\"s3:GetBucketLocation\"],\n             \"Resource\":\"arn:aws:s3:::cookbook-s3-accesspolicies\"\n          },\n          {\n             \"Effect\":\"Allow\",\n             \"Action\":[\n                \"s3:PutObject\",\n                \"s3:PutObjectAcl\",\n                \"s3:GetObject\",\n                \"s3:GetObjectAcl\",\n                \"s3:DeleteObject\"\n             ],\n             \"Resource\":\"arn:aws:s3:::cookbook-s3-accesspolicies /*\"\n          }\n       ]\n    }\n    ```", "```py\n    \"Statement\":[\n          {\n             \"Effect\":\"Allow\",\n             \"Action\": \"s3:ListAllMyBuckets\",\n             \"Resource\":\"*\"\n          },\n    ```", "```py\n    {\n             \"Effect\":\"Allow\",\n             \"Action\":[\"s3:ListBucket\",\"s3:GetBucketLocation\"],\n             \"Resource\":\"arn:aws:s3:::cookbook-s3-accesspolicies\"\n          },\n    ```", "```py\n    {\n             \"Effect\":\"Allow\",\n             \"Action\":[\n                \"s3:PutObject\",\n                \"s3:PutObjectAcl\",\n                \"s3:GetObject\",\n                \"s3:GetObjectAcl\",\n             ],\n             \"Resource\":\"arn:aws:s3:::cookbook-s3-accesspolicies /*\"\n          }\n    ```"]