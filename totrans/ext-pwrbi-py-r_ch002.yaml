- en: 1 Where and How to Use R and Python Scripts in Power BI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1 在Power BI中使用R和Python脚本的哪里和如何使用
- en: Power BI is Microsoft's flagship **self-service business intelligence** product.
    It consists of a set of on-premises applications and cloud-based services that
    help organizations integrate, transform, and analyze data from a wide variety
    of source systems through a user-friendly interface.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI是微软的旗舰**自助式商业智能**产品。它由一套本地应用程序和基于云的服务组成，通过用户友好的界面帮助组织从各种源系统中整合、转换和分析数据。
- en: The platform is not limited to data visualization. Power BI is much more than
    this, when you consider that its analytics engine (**Vertipaq**) is the same as
    **SQL Server Analysis Services** (**SSAS**) and **Azure Analysis Services**. It
    also uses **Power Query** as its data extraction and transformation engine, which
    we find in both Analysis Services and **Excel**. The engine comes with a very
    powerful and versatile formula language (**M**) and GUI, thanks to which you can
    "grind" and shape any type of data into any form.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 平台不仅限于数据可视化。当考虑到其分析引擎（**Vertipaq**）与**SQL Server Analysis Services**（**SSAS**）和**Azure
    Analysis Services**相同，并且它还使用**Power Query**作为其数据提取和转换引擎时，Power BI远不止于此。我们可以在Analysis
    Services和**Excel**中找到这个引擎，它配备了一个非常强大且多功能的公式语言（**M**）和GUI，这使得您可以将任何类型的数据“磨碎”并塑造成任何形式。
- en: Moreover, Power BI supports **DAX** as a data analytic formula language, which
    can be used for advanced calculations and queries on data that has already been
    loaded into tabular data models.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Power BI支持**DAX**作为数据分析公式语言，它可以用于对已加载到表格数据模型中的数据进行高级计算和查询。
- en: Such a versatile and powerful tool is a godsend for anyone who needs to do data
    ingestion and transformation in order to build dashboards and reports to summarize
    a company's business.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一个多功能且强大的工具对于需要进行数据摄取和转换以构建仪表板和报告来总结公司业务的人来说是上帝赐予的礼物。
- en: Recently, the availability of huge amounts of data, along with the ability to
    scale the computational power of machines, has made the area of **advanced analytics**
    more appealing. So, new mathematical and statistical tools have become necessary
    in order to provide rich insights. Hence the integration of analytical languages
    such as **Python** and **R** within Power BI.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，大量数据的可用性以及机器计算能力的可扩展性使得**高级分析**领域更具吸引力。因此，为了提供丰富的见解，新的数学和统计工具变得必要。因此，在Power
    BI中集成了分析语言，如**Python**和**R**。
- en: R or Python scripts can only be used within Power BI with specific features.
    Knowing which Power BI tools can be used to inject R or Python scripts into Power
    BI is key to understanding whether the problem you want to address is achievable
    with these analytical languages.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在Power BI中，R或Python脚本只能使用特定的功能。了解哪些Power BI工具可以将R或Python脚本注入Power BI，对于理解您想要解决的问题是否可以通过这些分析语言实现至关重要。
- en: 'This chapter will cover the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Injecting R or Python scripts into Power BI
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将R或Python脚本注入Power BI
- en: Using R and Python to interact with your data
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用R和Python与您的数据交互
- en: R and Python limitations on Power BI products
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R和Python在Power BI产品中的限制
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires you to have **Power BI Desktop** already installed on
    your machine (you can download it from here: [https://aka.ms/pbiSingleInstaller](https://aka.ms/pbiSingleInstaller)).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您已在您的计算机上安装了**Power BI Desktop**（您可以从这里下载：[https://aka.ms/pbiSingleInstaller](https://aka.ms/pbiSingleInstaller)）。
- en: Injecting R or Python scripts into Power BI
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将R或Python脚本注入Power BI
- en: In this first section, the Power BI Desktop tools that allow you to use Python
    or R scripts will be presented and described in detail. Specifically, you will
    see how to add your own code during the **data loading**, **data transforming**,
    and **data viewing** phases.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的第一部分，将详细介绍允许您使用Python或R脚本的Power BI Desktop工具。具体来说，您将了解如何在**数据加载**、**数据转换**和**数据查看**阶段添加自己的代码。
- en: Data loading
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据加载
- en: 'One of the first steps required to work with data in Power BI Desktop is to
    **import** it from external sources:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在Power BI Desktop中处理数据的第一步之一是从外部源**导入**它：
- en: 'There are many connectors that allow you to do this, depending on the respective
    data sources, but you can also do it via scripts in Python and R. In fact, if
    you click on the **Get data** icon in the ribbon, not only are the most commonly
    used connectors shown, but you can select other ones from a more complete list
    by clicking on **More...**:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据各自的数据源，有许多连接器允许你这样做，但你也可以通过 Python 和 R 的脚本来实现。实际上，如果你点击功能区中的**获取数据**图标，不仅会显示最常用的连接器，而且你可以通过点击**更多...**来选择一个更完整的列表中的其他连接器：
- en: '![Figure 1.1 – Browse more connectors to load your data](img/file0.png)'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.1 – 浏览更多连接器以加载数据](img/file0.png)'
- en: Figure 1.1 – Browse more connectors to load your data
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.1 – 浏览更多连接器以加载数据
- en: 'In the new **Get Data** window that pops up, simply start typing the string
    `script` into the search text box, and immediately the two options for importing
    data via Python or R appear:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的新**获取数据**窗口中，只需在搜索文本框中输入字符串`script`，立即就会显示通过 Python 或 R 导入数据的两个选项：
- en: '![Figure 1.2 – Showing R script and Python script into the Get Data window](img/file1.png)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.2 – 显示 R 脚本和 Python 脚本到“获取数据”窗口](img/file1.png)'
- en: Figure 1.2 – Showing R script and Python script into the Get Data window
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.2 – 显示 R 脚本和 Python 脚本到“获取数据”窗口
- en: Reading the contents of the tooltip, obtained by hovering the mouse over the
    **Python script** option, two things should immediately jump out at you:a)A local
    installation of Python is required.B)What can be imported through Python is a
    data frame.The same two observations also apply when selecting **R script**. The
    only difference is that it is possible to import a **pandas DataFrame** when using
    Python (a DataFrame is a data structure provided by the pandas package), whereas
    R employs the two-dimensional array-like data structure called **R data frame**,
    which is provided by default by the language.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阅读通过将鼠标悬停在**Python 脚本**选项上获得的工具提示内容，两个应该立即跳入你的眼帘：a)需要本地安装 Python。B)可以通过 Python
    导入的是数据框。当选择**R 脚本**时，同样的两个观察结果也适用。唯一的区别是，当使用 Python 时，可以导入**pandas DataFrame**（DataFrame
    是 pandas 包提供的数据结构），而 R 使用的是默认提供的类似二维数组的**R 数据框**数据结构。
- en: 'After clicking on the **Python script** option, a new window will be shown
    containing a text box for writing the Python code:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Python 脚本**选项后，将显示一个包含用于编写 Python 代码的文本框的新窗口：
- en: '![Figure 1.3 – Window showing the Python script editor](img/file2.png)'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.3 – 显示 Python 脚本编辑器的窗口](img/file2.png)'
- en: Figure 1.3 – Window showing the Python script editor
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.3 – 显示 Python 脚本编辑器的窗口
- en: As you can see, it's definitely a very skimpy editor, but in *Chapter 3,* *Configuring
    Python with Power BI*, you'll see how you can use your favorite IDE to develop
    your own scripts.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，这确实是一个非常简陋的编辑器，但在*第三章，使用 Power BI 配置 Python*中，你将看到如何使用你喜欢的 IDE 来开发你自己的脚本。
- en: Taking a look at the warning message, Power BI reminds us that no Python engine
    has been detected, so it must be installed. Clicking on the **How to install Python**
    link will cause a Microsoft Docs web page to open, explaining the steps to install
    Python. Microsoft suggests installing the base Python distribution, but in order
    to follow some best practices on **environments**, we will install the `Miniconda`
    distribution. The details of how to do this and why will be covered in Chapter
    3.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看警告信息，Power BI 提醒我们尚未检测到 Python 引擎，因此必须安装。点击**如何安装 Python**链接将打开一个 Microsoft
    Docs 网页，解释安装 Python 的步骤。Microsoft 建议安装基础 Python 发行版，但为了遵循一些关于**环境**的最佳实践，我们将安装**Miniconda**发行版。如何进行此操作以及原因将在第三章中介绍。
- en: 'If you had clicked on **R script** instead, a window for entering code in R,
    similar to the one shown in *Figure 1.4*, would have appeared:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你点击了**R 脚本**，则会弹出一个用于在 R 中输入代码的窗口，类似于*图 1.4*中所示：
- en: '![Figure 1.4 – Window showing the R script editor](img/file3.png)'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.4 – 显示 R 脚本编辑器的窗口](img/file3.png)'
- en: Figure 1.4 – Window showing the R script editor
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.4 – 显示 R 脚本编辑器的窗口
- en: As with Python, in order to run code in R, you need to install the R engine
    on your machine. Clicking on the **How to install R** link will open a Docs page
    where Microsoft suggests installing either **Microsoft R Open** or the classic
    **CRAN R**. *Chapter 2, ​Configuring R With Power BI*, will show you which engine
    to choose and how to configure your favorite IDE to write code in R.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与 Python 一样，为了在 R 中运行代码，你需要在你的机器上安装 R 引擎。点击**如何安装 R**链接将打开一个 Microsoft Docs
    页面，其中 Microsoft 建议安装**Microsoft R Open**或经典的**CRAN R**。*第二章，使用 Power BI 配置 R*将向你展示如何选择引擎以及如何配置你喜欢的
    IDE 以编写 R 代码。
- en: In order to import data using Python or R, you need to write code in the editors
    shown in *Figure 1.3* and *Figure 1.4* that assigns a pandas DataFrame or an R
    data frame to a variable, respectively. You will see concrete examples throughout
    this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用Python或R导入数据，您需要在*图1.3*和*图1.4*中显示的编辑器中编写代码，将pandas DataFrame或R数据框分配给变量。您将在本书中看到具体的示例。
- en: Next, let’s look at transforming data.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何转换数据。
- en: Data transformation
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据转换
- en: 'It is possible to apply a transformation to data already imported or being
    imported, using scripts in R or Python. Should you want to test this on the fly,
    you can import the following CSV file directly from the web: [http://bit.ly/iriscsv](http://bit.ly/iriscsv).
    Follow these steps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用R或Python中的脚本对已导入或正在导入的数据应用转换。如果您想即时测试，可以直接从网络上导入以下CSV文件：[http://bit.ly/iriscsv](http://bit.ly/iriscsv)。请按照以下步骤操作：
- en: 'Simply click on **Get data** and then **Web** to import data directly from
    a web page:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 简单地点击**获取数据**，然后点击**网页**以直接从网页导入数据：
- en: '![Figure 1.5 – Select the Web connector to import data from a web page](img/file4.png)'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.5 – 选择Web连接器从网页导入数据](img/file4.png)'
- en: Figure 1.5 – Select the Web connector to import data from a web page
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.5 – 选择Web连接器从网页导入数据
- en: 'You can now enter the previously mentioned URL in the window that pops up:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以在弹出的窗口中输入之前提到的URL：
- en: '![Figure 1.6 – Import the Iris data from the web](img/file5.png)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.6 – 从网络上导入Iris数据](img/file5.png)'
- en: Figure 1.6 – Import the Iris data from the web
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.6 – 从网络上导入Iris数据
- en: Right after clicking **OK**, a window will pop up with a preview of the data
    to be imported.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**确定**后，将弹出一个窗口，显示即将导入的数据预览。
- en: 'In this case, instead of importing the data as-is, click on **Transform Data**
    in order to access the Power Query data transformation window:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这种情况下，不是直接导入数据，而是点击**转换数据**以访问Power Query数据转换窗口：
- en: '![Figure 1.7 – Imported data preview](img/file6.png)'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.7 – 导入数据预览](img/file6.png)'
- en: Figure 1.7 – Imported data preview
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.7 – 导入数据预览
- en: 'It is at this point that you can add a transformation step using a Python or
    R script by selecting the **Transform** tab in **Power Query Editor**:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此阶段，您可以通过在**Power Query编辑器**中选择**转换**选项卡来添加使用Python或R脚本的转换步骤：
- en: '![Figure 1.8 – R and Python script tools into Power Query Editor](img/file7.png)'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.8 – R和Python脚本工具集成到Power Query编辑器](img/file7.png)'
- en: Figure 1.8 – R and Python script tools into Power Query Editor
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.8 – 将R和Python脚本工具集成到Power Query编辑器中
- en: 'By clicking on **Run Python script**, you’ll cause a window similar to the
    one you’ve already seen in the data import phase to pop up:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**运行Python脚本**，将弹出一个与数据导入阶段中您已经看到的类似的窗口：
- en: '![Figure 1.9 – The Run Python script editor](img/file8.png)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.9 – 运行Python脚本编辑器](img/file8.png)'
- en: Figure 1.9 – The Run Python script editor
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.9 – 运行Python脚本编辑器
- en: If you carefully read the comment in the text box, you will see that the `dataset`
    variable is already initialized and contains the data present at that moment in
    Power Query Editor, including any transformations already applied. At this point,
    you can insert your Python code in the text box to transform the data into the
    desired form.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您仔细阅读文本框中的注释，您会看到`dataset`变量已经初始化，并包含Power Query编辑器中当前时刻存在的数据，包括已应用的所有转换。在此阶段，您可以在文本框中插入Python代码以将数据转换为所需的形式。
- en: 'A similar window will open if you click on **Run R script**:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您点击**运行R脚本**，将打开一个类似的窗口：
- en: '![Figure 1.10 – The Run R script editor](img/file9.png)'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.10 – 运行R脚本编辑器](img/file9.png)'
- en: Figure 1.10 – The Run R script editor
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.10 – 运行R脚本编辑器
- en: Also, in this case, the `dataset` variable is already initialized and contains
    the data present at that moment in Power Query Editor. You can then add your own
    R code and reference the `dataset` variable to transform your data in the most
    appropriate way.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，在这种情况下，`dataset`变量已经初始化，并包含Power Query编辑器中当前时刻存在的数据。然后您可以添加自己的R代码，并引用`dataset`变量以最合适的方式转换您的数据。
- en: Next, let’s look at visualizing data.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何可视化数据。
- en: Data visualization
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据可视化
- en: 'Finally, your own Python or R scripts can be added to Power BI to create new
    visualizations, in addition to those already present in the tool out of the box:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您可以将自己的Python或R脚本添加到Power BI中，以创建新的可视化，而不仅仅是工具中已经存在的可视化：
- en: 'Assuming we resume the data import activity begun in the previous section,
    once the `Iris` dataset is loaded, simply click **Cancel** in the **Run R script**
    window, and then click **Close & Apply** in the **Home** tab of Power Query Editor:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们继续上一节开始的数据导入活动，一旦加载了 `Iris` 数据集，只需在**运行 R 脚本**窗口中点击**取消**，然后在 Power Query
    编辑器的**主页**选项卡中点击**关闭并应用**：
- en: '![Figure 1.11 – Click Close & Apply to import the Iris data](img/file10.png)'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.11 – 点击关闭并应用以导入 Iris 数据](img/file10.png)'
- en: Figure 1.11 – Click Close & Apply to import the Iris data
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.11 – 点击关闭并应用以导入 Iris 数据
- en: 'After the data import is complete, you can select either the **R script visual**
    or **Python script visual** option in the **Visualizations** pane of Power BI:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据导入完成后，您可以在 Power BI 的**可视化**窗格中选择**R 脚本可视化**或**Python 脚本可视化**选项：
- en: '![Figure 1.12 – The R and Python script visuals](img/file11.png)'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.12 – R 和 Python 脚本可视化](img/file11.png)'
- en: Figure 1.12 – The R and Python script visuals
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.12 – R 和 Python 脚本可视化
- en: 'If you click on **Python script visual**, a window pops up asking for permission
    to enable script code execution, as there may be security or privacy risks:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您点击**Python 脚本可视化**，会弹出一个窗口请求允许启用脚本代码执行，因为可能存在安全或隐私风险：
- en: '![Figure 1.13 – Enable the script code execution](img/file12.png)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.13 – 启用脚本代码执行](img/file12.png)'
- en: Figure 1.13 – Enable the script code execution
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.13 – 启用脚本代码执行
- en: 'After enabling code execution, in Power BI Desktop you can see a placeholder
    for the Python visual image on the report canvas and a Python script editor at
    the bottom:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用代码执行后，在 Power BI Desktop 中，您可以在报告画布上看到 Python 可视化图像的占位符，以及在底部有一个 Python 脚本编辑器：
- en: '![Figure 1.14 – The Python visual layout](img/file13.png)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.14 – Python 可视化布局](img/file13.png)'
- en: Figure 1.14 – The Python visual layout
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.14 – Python 可视化布局
- en: You can now write your own custom code in the Python editor and run it via the
    **Run script** icon highlighted in *Figure 1.14* to generate a Python visualization.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您现在可以在 Python 编辑器中编写自己的自定义代码，并通过**图 1.14**中突出显示的**运行脚本**图标运行它以生成 Python 可视化。
- en: A pretty much identical layout occurs when you select **R script visual**.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**R 脚本可视化**时，会出现几乎相同的布局。
- en: Using R and Python to interact with your data
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 R 和 Python 与您的数据交互
- en: 'In the previous section, you saw all the ways you can interact with your data
    in Power BI via R or Python scripts. Beyond knowing how and where to inject your
    code into Power BI, it is very important to know how your code will interact with
    that data. It’s here that we see a big difference between the effect of scripts
    injected via Power Query Editor and scripts used in visuals:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，您看到了所有通过 R 或 Python 脚本在 Power BI 中与您的数据交互的方式。除了知道如何以及在哪里将代码注入 Power BI
    之外，了解您的代码将如何与数据交互也非常重要。在这里，我们看到通过 Power Query 编辑器注入的脚本和用于可视化的脚本之间存在很大的差异：
- en: '**Scripts via Power Query Editor**: This type of script will transform the
    data and **persist** transformations in the model. This means that it will always
    be possible to retrieve the transformed data from any object within Power BI.
    Also, once the scripts have been executed and have taken effect, *they will not
    be re-executed unless the data is refreshed*. Therefore, it is recommended to
    inject code in R or Python via Power Query Editor when you intend to use the resulting
    insights in other visuals, or in the data model.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通过 Power Query 编辑器的脚本**：此类脚本将转换数据并在模型中**持久化**转换。这意味着始终可以从 Power BI 中的任何对象检索转换后的数据。此外，一旦脚本执行并生效，*除非数据刷新，否则它们将不会重新执行*。因此，当您打算在其他可视化或数据模型中使用生成的洞察时，建议通过
    Power Query 编辑器注入 R 或 Python 代码。'
- en: '**Scripts in visuals**: The scripts used within the R and Python script visuals
    extract particular insights from the data and only make them evident to the user
    through **visualization**. Like all the other visuals on a report page, the R
    and Python script visuals are also interconnected with the other visuals. This
    means that the script visuals are subject to **cross-filtering** and therefore
    *they are refreshed every time you interact with other visuals in the report*.
    That said, it is not possible to persist the results obtained from the visuals
    scripts in the data model.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可视化中的脚本**：R 和 Python 脚本可视化中使用的脚本从数据中提取特定的洞察，并通过**可视化**仅让用户明显看到。像报告页面上所有其他可视化一样，R
    和 Python 脚本可视化也与其他可视化相互连接。这意味着脚本可视化会受到**交叉过滤**的影响，因此*每次您与报告中的其他可视化交互时，它们都会刷新*。尽管如此，无法在数据模型中持久化从可视化脚本中获得的结果。'
- en: '**Tip**'
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**提示**'
- en: ''
  id: totrans-80
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Thanks to the interactive nature of R and Python script visuals due to cross-filtering,
    it is possible to inject code useful to extract **real-time insights** from data,
    but also from external sources (you'll see how in *Chapter 8,* *Calling External
    APIs to Enrich Your Data*). The important thing to keep in mind is that, as previously
    stated, it is then only possible to visualize such information, or at the most
    to write it to external repositories (as you will see in *Chapter 7,* *Log Data
    from Power BI to External Repositories*).
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于 R 和 Python 脚本可视化具有跨过滤器的交互性，因此可以注入用于从数据中提取 **实时洞察** 的代码，也可以从外部来源（你将在 *第 8
    章*，*调用外部 API 丰富您的数据* 中看到）中提取。重要的是要记住，正如之前所述，那时只能可视化此类信息，或者最多将其写入外部存储库（你将在 *第 7
    章*，*将 Power BI 数据记录到外部存储库* 中看到）。
- en: In the final section of this chapter, let’s look at the limitations of using
    R and Python when it comes to various Power BI products.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后部分，让我们看看使用 R 和 Python 在各种 Power BI 产品中的局限性。
- en: R and Python limitations on Power BI products
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Power BI 产品上的 R 和 Python 局限性
- en: 'The first question once you are clear on where to inject R and Python scripts
    in Power BI could be: “*Is the use of R and Python code allowed in all Power BI
    products?*” In order to have a brief recap of the various Power BI products and
    their usage in general, here is a concise list:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您清楚在 Power BI 中注入 R 和 Python 脚本的位置，第一个问题可能是：“*在所有 Power BI 产品中允许使用 R 和 Python
    代码吗？*”为了简要回顾各种 Power BI 产品及其一般用途，以下是一个简明的列表：
- en: '**Power BI Service**: This is sometimes called **Power BI Online**, and it''s
    the **Software as a Service** (**SaaS**) declination of Power BI. It was created
    to facilitate the sharing of visual analysis between users through Dashboards
    and Reports.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Power BI 服务**：有时被称为 **Power BI 在线**，它是 Power BI 的 **软件即服务**（SaaS）版本。它的创建是为了通过仪表板和报告促进用户之间可视化分析的共享。'
- en: '**Power BI Report Server**: This is the on-premises version of Power BI and
    it extends the capabilities of **SQL Server Reporting Services**, enabling the
    sharing of reports created in **Power BI Desktop (for Report Server)**.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Power BI 报告服务器**：这是 Power BI 的本地版本，它扩展了 **SQL Server 报告服务**的功能，使得可以在 **Power
    BI 桌面版（用于报告服务器）** 中创建的报告之间共享。'
- en: '**Power BI Embedded**: A Microsoft Azure service that allows dashboards and
    reports to be embedded in an application for users who do not have a Power BI
    account.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Power BI 嵌入式**：一个 Microsoft Azure 服务，允许将仪表板和报告嵌入到没有 Power BI 账户的用户的应用程序中。'
- en: '**Power BI Desktop**: A free desktop application for Windows that allows you
    to use almost all of the features that Power BI exposes. It is not the right tool
    for sharing results between users, but it allows you to share them on Power BI
    Service and Power BI Report Server. The desktop versions that allow publishing
    on the two mentioned services are distinct.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Power BI 桌面版**：一个免费的 Windows 桌面应用程序，允许您使用 Power BI 提供的几乎所有功能。这不是用户之间共享结果的正确工具，但它允许您在
    Power BI 服务和 Power BI 报告服务器上共享它们。允许在两个提到的服务上发布桌面版本是不同的。'
- en: '**Power BI Mobile**: A mobile application, available on Windows, Android, and
    iOS, that allows secure access to Power BI Service and Power BI Report Server,
    and that allows you to browse and share dashboards and reports, but not edit them.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Power BI 移动版**：一个可在 Windows、Android 和 iOS 上使用的移动应用程序，允许安全访问 Power BI 服务和
    Power BI 报告服务器，并允许您浏览和共享仪表板和报告，但不能编辑它们。'
- en: 'Apart from the licenses, which we will not go into here, a summary figure of
    the relationships between the products mentioned previous follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 除了许可证（我们在这里不讨论），以下是之前提到的产品之间关系的摘要图：
- en: '![Figure 1.15 – Interactions between Power BI products](img/file14.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.15 – Power BI 产品之间的交互](img/file14.png)'
- en: Figure 1.15 – Interactions between Power BI products
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.15 – Power BI 产品之间的交互
- en: 'Unfortunately, of all these products, only **Power BI Service**, **Power BI
    Embedded**, and **Power BI Desktop** allow you to enrich data via code in R and
    Python:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，在这些产品中，只有 **Power BI 服务**、**Power BI 嵌入式** 和 **Power BI 桌面版** 允许您通过代码在
    R 和 Python 中丰富数据：
- en: '![Figure 1.16 – Power BI products compatibility with R and Python](img/file15.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.16 – Power BI 产品与 R 和 Python 的兼容性](img/file15.png)'
- en: Figure 1.16 – Power BI products compatibility with R and Python
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.16 – Power BI 产品与 R 和 Python 的兼容性
- en: '**Important Note**'
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: ''
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: From here on out, when we talk about *Power BI Service* in terms of compatibility
    with analytical languages, what we say *will also apply to Power BI Embedded*.
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从现在开始，当我们谈论与分析语言兼容性的 *Power BI 服务* 时，我们所说的 *也将适用于 Power BI Embedded*。
- en: So, if you need to develop reports using advanced analytics through R and Python,
    make sure the target platform supports them.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果您需要通过 R 和 Python 进行高级分析来开发报告，请确保目标平台支持它们。
- en: Summary
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter has given a detailed overview of all the ways by which you can
    use R and Python scripts in Power BI Desktop. During the data ingestion and data
    transformation phases, Power Query Editor allows you to add steps containing R
    or Python code. You can also make use of these analytical languages during the
    data visualization phase thanks to the R and Python script visuals provided by
    Power BI Desktop.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 本章详细概述了您可以在 Power BI Desktop 中使用 R 和 Python 脚本的所有方法。在数据摄取和数据处理阶段，Power Query
    编辑器允许您添加包含 R 或 Python 代码的步骤。您还可以利用 Power BI Desktop 提供的 R 和 Python 脚本可视化在数据可视化阶段使用这些分析语言。
- en: It is also very important to know how the R and Python code will interact with
    the data already loaded or being loaded in Power BI. If you use Power Query Editor,
    both when loading and transforming data, the result of script processing will
    be persisted in the data model. Also, if you want to run the same scripts again,
    you have to refresh the data. On the other hand, if you use the R and Python script
    visuals, the code results can only be displayed and are not persisted in the data
    model. In this case, script execution occurs whenever cross-filtering is triggered
    via the other visuals in the report.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 R 和 Python 代码如何与已加载或正在加载到 Power BI 中的数据进行交互也非常重要。如果您使用 Power Query 编辑器，无论是在加载数据还是转换数据时，脚本处理的结果都将持久保存在数据模型中。另外，如果您想再次运行相同的脚本，您必须刷新数据。另一方面，如果您使用
    R 和 Python 脚本可视化，代码结果只能显示，并不会保存在数据模型中。在这种情况下，脚本执行会在报告中的其他可视化触发交叉筛选时发生。
- en: Unfortunately, at the time of writing, you cannot run R and Python scripts in
    any other Power BI product. The only ones that provide for running analytics scripts
    are Power BI Desktop and Power BI Service.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 很遗憾，在撰写本文时，您无法在其他任何 Power BI 产品中运行 R 和 Python 脚本。唯一提供运行分析脚本的是 Power BI Desktop
    和 Power BI 服务。
- en: In the next chapter, we will see how best to configure the R engine and RStudio
    to integrate with Power BI Desktop.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解如何最佳配置 R 引擎和 RStudio 以与 Power BI Desktop 集成。
