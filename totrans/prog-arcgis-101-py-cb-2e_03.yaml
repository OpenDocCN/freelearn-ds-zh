- en: Chapter 3. Managing Map Documents and Layers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章. 管理地图文档和图层
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Referencing the current map document
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引用当前地图文档
- en: Referencing map documents on disk
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引用磁盘上的地图文档
- en: Accessing a data frame
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问数据框架
- en: Getting a list of layers in a map document
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取地图文档中的图层列表
- en: Restricting the list of layers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制图层列表
- en: Changing the map extent
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改变地图范围
- en: Getting a list of tables
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取表格列表
- en: Adding layers to a map document
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向地图文档中添加图层
- en: Inserting layers into a map document
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将图层插入到地图文档中
- en: Updating layer symbology
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新图层符号
- en: Updating layer properties
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新图层属性
- en: Introduction
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: The ArcPy mapping module is new to ArcGIS 10 and brings some really exciting
    features for mapping automation, including the ability to manage map documents
    and layer files as well as the data within these files. Support is provided for
    automating map export and printing, for the creation of PDF map books and publication
    of map documents to ArcGIS Server map services. This is an incredibly useful module
    for accomplishing many of the day-to-day tasks performed by GIS analysts.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ArcPy 映射模块是 ArcGIS 10 的新功能，为地图自动化带来了许多令人兴奋的特性，包括管理地图文档和图层文件以及这些文件中的数据的能力。支持自动化地图导出和打印，创建
    PDF 地图集以及将地图文档发布到 ArcGIS Server 地图服务。这是一个极其有用的模块，可以完成许多 GIS 分析师日常执行的任务。
- en: In this chapter, you will learn how to use the ArcPy mapping module to manage
    map documents and layer files. You will learn how to add and remove geographic
    layers and tables from map document files, insert layers into data frames, and
    move layers around within the map document. Finally, you will learn how to update
    layer properties and symbology.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用 ArcPy 映射模块来管理地图文档和图层文件。您将学习如何将地理图层和表格添加到地图文档文件中，从地图文档中删除图层，将图层插入到数据框架中，以及在地图文档中移动图层。最后，您将学习如何更新图层属性和符号。
- en: Referencing the current map document
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用当前地图文档
- en: When running a geoprocessing script from the ArcGIS Python window or a custom
    script tool, you will often need to get a reference to the map document currently
    loaded in ArcMap. This is typically the first step in your script before you perform
    geoprocessing operations against layers and tables in a map document. In this
    recipe, you will learn how to reference the current map document from your Python
    geoprocessing script.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当您从 ArcGIS Python 窗口或自定义脚本工具运行地理处理脚本时，您通常会需要获取当前在 ArcMap 中加载的地图文档的引用。在您对地图文档中的图层和表格执行地理处理操作之前，这是脚本中的第一步。在本菜谱中，您将学习如何从您的
    Python 地理处理脚本中引用当前地图文档。
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Before you can actually perform any operations on a map document file, you
    need to get a reference to it in your Python script. This is done by calling the
    `MapDocument()` method on the `arcpy.mapping` module. You can reference either
    the currently active document or a document at a specific location on disk. To
    reference the currently active document, you simply supply the keyword `CURRENT`
    as a parameter to the `MapDocument()` function. This gets the currently active
    document in ArcMap. The following code example shows how a reference to the currently
    active document is obtained:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在您实际上对地图文档文件执行任何操作之前，您需要在您的 Python 脚本中获取对其的引用。这是通过在 `arcpy.mapping` 模块上调用 `MapDocument()`
    方法来完成的。您可以引用当前活动的文档或磁盘上特定位置的文档。要引用当前活动的文档，您只需将关键字 `CURRENT` 作为参数提供给 `MapDocument()`
    函数。这将获取 ArcMap 中的当前活动文档。以下代码示例显示了如何获取当前活动文档的引用：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can only use the `CURRENT` keyword when running a script from the ArcGIS
    Python window or a custom script tool. If you attempt to use this keyword when
    running a script from IDLE or any other development environment, it won't have
    access to the map document file currently loaded in ArcGIS. I should also point
    out that the `CURRENT` keyword is not case sensitive. You could just as easily
    use `current`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当您从 ArcGIS Python 窗口或自定义脚本工具运行脚本时，您只能使用 `CURRENT` 关键字。如果您尝试在 IDLE 或任何其他开发环境中使用此关键字运行脚本，它将无法访问当前在
    ArcGIS 中加载的地图文档文件。我还应该指出，`CURRENT` 关键字不区分大小写。您同样可以使用 `current`。
- en: 'To reference a map document on a local or remote drive, simply supply the path
    to the map document as well as the map document name as a parameter to `MapDocument()`.
    For example, you would reference the `crime.mxd` file in the `c:\data` folder
    with the following reference: `arcpy.mapping.MapDocument("C:/data/crime.mxd")`.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要引用本地或远程驱动器上的地图文档，只需提供地图文档的路径以及地图文档名称作为 `MapDocument()` 的参数。例如，您可以使用以下引用引用 `c:\data`
    文件夹中的 `crime.mxd` 文件：`arcpy.mapping.MapDocument("C:/data/crime.mxd")`。
- en: How to do it…
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to access the currently active map document
    in ArcMap:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何在 ArcMap 中访问当前活动的地图文档：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 ArcMap 的主工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module by typing the following into the Python window:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在 Python 窗口中输入以下内容导入 `arcpy.mapping` 模块：
- en: '[PRE1]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`) and assign the reference
    to a variable by typing the following into the Python Window below the first line
    of code that you added in the last step:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '引用当前活动文档 (`Crime_Ch3.mxd`) 并通过在 Python 窗口中输入以下内容将引用分配给变量： '
- en: '[PRE2]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Get the title of the map document and print it out to the shell window. When
    the script executes, the title of the map document will be printed using the Python
    `print` statement:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取地图文档的标题并将其打印到壳窗口。当脚本执行时，地图文档的标题将使用 Python 的 `print` 语句打印出来：
- en: '[PRE3]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Set a new title for map document:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为地图文档设置新标题：
- en: '[PRE4]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Save a copy of the map document file with the saveACopy() method.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 saveACopy() 方法保存地图文档文件的副本。
- en: '[PRE5]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Run the script .
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: In ArcMap open the `crime_copy.mxd` file that you just created and select **File**
    | **Map Document Properties** to view the new title you gave to the map document.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 ArcMap 中打开您刚刚创建的 `crime_copy.mxd` 文件，并选择 **文件** | **地图文档属性** 来查看您为地图文档设置的新标题。
- en: How it works
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: The `MapDocument` class has a constructor that creates an instance of this class.
    In object-oriented programming, an **instance** is also known as an **object**
    . The constructor for `MapDocument` can accept either the `CURRENT` keyword or
    a path to a map document file on a local or remote drive. The constructor creates
    an object and assigns it to the variable `mxd`. You can then access the properties
    and methods available on this object using dot notation. In this particular case,
    we've printed out the title of the map document file using the `MapDocument.title`
    property and we also used the `MapDocument.saveACopy()` method to save a copy
    of the map document file.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`MapDocument` 类有一个构造函数，用于创建该类的实例。在面向对象编程中，**实例**也称为**对象**。`MapDocument` 的构造函数可以接受
    `CURRENT` 关键字或本地或远程驱动器上地图文档文件的路径。构造函数创建一个对象并将其分配给变量 `mxd`。然后，您可以使用点符号访问该对象上可用的属性和方法。在这种情况下，我们使用
    `MapDocument.title` 属性打印出地图文档文件的标题，并且我们还使用了 `MapDocument.saveACopy()` 方法来保存地图文档文件的副本。'
- en: Referencing map documents on a disk
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用磁盘上的地图文档
- en: In addition to being able to reference the currently active map document file
    in ArcMap, you can also access map document files stored on a local or remote
    drive using the `MapDocument()` method. In this recipe, you'll learn how to access
    these map documents.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 除了能够在 ArcMap 中引用当前活动的地图文档文件外，您还可以使用 `MapDocument()` 方法访问存储在本地或远程驱动器上的地图文档文件。在本教程中，您将学习如何访问这些地图文档。
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As I mentioned earlier, you can also reference a map document file that resides
    somewhere on your computer or a shared server. This is done simply by providing
    a path to the file. This is a more versatile way of obtaining a reference to a
    map document because it can be run outside the ArcGIS Python window or a custom
    script tool.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如我之前提到的，您还可以引用存储在您的计算机或共享服务器上的地图文档文件。这只需提供文件的路径即可完成。这是一种更灵活的获取地图文档引用的方法，因为它可以在
    ArcGIS Python 窗口或自定义脚本工具之外运行。
- en: How to do it…
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to access a map document stored on a local
    or remote drive:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何访问存储在本地或远程驱动器上的地图文档：
- en: Open the IDLE development environment from **Start** | **Programs** | **ArcGIS**
    | **Python 2.7** | **IDLE**.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **开始** | **程序** | **ArcGIS** | **Python 2.7** | **IDLE** 打开 IDLE 开发环境。
- en: Create a new IDLE script window by selecting **New** | **New Window** from the
    IDLE shell window.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过从 IDLE 壳窗口中选择 **新建** | **新建窗口** 创建一个新的 IDLE 脚本窗口。
- en: 'Import `arcpy.mapping`:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping`：
- en: '[PRE6]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Reference the copy of the `crime` map document that you created in the last
    recipe:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用你在上一个菜谱中创建的 `crime` 地图文档的副本：
- en: '[PRE7]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Print the title of the map document:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印地图文档的标题：
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Run the script to see the following output:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE9]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How it works…
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The only difference between this recipe and the last is that we've provided
    a reference to a map document file on a local or remote drive rather than using
    the `CURRENT` keyword. This is the recommended way of referencing a map document
    file unless you know for sure that your geoprocessing script will be run inside
    ArcGIS, either in the Python window or as a custom script tool.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 与上一个菜谱相比，唯一的区别是我们提供了一个指向本地或远程驱动器上的地图文档文件的引用，而不是使用 `CURRENT` 关键字。除非你确定你的地理处理脚本将在
    ArcGIS 内运行，无论是 Python 窗口还是自定义脚本工具，否则这是引用地图文档文件的推荐方式。
- en: Accessing a data frame
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问数据帧
- en: The ArcMap table of contents is composed of one or more data frames. Each data
    frame can contain layers and tables. Data frames can be used to filter lists that
    are returned from the various list functions such as `ListLayers()`. For example,
    a `DataFrame` object can be used as an input parameter to restrict the layers
    returned by the ListLayers() function to only those layers within a particular
    data frame. You can also use a DataFrame object to get or set the current map
    extent, which can be useful when creating map books. In this recipe you will learn
    how to access data frames from your Python scripts.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: ArcMap 的目录由一个或多个数据帧组成。每个数据帧可以包含图层和表格。数据帧可以用来过滤从各种列表函数（如 `ListLayers()`）返回的列表。例如，可以使用
    `DataFrame` 对象作为输入参数，将 `ListLayers()` 函数返回的图层限制在特定数据帧内。您还可以使用 DataFrame 对象获取或设置当前地图范围，这在创建地图册时可能很有用。在本菜谱中，您将学习如何从您的
    Python 脚本中访问数据帧。
- en: Getting ready
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `ListDataFrames()` function returns a list of `DataFrame` objects. Each
    data frame can hold layers and tables and can be used to restrict the lists returned
    by the `ListLayers()` and `ListTablesViews()` functions.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListDataFrames()` 函数返回一个 `DataFrame` 对象列表。每个数据帧可以包含图层和表格，并且可以用来限制 `ListLayers()`
    和 `ListTablesViews()` 函数返回的列表。'
- en: How to do it...
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow the steps below to learn how to get a list of layers from a map document:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从地图文档中获取图层列表：
- en: Open c`:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主 ArcMap 工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE10]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`) and assign the reference
    to a variable:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`）并将引用分配给一个变量：
- en: '[PRE11]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Call the `ListDataFrames()` function and pass a reference to the map document
    along with a wildcard used to find only the data frames that begin with the letter
    `C`:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `ListDataFrames()` 函数并传递一个指向地图文档的引用，以及一个用于仅查找以字母 `C` 开头的数据帧的通配符：
- en: '[PRE12]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Start a `for` loop and print out the name of each layer in the map document:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个 `for` 循环并打印出地图文档中每个图层的名称：
- en: '[PRE13]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Run the script to see the following output:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE14]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works...
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `ListDataFrames()` function returns a list of all the data frames in the
    ArcMap table of contents. Like any other Python list, you can iterate through
    the contents of the list using a `for` loop. Inside the `for` loop, each data
    frame is dynamically assigned to the `df` variable and the name of the data frame
    is printed to the screen.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListDataFrames()` 函数返回 ArcMap 目录中所有数据帧的列表。像任何其他 Python 列表一样，您可以使用 `for` 循环遍历列表的内容。在
    `for` 循环内部，每个数据帧被动态分配给 `df` 变量，并将数据帧的名称打印到屏幕上。'
- en: Getting a list of layers in a map document
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取地图文档中图层列表
- en: Frequently, one of the first steps in a geoprocessing script is to obtain a
    list of layers in the map document. Once obtained, your script might then cycle
    through each of the layers and perform some type of processing. The mapping module
    contains a `ListLayers()` function that provides the capability of obtaining this
    list of layers. In this recipe, you will learn how to get a list of layers contained
    within a map document.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在地理处理脚本中的第一步通常是获取地图文档中的图层列表。一旦获取，您的脚本可能会遍历每个图层并执行某种类型的处理。映射模块包含一个 `ListLayers()`
    函数，它提供了获取此图层列表的能力。在本菜谱中，您将学习如何获取地图文档中包含的图层列表。
- en: Getting ready
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `arcpy.mapping` module contains various list functions to return lists of
    layers, data frames, broken data sources, table views, and layout elements. These
    list functions are normally the first step in a multi-step process, where the
    script needs to get one or more items from a list for further processing. Each
    of these list functions returns a Python list, which as you know from earlier
    in the book, is a highly functional data structure for storing information.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping` 模块包含各种列表函数，用于返回图层、数据框架、损坏的数据源、表视图和布局元素的列表。这些列表函数通常是多步过程中的第一步，其中脚本需要从列表中获取一个或多个项目以进行进一步处理。这些列表函数中的每一个都返回一个
    Python 列表，正如您在本书前面的内容中所知，这是一个用于存储信息的高度功能性的数据结构。'
- en: Normally, the list functions are used as part of a multi-step process, where
    creating a list is only the first step. Subsequent processing in the script will
    iterate over one or more of the items in this list. For example, you might obtain
    a list of layers in a map document and then iterate through each layer looking
    for a specific layer name, which will then be subject to further geoprocessing.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，列表函数作为多步过程的一部分使用，其中创建列表只是第一步。脚本中的后续处理将遍历列表中的一个或多个项目。例如，您可能从地图文档中获取图层列表，然后遍历每个图层以查找特定的图层名称，然后该图层将受到进一步地理处理的约束。
- en: In this recipe, you will learn how to obtain a list of layers from a map document
    file.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，您将学习如何从地图文档文件中获取图层列表。
- en: How to do it…
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to get a list of layers from a map document:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从地图文档中获取图层列表：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主 ArcMap 工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE15]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`) and assign the reference
    to a variable:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`）并将引用分配给一个变量：
- en: '[PRE16]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Call the ListLayers() function and pass a reference to the map document:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `ListLayers()` 函数并传递地图文档的引用：
- en: '[PRE17]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Start a `for` loop and print out the name of each layer in the map document:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个 `for` 循环并打印出地图文档中每个图层的名称：
- en: '[PRE18]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Run the script to see the following output:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE19]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works…
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `ListLayers()` function retrieves a list of layers in a map document, a
    specific data frame, or a layer file. In this case, we passed a reference to the
    current map document to the `ListLayers()` function, which will retrieve a list
    of all layers in the map document. The results will be stored in a variable called
    `layers`, which is a Python list that can be iterated with a `for` loop. This
    Python list contains one or more `Layer` objects.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayers()` 函数检索地图文档中的图层列表、特定数据框架或图层文件。在这种情况下，我们将当前地图文档的引用传递给 `ListLayers()`
    函数，它将检索地图文档中的所有图层列表。结果将存储在一个名为 `layers` 的变量中，这是一个可以由 `for` 循环迭代的 Python 列表。这个
    Python 列表包含一个或多个 `Layer` 对象。'
- en: There's more…
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `ListLayers()` function is only one of many list functions provided by the
    `arcpy mapping` module. Each of these functions returns a Python list containing
    data of some type. Some of the other list functions include `ListTableViews()`,
    which returns a list of `Table` objects, `ListDataFrames()` which returns a list
    of `DataFrame` objects, and `ListBookmarks()` which returns a list of bookmarks
    in a map document. There are additional list functions, many of which we'll cover
    later in the book.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListLayers()` 函数是 `arcpy mapping` 模块提供的许多列表函数之一。这些函数中的每一个都返回一个包含某种类型数据的 Python
    列表。其他一些列表函数包括 `ListTableViews()`，它返回一个 `Table` 对象列表，`ListDataFrames()` 返回一个 `DataFrame`
    对象列表，以及 `ListBookmarks()` 返回地图文档中的书签列表。还有其他列表函数，其中许多我们将在本书的后续章节中介绍。'
- en: Restricting the list of layers
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制图层列表
- en: In the previous recipe, you learned how to get a list of layers using the `ListLayers()`
    function. There will be times when you will not want a list of all the layers
    in a map document, but rather only a subset of the layers. The `ListLayers()`
    function allows you to restrict the list of layers that is generated. In this
    recipe, you will learn how to restrict the layers returned using a wildcard and
    a specific data frame from the ArcMap table of contents.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的菜谱中，您学习了如何使用 `ListLayers()` 函数获取图层列表。有时您可能不希望获取地图文档中所有图层的列表，而只是部分图层的子集。`ListLayers()`
    函数允许您限制生成的图层列表。在本菜谱中，您将学习如何使用通配符和 ArcMap 内容表中的特定数据框架来限制返回的图层。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: By default, if you only pass a reference to the map document or layer file,
    the `ListLayers()` function will return a list of all the layers in these files.
    However, you can restrict the list of layers returned by this function through
    the use of an optional wildcard parameter or by passing in a reference to a specific
    data frame.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，如果你只传递地图文档或图层文件的引用，`ListLayers()` 函数将返回这些文件中的所有图层列表。然而，你可以通过使用可选的通配符参数或传递特定数据框的引用来限制该函数返回的图层列表。
- en: Note
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you're working with a layer file (`.lyr`), you can't restrict layers with
    a data frame. Layer files don't support data frames.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在处理一个图层文件（`.lyr`），你不能使用数据框来限制图层。图层文件不支持数据框。
- en: In this recipe, you will learn how to restrict the list of layers returned by
    `ListLayers()` through the use of a wildcard and data frame.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，你将学习如何通过使用通配符和数据框来限制 `ListLayers()` 返回的图层列表。
- en: How to do it…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'Follow these steps to learn how to restrict a list of layers from a map document:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何限制来自地图文档的图层列表：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主 ArcMap 工具栏中点击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE20]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`) and assign the reference
    to a variable:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`）并将引用分配给一个变量：
- en: '[PRE21]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Get a list of data frames in the map document and search for a specific data
    frame name of `Crime`. Please note that text strings can be surrounded by either
    single or double quotes:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取地图文档中的数据框列表并搜索特定的数据框名称 `Crime`。请注意，文本字符串可以由单引号或双引号包围：
- en: '[PRE22]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Call the `ListLayers()` function and pass a reference to the map document,
    a wildcard to restrict the search, and the data frame found in the last step to
    further restrict the search. The `ListLayers()` function should be indented inside
    the `if` statement you just created:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `ListLayers()` 函数并传递地图文档的引用、一个用于限制搜索的通配符以及上一步找到的数据框，以进一步限制搜索。`ListLayers()`
    函数应该缩进在刚刚创建的 `if` 语句内部：
- en: '[PRE23]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Start a `for` loop and print out the name of each layer in the map document.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个 `for` 循环并打印出地图文档中每个图层的名称。
- en: '[PRE24]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The complete script should appear as follows:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完整的脚本应如下所示：
- en: '[PRE25]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Run the script to see the following output:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE26]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: How it works…
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: As you learned in a previous recipe, the `ListDataFrames()` function is another
    list function provided by `arcpy mapping`. This function returns a list of all
    the data frames in a map document. We then loop through each of the data frames
    returned by this function, looking for a data frame that has the name `Crime`.
    If we do find a data frame that has this name, we call the `ListLayers()` function,
    passing in the optional wildcard value of `Burg*` as the second parameter, and
    a reference to the `Crime` data frame. The wildcard value passed in as the second
    parameter accepts any number of characters and an optional wildcard character
    (`*`).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如同你在之前的菜谱中学到的，`ListDataFrames()` 函数是 `arcpy mapping` 提供的另一个列表函数。这个函数返回一个包含地图文档中所有数据框的列表。然后我们遍历这个函数返回的每个数据框，寻找一个名为
    `Crime` 的数据框。如果我们确实找到了一个具有这个名称的数据框，我们就调用 `ListLayers()` 函数，将可选通配符值 `Burg*` 作为第二个参数传递，以及
    `Crime` 数据框的引用。作为第二个参数传递的通配符值接受任意数量的字符和一个可选的通配符字符（`*`）。
- en: In this particular recipe, we're searching for all the layers that begin with
    the characters `Burg` and that have a data frame name of `Crime`. Any layers found
    matching these restrictions are then printed. Keep in mind that all we're doing
    in this case is printing the layer names, but in most cases, you would be performing
    additional geoprocessing through the use of tools or other functions.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定的菜谱中，我们正在搜索所有以字符 `Burg` 开头并且数据框名称为 `Crime` 的图层。任何符合这些限制的图层都会被打印出来。请注意，在这种情况下，我们只是在打印图层名称，但在大多数情况下，你将通过使用工具或其他函数执行额外的地理处理。
- en: Changing the map extent
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改变地图范围
- en: There will be many occasions when you will need to change the map extent. This
    is frequently the case when you are automating the map production process and
    need to create many maps of different areas or features. There are a number of
    ways that the map extent can be changed with `arcpy`. But, for this recipe, we'll
    concentrate on using a definition expression to change the extent.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在你需要更改地图范围的情况下会有很多机会。当你自动化地图生产过程并需要创建不同区域或特征的许多地图时，这通常是这种情况。有几种方法可以使用 `arcpy`
    来更改地图范围。但是，对于这个配方，我们将专注于使用定义表达式来更改范围。
- en: Getting ready
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `DataFrame` class has an `extent` property that you can use to set the geographic
    extent. This is often used in conjunction with the `Layer.definitionQuery` property
    that is used to define a definition query for a layer. In this recipe, you will
    learn how to use these objects and properties to change the map extent.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame` 类有一个 `extent` 属性，你可以使用它来设置地理范围。这通常与用于为图层定义定义查询的 `Layer.definitionQuery`
    属性一起使用。在本配方中，你将学习如何使用这些对象和属性来更改地图范围。'
- en: How to do it...
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to get a list of layers from a map document:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从地图文档中获取图层列表：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 ArcMap 的主工具栏中单击 Python 窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `arcpy.mapping` 模块：
- en: '[PRE27]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`), and assign the reference
    to a variable:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`），并将引用分配给变量：
- en: '[PRE28]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Create a `for` loop that will loop through all the data frames in the map document:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `for` 循环，该循环将遍历地图文档中的所有数据框：
- en: '[PRE29]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Find the data frame called `Crime` and a specific layer that we''ll apply the
    definition query against:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到名为 `Crime` 的数据框以及我们将应用定义查询的特定图层：
- en: '[PRE30]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Create a `for` loop that will loop through the layers. There will only be one,
    but we''ll create the loop anyway. In the `for` loop, create a definition query
    and set the new extent of the data frame:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `for` 循环，该循环将遍历图层。只有一个，但我们仍然会创建循环。在 `for` 循环中，创建一个定义查询并设置数据框的新范围：
- en: '[PRE31]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The entire script should appear as follows:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：
- en: '[PRE32]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Save and run the script. The extent of the data view should update to visualize
    only the features matching the definition expression, as shown in the following
    screenshot:![How to do it...](img/4445OT_03_14.jpg)
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并运行脚本。数据视图的范围应更新，以仅可视化与定义表达式匹配的特征，如下面的截图所示：![如何操作...](img/4445OT_03_14.jpg)
- en: How it works...
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: This recipe used a definition query on a layer to update the map extent. Near
    the end of the script, you created a new variable called `query` that holds the
    definition expression. The definition expression is set up to find school districts
    with a name of `Lackland ISD`. This query string is then applied to the `definitionQuery`
    property. Finally, the `df.extent` property is set to the returned value of `layer.getExtent()`.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方在图层上使用定义查询来更新地图范围。在脚本末尾，你创建了一个名为 `query` 的新变量，用于存储定义表达式。该定义表达式被设置为查找名为 `Lackland
    ISD` 的学区。然后将此查询字符串应用于 `definitionQuery` 属性。最后，将 `df.extent` 属性设置为 `layer.getExtent()`
    返回的值。
- en: Getting a list of tables
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取表格列表
- en: The `arcpy.mapping` module also has a `ListTableViews()` function that you can
    use to obtain a list of standalone tables that are contained within a map document.
    In this recipe, you will learn how to use the `ListTableViews()` function to create
    this list of tables.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping` 模块还有一个 `ListTableViews()` 函数，你可以使用它来获取包含在地图文档中的独立表格列表。在本配方中，你将学习如何使用
    `ListTableViews()` 函数来创建此表格列表。'
- en: Getting ready
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In addition to providing the ability to generate a list of layers in a map document
    or data frame, the `arcpy mapping` module also provides a `ListTableViews()` function
    that generates a list of tables.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供在地图文档或数据框中生成图层列表的能力外，`arcpy mapping` 模块还提供了一个 `ListTableViews()` 函数，该函数生成表格列表。
- en: Note
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '`ListTableViews()` only works with map document files and the data frames contained
    within. Layer files do not have the capability of holding tables.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListTableViews()` 只适用于地图文档文件及其包含的数据框。图层文件没有保留表格的能力。'
- en: How to do it…
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to get a list of standalone tables in a map
    document:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何获取地图文档中的独立表格列表：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主ArcMap工具栏中点击Python窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE33]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`), and assign the reference
    to a variable:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`），并将引用分配给变量：
- en: '[PRE34]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Generate a list of tables in the map document:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成地图文档中的表格列表：
- en: '[PRE35]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Run the script to see the following output:.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本以查看以下输出：
- en: '[PRE36]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: How it works…
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The `ListTableViews()` function is very similar to the other list functions
    provided by `arcpy.mapping`. As was the case with `ListLayers()`, the `ListTableViews()`
    function accepts a reference to a map document (but not a layer file), along with
    an optional wildcard and data frame parameters. The output is a list of tables
    that can be iterated with a `for` loop.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`ListTableViews()`函数与`arcpy.mapping`提供的其他列表函数非常相似。与`ListLayers()`函数的情况一样，`ListTableViews()`函数接受一个地图文档的引用（但不是图层文件），以及可选的通配符和数据帧参数。输出是一个可以迭代以`for`循环的表格列表。'
- en: Adding layers to a map document
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将图层添加到地图文档
- en: There will be many situations where you will need to add a layer to a map document.
    The mapping module provides this functionality through the `AddLayer()` function.
    In this recipe, you will learn how to add a layer to a map document using this
    function.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 将会有许多需要将图层添加到地图文档的情况。映射模块通过`AddLayer()`函数提供此功能。在本例中，您将学习如何使用此函数将图层添加到地图文档。
- en: Getting ready
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: '`arcpy.mapping` provides the ability to add layers or group layers into an
    existing map document file. You can take advantage of the ArcMap "auto-arrange"
    functionality, which automatically places a layer in the data frame for visibility.
    This is essentially the same functionality provided by the **Add Data** button
    in ArcMap, which positions a layer in the data frame based on geometry type and
    layer weight rules.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping`提供了将图层添加到现有地图文档文件或将图层分组到现有地图文档文件中的功能。您可以利用ArcMap的“自动排列”功能，该功能自动将图层放置在数据帧中以供查看。这基本上与ArcMap中**添加数据**按钮提供的功能相同，该按钮根据几何类型和图层权重规则将图层定位在数据帧中。'
- en: Note
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Layers can't be added to a layer file (`.lyr`).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 无法将图层添加到图层文件（`.lyr`）中。
- en: When adding a layer to a map document, the layer must reference an existing
    layer found in a layer file on disk, the same map document and data frame, the
    same map document with a different data frame, or a completely separate map document.
    A layer can be either a layer in a map document or a layer in a `.lyr` file. To
    add a layer to a map document, you must first create an instance of the `Layer`
    class and then call the `AddLayer()` function, passing in the new layer along
    with the data frame where it should be placed and rules for how it is to be positioned.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 当将图层添加到地图文档时，图层必须引用磁盘上图层文件中找到的现有图层、同一地图文档和数据帧、同一地图文档的不同数据帧或完全不同的地图文档。图层可以是地图文档中的图层或`.lyr`文件中的图层。要将图层添加到地图文档，您必须首先创建`Layer`类的实例，然后调用`AddLayer()`函数，传入新图层以及它应该放置的数据帧和定位规则。
- en: How to do it…
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to add a layer to a map document:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何将图层添加到地图文档：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主ArcMap工具栏中点击Python窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE37]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`), and assign the reference
    to a variable:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`），并将引用分配给变量：
- en: '[PRE38]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Get a reference to the `Crime` data frame, which is the first data frame in
    the list returned by `ListDataFrames()`. The `[0]` specified at the end of the
    code gets the first data frame returned from the `ListDataFrames()` method, which
    returns a list of data frames. Lists are zero-based, so to retrieve the first
    data frame we provide an index of `0`.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对`Crime`数据帧的引用，它是`ListDataFrames()`返回的列表中的第一个数据帧。代码末尾指定的`[0]`获取从`ListDataFrames()`方法返回的第一个数据帧，该方法返回一个数据帧列表。列表是从零开始的，因此要检索第一个数据帧，我们提供一个索引`0`。
- en: '[PRE39]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Create a `Layer` object that references a `.lyr` file.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个引用`.lyr`文件的`Layer`对象。
- en: '[PRE40]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Add the layer to the data frame:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图层添加到数据帧：
- en: '[PRE41]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Run the script. The `School_District.lyr` file will be added to the data frame,
    as shown in the following screenshot:![How to do it…](img/4445_03_11.jpg)
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。`School_District.lyr`文件将被添加到数据帧中，如下面的截图所示：![如何操作…](img/4445_03_11.jpg)
- en: How it works…
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: In the first two lines, we simply reference the `arcpy.mapping` module and get
    a reference to the currently active map document. Next, we create a new variable
    called `df`, which holds a reference to the `Crime` data frame. This is obtained
    through the `ListDataFrames()` function that returns a list of data frame objects.
    We then use list access to return the first item in the list, which is the `Crime`
    data frame. A new `Layer` instance, called `layer` is then created from a `layer`
    file stored on disk. This `layer` file is called `School_Districts.lyr`. Finally,
    we call the `AddLayer()` function, passing in the data frame where the layer will
    reside along with a reference to the layer, and a parameter indicating that we
    would like to use the **auto-arrange** feature. In addition to allowing ArcMap
    to automatically place the layer into the data frame using auto-arrange, you can
    also specifically place the layer at either the top or bottom of the data frame
    or a group layer using the `BOTTOM` or `TOP` position.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两行中，我们简单地引用了 `arcpy.mapping` 模块，并获取了对当前活动地图文档的引用。接下来，我们创建了一个名为 `df` 的新变量，它包含对
    `Crime` 数据框的引用。这是通过 `ListDataFrames()` 函数获得的，该函数返回一个数据框对象列表。然后我们使用列表访问返回列表中的第一个项目，即
    `Crime` 数据框。然后从磁盘上存储的 `layer` 文件创建了一个新的 `Layer` 实例，该文件名为 `School_Districts.lyr`。最后，我们调用
    `AddLayer()` 函数，传入层将驻留的数据框以及层的引用，以及一个参数表示我们希望使用 **自动排列** 功能。除了允许 ArcMap 使用自动排列自动将层放置到数据框中之外，你还可以使用
    `BOTTOM` 或 `TOP` 位置将层具体放置在数据框或组图层的顶部或底部。
- en: There's more…
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: In addition to providing the capability of adding a layer to a map document,
    `arcpy.mapping` also provides an `AddLayerToGroup()` function, which can be used
    to add a layer to a group layer. The layer can be added to the top or bottom of
    the group layer or you can use auto-arrange for placement. You may also add layers
    to an empty group layer. However, just as with regular layer objects, group layers
    cannot be added to a layer file.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供将层添加到地图文档的能力之外，`arcpy.mapping` 还提供了一个 `AddLayerToGroup()` 函数，可以用来将层添加到组图层中。层可以添加到组图层的顶部或底部，或者你可以使用自动排列进行放置。你还可以将层添加到空组图层中。然而，就像常规层对象一样，组图层不能添加到层文件中。
- en: Layers can also be removed from a data frame or group layer. `RemoveLayer()`
    is the function used to remove a layer or group layer. In the event that two layers
    have the same name, only the first is removed unless your script is set up to
    iterate.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据框或组图层中也可以移除层。`RemoveLayer()` 函数用于移除一个层或组层。如果两个层具有相同的名称，除非你的脚本设置为迭代，否则只移除第一个。
- en: Inserting layers into a map document
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将层插入到地图文档中
- en: The `AddLayer()` function can be used to add a layer to a map document either
    through auto-arrange or as the first or last layer in a data frame. However, it
    doesn't provide the control you need for inserting a layer in a specific position
    within a data frame. For this added control, you can use the `InsertLayer()` function.
    In this recipe, you will learn how to control the placement of layers added to
    a data frame.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`AddLayer()` 函数可以用来将层添加到地图文档中，无论是通过自动排列还是作为数据框中的第一层或最后一层。然而，它并不提供你在数据框中插入层所需的控制。为了获得这种额外的控制，你可以使用
    `InsertLayer()` 函数。在这个菜谱中，你将学习如何控制添加到数据框中的层的放置。'
- en: Getting ready
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `AddLayer()` function simply adds a layer into a data frame or a group layer,
    and places the layer automatically using auto-arrange or specific placement at
    the top or bottom of the data frame or group layer. The `InsertLayer()` method
    allows for more precise positioning of a new layer into a data frame or a group
    layer. It uses a reference layer to specify a location and the layer is added
    either before or after the reference layer, as specified in your code. Since `InsertLayer()`
    requires the use of a reference layer, you can't use this method on an empty data
    frame.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '`AddLayer()` 函数简单地将层添加到数据框或组图层中，并自动使用自动排列或指定放置在数据框或组图层的顶部或底部。`InsertLayer()`
    方法允许更精确地将新层放置到数据框或组图层中。它使用参考层来指定位置，并且层被添加到参考层之前或之后，具体取决于你的代码。由于 `InsertLayer()`
    需要使用参考层，因此你无法在空数据框上使用此方法。'
- en: This is illustrated in the following screenshot, where `District_Crime_Join`
    is the reference layer `and School_Districts` is the layer to be added. The `School_Districts`
    layer can be placed either before or after the reference layer using `InsertLayer()`.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这在上面的截图中有说明，其中`District_Crime_Join`是参考图层，而`School_Districts`是要添加的图层。使用`InsertLayer()`，`School_Districts`图层可以放在参考图层之前或之后。
- en: '![Getting ready](img/4445_03_1.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/4445_03_1.jpg)'
- en: How to do it…
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to use `InsertLayer()` to insert a layer into
    a data frame:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`InsertLayer()`函数将图层插入到数据框中：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从ArcMap主工具栏中点击Python窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE42]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`), and assign the reference
    to a variable:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`），并将引用分配给一个变量：
- en: '[PRE43]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Get a reference to the `Crime` data frame:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对`Crime`数据框的引用：
- en: '[PRE44]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Define the reference layer:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义参考图层：
- en: '[PRE45]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Define the layer to be inserted relative to the reference layer:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义相对于参考图层的插入图层：
- en: '[PRE46]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Insert the layer into the data frame:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图层插入到数据框中：
- en: '[PRE47]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Run the script. The `Crimes2009` feature class will be added as a layer to the
    data frame as seen in the following screenshot:![How to do it…](img/4445_03_12.jpg)
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。`Crimes2009`要素类将被添加到数据框中，如下截图所示：![如何操作…](img/4445_03_12.jpg)
- en: How it works…
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'After obtaining references to the `arcpy.mapping` module, current map document
    file, and the `Crime` data frame, our script then defines a reference layer. In
    this case, we use the `ListLayers()` function with a wildcard of `Burglaries*`,
    and the `Crime` data frame to restrict the list of layers returned to only one
    item. This item will be the **Burglaries in 2009** layer. We use Python list access
    with a value of `0` to retrieve this layer from the list and assign it to a `Layer`
    object. Next, we define the insert layer, which is a new `Layer` object that references
    the **Crimes2009** feature class from the `CityOfSanAntonio` geodatabase database.
    Finally, we call the `InsertLayer()` function passing in the data frame, reference
    layer, layer to be inserted, and keyword indicating that the layer to be inserted
    should be placed before the reference layer. This is illustrated in the following
    screenshot:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取到`arcpy.mapping`模块、当前地图文档文件和`Crime`数据框的引用后，我们的脚本定义了一个参考图层。在这种情况下，我们使用带有通配符`Burglaries*`的`ListLayers()`函数和`Crime`数据框来限制返回的图层列表只包含一个项目。这个项目将是**2009年入室盗窃**图层。我们使用Python列表访问，值为`0`，从列表中检索此图层并将其分配给一个`Layer`对象。接下来，我们定义插入图层，这是一个新的`Layer`对象，它引用来自`CityOfSanAntonio`地理数据库的**Crimes2009**要素类。最后，我们调用`InsertLayer()`函数，传入数据框、参考图层、要插入的图层以及一个关键字，表示要插入的图层应该放在参考图层之前。这在上面的截图中有说明：
- en: '![How it works…](img/4445_03_2.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理…](img/4445_03_2.jpg)'
- en: There's more…
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: You can also reposition a layer that is already in a data frame or a group layer.
    The `MoveLayer()` function provides the ability to reposition the layer within
    a data frame or a group layer. Movement of a layer must be within the same data
    frame. You can't move a layer from one data frame to another. Just as with `InsertLayer()`,
    `MoveLayer()` uses a reference layer to reposition the layer.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以重新定位数据框或组图层中已经存在的图层。`MoveLayer()`函数提供了在数据框或组图层内重新定位图层的功能。图层的移动必须在同一数据框内进行。你不能将图层从一个数据框移动到另一个数据框。与`InsertLayer()`类似，`MoveLayer()`使用参考图层来重新定位图层。
- en: Updating layer symbology
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新图层符号
- en: There may be times when you will want to change the symbology of a layer in
    a map document. This can be accomplished through the use of the `UpdateLayer()`
    function, which can be used to change the symbology of a layer as well as various
    properties of a layer. In this recipe, you will use the `UpdateLayer()` function
    to update the symbology of a layer.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候你可能想要更改地图文档中图层的符号。这可以通过使用`UpdateLayer()`函数来实现，它可以用来更改图层的符号以及图层的各种属性。在本例中，你将使用`UpdateLayer()`函数来更新图层的符号。
- en: Getting ready
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: The `arcpy.mapping` module also gives you the capability of updating layer symbology
    from your scripts by using the `UpdateLayer()` function. For example, you might
    want your script to update a layer's symbology from a graduated color to a graduated
    symbol, as illustrated in the following screenshot. `UpdateLayer()` can also be
    used to update various layer properties, but the default functionality is to update
    the symbology. Because `UpdateLayer()` is a robust function capable of altering
    both symbology and properties, you do need to understand the various parameters
    that can be supplied as an input.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`arcpy.mapping`模块还通过使用`UpdateLayer()`函数，使您能够在脚本中更新图层符号的功能。例如，您可能希望脚本将图层的符号从渐变色更新为渐变符号，如下面的截图所示。`UpdateLayer()`也可以用于更新各种图层属性，但默认功能是更新符号。因为`UpdateLayer()`是一个强大的函数，能够更改符号和属性，所以您确实需要了解可以提供的各种参数。'
- en: '![Getting ready](img/4445_03_3.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![准备中](img/4445_03_3.jpg)'
- en: How to do it…
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to update the symbology of a layer using `UpdateLayer()`:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`UpdateLayer()`更新图层的符号：
- en: Open `c:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。
- en: Click on the Python window button from the main ArcMap toolbar.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主ArcMap工具栏中点击Python窗口按钮。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE48]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`), and assign the reference
    to a variable:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`），并将引用分配给一个变量：
- en: '[PRE49]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Get a reference to the `Crime` data frame:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对`Crime`数据框的引用：
- en: '[PRE50]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Define the layer that will be updated:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将要更新的图层：
- en: '[PRE51]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Define the layer that will be used to update the symbology:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义用于更新符号的图层：
- en: '[PRE52]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Call the `UpdateLayer()` function to update the symbology:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`UpdateLayer()`函数来更新符号：
- en: '[PRE53]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Run the script. The **Crime Density by School District** layer will now be symbolized
    with graduated symbols instead of graduated colors, as shown in the following
    screenshot:![How to do it…](img/4445_03_13.jpg)
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。现在**按学区划分的犯罪密度**图层将使用渐变符号而不是渐变色进行符号化，如下面的截图所示：![如何操作…](img/4445_03_13.jpg)
- en: How it works…
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this recipe, we used the `UpdateLayer()` function to update the symbology
    of a layer. We didn't update any properties, but we'll do so in the next recipe.
    The `UpdateLayer()` function requires that you pass several parameters including
    a data frame, layer to be updated, and a reference layer from which the symbology
    will be pulled and applied to update the layer. In our code, the `updateLayer`
    variable holds a reference to the **Crime Density by School District** layer,
    which will have its symbology updated. The source layer from which the symbology
    will be pulled and applied to the update layer is a layer file (`CrimeDensityGradSym.lyr`)
    containing graduated symbols.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们使用了`UpdateLayer()`函数来更新图层的符号。我们没有更新任何属性，但在下一个菜谱中我们会这样做。`UpdateLayer()`函数要求您传递多个参数，包括数据框、要更新的图层以及一个引用图层，从该图层中提取符号并将其应用到更新图层。在我们的代码中，`updateLayer`变量持有对**按学区划分的犯罪密度**图层的引用，其符号将被更新。从该图层中提取符号并将其应用到更新图层的是包含渐变符号的图层文件（`CrimeDensityGradSym.lyr`）。
- en: To update the symbology for a layer, you must first ensure that the update layer
    and the source layer have the same geometry (point, line, and polygon). You also
    need to check that the attribute definitions are the same, in some cases, depending
    upon the renderer. For example, graduated color symbology and graduated symbols
    are based on a particular attribute. In this case, both the layers have polygon
    geometry and have a `CrimeDens` field containing crime density information.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新图层的符号，您必须首先确保更新图层和源图层具有相同的几何形状（点、线和多边形）。您还需要检查属性定义是否相同，在某些情况下，取决于渲染器。例如，渐变色符号和渐变符号基于特定的属性。在这种情况下，两个图层都具有多边形几何形状，并且有一个`CrimeDens`字段包含犯罪密度信息。
- en: Once we have references to both layers, we call the `UpdateLayer()` function,
    passing in the data frame and layers along with a fourth parameter that indicates
    that we're updating symbology only. We've supplied a `True` value as this fourth
    parameter, indicating that we only want to update the symbology and not properties.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了两个图层的引用，我们就调用`UpdateLayer()`函数，传递数据框和图层以及一个第四个参数，表示我们只更新符号。我们将`True`值作为第四个参数提供，表示我们只想更新符号，而不是属性。
- en: '[PRE54]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: There's more...
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: '`UpdateLayer()` also provides the ability to remove one layer and add another
    layer in its place. The layers can be completely unrelated, so there is no need
    to ensure the same geometry type and attribute field as you would when redefining
    the symbology of a layer. This switching of layers essentially executes a call
    to `RemoveLayer()` and then a call to `AddLayer()` as one operation. To take advantage
    of this functionality you must set the `symbology_only` parameter to `False`.'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`UpdateLayer()`还提供了删除一个图层并添加另一个图层以替换它的能力。这些图层可以是完全不相关的，因此不需要确保与重新定义图层符号时相同的几何类型和属性字段。这种图层切换本质上执行了一个对`RemoveLayer()`的调用，然后是一个对`AddLayer()`的调用作为一个操作。为了利用这个功能，您必须将`symbology_only`参数设置为`False`。'
- en: Updating layer properties
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新图层属性
- en: In the previous recipe, you learned how to update the symbology of a layer.
    As I mentioned, `UpdateLayer()` can also be used to update various properties
    of a layer, such as field aliases, query definitions, and others. In this recipe,
    you will use `UpdateLayer()` to alter various properties of a layer.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个菜谱中，您学习了如何更新图层的符号。正如我提到的，`UpdateLayer()`还可以用于更新图层的各种属性，如字段别名、查询定义等。在这个菜谱中，您将使用`UpdateLayer()`修改图层的各种属性。
- en: Getting ready
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can also use the `UpdateLayer()` function to update a limited number of
    layer properties. Specific layer properties, such as field aliases, selection
    symbology, query definitions, label fields, and others, can be updated using `UpdateLayer()`.
    A common scenario is to have a layer in many map documents that needs to have
    a specific property changed across all the instances of the layer in all map documents.
    To accomplish this, you will have to use ArcMap to modify the layer with the appropriate
    properties and save it to a layer file. This layer file then becomes the source
    layer, which will be used to update the properties of another layer called `update_layer`.
    In this recipe, you'll use ArcMap to alter the properties of a layer, save to
    a layer file (`.lyr`), and then use Python to write a script that uses `UpdateLayer()`
    to apply the properties to another layer.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`UpdateLayer()`函数更新有限数量的图层属性。特定的图层属性，如字段别名、选择符号、查询定义、标签字段等，可以使用`UpdateLayer()`进行更新。一个常见的场景是，在许多地图文档中有一个图层需要更改所有地图文档中该图层实例的特定属性。为了完成这项任务，您将不得不使用ArcMap修改具有适当属性的图层并将其保存到图层文件中。然后，该图层文件成为源图层，将用于更新另一个名为`update_layer`的图层的属性。在这个菜谱中，您将使用ArcMap修改图层的属性，将其保存到图层文件（`.lyr`），然后使用Python编写一个脚本，该脚本使用`UpdateLayer()`将属性应用到另一个图层。
- en: How to do it…
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Follow these steps to learn how to update layer properties with `UpdateLayer()`:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`UpdateLayer()`更新图层属性：
- en: Open c`:\ArcpyBook\Ch3\Crime_Ch3.mxd` with ArcMap. For this recipe, you will
    be working with the **Burglaries in 2009** feature class, as shown in the following
    screenshot:![How to do it…](img/4445_03_4.jpg)
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch3\Crime_Ch3.mxd`。对于这个菜谱，您将使用如图所示的**2009年入室盗窃**要素类，如下截图所示：![如何做…](img/4445_03_4.jpg)
- en: Double-click on the **Burglaries in 2009** feature class in the **Crime** data
    frame to display the **Layer Properties** window, as shown in the following screenshot.
    Each of the tabs represents properties that can be set for the layer:![How to
    do it…](img/4445_03_5_2.jpg)
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**Crime**数据帧中的**2009年入室盗窃**要素类以显示**图层属性**窗口，如图所示。每个选项卡代表可以设置图层的属性：![如何做…](img/4445_03_5_2.jpg)
- en: Click on the **General** tab and change the value in the **Layer Name** textbox
    to the name shown in the following screenshot:![How to do it…](img/4445_03_8_2.jpg)
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**常规**选项卡，将**图层名称**文本框中的值更改为如图所示的名称：![如何做…](img/4445_03_8_2.jpg)
- en: Click on the **Definition Query** tab and define the query shown in the following
    screenshot. You can use the **Query Builder** to define the query or simply type
    in the query:![How to do it…](img/4445_03_6_2.jpg)
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**定义查询**选项卡，定义如图所示的查询。您可以使用**查询构建器**定义查询或直接输入查询：![如何做…](img/4445_03_6_2.jpg)
- en: Change the alias of the `OFFDESC` field to `Offense Description` as shown in
    the preceding screenshot.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`OFFDESC`字段的别名更改为如图所示的前一个屏幕截图中的`Offense Description`。
- en: Click on the **Fields** tab in **Layer Properties** and make visible only those
    fields that are selected with a checkmark in the following screenshot. This is
    done by unchecking the fields you see in the following screenshot.![How to do
    it…](img/4445_03_7.jpg)
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**图层属性**中的**字段**选项卡上点击，只显示以下截图中所选中的带有勾选标记的字段。这是通过取消勾选以下截图中所看到的字段来完成的。![如何操作…](img/4445_03_7.jpg)
- en: Click on **OK** to dismiss the **Layer Properties** dialog.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**关闭**图层属性**对话框。
- en: In the data frame, right-click on **Burglaries – No Forced Entry** and select
    **Save as Layer File**.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据框中，右键单击**Burglaries – No Forced Entry**并选择**另存为图层文件**。
- en: Save the file as `c:\ArcpyBook\data\BurglariesNoForcedEntry.lyr`.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`c:\ArcpyBook\data\BurglariesNoForcedEntry.lyr`。
- en: Right-click on the **Burglaries – No Forced Entry** layer and select **Remove**.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**Burglaries – No Forced Entry**图层并选择**删除**。
- en: Using the **Add Data** button in ArcMap, add the **Crimes2009** feature class
    from the `CityOfSanAntonio` geodatabase. The `feature` class will be added to
    the data frame, as shown in the following screenshot:![How to do it…](img/4445_03_9.jpg)
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap中的**添加数据**按钮，从`CityOfSanAntonio`地理数据库中添加**Crimes2009**要素类。要素类将被添加到数据框中，如下截图所示：![如何操作…](img/4445_03_9.jpg)
- en: Open the Python window in ArcMap.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcMap中打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE55]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Reference the currently active document (`Crime_Ch3.mxd`) and assign the reference
    to a variable:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用当前活动文档（`Crime_Ch3.mxd`）并将引用分配给一个变量：
- en: '[PRE56]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Get a reference to the `Crime` data frame:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对`Crime`数据框的引用：
- en: '[PRE57]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Define the layer that will be updated:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将要更新的图层：
- en: '[PRE58]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Define the layer that will be used to update the properties:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将要用于更新属性的图层：
- en: '[PRE59]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Call the `UpdateLayer()` function to update the symbology:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`UpdateLayer()`函数来更新符号化：
- en: '[PRE60]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Run the script.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本。
- en: The **Crimes2009** layer will be updated with the properties associated with
    the `BurglariesNoForcedEntry.lyr` file. This is illustrated in the following screenshot.
    Turn on the layer to view the definition query that has been applied. You can
    also open the **Layer Properties** dialog to view the property changes that have
    been applied to the **Crimes2009** feature class:![How to do it…](img/4445_03_10.jpg)
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Crimes2009**图层将使用与`BurglariesNoForcedEntry.lyr`文件关联的属性进行更新。这将在以下截图中进行说明。打开图层以查看已应用的定义查询。您还可以打开**图层属性**对话框来查看已应用到**Crimes2009**要素类的属性更改：![如何操作…](img/4445_03_10.jpg)'
