["```py\ndata <- read.csv(\"mydata.csv\")\ntotals <- colSums(data)\nwrite.csv(totals, \"totals.csv\")\n```", "```py\nfibonacci_rec <- function(n) {\n    if (n <= 1) {\n        return(n)\n    }\n    return(fibonacci_rec(n - 1) + fibonacci_rec(n - 2))\n}\n```", "```py\nmicrobenchmark(fibonacci_rec(25), unit = \"ms\")\n## Unit: milliseconds\n##               expr      min    lq     mean   median       uq\n##  fibonacci_rec(25) 170.1014 179.8 191.4213 183.5275 197.5833\n##       max neval\n##  253.1433   100\n```", "```py\nfibonacci_seq <- function(n) {\n    if (n <= 1) {\n        return(n)\n    }\n    # (n+1)th element of this vector is the nth Fibonacci number\n    fib <- rep.int(NA_real_, n + 1)\n    fib[1] <- 0\n    fib[2] <- 1\n    for (i in 2:n) {\n        fib[i + 1] <- fib[i] + fib[i - 1]\n    }\n    return(fib[n + 1])\n}\n```", "```py\nmicrobenchmark(fibonacci_seq(25), unit = \"ms\")\n## Unit: milliseconds\n##               expr     min       lq      mean    median      uq\n##  fibonacci_seq(25) 0.03171 0.036133 0.0446416 0.0405555 0.04459\n##                        max neval\n##                   0.114714   100\n```"]