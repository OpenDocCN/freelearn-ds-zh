["```py\npip install numpy\n```", "```py\npip install simpy\n```", "```py\npip install qiskit\n```", "```py\nimport numpy as np\n```", "```py\nfrom qiskit.visualization import array_to_latex\n```", "```py\nx = np.array([[1j],\n             [2]])\narray_to_latex(x, prefix='x = ')\n```", "```py\nα = 1j\nprint('α =', α)\ny = α*x\narray_to_latex(y, prefix=' y = α*x =')\n```", "```py\nx = array_to_latex(x.transpose(), prefix='x^T = ')\n```", "```py\nx = array_to_latex(x.conjugate(), prefix='x^* = ')\n```", "```py\nx = array_to_latex(x.conjugate().transpose(), prefix='(x^*)^T = ')\n```", "```py\narray_to_latex(x, prefix='x = ')\n```", "```py\narray_to_latex(y, prefix='y = ')\n```", "```py\nprint(\"np.vdot(x, y) = \", np.vdot(x, y)\n```", "```py\nprint(\"Norm of vector x: {:.3f}\".format(np.linalg.norm(x)))\n```", "```py\nA = np.array([[1, 2],\n              [3, 1j]])\narray_to_latex(A, prefix='A = ')\n```", "```py\na = np.array([[1],\n             [1]])\narray_to_latex(a, prefix='a = ')\n```", "```py\narray_to_latex(A@ , prefix='A@  = ')\n```", "```py\nA = np.array([[1, 0],\n              [0, 1j]])\narray_to_latex(A, prefix='A = ')\n```", "```py\nB = np.array([[0, 1],\n              [1j, 0]])\narray_to_latex(B, prefix='B = ')\n```", "```py\narray_to_latex(A+B, prefix='A+B = ')\n```", "```py\nA = np.array([[1, 0],\n              [0, 1j]])\narray_to_latex(A, prefix='A = ')\n```", "```py\nB = np.array([[1, 1, 1j],\n              [1, -1, 0]])\narray_to_latex(B, prefix='B = ')\n```", "```py\narray_to_latex(A@B, prefix='A@B = ')\n```", "```py\nfrom numpy.linalg import inv\na = np.array([[1., 2.], [3., 4.]])\narray_to_latex(A, prefix='A =')\n```", "```py\narray_to_latex(inv(A), prefix='A^{-1} = ')\n```", "```py\nA = np.array([[1,2],\n              [3, 4]])\narray_to_latex(A, prefix='A =')\n```", "```py\nB = np.array([[0, 5],\n              [6, 7]])\narray_to_latex(B, prefix='B =')\n```", "```py\nC = np.kron(A,B)\narray_to_latex(C, prefix='A \\otimes B =')\n```", "```py\narray_to_latex(x, prefix='x = ')\n```", "```py\narray_to_latex(y, prefix='y = ')\n```", "```py\narray_to_latex(np.outer(x, y), prefix='np.outer(x, y) = ')\n```"]