["```py\nnavigate to my home\nnavigate to Oxford Street\n```", "```py\nimport spacy\nnlp = spacy.load(\"en_core_web_md\")\ndoc1 = nlp(\"navigate to my home\")\ndoc1.ents\n()\ndoc2 = nlp(\"navigate to Oxford Street\")\ndoc2.ents\n(Oxford Street,)\ndoc2.ents[0].label_\n'FAC'\nspacy.explain(\"FAC\")\n'Buildings, airports, highways, bridges, etc.'\n```", "```py\n{\n\"sentence\": \"I visited JFK Airport.\"\n\"entities\": {\n             \"label\": \"LOC\"\n             \"value\": \"JFK Airport\"\n}\n```", "```py\ntraining_data = [\n(\"I will visit you in Munich.\",  {\"entities\": [(20, 26, \"GPE\")]}),\n(\"I'm going to Victoria's house.\", {\n\n\"entities\": [\n\n        (13, 23, \"PERSON\"),  \n\n       (24, 29, \"GPE\")\n                                                         ]})\n(\"I go there.\", {\"entities\": []})\n]  \n```", "```py\nimport spacy\nfrom spacy.training import Example\nnlp = spacy.load(\"en_core_web_md\")\ndoc = nlp(\"I will visit you in Munich.\")\nannotations =  {\"entities\": [(20, 26, \"GPE\")]}\nexample_sent = Example.from_dict(doc, annotations)\n```", "```py\nnavigate/0 to/0 my/0 home/0\nnavigate/0 to/0 Oxford/FAC Street/FAC\n```", "```py\nother_pipes = [pipe for pipe in nlp.pipe_names if pipe != 'ner']\n nlp.disable_pipes(*other_pipes)\n```", "```py\nother_pipes = [pipe for pipe in nlp.pipe_names if pipe != 'ner']\n with nlp.disable_pipes(*other_pipes):\n   # training code goes here\n```", "```py\n    import random\n    import spacy\n    from spacy.training import Example\n    ```", "```py\n    nlp = spacy.load(\"en_core_web_md\")\n    ```", "```py\n    trainset = [\n                 (\"navigate home\", {\"entities\": [(9,13, \"GPE\")]}),\n                 (\"navigate to office\", {\"entities\": [(12,18, \"GPE\")]}),\n                 (\"navigate\", {\"entities\": []}),\n                 (\"navigate to Oxford Street\", {\"entities\": [(12, 25, \"GPE\")]})\n                 ]\n    ```", "```py\n    epochs = 20\n    ```", "```py\n    other_pipes = [pipe for pipe in nlp.pipe_names if pipe != 'ner']\n    with nlp.disable_pipes(*other_pipes):\n    ```", "```py\n         optimizer = nlp.create_optimizer()\n    ```", "```py\n         for i in range(epochs):\n            random.shuffle(trainset)\n    ```", "```py\n            example = Example.from_dict(doc, annotation)\n    ```", "```py\n           nlp.update([example], sgd=optimizer)\n    ```", "```py\n    ner = nlp.get_pipe(\"ner\")\n    ner.to_disk(\"navi_ner\")'\n    ```", "```py\n    navigate home\n    navigate to office\n    navigate\n    navigate to Oxford Street\n    ```", "```py\n    doc= nlp(\"navigate to my house\")\n    doc.ents\n    (house,)\n    doc.ents[0].label_\n    'GPE'\n    ```", "```py\n    doc= nlp(\"drive me to home\")\n    doc.ents\n    (home,)\n    doc.ents[0].label_\n    'GPE'\n    ```", "```py\n    doc= nlp(\"navigate to Soho\")\n    doc.ents\n    (Soho,)\n    doc.ents[0].label_\n    'GPE'\n    ```", "```py\n    doc = nlp(\"I watched a documentary about Lady Diana.\")\n    doc.ents\n    (Lady Diana,)\n    doc.ents[0].label_\n    'PERSON'\n    ```", "```py\nner = nlp.get_pipe(\"ner\")\nner.to_disk(\"navi_ner\")\n```", "```py\nimport spacy\nnlp = spacy.load('en', disable=['ner'])\nner = nlp.create_pipe(\"ner\")\nner.from_disk(\"navi_ner\")\nnlp.add_pipe(ner, \"navi_ner\")\nprint(nlp.meta['pipeline'])\n['tagger', 'parser', 'navi_ner']\n```", "```py\nMethylphenidate/DRUG is effectively used in treating children with epilepsy/DISEASE and ADHD/DISEASE.           \nPatients were followed up for 6 months.\nAntichlamydial/DRUG antibiotics/DRUG may be useful for curing coronary-artery/DISEASE disease/DISEASE.\n```", "```py\n    import random\n    import spacy\n    from spacy.training import Example\n    ```", "```py\n    train_set = [\n                    (\"Methylphenidate is effectively used in treating children with epilepsy and ADHD.\", {\"entities\": [(0, 15, \"DRUG\"), (62, 70, \"DISEASE\"), (75, 79, \"DISEASE\")]}),\n                    (\"Patients were followed up for 6 months.\", {\"entities\": []}),\n                    (\"Antichlamydial antibiotics may be useful for curing coronary-artery disease.\", {\"entities\": [(0, 26, \"DRUG\"), (52, 75, \"DIS\")]})\n    ]\n    ```", "```py\n    entities = [\"DIS\", \"DRUG\"]\n    ```", "```py\n    nlp = spacy.blank(\"en\")\n    ```", "```py\n    ner = nlp.add_pipe(\"ner\")\n    ner\n    <spacy.pipeline.ner.EntityRecognizer object at 0x7f54b50044c0>\n    ```", "```py\n    for ent in entities:\n       ner.add_label(ent)\n    ```", "```py\n    epochs = 25\n    ```", "```py\n    other_pipes = [pipe for pipe in nlp.pipe_names if pipe != 'ner']\n    with nlp.disable_pipes(*other_pipes):\n    ```", "```py\n      optimizer = nlp.begin_training()\n    ```", "```py\n      for i in range(25):\n        random.shuffle(train_set)\n        for text, annotation in train_set:\n          doc = nlp.make_doc(text)\n          example = Example.from_dict(doc, annotation)\n          nlp.update([example], sgd=optimizer)\n    ```", "```py\ndoc = nlp(\"I had a coronary disease.\")\ndoc.ents\n(coronary disease,)\ndoc.ents[0].label_\n'DIS'\n```", "```py\ndoc = nlp(\"I met you at Trump Tower.\")\ndoc.ents\n()\ndoc = nlp(\"I meet you at SF.\")\ndoc.ents\n()\n```", "```py\nfrom spacy import displacy\ndoc = nlp(\"I had a coronary disease.\")\ndisplacy.serve(doc, style=\"ent\")\n```", "```py\n    The antiviral drugs amantadine and rimantadine inhibit a viral ion channel (M2 protein), thus inhibiting replication of the influenza A virus.[86] These drugs are sometimes effective against influenza A if given early in the infection but are ineffective against influenza B viruses, which lack the M2 drug target.[160] Measured resistance to amantadine and rimantadine in American isolates of H3N2 has increased to 91% in 2005.[161] This high level of resistance may be due to the easy availability of amantadines as part of over-the-counter cold remedies in countries such as China and Russia,[162] and their use to prevent outbreaks of influenza in farmed poultry.[163][164] The CDC recommended against using M2 inhibitors during the 2005–06 influenza season due to high levels of drug resistance.[165]\n    ```", "```py\n    Pathogen\n    MedicalCondition\n    Medicine\n    ```", "```py\n    $wget\n    https://github.com/PacktPublishing/Mastering-spaCy/blob/main/Chapter07/data/corona.json\n    ```", "```py\n    import json\n    with open(\"data/corona.json\") as f:\n        data = json.loads(f.read())\n    TRAIN_DATA = []\n    for (text, annotation) in data:\n        new_anno = []\n        for anno in annotation[\"entities\"]:\n            st, end, label = anno\n            new_anno.append((st, end, label))\n        TRAIN_DATA.append((text, {\"entities\": new_anno}))\n    ```", "```py\n    import random\n    import spacy\n    from spacy.training import Example\n    ```", "```py\n    nlp = spacy.blank(\"en\")\n    ner = nlp.add_pipe(\"ner\")\n    print(ner)\n    print(nlp.meta)\n    ```", "```py\n    labels = ['Pathogen', 'MedicalCondition', 'Medicine'] \n    for ent in labels:\n       ner.add_label(ent)\n    print(ner.labels)\n    ```", "```py\n    epochs = 100\n    other_pipes = [pipe for pipe in nlp.pipe_names if pipe != 'ner'] \n    with nlp.disable_pipes(*other_pipes):\n      optimizer = nlp.begin_training()\n      for i in range(100):\n        random.shuffle(TRAIN_DATA)\n        for text, annotation in TRAIN_DATA:\n            doc = nlp.make_doc(text)\n            example = Example.from_dict(doc, annotation)\n            nlp.update([example], sgd=optimizer)\n    ```", "```py\n    from spacy import displacy\n    doc = nlp(\"One of the bacterial diseases with the highest disease burden is tuberculosis, caused by Mycobacterium tuberculosis bacteria, which kills about 2 million people a year.\")\n    displacy.serve(doc, style=\"ent\")\n    ```", "```py\n    doc2 = nlp(\"Pathogenic bacteria contribute to other globally important diseases, such as pneumonia, which can be caused by bacteria such as Streptococcus and Pseudomonas, and foodborne illnesses, which can be caused by bacteria such as Shigella, Campylobacter, and Salmonella. Pathogenic bacteria also cause infections such as tetanus, typhoid fever, diphtheria, syphilis, and leprosy. Pathogenic bacteria are also the cause of high infant mortality rates in developing countries.\")\n    displacy.serve(doc2, style=\"ent\")\n    ```"]