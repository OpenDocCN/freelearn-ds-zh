["```py\n> library('hflights')\n> write.csv(hflights, 'hflights.csv', row.names = FALSE)\n\n```", "```py\n> str(hflights)\n'data.frame':  227496 obs. of  21 variables:\n $ Year             : int  2011 2011 2011 2011 2011 2011 2011 ...\n $ Month            : int  1 1 1 1 1 1 1 1 1 1 ...\n $ DayofMonth       : int  1 2 3 4 5 6 7 8 9 10 ...\n $ DayOfWeek        : int  6 7 1 2 3 4 5 6 7 1 ...\n $ DepTime          : int  1400 1401 1352 1403 1405 1359 1359 ...\n $ ArrTime          : int  1500 1501 1502 1513 1507 1503 1509 ...\n $ UniqueCarrier    : chr  \"AA\" \"AA\" \"AA\" \"AA\" ...\n $ FlightNum        : int  428 428 428 428 428 428 428 428 428 ...\n $ TailNum          : chr  \"N576AA\" \"N557AA\" \"N541AA\" \"N403AA\" ...\n $ ActualElapsedTime: int  60 60 70 70 62 64 70 59 71 70 ...\n $ AirTime          : int  40 45 48 39 44 45 43 40 41 45 ...\n $ ArrDelay         : int  -10 -9 -8 3 -3 -7 -1 -16 44 43 ...\n $ DepDelay         : int  0 1 -8 3 5 -1 -1 -5 43 43 ...\n $ Origin           : chr  \"IAH\" \"IAH\" \"IAH\" \"IAH\" ...\n $ Dest             : chr  \"DFW\" \"DFW\" \"DFW\" \"DFW\" ...\n $ Distance         : int  224 224 224 224 224 224 224 224 224 ...\n $ TaxiIn           : int  7 6 5 9 9 6 12 7 8 6 ...\n $ TaxiOut          : int  13 9 17 22 9 13 15 12 22 19 ...\n $ Cancelled        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ CancellationCode : chr  \"\" \"\" \"\" \"\" ...\n $ Diverted         : int  0 0 0 0 0 0 0 0 0 0 ...\n\n```", "```py\n> system.time(read.csv('hflights.csv'))\n user  system elapsed \n 1.730   0.007   1.738\n\n```", "```py\n> colClasses <- sapply(hflights, class)\n> system.time(read.csv('hflights.csv', colClasses = colClasses))\n user  system elapsed \n 1.093   0.000   1.092\n\n```", "```py\n> library(microbenchmark)\n> f <- function() read.csv('hflights.csv')\n> g <- function() read.csv('hflights.csv', colClasses = colClasses,\n+                        nrows = 227496, comment.char = '')\n> res <- microbenchmark(f(), g())\n> res\nUnit: milliseconds\n expr       min        lq   median       uq      max neval\n f() 1552.3383 1617.8611 1646.524 1708.393 2185.565   100\n g()  928.2675  957.3842  989.467 1044.571 1284.351   100\n\n```", "```py\n> boxplot(res, xlab  = '',\n+   main = expression(paste('Benchmarking ', italic('read.table'))))\n\n```", "```py\n> library(sqldf)\n> system.time(read.csv.sql('hflights.csv'))\n user  system elapsed \n 2.293   0.090   2.384 \n> library(ff)\n> system.time(read.csv.ffdf(file = 'hflights.csv'))\n user  system elapsed \n 1.854   0.073   1.918 \n> library(bigmemory)\n> system.time(read.big.matrix('hflights.csv', header = TRUE))\n user  system elapsed \n 1.547   0.010   1.559\n\n```", "```py\n> library(data.table)\n> system.time(dt <- fread('hflights.csv'))\n user  system elapsed \n 0.153   0.003   0.158\n\n```", "```py\n> df <- as.data.frame(dt)\n\n```", "```py\n> is.data.frame(dt)\n[1] TRUE\n\n```", "```py\n> .read.csv.orig   <- function() read.csv('hflights.csv')\n> .read.csv.opt    <- function() read.csv('hflights.csv',\n+     colClasses = colClasses, nrows = 227496, comment.char = '',\n+     stringsAsFactors = FALSE)\n> .read.csv.sql    <- function() read.csv.sql('hflights.csv')\n> .read.csv.ffdf   <- function() read.csv.ffdf(file = 'hflights.csv')\n> .read.big.matrix <- function() read.big.matrix('hflights.csv',\n+     header = TRUE)\n> .fread           <- function() fread('hflights.csv')\n\n```", "```py\n> res <- microbenchmark(.read.csv.orig(), .read.csv.opt(),\n+   .read.csv.sql(), .read.csv.ffdf(), .read.big.matrix(), .fread(),\n+   times = 10)\n\n```", "```py\n> print(res, digits = 6)\nUnit: milliseconds\n expr      min      lq   median       uq      max neval\n .read.csv.orig() 2109.643 2149.32 2186.433 2241.054 2421.392    10\n .read.csv.opt() 1525.997 1565.23 1618.294 1660.432 1703.049    10\n .read.csv.sql() 2234.375 2265.25 2283.736 2365.420 2599.062    10\n .read.csv.ffdf() 1878.964 1901.63 1947.959 2015.794 2078.970    10\n .read.big.matrix() 1579.845 1603.33 1647.621 1690.067 1937.661    10\n .fread()  153.289  154.84  164.994  197.034  207.279    10\n\n```", "```py\n> df <- read.csv.sql('hflights.csv',\n+   sql = \"select * from file where Dest = '\\\"BNA\\\"'\")\n\n```", "```py\n> df <- read.csv.sql('hflights.csv',\n+   sql = \"select * from file where Dest = 'BNA'\",\n+   filter = 'tr -d ^\\\\\" ')\n\n```", "```py\n> system.time(read.csv.sql('hflights.csv'))\n user  system elapsed \n 2.117   0.070   2.191 \n> system.time(read.csv.sql('hflights.csv',\n+   sql = \"select * from file where Dest = '\\\"BNA\\\"'\"))\n user  system elapsed \n 1.700   0.043   1.745\n\n```", "```py\n> system.time(system('cat hflights.csv | grep BNA', intern = TRUE))\n user  system elapsed \n 0.040   0.050   0.082\n\n```", "```py\n> sqldf(\"attach 'hflights_db' as new\")\n\n```", "```py\n> read.csv.sql('hflights.csv',\n+   sql = 'create table hflights as select * from file',\n+   dbname = 'hflights_db')\n\n```", "```py\n> system.time(df <- sqldf(\n+   sql = \"select * from hflights where Dest = '\\\"BNA\\\"'\",\n+   dbname = \"hflights_db\"))\n user  system elapsed \n 0.070   0.027   0.097\n\n```", "```py\n> install.packages('RMySQL', type = 'source')\n\n```", "```py\n> library(RMySQL)\nLoading required package: DBI\n> con <- dbConnect(dbDriver('MySQL'),\n+   user = 'user', password = 'password', dbname = 'hflights_db')\n\n```", "```py\n> dbWriteTable(con, name = 'hflights', value = hflights)\n[1] TRUE\n> dbListTables(con)\n[1] \"hflights\"\n\n```", "```py\n> system.time(dbReadTable(con, 'hflights'))\n user  system elapsed \n 0.993   0.000   1.058\n\n```", "```py\n> system.time(dbGetQuery(con, 'select * from hflights'))\n user  system elapsed \n 0.910   0.000   1.158\n\n```", "```py\n> options('sqldf.connection' = con)\n> system.time(sqldf('select * from hflights'))\n user  system elapsed \n 0.807   0.000   1.014\n\n```", "```py\n> system.time(sqldf('SELECT * FROM hflights WHERE Dest = \"BNA\"'))\n user  system elapsed \n 0.000   0.000   0.281\n\n```", "```py\n> dbSendQuery(con, 'CREATE INDEX Dest_idx ON hflights (Dest(3));')\n\n```", "```py\n> system.time(sqldf('SELECT * FROM hflights WHERE Dest = \"BNA\"'))\n user  system elapsed \n 0.024   0.000   0.034\n\n```", "```py\n> options(sqldf.driver = 'SQLite')\n> sqldf(\"CREATE INDEX Dest_idx ON hflights(Dest);\",\n+   dbname = \"hflights_db\"))\nNULL\n> system.time(sqldf(\"select * from hflights where\n+   Dest = '\\\"BNA\\\"'\", dbname = \"hflights_db\"))\n user  system elapsed \n 0.034   0.004   0.036\n\n```", "```py\n> library(RPostgreSQL)\nLoading required package: DBI\n\n```", "```py\n> con <- dbConnect(dbDriver('PostgreSQL'), user = 'user',\n+   password = 'password', dbname = 'hflights_db')\n\n```", "```py\n> dbListTables(con)\ncharacter(0)\n> dbExistsTable(con, 'hflights')\n[1] FALSE\n\n```", "```py\n> dbWriteTable(con, 'hflights', hflights)\n[1] TRUE\n> system.time(dbReadTable(con, 'hflights'))\n user  system elapsed \n 0.590   0.013   0.921\n\n```", "```py\n> system.time(dbGetQuery(con,\n+ statement = \"SELECT * FROM hflights WHERE \\\"Dest\\\" = 'BNA';\"))\n user  system elapsed \n 0.026   0.000   0.082\n\n```", "```py\n# R CMD INSTALL --configure-args='--with-oci-lib=/usr/include/    \\\n>  --with-oci-inc=/usr/share/licenses/oracle-instantclient-basic' \\\n>  ROracle_1.1-11.tar.gz\n\n```", "```py\n> library(ROracle)\nLoading required package: DBI\n> con <- dbConnect(dbDriver('Oracle'), user = 'pmuser',\n+   password = 'oracle', dbname = '//192.168.0.16:1521/PDB1')\n\n```", "```py\n> summary(con)\nUser name:             pmuser \nConnect string:        //192.168.0.16:1521/PDB1 \nServer version:        12.1.0.1.0 \nServer type:           Oracle RDBMS \nResults processed:     0 \nOCI prefetch:          FALSE \nBulk read:             1000 \nStatement cache size:  0 \nOpen results:          0 \n\n```", "```py\n> dbListTables(con)\n[1] \"TICKER_G\" \"TICKER_O\" \"TICKER_A\" \"TICKER\" \n\n```", "```py\n> dbWriteTable(con, 'hflights', hflights)\n[1] TRUE\n> system.time(dbReadTable(con, 'hflights'))\n user  system elapsed \n 0.980   0.057   1.256\n\n```", "```py\n> system.time(dbGetQuery(con,\n+ \"SELECT * FROM \\\"hflights\\\" WHERE \\\"Dest\\\" = 'BNA'\"))\n user  system elapsed\n 0.046   0.003   0.131\n\n```", "```py\n> dbSendQuery(con, 'CREATE INDEX Dest_idx ON \"hflights\" (\"Dest\")')\nStatement:            CREATE INDEX Dest_idx ON \"hflights\" (\"Dest\") \nRows affected:        0 \nRow count:            0 \nSelect statement:     FALSE \nStatement completed:  TRUE \nOCI prefetch:         FALSE \nBulk read:            1000 \n> system.time(dbGetQuery(con, \"SELECT * FROM \\\"hflights\\\"\n+ WHERE \\\"Dest\\\" = 'BNA'\"))\n user  system elapsed \n 0.023   0.000   0.069\n\n```", "```py\n[MySQL]\nDescription     = ODBC Driver for MySQL\nDriver          = /usr/lib/libmyodbc.so\nSetup           = /usr/lib/libodbcmyS.so\nFileUsage       = 1\n\n```", "```py\n[hflights]\nDescription     = MySQL hflights test\nDriver          = MySQL\nServer          = localhost\nDatabase        = hflights_db\nPort            = 3306\nSocket          = /var/run/mysqld/mysqld.sock\n\n```", "```py\n> library(RODBC)\n> con <- odbcConnect(\"hflights\", uid = \"user\", pwd = \"password\")\n\n```", "```py\n> system.time(hflights <- sqlQuery(con, \"select * from hflights\"))\n user  system elapsed \n 3.180   0.000   3.398\n\n```", "```py\n> sqlDrop(con, 'hflights')\n> sqlSave(con, hflights, 'hflights')\n\n```", "```py\n> close(con)\n\n```", "```py\n> library(dbConnect)\nLoading required package: RMySQL\nLoading required package: DBI\nLoading required package: gWidgets\n> DatabaseConnect()\nLoading required package: gWidgetsRGtk2\nLoading required package: RGtk2\n\n```", "```py\n> library(devtools)\n> install_github('bigrquery', 'hadley')\n\n```"]