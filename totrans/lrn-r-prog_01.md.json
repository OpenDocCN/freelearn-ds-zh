["```py\nx <- rnorm(100) y <- 2 + 3 * x + rnorm(100) * 0.5 str(x) \n##  num [1:100] -0.4458 -1.2059 0.0411 0.6394 -0.7866 ... \nstr(y) \n##  num [1:100] -0.022 -1.536 2.067 4.348 -0.295 ... \n\n```", "```py\nmodel1 <- lm(y ~ x) \n\n```", "```py\nmodel1 \n##  \n## Call: \n## lm(formula = y ~ x) \n##  \n## Coefficients: \n## (Intercept)            x   \n##       2.051        2.973 \n\n```", "```py\nsummary(model1) \n##  \n## Call: \n## lm(formula = y ~ x) \n##  \n## Residuals: \n##      Min       1Q   Median       3Q      Max  \n## -1.14529 -0.30477  0.03154  0.30042  0.98045  \n##  \n## Coefficients: \n##             Estimate Std. Error t value Pr(>|t|)     \n## (Intercept)  2.05065    0.04533   45.24   <2e-16 *** \n## x            2.97343    0.04525   65.71   <2e-16 *** \n## --- \n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n##  \n## Residual standard error: 0.4532 on 98 degrees of freedom \n## Multiple R-squared:  0.9778, Adjusted R-squared:  0.9776 \n## F-statistic:  4318 on 1 and 98 DF,  p-value: < 2.2e-16 \n\n```", "```py\nplot(x, y, main = \"Simple linear regression\") \nabline(model1$coefficients, col = \"blue\") \n\n```"]