- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exploring the IBM Quantum Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Quantum computing has been growing in popularity over the past few years, most
    recently since IBM released the first commercially available quantum computer
    on the cloud back in May 2016, back then referred to as the IBM Quantum Experience,
    now rebranded as the **IBM Quantum Platform** (**IQP**). This release was the
    first of its kind, hosted on the cloud and providing the world with the opportunity
    to experiment with quantum devices for free. The platform includes a **user interface**
    (**UI**) that allows anyone to run experiments on a real quantum computer. And
    just recently added was direct access to all documentation and learning resources,
    such as tutorials and courses, right from the platform, making it easier to run
    circuits as you learn.
  prefs: []
  type: TYPE_NORMAL
- en: 'The goal of this chapter is to first introduce you to the IBM Quantum Platform,
    which contains everything you need to learn how to create and run quantum circuits
    on real quantum systems. It also provides you with courses and tutorials to experiment
    with existing quantum algorithms and applications. The IBM Quantum Platform is
    comprised of the following three applications, which you can see listed in the
    Application Switcher located at the top-right corner of the platform (see *Figure
    1.1*):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Platform**: Lists all the jobs and systems (dashboard, systems, and jobs)
    you have access to on the platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Documentation**: Provides a list of resources to help you get started. Resources
    include how to set up your development environment and build/test/execute quantum
    circuits on quantum systems. It also provides API documentation of the latest
    version of the **Quantum Information Science Kit** (**Qiskit**) open-source code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Learning**: Provides quantum courses and tutorials for users of all different
    levels. These cover topics such as the basics of quantum computing, variational
    algorithm design, and a new addition: quantum-safe cryptography!'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can select and switch between each of these applications using the top-left
    applications icon next to your avatar, the switcher is shown in the following
    figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a phone  Description automatically generated](img/B18420_01_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.1: Application selection'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will help you understand what actions and information are available
    in each application, each of which we will also cover in more detail in later
    chapters, to give you an overview of where everything is. This includes creating
    circuits, running the circuits on both simulators and real quantum devices, viewing
    information about your profile and available backend systems, and visualizing
    the results of your experiments. So, let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with the IBM Quantum Platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the documentation to quickly start up
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding IBM quantum tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this book, it is expected that you will have some experience in developing
    with Python and, although it isn’t necessary, some basic knowledge of classical
    and quantum mechanics would help. Most of the information will be provided with
    each chapter, so if you do not have knowledge of classical or quantum mechanics,
    we will cover what you need to know here. For those of you who have existing knowledge
    in this area, the information here will serve as a useful refresher.
  prefs: []
  type: TYPE_NORMAL
- en: The Python editor used throughout this book is **Jupyter Notebook**. You can,
    of course, use any Python editor of your choice. This may include **Watson Studio**,
    **PyCharm**, **Spyder**, **Visual Studio Code**, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the source code used throughout this book: [https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition](https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition%0D%0A)'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with the IBM Quantum Platform
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As mentioned earlier, the IBM Quantum Platform application is your high-level
    view of what you will normally see once you log in. It’s good to mention here
    that there may be updates to the tools as the platform evolves with the technology
    after the time of writing, so some visualizations and results may vary. The platform
    aggregates multiple views that you can see, and this helps you to get an idea
    as to what machines you have access to and what jobs you have pending, running,
    or completed.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will go through the steps to get registered. Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: Registering to the IBM Quantum Platform
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will get registered and explain what happens in the background
    once you sign up to the IBM Quantum Platform for the first time. This will help
    you understand what features and configurations are prepared and available to
    you upon registration.
  prefs: []
  type: TYPE_NORMAL
- en: 'To register, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step is to head over to the IBM Quantum Platform site at the following
    link: [https://quantum.ibm.com/](https://quantum.ibm.com/%0D%0A)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should see the login screen, as shown in *Figure 1.2*. Your individual
    situation will determine how to proceed from there:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you already have an account or are already signed in, you can sign in and
    skip this section.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If you have not registered, then you can select the login method of your choice
    from the sign-in screen. As you can see, you can register using various methods,
    such as with your **IBMid**, **Google**, **GitHub**, **Twitter**, **LinkedIn**,
    or by email.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you do not have any of the account types listed, then you can simply register
    for an **IBMid** account and use that to sign in:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.2: The IBM Quantum Platform sign-in page'
  prefs: []
  type: TYPE_NORMAL
- en: Once you select the login method of your choice, you will see the login screen
    for that method. Simply fill out the information, if it’s not already there, and
    select **login**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once signed in, you will land on the IBM Quantum Platform home page. This is
    the first page you will see each time you log in:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.3: The IBM Quantum home page'
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have registered with IBM Quantum Platform, let’s take a quick tour
    and delve into some features that make up the home page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note first that across the top of the Platform application page you have three
    tabs: **Dashboard**, **Systems**, and **Jobs**. Each of these provides various
    information for you, which we will cover in detail in the following sections.
    But before we get started, let’s look at the **Manage account** settings view.'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Manage account settings view
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s start by reviewing the home page, specifically the **Manage account**
    settings view. You can access your user account and settings view via your avatar,
    located at the top right of the page (as visible in *Figure 1.3*).
  prefs: []
  type: TYPE_NORMAL
- en: 'This view provides **profile settings** of the logged-in user, as illustrated
    in *Figure 1.4*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.4: The Manage account settings view'
  prefs: []
  type: TYPE_NORMAL
- en: This view also provides actions regarding your profile such as setting your
    password, email, API token, and in-app notification settings.
  prefs: []
  type: TYPE_NORMAL
- en: The API token is used by the provider to determine which systems you have provisioned
    for your account. This is autogenerated when you use the platform; however, should
    you ever decide to run a notebook off the platform, then you will need to save
    your API token locally. We describe how to save and load your account details
    locally in *Chapter 7*, *Programming with Qiskit and the Qiskit Runtime Service*.
  prefs: []
  type: TYPE_NORMAL
- en: Below the **Manage account settings** is the **Instances** list, which allows
    you to see which instances you are a member of. Instances are used to determine
    which IBM Quantum systems you have access to based on which hub, project, or group
    you belong to, as illustrated in *Figure 1.4*. Also, below the list of instances
    is the option **Delete Account**, which will also remove all your account data.
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.5: Instances and Delete Account views'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, at the bottom of the **Profile** settings you will see your **Notification**
    settings, which you can enable based on your preferences.
  prefs: []
  type: TYPE_NORMAL
- en: Getting familiar with the Compute resources view
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Compute resources** view provides you with a list of all the various quantum
    services available to you, which include the quantum systems. You can see all
    the available services by selecting the grid icon, located at the top left of
    the IBM Quantum Platform view, and selecting the **Platform** tab.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the **Compute resources** page is open you will see a grouping of systems
    via a pull-down selector highlighted by a box in the following figure. The groupings
    are of systems that you have access to and a list of all systems including those
    systems reserved for premium users, as illustrated in *Figure 1.6*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.6: The Compute resources view'
  prefs: []
  type: TYPE_NORMAL
- en: The view contains all the systems available to you.
  prefs: []
  type: TYPE_NORMAL
- en: Each card (or row if viewing in table mode) represents a different quantum system
    available to you and details that describe each system. In the previous figure
    you can see it lists out detailed specifications. Systems with a lock icon next
    to them are those reserved for premium users such as those who are active members
    of the IBM Quantum Network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The details you can see for each system are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Qubits**, which is the number of qubits available'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Error Per Layered Gate** (**EPLG**), which is the latest metric used to measure
    the quality and performance of a quantum system'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Circuit layer operations per second** (**CLOPS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Status**, which is the availability of the system (Online, Maintenance, etc.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Total pending jobs**, which is the number of jobs waiting to run on the system
    (queue)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processor type**, which is the type and version of the processor of the system'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This information allows you to visualize all the systems and their metrics so
    you can select an ideal system to run your quantum circuits.
  prefs: []
  type: TYPE_NORMAL
- en: 'The second selector is to view **All Instances**; this lists all the quantum
    systems that are available to you, including the open systems as well as premium
    quantum systems, if you are a quantum network member. To view the list as a table,
    rather than cards, you can select table view (located just above the system selector)
    as illustrated in *Figure 1.7*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.7: A table view of all available systems – shows all available quantum
    systems, including premium systems'
  prefs: []
  type: TYPE_NORMAL
- en: In this view, same as the **Your resources** view, each row represents details
    about each quantum system’s properties such as the status, processor type, number
    of qubits, quantum volume, and **CLOPS**.
  prefs: []
  type: TYPE_NORMAL
- en: CLOPS is one of the measurements that is used to determine the performance of
    a quantum computer. It measures the speed at which a quantum processor can execute
    layers of a circuit, similar to the parameterized model circuits used to measure
    the quantum volume of a quantum computer.
  prefs: []
  type: TYPE_NORMAL
- en: The names of the systems do not represent the location of the device; the city
    names originated from where IBM Research has a lab and have since expanded to
    include cities where IBM has offices around the world. At the time of writing,
    the IBM Quantum systems reside in many locations around the world. The largest
    groups are located at the IBM Research Lab in Yorktown Heights and in Poughkeepsie,
    NY. There are now many on-prem systems in many locations, such as IBM Ehningen,
    Germany (via a partnership with Fraunhofer-Gesellschaft), and University of Tokyo.
    The first on-prem system that is not on an IBM site was recently installed in
    Cleveland Clinic, with many more scheduled to be installed in other countries
    such as Spain and South Korea.
  prefs: []
  type: TYPE_NORMAL
- en: Above the rows you have a few features; one is a search window to help you find
    a specific system and next to that is a filter option, which allows you to narrow
    down the visible list of systems based on provider, status, or processor types.
    You can also see them as cards if you select the card selection on the top right
    of the table.
  prefs: []
  type: TYPE_NORMAL
- en: To view further details of each quantum system, let’s select one of the systems;
    in this case I will select **ibm-brisbane**, as seen in *Figure 1.8*. Keep in
    mind that systems will continue to evolve and may be replaced after the time of
    writing this, so if a system is mentioned in this book that you do not see, don’t
    worry; just select any that you like as the details you see will vary per device.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18420_01_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.8: The device details view (truncated view of all 127 qubits)'
  prefs: []
  type: TYPE_NORMAL
- en: In this view you can examine each system in more detail. Each quantum system
    has a set of properties that you have access to view. This helps greatly if there
    are some constraints or requirements to the type of system you wish to run your
    quantum programs on—for example, the connectivity between qubits, the error rate
    of each qubit and its physical connection, the basis gates, and other details
    that we will cover in detail in various chapters throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: This view also allows you to download a CSV file that contains all these properties
    so you can analyze them using any analysis tools you wish. To download the properties,
    simply click on the download icon located below the **Last calibrated** time in
    the **Calibration data** section.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll also notice that there are two pull-down options available just above
    the qubit map of the system, where one has a set of options for **Qubit** and
    another for the **Connection** between the qubits. The options provide you with
    the ability to see what properties you wish to have rendered for each qubit and
    connection, respectively. In the qubit options you can select to see the details
    of each qubit, such as its frequency, T1/T2 times, anharmonicity, and readout
    assignment error. The connection options allow you to view the CNOT error and
    gate time (in nanoseconds) between each physically connected qubit.
  prefs: []
  type: TYPE_NORMAL
- en: There are of course other ways to obtain these properties programmatically using
    Qiskit code, but we will get to that later in this book. For now, this is just
    for awareness, so in later chapters when you learn more about them, you’ll know
    where the information is located.
  prefs: []
  type: TYPE_NORMAL
- en: We are now familiar with the systems, and their details, on which we will run
    our quantum circuits; let’s see how we can view the results after the quantum
    systems have completed their job.
  prefs: []
  type: TYPE_NORMAL
- en: Learning about pending and latest jobs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When you send a circuit to run on a simulator or a quantum system you will
    want to know the status of the circuit. This is where the **Jobs** view comes
    in handy. To get to the Jobs view, go back to the grid icon located at the top
    left of the dashboard and select **Jobs** from the list of views. Once the view
    is open you will see a table, as shown in *Figure 1.9*, that contains a complete
    list of jobs that are pending completion on either the simulators or backend devices.
    You can use this view to see the status of your circuit or program, the job ID,
    which provider and service were used, and other details for each job you submitted:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.9: The Jobs view list'
  prefs: []
  type: TYPE_NORMAL
- en: The job ID is listed so that you can call back the details of that job later.
    Each job is initially sorted by creation date but can also be filtered by **Status**
    (completed, pending, or returned), **Session Id** (the unique ID for the session
    the job was run in), **Compute resource** (which simulator or quantum system was
    used), or **Usage** (time indicating how long the job took to run).
  prefs: []
  type: TYPE_NORMAL
- en: Details regarding job objects will be covered in *Chapter 7*, *Programming with
    Qiskit*.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you have learned where to find information about your experiments,
    and hardware details about the quantum devices from the various views available
    on the IBM Quantum Platform. There are views that also provide you with the tools
    you need to start programming and running circuits on a quantum computer, in an
    easy-to-use format that does not include any installation of software.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section we will review what the Documentation application provides
    you to help get started using the systems we just learned in this section.
  prefs: []
  type: TYPE_NORMAL
- en: Using the Documentation to quickly start up
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Earlier in this chapter we covered what systems you have access to and details
    about each system. In this section we will review the Documentation application,
    which will provide you with information and guidance on how to get yourself up
    and running and executing quantum circuits on a quantum computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, from the application selector, select the **Documentation** application.
    This will open the **Documentation** page as illustrated in *Figure 1.10*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.10: Documentation application view'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s look across the top of the page where you will see seven shortcuts each
    to help you get started. They are described as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Overview**: The view that you see when you first get to the documentation
    page that has all the options'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Start**: Directions on how to get your local system set up and install Qiskit'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Build**: Instructions on how to design and develop your first quantum circuits'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Transpile**: How to optimize the mapping of your circuit onto the selected
    device to ensure the highest quality and performance'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Verify**: As the title indicates, how to test, verify, and evaluate your
    quantum circuits'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Run**: Executing your tested quantum circuits on the quantum systems'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'API reference: Quick links to key documentation on common objects and functions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Below the **Get started with Qiskit** and **API** **Reference** section of the
    page, you will also see the various tutorials available for those of you who already
    have your system set up and want to dive right into running quantum algorithms
    on a quantum computer. Each tile represents a different tutorial and they are
    independent of each other so you can pick whichever you’d like to get started
    on without worrying about any dependency on another tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know where to find the documentation needed to help you get up
    and running quickly, let’s continue and explore the tools you can use to generate
    quantum circuits using the IBM Quantum Composer.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the IBM Quantum tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Understanding the systems and knowing the status of our circuit jobs is great,
    but knowing how to create these circuits and run them is clearly an important
    step. In this section we will review both tools that are available to you. Using
    the application switcher, select the last application listed, **Learning**.
  prefs: []
  type: TYPE_NORMAL
- en: The following figure, *Figure 1.11* is the IBM Quantum Learning application
    view. This view provides you with a one-stop shop of resources. At first you will
    see that at the top, it highlights the latest course that was released. At the
    time of writing this, it was the **Fundamentals of quantum algorithms**. Below
    that is the catalog of courses available to you on the platform with topics ranging
    from the basics of quantum information science to quantum-safe cryptography.
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.11: IBM Quantum Learning application view'
  prefs: []
  type: TYPE_NORMAL
- en: 'Below the courses you will see three other sections. The first is the list
    of tutorials. This is the same list you saw in the previous section. It is duplicated
    in this section for completeness as it is of course the learning application.
    And at the bottom is the **Resources** section, which lists other helpful learning
    resources, as illustrated in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_01_12.png)![A
    screenshot of a computer  Description automatically generated](img/B18420_01_13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.12: Courses, Tutorials, Tools, and Resources sections.'
  prefs: []
  type: TYPE_NORMAL
- en: We have two ways to launch each tool. First, as illustrated in *Figure 1.12*,
    you can launch each tool by clicking on it within the **Tools** section. The second
    way is by selecting it from the top of the page as illustrated in *Figure 1.11*.
  prefs: []
  type: TYPE_NORMAL
- en: The Composer is a graphical UI where you can create your quantum circuits by
    dragging and dropping quantum gates onto a quantum circuit. The Composer also
    provides various visual representations of the results such as the state of the
    circuit and the expected probability measurements. This makes the Composer a fantastic
    tool to help you get a visual, and perhaps intuitive, understanding of how the
    various quantum gates and properties affect the results of both the qubit itself
    and the overall quantum state. This is a tool I highly recommend you start with
    as it contains some very nice introductory tutorials that you can follow to create
    your first quantum circuit and run it on an actual quantum computer. We will create
    a simple circuit and run it on a quantum computer in *Chapter 2*, *Creating Quantum
    Circuits with IBM Quantum Composer*.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are done with our tour of the IBM Quantum tools, we’re ready to
    get to work. In the following chapters, we will delve further into the Composer
    and progress to writing quantum programs.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we reviewed the IBM Quantum Platform, which provides plenty
    of information to help you get a good lay of the land. You now know where to find
    information regarding your profile, details for each of the devices you have available,
    the status of each device, as well as the status and results of your experiments.
    Some views might look a little different based on the level of provider you have.
    I have chosen to use the free open provider throughout this book so all users
    can see the general views. If you are a premium or partner user, then your views
    may have more information or options that are specific to your provider. Details
    about those differences are outside the scope of this book; however, you can check
    with your IBM Quantum representative for details about the additional views and
    roles.
  prefs: []
  type: TYPE_NORMAL
- en: Knowing where to find this information will help you monitor your experiments
    and enable you to understand the state of your experiments by reviewing your backend
    services, monitoring queue times, and viewing your results queues.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn about the Composer in detail and run our
    very first quantum circuit.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which Application contains your API token?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which device in your resources list has the fewest qubits?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which Application would provide you a qubit map of a quantum system?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Join us on Discord
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/3FyN1](Chapter_1.xhtml)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code2617625996838265931.png)'
  prefs: []
  type: TYPE_IMG
