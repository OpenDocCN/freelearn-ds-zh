- en: Chapter 15. Boosting Productivity
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第15章。提高生产力
- en: In the previous chapter, we learned to use R to extract information from web
    pages. To understand how this works, we learned several languages such as HTML,
    CSS, and XPath. In fact, R has much more to offer than just a statistical computing
    environment. The R community provides tools for everything from data collection,
    to data manipulation, statistical modeling, visualization, and all the way to
    reporting and presentation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，我们学习了如何使用R从网页中提取信息。为了理解其工作原理，我们学习了HTML、CSS和XPath等几种语言。实际上，R提供的不仅仅是统计计算环境。R社区提供了从数据收集、数据操作、统计建模、可视化到报告和演示等一切工具。
- en: 'In this chapter, we will learn about a number of packages that boost our productivity.
    We''ll review several languages we learned throughout this book and get to know
    another one: markdown. We''ll see how R and markdown can be combined to produce
    powerful dynamic documents. More specifically, we''ll:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解一些提高我们生产力的软件包。我们将回顾本书中我们学习过的几种语言，并了解另一种：Markdown。我们将看到R和Markdown如何结合以生成强大的动态文档。具体来说，我们将：
- en: Get to know markdown and R Markdown
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Markdown和R Markdown
- en: Embed tables, charts, diagrams and interactive plots
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌入表格、图表、图表和交互式图表
- en: Create interactive apps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建交互式应用程序
- en: Writing R Markdown documents
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写R Markdown文档
- en: The work of data analysts is more than putting data into models and drawing
    some conclusions. We usually need to go through a complete workflow from data
    collecting, to data cleaning, visualization, modeling, and finally writing a report
    or making a presentation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析师的工作不仅仅是将数据放入模型并得出一些结论。我们通常需要经历一个完整的工作流程，从数据收集、数据清洗、可视化、建模，最后编写报告或进行演示。
- en: 'In the previous chapters, we improved our productivity by learning the R programming
    language from different aspects. In this chapter, we will further boost our productivity
    by focusing on the final step: reporting and presentation. In the following sections,
    we''ll learn a very simple language to write documents: markdown.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们从不同方面学习了R编程语言，从而提高了我们的生产力。在本章中，我们将通过关注最后一步：报告和演示，进一步提升我们的生产力。在接下来的几节中，我们将学习一种非常简单的语言来编写文档：Markdown。
- en: Getting to know markdown
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解Markdown
- en: Throughout this book, we have already learned a bunch of languages. These languages
    are very different and may confuse beginners. But if you keep in mind their purposes,
    it won't be hard to use them together. Before learning markdown, we'll take a
    quick review of the languages we learned in the previous chapters.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的整个过程中，我们已经学习了许多语言。这些语言各不相同，可能会让初学者感到困惑。但如果你记住它们的目的，使用起来就不会太难。在学习Markdown之前，我们将快速回顾一下前几章中我们学习过的语言。
- en: 'The first is, of course, the R programming language. A programming language
    is designed for solving problems. R is specially designed and tailored for statistical
    computing and is empowered by the community to be capable of doing many other
    things; the example is shown as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第一当然是R编程语言。编程语言是为了解决问题而设计的。R专门设计和定制用于统计计算，并由社区赋予能力，能够做许多其他事情；以下是一个示例：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In [Chapter 12](ch12.html "Chapter 12. Data Manipulation"), *Data Manipulation*,
    we learned SQL to query relational databases. It is designed to be a programming
    language but is used to express relational database operations such as inserting
    or updating records and querying data:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第12章](ch12.html "第12章。数据操作")《数据操作》中，我们学习了SQL来查询关系型数据库。它被设计成一种编程语言，但用于表达关系型数据库操作，如插入或更新记录和查询数据：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The R programming language is executed by the R interpreter and SQL is executed
    by a database engine. However, we also learned languages that are not designed
    for execution but to represent data. Perhaps the most commonly used data representation
    languages in programming world are JSON and XML:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: R编程语言由R解释器执行，SQL由数据库引擎执行。然而，我们也学习了不是为执行而设计，而是为了表示数据的语言。在编程世界中，最常用的数据表示语言可能是JSON和XML：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The specification of JSON defines elements such as value `(1, "text")`, array
    (`[]`), and object (`{}`), and so on, while XML does not provide type support
    but allows the usage of attributes and nodes:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: JSON的规范定义了诸如值`(1, "text")`、数组`[]`和对象`{}`等元素，而XML不提供类型支持，但允许使用属性和节点：
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the previous chapter on web scraping, we learned the basics of HTML which
    is quite similar to XML. Most web pages are written in HTML due to its flexible
    representation of contents and layouts:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章关于网络爬取的内容中，我们学习了 HTML 的基础知识，它与 XML 非常相似。由于 HTML 在内容表示和布局方面的灵活性，大多数网页都是用
    HTML 编写的：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this chapter, we'll learn markdown, a lightweight markup language with a
    syntax designed for plain text formatting and which can be converted to many other
    document formats. After getting familiar with markdown, we'll go further with
    R Markdown, which is designed for dynamic documents and is actively supported
    by RStudio and the rest of the R community. The format is so simple that we can
    use any plain text editor to write markdown documents.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习 Markdown，这是一种轻量级的标记语言，其语法专为纯文本格式化设计，并且可以转换为许多其他文档格式。熟悉 Markdown 后，我们将进一步学习
    R Markdown，它专为动态文档设计，并得到 RStudio 及其社区的大力支持。该格式非常简单，我们可以使用任何纯文本编辑器来编写 Markdown
    文档。
- en: 'The following code block shows its syntax:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码块显示了其语法：
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The syntax is extremely simple: Some characters are devoted to representing
    different formats. In a plain text editor, we cannot preview the formats as it
    indicates. But when converted to a HTML document, the texts will be formatted
    according to the syntax.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 语法极其简单：一些字符用于表示不同的格式。在纯文本编辑器中，我们无法预览这些格式，正如它所指示的那样。但是当转换为 HTML 文档时，文本将根据语法进行格式化。
- en: 'The following screenshot shows the preview of a markdown document in Abricotine
    ([http://abricotine.brrd.fr/](http://abricotine.brrd.fr/)), an open-source markdown
    editor with live preview:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 Markdown 文档在 Abricotine ([http://abricotine.brrd.fr/](http://abricotine.brrd.fr/))
    中的预览，这是一个开源的 Markdown 编辑器，具有实时预览功能：
- en: '![Getting to know markdown](img/image_15_001.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![了解 Markdown](img/image_15_001.jpg)'
- en: 'There are also online markdown editors with fantastic features. One of my favorites
    is StackEdit ([https://stackedit.io/](https://stackedit.io/)). You can create
    a new blank document and copy the above markdown texts into the editor, and then
    the you can see the instant preview as an HTML page:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有具有出色功能的在线 Markdown 编辑器。我最喜欢的一个是 StackEdit ([https://stackedit.io/](https://stackedit.io/))。您可以在编辑器中创建一个新的空白文档，并将上面的
    Markdown 文本复制进去，然后您就可以看到作为 HTML 页面的即时预览：
- en: '![Getting to know markdown](img/image_15_002.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![了解 Markdown](img/image_15_002.jpg)'
- en: 'Markdown is widely used in online discussion. The largest open-source repository
    host, GitHub ([https://github.com](https://github.com)), supports markdown in
    writing issues as shown in the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown 在在线讨论中被广泛使用。最大的开源代码托管平台 GitHub ([https://github.com](https://github.com))
    支持使用 Markdown 编写问题，如下面的截图所示：
- en: '![Getting to know markdown](img/image_15_003.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![了解 Markdown](img/image_15_003.jpg)'
- en: Note that backticks (`` ` ``) are used to create source code symbols and three-backticks
    ([PRE6]X [PRE7]
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，反引号（`` ` ``）用于创建源代码符号，以及三个反引号（[PRE6]X [PRE7]）
- en: '| Sepal.Length| Sepal.Width| Petal.Length| Petal.Width|Species |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| Sepal.Length| Sepal.Width| Petal.Length| Petal.Width|Species |'
- en: '|------------:|-----------:|------------:|-----------:|:-------|'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '|------------:|-----------:|------------:|-----------:|:-------|'
- en: '|          5.1|         3.5|          1.4|         0.2|setosa  |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '|          5.1|         3.5|          1.4|         0.2|setosa  |'
- en: '|          4.9|         3.0|          1.4|         0.2|setosa  |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|          4.9|         3.0|          1.4|         0.2|setosa  |'
- en: '|          4.7|         3.2|          1.3|         0.2|setosa  |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '|          4.7|         3.2|          1.3|         0.2|setosa  |'
- en: '|          4.6|         3.1|          1.5|         0.2|setosa  |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '|          4.6|         3.1|          1.5|         0.2|setosa  |'
- en: '|          5.0|         3.6|          1.4|         0.2|setosa  |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '|          5.0|         3.6|          1.4|         0.2|setosa  |'
- en: '|          5.4|         3.9|          1.7|         0.4|setosa  |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '|          5.4|         3.9|          1.7|         0.4|setosa  |'
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: toys <- data.frame(
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: toys <- data.frame(
- en: id = 1:3,
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: id = 1:3,
- en: name = c("Car", "Plane", "Motocycle"),
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: name = c("Car", "Plane", "Motocycle"),
- en: price = c(15, 25, 14),
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: price = c(15, 25, 14),
- en: share = c(0.3, 0.1, 0.2),
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: share = c(0.3, 0.1, 0.2),
- en: stringsAsFactors = FALSE
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: stringsAsFactors = FALSE
- en: )
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: toys
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: toys
- en: id      name price share
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: id      name price share
- en: 1  1       Car    15   0.3
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1  1       Car    15   0.3
- en: 2  2     Plane    25   0.1
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2  2     Plane    25   0.1
- en: 3  3 Motocycle    14   0.2
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3  3 Motocycle    14   0.2
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '| id|name      | price| share|'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '| id|name      | price| share|'
- en: '|--:|:---------|-----:|-----:|'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '|--:|:---------|-----:|-----:|'
- en: '|  1|Car       |    15|   0.3|'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '|  1|Car       |    15|   0.3|'
- en: '|  2|Plane     |    25|   0.1|'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '|  2|Plane     |    25|   0.1|'
- en: '|  3|Motocycle |    14|   0.2|'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '|  3|Motocycle |    14|   0.2|'
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: knitr::kable(toys)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: knitr::kable(toys)
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: xtable::xtable(lm(mpg ~ cyl + vs, data = mtcars))
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: xtable::xtable(lm(mpg ~ cyl + vs, data = mtcars))
- en: '[PRE13]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: library(formattable)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: library(formattable)
- en: formattable(toys,
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: formattable(toys,
- en: list(price = color_bar("lightpink"), share = percent))
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: list(price = color_bar("lightpink"), share = percent))
- en: '[PRE14]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: library(DT)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: library(DT)
- en: datatable(mtcars)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: datatable(mtcars)
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: set.seed(123)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: set.seed(123)
- en: x <- rnorm(1000)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: x <- rnorm(1000)
- en: y <- 2 * x + rnorm(1000)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: y <- 2 * x + rnorm(1000)
- en: m <- lm(y ~ x)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: m <- lm(y ~ x)
- en: plot(x, y, main = "Linear regression", col = "darkgray")
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: plot(x, y, main = "线性回归", col = "darkgray")
- en: abline(coef(m))
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: abline(coef(m))
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: library(DiagrammeR)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: library(DiagrammeR)
- en: grViz("
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: grViz("
- en: digraph rmarkdown {
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: digraph rmarkdown {
- en: A -> B;
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: A -> B;
- en: B -> C;
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: B -> C;
- en: C -> A;
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: C -> A;
- en: '}")'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '}")'
- en: '[PRE17]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: library(ggvis)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: library(ggvis)
- en: mtcars %>%
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: mtcars %>%
- en: ggvis(~mpg, ~disp, opacity := 0.6) %>%
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: ggvis(~mpg, ~disp, opacity := 0.6) %>%
- en: layer_points(size := input_slider(1, 100, value = 50, label = "size")) %>%
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: layer_points(size := input_slider(1, 100, value = 50, label = "size")) %>%
- en: layer_smooths(span = input_slider(0.5, 1, value = 1, label = "span"))
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: layer_smooths(span = input_slider(0.5, 1, value = 1, label = "span"))
- en: '[PRE18]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: library(dygraphs)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: library(dygraphs)
- en: library(xts)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: library(xts)
- en: library(dplyr)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: library(dplyr)
- en: library(reshape2)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: library(reshape2)
- en: data(weather, package = "nycflights13")
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: data(weather, package = "nycflights13")
- en: temp <- weather %>%
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: temp <- weather %>%
- en: group_by(origin, year, month, day) %>%
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: group_by(origin, year, month, day) %>%
- en: summarize(temp = mean(temp)) %>%
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: summarize(temp = mean(temp)) %>%
- en: ungroup() %>%
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: ungroup() %>%
- en: mutate(date = as.Date(sprintf("%d-%02d-%02d",
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: mutate(date = as.Date(sprintf("%d-%02d-%02d",
- en: year, month, day))) %>%
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: year, month, day))) %>%
- en: select(origin, date, temp) %>%
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: select(origin, date, temp) %>%
- en: dcast(date ~ origin, value.var = "temp")
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: dcast(date ~ origin, value.var = "temp")
- en: temp_xts <- as.xts(temp[-1], order.by = temp[[1]])
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: temp_xts <- as.xts(temp[-1], order.by = temp[[1]])
- en: head(temp_xts)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: head(temp_xts)
- en: EWR     JFK      LGA
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EWR     JFK      LGA
- en: 2013-01-01 38.4800 38.8713 39.23913
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2013-01-01 38.4800 38.8713 39.23913
- en: 2013-01-02 28.8350 28.5425 28.72250
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2013-01-02 28.8350 28.5425 28.72250
- en: 2013-01-03 29.4575 29.7725 29.70500
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2013-01-03 29.4575 29.7725 29.70500
- en: 2013-01-04 33.4775 34.0325 35.26250
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2013-01-04 33.4775 34.0325 35.26250
- en: 2013-01-05 36.7325 36.8975 37.73750
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2013-01-05 36.7325 36.8975 37.73750
- en: 2013-01-06 37.9700 37.4525 39.70250
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2013-01-06 37.9700 37.4525 39.70250
- en: '[PRE19]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: dygraph(temp_xts, main = "Airport Temperature") %>%
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: dygraph(temp_xts, main = "机场温度") %>%
- en: dyRangeSelector() %>%
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: dyRangeSelector() %>%
- en: dyHighlight(highlightCircleSize = 3,
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: dyHighlight(highlightCircleSize = 3,
- en: highlightSeriesBackgroundAlpha = 0.3,
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: highlightSeriesBackgroundAlpha = 0.3,
- en: hideOnMouseOut = FALSE)
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: hideOnMouseOut = FALSE)
- en: '[PRE20]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: library(shiny)
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: library(shiny)
- en: ui <- bootstrapPage(
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: ui <- bootstrapPage(
- en: numericInput("n", label = "Sample size", value = 10, min = 10, max = 100),
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: numericInput("n", label = "Sample size", value = 10, min = 10, max = 100),
- en: textOutput("mean")
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: textOutput("mean")
- en: )
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: server <- function(input, output) {
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: server <- function(input, output) {
- en: output$mean <- renderText(mean(rnorm(input$n)))
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: output$mean <- renderText(mean(rnorm(input$n)))
- en: '}'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: app <- shinyApp(ui, server)
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: app <- shinyApp(ui, server)
- en: runApp(app)
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: runApp(app)
- en: '[PRE21]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: shiny_vars <- ls(getNamespace("shiny"))
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: shiny_vars <- ls(getNamespace("shiny"))
- en: shiny_vars[grep("Input$", shiny_vars)]
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: shiny_vars[grep("Input$", shiny_vars)]
- en: '[1] "checkboxGroupInput"       "checkboxInput"'
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[1] "checkboxGroupInput"       "checkboxInput"'
- en: '[3] "dateInput"                "dateRangeInput"'
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[3] "dateInput"                "dateRangeInput"'
- en: '[5] "fileInput"                "numericInput"'
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[5] "fileInput"                "numericInput"'
- en: '[7] "passwordInput"            "selectInput"'
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[7] "passwordInput"            "selectInput"'
- en: '[9] "selectizeInput"           "sliderInput"'
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[9] "selectizeInput"           "sliderInput"'
- en: '[11] "textInput"                "updateCheckboxGroupInput"'
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[11] "textInput"                "updateCheckboxGroupInput"'
- en: '[13] "updateCheckboxInput"      "updateDateInput"'
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[13] "updateCheckboxInput"      "updateDateInput"'
- en: '[15] "updateDateRangeInput"     "updateNumericInput"'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[15] "updateDateRangeInput"     "updateNumericInput"'
- en: '[17] "updateSelectInput"        "updateSelectizeInput"'
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[17] "updateSelectInput"        "updateSelectizeInput"'
- en: '[19] "updateSliderInput"        "updateTextInput"'
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[19] "updateSliderInput"        "updateTextInput"'
- en: '[PRE22]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: shiny_vars[grep("Output$", shiny_vars)]
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: shiny_vars[grep("Output$", shiny_vars)]
- en: '[1] "dataTableOutput"    "htmlOutput"'
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[1] "dataTableOutput"    "htmlOutput"'
- en: '[3] "imageOutput"        "plotOutput"'
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[3] "imageOutput"        "plotOutput"'
- en: '[5] "tableOutput"        "textOutput"'
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[5] "tableOutput"        "textOutput"'
- en: '[7] "uiOutput"           "verbatimTextOutput"'
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[7] "uiOutput"           "verbatimTextOutput"'
- en: '[PRE23]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: library(shiny)
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: library(shiny)
- en: ui <- fluidPage(
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: ui <- fluidPage(
- en: titlePanel("Random walk"),
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: titlePanel("Random walk"),
- en: sidebarLayout(
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: sidebarLayout(
- en: sidebarPanel(
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sidebarPanel(
- en: numericInput("seed", "Random seed", 123),
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: numericInput("seed", "Random seed", 123),
- en: sliderInput("paths", "Paths", 1, 100, 1),
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sliderInput("paths", "Paths", 1, 100, 1),
- en: sliderInput("start", "Starting value", 1, 10, 1, 1),
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sliderInput("start", "Starting value", 1, 10, 1, 1),
- en: sliderInput("r", "Expected return", -0.1, 0.1, 0, 0.001),
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sliderInput("r", "Expected return", -0.1, 0.1, 0, 0.001),
- en: sliderInput("sigma", "Sigma", 0.001, 1, 0.01, 0.001),
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sliderInput("sigma", "Sigma", 0.001, 1, 0.01, 0.001),
- en: sliderInput("periods", "Periods", 10, 1000, 200, 10)),
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sliderInput("periods", "Periods", 10, 1000, 200, 10)),
- en: mainPanel(
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: mainPanel(
- en: plotOutput("plot", width = "100%", height = "600px")
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: plotOutput("plot", width = "100%", height = "600px")
- en: ))
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: ))
- en: )
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '[PRE24]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: shiny_vars[grep("^render", shiny_vars)]
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: shiny_vars[grep("^render", shiny_vars)]
- en: '[1] "renderDataTable" "renderImage"     "renderPage"'
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[1] "renderDataTable" "renderImage"     "renderPage"'
- en: '[4] "renderPlot"      "renderPrint"     "renderReactLog"'
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4] "renderPlot"      "renderPrint"     "renderReactLog"'
- en: '[7] "renderTable"     "renderText"      "renderUI"'
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[7] "renderTable"     "renderText"      "renderUI"'
- en: '[PRE25]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: server <- function(input, output) {
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: server <- function(input, output) {
- en: output$plot <- renderPlot({
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: output$plot <- renderPlot({
- en: set.seed(input$seed)
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: set.seed(input$seed)
- en: mat <- sapply(seq_len(input$paths), function(i) {
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: mat <- sapply(seq_len(input$paths), function(i) {
- en: sde::GBM(input$start,
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sde::GBM(input$start,
- en: input$r, input$sigma, 1, input$periods)
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: input$r, input$sigma, 1, input$periods)
- en: '})'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '})'
- en: matplot(mat, type = "l", lty = 1,
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: matplot(mat, type = "l", lty = 1,
- en: main = "Geometric Brownian motions")
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: main = "Geometric Brownian motions")
- en: '})'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: '}'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE26]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: app <- shinyApp(ui, server)
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: app <- shinyApp(ui, server)
- en: runApp(app)
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: runApp(app)
- en: '[PRE27]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: install_packages(c("shinydashboard", "cranlogs"))
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: install_packages(c("shinydashboard", "cranlogs"))
- en: '[PRE28]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: library(cranlogs)
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: library(cranlogs)
- en: cran_top_downloads()
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: cran_top_downloads()
- en: 'No encoding supplied: defaulting to UTF-8\.'
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'No encoding supplied: defaulting to UTF-8\.'
- en: rank  package count       from         to
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: rank  package count       from         to
- en: 1     1     Rcpp  9682 2016-08-18 2016-08-18
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1     1     Rcpp  9682 2016-08-18 2016-08-18
- en: 2     2   digest  8937 2016-08-18 2016-08-18
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2     2   digest  8937 2016-08-18 2016-08-18
- en: 3     3  ggplot2  8269 2016-08-18 2016-08-18
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3     3  ggplot2  8269 2016-08-18 2016-08-18
- en: 4     4     plyr  7816 2016-08-18 2016-08-18
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4     4     plyr  7816 2016-08-18 2016-08-18
- en: 5     5  stringi  7471 2016-08-18 2016-08-18
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5     5  stringi  7471 2016-08-18 2016-08-18
- en: 6     6  stringr  7242 2016-08-18 2016-08-18
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6     6  stringr  7242 2016-08-18 2016-08-18
- en: 7     7 jsonlite  7100 2016-08-18 2016-08-18
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7     7 jsonlite  7100 2016-08-18 2016-08-18
- en: 8     8 magrittr  6824 2016-08-18 2016-08-18
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8     8 magrittr  6824 2016-08-18 2016-08-18
- en: 9     9   scales  6397 2016-08-18 2016-08-18
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9     9   scales  6397 2016-08-18 2016-08-18
- en: 10   10     curl  6383 2016-08-18 2016-08-18
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10   10     curl  6383 2016-08-18 2016-08-18
- en: cran_top_downloads("last-week")
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: cran_top_downloads("last-week")
- en: 'No encoding supplied: defaulting to UTF-8\.'
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'No encoding supplied: defaulting to UTF-8\.'
- en: rank  package count       from         to
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: rank  package count       from         to
- en: 1     1     Rcpp 50505 2016-08-12 2016-08-18
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1     1     Rcpp 50505 2016-08-12 2016-08-18
- en: 2     2   digest 46086 2016-08-12 2016-08-18
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2     2   digest 46086 2016-08-12 2016-08-18
- en: 3     3  ggplot2 39808 2016-08-12 2016-08-18
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3     3  ggplot2 39808 2016-08-12 2016-08-18
- en: 4     4     plyr 38593 2016-08-12 2016-08-18
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4     4     plyr 38593 2016-08-12 2016-08-18
- en: 5     5 jsonlite 36984 2016-08-12 2016-08-18
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5     5 jsonlite 36984 2016-08-12 2016-08-18
- en: 6     6  stringi 36271 2016-08-12 2016-08-18
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6     6  stringi 36271 2016-08-12 2016-08-18
- en: 7     7  stringr 34800 2016-08-12 2016-08-18
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7     7  stringr 34800 2016-08-12 2016-08-18
- en: 8     8     curl 33739 2016-08-12 2016-08-18
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8     8     curl 33739 2016-08-12 2016-08-18
- en: 9     9      DBI 33595 2016-08-12 2016-08-18
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9     9      DBI 33595 2016-08-12 2016-08-18
- en: 10   10 magrittr 32880 2016-08-12 2016-08-18
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10   10 magrittr 32880 2016-08-12 2016-08-18
- en: '[PRE29]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: library(shiny)
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: library(shiny)
- en: library(shinydashboard)
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: library(shinydashboard)
- en: library(formattable)
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: library(formattable)
- en: library(cranlogs)
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: library(cranlogs)
- en: ui <- dashboardPage(
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: ui <- dashboardPage(
- en: dashboardHeader(title = "CRAN Downloads"),
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: dashboardHeader(title = "CRAN Downloads"),
- en: dashboardSidebar(sidebarMenu(
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: dashboardSidebar(sidebarMenu(
- en: menuItem("Last week",
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: menuItem("Last week",
- en: tabName = "last_week", icon = icon("list")),
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabName = "last_week", icon = icon("list")),
- en: menuItem("Last month",
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: menuItem("Last month",
- en: tabName = "last_month", icon = icon("list"))
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabName = "last_month", icon = icon("list"))
- en: )),
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: )),
- en: dashboardBody(tabItems(
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: dashboardBody(tabItems(
- en: tabItem(tabName = "last_week",
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabItem(tabName = "last_week",
- en: fluidRow(tabBox(title = "Total downloads",
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: fluidRow(tabBox(title = "Total downloads",
- en: tabPanel("Total", formattableOutput("last_week_table"))),
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabPanel("Total", formattableOutput("last_week_table"))),
- en: tabBox(title = "Top downloads",
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabBox(title = "Top downloads",
- en: tabPanel("Top", formattableOutput("last_week_top_table"))))),
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabPanel("Top", formattableOutput("last_week_top_table"))))),
- en: tabItem(tabName = "last_month",
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabItem(tabName = "last_month",
- en: fluidRow(tabBox(title = "Total downloads",
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: fluidRow(tabBox(title = "Total downloads",
- en: tabPanel("Total", plotOutput("last_month_barplot"))),
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabPanel("Total", plotOutput("last_month_barplot"))),
- en: tabBox(title = "Top downloads",
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabBox(title = "Top downloads",
- en: tabPanel("Top", formattableOutput("last_month_top_table")))))
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: tabPanel("Top", formattableOutput("last_month_top_table"))))),
- en: ))
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: ))
- en: )
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '[PRE30]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: server <- function(input, output) {
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: server <- function(input, output) {
- en: output$last_week_table <- renderFormattable({
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: output$last_week_table <- renderFormattable({
- en: data <- cran_downloads(when = "last-week")
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data <- cran_downloads(when = "last-week")
- en: formattable(data, list(count = color_bar("lightblue")))
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: formattable(data, list(count = color_bar("lightblue")))
- en: '})'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: output$last_week_top_table <- renderFormattable({
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: output$last_week_top_table <- renderFormattable({
- en: data <- cran_top_downloads("last-week")
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data <- cran_top_downloads("last-week")
- en: formattable(data, list(count = color_bar("lightblue"),
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: formattable(data, list(count = color_bar("lightblue"),
- en: package = formatter("span",
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: package = formatter("span",
- en: 'style = "font-family: monospace;")))'
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'style = "font-family: monospace;")))'
- en: '})'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: output$last_month_barplot <- renderPlot({
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: output$last_month_barplot <- renderPlot({
- en: data <- subset(cran_downloads(when = "last-month"),
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data <- subset(cran_downloads(when = "last-month"),
- en: count > 0)
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: count > 0)
- en: with(data, barplot(count, names.arg = date),
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: with(data, barplot(count, names.arg = date),
- en: main = "Last month downloads")
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: main = "Last month downloads")
- en: '})'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: output$last_month_top_table <- renderFormattable({
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: output$last_month_top_table <- renderFormattable({
- en: data <- cran_top_downloads("last-month")
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data <- cran_top_downloads("last-month")
- en: formattable(data, list(count = color_bar("lightblue"),
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: formattable(data, list(count = color_bar("lightblue"),
- en: package = formatter("span",
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: package = formatter("span",
- en: 'style = "font-family: monospace;")))'
  id: totrans-265
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'style = "font-family: monospace;")))'
- en: '})'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: '}'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE31]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: runApp(shinyApp(ui, server))
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: runApp(shinyApp(ui, server))
- en: '```'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'By default, the shiny app shows the first page at the first visit. The following
    is a screenshot of the **Last week** tab page which consists of two tab panels
    of `formattable` data frames:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，shiny应用在首次访问时显示第一页。以下是一个截图，展示了**上周**标签页，它由两个`formattable`数据框的标签面板组成：
- en: '![Using shinydashboard](img/image_15_022.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![使用shinydashboard](img/image_15_022.jpg)'
- en: 'The following screenshot shows the **Last month** tab page which consists of
    a histogram and a `formattable` data frame:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了**上个月**标签页，它由一个直方图和一个`formattable`数据框组成：
- en: '![Using shinydashboard](img/image_15_023.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![使用shinydashboard](img/image_15_023.jpg)'
- en: Note
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To see more examples and the code behind them, visit [http://rstudio.github.io/shinydashboard/examples.html](http://rstudio.github.io/shinydashboard/examples.html).
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看更多示例及其背后的代码，请访问[http://rstudio.github.io/shinydashboard/examples.html](http://rstudio.github.io/shinydashboard/examples.html)。
- en: Summary
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we demonstrated the use of R Markdown to produce dynamic documents
    where tables, graphics, and interactive plots can be easily embedded. Then we
    saw a few simple examples of shiny apps which are basically web-based interactive
    apps with an R backend. With these powerful productivity tools, data analysis
    can be made more interesting and full of fun because the outcome can be demonstrated
    in a nice, interactive way, which is usually better for conveying more information,
    drawing more insights and making better decisions.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们展示了如何使用R Markdown生成动态文档，其中可以轻松嵌入表格、图形和交互式图表。然后我们看到了几个简单的shiny应用示例，这些应用基本上是基于R后端的网络交互式应用。有了这些强大的生产力工具，数据分析可以变得更加有趣和充满乐趣，因为结果可以通过一种优雅、交互的方式展示出来，这通常更有利于传达更多信息、获得更多见解和做出更好的决策。
- en: Now we have finished this book. We started learning R by getting familiar with
    the fundamental concepts, data structures and language constructs and features.
    We went through a wide range of examples to understand how these fit the needs
    of practical data analysis. To build a concrete and consistent understanding of
    the R programming language and the behavior of data structures, we discussed several
    advanced topics such as R's evaluation model, metaprogramming, and object-oriented
    systems. With the above knowledge, we then explored a series of more practical
    topics such as working with databases, data manipulation techniques, high performance
    computing, web scraping techniques, dynamic documents, and interactive apps.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了这本书。我们通过熟悉基本概念、数据结构和语言构造与特性来开始学习R。我们通过一系列的例子来理解这些是如何满足实际数据分析需求的。为了对R编程语言和数据结构的行为有一个具体和一致的理解，我们讨论了几个高级主题，例如R的评估模型、元编程和面向对象系统。在上述知识的基础上，我们进一步探索了一系列更实用的主题，例如与数据库工作、数据操作技术、高性能计算、网络爬虫技术、动态文档和交互式应用。
- en: This books covers a variety of topics to expand a wide horizon on the possibility
    of what R and its extension packages can do. Now you should feel empowered and
    much more confident using R to solve data analysis problems with the right techniques.
    More importantly, I hope this book enables you to better work with data and go
    further with other useful topics such as visualization, specialized statistical
    modeling, and machine learning. If you are interested in going even deeper, I
    strongly recommend that you read *Advanced R* by Hadley Wickham.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖了各种主题，以拓宽对R及其扩展包可能性的视野。现在你应该感到更有能力，并且在使用R解决数据分析问题时更有信心。更重要的是，我希望这本书能帮助你更好地处理数据，并在可视化、专业统计建模和机器学习等其他有用主题上更进一步。如果你有兴趣深入了解，我强烈推荐你阅读Hadley
    Wickham的《Advanced R》。
