["```py\npip install psycopg2\n```", "```py\nconda install -c anaconda psycopg2\n```", "```py\npython setup.py install\n```", "```py\ncreatedb -U postgres pythonspatial\n psql -U postgres -d pythonspatial -c \"CREATE EXTENSION postgis;\" \n```", "```py\nset PATH=%PATH%;C:\\Program Files\\PostgreSQL\\10\\bin\n```", "```py\nimport psycopg2\n\nconnection = psycopg2.connect(database=\"pythonspatial\",user=\"postgres\", password=\"postgres\")\n\ncursor = connection.cursor()\n\ncursor.execute(\"CREATE TABLE art_pieces (id SERIAL PRIMARY KEY, code VARCHAR(255), location GEOMETRY)\")\n\nconnection.commit()\n```", "```py\nimport requests\n\nurl='http://coagisweb.cabq.gov/arcgis/rest/services/public/PublicArt/MapServer/0/query'\n\nparams={\"where\":\"1=1\",\"outFields\":\"*\",\"outSR\":\"4326\",\"f\":\"json\"}\n\nr=requests.get(url,params=params)\n\ndata=r.json()\n\ndata[\"features\"][0]\n```", "```py\n{'attributes': {'ADDRESS': '4440 Osuna NE',\n 'ARTIST': 'David Anderson',\n 'ART_CODE': '101',\n 'IMAGE_URL': 'http://www.flickr.com/photos/abqpublicart/6831137393/',\n 'JPG_URL': 'http://farm8.staticflickr.com/7153/6831137393_fa38634fd7_m.jpg',\n 'LOCATION': 'Osuna Median bet.Jefferson/ W.Frontage Rd',\n 'OBJECTID': 951737,\n 'TITLE': 'Almond Blossom/Astronomy',\n 'TYPE': 'public sculpture',\n 'X': -106.5918383,\n 'Y': 35.1555,\n 'YEAR': '1986'},\n 'geometry': {'x': -106.59183830022498, 'y': 35.155500000061544}}\n```", "```py\nfor a in data[\"features\"]:\n    code=a[\"attributes\"][\"ART_CODE\"]\n    wkt=\"POINT(\"+str(a[\"geometry\"][\"x\"])+\" \"+str(a[\"geometry\"]        [\"y\"])+\")\"\n    if a[\"geometry\"][\"x\"]=='NaN':\n        pass\n    else:\n        cursor.execute(\"INSERT INTO art_pieces (code, location)             VALUES ({},\n        ST_GeomFromText('{}'))\".format(code, wkt))\nconnection.commit()\n```", "```py\nINSERT INTO art_pieces (code, location) VALUES (101, ST_GeomFromText('Point(-106.5918 35.1555)'))\n```", "```py\npip install shapely\n```", "```py\nconda install -c scitools shapely\n```", "```py\nfrom shapely.geometry import Point, MultiPoint\n\nthepoints=[]\n\nfor a in data[\"features\"]:\n    code=a[\"attributes\"][\"ART_CODE\"]\n    p=Point(float(a[\"geometry\"][\"x\"]),float(a[\"geometry\"][\"y\"]))\n    thepoints.append(p)\n    if a[\"geometry\"][\"x\"]=='NaN':\n        pass\n    else:\n        cursor.execute(\"INSERT INTO art_pieces (code, location)             VALUES ('{}',\n        ST_GeomFromText('{}'))\".format(code, p.wkt))\nconnection.commit()\n```", "```py\nSELECT * FROM table\n```", "```py\ncursor.execute(\"SELECT * from art_pieces\")\ndata=cursor.fetchall()\ndata\n```", "```py\n\n [(1, '101', '010100000025FFBFADE0A55AC06A658B6CE7934140'),\n (2, '102', '0101000000CC4E16E181AA5AC0D99F67B3EA8B4140'),\n .......,]\n```", "```py\nfrom shapely.wkb import loads\naPoint=loads(data[0][2],hex=True)\naPoint.wkt\n```", "```py\nPOINT (-106.591838300225 35.15550000006154)\n```", "```py\ncursor.execute(\"SELECT id,code,ST_AsBinary(location) from art_pieces\")\ndata=cursor.fetchall()\ndata[0][2]\nfrom shapely.wkb import loads\npNoHex=loads(bytes(data[0][2]))\npNoHex.wkt\n```", "```py\ncursor.execute(\"SELECT code, ST_AsText(location) from art_pieces\")\ndata = cursor.fetchone()\n```", "```py\n('101', 'POINT(-106.591838300225 35.1555000000615)')\n```", "```py\nfrom shapely.wkt import loads\npb=loads(data[1])\npb.coords[:]\n```", "```py\n[(-106.591838300225, 35.1555000000615)]\n```", "```py\ncursor.execute(\"SELECT UpdateGeometrySRID('art_pieces','location',4326)\")\ncursor.execute(\"SELECT Find_SRID('public','art_pieces','location')\")\ncursor.fetchall()\n```", "```py\ncursor.execute(\"SELECT code, ST_AsTexT(ST_Transform(location,3857)) from art_pieces\")\ncursor.fetchone()\n```", "```py\n('101', 'POINT(-11865749.1623 4185033.1034)')\n```", "```py\ncursor.execute(\"SELECT ST_AsText(ST_Buffer(a.location,25.00,'quad_segs=2')) from pieces a WHERE a.code='101'\")\n\ncursor.fetchall()\n```", "```py\n\n 'POLYGON((-106.591563918525 35.1555036055616,-106.591568334295 35.1554595740463,-106.59158312469 35.1554170960907,...,-106.591570047094 35.155547498531,-106.591563918525 35.1555036055616))'\n```", "```py\nfrom shapely.geometry import Polygon\nfrom shapely.wkt import loads\nbuff=loads(data[0][0])\nbuff\n```", "```py\ncursor.execute(\"SELECT ST_Distance(a.location::geography,b.location::geography) FROM art_pieces a, art_pieces b where a.name='101' AND b.name='102'\")\ndist=cursor.fetchall()\ndist\n```", "```py\ncursor.execute(\"SELECT ST_Distance(a.location::geography,\n               ST_GeometryFromText('POINT(-106.5 35.1)')::geography) \n               FROM art_pieces a where a.name='101'\")\n\ncursor.fetchall()\n```", "```py\nfrom shapely.geometry import Point\np=Point(-106.5,35.1)\ncursor.execute(\"SELECT ST_Distance(a.location::geography,\n                ST_GeometryFromText('{}')::geography) \n                FROM art_pieces a where a.name='101'\".format(p.wkt))\ncursor.fetchall()\n```", "```py\ncursor.execute(\"SELECT code, ST_Distance(location::geography,\n                ST_GeometryFromText('POINT(-106.591838300225\n                35.1555000000615)')::geography) \n                as d from art_pieces LIMIT 5\")\ncursor.fetchall()\n```", "```py\n[('101', 0.0),\n ('102', 9560.45428362),\n ('104', 4741.8711304),\n ('105', 9871.8424894),\n ('106', 7907.8263995)]\n```", "```py\ncursor.execute(\"SELECT code, ST_Distance(location::geography,\n                ST_GeometryFromText('POINT(-106.591838300225\n                35.1555000000615)')::geography) as d from art_pieces \n                ORDER BY location<-                                                                \n                >ST_GeometryFromText('POINT(-106.591838300225 \n                35.1555000000615)') LIMIT 5\")\ncursor.fetchall()\n```", "```py\n[('101', 0.0),\n ('614', 1398.08905864),\n ('492', 2384.97632735),\n ('570', 3473.81914218),\n ('147', 3485.71207698)]\n```", "```py\nfrom shapely.geometry import LineString\nfrom shapely.geometry import MultiLineString\n\nconnection = psycopg2.connect(database=\"pythonspatial\",user=\"postgres\",    \n    password=\"postgres\")\n\ncursor = c.cursor()\ncursor.execute(\"CREATE TABLE lines (id SERIAL PRIMARY KEY, location GEOMETRY)\")\nthelines=[]\nthelines.append(LineString([(-106.635585,35.086972),(-106.621294,35.124997)]))\nthelines.append(LineString([(-106.498309,35.140108),(-106.497010,35.069488)]))\nthelines.append(LineString([(-106.663878,35.106459),(-106.586506,35.103979)]))\n\nmls=MultiLineString([((-106.635585,35.086972),(-106.621294,35.124997)),((-106.498309,35.140108),(-106.497010,35.069488)),((-106.663878,35.106459),(-106.586506,35.103979))])\n\nfor a in thelines:\n    cursor.execute(\"INSERT INTO lines (location) VALUES  \n                (ST_GeomFromText('{}'))\".format(a.wkt))\nconnection.commit()\n```", "```py\ncursor.execute(\"SELECT id, ST_AsTexT(location) from lines\")\ndata=cursor.fetchall()\ndata\n```", "```py\n[(1, 'LINESTRING(-106.635585 35.086972,-106.621294 35.124997)'),\n (2, 'LINESTRING(-106.498309 35.140108,-106.49701 35.069488)'),\n (3, 'LINESTRING(-106.663878 35.106459,-106.586506 35.103979)')]\n```", "```py\ncu.execute(\"SELECT id, ST_Length(location::geography) FROM lines \")\ncu.fetchall()\n```", "```py\n[(1, 4415.21026808109),\n (2, 7835.65405408195),\n (3, 7059.45840502359)]\n```", "```py\ncu.execute(\"SELECT id, ST_Length(location::geography) \n            FROM lines ORDER BY ST_Length(location::geography)\")\ncu.fetchall()\n```", "```py\n[(1, 4415.21026808109),\n (3, 7059.45840502359),\n (2, 7835.65405408195)]\n```", "```py\ncu.execute(\"SELECT ST_Intersects(l.location::geography,ll.location::geometry)\n            FROM lines l, lines ll WHERE l.id=1 AND ll.id=3\")\ncu.fetchall()\n```", "```py\ncu.execute(\"SELECT ST_AsText(ST_Intersection(l.location::geography,\n            ll.location::geometry)) FROM lines l, lines ll \n            WHERE l.id=1 AND ll.id=3\")\ncu.fetchall()\n```", "```py\n[('POINT(-106.628684465508 35.1053370957485)',)]\n```", "```py\nfrom shapely.geometry import Polygon\n\nconnection = psycopg2.connect(database=\"pythonspatial\",user=\"postgres\", password=\"postgres\")\ncursor = conectionn.cursor()\ncursor.execute(\"CREATE TABLE poly (id SERIAL PRIMARY KEY, location GEOMETRY)\")\na=Polygon([(-106.936763,35.958191),(-106.944385,35.239293),\n           (-106.452396,35.281908),(-106.407844,35.948708)])\ncursor.execute(\"INSERT INTO poly (location) \n             VALUES (ST_GeomFromText('{}'))\".format(a.wkt))\nconnection.commit()\n```", "```py\ncur.execute(\"SELECT id, ST_Area(location::geography) from poly\")\ncur.fetchall()\n```", "```py\n[(1, 3550790242.52023)]\n```", "```py\nisin=Point(-106.558743,35.318618)\ncur.execute(\"SELECT ST_Contains(polygon.location,ST_GeomFromText('{}')) \n             FROM poly polygon WHERE polygon.id=1\".format(isin.wkt))\ncur.fetchall()\n```", "```py\nisin=Point(-106.558743,35.318618)\ncur.execute(\"SELECT ST_Intersects(ST_GeomFromText('{}')::geography,polygon.location::geometry) FROM poly polygon WHERE polygon.id=1\".format(isin.wkt))\ncur.fetchall()\n```", "```py\nisin=LineString([(-106.55,35.31),(-106.40,35.94)])\ncur.execute(\"SELECT ST_AsText(ST_Intersection(polygon.location,ST_GeomFromText('{}'))) \nFROM poly polygon WHERE polygon.id=1\".format(isin.wkt))\ncur.fetchall()\n```", "```py\n[('LINESTRING(-106.55 35.31,-106.411712640251 35.8908069109443)',)]\n```"]