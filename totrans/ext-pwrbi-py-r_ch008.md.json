["```py\nimport pandas as pd\ndata = pd.read_csv(r'D:\\<your-path>\\Chapter07\\example.csv')\ndata.head(10)\n```", "```py\nimport pandas as pd\ndata = {\n    'Col1' : ['A', 'B', 'C,D', 'E\"F', 'G\\r\\nH'],\n    'Col2' : [23, 27, 18, 19, 21],\n    'Col3' : [3.5, 4.8, 2.1, 2.5, 3.1]\n}\ndata_df = pd.DataFrame(data)\ndata_df.to_csv(r'D:\\<your-path>\\Chapter07\\example-write.csv', index=False)\n```", "```py\n    import pandas as pd\n    filter = (dataset['isEmailValidFromRegex'] == 0)\n    dataset[filter].to_csv(r'D:\\<your-path>\\Chapter07\\Python\\wrong-emails.csv', index=False)\n    df = dataset[~filter]\n    ```", "```py\nUserId,Email,BannedDate,IsEmailValidByDefinition,IsDateValidByDefinition,isEmailValidFromRegex\n2,example1@example.com/example2@example.com,06/07/2019,0,1,0\n3,example33@example.com.,02/05/2018,0,1,0\n5,example@example.com --> check,02/29/18,0,0,0\n9,example,10/22/2018,0,1,0\n13,.@example.com,04/24/018,0,0,0\n16,example@example.c,6/7/2019,0,1,0\n```", "```py\nlibrary(readr)\ndata_df <- read_csv(r'{D:\\<your-path>\\Chapter07\\example.csv}')\n```", "```py\n-- Column specification -----------------------------------\ncols(\n  Col1 = col_character(),\n  Col2 = col_double(),\n  Col3 = col_double()\n)\n```", "```py\nlibrary(readr)\ndata_df <- data.frame(\n  Col1 = c('A', 'B', 'C,D', 'E\"F', 'G\\r\\nH'),\n  Col2 = c(23, 27, 18, 19, 21),\n  Col3 = c(3.5, 4.8, 2.1, 2.5, 3.1)\n)\nwrite_csv(data_df, file = r'{D:\\<your-path>\\Chapter07\\R\\example-write.csv}', eol = '\\r\\n')\n```", "```py\n    library(readr)\n    library(dplyr)\n    dataset %>%\n      filter( isDateValidFromRegex == 0 ) %>%\n      write_csv( r'{D:\\<your-path>\\Chapter07\\R\\wrong-dates.csv}', eol = '\\r\\n' )\n    df <- dataset %>%\n      filter( isDateValidFromRegex == 1 )\n    ```", "```py\n    conda activate pbi_powerquery_env\n    ```", "```py\n    pip install openpyxl\n    ```", "```py\nimport pandas as pd\ndata = pd.read_excel(r'D:\\<your-path>\\Chapter07\\example.xlsx')\n```", "```py\ndata = pd.read_excel(r'D:\\<your-path>\\Chapter07\\example.xlsx', sheet_name='<your-worksheet-name>')\n```", "```py\nimport pandas as pd\ndata = {\n    'Col1' : ['A', 'B', 'C,D', 'E\"F', 'G\\r\\nH'],\n    'Col2' : [23, 27, 18, 19, 21],\n    'Col3' : [3.5, 4.8, 2.1, 2.5, 3.1]\n}\ndata_df = pd.DataFrame(data)\ndata_df.to_excel(r'D:\\<your-path>\\Chapter07\\Python\\example-write.xlsx', index = False)\n```", "```py\ndata_df.to_excel(r'D:\\<your-path>\\Chapter07\\Python\\example-write-named-sheet.xlsx', sheet_name='My data', index = False)\n```", "```py\nwith pd.ExcelWriter(r'D:\\<your-path>\\Chapter07\\Python\\ example-write-named-sheet.xlsx', mode='a') as writer: \n     data_df.to_excel(writer, sheet_name='My data', index = False)\n```", "```py\nlibrary(readxl)\ndata_tbl <- read_xlsx(r'{D:\\<your-path>\\Chapter07\\example.xlsx}')\n```", "```py\ndata_tbl <- read_xlsx(r'{D:\\<your-path>\\Chapter07\\example.xlsx}', sheet = 'My sheet')\n```", "```py\nlibrary(dplyr)\nlibrary(openxlsx)\ndata_df <- data.frame(\n    Col1 = c('A', 'B', 'C,D', 'E\"F', 'G\\nH'),\n    Col2 = c(23, 27, 18, 19, 21),\n    Col3 = c(3.5, 4.8, 2.1, 2.5, 3.1)\n)\ndata_df %>% \n    write.xlsx(file = r'{D:\\<your-path>\\Chapter07\\R\\example-write.xlsx}', colNames = TRUE)\n```", "```py\ndata_df %>% \n    write.xlsx(file = r'{D:\\<your-path>\\Chapter07\\R\\example-write.xlsx}', colNames = TRUE, sheetName = 'My data', append = FALSE)\n```", "```py\ndf_named_lst <- list(\"My data 1\" = data_df, \"My data 2\" = data_df)\nwrite.xlsx(df_named_lst, file = r'{D:\\<your-path>\\Chapter07\\R\\example-write.xlsx}')\n```", "```py\ndf_named_lst <- setNames(df_lst, names_lst)\nwrite.xlsx(df_named_lst, file = r'{D:\\<your-path>\\<your-file>.xlsx}')\n```", "```py\n    <your-server-name>.database.windows.net\n    ```", "```py\n    conda activate pbi_powerquery_env\n    ```", "```py\n    pip install pyodbc\n    ```", "```py\nimport pyodbc\nconn = pyodbc.connect(\n    'Driver={ODBC Driver 17 for SQL Server};'\n    r'Server=.\\SQLExpress;'\n    'Database=master;'\n    'Trusted_Connection=yes;')\n```", "```py\nimport pyodbc\nconn = pyodbc.connect(\n    'Driver={ODBC Driver 17 for SQL Server};'\n    r'Server=.\\SQLExpress;'\n    'Database=master;'\n    'Uid=sa;'\n    'Pwd=<your-password>)\n```", "```py\nimport pyodbc\nconn = pyodbc.connect(\n    'Driver={ODBC Driver 17 for SQL Server};'\n    'Server=<your-server-name>.database.windows.net;'\n    'Database=SystemsLogging;'\n    'Uid=<your-username>;'\n    'Pwd=<your-password>')\n```", "```py\nimport pandas as pd\ndata = pd.read_sql(\"SELECT database_id, name FROM sys.databases\", conn)\ndata.head()\n```", "```py\nconn = pyodbc.connect(\n    'Driver={ODBC Driver 17 for SQL Server};'\n    r'Server=.\\SQLExpress;'\n    'Database=SystemsLogging;'\n    'Trusted_Connection=yes;')\ncursor = conn.cursor()\ncursor.execute('''\n               CREATE TABLE WrongEmails\n               (\n               UserId int,\n               Email nvarchar(200)\n               )\n               ''')\nconn.commit()\n```", "```py\nconn = pyodbc.connect(\n    'Driver={ODBC Driver 17 for SQL Server};'\n    'Server=<your-server-name>.database.windows.net;'\n    'Database=SystemsLogging;'\n    'Uid=<your-username>;'\n    'Pwd=<your-password>')\ncursor = conn.cursor()\ncursor.execute('''\n               CREATE TABLE WrongEmails\n               (\n               UserId int,\n               Email nvarchar(200)\n               )\n               ''')\nconn.commit()\n```", "```py\n# Get data from sample Customers\ndata = pd.read_sql('SELECT TOP 10 CustomerID, EmailAddress FROM SalesLT.Customer', conn)\n# Write Customers data into the WrongEmails table\ncursor = conn.cursor()\n# Write a dataframe into a SQL Server table row by row:\nfor index, row in data.iterrows():\n    cursor.execute(\"INSERT INTO WrongEmails (UserId, Email) values(?,?)\", row.CustomerID, row.EmailAddress)\nconn.commit()\ncursor.close()\n```", "```py\ndf = pd.read_sql('SELECT TOP 10 UserId, Email FROM WrongEmails', conn)\ndf.head()\n```", "```py\ncursor = conn.cursor()\ncursor.execute('TRUNCATE TABLE WrongEmails')\nconn.commit()\n```", "```py\nconn.close()\n```", "```py\n    install.packages(c('odbc', 'DBI'))\n    ```", "```py\nlibrary(odbc)\nlibrary(DBI)\nconn <- dbConnect(\n  odbc::odbc(), server = r'{.\\SQLExpress}', \n  database = 'SystemsLogging', trusted_connection = 'yes',\n  driver = '{ODBC Driver 17 for SQL Server}'\n)\n```", "```py\nconn <- dbConnect(\n  odbc::odbc(), server = r'{.\\SQLExpress}', \n  database = 'SystemsLogging', uid = 'sa',\n  pwd = '<your-password>',\n  driver = '{ODBC Driver 17 for SQL Server}'\n)\n```", "```py\nconn <- dbConnect(\n  odbc::odbc(), server = '<your-server>.database.windows.net',\n  database = 'SystemsLogging', uid = '<your-username>',\n  pwd = '<your-password>',\n  driver = '{ODBC Driver 17 for SQL Server}'\n)\n```", "```py\ndata <- DBI::dbGetQuery(conn, \"SELECT database_id, name FROM sys.databases\")\nhead(data)\n```", "```py\ncustomers_df <- dbGetQuery(conn, \"SELECT TOP 10 CustomerID AS UserId, EmailAddress AS Email FROM SalesLT.Customer\")\ndbAppendTable(conn, name = 'WrongEmails', value = customers_df)\n```", "```py\ndf <- dbGetQuery(conn, \"SELECT TOP 10 UserId, Email FROM WrongEmails\")\nhead(df)\n```", "```py\ndbSendQuery(conn, \"TRUNCATE TABLE WrongEmails\") \n```", "```py\ndbDisconnect(conn)\n```"]