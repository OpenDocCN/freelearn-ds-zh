["```py\n1d_array = ([1, 2, 3, 4, 5])\n```", "```py\n2d_array =\n([1, 'a'],\n [2, 'b'],\n [3, 'c'],\n [4, 'e'],\n [5, 'f'])\n```", "```py\nIn []: import numpy as np\n```", "```py\ninput_stock_price_array = np.array([142.19,148.26,147.93,150.75,153.31,153.8,152.28,150,153.07,154.94])\n```", "```py\nsorted_stock_price_array = np.sort(input_stock_price_array)[::-1] \n```", "```py\nprint('Closing stock price in order of day traded: ', input_stock_price_array)\nprint('Closing stock price in order from high to low: ', sorted_stock_price_array) \n```", "```py\nprint('Highest closing stock price: ', sorted_stock_price_array[0]) \n```", "```py\nIn []: import numpy as np\n```", "```py\nIn []: temp_array = []\n```", "```py\n#A. Read the file into memory\n with open('AAPL_stock_price_example.csv', 'r') as input_file:\n\n     #B. load all the data into a variable\n     all_lines_from_input_file = input_file.readlines()\n\n     #C. Loop through each individual record \n     for each_individual_line in all_lines_from_input_file:\n\n         #D. Strip out a value from each record\n         for value_from_line in \\\n           each_individual_line.rsplit(',')[1:]:\n\n             #E. Remove the whitespaces from each value\n             clean_value_from_line = \\\n                            value_from_line.replace(\"\\n\", \"\") \n\n             #F. Assign each value to the new array by element\n             temp_array.append(clean_value_from_line)\n```", "```py\nprint(temp_array[:5])\n```", "```py\ntemp_array = np.delete(temp_array,0)\n```", "```py\ntemp_array.size\n```", "```py\ninput_stock_price_array = temp_array.astype(float)\n```", "```py\nprint(input_stock_price_array[:5])\n```", "```py\nsorted_stock_price_array = np.sort(input_stock_price_array)[::-1] \n```", "```py\nprint('Closing stock price in order of day traded: ', input_stock_price_array[:5])\nprint('Closing stock price in order from high to low: ', sorted_stock_price_array[:5]) \n```", "```py\nprint('Highest closing stock price: ', sorted_stock_price_array[0])\n```"]