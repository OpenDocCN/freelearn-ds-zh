["```py\n<!DOCTYPE html> \n<html> \n<head> \n  <title>Simple page</title> \n</head> \n<body> \n  <h1>Heading 1</h1> \n  <p>This is a paragraph.</p> \n</body> \n</html> \n\n```", "```py\n<!DOCTYPE html> \n<html> \n<head> \n  <title>Single table</title> \n</head> \n<body> \n  <p>The following is a table</p> \n  <table id=\"table1\" border=\"1\"> \n    <thead> \n      <tr> \n        <th>Name</th> \n        <th>Age</th> \n      </tr> \n    </thead> \n    <tbody> \n      <tr> \n        <td>Jenny</td> \n        <td>18</td> \n      </tr> \n      <tr> \n        <td>James</td> \n        <td>19</td> \n      </tr> \n    </tbody> \n  </table> \n</body> \n</html> \n\n```", "```py\n<!DOCTYPE html> \n<html> \n<head> \n  <title>Products</title> \n</head> \n<body> \n  <h1 style=\"color: blue;\">Products</h1> \n  <p>The following lists some products</p> \n  <div id=\"table1\" style=\"width: 50px;\"> \n    <ul> \n      <li> \n        <span style=\"font-weight: bold;\">Product-A</span> \n        <span style=\"color: green;\">$199.95</span> \n      </li> \n      <li> \n        <span style=\"font-weight: bold;\">Product-B</span> \n        <span style=\"color: green;\">$129.95</span> \n      </li> \n      <li> \n        <span style=\"font-weight: bold;\">Product-C</span> \n        <span style=\"color: green;\">$99.95</span> \n      </li> \n    </ul> \n  </div> \n</body> \n</html> \n\n```", "```py\n<!DOCTYPE html> \n<html> \n<head> \n  <title>Products</title> \n  <style> \n    h1 { \n      color: darkblue; \n    } \n    .product-list { \n      width: 50px; \n    } \n    .product-list li.selected .name { \n      color: 1px blue solid; \n    } \n    .product-list .name { \n      font-weight: bold; \n    } \n    .product-list .price { \n      color: green; \n    } \n  </style> \n</head> \n<body> \n  <h1>Products</h1> \n  <p>The following lists some products</p> \n  <div id=\"table1\" class=\"product-list\"> \n    <ul> \n      <li> \n        <span class=\"name\">Product-A</span> \n        <span class=\"price\">$199.95</span> \n      </li> \n      <li class=\"selected\"> \n        <span class=\"name\">Product-B</span> \n        <span class=\"price\">$129.95</span> \n      </li> \n      <li> \n        <span class=\"name\">Product-C</span> \n        <span class=\"price\">$99.95</span> \n      </li> \n    </ul> \n  </div> \n</body> \n</html> \n\n```", "```py\nh1 { \n  color: darkblue; \n} \n\n```", "```py\n.product-list { \n  width: 50px; \n} \n\n```", "```py\n.product-list .name { \n  font-weight: bold; \n} \n\n```", "```py\n.product-list li.selected .name { \n  color: 1px blue solid; \n} \n\n```", "```py\ninstall.packages(\"rvest\") \n\n```", "```py\nlibrary(rvest) \n## Loading required package: xml2 \nsingle_table_page <- read_html(\"data/single-table.html\") \nsingle_table_page \n## {xml_document} \n## <html> \n## [1] <head>\\n  <title>Single table</title>\\n</head> \n## [2] <body>\\n  <p>The following is a table</p>\\n  <table i ... \n\n```", "```py\nhtml_table(single_table_page) \n## [[1]] \n##    Name Age \n## 1 Jenny  18 \n## 2 James  19 \n\n```", "```py\nhtml_table(html_node(single_table_page, \"table\")) \n##    Name Age \n## 1 Jenny  18 \n## 2 James  19 \n\n```", "```py\nsingle_table_page %>% \n  html_node(\"table\") %>% \n  html_table() \n##    Name Age \n## 1 Jenny  18 \n## 2 James  19 \n\n```", "```py\nproducts_page <- read_html(\"data/products.html\") \nproducts_page %>% \n  html_nodes(\".product-list li .name\") \n## {xml_nodeset (3)} \n## [1] <span class=\"name\">Product-A</span> \n## [2] <span class=\"name\">Product-B</span> \n## [3] <span class=\"name\">Product-C</span> \n\n```", "```py\nproducts_page %>% \n  html_nodes(\".product-list li .name\") %>% \n  html_text() \n## [1] \"Product-A\" \"Product-B\" \"Product-C\" \n\n```", "```py\nproducts_page %>% \n  html_nodes(\".product-list li .price\") %>% \n  html_text() \n## [1] \"$199.95\" \"$129.95\" \"$99.95\" \n\n```", "```py\nproduct_items <- products_page %>% \n  html_nodes(\".product-list li\") \nproducts <- data.frame( \n  name = product_items %>% \n    html_nodes(\".name\") %>% \n    html_text(), \n  price = product_items %>% \n    html_nodes(\".price\") %>% \n    html_text() %>% \n    gsub(\"$\", \"\", ., fixed = TRUE) %>% \n    as.numeric(), \n  stringsAsFactors = FALSE \n) \nproducts \n##        name  price \n## 1 Product-A 199.95 \n## 2 Product-B 129.95 \n## 3 Product-C  99.95 \n\n```", "```py\n<body> \n  <h1>New Products</h1> \n  <p>The following is a list of products</p> \n  <div id=\"list\" class=\"product-list\"> \n    <ul> \n      <li> \n        <span class=\"name\">Product-A</span> \n        <span class=\"price\">$199.95</span> \n        <div class=\"info bordered\"> \n          <p>Description for Product-A</p> \n          <ul> \n            <li><span class=\"info-key\">Quality</span> <span class=\"info-value\">Good</span></li> \n            <li><span class=\"info-key\">Duration</span> <span class=\"info-value\">5</span><span class=\"unit\">years</span></li> \n          </ul> \n        </div> \n      </li> \n      <li class=\"selected\"> \n        <span class=\"name\">Product-B</span> \n        <span class=\"price\">$129.95</span> \n        <div class=\"info\"> \n          <p>Description for Product-B</p> \n          <ul> \n            <li><span class=\"info-key\">Quality</span> <span class=\"info-value\">Medium</span></li> \n            <li><span class=\"info-key\">Duration</span> <span class=\"info-value\">2</span><span class=\"unit\">years</span></li> \n          </ul> \n        </div> \n      </li> \n      <li> \n        <span class=\"name\">Product-C</span> \n        <span class=\"price\">$99.95</span> \n        <div class=\"info\"> \n          <p>Description for Product-C</p> \n          <ul> \n            <li><span class=\"info-key\">Quality</span> <span class=\"info-value\">Good</span></li> \n            <li><span class=\"info-key\">Duration</span> <span class=\"info-value\">4</span><span class=\"unit\">years</span></li> \n          </ul> \n        </div> \n      </li> \n    </ul> \n  </div> \n  <p>All products are available for sale!</p> \n</body> \n\n```", "```py\npage <- read_html(\"data/new-products.html\") \n\n```", "```py\n<?xml version=\"1.0\"?> \n<root> \n  <product id=\"1\"> \n    <name>Product-A<name> \n    <price>$199.95</price> \n  </product> \n  <product id=\"2\"> \n    <name>Product-B</name> \n    <price>$129.95</price> \n  </product> \n</root> \n\n```", "```py\npage %>% html_nodes(xpath = \"//p\") \n## {xml_nodeset (5)} \n## [1] <p>The following is a list of products</p> \n## [2] <p>Description for Product-A</p> \n## [3] <p>Description for Product-B</p> \n## [4] <p>Description for Product-C</p> \n## [5] <p>All products are available for sale!</p> \n\n```", "```py\npage %>% html_nodes(xpath = \"//li[@class]\") \n## {xml_nodeset (1)} \n## [1] <li class=\"selected\">\\n        <span class=\"name\">Pro ... \n\n```", "```py\npage %>% html_nodes(xpath = \"//div[@id='list']/ul/li\") \n## {xml_nodeset (3)} \n## [1] <li>\\n        <span class=\"name\">Product-A</span>\\n   ... \n## [2] <li class=\"selected\">\\n        <span class=\"name\">Pro ... \n## [3] <li>\\n        <span class=\"name\">Product-C</span>\\n   ... \n\n```", "```py\npage %>% html_nodes(xpath = \"//div[@id='list']//li/span[@class='name']\") \n## {xml_nodeset (3)} \n## [1] <span class=\"name\">Product-A</span> \n## [2] <span class=\"name\">Product-B</span> \n## [3] <span class=\"name\">Product-C</span> \n\n```", "```py\npage %>% \n  html_nodes(xpath = \"//li[@class='selected']/span[@class='name']\") \n## {xml_nodeset (1)} \n## [1] <span class=\"name\">Product-B</span> \n\n```", "```py\npage %>% html_nodes(xpath = \"//div[p]\") \n## {xml_nodeset (3)} \n## [1] <div class=\"info bordered\">\\n          <p>Description ... \n## [2] <div class=\"info\">\\n          <p>Description for Prod ... \n## [3] <div class=\"info\">\\n          <p>Description for Prod ... \n\n```", "```py\npage %>%  \n  html_nodes(xpath = \"//span[@class='info-value' and text()='Good']\") \n## {xml_nodeset (2)} \n## [1] <span class=\"info-value\">Good</span> \n## [2] <span class=\"info-value\">Good</span> \n\n```", "```py\npage %>% \n  html_nodes(xpath = \"//li[div/ul/li[1]/span[@class='info-value' and text()='Good']]/span[@class='name']\") \n## {xml_nodeset (2)} \n## [1] <span class=\"name\">Product-A</span> \n## [2] <span class=\"name\">Product-C</span> \n\n```", "```py\npage %>% \n  html_nodes(xpath = \"//li[div/ul/li[2]/span[@class='info-value' and text()>3]]/span[@class='name']\") \n## {xml_nodeset (2)} \n## [1] <span class=\"name\">Product-A</span> \n## [2] <span class=\"name\">Product-C</span> \n\n```", "```py\npage <- read_html(\"https://cran.rstudio.com/web/packages/available_packages_by_name.html\") \npkg_table <- page %>% \n  html_node(\"table\") %>%  \n  html_table(fill = TRUE) \nhead(pkg_table, 5) \n##            X1 \n## 1             \n## 2          A3 \n## 3      abbyyR \n## 4         abc \n## 5 ABCanalysis \n##                                                                         X2 \n## 1                                                                     <NA> \n## 2 Accurate, Adaptable, and Accessible Error Metrics for Predictive\\nModels \n## 3                  Access to Abbyy Optical Character Recognition (OCR) API \n## 4                         Tools for Approximate Bayesian Computation (ABC) \n## 5                                                    Computed ABC Analysis \n\n```", "```py\npkg_table <- pkg_table[complete.cases(pkg_table), ] \ncolnames(pkg_table) <- c(\"name\", \"title\") \nhead(pkg_table, 3) \n##     name \n## 2     A3 \n## 3 abbyyR \n## 4    abc \n##                                                                      title \n## 2 Accurate, Adaptable, and Accessible Error Metrics for Predictive\\nModels \n## 3                  Access to Abbyy Optical Character Recognition (OCR) API \n## 4                         Tools for Approximate Bayesian Computation (ABC) \n\n```", "```py\npage <- read_html(\"https://finance.yahoo.com/quote/MSFT\") \npage %>% \n  html_node(\"div#quote-header-info > section > span\") %>% \n  html_text() %>% \n  as.numeric() \n## [1] 56.68 \n\n```", "```py\npage %>% \n  html_node(\"#key-statistics table\") %>% \n  html_table() \n##                 X1           X2 \n## 1       Market Cap      442.56B \n## 2  P/E Ratio (ttm)        26.99 \n## 3      Diluted EPS          N/A \n## 4             Beta         1.05 \n## 5    Earnings Date          N/A \n## 6 Dividend & Yield 1.44 (2.56%) \n## 7 Ex-Dividend Date          N/A \n## 8    1y Target Est          N/A \n\n```", "```py\nget_price <- function(symbol) { \n  page <- read_html(sprintf(\"https://finance.yahoo.com/quote/%s\", symbol)) \n  list(symbol = symbol, \n    company = page %>%  \n      html_node(\"div#quote-header-info > div:nth-child(1) > h6\") %>% \n      html_text(), \n    price = page %>%  \n      html_node(\"div#quote-header-info > section > span:nth-child(1)\") %>% \n      html_text() %>% \n      as.numeric()) \n} \n\n```", "```py\nget_price(\"AAPL\") \n## $symbol \n## [1] \"AAPL\" \n##  \n## $company \n## [1] \"Apple Inc.\" \n##  \n## $price \n## [1] 104.19 \n\n```", "```py\npage <- read_html(\"https://stackoverflow.com/questions/tagged/r?sort=votes&pageSize=5\") \nquestions <- page %>%  \n  html_node(\"#questions\") \n\n```", "```py\nquestions %>% \n  html_nodes(\".summary h3\") %>% \n  html_text() \n## [1] \"How to make a great R reproducible example?\"                                        \n## [2] \"How to sort a dataframe by column(s)?\"                                              \n## [3] \"R Grouping functions: sapply vs. lapply vs. apply. vs. tapply vs. by vs. aggregate\" \n## [4] \"How to join (merge) data frames (inner, outer, left, right)?\"                       \n## [5] \"How can we make xkcd style graphs?\" \n\n```", "```py\nquestions %>% \n  html_nodes(\".question-hyperlink\") %>% \n  html_text() \n\n```", "```py\nquestions %>% \n  html_nodes(\".question-summary .vote-count-post\") %>% \n  html_text() %>% \n  as.integer() \n## [1] 1429  746  622  533  471 \n\n```", "```py\nquestions %>% \n  html_nodes(\".question-summary .status strong\") %>% \n  html_text() %>% \n  as.integer() \n## [1] 21 15  8 11  7 \n\n```", "```py\nquestions %>% \n  html_nodes(\".question-summary .tags\") %>% \n  lapply(function(node) { \n    node %>% \n      html_nodes(\".post-tag\") %>% \n      html_text() \n  }) %>% \n  str \n## List of 5 \n##  $ : chr [1:2] \"r\" \"r-faq\" \n##  $ : chr [1:4] \"r\" \"sorting\" \"dataframe\" \"r-faq\" \n##  $ : chr [1:4] \"r\" \"sapply\" \"tapply\" \"r-faq\" \n##  $ : chr [1:5] \"r\" \"join\" \"merge\" \"dataframe\" ... \n##  $ : chr [1:2] \"r\" \"ggplot2\" \n\n```", "```py\nquestions %>% \n  html_nodes(\".question-hyperlink\") %>% \n  html_attr(\"href\") %>% \n  lapply(function(link) { \n    paste0(\"https://stackoverflow.com\", link) %>% \n      read_html() %>% \n      html_node(\"#qinfo\") %>% \n      html_table() %>% \n      setNames(c(\"item\", \"value\")) \n  }) \n## [[1]] \n##     item        value \n## 1  asked  5 years ago \n## 2 viewed 113698 times \n## 3 active   7 days ago \n##  \n## [[2]] \n##     item        value \n## 1  asked  6 years ago \n## 2 viewed 640899 times \n## 3 active 2 months ago \n##  \n## [[3]] \n##     item        value \n## 1  asked  5 years ago \n## 2 viewed 221964 times \n## 3 active  1 month ago \n##  \n## [[4]] \n##     item        value \n## 1  asked  6 years ago \n## 2 viewed 311376 times \n## 3 active  15 days ago \n##  \n## [[5]] \n##     item        value \n## 1  asked  3 years ago \n## 2 viewed  53232 times \n## 3 active 4 months ago \n\n```"]