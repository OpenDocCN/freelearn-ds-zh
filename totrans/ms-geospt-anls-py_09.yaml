- en: ArcGIS API for Python and ArcGIS Online
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ArcGIS API for Python 和 ArcGIS Online
- en: This chapter will introduce the ArcGIS **Application Program Interface** (**API**)
    for Python and ArcGIS Online. The ArcGIS API for Python is a Python library for
    working with maps and geospatial data. This API can be installed locally using
    `conda` and interacts with Esri's cloud GIS, whether that's ArcGIS Online (SaaS)
    or Portal for ArcGIS, a server product that offers on-premises cloud GIS deployment
    for organizations. The API offers a modern solution to scripting for web mapping
    with Python and works well with Jupyter Notebooks.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍用于 Python 和 ArcGIS Online 的 ArcGIS **应用程序编程接口** (**API**)。ArcGIS API for
    Python 是一个用于处理地图和地理空间数据的 Python 库。此 API 可以使用 `conda` 本地安装，并与 Esri 的云 GIS 进行交互，无论是
    ArcGIS Online (SaaS) 还是 Portal for ArcGIS，后者是一款提供本地云 GIS 部署的服务器产品。该 API 为使用 Python
    进行网络地图脚本编写提供了现代解决方案，并且与 Jupyter Notebooks 兼容良好。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Introducing the ArcGIS API for Python
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 ArcGIS API for Python
- en: Installing the API
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 API
- en: Using the API with different Esri user accounts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 API 与不同的 Esri 用户账户
- en: Introducing some modules of the API
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 API 的某些模块
- en: Interacting with the API's map widget
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 API 的地图小部件交互
- en: Searching and displaying vector data
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索和显示矢量数据
- en: Displaying and geoprocessing of raster data
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示和地理处理栅格数据
- en: Setting up a personalized account for using ArcGIS Online
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为使用 ArcGIS Online 设置个性化账户
- en: Publishing and managing content in ArcGIS Online
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 ArcGIS Online 中发布和管理内容
- en: Introducing the ArcGIS API for Python and ArcGIS Online
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 ArcGIS API for Python 和 ArcGIS Online
- en: Esri, the geospatial software company known for its ArcGIS platform, adopted
    and integrated Python into their ArcGIS desktop software, as well as its successor
    ArcGIS Pro. The first Python site package developed by Esri was the `ArcPy` site
    package, which is a collection of Python modules that offers all existing, as
    well as extended, ArcMap and ArcGIS Pro functionality. Python can now be used
    as a scripting and programming language to automate repetitive tasks that involve
    a lot of interaction with the **Graphical User Interface** (**GUI**). With `ArcPy`,
    these tasks could be carried out through a Python script, add-on, or toolbox.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以 ArcGIS 平台而闻名的地理空间软件公司 Esri 将 Python 集成到其 ArcGIS 桌面软件及其继任者 ArcGIS Pro 中。Esri
    开发的第一个 Python 站点包是 `ArcPy` 站点包，它是一组 Python 模块，提供了所有现有的以及扩展的 ArcMap 和 ArcGIS Pro
    功能。现在 Python 可以用作脚本和编程语言来自动化涉及大量与 **图形用户界面** (**GUI**) 交互的重复性任务。通过 `ArcPy`，这些任务可以通过
    Python 脚本、插件或工具箱来执行。
- en: Python was introduced successfully with ArcGIS desktop, while GIS itself was
    moving into the cloud—not only geospatial data but also the software itself. Esri
    offered organizations the possibility to do this through a variety of cloud environment
    offerings, using either public, private, or hybrid cloud services. In this chapter,
    we'll be using ArcGIS Online, the **Software as a Service** (**SaaS**) offering
    that allows users to create, store, and manage maps, applications, and data. Over
    the last few years, ArcGIS Online has become a key component and an integral part
    of Esri's ArcGIS system. Its users can share maps within an organization or the
    world, through ready-to-use tools that are available for the web, smartphones,
    and tablets.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Python 成功地与 ArcGIS 桌面结合使用，而 GIS 本身正迈向云端——不仅包括地理空间数据，还包括软件本身。Esri 通过各种云环境提供方案，使用公共、私有或混合云服务，为组织提供了实现这一点的可能性。在本章中，我们将使用
    ArcGIS Online，这是一个允许用户创建、存储和管理地图、应用程序和数据的 **软件即服务** (**SaaS**) 提供方案。在过去的几年里，ArcGIS
    Online 已成为 Esri ArcGIS 系统的关键组成部分和有机组成部分。其用户可以通过可用于网页、智能手机和平板电脑的现成工具，在组织内或全球范围内共享地图。
- en: A Pythonic web API
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个 Pythonic 网络API
- en: For users to be able to interact with their GIS data, services, and more, Esri
    developed a completely new Pythonic web API called the **ArcGIS API** for Python,
    which consists of a set of subroutine definitions, protocols, and tools for building
    software and applications. It is built on top of the ArcGIS **REpresentational
    State Transfer** (**REST**) API, along with the ArcGIS API for JavaScript. This
    same API is also used (in the background) within the Python API for displaying
    2D and 3D web maps.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让用户能够与其 GIS 数据、服务等进行交互，Esri 开发了一个全新的 Pythonic 网络API，称为 **ArcGIS API** for
    Python，它包含一组用于构建软件和应用程序的子程序定义、协议和工具。它是建立在 ArcGIS **表示状态传输** (**REST**) API 之上，以及
    ArcGIS API for JavaScript。此相同的 API 也用于（在后台）Python API 中显示 2D 和 3D 网络地图。
- en: GIS users can download the freely available ArcGIS API for Python and use it
    to manage their cloud GIS environment, whether that's ArcGIS Online, ArcGIS Portal,
    or ArcGIS Enterprise (the product family formerly known as ArcGIS Server). The
    API requires Python 3.5 or higher. It's possible to use the API together with
    the `ArcPy` site package, but this is optional, the API also works without `ArcPy`
    (or any desktop-based GIS product), or even an ArcGIS Online or Portal environment.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: GIS用户可以下载免费提供的ArcGIS API for Python，并使用它来管理他们的云GIS环境，无论是ArcGIS Online、ArcGIS
    Portal还是ArcGIS Enterprise（以前称为ArcGIS Server）产品系列。该API需要Python 3.5或更高版本。可以使用API与`ArcPy`站点包一起使用，但这不是必需的，API也可以在没有`ArcPy`（或任何基于桌面的GIS产品）的情况下工作，甚至在没有ArcGIS
    Online或Portal环境的情况下。
- en: The API has been written for a larger audience in mind than the current Python
    user, who would use it for data processing or map design—apart from the scripting
    capabilities, the API allows for GIS visualization and analysis, spatial data/content
    management, as well as organization administration. The API is a work-in-progress,
    since its first release in December of 2006, the API has seen a number of updates
    and the current version is 1.4 at the time of writing. Each new release introduces
    new features. Using the API is similar to working with any other Python library—you
    import the API with an `import` statement and can start using it right away, applying
    standard Python syntax and commands. As you're using it in a web environment to
    access a web GIS, it's best to use the browser-based Jupyter Notebook app.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该API是为比当前Python用户更广泛的受众编写的，Python用户可能会用它来进行数据处理或地图设计——除了脚本功能外，该API还允许进行GIS可视化与分析、空间数据/内容管理以及组织管理。该API仍在开发中，自2006年12月首次发布以来，API已经经历了几次更新，当前版本为写作时的1.4版。每个新版本都引入了新功能。使用API与使用任何其他Python库类似——您通过`import`语句导入API，然后可以立即开始使用，应用标准的Python语法和命令。当您在Web环境中使用它来访问Web
    GIS时，最好使用基于浏览器的Jupyter Notebook应用。
- en: Installing the API
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装API
- en: 'The API can be installed in different ways. The easiest way is to use `conda`.
    If this is your first install of the API, you might want to create a separate
    virtual environment through Anaconda3 for the API because of its many dependencies.
    It is important that you install the latest available version of the API, as it
    will also ensure you have the latest available `conda` version installed and the
    API’s dependencies. To install the API using `conda`, run the following command
    in a terminal:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: API可以通过不同的方式安装。最简单的方法是使用`conda`。如果您是第一次安装API，您可能想通过Anaconda3为API创建一个单独的虚拟环境，因为API有许多依赖项。安装API的最新可用版本很重要，因为它还将确保您安装了最新的`conda`版本以及API的依赖项。要使用`conda`安装API，请在终端中运行以下命令：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `-c` in the command refers to a channel (which is an online repository).
    When running this command in a terminal, you will be asked to install a list of
    dependencies. A partial list is displayed in the following screenshot. Notice
    that `NumPy` and `pandas` are also installed, two libraries from the `SciPy` stack
    that are used for data science. The API itself is the first package of the list,
    called `arcgis`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 命令中的`-c`代表一个频道（这是一个在线仓库）。当在终端中运行此命令时，您将被要求安装一系列依赖项。以下截图显示了部分列表。请注意，`NumPy`和`pandas`也被安装了，这两个库来自`SciPy`堆栈，用于数据科学。API本身是列表中的第一个包，称为`arcgis`：
- en: '![](img/ac31cc90-316e-4bc9-8e34-0978aac7160f.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ac31cc90-316e-4bc9-8e34-0978aac7160f.png)'
- en: Testing the API
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试API
- en: 'After the installation, the ArcGIS package can be found in a separate folder
    named `arcgis` followed by the version number inside of the `C:\UserName\Anaconda3\pkgs`
    folder. If you have the API already installed on your computer, you might need
    to update it to the most recent version to ensure everything is working correctly,
    such as the map widget:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，ArcGIS包可以在`C:\UserName\Anaconda3\pkgs`文件夹中的名为`arcgis`的单独文件夹中找到，版本号位于其中。如果您已经在计算机上安装了API，您可能需要将其更新到最新版本以确保一切正常工作，例如地图小部件：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The most recent version of the API at the time of writing is 1.4 and requires
    Python 3.5 or higher. You can test your installation by opening the Jupyter Notebook
    app, as follows, from a terminal or run the application directly from Anaconda3:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 写作时的API最新版本是1.4，需要Python 3.5或更高版本。您可以通过以下方式在终端中打开Jupyter Notebook应用来测试您的安装，或者直接从Anaconda3运行应用程序：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, run the following code and check to see if a map window opens up and
    you receive no error messages:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行以下代码并检查是否打开了一个地图窗口，并且没有收到错误信息：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If you have ArcGIS Pro installed, then you can install the API by using the
    `conda` environment inside Pro, using the Python package manager. Look for the
    Python tab and click on the Add Packages button. Search for `arcgis`, click Install,
    and accept the terms and conditions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已安装 ArcGIS Pro，则可以使用 Pro 内部的 `conda` 环境使用 Python 软件包管理器安装 API。查找 Python 标签并单击“添加包”按钮。搜索“arcgis”，单击安装，并接受条款和条件。
- en: Troubleshooting
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除
- en: If for some reason, you are not able to install and use the API locally, you
    can also try the sandbox version of the API that runs in the cloud [https://notebooks.esri.com/](https://notebooks.esri.com/).
    By clicking this URL, a browser window will open with the Jupyter Notebook, where
    you can create your own Notebooks, run code examples, and use all of the functionality
    of the API.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于某种原因，您无法在本地上安装和使用 API，您还可以尝试在云中运行的 API 的沙盒版本 [https://notebooks.esri.com/](https://notebooks.esri.com/)。通过点击此
    URL，将打开一个浏览器窗口，其中包含 Jupyter Notebook，您可以在其中创建自己的笔记本，运行代码示例，并使用 API 的所有功能。
- en: For an online API reference showing all modules, classes with descriptions,
    and examples see [http://esri.github.io/arcgis-python-api/apidoc/html/index.html](http://esri.github.io/arcgis-python-api/apidoc/html/index.html).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看显示所有模块、带有描述的类和示例的在线 API 参考，请参阅 [http://esri.github.io/arcgis-python-api/apidoc/html/index.html](http://esri.github.io/arcgis-python-api/apidoc/html/index.html)。
- en: For API updates, release notes, and more, refer to [https://developers.arcgis.com/python/guide/release-notes/](https://developers.arcgis.com/python/guide/release-notes/).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 API 更新、发行说明等更多信息，请参阅 [https://developers.arcgis.com/python/guide/release-notes/](https://developers.arcgis.com/python/guide/release-notes/)。
- en: The main page for all info about the API can be found here. It´s an excellent
    source with lots of documentation, a user guide and API reference: [https://developers.arcgis.com/python/](https://developers.arcgis.com/python/).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所有关于 API 的信息的主要页面可以在此找到。这是一个极好的资源，拥有大量的文档、用户指南和 API 参考：[https://developers.arcgis.com/python/](https://developers.arcgis.com/python/)。
- en: Authenticating your Esri user accounts
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证您的 Esri 用户账户
- en: Now that we've installed the API on our machine, it's time to discuss how we
    can use it in combination with different Esri user accounts. As we've said before,
    the API has been created to manage and interact with a web GIS that can be located
    in a cloud environment. To be able to use the API and interact with this web or
    cloud GIS, we need some kind of additional Esri user account to make a connection
    with this web GIS. You can compare this to connecting to an FTP server or remote
    web server from your computer and performing a login procedure using a username
    and password (or token). This procedure ensures a secure connection between server
    and client and access to the right content.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在我们的机器上安装了 API，是时候讨论如何结合不同的 Esri 用户账户使用它了。正如我们之前所说的，API 是为了管理和与位于云环境中的
    Web GIS 交互而创建的。为了能够使用 API 并与这个 Web 或云 GIS 交互，我们需要某种额外的 Esri 用户账户来与这个 Web GIS 建立连接。您可以将其比作从您的计算机连接到
    FTP 服务器或远程 Web 服务器并使用用户名和密码（或令牌）执行登录过程。此过程确保服务器和客户端之间的安全连接以及访问正确的内容。
- en: Different Esri user accounts
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同的 Esri 用户账户
- en: 'The following Esri user accounts give access to ArcGIS Online using the ArcGIS
    API for Python:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 Esri 用户账户可以通过 ArcGIS API for Python 访问 ArcGIS Online：
- en: An anonymous user account that gives you access to ArcGIS Online without passing
    in any user information. This is a quick solution for testing some basic functionality
    but doesn't offer any advanced functionality that comes with a personalized account.
    We'll cover this option as we proceed further in two of the three hands-on exercises
    in this chapter.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个匿名用户账户，它允许您访问 ArcGIS Online 而无需传递任何用户信息。这是一个快速测试一些基本功能的解决方案，但不会提供带有个性化账户的高级功能。我们将在本章接下来的三个动手练习中的两个中介绍此选项。
- en: An ArcGIS Online organizational account (or Portal for ArcGIS account). This
    requires a (paid) subscription to ArcGIS Online or Portal for ArcGIS. This option
    gives you the most functionality possible but is not covered here.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个 ArcGIS Online 组织账户（或 Portal for ArcGIS 账户）。这需要订阅 ArcGIS Online 或 Portal for
    ArcGIS（付费）。此选项提供了可能的最大功能，但在此处未涵盖。
- en: An ArcGIS Enterprise trial account. This option is free and provides you with
    service credits that are required for creating maps and publishing content. This
    trial account only lasts for 21 days and after that has to be transferred to a
    paid account in order to be continued. Setting up a trial account is covered as
    we proceed further.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ArcGIS Enterprise试用账户。这个选项是免费的，并提供你创建地图和发布内容所需的服务积分。这个试用账户仅持续21天，之后必须转移到付费账户才能继续使用。设置试用账户将在我们进一步进行时进行说明。
- en: A free Esri developer account. This account is part of the ArcGIS Developer
    program that gives you 50 service credits for developing and testing personal
    apps, as well as using ArcGIS Online, among others. This option is covered as
    we proceed further.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个免费的Esri开发者账户。这个账户是ArcGIS开发者计划的一部分，为你提供50个服务积分，用于开发、测试个人应用程序，以及使用ArcGIS Online等。这个选项将在我们进一步进行时进行说明。
- en: Finally, there's the option to create a public ArcGIS account and log in to
    ArcGIS Online using a web browser. Using these login details, you can now connect
    to ArcGIS Online with the API, but with limited functionality. This option was
    added in the 1.3 version of the API and is not covered here.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，还有创建公共ArcGIS账户并使用网络浏览器登录ArcGIS Online的选项。使用这些登录详情，你现在可以使用API连接到ArcGIS Online，但功能有限。这个选项是在API的1.3版本中添加的，这里没有进行说明。
- en: Summarizing the previously mentioned points, we have covered a number of different
    user accounts to access ArcGIS Online with the API. A personalized account gives
    you added functionality over an anonymous one. We'll use both types for the exercises
    later in this chapter. Let's now look at how the API is organized into different
    modules and what functionality they offer.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 总结前面提到的内容，我们已经涵盖了多个不同的用户账户，以便使用API访问ArcGIS Online。个性化账户比匿名账户提供了更多的功能。我们将在本章后面的练习中使用这两种类型。现在让我们看看API是如何组织成不同的模块以及它们提供的功能。
- en: Different modules of the ArcGIS API for Python
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python ArcGIS API的不同模块
- en: 'Just like other Python libraries, the API has Python modules, classes, functions,
    and types that can be used for managing and working with elements of the ArcGIS
    platform information model. Because the API is meant for different user groups
    that require their own unique tools, the API has been organized into 13 different
    modules. It''s not necessary to cover them all here, but the most important ones
    for this chapter are mentioned as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他Python库一样，API有Python模块、类、函数和类型，可以用来管理和处理ArcGIS平台信息模型中的元素。由于API旨在满足需要自己独特工具的不同用户群体，因此API被组织成13个不同的模块。在这里不需要涵盖所有模块，但本章最重要的模块如下所述：
- en: 'The GIS module: This is the most important module and is the entry point to
    a GIS that is hosted in ArcGIS Online or ArcGIS Portal. The GIS module lets you
    manage users, groups, and content in a GIS. The term GIS refers in this context
    to a collaborative environment for creating, visualizing, and sharing maps, scenes,
    apps, layers, analytics, and data.'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GIS模块：这是最重要的模块，是访问托管在ArcGIS Online或ArcGIS Portal中的GIS的入口点。GIS模块允许你在GIS中管理用户、组和内容。在这个上下文中，GIS指的是一个用于创建、可视化和共享地图、场景、应用程序、图层、分析和数据的协作环境。
- en: 'The features module: This module represents the vector data part of the API.
    Vector data is represented through this module as feature data, feature layers,
    or collections of feature layers. Individual data elements are represented by
    feature objects, while classes such as `FeatureSet`, `FeatureLayer`, and `FeatureCollection`
    represent different groupings of feature data.'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 特征模块：此模块代表API的矢量数据部分。矢量数据通过此模块表示为特征数据、特征层或特征层的集合。单个数据元素由特征对象表示，而`FeatureSet`、`FeatureLayer`和`FeatureCollection`等类则代表特征数据的不同分组。
- en: 'The raster module: This module contains classes and raster analysis functions
    for working with raster data and imagery layers. Whereas the features module represents
    the vector data component of the API, the raster module is the raster data component.
    This module uses the `Imagerylayer` class for displaying data from imagery services
    and offers raster functions for on-the-fly image processing. Imagery layers can
    be visualized using the map widget.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 栅格模块：此模块包含用于处理栅格数据和影像层的类和栅格分析函数。而特征模块代表API的矢量数据组件，栅格模块则是栅格数据组件。此模块使用`Imagerylayer`类来显示影像服务的数据，并提供实时图像处理的栅格函数。可以使用地图小部件来可视化影像层。
- en: 'The geoprocessing module: This module is required for importing toolboxes with
    geoprocessing capabilities that are not part of the API but are available through
    ArcGIS Online. These geoprocessing toolboxes are imported as native Python modules
    so that you can call the functions available in the imported module to invoke
    these tools. The API itself also includes a rich collection of geoprocessing tools,
    that are available through other modules defined by spatial data type.'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地理处理模块：此模块用于导入具有地理处理功能的工具箱，这些功能不是API的一部分，但可通过ArcGIS Online获得。这些地理处理工具箱作为原生Python模块导入，以便您可以调用导入模块中可用的函数来调用这些工具。API本身还包括丰富的地理处理工具集合，这些工具可通过定义空间数据类型的其他模块获得。
- en: A geoprocessing tool is a function that performs an operation on GIS data, starting
    with an input dataset. Then, an operation is performed on that dataset, and finally
    the result of the operation is returned as an output dataset.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 地理处理工具是一个在GIS数据上执行操作的函数，从输入数据集开始。然后在该数据集上执行操作，最后将操作的结果作为输出数据集返回。
- en: 'The widgets module: It provides components for visualizing GIS data and analysis
    and includes the MapView Jupyter Notebook widget. We''ll use this widget next
    for visualizing maps and layers. This is not the only visualization module—the
    separate mapping module offers different mapping layers and 2D/3D mapping and
    visualization components.'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 小部件模块：它提供了用于可视化GIS数据和分析的组件，包括MapView Jupyter Notebook小部件。我们将使用此小部件来可视化地图和图层。这不是唯一的可视化模块——独立的映射模块提供了不同的映射层和2D/3D映射和可视化组件。
- en: As you can see, the API offers a broad range of modules for different tasks
    and users, ranging from publishing mapping data, performing geospatial analysis,
    and data manipulation. All modules use Python as the scripting language to manage
    GIS data and functionality. Let's now start using the API and explore some of
    the basic functionality before moving on to more advanced tasks.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，该API为不同任务和用户提供了广泛的功能模块，包括发布地图数据、执行地理空间分析和数据处理。所有模块都使用Python作为脚本语言来管理GIS数据和功能。现在，让我们开始使用API，探索一些基本功能，然后再进行更高级的任务。
- en: Exercise 1 – importing the API and using the map widget
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习1 - 导入API和使用地图小部件
- en: 'It''s now time to start using the API. Follow the instructions as mentioned,
    open a new Notebook in the Jupyter Notebook application where you can access the
    API. Type and run the following code. We''ll start by importing the API so that
    we can use its modules, functions, and classes:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候开始使用API了。按照说明操作，在Jupyter Notebook应用程序中打开一个新的Notebook，您可以在其中访问API。输入并运行以下代码。我们将首先导入API，以便我们可以使用其模块、函数和类：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The second line of the code can be broken down as follows—`arcgis.gis` refers
    to a submodule (`gis`) in the `arcgis` module. What''s being imported (`GIS`),
    is a `GIS` object that includes a map widget for displaying geographic locations,
    visualizing GIS content, as well as the analysis results. Next, we''ll create
    a `GIS` object by assigning it to a variable with the same name, but spelled in
    lowercase:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的第二行可以分解如下——`arcgis.gis`指的是`arcgis`模块中的一个子模块（`gis`）。被导入的（`GIS`）是一个包含用于显示地理位置、可视化GIS内容和分析结果的地图小部件的`GIS`对象。接下来，我们将通过将相同名称的变量分配给它来创建一个`GIS`对象，但拼写为小写：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is an example of an anonymous login as we don''t pass in any login details
    between the parentheses of `GIS()`. Now we''ll use the map widget by creating
    a map object and assigning it to a variable that can then be queried to bring
    up the widget in the Notebook:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个匿名登录的示例，因为我们没有在`GIS()`括号中传递任何登录详情。现在，我们将通过创建一个地图对象并将其分配给一个变量来使用地图小部件，然后可以查询该变量以在Notebook中显示小部件：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Note that you have to repeat and run the variable name on a separate, new line
    to have a map displayed. A map window will be opened in your Jupyter Notebook
    application showing a 2D color map of the city of San Francisco:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您必须在新的一行上重复并运行变量名，才能显示地图。在您的Jupyter Notebook应用程序中，将打开一个地图窗口，显示旧金山市的2D彩色地图：
- en: '![](img/d3761169-f2b8-4498-b431-c9d4d8c6d780.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d3761169-f2b8-4498-b431-c9d4d8c6d780.png)'
- en: 'You can adjust the zoom level of the map through the `zoom` property and passing
    in an integer:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过`zoom`属性和传递一个整数来调整地图的缩放级别：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'A map display without a zoom-level value gives you a default zoom value of
    2\. A larger value will give you a smaller area showing more details, using a
    larger scale. This map is one of the several basemaps that ArcGIS Online offers
    as a backdrop for mapping data. We can query which type of basemap we''re displaying
    currently:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 没有缩放级别值的地图显示将为您提供默认的缩放值 2。较大的值将显示较小的区域，并使用更大的比例显示更多细节。这个地图是 ArcGIS Online 提供的几个底图之一，用作映射数据的背景。我们可以查询我们当前显示的底图类型：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You might want to know how to access all of the object properties. This can
    be done by typing the object name, followed by a dot and pressing *Tab*. Then,
    a window with a drop-down list containing all available properties will be displayed:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能想知道如何访问所有对象属性。这可以通过键入对象名称，然后按点号并按 *Tab* 键来完成。然后，一个包含所有可用属性的下拉列表窗口将显示出来：
- en: '![](img/89d04b73-9663-4b96-b7f5-60b21eb1d20e.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89d04b73-9663-4b96-b7f5-60b21eb1d20e.png)'
- en: 'We can see the `basemap` property being listed in the previously mentioned
    screenshot. For more information on a given property, select the property of your
    choice followed by a question mark. Then, an information window will open at the
    bottom of your screen displaying more information:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在之前提到的截图中看到 `basemap` 属性被列出。有关特定属性的更多信息，请选择您想要的属性，然后跟上一个问号。然后，一个信息窗口将在屏幕底部打开，显示更多信息：
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The `basemaps` property can also be queried directly and returns a list object
    including new lines for each value:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`basemaps` 属性也可以直接查询，并返回一个包含每个值的新行的列表对象：'
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can use the information from this window by changing our basemap, by passing
    in one of the available options in the basemap property (note the singular) as
    follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过更改我们的底图，通过在底图属性中传递一个可用的选项（注意单数形式）来使用此窗口的信息，如下所示：
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can see that our basemap now shows a satellite image of San Francisco:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的底图现在显示了旧金山的卫星图像：
- en: '![](img/299420fd-018f-4881-8dfe-b2b59f24f411.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/299420fd-018f-4881-8dfe-b2b59f24f411.png)'
- en: 'Next, we''ll query the **coordinate reference system** (**CRS**) of the map
    that is displayed in our map widget. This information can be queried with the
    extent property, which also shows the four coordinates of our `extent`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查询我们地图小部件中显示的地图的**坐标参考系统**（**CRS**）。此信息可以通过范围属性查询，它还会显示我们 `extent` 的四个坐标：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Let's have a look at the output. Our basemap is an example of a web map, which
    comes in **JavaScript Object Notation** (**JSON**) format for sharing 2D maps.
    Web maps are an example of an Esri specification that allows different applications,
    APIs, and SDKs to create, edit, and display maps. These web maps can be used for
    different Esri applications, such as ArcGIS Online in this particular example.
    The web map specification is in JSON**,** which is indeed the case with our output
    by looking at how it is structured using brackets and using key-value pairs.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看输出结果。我们的底图是一个网络地图的例子，以 **JavaScript 对象表示法**（**JSON**）格式分享 2D 地图。网络地图是 Esri
    规范的一个例子，允许不同的应用程序、API 和 SDK 创建、编辑和显示地图。这些网络地图可用于不同的 Esri 应用程序，例如在本例中的 ArcGIS Online。网络地图规范是
    JSON**，**这确实是我们通过查看其使用括号和键值对的结构来观察到的输出情况。
- en: 'Back to the spatial reference, this information is stored in the `spatialReference`
    object, located at the top-level of the web map JSON hierarchy. In our example,
    we can see the spatial reference being set as `latestWKid: 3857` and `wkid: 102100`.
    Consulting Esri''s online web map specification available at [http://developers.arcgis.com](http://developers.arcgis.com),
    we can see that both refer to a Web Mercator projection, the de facto standard
    for web mapping applications and used by most major online map providers.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '回到空间参考，这些信息存储在位于网络地图 JSON 层次结构顶层的 `spatialReference` 对象中。在我们的例子中，我们可以看到空间参考被设置为
    `latestWKid: 3857` 和 `wkid: 102100`。通过查阅 Esri 在 [http://developers.arcgis.com](http://developers.arcgis.com)
    提供的在线网络地图规范，我们可以看到两者都指的是 Web Mercator 投影，这是网络地图应用程序的事实标准，并被大多数主要在线地图提供商使用。'
- en: This concludes our first hands-on exercise of the API in which we learned how
    to import the API, create a map object, display information on properties of an
    object, and use the map widget. In our next exercise, we'll start working with
    content from ArcGIS Online and add it to our map widget. We'll use a personalized
    account, which enables us to create our own web maps and host them online. Before
    we can do this, you'll need to create a personalized ArcGIS Online account, which
    we'll cover next.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着我们API的第一个动手练习的结束，我们学习了如何导入API、创建地图对象、显示对象属性的信息以及使用地图小部件。在我们下一个练习中，我们将开始使用来自ArcGIS
    Online的内容并将其添加到我们的地图小部件中。我们将使用个性化账户，这使我们能够创建自己的网络地图并在网上托管它们。在我们能够这样做之前，您需要创建一个个性化的ArcGIS
    Online账户，我们将在下一部分介绍。
- en: Creating a personalized ArcGIS Online account
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建个性化的ArcGIS Online账户
- en: For the following exercise, you'll need a named user account for ArcGIS Online.
    This will enable you to create your own map content, save web maps in your own
    content folder in ArcGIS Online, share content with others, and more. We'll cover
    two free options to do this. The easiest and quickest way is to create a free
    ArcGIS developer account, which comes with the service credits required to use
    some of the capabilities of ArcGIS Online. It's also possible to create a free
    organizational trial account for ArcGIS Online, which has more options. Both options
    are covered here.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的练习中，您需要一个名为的用户账户用于ArcGIS Online。这将使您能够创建自己的地图内容，将网络地图保存在ArcGIS Online中您自己的内容文件夹中，与他人共享内容，等等。我们将介绍两种免费选项来完成这项任务。最简单、最快的方法是创建一个免费的ArcGIS开发者账户，该账户包含使用ArcGIS
    Online一些功能所需的服务积分。还有可能创建一个免费的ArcGIS Online组织试用账户，它提供了更多选项。这里将介绍这两种选项。
- en: 'To create an ArcGIS Developer account, open a browser window and navigate to
    [https://developers.arcgis.com/sign-up](https://developers.arcgis.com/sign-up).
    Fill in the fields on the left (First Name, Last Name, and Email):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个ArcGIS开发者账户，打开浏览器窗口并导航到[https://developers.arcgis.com/sign-up](https://developers.arcgis.com/sign-up)。填写左侧的字段（名字、姓氏和电子邮件）：
- en: '![](img/e4280b8a-e20b-4699-92b1-731122faac93.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e4280b8a-e20b-4699-92b1-731122faac93.png)'
- en: Next, you'll receive a confirmation email that is sent to the email address
    you entered online. The email contains a URL that you need to click on to active
    your account. After that, you can set up your account and choose a username and
    password. This username and password can be used to log in to ArcGIS Online using
    the ArcGIS API for Python. You will also be assigned an account URL path, something
    like `http://firstname-lastname.maps.arcgis.com`. This URL path is also required
    for logging into ArcGIS Online using the ArcGIS API for Python.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将收到一封确认邮件，该邮件将发送到您在线输入的电子邮件地址。邮件中包含一个您需要点击以激活账户的URL。之后，您可以设置账户并选择用户名和密码。这个用户名和密码可以用于通过ArcGIS
    API for Python登录ArcGIS Online。您还将被分配一个账户URL路径，类似于`http://firstname-lastname.maps.arcgis.com`。此URL路径也是使用ArcGIS
    API for Python登录ArcGIS Online所必需的。
- en: 'Next, we''ll explain how to create a public ArcGIS account. Navigate to [www.arcgis.com](http://www.arcgis.com)
    and click the orange Free trial -> button:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将解释如何创建一个公共的ArcGIS账户。导航到[www.arcgis.com](http://www.arcgis.com)并点击橙色免费试用->按钮：
- en: '![](img/14072f4a-9935-4ebd-abd8-e14e0bd13397.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/14072f4a-9935-4ebd-abd8-e14e0bd13397.png)'
- en: Next, you will be directed to a new page with a form that needs to be filled
    in with your personal details. After that, you can create an ArcGIS Online account.
    The username and password can be used as login details for ArcGIS Online.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将被引导到一个新的页面，其中包含一个需要填写您个人详细信息的表单。之后，您可以创建一个ArcGIS Online账户。用户名和密码可以用作ArcGIS
    Online的登录详情。
- en: Exercise 2 – searching, displaying, and describing geospatial content
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习2 – 搜索、显示和描述地理空间内容
- en: In the following exercise, we'll search for online content, add it to our map,
    and describe the data. We'll finish by saving your map widget directly into a
    web map that is stored in your personal content folder in ArcGIS Online. This
    is a new feature that comes with the 1.3 version of the API, which makes it really
    easy to create web maps. The content we'll be using is a feature layer file containing
    bike trails in Solano County in California. This content is available through
    ArcGIS Online. We can use the API to search the content, reference it, and add
    it to our map widget in our Jupyter Notebook app.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的练习中，我们将搜索在线内容，将其添加到我们的地图中，并描述数据。最后，我们将直接将您的地图小部件保存到ArcGIS Online中您个人内容文件夹内的网络地图中。这是API
    1.3版本的新功能，使得创建网络地图变得非常容易。我们将使用的内容是一个包含加利福尼亚州索诺马县自行车道特征层的文件。此内容可通过ArcGIS Online获取。我们可以使用API搜索内容、引用它并将其添加到我们的Jupyter
    Notebook应用程序中的地图小部件中。
- en: 'First, we''ll log into ArcGIS Online using a personal account. Read the code
    and follow the instructions as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用个人账户登录到ArcGIS Online。阅读代码并按照以下说明操作：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the previous code, you are required to type your own personal details between
    the brackets following the capitalized `GIS` in the third line, starting with
    a personal URL, username, and password. If you've created a free ArcGIS developer
    account, this will look something like `gis` = `GIS(“https://firstname-lastname.maps.arcgis.com”,
    “username”, “password”)`. If you've signed up for a trial period for ArcGIS Online,
    the first URL will be [https://www.arcgis.com](https://www.arcgis.com), followed
    by your username and password.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，您需要在第三行中紧随大写`GIS`之后的括号内输入您自己的个人详细信息，从个人URL、用户名和密码开始。如果您已创建免费的ArcGIS开发者账户，这看起来可能像`gis`
    = `GIS(“https://firstname-lastname.maps.arcgis.com”, “username”, “password”)`。如果您已注册ArcGIS
    Online的试用版，第一个URL将是[https://www.arcgis.com](https://www.arcgis.com)，后面跟着您的用户名和密码。
- en: 'Next, we''ll open up a map of Solano County, our area of interest:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打开索诺马县的地图，这是我们感兴趣的区域：
- en: '[PRE14]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To search for specific content outside of our own organization, use the following
    code that includes a query with specific search terms. Here, we''ve used trails
    in and near San Francisco:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要搜索我们组织之外的具体内容，请使用以下包含特定搜索词查询的代码。在这里，我们使用了“在”和“附近”旧金山的“trails”：
- en: '[PRE15]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In the previous code, we''re using the content property of the GIS object to
    search for content. Using a personalized account, we specify we want to search
    for data outside of our own organization. Our query is looking for trails near
    San Francisco of the type `"Feature Layer"`. Next, the results are returned by
    repeating the variable name. The output in this case looks like the following
    list but could be different for the reader. For brevity, only the first three
    search results are shown:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们正在使用GIS对象的content属性来搜索内容。使用个性化账户，我们指定我们想要搜索我们组织之外的数据。我们的查询正在寻找类型为`"Feature
    Layer"`的旧金山附近的路径。接下来，通过重复变量名返回结果。在这种情况下，输出看起来像以下列表，但可能因读者而异。为了简洁起见，仅显示了前三个搜索结果：
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The items are returned as a list, with each item consisting of its title, type,
    and owner name. We can also show this items list in a different way if we use
    the Jupyter Notebook application:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 项目以列表形式返回，每个项目包括其标题、类型和所有者名称。如果我们使用Jupyter Notebook应用程序，我们也可以以不同的方式显示此项目列表：
- en: '[PRE17]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, our search results are returned with a thumbnail picture, a title, and
    description. The title is also a hyperlink that will take you to an ArcGIS Online
    web page where you can display the content in a viewer and consult the metadata.
    We are interested in the following item showing bike trails in Solano County in
    a feature collection. This is a collection of feature layers and a table, meaning
    we have to find a way to access the right feature layer and add it to our map
    widget:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的搜索结果返回了缩略图图片、标题和描述。标题也是一个超链接，它将带您到ArcGIS Online网页，您可以在其中查看内容并咨询元数据。我们对以下项目感兴趣，该项目在要素集合中显示了索诺马县的自行车道。这是一个要素层和表的集合，这意味着我们必须找到一种方法来访问正确的要素层并将其添加到我们的地图小部件中：
- en: '![](img/44a025b9-ebd7-4acb-9f40-542630c09d89.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/44a025b9-ebd7-4acb-9f40-542630c09d89.png)'
- en: 'We now want to display the bike trail data from this feature collection on
    the map. To do this, we need to reference the data source in our code. We can
    do this as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们希望在地图上显示来自此要素集合的自行车道数据。为此，我们需要在我们的代码中引用数据源。我们可以这样做：
- en: '[PRE18]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The code works as follows, the first line creates a variable that references
    the item from our search results list that contains the Bike Trails service layer.
    Next, we'll use the layers property on this item to see how many layers the item
    contains, in this case two layers, indexed `0` and `1`.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的工作原理如下，第一行创建了一个变量，该变量引用了我们的搜索结果列表中包含自行车路径服务层的项目。接下来，我们将使用此项目的图层属性来查看该项目包含多少图层，在这种情况下有两个图层，分别索引为`0`和`1`。
- en: 'Next, we want the names of both layers. Using a `for` loop, we can `print`
    the layer names:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们想要两个图层的名称。使用`for`循环，我们可以`print`图层名称：
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can see that the bike trails are stored in the first layer. Next, we''ll
    reference this layer within the service layer by assigning it the `name bike_trails_layer` variable.
    We''ll also print the feature layer URL by repeating our newly created variable:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到自行车路径存储在第一层。接下来，我们将在这个服务层中引用这个图层，通过将其分配给`name bike_trails_layer`变量。我们还将通过重复我们新创建的变量来打印要素层URL。
- en: '[PRE20]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Using a `pandas` dataframe, we can visualize the attribute table that comes
    with the layer:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pandas`数据框，我们可以可视化随图层一起提供的属性表：
- en: '[PRE21]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Limiting the output to the first five rows using the `head()` function, we
    get the following output:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`head()`函数限制输出到前五行，我们得到以下输出：
- en: '![](img/d8fda3a7-75e1-43e5-bd21-bfcce1c5d574.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d8fda3a7-75e1-43e5-bd21-bfcce1c5d574.png)'
- en: 'We can now add the layer to the map and look at the results:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将图层添加到地图中并查看结果：
- en: '[PRE22]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The bike trails will be displayed on top of our basemap in the map widget.
    If you don''t see the trails, you may need to zoom in and out a few times, as
    well as pan the map to the right until you see the following result, showing the
    different bike trails as line segments on top of the basemap:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 自行车路径将在地图小部件中的底图上显示。如果你看不到路径，你可能需要放大和缩小几次，以及将地图向右平移，直到你看到以下结果，显示不同的自行车路径作为底图上的线段：
- en: '![](img/48bb0741-6acc-4abc-a7c6-02c6eb5752b8.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/48bb0741-6acc-4abc-a7c6-02c6eb5752b8.png)'
- en: 'We''ll now create our own web map from this map widget. This is a recent feature
    of the API, which is very powerful for creating and hosting your own web maps
    in ArcGIS Online. This is not the only way to create web maps, but serves as an
    example of how you can use the API to do this. By importing the `WebMap` class,
    we can create an instance of this class through a variable called `wm`, which
    will store our web map. Using the `save` function, we can simply save this map
    widget as a web map in our own organization''s content folder:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将从这个地图小部件创建自己的网络地图。这是API的一个新功能，在ArcGIS Online中创建和托管自己的网络地图非常强大。这不是创建网络地图的唯一方法，但作为如何使用API来完成此操作的示例。通过导入`WebMap`类，我们可以通过一个名为`wm`的变量创建这个类的实例，该变量将存储我们的网络地图。使用`save`函数，我们可以简单地将其作为网络地图保存到我们自己的组织内容文件夹中：
- en: '[PRE23]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Python returns our item that we can immediately visit online by clicking the
    URL underlined in blue, after providing our login credentials to access our organizational
    page of ArcGIS Online:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Python返回我们可以立即通过点击蓝色下划线URL在线访问的项目，在提供登录凭据以访问我们的ArcGIS Online组织页面后：
- en: '![](img/36720b69-491e-4356-9404-f0735b11b5eb.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/36720b69-491e-4356-9404-f0735b11b5eb.png)'
- en: We can edit the metadata in the overview tab, while we can delete it in the
    Settings tab (scroll down to see this option marked in red).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在概述标签中编辑元数据，而在设置标签中可以删除它（向下滚动以查看标记为红色的此选项）。
- en: 'Returning to our Jupyter Notebook, we can display the information from the
    service URL using Python, returning output in JSON format, showing only the first
    three results here:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到我们的Jupyter Notebook，我们可以使用Python显示服务URL的信息，返回的输出以JSON格式显示，这里只显示前三个结果：
- en: '[PRE24]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'By using a `for` loop, we can display the field names:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`for`循环，我们可以显示字段名称：
- en: '[PRE25]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You can also access individual properties of the feature layer, for example
    the `extent`:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以访问要素层的单个属性，例如`extent`：
- en: '[PRE26]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This concludes the second exercise, in which we learned how to search for content,
    add it to our map widget, and describe the data we're working with. We'll now
    have a look at the raster module to see how we can visualize and process raster
    imagery.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了第二个练习，我们学习了如何搜索内容，将其添加到我们的地图小部件中，并描述我们正在处理的数据。现在，我们将查看栅格模块，看看我们如何可视化和处理栅格影像。
- en: Exercise 3 – working with raster data and the API's geoprocessing functions
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习3 – 使用栅格数据和API的地理处理函数
- en: 'For this exercise, we''ll have a look at the raster module. We''ll work with
    raster data in the form of Landsat 8 satellite images and look at ways to describe
    the data and use geoprocessing functionality from ArcGIS Online. As always, we''ll
    start with importing the `arcgis` package and `gis` module, this time using an
    anonymous login:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个练习，我们将查看栅格模块。我们将以Landsat 8卫星图像的形式处理栅格数据，并查看描述数据和使用来自ArcGIS Online的地理处理功能的方法。像往常一样，我们将从导入`arcgis`包和`gis`模块开始，这次使用匿名登录：
- en: '[PRE27]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Next, we''ll search for content—we''ll specify that we''re looking for imagery
    layers, the data type for imagery used for the raster module. We limit the results
    to a maximum of `2`:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将搜索内容——我们将指定我们正在寻找图像图层，这是用于栅格模块的图像数据类型。我们将结果限制在最多`2`个：
- en: '[PRE28]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Next, we''ll display the items as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将按以下方式显示项目：
- en: '[PRE29]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output shows the following two items:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示了以下两个项目：
- en: '![](img/c634707a-8be2-4d92-a456-b7f1a0a51ccf.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c634707a-8be2-4d92-a456-b7f1a0a51ccf.png)'
- en: 'We''re interested in the first item of the results. We can reference it as
    follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对结果中的第一个项目感兴趣。我们可以如下引用它：
- en: '[PRE30]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let''s now investigate this item a little more by clicking the blue Landsat
    8 Views URL. It takes you to a web page with a description of the dataset. Have
    a look at the band numbers and their description. The API offers raster functions
    available on this landsat layer, which we''ll get to in a minute. First, we''ll
    access the imagery layer through the layers property of the item:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过单击蓝色Landsat 8视图URL来更深入地研究这个项目。它将您带到包含数据集描述的网页。查看波段编号及其描述。API提供了在此landsat层上可用的栅格功能，我们将在下一分钟介绍。首先，我们将通过项目的图层属性访问图像层：
- en: '[PRE31]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Next, we can reference and visualize the layer as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以如下引用和可视化图层：
- en: '[PRE32]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The output shows the layer, covering the whole earth:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示了覆盖整个地球的图层：
- en: '![](img/0bc10ec9-1cd2-4e64-88e3-fa1991e4220b.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0bc10ec9-1cd2-4e64-88e3-fa1991e4220b.png)'
- en: 'Having the image layer available as a Python object we can print all of available
    properties, returned, as before, in JSON:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当图像图层作为Python对象可用时，我们可以打印所有可用的属性，如前所述，以JSON格式返回：
- en: '[PRE33]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'A more visually attractive imagery layer item description can be printed using
    the following code:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下代码打印出更具视觉吸引力的图像图层项目描述：
- en: '[PRE34]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Using a `pandas` dataframe, we can explore the different wavelength bands in
    more detail:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pandas`数据框，我们可以更详细地探索不同的波长波段：
- en: '[PRE35]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The output is now presented in a `pandas` dataframe object:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 输出现在以`pandas`数据框对象的形式呈现：
- en: '![](img/70c48a35-0ede-47d2-908e-00bfcff984ff.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/70c48a35-0ede-47d2-908e-00bfcff984ff.png)'
- en: 'Now we''ll get to the raster functions part. The API provides a set of raster
    functions to be used on the imagery layer that are rendered server-side and returned
    to the user. To minimize the output, the user needs to specify a location or area,
    whose screen extent will be used as input for a raster function. Raster functions
    can also be chained together and work on large datasets too. The following `for`
    loop displays all of the available raster functions available for this particular
    dataset:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将进入栅格功能部分。API提供了一组用于图像层并在服务器端渲染并返回给用户的栅格功能。为了最小化输出，用户需要指定一个位置或区域，其屏幕范围将用作栅格功能的输入。栅格功能也可以链接在一起，并在大型数据集上工作。以下`for`循环显示了可用于此特定数据集的所有可用栅格功能：
- en: '[PRE36]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The output shows all of the available raster functions on a separate line:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 输出在单独的一行上显示了所有可用的栅格功能：
- en: '![](img/3eabc582-d027-4456-a89d-6d5edb8a620e.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3eabc582-d027-4456-a89d-6d5edb8a620e.png)'
- en: 'This information is also present in the full properties list we printed out
    earlier. Next, we''ll try out some of these raster functions on a map showing
    the area of Madrid, Spain. We''ll start by creating an instance of the map:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 此信息也包含在我们之前打印出的完整属性列表中。接下来，我们将在显示西班牙马德里地区的地图上尝试一些这些栅格功能。我们首先创建地图的一个实例：
- en: '[PRE37]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Then, we''ll add our satellite image to the map widget, which we can use for
    various raster functions:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将把我们的卫星图像添加到地图小部件中，我们可以使用它进行各种栅格功能：
- en: '[PRE38]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The output will look like this:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将看起来像这样：
- en: '![](img/f8c5c752-f5ca-43ac-899e-ae2075fc3d14.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f8c5c752-f5ca-43ac-899e-ae2075fc3d14.png)'
- en: 'We''ll now need to import the `apply` function from the raster module in order
    to apply the raster functions:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要从栅格模块导入`apply`函数，以便应用栅格功能：
- en: '[PRE39]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'First, we''ll create a natural color image with dynamic range adjustment, using
    bands 4, 3, and 2:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个具有动态范围调整的自然色图像，使用波段4、3和2：
- en: '[PRE40]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Update the map as follows and see how it is different than before:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式更新地图，看看它与之前有何不同：
- en: '[PRE41]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output will look like this:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将看起来像这样：
- en: '![](img/14851948-bf1b-483b-ad14-91049c238d94.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/14851948-bf1b-483b-ad14-91049c238d94.png)'
- en: 'We''ll repeat the procedure, but this time we''ll visualize the agricultural
    map:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重复这个程序，但这次我们将可视化农业地图：
- en: '[PRE42]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'This raster function uses the bands 6, 5 and 2, referring to shortwave IR-1,
    near-IR and blue, respectively.  We can see that our study area shows all of the
    three following categories—vigorous vegetation is bright green, stressed vegetation
    dull green, and bare areas as brown. We can verify the results in our map widget:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这个栅格函数使用6、5和2波段，分别代表短波红外-1、近红外和蓝色。我们可以看到我们的研究区域显示了以下三个类别——茂盛的植被是亮绿色，受压的植被是暗绿色，裸露区域是棕色。我们可以在我们的地图小部件中验证这些结果：
- en: '![](img/0046dab1-8ba3-40a2-bb42-b2a44719f1ea.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0046dab1-8ba3-40a2-bb42-b2a44719f1ea.png)'
- en: As you can see, the raster module enables quick geoprocessing of raster imagery
    in the cloud, and returns and displays the results on your screen quickly. This
    is just one of the many raster functions of the module, and there is much more
    to discover. This concludes this exercise where we looked at how we search for
    raster imagery, display it, and use geoprocessing capabilities of ArcGIS Online
    using the ArcGIS API for Python’s raster module.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，栅格模块能够快速在云中对栅格影像进行地理处理，并快速返回和显示结果在你的屏幕上。这只是模块的许多栅格功能之一，还有更多值得探索。这结束了我们查看如何搜索栅格影像、显示它以及使用ArcGIS
    Online的地理处理功能，通过ArcGIS API for Python的栅格模块。
- en: Summary
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter introduced the brand new ArcGIS API for Python, which is built
    on Python 3.5\. You learned how to make use of the API, Jupyter Notebooks, and
    data processing with data stored in the cloud-based ArcGIS Online system. We covered
    how the API is organized into different modules, how to install the API, how to
    use the map widget, how to log in to ArcGIS Online using different user accounts,
    and working with vector and raster data. Using some of the API modules, we learned
    how to use the API for Python to perform basic geospatial analysis and to create
    ArcGIS Online web maps.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了全新的ArcGIS API for Python，它是基于Python 3.5构建的。你学习了如何使用API、Jupyter Notebooks以及存储在基于云的ArcGIS
    Online系统中的数据处理。我们涵盖了API如何组织成不同的模块、如何安装API、如何使用地图小部件、如何使用不同的用户账户登录ArcGIS Online，以及如何处理矢量数据和栅格数据。使用一些API模块，我们学习了如何使用Python
    API进行基本的地理空间分析和创建ArcGIS Online网络地图。
- en: The next chapter will introduce Python tools for interacting with cloud-based
    data for search and fast data processing. In particular, it focuses on the use
    of Elasticsearch and MapD GPU databases, both of which are based on the AWS cloud
    infrastructure. The reader will learn to create cloud services for geospatial
    search, geolocated data processing, geolocated data, and learn how to use Python
    libraries to interact with these services.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍用于与云数据交互的Python工具，用于搜索和快速数据处理。特别是，它侧重于Elasticsearch和MapD GPU数据库的使用，这两个数据库都基于AWS云基础设施。读者将学习如何创建用于地理空间搜索、地理定位数据处理、地理定位数据的云服务，以及如何使用Python库与这些服务交互。
