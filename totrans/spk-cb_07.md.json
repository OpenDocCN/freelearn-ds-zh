["```py\n    $ spark-shell\n\n    ```", "```py\n    scala> import org.apache.spark.mllib.linalg.Vectors\n    scala> import org.apache.spark.mllib.regression.LabeledPoint\n    scala> import org.apache.spark.mllib.regression.LinearRegressionWithSGD\n\n    ```", "```py\n    scala> val points = Array(\n    LabeledPoint(1620000,Vectors.dense(2100)),\n    LabeledPoint(1690000,Vectors.dense(2300)),\n    LabeledPoint(1400000,Vectors.dense(2046)),\n    LabeledPoint(2000000,Vectors.dense(4314)),\n    LabeledPoint(1060000,Vectors.dense(1244)),\n    LabeledPoint(3830000,Vectors.dense(4608)),\n    LabeledPoint(1230000,Vectors.dense(2173)),\n    LabeledPoint(2400000,Vectors.dense(2750)),\n    LabeledPoint(3380000,Vectors.dense(4010)),\n    LabeledPoint(1480000,Vectors.dense(1959))\n    )\n\n    ```", "```py\n    scala> val pricesRDD = sc.parallelize(points)\n\n    ```", "```py\n    scala> val model = LinearRegressionWithSGD.train(pricesRDD,100,0.0000006,1.0,Vectors.zeros(1))\n\n    ```", "```py\n    scala> val prediction = model.predict(Vectors.dense(2500))\n\n    ```", "```py\n    $ spark-shell\n\n    ```", "```py\n    scala> import org.apache.spark.mllib.linalg.Vectors\n    scala> import org.apache.spark.mllib.regression.LabeledPoint\n    scala> import org.apache.spark.mllib.regression.LassoWithSGD\n\n    ```", "```py\n    scala> val points = Array(\n    LabeledPoint(1,Vectors.dense(5,3,1,2,1,3,2,2,1)),\n    LabeledPoint(2,Vectors.dense(9,8,8,9,7,9,8,7,9))\n    )\n\n    ```", "```py\n    scala> val rdd = sc.parallelize(points)\n\n    ```", "```py\n    scala> val model = LassoWithSGD.train(rdd,100,0.02,2.0)\n\n    ```", "```py\n    scala> model.weights\n    org.apache.spark.mllib.linalg.Vector = [0.13455106581619633,0.02240732644670294,0.0,0.0,0.0,0.01360995990267153,0.0,0.0,0.0]\n\n    ```", "```py\n    $ spark-shell\n\n    ```", "```py\n    scala> import org.apache.spark.mllib.linalg.Vectors\n    scala> import org.apache.spark.mllib.regression.LabeledPoint\n    scala> import org.apache.spark.mllib.regression.RidgeRegressionWithSGD\n\n    ```", "```py\n    scala> val points = Array(\n    LabeledPoint(1,Vectors.dense(5,3,1,2,1,3,2,2,1)),\n    LabeledPoint(2,Vectors.dense(9,8,8,9,7,9,8,7,9))\n    )\n\n    ```", "```py\n    scala> val rdd = sc.parallelize(points)\n\n    ```", "```py\n    scala> val model = RidgeRegressionWithSGD.train(rdd,100,0.02,2.0)\n\n    ```", "```py\n    scala> model.weights\n    org.apache.spark.mllib.linalg.Vector = [0.049805969577244584,0.029883581746346748,0.009961193915448916,0.019922387830897833,0.009961193915448916,0.029883581746346748,0.019922387830897833,0.019922387830897833,0.009961193915448916]\n\n    ```"]