["```py\nExample: ambari-server start\n```", "```py\nExample: ambari-server upgrade\n```", "```py\nExample: ambari-server setup\n```", "```py\nExample: ambari-server setup-ldap\nExample: ambari-server sync-ldap\n```", "```py\nExample: ambari-server setup-pam\nExample: ambari-server migrate-ldap-pam\n```", "```py\nExample: ambari-server setup-kerberos\n```", "```py\nExample: ambari-server backup\nExample: ambari-server restore\n```", "```py\nsudo yum install mysql-connector-java wget iftop iotop smartctl -y\n```", "```py\n[user@master ~]$ wget http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.1.5/ambari.repo\n\n```", "```py\n[user@master ~]$ sudo mv ambari.repo /etc/yum.repos.d\n```", "```py\n[user@master ~]$ sudo yum install ambari-server -y\n```", "```py\n[user@master ~]$ sudo yum install mariadb-server -y\n```", "```py\n[user@master ~]$ sudo service mariadb start\nRedirecting to /bin/systemctl start mariadb.service\n```", "```py\nCREATE DATABASE ambari;\nGRANT ALL PRIVILEGES ON ambari.* to ambari@localhost identified by 'ambari';\nGRANT ALL PRIVILEGES ON ambari.* to ambari@'%' identified by 'ambari';\nFLUSH PRIVILEGES;\n```", "```py\n[user@master ~] mysql -uroot < ambari.sql\n```", "```py\n[user@master ~]$ sudo ambari-server setup\nUsing python /usr/bin/python\nSetup ambari-server\nChecking SELinux...\nSELinux status is 'enabled'\nSELinux mode is 'enforcing'\nTemporarily disabling SELinux\nWARNING: SELinux is set to 'permissive' mode and temporarily disabled.\nOK to continue [y/n] (y)? <ENTER>\nCustomize user account for ambari-server daemon [y/n] (n)? <ENTER>\nAdjusting ambari-server permissions and ownership...\nChecking firewall status...\nWARNING: iptables is running. Confirm the necessary Ambari ports are accessible. Refer to the Ambari documentation for more details on ports.\nOK to continue [y/n] (y)? <ENTER>\nChecking JDK...\n[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8\n[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7\n[3] Custom JDK\n==============================================================================\nEnter choice (1): <ENTER>\nTo download the Oracle JDK and the Java Cryptography Extension (JCE) Policy Files you must accept the license terms found at http://www.oracle.com/technetwork/java/javase/terms/license/index.html and not accepting will cancel the Ambari Server setup and you must install the JDK and JCE files manually.\nDo you accept the Oracle Binary Code License Agreement [y/n] (y)? <ENTER>\nDownloading JDK from http://public-repo-1.hortonworks.com/ARTIFACTS/jdk-8u112-linux-x64.tar.gz to /var/lib/ambari-server/resources/jdk-8u112-linux-x64.tar.gz\njdk-8u112-linux-x64.tar.gz... 100% (174.7 MB of 174.7 MB)\nSuccessfully downloaded JDK distribution to /var/lib/ambari-server/resources/jdk-8u112-linux-x64.tar.gz\nInstalling JDK to /usr/jdk64/\nSuccessfully installed JDK to /usr/jdk64/\nDownloading JCE Policy archive from http://public-repo-1.hortonworks.com/ARTIFACTS/jce_policy-8.zip to /var/lib/ambari-server/resources/jce_policy-8.zip\n\nSuccessfully downloaded JCE Policy archive to /var/lib/ambari-server/resources/jce_policy-8.zip\nInstalling JCE policy...\nChecking GPL software agreement...\nGPL License for LZO: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html\nEnable Ambari Server to download and install GPL Licensed LZO packages [y/n] (n)? y <ENTER>\nCompleting setup...\nConfiguring database...\nEnter advanced database configuration [y/n] (n)? y <ENTER>\nConfiguring database...\n==============================================================================\nChoose one of the following options:\n[1] - PostgreSQL (Embedded)\n[2] - Oracle\n[3] - MySQL / MariaDB\n[4] - PostgreSQL\n[5] - Microsoft SQL Server (Tech Preview)\n[6] - SQL Anywhere\n[7] - BDB\n==============================================================================\nEnter choice (1): 3 <ENTER>\nHostname (localhost): \nPort (3306): \nDatabase name (ambari): \nUsername (ambari): \nEnter Database Password (bigdata): ambari <ENTER>\nRe-enter password: ambari <ENTER>\nConfiguring ambari database...\nConfiguring remote database connection properties...\nWARNING: Before starting Ambari Server, you must run the following DDL against the database to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql\nProceed with configuring remote database connection properties [y/n] (y)? <ENTER>\nExtracting system views...\nambari-admin-2.6.1.5.3.jar\n...........\nAdjusting ambari-server permissions and ownership...\nAmbari Server 'setup' completed successfully.\n```", "```py\n[user@master ~] mysql -u ambari -pambari ambari < /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql\n```", "```py\n[user@master ~]$ sudo ambari-server start\nUsing python /usr/bin/python\nStarting ambari-server\nAmbari Server running with administrator privileges.\nOrganizing resource files at /var/lib/ambari-server/resources...\nAmbari database consistency check started...\nServer PID at: /var/run/ambari-server/ambari-server.pid\nServer out at: /var/log/ambari-server/ambari-server.out\nServer log at: /var/log/ambari-server/ambari-server.log\nWaiting for server start...............................\nServer started listening on 8080\nDB configs consistency check: no errors and warnings were found.\nAmbari Server 'start' completed successfully.\n```", "```py\n[user@master ~] sudo ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar\n```", "```py\n[user@master ~]$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/user/.ssh/id_rsa): \nEnter passphrase (empty for no passphrase): <ENTER>\nEnter same passphrase again: <ENTER>\nYour identification has been saved in /home/user/.ssh/id_rsa.\nYour public key has been saved in /home/user/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:JWBbGdAnRHM0JFj35iSAcQk+rC0MhyHlrFawr+d2cZ0 user@master\nThe key's randomart image is:\n+---[RSA 2048]----+\n|.oo   *@@**    |\n| +oo +o==*.o     |\n| .=.. = .oo +    |\n| .o+ o . o =     |\n|.. .+ . S . .    |\n|. .  o . E      |\n| . .  o    |\n|  o. .           |\n|  ...            |\n+----[SHA256]-----+\n```", "```py\nhadoop distcp hdfs://NameNode1:8020/projects hdfs://NameNode2:8020/projects\nhadoop distcp hdfs://NameNode1:8020/users hdfs://NameNode2:8020/users\nhadoop distcp hdfs://NameNode1:8020/streams hdfs://NameNode2:8020/streams\nhadoop distcp hdfs://NameNode1:8020/marketing hdfs://NameNode2:8020/marketing\nhadoop distcp hdfs://NameNode1:8020/sales hdfs://NameNode2:8020/sales\n```", "```py\nDistcp [OPTIONS] <source path â€¦> <destination path>\n```"]