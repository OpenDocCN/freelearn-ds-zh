- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Understanding Quantum Logic Gates
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解量子逻辑门
- en: Quantum logic gates are very similar to their classical counterparts in that
    they are used to perform operations by manipulating the qubits in such a way that
    the results serve to provide a solution. Of course, that’s about as far as the
    comparison can go. Classical gates transition the state of a bit from one to the
    other by a single operation, in this case, flipping the bit value from 0 to 1,
    or vice versa. **Quantum gates**, sometimes referred to as **qubit gates**, are
    different in part because they perform linear transformations on one or more qubits
    in a complex vector space to transition them from one state to another.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 量子逻辑门与它们的经典对应物非常相似，因为它们通过操纵量子比特以提供解决方案的方式来执行操作。当然，比较到此为止。经典门通过单一操作将比特的状态从一种转换到另一种，在这种情况下，将比特值从0翻转到1，或反之亦然。**量子门**，有时也称为**量子比特门**，部分不同之处在于它们在复杂向量空间中对一个或多个量子比特执行线性变换，以将它们从一个状态转换到另一个状态。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Reviewing classical logic gates
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复习经典逻辑门
- en: Understanding unitary operators
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解单位算子
- en: Understanding single-qubit gates
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解单量子比特门
- en: Understanding multi-qubit gates
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解多量子比特门
- en: Understanding non-reversible operators
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解不可逆算子
- en: After reading this chapter, you will have gained knowledge about the fundamental
    operations that can be performed on both single and multiple qubits. But before
    we dive right in, let’s discuss the format with which I’ll try to explain each
    qubit gate. First, from a learning perspective, some people tend to learn quicker
    when content is presented purely with mathematics; others prefer visual aids such
    as graphs; others still prefer a more intuitive approach with analogies and examples.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本章后，您将了解可以对单个和多个量子比特执行的基本操作。但在我们深入探讨之前，让我们先讨论我将尝试解释每个量子比特门的格式。首先，从学习角度来看，有些人倾向于在内容仅以数学形式呈现时学得更快；其他人更喜欢图表等视觉辅助工具；还有一些人更喜欢更具直观性的方法，例如类比和示例。
- en: With that in mind, I shall do my best to ensure that each gate is presented
    by combining as many of these learning styles as possible. This will be done by
    providing not only the mathematical representation of each qubit gate, but also
    a visual representation, and of course, the source code to run the qubit gate
    operation and its result.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，我将尽最大努力确保通过尽可能多地结合这些学习风格来展示每个门。这将通过提供每个量子比特门的数学表示、视觉表示以及当然，运行量子比特门操作及其结果的源代码来实现。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we will discuss linear transformations of matrices in the **Hilbert
    space**, so it is highly recommended that you should know the basics of linear
    algebra.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论希尔伯特空间中矩阵的线性变换，因此强烈建议您了解线性代数的基础知识。
- en: Knowledge of the qubit and how its states are represented on a Bloch sphere,
    **QSphere**, or mathematically, is recommended as this chapter will perform complex
    linear transitions of those qubit states. Knowledge of basic classical single-bit
    and multi-bit gates is also recommended, but not required, as there is a refresher
    if needed.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 了解量子比特及其状态如何在布洛赫球面、**QSphere**或数学上表示是推荐的，因为本章将执行这些量子比特状态的复杂线性转换。了解基本的经典单比特和多比特门也是推荐的，但不是必需的，因为如果需要，会有复习内容。
- en: 'Here is the full source code used throughout this book: [https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition](https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书中使用的完整源代码：[https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition](https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition)。
- en: Reviewing classical logic gates
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复习经典逻辑门
- en: This section will serve as a refresher for classical logic gates such as **AND**,
    **OR**, **NOR**, and so on. If you are familiar with this subject, you can either
    skim through it to refresh your memory or skip it entirely and jump to the next
    section. *Otherwise, let’s get logical!*
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将作为经典逻辑门（如**与**、**或**、**或非**等）的复习。如果您熟悉这个主题，您可以快速浏览以刷新记忆，或者完全跳过并跳到下一节。*否则，让我们开始逻辑思考！*
- en: '**Logic gates** are defined as a device, electronic or otherwise, that implements
    a logical (usually Boolean) operation. Single-bit and two-bit gates have one or
    two inputs, respectively. Each input bit value is a state value of either 0 or
    1\. The operation carried out on the input varies by the type of gate. Each gate
    operation is usually described using logic truth tables, as illustrated in the
    following table:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**逻辑门**被定义为一种设备，无论是电子的还是其他类型的，它实现了逻辑操作（通常是布尔操作）。单位门和双位门分别有一个或两个输入。每个输入位值是0或1的状态值。对输入的操作因门类型而异。每个门操作通常使用逻辑真值表来描述，如下表所示：'
- en: '| **Gate** | **Operation** | **Input****A B** | **Output****Y** | **Graphical
    Representation** |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| **门** | **操作** | **输入**A B | **输出**Y | **图形表示** |'
- en: '| **Buffer** | Outputs the same value as the input | 01 | 01 | ![](img/Table_06_01_icon-09.png)
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| **Buffer** | 输出与输入相同的值 | 01 | 01 | ![](img/Table_06_01_icon-09.png) |'
- en: '| **NOT** | Reverses the input state | 01 | 10 | ![](img/Table_06_01_icon-08.png)
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| **NOT** | 反转输入状态 | 01 | 10 | ![](img/Table_06_01_icon-08.png) |'
- en: '| **AND** | Outputs a 1 if and only if both inputs are 1, otherwise output
    is 0 | 0 00 11 01 1 | 0001 | ![](img/Table_06_01_icon-07.png) |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **AND** | 仅当两个输入都是1时输出1，否则输出0 | 0 00 11 01 1 | 0001 | ![](img/Table_06_01_icon-07.png)
    |'
- en: '| **OR** | Outputs a 0 if and only if none of the inputs is 1, otherwise output
    is 1 | 0 00 11 01 1 | 0111 | ![](img/Table_06_01_icon-06.png) |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| **OR** | 如果没有输入是1，则输出0，否则输出1 | 0 00 11 01 1 | 0111 | ![](img/Table_06_01_icon-06.png)
    |'
- en: '| **XOR** | Outputs a 1 if and only if both inputs are different, otherwise
    output is 0 | 0 00 11 01 1 | 0110 | ![](img/Table_06_01_icon-05.png) |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **XOR** | 仅当两个输入不同时输出1，否则输出0 | 0 00 11 01 1 | 0110 | ![](img/Table_06_01_icon-05.png)
    |'
- en: '| **NAND** | Outputs a 0 if and only if both inputs are 1, otherwise output
    is 1 | 0 00 11 01 1 | 1110 | ![](img/Table_06_01_icon-03.png) |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| **NAND** | 仅当两个输入都是1时输出0，否则输出1 | 0 00 11 01 1 | 1110 | ![](img/Table_06_01_icon-03.png)
    |'
- en: '| **NOR** | Outputs a 1 if and only if both inputs are 0, otherwise outputs
    a 0 | 0 00 11 01 1 | 1000 | ![](img/Table_06_01_icon-02.png) |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| **NOR** | 仅当两个输入都是0时输出1，否则输出0 | 0 00 11 01 1 | 1000 | ![](img/Table_06_01_icon-02.png)
    |'
- en: '| **XNOR** | Outputs a 1 if and only if inputs are both either 0 or 1, otherwise
    outputs 0 | 0 00 11 01 1 | 1001 | ![](img/Table_06_01_icon-01.png) |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| **XNOR** | 仅当输入都是0或1时输出1，否则输出0 | 0 00 11 01 1 | 1001 | ![](img/Table_06_01_icon-01.png)
    |'
- en: 'Table 6.1: Classical logic gates'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.1：经典逻辑门
- en: The preceding table lists some of the common classical gates, descriptions of
    the operation that each gate performs on the input state, the result (output)
    of the gate operation, and their graphical representations.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 上述表格列出了一些常见的经典门，描述了每个门对输入状态的操作，门操作的结果（输出），以及它们的图形表示。
- en: Let’s consider some things of note regarding classical bits that will help you
    later understand the differences they have compared to **quantum bits** (**qubits**).
    First is that there are only two single-bit gates, the buffer and the NOT gate.
    Among these two, only the NOT gate performs a Boolean operation on the classical
    bit by flipping the bit value of the input, so if the input to the NOT gate was
    a 0, then the output would be a 1\. On the other hand, the buffer gate simply
    outputs the same value as the input. All the other gates operate on two input
    bit values that output a single value, which is determined by the gate’s Boolean
    operation. For example, if both input values to an AND gate are 1, it will output
    a 1\. Otherwise, the output will be 0.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一些关于经典比特的注意事项，这有助于你以后理解它们与**量子比特**（**qubits**）相比的不同之处。首先，只有两个单比特门，即缓冲门和非门。在这两个门中，只有非门对经典比特执行布尔操作，通过翻转输入的比特值，所以如果非门的输入是0，则输出将是1。另一方面，缓冲门简单地输出与输入相同的值。所有其他门都操作于两个输入比特值，输出一个值，该值由门的布尔操作确定。例如，如果一个与门（AND
    gate）的两个输入值都是1，它将输出1。否则，输出将是0。
- en: One problem, however, particularly with regard to the two-bit gates, is that
    if you only have access to the output, then the information about the input is
    lost. For example, if you obtain the result from an AND bit and the value is 0,
    *could you tell what the input values were for A and B (the inputs)?* Unfortunately,
    the answer to this question is no. The input information is lost because the output
    does not include any information about the input value, which renders the gates
    irreversible. Likewise, with other two-bit gates, if I gave you just the output
    value of the gate, you could not tell me with 100% certainty what the input values
    were.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有一个问题，尤其是关于两位门的问题，那就是如果您只能访问输出，那么关于输入的信息就会丢失。例如，如果您从AND位得到结果，并且值是0，*您能说出A和B（输入）的输入值是什么吗？*不幸的是，这个问题的答案是不了。输入信息丢失，因为输出没有包含任何关于输入值的信息，这使得门不可逆。同样，对于其他两位门，如果我只给你门的输出值，你也不能100%确定输入值是什么。
- en: '**Reversibility** is a unique property that qubit gates have, in that you can
    reverse the operation of the qubit gate to obtain the previous state. This is
    also because the second postulate of quantum mechanics states that transformations
    between quantum states must be unitary, therefore reversible. We see this when
    we apply a Hadamard gate to a single qubit in the ground state 0; if we apply
    another Hadamard gate after the first one, then the state of the qubit returns
    to the ground state 0\.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**可逆性**是量子比特门的一个独特属性，即您可以反转量子比特门的操作以获得先前状态。这也是因为量子力学的第二个公设指出，量子状态之间的变换必须是单位变换，因此是可逆的。当我们对一个基态0的单个量子比特应用Hadamard门时，我们就会看到这一点；如果我们对第一个Hadamard门之后应用另一个Hadamard门，那么量子比特的状态就会返回到基态0。'
- en: 'And finally, to close our discussion on classical gates, we’ll discuss **universal
    logic gates**. These gates are the type of gates used to create other logic gates.
    **NOR** and **NAND** gates are good examples of universal gates in that they can
    be used to create NOT and AND gates. Let’s take a look at the following diagram
    that illustrates creating a NOT gate (inverter) by using a NAND gate:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了结束我们对经典门的讨论，我们将讨论**通用逻辑门**。这些门是用于创建其他逻辑门的那种门。**NOR**和**NAND**门是通用门的良好例子，因为它们可以用来创建NOT和AND门。让我们看看以下图表，它展示了如何使用NAND门创建一个NOT门（反相器）：
- en: '![Figure 6.1 – Using a NAND gate to create a NOT gate ](img/B18420_06_01.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1 – 使用NAND门创建NOT门](img/B18420_06_01.png)'
- en: 'Figure 6.1: Using a NAND gate to create a NOT gate'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1：使用NAND门创建NOT门
- en: As you can see, by wiring both inputs of the NAND gate together, forming a single
    input (**A**), this logically creates a NOT gate that flips the value of the input.
    Computational systems having universal gates is an important feature as it provides
    the ability to compose complex logical circuits to solve problems. This of course
    led to the creation of integrated circuits, which are specialized circuits used
    to compute problems or to perform specific operations such as an adder or a counter,
    respectively.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，通过将NAND门的两个输入连接在一起，形成一个单一输入（**A**），这逻辑上创建了一个NOT门，它会翻转输入的值。拥有通用门的计算系统是一个重要特性，因为它提供了组合复杂逻辑电路以解决问题的能力。这当然导致了集成电路的创造，这些是用于计算问题或执行特定操作（如加法器或计数器）的专用电路。
- en: Now that we have reviewed the functionality of classical gates, we can continue
    to the next section where we will cover the basics of quantum logic gates. There,
    we will also see some similarities and some unique properties that they display
    with regard to the classical bit.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经回顾了经典门的功能，我们可以继续到下一节，在那里我们将介绍量子逻辑门的基础。在那里，我们还将看到它们与经典比特的一些相似之处和一些独特属性。
- en: Understanding quantum unitary operators
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解量子单位算子
- en: '**Unitary operators** are defined as a unitary transformation of a rigid body
    rotation of the Hilbert space. When these unitary operators are applied to the
    basis states of the Hilbert space, for example, the ![](img/B18420_05_004.png)
    and ![](img/B18420_05_005.png) state, the results transform the state vector position
    but it does not change its length. Let’s see what this means for a qubit. The
    basis states of a qubit are mapped on the Hilbert space ![](img/B18420_06_003.png)
    as described in *Chapter 5*, *Understanding a Qubit*, ![](img/B18420_06_004.png)
    and ![](img/B18420_06_005.png), where ![](img/B18420_06_006.png), and ![](img/B18420_06_007.png)
    are linear transformations that preserve orthogonality over unitary transformations.
    We’ll wrap our heads around this definition a bit by looking at this mathematically
    first.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**幺正算子**定义为希尔伯特空间刚性旋转的幺正变换。当这些幺正算子作用于希尔伯特空间的基本态，例如，![](img/B18420_05_004.png)
    和 ![](img/B18420_05_005.png) 态时，它们会改变状态向量的位置，但不会改变其长度。让我们看看这对一个量子比特意味着什么。量子比特的基本态按照
    *第5章*，*理解量子比特*，![](img/B18420_06_003.png) 和 ![](img/B18420_06_005.png) 的描述映射到希尔伯特空间
    ![](img/B18420_06_004.png)，其中 ![](img/B18420_06_006.png) 和 ![](img/B18420_06_007.png)
    是在幺正变换下保持正交性的线性变换。我们可以通过首先从数学角度来理解这个定义，来更好地把握这个定义。'
- en: 'A linear transformation on a complex vector space can be described by a 2x2
    matrix, **U**:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在复向量空间上的线性变换可以用一个 2x2 矩阵 **U** 来描述：
- en: '![](img/B18420_06_008.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_008.png)'
- en: 'Furthermore, if we obtain the complex transpose of the matrix U as ![](img/B18420_06_009.png),
    by transposing the matrix U and applying the complex conjugate, as illustrated:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果我们得到矩阵 U 的复共轭转置，记为 ![](img/B18420_06_009.png)，通过转置矩阵 U 并应用复共轭，如图所示：
- en: '![](img/B18420_06_010.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_010.png)'
- en: 'Then we can say that the matrix U is unitary if ![](img/B18420_06_011.png),
    where I represents the Identity matrix ![](img/B18420_06_012.png), as shown here:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以说，如果矩阵 U 满足 ![](img/B18420_06_011.png)，则 U 是幺正的，其中 I 代表单位矩阵 ![](img/B18420_06_012.png)，如图所示：
- en: '![](img/B18420_06_013.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_013.png)'
- en: An intuitive way to think of this is to just imagine unitary transformation
    simply as rotations of the complex vector space that preserve the length of the
    original vector. The rotation of the complex vector space further ensures that
    quantum transformations are not just unitary operations but are also **reversible
    operations** as they would rotate around a specified axis.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一种直观的想法是，将幺正变换简单地想象为保持原始向量长度的复向量空间的旋转。复向量空间的旋转进一步确保量子变换不仅是幺正操作，而且是**可逆操作**，因为它们会围绕一个指定的轴旋转。
- en: '**Reversibility of quantum gates** is realized by unitary transformations.
    As seen in the previous unitary equation, if you have a unitary operator **U**
    applied to a qubit via a gate, then by applying the complex conjugate ![](img/B18420_06_009.png)
    of the unitary operator to the qubit via a second gate, the result would be equivalent
    to applying an Identity matrix to the original vector.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**量子门的可逆性**是通过幺正变换实现的。如前一个幺正方程所示，如果您通过一个门将幺正算子 **U** 应用到一个量子比特上，那么通过第二个门将幺正算子的复共轭
    ![](img/B18420_06_009.png) 应用到量子比特上，结果将等同于对原始向量应用单位矩阵。'
- en: An example of this would be if you were to trigger an operation that would rotate
    the vector space around the *x* axis by an angle π, and you then apply the complex
    conjugate of that operation, then you’ll return to the original position from
    which you started. This reversible functionality is something that is not possible
    with some classical-bit gates we mentioned earlier, such as an AND gate.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是，如果您触发一个将向量空间绕 *x* 轴旋转角度 π 的操作，然后应用该操作的复共轭，那么您将返回到您开始的位置。这种可逆功能是之前提到的某些经典比特门所不具备的，例如
    AND 门。
- en: With quantum unitary transformations, there is no loss of information. Should
    you need to return to the previous state, you would merely have to use their conjugate
    transpose, in reverse order, and you’d get back to where you originally started.
    We will see some interesting examples of reversibility in all gates.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在量子幺正变换中，信息不会丢失。如果您需要返回到之前的状态，只需使用它们的共轭转置，并按相反的顺序应用，您就可以回到最初的位置。我们将看到所有门中可逆性的有趣例子。
- en: There is a special case operator that is not reversible, the **measurement**
    operator, which we will learn about in the *Understanding non-reversible operators*
    section.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个特殊情况的操作是不可逆的，即**测量算子**，我们将在 *理解不可逆算子* 部分学习它。
- en: Now that we understand unitary and reversible operators, we can get down to
    learning about quantum gates.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经理解了幺正和可逆算符，我们可以开始学习量子门了。
- en: Understanding single-qubit gates
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解单量子比特门
- en: 'Before we start digging into the description of quantum gates, let’s simplify
    the format so it’s easy to both understand and reference. Intuitively, the easiest
    way to imagine the operation of each gate is by rotating the vector that ends
    on the surface of the Bloch sphere around a specified axis. Recall as well that
    the Bloch sphere always starts with the unit vector set to the initial state.
    The initial state is set when the quantum circuit is first created; in this case,
    it is initialized to the basis state ![](img/B18420_06_015.png) (the north pole
    of the Bloch sphere), as illustrated in the following diagram:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始深入量子门的描述之前，让我们简化格式，使其易于理解和参考。直观地说，想象每个门操作的最容易方法是围绕指定的轴旋转在 Bloch 球表面上结束的矢量。同时回忆一下，Bloch
    球始终从将单位矢量设置为初始状态开始。初始状态是在量子电路首次创建时设置的；在这种情况下，它被初始化为基态 ![](img/B18420_06_015.png)（Bloch
    球的北极），如下面的图所示：
- en: '![A picture containing dome  Description automatically generated](img/B18420_06_02.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![包含圆顶的图片 自动生成描述](img/B18420_06_02.png)'
- en: 'Figure 6.2: Bloch sphere representation of the basis state ![](img/B18420_06_015.png)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2：基态 ![](img/B18420_06_015.png) 的 Bloch 球表示
- en: One thing that will help us understand some of the labels we will see in the
    gate’s truth table is to define the values of each axis, where each axis is referred
    to as **basis elements**. For example, we can see from the previous figure that
    the *z* axis has the north pole labeled as ![](img/B18420_06_015.png) and the
    south pole as ![](img/B18420_06_018.png). These two points form the computational
    basis elements for the basis state vectors ![](img/B18420_06_015.png) and ![](img/B18420_06_018.png).
    However, we do not yet have labels for the *x* or *y* axes. Let’s define them
    now.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要帮助我们理解在门真值表中看到的一些标签，我们可以定义每个轴的值，其中每个轴被称为**基元素**。例如，我们可以从之前的图中看到，*z* 轴的北极标记为
    ![](img/B18420_06_015.png) ，南极标记为 ![](img/B18420_06_018.png) 。这两个点形成了基态向量 ![](img/B18420_06_015.png)
    和 ![](img/B18420_06_018.png) 的计算基元素。然而，我们还没有为 *x* 或 *y* 轴定义标签。现在让我们定义它们。
- en: 'Each basis element (axis) has a positive and negative side that originates
    at the center of the Bloch sphere. Each basis has a name associated with each
    axis:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 每个基元素（轴）都有一个正负两侧，它们起源于 Bloch 球的中心。每个基都与每个轴相关联一个名称：
- en: '**Computational** for the *z* axis'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Computational** 对 *z* 轴'
- en: '**Hadamard** for the *x* axis'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hadamard** 对 *x* 轴'
- en: '**Circular** for the *y* axis'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Circular** 对 *y* 轴'
- en: 'The x basis has a label defined as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: x 基础的标签定义如下：
- en: '![](img/B18420_06_021.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_021.png)'
- en: 'The -x basis has a label defined as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: -x 基础的标签定义如下：
- en: '![](img/B18420_06_022.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_022.png)'
- en: 'The y basis has a label defined as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: -y 基础的标签定义如下：
- en: '![](img/B18420_06_023.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_023.png)'
- en: 'The -y basis has a label defined as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: -y 基础的标签定义如下：
- en: '![](img/B18420_06_024.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_024.png)'
- en: 'The z basis has a label defined as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: z 基础的标签定义如下：
- en: '![](img/B18420_06_025.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_025.png)'
- en: 'The -z basis has a label defined as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: -z 基础的标签定义如下：
- en: '![](img/B18420_06_026.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_026.png)'
- en: 'The labels are also illustrated at the ends of each axis in the following Bloch
    sphere diagram, where the dotted line indicates the negative direction of the
    axis:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 标签也在以下 Bloch 球图的每个轴的末端进行了说明，其中虚线表示轴的负方向：
- en: '![Figure 6.3 – Basis state labels of each axis of a Bloch sphere ](img/B18420_06_03.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – Bloch 球每个轴的基态标签](img/B18420_06_03.png)'
- en: 'Figure 6.3: Basis state labels of each axis of a Bloch sphere'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3：Bloch 球每个轴的基态标签
- en: Each gate we apply in the code snippets will operate on the qubit starting from
    the initial |![](img/B18420_06_027.png) state. There are some gates you will see
    that we will have to prepare into a superposition state using an H gate to see
    the effects.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码片段中应用的每个门都会作用于从初始 |![](img/B18420_06_027.png) 状态开始的量子比特。你会看到一些门，我们将使用 H 门将它们制备成叠加态以观察效果。
- en: 'In this case, by transitioning the vector down onto the *x* axis, and then
    applying a Z gate rotation, you can then more clearly see the rotation take effect.
    Details on how this is done will be in the description of—yes, you guessed it—the
    Z gate. But for now, let’s open the helper file and review one of the functions
    that will help us visualize the gates without having to write so much code, and
    handle some of the repetitive functions such as executing and visualizing the
    circuits. This way, we will just create the quantum circuits, add the gates, and
    execute the circuits using a function that will return the results and the images
    to visualize the results and the circuit diagrams. To start, let’s review the
    function titled `execute_circuit_sv` from our helper file that will handle this:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，通过将向量过渡到*x*轴，然后应用Z门旋转，你可以更清楚地看到旋转的效果。如何做到这一点将在Z门的描述中详细介绍。但就现在而言，让我们打开辅助文件并回顾一个将帮助我们可视化门而无需编写太多代码，并处理一些重复性功能（如执行和可视化电路）的功能。这样，我们只需创建量子电路，添加门，并使用一个函数执行电路，该函数将返回结果和图像以可视化结果和电路图。首先，让我们回顾一下辅助文件中名为`execute_circuit_sv`的函数，该函数将处理此操作：
- en: '[PRE0]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The preceding code will return the four components: state vector results, the
    circuit diagram, and both the QSphere and the Bloch sphere. We will use each of
    these to illustrate each state vector result, each gate on a circuit, and the
    visual representation.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将返回四个组件：状态向量结果、电路图以及QSphere和Bloch球。我们将使用这些来展示每个状态向量结果、电路上的每个门以及可视化表示。
- en: Now we can focus on the quantum gates and their effect on the qubits, and not
    so much on executing the circuits or displaying the results.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以专注于量子门及其对量子比特的影响，而不太关注执行电路或显示结果。
- en: Hadamard (H) gate
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 霍达德（H）门
- en: 'The **H** gate is one of the most commonly used quantum gates. It’s not surprising
    as this is the gate that places the quantum state of the qubit into a complex
    linear superposition of the two basis states. This is what establishes the superposition
    of all qubits that are leveraged by most quantum algorithms. It is denoted as
    follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**H**门是最常用的量子门之一。这并不奇怪，因为这个门将量子比特的量子状态置于两个基态的复杂线性叠加中。这就是建立了大多数量子算法所利用的所有量子比特的叠加。它表示如下：'
- en: '![](img/B18420_06_028.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_028.png)'
- en: 'The following truth table illustrates that the operation rotates the state
    vector of the qubit along the *x* axis and *z* axis by ![](img/B18420_06_029.png)
    (90°), causing the state vector to be in a complex linear superposition of ![](img/B18420_06_015.png)
    and ![](img/B18420_06_018.png):'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下真值表说明该操作将量子比特的状态向量沿*x*轴和*z*轴旋转90°（![img/B18420_06_029.png](img/B18420_06_029.png)），导致状态向量处于![img/B18420_06_015.png](img/B18420_06_015.png)和![img/B18420_06_018.png]的复杂线性叠加中：
- en: '![Table 6.5 – Truth table of a Hadamard operation ](img/Table_06_02.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![表6.5 – 霍达门操作的真值表](img/Table_06_02.png)'
- en: 'Table 6.2: Truth table of a Hadamard operation'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.2：霍达门操作的真值表
- en: 'Let’s continue and create a new notebook and add a circuit using these steps:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续，并创建一个新的笔记本，按照以下步骤添加一个电路：
- en: 'First, we add an H gate to the qubit, and execute it on the backend, the same
    as we did in the previous example:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们向量子比特添加一个H门，并在后端执行它，就像我们在前面的例子中所做的那样：
- en: '[PRE1]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s examine the state vector results by running the following cell:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过运行以下单元格来检查状态向量结果：
- en: '[PRE2]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This prints out the following state vector values of the qubit:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出以下量子比特的状态向量值：
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To draw the circuit diagram for the H gate, run the following in a cell:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制H门的电路图，请在单元格中运行以下代码：
- en: '[PRE4]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This displays the circuit diagram with the **H** gate added to the qubit, as
    shown in the following diagram:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了添加了**H**门的量子比特的电路图，如下所示：
- en: '![Figure 6.8 – Circuit diagram with an H gate ](img/B18420_06_04.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图6.8 – 带有H门的电路图](img/B18420_06_04.png)'
- en: 'Figure 6.4: Circuit diagram with an H gate'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4：带有H门的电路图
- en: 'Now to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在要查看Bloch球表示，请在单元格中运行以下代码：
- en: '[PRE5]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The Bloch sphere representation has changed into a superposition state, which
    means it will have an equal probability result of ![](img/B18420_06_015.png) or
    ![](img/B18420_06_018.png).
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bloch球表示已变为叠加态，这意味着它将具有等概率的结果为![img/B18420_06_015.png](img/B18420_06_015.png)或![img/B18420_06_018.png](img/B18420_06_018.png)。
- en: '![A picture containing building, dome  Description automatically generated](img/B18420_06_05.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![包含建筑、圆顶的图片 描述自动生成](img/B18420_06_05.png)'
- en: 'Figure 6.5: H gate Bloch sphere'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5：H门Bloch球
- en: 'To view the QSphere representation, run the following in a cell:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看QSphere表示，请在单元格中运行以下代码：
- en: '[PRE6]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The QSphere, as you can see, has an equal probability of being either ![](img/B18420_06_015.png)
    or ![](img/B18420_06_018.png). The tip of the vectors, as you’ll notice, have
    the same diameter, indicating visually that both have equal probability:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，QSphere有相等的机会是![img/B18420_06_015.png](img/B18420_06_015.png)或![img/B18420_06_018.png]。正如你将注意到的，向量的尖端具有相同的直径，从视觉上表明两者具有相等的概率：
- en: '![Chart  Description automatically generated](img/B18420_06_06.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![Chart  Description automatically generated](img/B18420_06_06.png)'
- en: 'Figure 6.6: H gate QSphere representation'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6：H门QSphere表示
- en: The Hadamard (H) gate is a unique gate. We will see this gate many more times
    in this chapter and future chapters—having the ability to negate a state vector,
    also referred to as a phase kick, is very useful in many quantum algorithms.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 霍尔丹（H）门是一个独特的门。我们将在本章和未来的章节中多次看到这个门——具有否定状态向量，也称为相位踢的能力，在许多量子算法中非常有用。
- en: Pauli gates
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 泡利门
- en: The first group of single-qubit gates we will discuss are commonly referred
    to as **Pauli matrix** gates, named after the physicist Wolfgang Pauli. The complex
    matrix representation of the four gates, **I**, **X**, **Y**, and **Z**, are defined
    as *2 x 2* complex matrices, which are both Hermitian and unitary and are represented
    by the Greek letter sigma ![](img/B18420_06_036.png), respectively. When the conjugate
    transpose of a complex N x N matrix is equal to itself, then such a matrix is
    known as a Hermitian matrix.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要讨论的第一组单量子比特门通常被称为**泡利矩阵**门，以物理学家沃尔夫冈·泡利命名。这四个门，**I**、**X**、**Y**和**Z**的复数矩阵表示，定义为*2
    x 2*复数矩阵，它们既是厄米矩阵也是幺正矩阵，分别用希腊字母西格玛表示![img/B18420_06_036.png](img/B18420_06_036.png)。当一个复数N
    x N矩阵的共轭转置等于其自身时，这样的矩阵被称为厄米矩阵。
- en: Note that the Identity matrix is subscripted with a 0, and the *x, y, z* subscripts
    can also be represented as ![](img/B18420_06_037.png).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，恒等矩阵的下标为0，*x, y, z*下标也可以表示为![img/B18420_06_037.png](img/B18420_06_037.png)。
- en: We’ll start with the easiest of the gates, the Identity gate.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从最简单的门开始，即恒等门。
- en: Identity (I) Pauli gate
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恒等（I）泡利门
- en: 'The **I gate**, also known as the **Identity gate,** is a gate that does not
    perform any operation on the qubit. It does not change the state of the qubit.
    Mathematically, this is represented as an Identity matrix, hence the name of the
    gate. This equation is given as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**I门**，也称为**恒等门**，是一个不对量子比特执行任何操作的门。它不会改变量子比特的状态。在数学上，这表示为恒等矩阵，因此得名该门。该方程如下所示：'
- en: '![](img/B18420_06_038.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![img/B18420_06_038.png](img/B18420_06_038.png)'
- en: 'The truth table for this gate shows that the input and output have the same
    state:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这个门的真实表显示输入和输出状态相同：
- en: '![Table 6.2 – Truth table of Identity gate ](img/Table_06_03.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![Table 6.2 – 恒等门真值表](img/Table_06_03.png)'
- en: 'Table 6.3: Truth table of Identity gate'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.3：恒等门真值表
- en: The idea of an Identity gate is generally used mathematically to illustrate
    certain properties of operations, as we did earlier in this chapter to prove that
    unitary operators are reversible. In that example, the Identity matrix was used
    to illustrate that multiplying a unitary operator with its complex conjugate would
    produce the same output as applying no operation, or an Identity matrix, to the
    qubit.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 恒等门的概念通常在数学上用来说明操作的一些性质，正如我们在本章前面所做的那样，以证明幺正算子是可逆的。在那个例子中，恒等矩阵被用来说明将幺正算子与其复共轭相乘会产生与不对量子比特进行操作，或使用恒等矩阵对量子比特进行操作相同的结果。
- en: Let’s move on to the next gate section.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续到下一个门部分。
- en: NOT (X) Pauli gate
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 非（X）泡利门
- en: 'The **X gate** is also called the NOT gate because of the similar effect it
    has on the basis states as its classical-bit gate counterpart. One notable difference
    is that the X gate moves the state vector from one basis state to the other, as
    illustrated in *Table 6.4*. Visualizing this operation can be seen via the Bloch
    sphere result as a rotation of the vector from the initial state, ![](img/B18420_06_015.png).
    Because of its spherical presentation, we refer to operations as rotations around
    some axis, in this case, the X gate is a π (180° ) rotation about the *x* axis,
    which is represented by the Pauli X-gate operator as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**X门**也称为非门，因为它对基态的影响与它的经典比特门对应物相似。一个显著的区别是X门将状态向量从一个基态移动到另一个基态，如*表6.4*所示。通过布洛赫球结果可视化此操作可以看到从初始状态![](img/B18420_06_015.png)的向量旋转。由于其球面表示，我们称这些操作为绕某个轴的旋转，在这种情况下，X门是绕*x*轴的π（180°）旋转，这由泡利X门算子如下表示：'
- en: '![](img/B18420_06_040.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_040.png)'
- en: 'The following truth table illustrates that the operation rotates the input
    around the *x* axis by ![](img/B18420_06_041.png) (180), hence if the input is
    ![](img/B18420_06_015.png), then the output is ![](img/B18420_06_018.png), and
    vice versa:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下真值表说明了该操作将输入绕*x*轴旋转![](img/B18420_06_041.png)（180度），因此如果输入是![](img/B18420_06_015.png)，则输出是![](img/B18420_06_018.png)，反之亦然：
- en: '![Table 6.3 – Truth table of X (NOT) gate  ](img/Table_06_04.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![表6.3 – X（非）门真值表](img/Table_06_04.png)'
- en: 'Table 6.4: Truth table of X (NOT) gate'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.4：X（非）门真值表
- en: 'Let’s now create a circuit by following the next steps to include in our notebook:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们按照以下步骤创建一个电路，并将其包含在我们的笔记本中：
- en: 'First, add an X gate to it, and execute it using our helper function to do
    the heavy lifting for us:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，向其中添加一个X门，并使用我们的辅助函数执行它，以为我们做繁重的工作：
- en: '[PRE7]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let’s examine the state vector results by running the following cell:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过运行以下单元格来检查状态向量结果：
- en: '[PRE8]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This prints out the state vector values of the qubit, which we expect should
    represent ![](img/B18420_06_044.png), where *a*=0 and *b*=1, as shown in the following
    result:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值，我们预计它应该代表![](img/B18420_06_044.png)，其中*a*=0和*b*=1，如下所示的结果：
- en: '[PRE9]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, to draw the circuit diagram for the X gate, run the following in a cell:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，为了绘制X门的电路图，请在单元格中运行以下代码：
- en: '[PRE10]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This displays the circuit diagram with the **X** gate added to the qubit, as
    shown in the following diagram:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了添加到量子比特的**X**门的电路图，如下所示：
- en: '![Figure 6.4 – X gate ](img/B18420_06_07.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图6.4 – X门](img/B18420_06_07.png)'
- en: 'Figure 6.7: X gate'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7：X门
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看布洛赫球表示，请在单元格中运行以下代码：
- en: '[PRE11]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The Bloch sphere representation has changed the state of the qubit from ![](img/B18420_06_015.png)to
    ![](img/B18420_06_018.png):'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 布洛赫球表示已将量子比特的状态从![](img/B18420_06_015.png)变为![](img/B18420_06_018.png)：
- en: '![A picture containing building, dome  Description automatically generated](img/B18420_06_08.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![包含建筑、圆顶的图片，描述自动生成](img/B18420_06_08.png)'
- en: 'Figure 6.8: X gate Bloch sphere'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8：X门布洛赫球
- en: 'Now, to view the QSphere representation, run the following in a cell:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看QSphere表示，请在单元格中运行以下代码：
- en: '[PRE12]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The QSphere represents the transition of the quantum state of the qubit from
    ![](img/B18420_06_015.png) to ![](img/B18420_06_018.png):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: QSphere表示量子比特从![](img/B18420_06_015.png)到![](img/B18420_06_018.png)的量子状态转换：
- en: '![Diagram  Description automatically generated with low confidence](img/B18420_06_09.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图描述自动生成，置信度低](img/B18420_06_09.png)'
- en: 'Figure 6.9: X gate QSphere'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9：X门QSphere
- en: As we have seen, the X gate serves as a good example that quantum gates can
    also be used to perform the same operations as classical gates. One other thing
    you will notice from the QSphere result is the color wheel that represents the
    phase of the state vector, which in this case is blue to indicate it’s in phase
    (0).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，X门是一个很好的例子，说明量子门也可以执行与经典门相同的操作。从QSphere结果中，你还会注意到代表状态向量相位的彩色轮，在这种情况下，它呈蓝色，表示它在相位（0）。
- en: Y Pauli gate
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Y泡利门
- en: 'The **Y gate** is a rotation around the *y* axis by ![](img/B18420_06_041.png)
    (180°), shown as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y门**是绕*y*轴旋转![](img/B18420_06_041.png)（180°），如下所示：'
- en: '![](img/B18420_06_050.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_050.png)'
- en: 'Here, the following truth table illustrates that the operation rotates the
    input around the *y* axis by ![](img/B18420_06_041.png) (180°), hence if the input
    to the gate is ![](img/B18420_06_015.png), then the output from the gate is ![](img/B18420_06_018.png)
    and vice versa; note the phase difference where ![](img/B18420_06_015.png) has
    the phase at *i*, and ![](img/B18420_06_018.png) has a phase shift, indicated
    by the *-i*:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，以下真值表说明了操作将输入绕*y*轴旋转了![](img/B18420_06_041.png)（180°），因此如果门的输入是![](img/B18420_06_015.png)，那么门的输出是![](img/B18420_06_018.png)，反之亦然；注意在![](img/B18420_06_015.png)处有*i*相位，而![](img/B18420_06_018.png)有一个相位偏移，用*-i*表示：
- en: '![Table 6.4 – Truth table representing phase rotation of y axis ](img/Table_06_05.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![表6.4 – 表示y轴相位旋转的真值表](img/Table_06_05.png)'
- en: 'Table 6.5: Truth table representing phase rotation of the y axis'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.5：表示y轴相位旋转的真值表
- en: 'Let’s now create a circuit by using the following steps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们按照以下步骤创建一个电路：
- en: 'First, add a Y gate to it, and execute it using our helper function, which
    provides the quantum circuit and the visual representations of each circuit we
    execute:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，向其中添加一个Y门，并使用我们的辅助函数执行它，该函数提供了我们执行的每个量子电路及其可视化表示：
- en: '[PRE13]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Let’s examine the state vector results by running the following cell:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下单元格来检查状态向量结果：
- en: '[PRE14]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This prints out the state vector values of the qubit:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值：
- en: '[PRE15]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To draw the circuit diagram for the Y gate, run the following in a cell:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制Y门的电路图，请在单元格中运行以下代码：
- en: '[PRE16]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The preceding code displays the circuit diagram with the Y gate added to the
    qubit, as shown in the following diagram:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码显示了添加到量子比特的Y门的电路图，如下所示：
- en: '![Figure 6.6 – Y gate ](img/B18420_06_10.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图6.6 – Y门](img/B18420_06_10.png)'
- en: 'Figure 6.10: Y gate'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10：Y门
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看布洛赫球面表示，请在单元格中运行以下代码：
- en: '[PRE17]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The Bloch sphere representation has changed from ![](img/B18420_05_004.png)
    to ![](img/B18420_05_005.png); however, the rotation was done around the *y* axis
    as opposed to the *x* axis, and the result, in this case, is the same.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 布洛赫球面表示已从![](img/B18420_05_004.png)变为![](img/B18420_05_005.png)；然而，旋转是围绕*y*轴而不是*x*轴进行的，在这种情况下，结果是相同的。
- en: '![A picture containing building, dome  Description automatically generated](img/B18420_06_11.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![包含建筑、圆顶的图片 描述自动生成](img/B18420_06_11.png)'
- en: 'Figure 6.11: Y gate Bloch sphere'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11：Y门布洛赫球面
- en: 'To view the QSphere representation, run the following in a cell. Of course,
    you can also use `bloch_sphere` to view the Bloch sphere:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看QSphere表示，请在单元格中运行以下代码。当然，您也可以使用`bloch_sphere`来查看布洛赫球面：
- en: '[PRE18]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The QSphere, as you can see, has transitioned the state of the qubit from |![](img/B18420_06_027.png)
    to |![](img/B18420_04_055.png). Note that the colors indicating states might be
    different based on your system settings or as they could change over time in the
    code itself when visualized:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，QSphere将量子比特的状态从|![](img/B18420_06_027.png)转换到|![](img/B18420_04_055.png)。请注意，表示状态的色彩可能根据您的系统设置而不同，或者随着时间的推移在代码本身中可视化时可能发生变化：
- en: '![Figure 6.7 – Y gate QSphere ](img/B18420_06_12.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图6.7 – Y门QSphere](img/B18420_06_12.png)'
- en: 'Figure 6.12: Y gate QSphere'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12：Y门QSphere
- en: The Y gate, as we can see from the results, operates very similarly to the X
    gate, at least when the origin of the state vector is the same.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 从结果中我们可以看到，Y门与X门操作非常相似，至少当状态向量的原点是相同的时候。
- en: Now, let’s proceed to the final Pauli gate.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续到最后一个泡利门。
- en: Z gate
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Z门
- en: 'The **Z gate** is also commonly referred to as a **phase gate**, mostly because
    rather than rotating along the vertical axis as the X and Y gates do, the Z gate
    rotates along the longitude of the Hilbert space, hence the phase of the Hilbert
    space. This is denoted as follows:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**Z门**也常被称为**相位门**，主要是因为它不像X和Y门那样沿着垂直轴旋转，而是沿着希尔伯特空间的经度旋转，因此产生了希尔伯特空间的相位。这表示如下：'
- en: '![](img/B18420_06_060.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_060.png)'
- en: 'The following truth table illustrates that the operation rotates the input
    around the *z* axis by ![](img/B18420_06_041.png) (180°). If the rotation initializes
    from the ![](img/B18420_06_015.png) basis state, then the phase does not change;
    however, if the input initializes from the ![](img/B18420_06_018.png) state, then
    the output is a phase shift of *p* to ![](img/B18420_06_064.png). This negation
    is a very important feature that you will see in many quantum algorithms:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 以下真值表说明操作将输入绕*z*轴旋转![](img/B18420_06_041.png)（180°）。如果旋转从![](img/B18420_06_015.png)基态开始，则相位不变；然而，如果输入从![](img/B18420_06_018.png)状态开始，则输出是相位为*p*到![](img/B18420_06_064.png)的相移。这种否定是一个非常重要的特性，您将在许多量子算法中看到：
- en: '![Table 6.6 – Truth table of a phase shift around the x axis  ](img/Table_06_06.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![表6.6 – 围绕x轴相移的真值表](img/Table_06_06.png)'
- en: 'Table 6.6: Truth table of a phase shift around the x axis'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.6：围绕x轴相移的真值表
- en: 'Let’s now create a circuit for the Z gate:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一个用于Z门的电路：
- en: 'First, we place the qubit into a superposition state using the H gate, and
    then add a Z gate operator to it:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们使用H门将量子比特置于叠加态，然后向其添加一个Z门算子：
- en: '[PRE19]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Let’s examine the state vector results by running the following cell:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过运行以下单元格来检查状态向量结果：
- en: '[PRE20]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This prints out the state vector values of the qubit. Note that depending on
    how you have things set up, the very small values may be truncated to 0\. If this
    is not set, you may see a very small value, such as `0.00000000e+00j`:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值。请注意，根据您的设置，非常小的值可能被截断为0。如果没有设置，您可能会看到一个非常小的值，例如`0.00000000e+00j`：
- en: '[PRE21]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To draw the circuit diagram for the Z gate, run the following in a cell:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制Z门的电路图，请在单元格中运行以下代码：
- en: '[PRE22]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This displays the circuit diagram with the H gate removed, so don’t think you
    have to include the H gate in order to use the Z gate—as mentioned earlier, the
    H gate was just added to illustrate the operational effect of the gate:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了移除H门后的电路图，所以不要认为你必须包含H门才能使用Z门——如前所述，H门只是添加来展示门的操作效果：
- en: '![](img/B18420_06_13.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_13.png)'
- en: 'Figure 6.13: Circuit diagram with a Z gate'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13：包含Z门的电路图
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看布洛赫球面表示，请在单元格中运行以下代码：
- en: '[PRE23]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The Bloch sphere representation has changed into a superposition state between
    ![](img/B18420_05_004.png) and ![](img/B18420_05_005.png); however, it is on the
    negative side of the *x* axis.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 布洛赫球面表示已经变成了在![](img/B18420_05_004.png)和![](img/B18420_05_005.png)之间的叠加态；然而，它位于*x*轴的负侧。
- en: '![A picture containing dome, building  Description automatically generated](img/B18420_06_14.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![包含圆顶、建筑物的图片，描述自动生成](img/B18420_06_14.png)'
- en: 'Figure 6.14: Z gate Bloch sphere'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14：Z门布洛赫球面
- en: 'To view the QSphere representation, run the following in a cell:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看QSphere表示，请在单元格中运行以下代码：
- en: '[PRE24]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The QSphere, as you can see, has an equal probability of being |![](img/B18420_06_027.png)
    and |![](img/B18420_04_055.png); however, the |![](img/B18420_04_055.png) state
    you see is out of phase by ![](img/B18420_06_041.png), as illustrated in the following
    output:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，QSphere有等概率处于|![](img/B18420_06_027.png)和|![](img/B18420_04_055.png)状态；然而，您所看到的|![](img/B18420_04_055.png)状态相位差为![](img/B18420_06_041.png)，如下面的输出所示：
- en: '![Chart  Description automatically generated](img/B18420_06_15.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![图表，描述自动生成](img/B18420_06_15.png)'
- en: 'Figure 6.15: Z gate QSphere representation after first applying an H gate'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15：应用第一个H门后的Z门QSphere表示
- en: As you can see in the preceding diagram, the Z gate provides a way to perform
    a phase shift on a qubit, causing the state of the qubit to change its sign from
    positive to negative. If you want to see this for yourself, then try the following.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，Z门提供了一种对量子比特执行相移的方法，导致量子比特的状态从正变为负。如果您想亲自体验，请尝试以下操作。
- en: Recall the code you ran earlier to execute an X gate. In that example, we started
    with the qubit initially at the basis state |![](img/B18420_06_027.png), and we
    then applied an X gate that resulted in the state |![](img/B18420_04_055.png).
    Now, add another line after adding the X gate and include the Z gate. You’ll notice
    that the result is the same, |![](img/B18420_04_055.png), only now you’ll notice
    that the state result is negative. I’ll leave it to you to try it out for yourself
    and observe the difference.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下你之前运行的执行X门的代码。在那个例子中，我们从一个初始基态|![图片](img/B18420_06_027.png)的量子比特开始，然后应用了一个导致状态|![图片](img/B18420_04_055.png)的X门。现在，在添加X门之后添加另一行，并包括Z门。你会注意到结果是相同的，|![图片](img/B18420_04_055.png)，但现在你会注意到状态结果是负的。我将留给你自己尝试并观察差异。
- en: Let’s move on to the next section, where we will discuss **phase gates**.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续到下一节，我们将讨论**相位门**。
- en: Phase gates
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相位门
- en: Phase gates are what we use to map |![](img/B18420_04_055.png) to ![](img/B18420_06_075.png)|![](img/B18420_04_055.png),
    where ![](img/B18420_06_075.png) is Euler’s equation. This does not have an effect
    on the probability of measuring a |![](img/B18420_06_027.png) or a |![](img/B18420_04_055.png);
    however, it does affect the phase of the quantum state. This may not make sense
    just yet, but once you start learning about some advanced features that leverage
    phase shifts, it will be very clear. For now, let’s learn about the gates that
    operate the various phase shifts on a qubit.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 相位门是我们用来将|![图片](img/B18420_04_055.png)映射到|![图片](img/B18420_06_075.png)|![图片](img/B18420_04_055.png)的工具，其中![图片](img/B18420_06_075.png)是欧拉公式。这不会影响测量|![图片](img/B18420_06_027.png)或|![图片](img/B18420_04_055.png)的概率；然而，它确实会影响量子状态的相位。这可能现在还不清楚，但一旦你开始学习一些利用相移的高级特性，它将会非常清晰。现在，让我们学习操作量子比特上各种相移的门。
- en: S gate
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: S门
- en: 'The **S gate** is like a Z gate; the only difference is the amount by which
    the state vector is rotating. For the S gate, that rotation is ![](img/B18420_06_029.png).
    The matrix representation of the S gate is described here:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**S门**就像一个Z门；唯一的区别是状态向量旋转的量。对于S门，这个旋转是![图片](img/B18420_06_029.png)。S门的矩阵表示在这里描述：'
- en: '![](img/B18420_06_081.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18420_06_081.png)'
- en: 'The following truth table illustrates that the operation rotates the input
    around the *z* axis by ![](img/B18420_06_029.png) (90°), hence if the input is
    |![](img/B18420_04_055.png), then the output is a phase shift of ![](img/B18420_06_084.png):'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 以下真值表说明了操作旋转输入绕*z*轴90°（![图片](img/B18420_06_029.png)），因此如果输入是|![图片](img/B18420_04_055.png)，则输出是相位偏移![图片](img/B18420_06_084.png)：
- en: '![Table 6.7 – Truth table representing phase rotation S  ](img/Table_06_07.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![表6.7 – 表示相位旋转S的真值表](img/Table_06_07.png)'
- en: 'Table 6.7: Truth table representing phase rotation S'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.7：表示相位旋转S的真值表
- en: 'We will follow these steps to create a circuit with an S gate:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将遵循以下步骤来创建一个包含S门的电路：
- en: 'The truth table is best illustrated by placing the vector onto the *x* axis
    first; we will add an H gate first before appending the S gate:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将向量首先放置在*x*轴上，可以用真值表最好地说明；我们首先添加一个H门，然后再添加S门：
- en: '[PRE25]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Let’s examine the state vector results by running the following cell:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下单元格，让我们检查状态向量结果：
- en: '[PRE26]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'This prints out the state vector values of the qubit:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值：
- en: '[PRE27]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To draw the circuit diagram for the S gate, run the following in a cell:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制S门的电路图，请在单元格中运行以下代码：
- en: '[PRE28]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This displays the circuit diagram where we added an H gate to induce superposition
    and then apply the **S** gate to the qubit, as shown in the following diagram:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了添加了H门以诱导叠加，然后对量子比特应用**S**门的电路图，如下所示：
- en: '![Figure 6.12 – Circuit with a S gate ](img/B18420_06_16.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图6.12 – 包含S门的电路](img/B18420_06_16.png)'
- en: 'Figure 6.16: Circuit with an S gate'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16：包含S门的电路
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看Bloch球表示，请在单元格中运行以下代码：
- en: '[PRE29]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The Bloch sphere representation has changed into a superposition state, which
    means it will have an equal probability result of ![](img/B18420_06_015.png)or
    ![](img/B18420_06_018.png) but with a phase shift of ![](img/B18420_06_087.png):'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bloch球表示已经变成了叠加态，这意味着它将有一个相等的概率结果为![图片](img/B18420_06_015.png)或![图片](img/B18420_06_018.png)，但有一个相移![图片](img/B18420_06_087.png)：
- en: '![A picture containing text, building, dome, aircraft  Description automatically
    generated](img/B18420_06_17.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、建筑、圆顶、飞机的图片，描述自动生成](img/B18420_06_17.png)'
- en: 'Figure 6.17: S gate Bloch sphere'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17：S门Bloch球
- en: 'To view the QSphere representation, run the following in a cell:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看 QSphere 表示，请在单元格中运行以下代码：
- en: '[PRE30]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The QSphere, as you can see, has an equal probability of being ![](img/B18420_06_015.png)
    and ![](img/B18420_06_018.png) with a phase shift of ![](img/B18420_06_087.png):'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，QSphere 有相等的概率是 ![img/B18420_06_015.png](img/B18420_06_015.png) 和 ![img/B18420_06_018.png](img/B18420_06_018.png)，相位差为
    ![img/B18420_06_087.png](img/B18420_06_087.png)：
- en: '![Chart, radar chart  Description automatically generated](img/B18420_06_18.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图表，雷达图，自动生成描述](img/B18420_06_18.png)'
- en: 'Figure 6.18: S gate, ![](img/B18420_06_029.png) phase rotation on the QSphere'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.18：S 门，QSphere 上的 ![img/B18420_06_029.png](img/B18420_06_029.png) 相位旋转
- en: As the S gate transitions the state to the positive Z axis by ![](img/B18420_06_029.png),
    we will now see how to transition the state to the negative Z axis by ![](img/B18420_06_029.png).
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 当 S 门通过 ![img/B18420_06_029.png](img/B18420_06_029.png) 将状态转换到正 Z 轴时，我们现在将看到如何通过
    ![img/B18420_06_029.png](img/B18420_06_029.png) 将状态转换到负 Z 轴：
- en: S† (dagger) gate
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: S†（求逆）门
- en: 'The ![](img/B18420_06_094.png) gate is the same as the S gate, except it rotates
    in the opposite, or negative, direction. Hence the results are the same, but negated.
    The matrix representation illustrates this by including the negative in the phase
    shift:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B18420_06_094.png](img/B18420_06_094.png) 门与 S 门相同，只是它沿相反方向或负方向旋转。因此，结果相同，但取反。矩阵表示通过包括负相位差来说明这一点：'
- en: '![](img/B18420_06_095.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![img/B18420_06_095.png](img/B18420_06_095.png)'
- en: 'The following truth table illustrates that the operation rotates the input
    around the *z* axis by ![](img/B18420_06_096.png) (-90). As with the S gate, if
    the input is the ![](img/B18420_06_015.png) state, then the output is ![](img/B18420_06_015.png),
    but if the input is the ![](img/B18420_06_018.png) state, the output is a phase
    rotation in the negative direction:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 以下真值表说明该操作将输入绕 *z* 轴旋转 ![img/B18420_06_096.png](img/B18420_06_096.png)（-90）。与
    S 门一样，如果输入是 ![img/B18420_06_015.png](img/B18420_06_015.png) 状态，则输出是 ![img/B18420_06_015.png](img/B18420_06_015.png)，但如果输入是
    ![img/B18420_06_018.png](img/B18420_06_018.png) 状态，则输出是负方向的相位旋转：
- en: '![Table 6.8 – Truth table representation of phase gate  ](img/Table_06_08.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![表 6.8 – 相位门的真值表表示](img/Table_06_08.png)'
- en: 'Table 6.8: Truth table representation of phase gate ![](img/B18420_06_100.png)'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6.8：相位门 ![img/B18420_06_100.png](img/B18420_06_100.png) 的真值表表示
- en: 'This is best illustrated by placing the qubit into a superposition first with
    an H gate. We then create a circuit diagram for ![](img/B18420_06_094.png) gate
    by using these steps:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这最好通过首先使用 H 门将量子比特置于叠加态来展示。然后，我们通过以下步骤创建 ![img/B18420_06_094.png](img/B18420_06_094.png)
    门的电路图：
- en: 'We will add an H gate first before appending the ![](img/B18420_06_094.png)
    (`sdg`) gate:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在附加 ![img/B18420_06_094.png](img/B18420_06_094.png) (`sdg`) 之前，我们首先添加一个 H 门：
- en: '[PRE31]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Let’s examine the state vector results by running the following cell:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过运行以下单元格来检查状态向量结果：
- en: '[PRE32]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This prints out the state vector values of the qubit:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值：
- en: '[PRE33]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'To draw the circuit diagram for the ![](img/B18420_06_094.png) gate, run the
    following in a cell:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制 ![img/B18420_06_094.png](img/B18420_06_094.png) 门的电路图，请在单元格中运行以下代码：
- en: '[PRE34]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'This displays the circuit diagram with the ![](img/B18420_06_094.png) gate
    added to the qubit, as shown in the following diagram:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了添加到量子比特的 ![img/B18420_06_094.png](img/B18420_06_094.png) 门的电路图，如下所示：
- en: '![Figure 6.14 – Circuit with a  gate ](img/B18420_06_19.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.14 – 带有 门的电路](img/B18420_06_19.png)'
- en: 'Figure 6.19: Circuit with an ![](img/B18420_06_094.png) gate'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.19：带有 ![img/B18420_06_094.png](img/B18420_06_094.png) 门的电路
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看 Bloch 球表示，请在单元格中运行以下代码：
- en: '[PRE35]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The Bloch sphere representation has changed into a superposition state, which
    means it will have an equal probability result of ![](img/B18420_06_015.png) or
    ![](img/B18420_06_018.png) with a phase shift of ![](img/B18420_06_108.png) or
    ![](img/B18420_06_096.png).
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bloch 球表示已变为叠加态，这意味着它将以 ![img/B18420_06_015.png](img/B18420_06_015.png) 或 ![img/B18420_06_018.png](img/B18420_06_018.png)
    的相等概率结果，相位差为 ![img/B18420_06_108.png](img/B18420_06_108.png) 或 ![img/B18420_06_096.png](img/B18420_06_096.png)。
- en: '![A picture containing dome, building  Description automatically generated](img/B18420_06_20.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![包含圆顶和建筑的图片，自动生成描述](img/B18420_06_20.png)'
- en: 'Figure 6.20: ![](img/B18420_06_094.png) gate Bloch sphere'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.20：![img/B18420_06_094.png](img/B18420_06_094.png) 门 Bloch 球
- en: 'To view the QSphere representation, run the following in a cell:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看 QSphere 表示，请在单元格中运行以下代码：
- en: '[PRE36]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The QSphere, as you can see, has an equal probability of being ![](img/B18420_06_015.png)
    and ![](img/B18420_06_015.png) with a phase shift of ![](img/B18420_06_108.png)
    or ![](img/B18420_06_096.png):'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，QSphere 有相等的概率是 ![img/B18420_06_015.png](img/B18420_06_015.png) 和 ![img/B18420_06_015.png](img/B18420_06_015.png)，相位差为
    ![img/B18420_06_108.png](img/B18420_06_108.png) 或 ![img/B18420_06_096.png](img/B18420_06_096.png)：
- en: '![Chart  Description automatically generated](img/B18420_06_21.png)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![图表，自动生成描述](img/B18420_06_21.png)'
- en: 'Figure 6.21: ![](img/B18420_06_094.png) gate, ![](img/B18420_06_096.png) phase
    rotation on the QSphere'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.21：![图片](img/B18420_06_094.png)门，QSphere上的![图片](img/B18420_06_096.png)相位旋转
- en: Now that we have created the circuit with an ![](img/B18420_06_094.png) gate
    and can shift the phase of the qubit in opposite directions and are not limited
    to a single direction to apply phase shifts, we will move on to the next section,
    which will help us understand how to create a circuit with a T gate.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个包含![图片](img/B18420_06_094.png)门的电路，并且可以沿相反方向移动量子比特的相位，而不受限于应用相位移动的单个方向，我们将继续到下一节，该节将帮助我们了解如何使用T门创建电路。
- en: T gate
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: T门
- en: 'The **T gate** is the same as the S gate, only the rotation is ![](img/B18420_06_118.png).
    The matrix representation of the gate is as follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '**T门**与S门相同，只是旋转方向不同![图片](img/B18420_06_118.png)。该门的矩阵表示如下：'
- en: '![](img/B18420_06_119.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18420_06_119.png)'
- en: 'The following truth table illustrates that the operation rotates the input
    around the *z* axis by ![](img/B18420_06_118.png) (45°), hence if the input is
    the ![](img/B18420_06_015.png) state, then the output will be the same. If the
    input is ![](img/B18420_06_018.png), however, then the output would be a phase
    rotation of ![](img/B18420_06_118.png):'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的真值表说明了该操作将输入绕*z*轴旋转![图片](img/B18420_06_118.png)（45°），因此如果输入是![图片](img/B18420_06_015.png)状态，则输出将与输入相同。然而，如果输入是![图片](img/B18420_06_018.png)，则输出将是一个![图片](img/B18420_06_118.png)的相位旋转：
- en: '![Table 6.9 – Truth table representation of phase gate T  ](img/Table_06_09.png)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![表6.9 – 相位门T的真值表表示](img/Table_06_09.png)'
- en: 'Table 6.9: Truth table representation of phase gate T'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.9：相位门T的真值表表示
- en: 'As with all phase gates, it’s best to begin in a superposition state, so we
    will start by including a Hadamard gate, then we will create a circuit using the
    T gate, as illustrated in the following steps:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有相位门一样，最好从叠加态开始，因此我们将首先包括一个Hadamard门，然后我们将使用T门创建一个电路，如下面的步骤所示：
- en: 'First, we add an H gate before appending the T gate:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们在添加T门之前添加一个H门：
- en: '[PRE37]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We then examine the state vector results by running the following cell:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们然后通过运行以下单元格来检查状态向量结果：
- en: '[PRE38]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This prints out the state vector values of the qubit:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值：
- en: '[PRE39]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'To draw the circuit diagram for the T gate, run the following in a cell:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要为T门绘制电路图，请在单元格中运行以下命令：
- en: '[PRE40]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'This displays the circuit diagram with the **T** gate added to the qubit, as
    shown in the following diagram:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了添加了**T**门的量子比特的电路图，如下所示：
- en: '![Figure 6.16 – Circuit representation of the T gate ](img/B18420_06_22.png)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![图6.16 – T门的电路表示](img/B18420_06_22.png)'
- en: 'Figure 6.22: Circuit representation of the T gate'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.22：T门的电路表示
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看Bloch球表示，请在单元格中运行以下命令：
- en: '[PRE41]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The Bloch sphere representation has changed into a superposition state, which
    means it will have an equal probability result of ![](img/B18420_05_004.png) or
    ![](img/B18420_05_005.png), and transitioned the phase of the state by ![](img/B18420_06_118.png).
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bloch球表示已变为叠加态，这意味着它将具有![图片](img/B18420_05_004.png)或![图片](img/B18420_05_005.png)的相等概率结果，并且通过![图片](img/B18420_06_118.png)转换了状态的相位。
- en: '![A picture containing dome, building  Description automatically generated](img/B18420_06_23.png)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![包含圆顶、建筑物的图片，描述自动生成](img/B18420_06_23.png)'
- en: 'Figure 6.23: ![](img/B18420_06_094.png) gate Bloch sphere'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.23：![图片](img/B18420_06_094.png)门Bloch球
- en: 'To view the QSphere representation, run the following in a cell:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看QSphere表示，请在单元格中运行以下命令：
- en: '[PRE42]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The QSphere, as you can see, has transitioned the phase of the state by ![](img/B18420_06_118.png):'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，QSphere通过![图片](img/B18420_06_118.png)转换了状态的相位：
- en: '![Chart  Description automatically generated](img/B18420_06_24.png)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![图表，描述自动生成](img/B18420_06_24.png)'
- en: 'Figure 6.24: T gate, ![](img/B18420_06_118.png) phase rotation on the QSphere'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.24：T门，QSphere上的![图片](img/B18420_06_118.png)相位旋转
- en: Similar to the S gate, we will want to rotate in all directions, so let’s take
    a look at a phase gate that transitions the state of the qubit in the opposite
    direction.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 与S门类似，我们希望沿所有方向旋转，因此让我们看看一个将量子比特状态转换到相反方向的相位门。
- en: T† (dagger) gate
  id: totrans-300
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: T†（共轭）门
- en: 'The ![](img/B18420_06_130.png) gate has the same phase rotation as the T gate,
    that is, ![](img/B18420_06_118.png), only in the opposite direction. Its matrix
    representation is given as follows:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B18420_06_130.png)门与T门具有相同的相位旋转，即![图片](img/B18420_06_118.png)，只是在相反方向。其矩阵表示如下：'
- en: '![](img/B18420_06_132.png)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18420_06_132.png)'
- en: 'The following truth table illustrates that the operation rotates the input
    around the *z* axis by ![](img/B18420_06_133.png) (-45 °), so if the input is
    |![](img/B18420_06_027.png), then the output is |![](img/B18420_06_027.png). If
    the input is |![](img/B18420_04_055.png), then the output is a negative rotation
    of ![](img/B18420_06_133.png):'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的真值表说明了该操作将输入绕*z*轴旋转![](img/B18420_06_133.png)（-45°），因此如果输入是|![](img/B18420_06_027.png)，则输出是|![](img/B18420_06_027.png)。如果输入是|![](img/B18420_04_055.png)，则输出是![](img/B18420_06_133.png)的负旋转：
- en: '![Table 6.10 – Truth table representation of phase gate  ](img/Table_06_10.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![表6.10 – 相位门真值表](img/Table_06_10.png)'
- en: 'Table 6.10: Truth table representation of phase gate ![](img/B18420_06_138.png)'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.10：相位门![](img/B18420_06_138.png)的真值表表示
- en: 'This too is best illustrated by placing the vector onto the *x* axis first,
    so we will create a circuit using the ![](img/B18420_06_130.png) gate by following
    these steps:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 这最好通过首先将向量放置在*x*轴上来说明，因此我们将通过以下步骤创建一个电路，使用![](img/B18420_06_130.png)门：
- en: 'First, we add an H gate before then appending the ![](img/B18420_06_130.png)
    (`tdg`) gate:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们在添加![](img/B18420_06_130.png)（`tdg`）门之前添加一个H门：
- en: '[PRE43]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Next, we examine the state vector results by running the following cell:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们通过运行以下单元格来检查状态向量结果：
- en: '[PRE44]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'This prints out the state vector values of the qubit, where you will notice
    that the imaginary number is now negative:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值，其中你会注意到虚数现在是负数：
- en: '[PRE45]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'To draw the circuit diagram for the ![](img/B18420_06_130.png) gate, run the
    following in a cell:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制![](img/B18420_06_130.png)门的电路图，请在单元格中运行以下代码：
- en: '[PRE46]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'This displays the circuit diagram with the ![](img/B18420_06_130.png) gate
    added to the qubit, as shown in the following diagram:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了添加到量子比特的![](img/B18420_06_130.png)门的电路图，如下所示：
- en: '![A screenshot of a computer  Description automatically generated with low
    confidence](img/B18420_06_25.png)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图  描述由低置信度自动生成](img/B18420_06_25.png)'
- en: 'Figure 6.25: Circuit representation using a ![](img/B18420_06_130.png) gate'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.25：使用![](img/B18420_06_130.png)门的电路表示
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看Bloch球表示，请在单元格中运行以下代码：
- en: '[PRE47]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The Bloch sphere representation has changed into a superposition state, which
    means it will have an equal probability result of ![](img/B18420_05_004.png) or
    ![](img/B18420_05_005.png), and has transitioned the state of the qubit by ![](img/B18420_06_133.png).
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bloch球表示已经变成了叠加态，这意味着它将具有![](img/B18420_05_004.png)或![](img/B18420_05_005.png)的等概率结果，并且通过![](img/B18420_06_133.png)转换了量子比特的状态。
- en: '![A picture containing building, dome  Description automatically generated](img/B18420_06_26.png)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![包含建筑、圆顶的图片  描述由低置信度自动生成](img/B18420_06_26.png)'
- en: 'Figure 6.26: ![](img/B18420_06_130.png) gate, ![](img/B18420_06_133.png) phase
    rotation on the Bloch sphere'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.26：![](img/B18420_06_130.png)门，![](img/B18420_06_133.png)相位旋转在Bloch球上
- en: 'To view the QSphere representation, run the following in a cell:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看QSphere表示，请在单元格中运行以下代码：
- en: '[PRE48]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The QSphere, as you can see, has transitioned the state of the qubit by ![](img/B18420_06_133.png):'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，QSphere已经通过![](img/B18420_06_133.png)转换了量子比特的状态：
- en: '![Chart  Description automatically generated](img/B18420_06_27.png)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![图表  描述由低置信度自动生成](img/B18420_06_27.png)'
- en: 'Figure 6.27: ![](img/B18420_06_130.png) gate, ![](img/B18420_06_133.png) phase
    transition on the QSphere'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.27：![](img/B18420_06_130.png)门，![](img/B18420_06_133.png)相位转换在QSphere上
- en: The preceding gates, as you might have noticed, have predetermined rotation
    angles from the horizontal or vertical axis to help you set the state of the qubit.
    If you wish to specify the angle of rotation yourself, the following rotation
    gates allow you to specify the angle by which to rotate around a given axis. Like
    the other gates, these rotation gates are also reversible and unitary.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的门，正如你可能注意到的，具有从水平或垂直轴预定的旋转角度，以帮助你设置量子比特的状态。如果你希望自行指定旋转角度，以下旋转门允许你指定围绕给定轴旋转的角度。像其他门一样，这些旋转门也是可逆的和幺正的。
- en: Rx gate
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Rx门
- en: You can think of **Rx gates** as your custom rotation gates. Note that I used
    the term *rotate* and not *flip*. This is because visualizing the operation of
    the quantum gates is usually done via the QSphere.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将**Rx门**视为自定义旋转门。请注意，我使用了术语*rotate*而不是*flip*。这是因为量子门的操作通常是通过QSphere来可视化的。
- en: 'Because of its spherical presentation, we refer to operations as rotations
    around the axis by ![](img/B18420_06_152.png) (we will see this clearly in the
    following code examples):'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其球面表示，我们称操作为绕轴旋转![img/B18420_06_152.png]（我们将在下面的代码示例中清楚地看到这一点）：
- en: '![](img/B18420_06_153.png)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
  zh: '![img/B18420_06_153.png]'
- en: 'By applying a Y rotation, we get the following formula:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用Y旋转，我们得到以下公式：
- en: '![](img/B18420_06_154.png)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
  zh: '![img/B18420_06_154.png]'
- en: 'Finally, a Z rotation will yield the following formula:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，一个Z旋转将产生以下公式：
- en: '![](img/B18420_06_155.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![img/B18420_06_155.png]'
- en: 'We’ll create a circuit using one of the rotation gates – let’s go with the
    Rz gate:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用旋转门之一来创建一个电路——让我们选择Rz门：
- en: 'First, we will rotate along the *z* axis by ![](img/B18420_06_156.png). We’ll
    be using the `math` library to `import` `pi`, and our friendly H gate will be
    applied to help illustrate the phase shift:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将沿着**z**轴旋转，如图所示 ![img/B18420_06_156.png]。我们将使用`math`库来`导入``pi`，并且我们的友好H门将被应用来帮助说明相移：
- en: '[PRE49]'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Next, we examine the state vector results by running the following cell:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们通过运行以下单元格来检查状态向量结果：
- en: '[PRE50]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'This prints out the state vector values of the qubit:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出量子比特的状态向量值：
- en: '[PRE51]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'To draw the circuit diagram for the Rz gate, run the following in a cell:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制Rz门的电路图，请在单元格中运行以下代码：
- en: '[PRE52]'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'This displays the circuit diagram with the **Rz** gate added to the qubit,
    as shown in the following diagram:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了添加了**Rz**门的量子比特的电路图，如下所示：
- en: '![Diagram  Description automatically generated with medium confidence](img/B18420_06_28.png)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
  zh: '![带有中等置信度的自动生成的描述图](img/B18420_06_28.png)'
- en: 'Figure 6.28: Circuit representation using an Rz gate'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.28：使用Rz门的电路表示
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看Bloch球表示，请在单元格中运行以下代码：
- en: '[PRE53]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: The Bloch sphere representation has changed into a superposition state, which
    means it will have an equal probability result of ![](img/B18420_05_004.png) or
    ![](img/B18420_05_005.png) and has rotated the state by a phase of ![](img/B18420_06_156.png).
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bloch球表示已经变成了叠加态，这意味着它将具有![img/B18420_05_004.png]或![img/B18420_05_005.png]的等概率结果，并且通过一个相移![img/B18420_06_156.png]旋转了状态。
- en: '![A picture containing building, dome  Description automatically generated](img/B18420_06_29.png)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![包含建筑、圆顶的图片 描述自动生成](img/B18420_06_29.png)'
- en: 'Figure 6.29: RZ gate Bloch sphere'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.29：RZ门Bloch球
- en: 'To view the QSphere representation, run the following in a cell:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看QSphere表示，请在单元格中运行以下代码：
- en: '[PRE54]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'The QSphere, as you can see, has transitioned the state by a phase of ![](img/B18420_06_156.png):'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，QSphere通过一个相移![img/B18420_06_156.png]转换了状态：
- en: '![Chart  Description automatically generated](img/B18420_06_30.png)'
  id: totrans-357
  prefs: []
  type: TYPE_IMG
  zh: '![带有自动生成的描述图表](img/B18420_06_30.png)'
- en: 'Figure 6.30: RZ gate QSphere transitioned phase of π/6'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.30：RZ门QSphere转换了π/6的相移
- en: These rotation gates help us provide specific gate rotations around each axis.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 这些旋转门帮助我们提供围绕每个轴的特定门旋转。
- en: There are other universal gates that imitate the function of a custom gate using
    a more general alternative, so let’s review them next.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 有其他通用门，它们通过更通用的替代方案模仿自定义门的功能，所以让我们接下来回顾它们。
- en: Universal U gate
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通用U门
- en: The **U gate**, as mentioned earlier in the book, is used in order to define
    a universal quantum system where you would need to ensure that the quantum system
    adheres to certain criteria, the most popular of which are the **DiVincenzo criteria**
    one of which states that it should have a universal set of quantum gates.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，**U门**用于定义一个通用量子系统，其中您需要确保量子系统符合某些标准，其中最流行的是**DiVincenzo标准**，其中之一指出它应该有一个通用的量子门集。
- en: We discussed how, in a classical system, both NOR and NAND gates are considered
    classical universal gates. In a quantum system, the **U** gate is defined as a
    universal gate, due to its ability to provide multiple degrees of freedom to rotate
    about the Hilbert space of a qubit. The U gate has parameter fields that determine
    how much the state vector should move along the given axis. Let’s look at them
    individually first, and then we’ll apply each gate to a qubit to examine the results.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了在经典系统中，NOR和NAND门都被认为是经典通用门。在量子系统中，**U**门被定义为通用门，因为它能够为量子比特的Hilbert空间提供多个自由度来旋转。U门有参数字段，用于确定状态向量应该在给定轴上移动多少。让我们首先单独查看它们，然后我们将每个门应用到量子比特上以检查结果。
- en: 'The **U** gate has three parameters that are applied as rotations on all axes,
    that is, the *x* axis, *y* axis, and *z* axis, respectively. The matrix representation
    of the U gate is defined as follows:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '**U**门有三个参数，分别应用于所有轴上的旋转，即*x*轴、*y*轴和*z*轴。U门的矩阵表示定义为以下：'
- en: '![](img/B18420_06_161.png)'
  id: totrans-365
  prefs: []
  type: TYPE_IMG
  zh: '![img/B18420_06_161.png]'
- en: In the preceding equation, ![](img/B18420_06_162.png), ![](img/B18420_06_163.png),
    and ![](img/B18420_06_164.png) are the angles of rotation in radians as described
    in the preceding ![](img/B18420_06_165.png) equation. Note that for the U gate
    to remain a unitary operation, that is, ![](img/B18420_06_166.png), the angles
    must be confined to the range ![](img/B18420_06_167.png), and ![](img/B18420_06_168.png).
    We can also see these ranges in the U matrix, where these values lie in the arguments
    of the matrix, which leaves the phase l to also have a range of ![](img/B18420_06_169.png).
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的方程式![](img/B18420_06_162.png)，![](img/B18420_06_163.png)，和![](img/B18420_06_164.png)中，角度是以弧度表示的，如前所述的![](img/B18420_06_165.png)方程式。请注意，为了使U门保持为单位运算，即![](img/B18420_06_166.png)，角度必须限制在![](img/B18420_06_167.png)和![](img/B18420_06_168.png)的范围内。我们也可以在U矩阵中看到这些范围，这些值位于矩阵的参数中，这使相位l也有一个范围![](img/B18420_06_169.png)。
- en: 'Let’s create a circuit that implements the U gate:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个实现U门的电路：
- en: 'First, we will create a single-qubit circuit and apply the U gate to it with
    each angle set to ![](img/B18420_06_029.png). We’ll reuse our state vector helper
    function, `execute_circuit_sv`, so we can extract the state vector results, and
    the QSphere to visualize the state vector:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个单比特电路，并将U门应用于它，每个角度设置为![img/B18420_06_029.png]。我们将重用我们的状态向量辅助函数`execute_circuit_sv`，以便提取状态向量结果，并使用QSphere来可视化状态向量：
- en: '[PRE55]'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The result value we shall see is set to the following:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到的值设置为以下：
- en: '[PRE56]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Note that for convenience, I replaced the value `4.32978028e-17` from the results
    with a `0`, because the number is too small and insignificant.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，为了方便起见，我将结果中的值`4.32978028e-17`替换为`0`，因为该数字太小，不具意义。
- en: 'The expected circuit diagram for **U** is as follows, with the parameters listed
    at the bottom:'
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**U**门的预期电路图如下，参数列于底部：'
- en: '![A picture containing diagram  Description automatically generated](img/B18420_06_31.png)'
  id: totrans-374
  prefs: []
  type: TYPE_IMG
  zh: '![包含图表的图片，描述自动生成](img/B18420_06_31.png)'
- en: 'Figure 6.31: The U gate set with all rotation parameters to ![](img/B18420_06_029.png)'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.31：将所有旋转参数设置为![img/B18420_06_029.png]的U门
- en: 'Now, to view the Bloch sphere representation, run the following in a cell:'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要查看Bloch球面表示，请在单元格中运行以下命令：
- en: '[PRE57]'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: The Bloch sphere representation has changed so that the state is set after all
    parameters have applied the specified rotation.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: Bloch球面表示已更改，状态是在所有参数应用指定的旋转后设置的。
- en: '![A picture containing text, building, dome  Description automatically generated](img/B18420_06_32.png)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、建筑、圆顶的图片，描述自动生成](img/B18420_06_32.png)'
- en: 'Figure 6.32: U gate, Bloch sphere representation with all parameters set to
    ![](img/B18420_06_029.png)'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.32：U门，Bloch球面表示，所有参数设置为![img/B18420_06_029.png]
- en: 'The QSphere representation, produced by executing the `qsphere` command, is
    shown as follows:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`qsphere`命令产生的QSphere表示如下：
- en: '![Chart  Description automatically generated](img/B18420_06_33.png)'
  id: totrans-382
  prefs: []
  type: TYPE_IMG
  zh: '![图表，描述自动生成](img/B18420_06_33.png)'
- en: 'Figure 6.33: The QSphere representation of the U gate set with all parameters
    to ![](img/B18420_06_029.png)'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.33：将所有参数设置为![img/B18420_06_029.png]的U门的QSphere表示
- en: As you can see, you can apply various angles to the U gate in order to set the
    state of the qubit into any point in the Hilbert space. This also allows you to
    initialize the state of a qubit using the U gate to set the state.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，您可以对U门应用各种角度，以便将量子比特的状态设置为希尔伯特空间中的任意一点。这也允许您使用U门初始化量子比特的状态。
- en: Now you know that single-qubit gates provide many ways to create a complex linear
    combination of their basis states, but manipulation of a single qubit alone is
    not enough to carry out the functionality that most quantum algorithms require.
    One such example is **quantum entanglement**. This is where multi-qubit gates
    come into play. Let’s learn about those in the next section.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道单比特门提供了许多方法来创建其基态的复杂线性组合，但仅操纵单个量子比特不足以执行大多数量子算法所需的功能。一个这样的例子是**量子纠缠**。这就是多比特门发挥作用的地方。让我们在下一节中了解这些内容。
- en: Understanding multi-qubit gates
  id: totrans-386
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解多比特门
- en: As described in *Chapter 5, Understanding the Qubit*, two or more qubits can
    combine their states by their **tensor product**, sometimes referred to as the
    **Kronecker product**.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 如第 5 章中所述，两个或更多的量子比特可以通过它们的**张量积**组合它们的状态，有时也称为**克罗内克积**。
- en: In this section, we will discuss the multi-qubit gates and how they operate
    on the qubits similarly to how single-qubit gates do, which includes them being
    unitary and reversible.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论多量子比特门以及它们如何与单量子比特门类似地操作量子比特，包括它们是幺正的和可逆的。
- en: 'To keep the descriptions and examples uniform, the following descriptions of
    the multi-qubit gates will be presented the same way as the single-qubit gates.
    We will open the helper file again and review another function titled `execute_circuit_returns`.
    The helper function will have a few differences, the first of which will be the
    Qiskit primitive Sampler to run our circuits. We are using this for now so that
    you don’t use up your quantum hardware allotted time on these simple circuits.
    Save the hardware for the fun work later in this book. Also, just like the previous
    helper function we used for single qubit gates, this will return multiple values
    including: total counts, circuit diagram, and histogram (or distribution) of results.
    Let’s review the code:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持描述和示例的一致性，以下多量子比特门的描述将以与单量子比特门相同的方式进行展示。我们将再次打开辅助文件并回顾另一个名为 `execute_circuit_returns`
    的函数。辅助函数将有一些不同之处，首先是使用 Qiskit 原语 Sampler 来运行我们的电路。我们目前使用它是为了确保你不会用完这些简单电路分配的量子硬件时间。为书中后面更有趣的工作保留硬件。同样，就像我们之前用于单量子比特门的辅助函数一样，这个函数将返回多个值，包括：总计数、电路图和结果直方图（或分布）。让我们回顾一下代码：
- en: '[PRE58]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: The purpose of switching over to the Sampler primitive is not that we can’t
    use the state vector simulator; it’s primarily so we can observe some of the interesting
    characteristics of our circuit and the gates. For those who wish to use the state
    vector simulator, do not worry. There will be some challenges in the *Questions*
    section at the end of this chapter that will allow you to use it.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 转向 Sampler 原语的目的并不是我们不能使用状态向量模拟器；主要是为了我们可以观察我们电路和门的一些有趣特性。对于那些希望使用状态向量模拟器的人来说，不用担心。在本章末尾的**问题**部分将有一些挑战，这将允许你使用它。
- en: Another difference you will see is that we are no longer using the Bloch sphere
    or QSphere to visualize the quantum states. Rather, we will replace them with
    a `histogram` plot of the quasi-distribution, which is a dict-like class for representing
    the quasi-probabilities. For each circuit we will be creating, we will include
    more than one qubit, as these multi-qubit gates all operate on two or more qubits.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会看到另一个不同之处在于，我们不再使用 Bloch 球或 QSphere 来可视化量子状态。相反，我们将用准分布的`直方图`来代替它们，准分布是一个类似于字典的类，用于表示准概率。对于我们将要创建的每个电路，我们将包括一个以上的量子比特，因为这些多量子比特门都在两个或更多的量子比特上操作。
- en: 'Now that we have reviewed our helper function, let’s move on to the next set
    of gates, the **multi-qubit gates**, **specifically 2-qubit gates**. These include
    the following:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经回顾了我们的辅助函数，让我们继续到下一组门，即**多量子比特门**，**特别是 2 量子比特门**。这些包括以下内容：
- en: The **CNOT** gate
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CNOT** 门'
- en: The **Toffoli** gate
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Toffoli** 门'
- en: The **Swap** gate
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Swap** 门'
- en: We will learn about these gates in the following sections.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的章节中学习这些门。
- en: CNOT two-qubit gate
  id: totrans-398
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CNOT 二量子比特门
- en: The **CNOT gate**, often referred to as a **Control-NOT** gate, is similar to
    the **XOR** classical-bit gate in that if you provide two input states of either
    0 or 1, the results will be the same as if the input states were run through an
    XOR gate. The CNOT gate is composed of two parts.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '**CNOT 门**，通常被称为**控制非**门，与经典位运算中的**异或**门相似，即如果你提供两个输入状态，要么是 0 要么是 1，结果将与输入状态通过异或门运行的结果相同。CNOT
    门由两部分组成。'
- en: The first part is the **Control**, which is connected to one of the qubits,
    and is what triggers the CNOT gate to perform an operation on the other qubit
    connected to the other end of the CNOT gate, the **Target**.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分是**控制**，它连接到一个量子比特上，并且是触发 CNOT 门对连接到 CNOT 门另一端的另一个量子比特执行操作的触发器，即**目标**。
- en: The Target is an operation that will be performed on the other qubit; in this
    case, it’s a **NOT** operation. Recall from the previous section on single-qubit
    gates that the NOT gate rotates the qubit about the *x* axis by ![](img/B18420_06_041.png).
    The CNOT gate is one of the more commonly used multi-qubit gates as it is how
    qubits get entangled.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是对其他量子比特执行的操作；在这种情况下，它是一个**NOT**操作。回想一下之前关于单量子比特门的部分，NOT门将量子比特绕*x*轴旋转。CNOT门是更常用的多量子比特门之一，因为它是量子比特纠缠的方式。
- en: The CNOT gate is also described as a **Control-X** (**CX**) gate since the target
    is often coded as an X operation. You will see this CX gate convention when running
    the following example.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: CNOT门也被称为**控制-X**（**CX**）门，因为目标通常编码为X操作。您将在运行以下示例时看到这个CX门约定。
- en: 'The matrix representation of a CNOT gate is a *4 x 4* matrix due to the tensor
    product of two qubits, as illustrated here:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 由于两个量子比特的张量积，CNOT门的矩阵表示是一个*4 x 4*矩阵，如下所示：
- en: '![](img/B18420_06_175.png)'
  id: totrans-404
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_175.png)'
- en: Notice that the top-left *2 x 2* quadrant of the CNOT matrix represents an Identity
    matrix, I, and the bottom-right *2 x 2* quadrant represents the **X** matrix.
    This matrix describes the state when the first qubit, q[0], is the Target and
    the second qubit, q[1], is the Control.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，CNOT矩阵的左上角*2 x 2*象限代表一个单位矩阵I，右下角*2 x 2*象限代表**X**矩阵。这个矩阵描述了第一个量子比特q[0]是目标，第二个量子比特q[1]是控制的状态。
- en: 'The following truth table illustrates that when the Control qubit (the left
    side of the input vector) is 0, there is no change to the Target qubit (the right
    side of the input vector). When the Control qubit is set to 1, then the Target
    qubit operation is enabled and therefore rotates the Target qubit around the *x*
    axis by π (that is, 180°):'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的真值表说明了当控制量子比特（输入向量的左侧）为0时，目标量子比特（输入向量的右侧）没有变化。当控制量子比特设置为1时，则目标量子比特的操作被启用，因此将目标量子比特绕*x*轴旋转π（即180°）：
- en: '![Table 6.11 – Truth table representation of CNOT gate ](img/Table_06_11.png)'
  id: totrans-407
  prefs: []
  type: TYPE_IMG
  zh: '![表6.11 – CNOT门的真值表表示](img/Table_06_11.png)'
- en: 'Table 6.11: Truth table representation of CNOT gate'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 表6.11：CNOT门的真值表表示
- en: 'Let’s now create a circuit, add a CNOT gate, and execute it:'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来创建一个电路，添加一个CNOT门，并执行它：
- en: 'We’ll begin by creating a two-qubit quantum circuit and applying a Hadamard
    gate on the first qubit, and a CNOT gate on the two qubits, where the Control
    is set to the first qubit and the Target is set to the second qubit:'
  id: totrans-410
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先创建一个双量子比特量子电路，并在第一个量子比特上应用Hadamard门，在两个量子比特上应用CNOT门，其中控制设置为第一个量子比特，目标设置为第二个量子比特：
- en: '[PRE59]'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Then, we will review the result counts by running the following cell:'
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将通过运行以下单元格来回顾结果计数：
- en: '[PRE60]'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'This prints out the count results:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出计数结果：
- en: '[PRE61]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'To draw the circuit diagram for the CNOT gate, run the following in a cell:'
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要绘制CNOT门的电路图，请在单元格中运行以下代码：
- en: '[PRE62]'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The following circuit diagram illustrates the CNOT gate, where the Control
    is q[0] and the Target is q[1]:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的电路图说明了CNOT门，其中控制是q[0]，目标是q[1]：
- en: '![A picture containing text, clock  Description automatically generated](img/B18420_06_34.png)'
  id: totrans-419
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、时钟的图片，自动生成描述](img/B18420_06_34.png)'
- en: 'Figure 6.34: Circuit representation using a CNOT gate'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.34：使用CNOT门的电路表示
- en: 'To view the histogram results with the counts after executing the previous
    circuit, enter the following into a cell:'
  id: totrans-421
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看执行之前电路后的计数直方图结果，请在单元格中输入以下内容：
- en: '[PRE63]'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The following illustrates the results including an H gate. The following graph
    shows the probabilities of the results being either 00 or 11:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图示包括一个H门的结果。下面的图表显示了结果为00或11的概率：
- en: '![Chart, bar chart  Description automatically generated](img/B18420_06_35.png)'
  id: totrans-424
  prefs: []
  type: TYPE_IMG
  zh: '![图表、柱状图，自动生成描述](img/B18420_06_35.png)'
- en: 'Figure 6.35: Histogram representation of CNOT results from circuit, where the
    y axis represents the quasi-probabilities of the result.'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.35：电路CNOT结果的历史图表示，其中y轴表示结果的准概率。
- en: The results from the previous circuit illustrate how the CNOT gates can be used
    to entangle two qubits, where one qubit can control the operation of another qubit,
    in this case, applying a NOT gate to the target qubit.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 之前电路的结果说明了CNOT门如何用于纠缠两个量子比特，其中一个量子比特可以控制另一个量子比特的操作，在这种情况下，对目标量子比特应用NOT门。
- en: In the following section, I will clarify what the entanglement of multiple qubits
    means. There are other Control gates that implement other operations, such as
    **Control-Y** (**CY**), **Control-Z** (**CZ**), **Control-H** (**CH**), and more.
    These gates all share the same characteristics as the CNOT (**CX**, **Control-X**)
    gate in that they have a Source and Target. The main difference, as you can imagine,
    is the operation that the Target would follow. For the CNOT gate, the Target would
    operate with an X gate, and naturally, a Control-Y gate would operate a Y gate
    on the Target qubit. Try out a few for yourself and see how the results differ.
    Notice that the operations will be the same as if you run the single gate to the
    Target gate.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我将阐明多个量子比特的纠缠意味着什么。还有其他控制门实现其他操作，例如**Control-Y**（**CY**）、**Control-Z**（**CZ**）、**Control-H**（**CH**）等。这些门都与CNOT（**CX**，**Control-X**）门具有相同的特征，即它们都有一个源和目标。正如你可以想象的那样，主要区别在于目标会执行的操作。对于CNOT门，目标会与X门一起操作，而自然地，一个Control-Y门会在目标量子比特上执行Y门。自己尝试几个，看看结果如何不同。注意，操作将与单独运行到目标门的操作相同。
- en: The last multi-qubit gate we will focus on, which is also used in a variety
    of quantum algorithms, is the **Toffoli** gate.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要关注的最后一个多量子比特门，它也被用于各种量子算法中，是**Toffoli**门。
- en: Toffoli multi-qubit gate
  id: totrans-429
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Toffoli多量子比特门
- en: 'The **Toffoli** gate is named after Tommaso Toffoli, an Italian-American professor
    in computer and electrical engineering at Boston University. This gate is very
    similar to the multi-qubit Control gates mentioned earlier, only this gate has
    multiple Controls and a single Target, which in this case is a NOT gate. To simplify
    the description of multi-control gates, they are written out in the following
    format: **CCX**. This is to indicate it is a dual-controlled Control-Not gate,
    and a **CCCX** is a triple-controlled Control-Not gate.'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '**Toffoli**门是以Tommaso Toffoli的名字命名的，他是波士顿大学计算机和电气工程系的意大利裔美国教授。这个门与前面提到的多量子比特控制门非常相似，只是这个门有多个控制和一个单一的目标，在这种情况下是一个NOT门。为了简化多控制门的描述，它们以下列格式写出：**CCX**。这是为了表明它是一个双控制控制非门，而**CCCX**是一个三控制控制非门。'
- en: 'The general matrix representation of a Toffoli gate is an *8 x 8* matrix because
    of the tensor product of three qubits, as illustrated in the following matrix.
    Notice that the first three diagonal *2 x 2* matrix blocks are the Identity matrix
    and the last *2 x 2* matrix (bottom right) is a NOT gate representation that flips
    the qubit. Note that the matrix for the Toffoli gate in Qiskit is slightly different
    as it increases the matrix size by 2^n, where *n* is the number of qubits onto
    which the gate is applied. In this case, we have 2³ since we have a three-qubit
    gate:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: Toffoli门的通用矩阵表示是一个*8 x 8*矩阵，因为三个量子比特的张量积，如下面的矩阵所示。注意，前三个对角线*2 x 2*矩阵块是单位矩阵，最后一个*2
    x 2*矩阵（右下角）是NOT门的表示，它翻转量子比特。注意，Qiskit中Toffoli门的矩阵略有不同，因为它将矩阵大小增加了2^n，其中*n*是应用该门的量子比特数量。在这种情况下，我们有2³，因为我们有一个三量子比特门：
- en: '![](img/B18420_06_176.png)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18420_06_176.png)'
- en: 'Let’s run this gate to see the results of it on our quantum circuit:'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行这个门来看看它在我们的量子电路上的结果：
- en: 'We’ll begin by creating a three-qubit quantum circuit and applying a `CCX`
    (Toffoli) gate, where the first two qubits are the control qubits, and the third
    qubit is the target qubit:'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先创建一个三量子比特量子电路，并应用一个`CCX`（Toffoli）门，其中前两个量子比特是控制量子比特，第三个量子比特是目标量子比特：
- en: '[PRE64]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The result of executing this circuit will be no surprise, and consists of 8
    possible states since we are running everything on a three-qubit circuit, which
    means 2³ basis states, where the last state, 111, is the only one set:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 执行这个电路的结果不会令人惊讶，由于我们是在一个三量子比特电路上运行一切，因此有8种可能的状态，这意味着2³个基态，其中最后一个状态111是唯一被设置的：
- en: '[PRE65]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Let’s visualize the Bloch sphere in a new cell:'
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在一个新的单元格中可视化Bloch球：
- en: '[PRE66]'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '![A picture containing text, dome, building  Description automatically generated](img/B18420_06_36.png)'
  id: totrans-440
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、圆顶、建筑的图片  描述自动生成](img/B18420_06_36.png)'
- en: 'Figure 6.36: Bloch sphere representation from the Toffoli (CCX) gate circuit
    results'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.36：Toffoli（CCX）门电路结果的Bloch球表示
- en: 'And now let’s see our results on the QSphere with the `qsphere` command:'
  id: totrans-442
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们使用`qsphere`命令在QSphere上查看我们的结果：
- en: '![A picture containing text, dome  Description automatically generated](img/B18420_06_37.png)'
  id: totrans-443
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、圆顶的图片  描述自动生成](img/B18420_06_37.png)'
- en: 'Figure 6.37: Qsphere representation from the Toffoli (CCX) gate circuit results'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.37：Toffoli（CCX）门电路结果的Qsphere表示
- en: As we can see from the above results, the final state is ![](img/B18420_06_177.png),
    as expected, since the qubits all start in the ![](img/B18420_06_178.png) state,
    but as the control qubits are each set to ![](img/B18420_05_005.png), this sets
    the target qubit, a NOT gate, to enable and, therefore, change the state of the
    target qubit q[2] to the ![](img/B18420_05_005.png) state, therefore rendering
    the results ![](img/B18420_06_177.png).
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述结果中我们可以看到，最终状态是![](img/B18420_06_177.png)，正如预期的那样，因为量子比特最初都处于![](img/B18420_06_178.png)状态，但由于控制量子比特被分别设置为![](img/B18420_05_005.png)，这设置了目标量子比特（一个非门），使其启用并因此改变目标量子比特q[2]的状态到![](img/B18420_05_005.png)状态，因此得到结果![](img/B18420_06_177.png)。
- en: 'The circuit diagram for the Toffoli gate is as follows:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: Toffoli门的电路图如下：
- en: '![Figure 6.31 – Circuit representation of a Toffoli (CCX) gate ](img/B18420_06_38.png)'
  id: totrans-447
  prefs: []
  type: TYPE_IMG
  zh: '![图6.31 – Toffoli（CCX）门的电路表示](img/B18420_06_38.png)'
- en: 'Figure 6.38: Circuit representation of a Toffoli (CCX) gate'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.38：Toffoli（CCX）门的电路表示
- en: 'Let’s see how the base gates are used to create this three-qubit gate. In a
    new cell, run the `decompose` function of the quantum circuit:'
  id: totrans-449
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看如何使用基本门来创建这个三量子比特门。在一个新的单元中，运行量子电路的`decompose`函数：
- en: '[PRE67]'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'This will result in the following illustration of all the gates needed to create
    a single Toffoli gate. Note that this may be different as this was how it was
    displayed at the time of writing:'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致以下所有创建单个Toffoli门所需的门的示意图。请注意，这可能与写作时的显示不同：
- en: '![Figure 6.32 – Gates necessary to create a Toffoli (CCX) gate ](img/B18420_06_39.png)'
  id: totrans-452
  prefs: []
  type: TYPE_IMG
  zh: '![图6.32 – 创建Toffoli（CCX）门所需的门](img/B18420_06_39.png)'
- en: 'Figure 6.39: Gates necessary to create a Toffoli (CCX) gate'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.39：创建Toffoli（CCX）门所需的门
- en: This looks very complicated. You can see that the use of the various single-qubit
    and multi-qubit gates used to represent this one gate are quite complex. In this
    example, you can see the use of H, CNOT, and ![](img/B18420_06_130.png) gates.
    There are other multi-qubit gates that leverage single and two-qubit gates in
    order to operate. The Toffoli gate allows us to operate on multiple qubits, which
    we shall see later on when we start to delve into quantum algorithms.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来非常复杂。您可以看到，用于表示这个门的各个单量子比特和多量子比特门的使用相当复杂。在这个例子中，您可以看到H、CNOT和![](img/B18420_06_130.png)门的使用。还有其他多量子比特门，它们利用单量子比特和双量子比特门来操作。Toffoli门允许我们在多个量子比特上操作，我们将在开始深入研究量子算法时看到这一点。
- en: Let’s look at a gate we would use to swap information between one qubit and
    another.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们用来在量子比特之间交换信息的门。
- en: Swap gate
  id: totrans-456
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交换门
- en: 'The **swap gate** is used to swap two qubit values. The matrix representation
    of the swap gate is defined as follows:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '**交换门**用于交换两个量子比特的值。交换门的矩阵表示如下：'
- en: '![](img/B18420_06_183.png)'
  id: totrans-458
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_06_183.png)'
- en: 'Let’s create a circuit and implement this by swapping two qubits:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个电路，并通过交换两个量子比特来实现这一点：
- en: 'We will set the first qubit to the ![](img/B18420_06_015.png) state and the
    second qubit to the ![](img/B18420_06_018.png) state. Then, we will invoke a swap
    between the two using the `swap` gate and verify the results of each qubit:'
  id: totrans-460
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将第一个量子比特设置为![](img/B18420_06_015.png)状态，第二个量子比特设置为![](img/B18420_06_018.png)状态。然后，我们将使用`swap`门在这两个量子比特之间进行交换，并验证每个量子比特的结果：
- en: '[PRE68]'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'By viewing the resulting diagram of the circuit (`img`) you will see a circuit
    diagram of the swap gate as shown here, just after the X gate we included for
    comparison:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看电路的结果图（`img`），您将看到交换门的电路图，正如这里所示，就在我们为了比较而包含的X门之后：
- en: '![Figure 6.33 – Circuit diagram of an X gate followed by a Swap gate ](img/B18420_06_40.png)'
  id: totrans-463
  prefs: []
  type: TYPE_IMG
  zh: '![图6.33 – X门后跟交换门的电路图](img/B18420_06_40.png)'
- en: 'Figure 6.40: Circuit diagram of an X gate followed by a Swap gate'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.40：X门后跟交换门的电路图
- en: 'Before viewing the Bloch sphere and QSphere result for each qubit, let’s take
    a moment to review what we expect to see. Our two qubits are first initialized
    to the ![](img/B18420_06_015.png) state, and we then applied an X gate to the
    second qubit (q1) to change its state to ![](img/B18420_06_018.png). Finally,
    we added a Swap gate to swap the value of q[0] and q[1], which would result in
    ![](img/B18420_06_188.png) and ![](img/B18420_06_189.png). Let’s see the results
    of both the Bloch sphere and QSphere:'
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在查看每个量子比特的Bloch球和QSphere结果之前，让我们花点时间回顾一下我们期望看到的内容。我们的两个量子比特首先被初始化为![](img/B18420_06_015.png)状态，然后我们对第二个量子比特（q1）应用X门，将其状态改变为![](img/B18420_06_018.png)。最后，我们添加了一个交换门来交换q[0]和q[1]的值，这将导致![](img/B18420_06_188.png)和![](img/B18420_06_189.png)。让我们看看Bloch球和QSphere的结果：
- en: '![A picture containing text, dome, building  Description automatically generated](img/B18420_06_41.png)'
  id: totrans-466
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.41: Bloch sphere representation of a Swap gate'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, the results you see swap the value of one qubit with the other, which
    ends up with qubit 0 with the value we set or qubit 1, and vice versa. Let’s now
    look at the QSphere results:'
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of a computer  Description automatically generated with low
    confidence](img/B18420_06_42.png)'
  id: totrans-469
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.42: QSphere representation after applying the Swap gate'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
- en: Excellent! The results, as we can see in the previous diagram, show that the
    state vectors for both qubits are set as expected, with ![](img/B18420_06_188.png)
    and ![](img/B18420_06_191.png).
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
- en: This is a good opportunity to describe how the order of the qubit results is
    displayed in the Bra-Ket notation. Note from the values in the QSphere in the
    previous figure that the qubit at position 0 (the right-most value) is set to
    one and the qubit at position 1 is set to zero. This is the Bra-Ket qubit order.
    As more qubits are added, they are therefore appended to the left of the previous
    qubits, for example, ![](img/B18420_06_192.png)
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we have learned about multi-qubit gates, namely, CNOT and Toffoli
    gates. We also learned about an extra gate, that is, the Swap gate.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are familiar with single-qubit and multi-qubit gates, let’s review
    the non-reversible measurement operators.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the measurement operator
  id: totrans-475
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **non-reversible operator** is an operator that is applied on a qubit(s),
    and if applying the same operator again on the same qubits, then the results will
    not return the qubits to the same state that they had prior to applying the operator.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
- en: This section will cover the non-reversible operators, specifically the measurement
    operator, and the reasons why they are just as important as the other operators
    discussed previously.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
- en: '**Measurement** is an operator that instructs the quantum system to measure
    the quantum state of the system. Before we dive into how we include the measurement
    instruction in our quantum circuits, let’s first define what is meant by measuring
    the quantum state of the system.'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: Note that measurement outcomes are in general probabilistic. What we lose in
    information is the complex amplitude of each computational basis state, into which
    we can encode information. At best, we can rerun and measure the circuit multiple
    times to at least get statistics.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: 'We know from quantum mechanics that the information about a quantum system
    is impossible to access, specifically the measurement of the qubit’s complex amplitudes.
    For example, let’s say that we have a qubit in a superposition state ![](img/B18420_06_193.png),
    where the complex amplitudes sum to 1:'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18420_06_194.png)'
  id: totrans-481
  prefs: []
  type: TYPE_IMG
- en: A measurement of the preceding cannot provide the complex amplitude information
    in ![](img/B18420_06_195.png). What the measurement of a qubit returns is the
    basis ![](img/B18420_06_196.png) with a probability ![](img/B18420_06_197.png)
    of the state ![](img/B18420_06_193.png) in the standard basis.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 对前面的测量无法提供![](img/B18420_06_195.png)中的复振幅信息。量子比特的测量返回的是标准基中状态![](img/B18420_06_196.png)的基![](img/B18420_06_197.png)，其概率为![](img/B18420_06_193.png)。
- en: We viewed an example of this earlier when describing the Hadamard gate. When
    we set the qubit in a complex linear combination of a|![](img/B18420_06_027.png)
    and b|![](img/B18420_04_055.png), where a and b are the complex amplitudes of
    the basis states, the measurement result was based on the probability ![](img/B18420_06_201.png)
    of measuring ![](img/B18420_06_015.png) and ![](img/B18420_06_203.png) of measuring
    |![](img/B18420_04_055.png), which for a Hadamard gate results in 50%, or ![](img/B18420_06_205.png).
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在描述Hadamard门时已经查看了一个这样的例子。当我们设置量子比特为a|![](img/B18420_06_027.png)和b|![](img/B18420_04_055.png)的复线性组合时，其中a和b是基态的复振幅，测量结果基于测量![](img/B18420_06_015.png)的概率![](img/B18420_06_201.png)和测量|![](img/B18420_04_055.png)的概率![](img/B18420_06_203.png)，对于Hadamard门结果是50%，或![](img/B18420_06_205.png)。
- en: An important thing to note about measuring the state of a system is that once
    you measure it, the quantum information of the system is lost. What this means
    is that by measuring the qubit(s), the state will collapse into one of the two
    basis states, ![](img/B18420_06_015.png) or ![](img/B18420_06_018.png), based
    on the amplitude of the components, ![](img/B18420_06_195.png) and ![](img/B18420_06_209.png),
    of the quantum state. After the measurement, you no longer have the information
    contained in a and b to do anything else.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 关于测量系统状态的一个重要注意事项是，一旦你测量它，系统的量子信息就会丢失。这意味着通过测量量子比特，状态将坍缩到两个基态之一，![](img/B18420_06_015.png)
    或 ![](img/B18420_06_018.png)，这取决于量子状态的分量幅度，![](img/B18420_06_195.png) 和 ![](img/B18420_06_209.png)。测量之后，你就不再拥有包含在a和b中的信息来做其他任何事情了。
- en: If you were to try to measure the same qubit that you just measured, the result
    will be the same as the first measurement but will not set the qubit back to the
    quantum state in which it was prior to the measurement. Therefore, measurement
    is a non-reversible operator.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试测量你刚刚测量的相同量子比特，结果将与第一次测量相同，但不会将量子比特设置回测量之前的量子状态。因此，测量是一个不可逆算子。
- en: Once the measurement is completed, the result is then sent over to the classical
    bit, which will return the information back to the classical system. Now that
    we understand how the measurement works and what the results of the measurements
    are, let’s run some code to see it at work!
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成测量，结果就会被发送到经典比特，这将信息返回到经典系统。现在我们了解了测量是如何工作的以及测量的结果是什么，让我们运行一些代码来看看它是如何工作的！
- en: 'In this example, we will create a Bell state circuit (we covered these in detail
    in *Chapter 4*, *Understanding Basic Quantum Computing Principles*), which contains
    a Hadamard followed by a CNOT gate:'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将创建一个贝尔态电路（我们在*第4章*，*理解基本量子计算原理*中详细介绍了这些），它包含一个Hadamard门后跟一个CNOT门：
- en: 'First, we will add the measurement function, `measure_all(),` at the end of
    the circuit, which will automatically map the results of measuring the qubits
    to their respective classical bits. We will also add Hadamard and CNOT gates:'
  id: totrans-488
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将在电路的末尾添加测量函数`measure_all()`，它将自动将测量量子比特的结果映射到它们各自的经典比特。我们还将添加Hadamard门和CNOT门：
- en: '[PRE69]'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Let’s now view our results by entering the following in a new cell:'
  id: totrans-490
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们通过在新的单元格中输入以下内容来查看我们的结果：
- en: '[PRE70]'
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Our results are as follows:'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的结果如下：
- en: '[PRE71]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Our helper function also included the `histogram` plot, which helps visualize
    the preceding results. To view the histogram, enter the following into the next
    cell:'
  id: totrans-494
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的辅助函数还包括了`histogram`图，这有助于可视化前面的结果。要查看直方图，请在下一个单元格中输入以下内容：
- en: '[PRE72]'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The output is the following histogram plot:'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是以下直方图：
- en: '![Chart, bar chart  Description automatically generated](img/B18420_06_43.png)'
  id: totrans-497
  prefs: []
  type: TYPE_IMG
  zh: '![图表，条形图  描述自动生成](img/B18420_06_43.png)'
- en: 'Figure 6.43: Histogram chart of measured results'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.43：测量结果的直方图
- en: 'Now let’s see what the circuit looks like with the measurement operators added.
    Run the following in another cell:'
  id: totrans-499
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们看看添加了测量算子后的电路看起来是什么样子。在另一个单元格中运行以下内容：
- en: '[PRE73]'
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'At the end of the circuit illustrated in the following diagram, you will see
    that the measurement operators were added to all qubits. You’ll see that the labels
    for the classical bits are titled **measure**, and the qubits are mapped to their
    respective bits labeled by the index numbers where the measurement terminates
    onto the classical bit:'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下图中所示电路的末尾，你会看到测量算符被添加到了所有量子比特上。你会看到经典比特的标签被命名为**measure**，量子比特被映射到它们各自的比特上，这些比特由索引数字标识，测量终止于经典比特：
- en: '![Figure 6.36 – Measurement operators added to a quantum circuit ](img/B18420_06_44.png)'
  id: totrans-502
  prefs: []
  type: TYPE_IMG
  zh: '![图6.36 – 添加到量子电路中的测量算符](img/B18420_06_44.png)'
- en: 'Figure 6.44: Measurement operators added to a quantum circuit'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.44：添加到量子电路中的测量算符
- en: The barrier is added there just for convenience to visualize where the circuit
    operations end and where the measurement will commence.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 障碍只是为了方便而添加的，以可视化电路操作结束和测量开始的位置。
- en: 'The `measure_all()` function is a nice and convenient way to apply measurement
    operators to your quantum circuit. You can also apply a `measurement` operator
    to each qubit separately and at separate times, or you can arrange the mapping
    using a list if you wish to change the assignment of a qubit to a classical bit.
    Let’s rewrite our function again, only this time we’ll add the measurement operators
    individually for the first circuit (`qc1`) and then do the same with the second
    circuit (`qc2`) using a list. This way you can see the various ways in which you
    can apply measurement operators, either to all at once, or just to measure certain
    qubits:'
  id: totrans-505
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`measure_all()` 函数是一种方便的方法，可以将测量算符应用于你的量子电路。你也可以分别和不同时间对每个量子比特应用一个`measurement`算符，或者如果你希望改变量子比特到经典比特的分配，可以使用列表来安排映射。让我们再次重写我们的函数，但这次我们将为第一个电路（`qc1`）单独添加测量算符，然后使用列表以相同的方式对第二个电路（`qc2`）进行操作。这样你可以看到应用测量算符的各种方式，要么一次性应用，要么只测量某些量子比特：'
- en: '[PRE74]'
  id: totrans-506
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: After executing the code, display the two images (`img` and `img2`) in separate
    cells and notice that both circuits appear the same with respect to the measurement
    operators.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 执行代码后，在单独的单元格中显示两个图像（`img` 和 `img2`），并注意从测量算符的角度来看，两个电路看起来是相同的。
- en: In this section, you learned about non-reversible operators. We also created
    a simple two-qubit circuit using a measurement operator.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学习了非可逆算符。我们还使用测量算符创建了一个简单的双量子比特电路。
- en: Summary
  id: totrans-509
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned all the various ways you can operate on both single
    and multiple qubits. The operations provide various vector states that each qubit
    can rotate into. You also learned how to visualize the gates on a circuit and
    learned to decompose them down to universal gates so you can realize the information
    that is passed onto the quantum system.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了所有可以操作单量子比特和多量子比特的各种方法。这些操作提供了各种向量状态，每个量子比特都可以旋转到这些状态。你还学习了如何在电路中可视化门，并学习了如何将它们分解为通用门，以便你可以实现传递给量子系统的信息。
- en: You have now understood how these gates operate on qubits. You now have skills
    that will greatly help you understand how gates are used in many quantum algorithms
    to position the vectors in the Hilbert space of each qubit to help resolve various
    problems.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经理解了这些门如何在量子比特上操作。你现在拥有的技能将极大地帮助你理解如何在许多量子算法中使用门，以帮助解决各种问题。
- en: In the next chapter, we will learn about the **Quantum Information Science Kit**
    (**Qiskit**), pronounced *kiss-kit* (depending on who you ask, it may also be
    pronounced *kwis-kit*). Qiskit provides, besides many of the objects and functions
    we have been using so far to manipulate qubits, other functionality that helps
    to create quantum algorithms, mitigate against noise found in near-term devices,
    and produce quantum algorithms for users to leverage without having to learn about
    them at the gate level.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习关于**量子信息科学套件**（**Qiskit**），发音为*kiss-kit*（根据你问的人不同，它也可能被发音为*kwis-kit*）。Qiskit提供了我们迄今为止用来操作量子比特的许多对象和函数，以及其他有助于创建量子算法、减轻近期设备中发现的噪声，并产生用户可以利用的量子算法的功能。
- en: Questions
  id: totrans-513
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: For the multi-qubit gates, try flipping the Source and Target. Do you see a
    difference when you decompose the circuit?
  id: totrans-514
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于多量子比特门，尝试翻转源和目标。你在分解电路时看到有区别吗？
- en: Decompose all the gates for both single and multi-qubit circuits. What do you
    notice about how the universal gates are constructed?
  id: totrans-515
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将单量子比特和多量子比特电路的所有门都分解开。你注意到通用门是如何构建的？
- en: Implement the Toffoli gate where the target is the center qubit of a three-qubit
    circuit.
  id: totrans-516
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个三量子比特电路的中心量子比特上实现 Toffoli 门。
- en: Decompose the Toffoli gate. How many gates in total are used to construct it?
  id: totrans-517
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Toffoli 门分解。总共需要使用多少个门来构建它？
- en: Apply the Toffoli gate along with a Hadamard gate to a state vector simulator
    and compare the results to that from the Sampler primitive. What differences do
    you see and why?
  id: totrans-518
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Toffoli 门和 Hadamard 门应用于状态向量模拟器，并将结果与 Sampler 原语的结果进行比较。你看到了哪些差异，为什么？
- en: If you wanted to sort three qubits in the opposite direction, which gates would
    you use and in which order?
  id: totrans-519
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想以相反的方向对三个量子比特进行排序，你会使用哪些门，以及它们的顺序是什么？
- en: Join us on Discord
  id: totrans-520
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们社区的 Discord 空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/3FyN1](Chapter_6.xhtml)'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/3FyN1](Chapter_6.xhtml)'
- en: '![](img/QR_Code261762599683826593.png)'
  id: totrans-523
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code261762599683826593.png)'
