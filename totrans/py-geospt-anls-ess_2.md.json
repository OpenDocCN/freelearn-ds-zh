["```py\nPOINT(-73.967344 40.782148)\n```", "```py\nPOLYGON((-73.973057 40.764356, -73.981898 40.768094, -73.958209 40.800621, -73.949282 40.796853, -73.973057 40.764356))\n```", "```py\np = shapely.wkt.loads(\"POLYGON((23.4 38.9, 23.5 38.9, 23.5 38.8, 23.4 38.9))\")\n```", "```py\n{\"type\": \"Point\", \"coordinates\": [-73.967344, 40.782148]}\n```", "```py\n<gml:Point>\n    <gml:pos>40.782148 -73.967344</gml:pos>\n</gml:Point>\n```", "```py\n2874  2871  2874  2933  2995  3022  3028  3031  3035  3031\n2874  2871  2874  2933  2992  3012  3025  3028  3031  3028\n2871  2871  2877  2932  2989  3007  3018  3025  3023  3020\n2872  2871  2886  2935  2975  2997  3010  3020  3022  3023\n2871  2879  2903  2942  2965  2991  3005  3015  3022  3026\n2871  2887  2930  2972  2992  2998  3013  3023  3029  3031\n2880  2899  2941  2992  3005  3005  3021  3028  3033  3039\n2896  2920  2956  3000  3013  3019  3019  3028  3037  3042\n2915  2939  2981  3008  3017  3026  3028  3028  3036  3044\n2928  2952  2986  3024  3029  3034  3038  3034  3031  3044\n2936  2960  3009  3040  3044  3046  3049  3044  3037  3044\n2943  2977  3041  3051  3051  3051  3051  3051  3037  3046\n2960  3029  3051  3051  3051  3051  3051  3050  3044  3049\n```", "```py\nimport osgeo.ogr\nshapefile = osgeo.ogr.Open(\"TM_WORLD_BORDERS-0.3.shp\")\nlayer = shapefile.GetLayer(0)\nfor i in range(layer.GetFeatureCount()):\n    feature = layer.GetFeature(i)\n    feature_name = feature.GetField(\"NAME\")\n    geometry = feature.GetGeometryRef()\n    geometry_type = geometry.GetGeometryName()\n    print i, feature_name, geometry_type\n```", "```py\n    from osgeo import ogr\n    driver = ogr.GetDriverByName(\"ESRI Shapefile\")\n    dstFile = driver.CreateDataSource(\"test-shapefile\")\n    ```", "```py\n    from osgeo import osr\n    spatialReference = osr.SpatialReference()\n    spatialReference.SetWellKnownGeogCS(\"WGS84\")\n    ```", "```py\n    layer = dstFile.CreateLayer(\"layer\", spatialReference)\n    ```", "```py\n    field = ogr.FieldDefn(\"NAME\", ogr.OFTString)\n    field.setWidth(100)\n    layer.CreateField(field)\n    ```", "```py\n    wkt = \"POLYGON((23.4 38.9, 23.5 38.9, 23.5 38.8, 23.4 38.9))\"\n    polygon = ogr.CreateGeometryFromWkt(wkt)\n    ```", "```py\n    feature = ogr.Feature(layer.GetLayerDefn())\n    feature.SetGeometry(polygon)\n    feature.SetField(\"NAME\", \"My Polygon\")\n    ```", "```py\n    layer.CreateFeature(feature)\n    feature.Destroy()\n    ```", "```py\n    dstFile.Destroy()\n    ```", "```py\nfrom osgeo import gdal\ndem_file = gdal.Open(\"e10g\")\n```", "```py\nnum_bands = dem_file.RasterCount\n```", "```py\nband = dem_file.GetRasterBand(1)\n```", "```py\ndata = band.ReadAsArray()\n```", "```py\nnum_rows,num_cols = data.shape\n\nhistogram = {} # Maps elevation to number of occurrences of that elevation.\n\nfor row in range(num_rows):\n    for col in range(num_cols):\n        elevation = int(data[row, col])\n        try:\n            histogram[elevation] += 1\n        except KeyError:\n            histogram[elevation] = 1\n\nfor elevation in sorted(histogram.keys()):\n    print elevation, histogram[elevation]\n```", "```py\nelevation = int(data[row, col])\n```", "```py\n% python readRaster.py\n-500 53081919\n-84 1\n-83 8\n-82 9\n-81 17\n...\n5241 1\n5295 1\n5300 1\n5443 1\n\n```", "```py\n...\nhistogram = {} # maps elevation to number of occurrences of that elevation.\nno_data = int(band.GetNoDataValue())\n\nfor row in range(num_rows):\n    for col in range(num_cols):\n        elevation = int(data[row, col])\n        if elevation == no_data: continue\n        try:\n            ...\n```", "```py\n    from osgeo import gdal\n    driver = gdal.GetDriverByName(\"EHdr\")\n    dstFile = driver.Create(\"Example Raster\", 180, 360, 1, gdal.GDT_Int16)\n    ```", "```py\n    from osgeo import osr\n\n    spatialReference = osr.SpatialReference()\n    spatialReference.SetWellKnownGeogCS(\"WGS84\")\n\n    dstFile.SetProjection(spatialReference.ExportToWkt())\n    ```", "```py\n    originX    = -180\n    originY    = 90\n    cellWidth  = 0.25\n    cellHeight = 0.25\n\n    geoTransform = [originX, cellWidth, 0, originY, 0, -cellHeight]\n    dstFile.SetGeoTransform(geoTransform)\n    ```", "```py\n    import random\n\n    data = []\n    for row in range(360):\n        row_data = []\n        for col in range(180):\n            row_data.append(random.randint(1, 100))\n        data.append(row_data)\n    ```", "```py\n    import numpy\n    array = numpy.array(data, dtype=numpy.int16)\n    ```", "```py\n    band.WriteArray(array)\n    ```", "```py\n    band.SetNoDataValue(-500)\n    del dstFile\n    ```", "```py\n(-114.93, 12.478)\n```", "```py\nspatialReference = osr.SpatialReference()\nspatialReference.SetWellKnownGeogCS(\"WGS84\")\n```", "```py\nspatialReference = osr.SpatialReference()\nspatialReference.ImportFromEPSG(4326)\n```", "```py\n>>> spatialReference = osr.SpatialReference()\n>>> spatialReference.ImportFromEPSG(4326)\n>>> print spatialReference.ExportToWkt()\nGEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]\n\n```", "```py\nsrc_spatialReference = osr.SpatialReference()\nsrc_spatialReference.SetWellKnownGeogCS(\"WGS84\")\n\ndst_spatialReference = osr.SpatialReference()\ndst_spatialReference.SetUTM(10)\n\ntransform = osr.CoordinateTransformation(src_spatialReference, dst_spatialReference)\n\ngeometry.Transform(transform)\n```", "```py\nimport shapely.wkt\nwkt = \"POLYGON((-73.973057 40.764356, -73.981898 40.768094, -73.958209 40.800621, -73.949282 40.796853, -73.973057 40.764356))\"\noutline = shapely.wkt.loads(wkt)\n```", "```py\n>>> print outline.area\n0.000377902804\n\n```", "```py\n    from osgeo import ogr\n    polygon = ogr.CreateGeometryFromWkt(wkt)\n    ```", "```py\n    from osgeo import osr\n\n    src_spatialReference = osr.SpatialReference()\n    src_spatialReference.ImportFromEPSG(4326)\n\n    dst_spatialReference = osr.SpatialReference()\n    dst_spatialReference.ImportFromEPSG(54009)\n\n    transform = osr.CoordinateTransformation(src_spatialReference, dst_spatialReference)\n    ```", "```py\n    polygon.Transform(transform)\n\n    outline = shapely.wkt.loads(polygon.ExportToWkt())\n    print outline.area\n    ```", "```py\nPOINT(-0.076 51.506)\nPOINT(2.295 48.858)\nPOINT(37.784 -122.402)\n```", "```py\nif not geometry.is_valid:\n    ....\n```", "```py\nif not geometry.IsValid():\n    ...\n```", "```py\ndef fix_geometry(geometry):\n    buffer_worked = True\n    try:\n        geometry = geometry.buffer(0)\n    except:\n        buffer_worked = False\n\n    if buffer_worked:\n        return geometry\n\n    polygons = []\n    if geometry.geom_type == \"Polygon\":\n        polygons.append(geometry)\n    elif geometry.geom_type == \"MultiPolygon\":\n        polygons.extend(geometry.geoms)\n\n    fixed_polygons = []\n    for n,polygon in enumerate(polygons):\n        if not linear_ring_is_valid(polygon.exterior):\n            continue # Unable to fix.\n\n        interiors = []\n        for ring in polygon.interiors:\n            if linear_ring_is_valid(ring):\n                interiors.append(ring)\n\n        fixed_polygon = shapely.geometry.Polygon(polygon.exterior,\n                                                 interiors)\n\n        try:\n            fixed_polygon = fixed_polygon.buffer(0)\n        except:\n            continue\n\n        if fixed_polygon.geom_type == \"Polygon\":\n            fixed_polygons.append(fixed_polygon)\n        elif fixed_polygon.geom_type == \"MultiPolygon\":\n            fixed_polygons.extend(fixed_polygon.geoms)\n\n    if len(fixed_polygons) > 0:\n        return shapely.geometry.MultiPolygon(fixed_polygons)\n    else:\n        return None # Unable to fix.\n\ndef linear_ring_is_valid(ring):\n    points = set() # Set of (x,y) tuples.\n\n    for x,y in ring.coords:\n        points.add((x,y))\n\n    if len(points) < 3:\n        return False\n    else:\n        return True\n```"]