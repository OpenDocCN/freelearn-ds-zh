["```py\nobject.size(logical(1e6))\n## 4000040 bytes\nobject.size(integer(1e6))\n## 4000040 bytes\nobject.size(numeric(1e6))\n## 8000040 bytes\nobject.size(complex(1e6))\n## 16000040 bytes\nobject.size(rep.int(NA_character_, 1e6))\n## 8000040 bytes\nobject.size(raw(1e6))\n## 1000040 bytes\nobject.size(vector(\"list\", 1e6))\n## 8000040 bytes\n```", "```py\nobject.size(rep.int(\"0123456789\", 1e6))\n## 8000096 bytes\nobject.size(rep.int(formatC(seq_len(1e3), width = 10), 1e3))\n## 8056040 bytes\nobject.size(formatC(seq_len(1e6), width = 10))\n## 64000040 bytes\n```", "```py\nobject.size(as.numeric(seq_len(1e6)))\n## 8000040 bytes\nobject.size(as.integer(seq_len(1e6)))\n## 4000040 bytes\n```", "```py\nstrings <- rep.int(formatC(seq_len(1e4), width = 1000), 100)\nfactors <- factor(strings)\nobject.size(strings)\n## 18480040 bytes\nobject.size(factors)\n## 14560400 bytes\n```", "```py\nlibrary(Matrix)\nn <- rnorm(1e6)\nn[sample.int(1e6, 7e5)] <- 0\nm.dense <- Matrix(n, 1e3, 1e3, sparse = FALSE)\nm.sparse <- Matrix(n, 1e3, 1e3, sparse = TRUE)\nobject.size(n)\n## 8000040 bytes\nobject.size(m.dense)\n## 8001112 bytes\nobject.size(m.sparse)\n## 3605424 bytes\n```", "```py\nl <- sample(c(FALSE, TRUE), 1e6, TRUE, c(0.7, 0.3))\nm2.dense <- Matrix(l, 1e3, 1e3, sparse = FALSE)\nm2.sparse <- Matrix(l, 1e3, 1e3, sparse = TRUE)\nobject.size(l)\n## 4000040 bytes\nobject.size(m2.dense)\n## 4001112 bytes\nobject.size(m2.sparse)\n## 2404384 bytes\n```", "```py\nlibrary(Matrix)\ndata <- matrix(rnorm(1E5), 1E2, 1E3) \nA <- cor(data)\nisSymmetric(A)\n## [1] TRUE\nB <- as(A, \"dspMatrix\")\nobject.size(A)\n## 8000200 bytes\nobject.size(B)\n## 4005320 bytes\n```", "```py\nlibrary(bit)\nl <- sample(c(TRUE, FALSE), 1e6, TRUE)\nb <- as.bit(l)\nobject.size(l)\n## 4000040 bytes\nobject.size(b)\n## 126344 bytes\n```", "```py\nlibrary(microbenchmark)\nl2 <- sample(c(TRUE, FALSE), 1e6, TRUE)\nb2 <- as.bit(l2)\nmicrobenchmark(!l, !b)\n## Unit: microseconds\n##  expr      min        lq   median        uq       max neval\n##    !l 1201.993 1452.2925 1566.966 2951.0405 23045.003   100\n##    !b   51.145   64.7185  107.065  113.2045   461.624   100\nmicrobenchmark(l & l2, b & b2)\n## Unit: microseconds\n##    expr       min        lq     median        uq      max neval\n##  l & l2 22808.696 23104.647 23309.7475 24473.137 38334.65   100\n##  b & b2    60.948    64.615    78.5025   135.126 13732.20   100\nmicrobenchmark(l == l2, b == b2)\n## Unit: microseconds\n##     expr      min        lq    median       uq      max neval\n##  l == l2 1954.402 2208.3235 2227.8980 2320.104 16825.13   100\n##  b == b2   60.263   63.2235   87.7245  121.448 14184.91   100\n```", "```py\nlibrary(bigmemory)\nbm <- big.matrix(1e9, 3, backingfile = \"bm\",\n                  backingpath = tempdir())\nbm\n## An object of class \"big.matrix\"\n## Slot \"address\":\n## <pointer: 0x7fac1950a4a0>\n```", "```py\naloysius@localhost RtmpG0CQdS $ ls -lh\ntotal 46875024\n-rw-r--r--  1 aloysius  staff    22G Sep 18 08:02 bm\n-rw-r--r--  1 aloysius  staff   452B Sep 18 08:02 bm.desc\n```", "```py\ntypeof(bm)\n## [1] \"double\"\ndim(bm)\n## [1] 1e+09 3e+00\nnrow(bm)\n## [1] 1e+09\nncol(bm)\n## [1] 3\nlength(bm)\n## [1] 3e+09\nbm[1:5, ]\n##      [,1] [,2] [,3]\n## [1,]    1    0    0\n## [2,]    0    1    0\n## [3,]    0    0    1\n## [4,]    0    0    0\n## [5,]    0    0    0\nbm[1:3, ] <- diag(3)\nbm[1:5, ]\n##      [,1] [,2] [,3]\n## [1,]    1    0    0\n## [2,]    0    1    0\n## [3,]    0    0    1\n## [4,]    0    0    0\n## [5,]    0    0    0\n```", "```py\nchunksize <- 1e7\nstart <- 1\nwhile (start <= nrow(bm)) {\n    end <- min(start + chunksize - 1, nrow(bm))\n    chunksize <- end - start + 1\n    bm[start:end, 1] <- rpois(chunksize, 1e3)\n    bm[start:end, 2] <- sample(0:1, chunksize, TRUE,\n                               c(0.7, 0.3))\n    bm[start:end, 3] <- runif(chunksize, 0, 1e5)    \n    start <- start + chunksize\n}\n```", "```py\ncol.sums <- numeric(3)\nchunksize <- 1e7\nstart <- 1\nwhile (start <= nrow(bm)) {\n    end <- min(start + chunksize - 1, nrow(bm))\n    col.sums <- col.sums + colSums(bm[start:end, ])\n    start <- start + chunksize\n}\ncol.means <- col.sums / nrow(bm)\n```", "```py\ncol.sq.dev <- numeric(3)\nstart <- 1\nwhile (start <= nrow(bm)) {\n    end <- min(start + chunksize - 1, nrow(bm))\n    col.sq.dev <- col.sq.dev +\n        rowSums((t(bm[start:end, ]) - col.means) ^ 2)\n    start <- start + chunksize\n}\ncol.var <- col.sq.dev / (nrow(bm) - 1)\ncol.sd <- sqrt(col.var)\n```", "```py\nlibrary(biganalytics)\ncol.sd\n## [1] 3.162261e+01 4.582687e-01 2.886805e+04\nbig.col.sd <- colsd(bm)\nall.equal(col.sd, big.col.sd)\n## [1] TRUE\n```", "```py\ni <- ff(1:1e6)\ni\n## ff (open) integer length=1000000 (1000000)\n##       [1]       [2]       [3]       [4]       [5]       [6] \n##         1         2         3         4         5         6 \n##       [7]       [8]            [999993]  [999994]  [999995] \n##         7         8         :    999993    999994    999995 \n##  [999996]  [999997]  [999998]  [999999] [1000000] \n##   999996    999997    999998    999999   1000000 \nfilename(i)\n## [1] \"/private/var/folders/xw/xp2p4mjd3nb6n6h30w67jkdc0000gn/T/## RtmptxP4qw/ff449847497df9.ff\"\n```", "```py\nj <- ff(FALSE, dim = c(50, 100),\n        filename = file.path(tempdir(), \"j.ff\"))\nj\n## ff (open) logical length=5000 (5000) dim=c(50,100)\n## dimorder=c(1,2)\n##        [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,100]\n## [1,]  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [2,]  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [3,]  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [4,]  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [5,]  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## :         :     :     :     :     :     :     :     : :     :\n## [46,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [47,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [48,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [49,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n## [50,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE : FALSE\n```", "```py\nq <- ff(sample(0:3, 1e6, TRUE), vmode = \"quad\")\nq\n## ff (open) quad length=1000000 (1000000)\n##       [1]       [2]       [3]       [4]       [5]       [6] \n##         2         2         2         2         0         1 \n##       [7]       [8]            [999993]  [999994]  [999995] \n##         1         0         :         1         0         1 \n##  [999996]  [999997]  [999998]  [999999] [1000000] \n##         0         1         0         0         0\n```", "```py\nd <- ffdf(i, q)\nd[1:5, ]\n##   i q\n## 1 1 2\n## 2 2 2\n## 3 3 2\n## 4 4 2\n## 5 5 0\nvmode(d)\n##         i         q \n## \"integer\"    \"quad\"\n```", "```py\nchunk(d)\n## [[1]]\n## range index (ri) from 1 to 1000000 maxindex 1000000\n```", "```py\nch <- chunk(d, BATCHBYTES = 2e6)\nch\n## [[1]]\n## range index (ri) from 1 to 250000 maxindex 1000000 \n##\n## [[2]]\n## range index (ri) from 250001 to 500000 maxindex 1000000 \n##\n## [[3]]\n## range index (ri) from 500001 to 750000 maxindex 1000000 \n##\n## [[4]]\n## range index (ri) from 750001 to 1000000 maxindex 1000000\n```", "```py\ntotal <- numeric(2)\nquad.table <- integer(4)\nnames(quad.table) <- 0:3\nfor (idx in ch) {\n    total <- total + colSums(d[idx, ])\n    quad.table <- quad.table + table(q[idx])\n}\ntotal\n##            i            q \n## 500000500000      1500191 \nquad.table\n##      0      1      2      3 \n## 249939 249964 250064 250033\n```", "```py\ndelete(d)\n## [1] TRUE\ndelete(lm)\n## [1] TRUE\nrm(d)\nrm(lm)\n```", "```py\ndelete(i)\n## [1] FALSE\n## Warning message:\n## In file.remove(attr(physical, \"filename\")) :\n##   cannot remove file '/private/var/folders/xw/## xp2p4mjd3nb6n6h30w67jkdc0000gn/T/RtmptxP4qw/ff449847497df9.ff', ## reason 'No such file or directory'\nrm(i)\nrm(q)\n```"]