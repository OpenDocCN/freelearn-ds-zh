["```py\nvar data = [10, 15, 30, 50, 80, 65, 55, 30, 20, 10, 8]; // <- A\n\nfunction render(data) { // <- B\n        // Enter\n d3.select(\"body\").selectAll(\"div.h-bar\") // <- C\n .data(data) // <- D\n .enter() // <- E\n .append(\"div\") // <- F\n .attr(\"class\", \"h-bar\")\n .append(\"span\"); // <- G\n\n        // Update\n d3.select(\"body\").selectAll(\"div.h-bar\")\n .data(data) \n .style(\"width\", function (d) { // <- H\n return (d * 3) + \"px\";\n })\n .select(\"span\") // <- I\n .text(function (d) {\n return d;\n });\n\n        // Exit\n d3.select(\"body\").selectAll(\"div.h-bar\")\n .data(data)\n .exit() // <- J\n               .remove();        \n }\n\n setInterval(function () { // <- K\n        data.shift();\n        data.push(Math.round(Math.random() * 100));\n\n        render(data);\n }, 1500);\n\n render(data);\n```", "```py\n        d3.select(\"body\").selectAll(\"div.h-bar\") // <- C\n             .data(data) // <- D\n            .enter() // <- E\n             .append(\"div\") // <- F\n               .attr(\"class\", \"h-bar\")\n              .append(\"span\"); // <- G\n```", "```py\n        d3.select(\"body\").selectAll(\"div.h-bar\")\n            .data(data) \n                .style(\"width\", function (d) { // <- H\n                    return (d * 3) + \"px\";\n                })\n                .select(\"span\") // <- I\n                    .text(function (d) {\n                        return d;\n                    });\n```", "```py\n<div class=\"h-bar\" style=\"width: 30px;\">\n<span>10</span>\n</div>\n<div class=\"h-bar\" style=\"width: 45px;\">\n<span>15</span>\n</div>\n....\n<div class=\"h-bar\" style=\"width: 24px;\">\n<span>8</span>\n   </div>\n```", "```py\n        d3.select(\"body\").selectAll(\"div.h-bar\")\n            .data(data)\n            .exit() // <- J\n            .remove();\n```", "```py\nsetInterval(function () { // <- K\n        data.shift();\n        data.push(Math.round(Math.random() * 100));\n        render(data);\n }, 1500);\n```", "```py\nvar data = [ // <- A\n {width: 10, color: 23},{width: 15, color: 33},\n {width: 30, color: 40},{width: 50, color: 60},\n {width: 80, color: 22},{width: 65, color: 10},\n {width: 55, color: 5},{width: 30, color: 30},\n {width: 20, color: 60},{width: 10, color: 90},\n {width: 8, color: 10}\n ];\n\nvar colorScale = d3.scale.linear()\n.domain([0, 100]).range([\"#add8e6\", \"blue\"]); // <- B\n\n    function render(data) {\n        d3.select(\"body\").selectAll(\"div.h-bar\")\n            .data(data)\n            .enter().append(\"div\")\n                .attr(\"class\", \"h-bar\") \n            .append(\"span\");\n\n        d3.select(\"body\").selectAll(\"div.h-bar\")\n            .data(data)\n            .exit().remove();\n\n        d3.select(\"body\").selectAll(\"div.h-bar\")\n            .data(data)\n                .attr(\"class\", \"h-bar\")\n .style(\"width\", function (d) { // <- C\n return (d.width * 5) + \"px\"; // <- D\n })\n .style(\"background-color\", function(d){\n return colorScale(d.color); // <- E\n })\n            .select(\"span\")\n .text(function (d) {\n return d.width; // <- F\n });\n    }\n\n    function randomValue() {\n        return Math.round(Math.random() * 100);\n    }\n\n    setInterval(function () {\n        data.shift();\n        data.push({width: randomValue(), color: randomValue()});\n        render(data);\n    }, 1500);\n\n    render(data);\n```", "```py\n        {width: 10, color: 23},{width: 15, color: 33},\n...\n        {width: 8, color: 10}\n    ];\n```", "```py\nfunction (d) { // <- C\nreturn (d.width * 5) + \"px\"; // <- D\n}\n```", "```py\n.style(\"background-color\", function(d){\n  return colorScale(d.color); // <- E\n})\n.select(\"span\")\n  .text(function (d) {\n    return d.width; // <- F\n  });\n```", "```py\n<div id=\"container\"></div>\n\n<script type=\"text/javascript\">\n    var data = []; // <- A\n\n var next = function (x) { // <- B\n return 15 + x * x;\n };\n\n var newData = function () { // <- C \n data.push(next);\n return data;\n };\n\n   function render(){\n        var selection = d3.select(\"#container\")\n                  .selectAll(\"div\")\n .data(newData); // <- D\n\n        selection.enter().append(\"div\").append(\"span\");\n\n        selection.exit().remove();\n\n        selection.attr(\"class\", \"v-bar\")\n .style(\"height\", function (d, i) {\n return d(i)+\"px\"; // <- E\n })\n        .select(\"span\")\n .text(function(d, i){ \n return d(i); } // <- F\n ); \n   }\n\n   setInterval(function () {\n       render();\n   }, 1500);\n\n   render();\n</script>\n```", "```py\n    var data = []; // <- A\n\n    var next = function (x) { // <- B\n        return 15 + x * x;\n    };\n\n   var newData = function () { // <- C        \n        data.push(next);\n        return data;\n    };\n```", "```py\n        var selection = d3.select(\"#container\")\n                   .selectAll(\"div\")\n                   .data(newData); // <- D\n```", "```py\n        selection.attr(\"class\", \"v-bar\")\n            .style(\"height\", function (d, i) {\n                return d(i)+\"px\"; // <- E\n            })\n            .select(\"span\")\n                .text(function(d, i){ \n                    return d(i); } // <- F\n                ); \n```", "```py\n<script type=\"text/javascript\">\n // Static html code were omitted due to space constraint\n\n    var array = [3, 2, 11, 7, 6, 4, 10, 8, 15];\n\n    d3.select(\"#min\").text(d3.min(array));\n    d3.select(\"#max\").text(d3.max(array));\n    d3.select(\"#extent\").text(d3.extent(array));\n    d3.select(\"#sum\").text(d3.sum(array));\n    d3.select(\"#median\").text(d3.median(array));\n    d3.select(\"#mean\").text(d3.mean(array));\n    d3.select(\"#asc\").text(array.sort(d3.ascending));\nd3.select(\"#desc\").text(array.sort(d3.descending));      d3.select(\"#quantile\").text(\nd3.quantile(array.sort(d3.ascending), 0.25)\n);\nd3.select(\"#bisect\").text(\nd3.bisect(array.sort(d3.ascending), 6)\n    );\n\n    var records = [\n        {quantity: 2, total: 190, tip: 100, type: \"tab\"},\n        {quantity: 2, total: 190, tip: 100, type: \"tab\"},\n        {quantity: 1, total: 300, tip: 200, type: \"visa\"},\n        {quantity: 2, total: 90, tip: 0, type: \"tab\"},\n        {quantity: 2, total: 90, tip: 0, type: \"tab\"},\n        {quantity: 2, total: 90, tip: 0, type: \"tab\"},\n        {quantity: 1, total: 100, tip: 0, type: \"cash\"},\n        {quantity: 2, total: 90, tip: 0, type: \"tab\"},\n        {quantity: 2, total: 90, tip: 0, type: \"tab\"},\n        {quantity: 2, total: 90, tip: 0, type: \"tab\"},\n        {quantity: 2, total: 200, tip: 0, type: \"cash\"},\n        {quantity: 1, total: 200, tip: 100, type: \"visa\"}\n    ];\n\n    var nest = d3.nest()\n            .key(function (d) { // <- A\n                return d.type;\n            })\n            .key(function (d) { // <- B\n                return d.tip;\n            })\n            .entries(records); // <- C\n\n    d3.select(\"#nest\").html(printNest(nest, \"\"));\n\n    function printNest(nest, out, i) {\n        if(i === undefined) i = 0;\n\n        var tab = \"\"; \n        for(var j = 0; j < i; ++j) \n            tab += \" \";\n\n        nest.forEach(function (e) {\n            if (e.key)\n                out += tab + e.key + \"<br>\";\n            else\n                out += tab + printObject(e) + \"<br>\";\n\n            if (e.values)\n                out = printNest(e.values, out, ++i);\n            else\n                return out;\n        });\n\n        return out;\n    }\n\n    function printObject(obj) {\n        var s = \"{\";\n        for (var f in obj) {\n            s += f + \": \" + obj[f] + \", \";\n        }\n        s += \"}\";\n        return s;\n    }\n</script> \n```", "```py\nd3.min => 2\nd3.max => 15\nd3.extent => 2,15\nd3.sum => 66\nd3.median => 7\nd3.mean => 7.333333333333333\narray.sort(d3.ascending) => 2,3,4,6,7,8,10,11,15\narray.sort(d3.descending) => 15,11,10,8,7,6,4,3,2\nd3.quantile(array.sort(d3.ascending), 0.25) => 4\nd3.bisect(array.sort(d3.ascending), 6) => 4\n\ntab100{quantity: 2, total: 190, tip: 100, type: tab, }{quantity: 2, total: 190, tip: 100, type: tab, }0{quantity: 2, total: 90, tip: 0, type: tab, }{quantity: 2, total: 90, tip: 0, type: tab, }{quantity: 2, total: 90, tip: 0, type: tab, }{quantity: 2, total: 90, tip: 0, type: tab, }{quantity: 2, total: 90, tip: 0, type: tab, }{quantity: 2, total: 90, tip: 0, type: tab, }visa200{quantity: 1, total: 300, tip: 200, type: visa, }100{quantity: 1, total: 200, tip: 100, type: visa, }cash, }0{quantity: 1, total: 100, tip: 0, type: cash, }{quantity: 2, total: 200, tip: 0, type: cash, }\n```", "```py\n    d3.ascending = function(a, b) {  return a < b ? -1 : a > b ? 1 : 0; }\n    d3.descending = function(a, b) {  return b < a ? -1 : b > a ? 1 : 0; }\n    ```", "```py\n        var nest = d3.nest()\n                .key(function (d) { // <- A\n                    return d.type;\n                })\n                .key(function (d) { // <- B\n                    return d.tip;\n                })\n                .entries(records); // <- C\n    ```", "```py\n    tab\n     100\n      {quantity: 2, total: 190, tip: 100, type: tab, }\n      {quantity: 2, total: 190, tip: 100, type: tab, }\n    ```", "```py\n<script type=\"text/javascript\">\n    var data = [ // <-A\n        {expense: 10, category: \"Retail\"},\n        {expense: 15, category: \"Gas\"},\n        {expense: 30, category: \"Retail\"},\n        {expense: 50, category: \"Dining\"},\n        {expense: 80, category: \"Gas\"},\n        {expense: 65, category: \"Retail\"},\n        {expense: 55, category: \"Gas\"},\n        {expense: 30, category: \"Dining\"},\n        {expense: 20, category: \"Retail\"},\n        {expense: 10, category: \"Dining\"},\n        {expense: 8, category: \"Gas\"}\n    ];\n    function render(data, category) {\n        d3.select(\"body\").selectAll(\"div.h-bar\") // <-B\n                .data(data)\n            .enter()\n            .append(\"div\")\n                .attr(\"class\", \"h-bar\")\n            .append(\"span\");\n\n        d3.select(\"body\").selectAll(\"div.h-bar\") // <-C\n                .data(data)\n            .exit().remove();\n\n        d3.select(\"body\").selectAll(\"div.h-bar\") // <-D\n                .data(data)\n            .attr(\"class\", \"h-bar\")\n            .style(\"width\", function (d) {\n                return (d.expense * 5) + \"px\";}\n            )\n            .select(\"span\")\n                .text(function (d) {\n                    return d.category;\n                });\n\n        d3.select(\"body\").selectAll(\"div.h-bar\")\n .filter(function (d, i) { // <-E\n return d.category == category;\n })\n                .classed(\"selected\", true);\n    }\n\n    render(data);\n\n    function select(category) {\n        render(data, category);\n    }\n</script>\n\n<div class=\"control-group\">\n    <button onclick=\"select('Retail')\">\n      Retail\n    </button>\n    <button onclick=\"select('Gas')\">\n      Gas\n    </button>\n    <button onclick=\"select('Dining')\">\n      Dining\n    </button>\n    <button onclick=\"select()\">\n      Clear\n    </button>\n</div>\n```", "```py\nfilter(function (d, i) { // <-E\n    return d.category == category;\n})\n```", "```py\n<script type=\"text/javascript\">\n    var data = [ // <-A\n        {expense: 10, category: \"Retail\"},\n        {expense: 15, category: \"Gas\"},\n        {expense: 30, category: \"Retail\"},\n        {expense: 50, category: \"Dining\"},\n        {expense: 80, category: \"Gas\"},\n        {expense: 65, category: \"Retail\"},\n        {expense: 55, category: \"Gas\"},\n        {expense: 30, category: \"Dining\"},\n        {expense: 20, category: \"Retail\"},\n        {expense: 10, category: \"Dining\"},\n        {expense: 8, category: \"Gas\"}\n    ];\n\n    function render(data, comparator) {\n        d3.select(\"body\").selectAll(\"div.h-bar\") // <-B\n                .data(data)\n            .enter().append(\"div\")\n                .attr(\"class\", \"h-bar\")\n                .append(\"span\");\n\n        d3.select(\"body\").selectAll(\"div.h-bar\") // <-C\n                .data(data)\n            .exit().remove();\n\n        d3.select(\"body\").selectAll(\"div.h-bar\") // <-D\n                .data(data)\n            .attr(\"class\", \"h-bar\")\n            .style(\"width\", function (d) {\n                return (d.expense * 5) + \"px\";\n            })\n            .select(\"span\")\n                .text(function (d) {\n                    return d.category;\n                });\n\n if(comparator)\n d3.select(\"body\")\n .selectAll(\"div.h-bar\") \n .sort(comparator); // <-E\n    }\n\n var compareByExpense = function (a, b) {  // <-F\n return a.expense < b.expense?-1:1;\n };\n var compareByCategory = function (a, b) {  // <-G\n return a.category < b.category?-1:1;\n };\n\n    render(data);\n\n    function sort(comparator) {\n        render(data, comparator);\n    }\n</script>\n\n<div class=\"control-group\">\n    <button onclick=\"sort(compareByExpense)\">\n        Sort by Width\n    </button>\n    <button onclick=\"sort(compareByCategory)\">\n        Sort by Category\n    </button>\n    <button onclick=\"sort()\">\n        Clear\n    </button>\n</div>\n```", "```py\nd3.select(\"body\")\n    .selectAll(\"div.h-bar\") \n .sort(comparator); // <-E\n\n```", "```py\nvar compareByExpense = function (a, b) {  // <-F\n    return a.expense < b.expense?-1:1;\n};\nvar compareByCategory = function (a, b) {  // <-G\n    return a.category < b.category?-1:1;\n};\n```", "```py\n<script type=\"text/javascript\">\n    var data = [ // <-A\n        {expense: 10, category: \"Retail\"},\n        {expense: 15, category: \"Gas\"},\n        {expense: 30, category: \"Retail\"},\n        {expense: 50, category: \"Dining\"},\n        {expense: 80, category: \"Gas\"},\n        {expense: 65, category: \"Retail\"},\n        {expense: 55, category: \"Gas\"},\n        {expense: 30, category: \"Dining\"},\n        {expense: 20, category: \"Retail\"},\n        {expense: 10, category: \"Dining\"},\n        {expense: 8, category: \"Gas\"}\n    ];\n\n    function render(data) {\n        d3.select(\"#chart\").selectAll(\"div.h-bar\") // <-B\n                .data(data)\n            .enter().append(\"div\")\n            .attr(\"class\", \"h-bar\")\n            .append(\"span\");\n\n        d3.select(\"#chart\").selectAll(\"div.h-bar\") // <-C\n                .data(data)\n            .exit().remove();\n\n        d3.select(\"#chart\").selectAll(\"div.h-bar\") // <-D\n                .data(data)\n            .attr(\"class\", \"h-bar\")\n            .style(\"width\", function (d) {\n                return (d.expense * 5) + \"px\";\n            })\n            .select(\"span\")\n                .text(function (d) {\n                    return d.category;\n                });\n    }\n\n    render(data);\n\n function load(){ // <-E\n d3.json(\"data.json\", function(error, json){ // <-F\n data = data.concat(json); \n render(data);\n });\n }\n</script>\n\n<div class=\"control-group\">\n    <button onclick=\"load()\">Load Data from JSON feed</button>\n</div>\n```", "```py\n[\n    {\"expense\": 15,  \"category\": \"Retail\"},\n {\"expense\": 18,  \"category\": \"Gas\"},\n ...\n {\"expense\": 15, \"category\": \"Gas\"}\n]\n```", "```py\n    function load(){ // <-E\n        d3.json(\"data.json\", function(error, json){ // <-F\n            data = data.concat(json);  \n            render(data);\n        });\n }\n\n```"]