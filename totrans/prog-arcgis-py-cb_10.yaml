- en: Chapter 10. Customizing the ArcGIS Interface with Add-ins
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章：使用插件自定义 ArcGIS 界面
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下食谱：
- en: Downloading and installing the Python Add-in Wizard
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载和安装 Python 插件向导
- en: Creating a button add-in and using the Python add-ins module
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建按钮插件并使用 Python 插件模块
- en: Installing and testing an add-in
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和测试插件
- en: Creating a tool add-in
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建工具插件
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we're going to cover the creation, testing, editing, and sharing
    of add-ins created with Python. **Add-ins** provide a way of adding user interface
    items to ArcGIS for Desktop through a modular code base designed to perform specific
    actions. Interface components can include buttons, tools, toolbars, menus, combo
    boxes, tool palettes, and application extensions. The add-in concept was first
    introduced in ArcGIS for Desktop 10.0 and could be created with .NET or Java.
    However, starting with the release of ArcGIS 10.1, add-ins can now be created
    with Python. Add-ins are created using Python scripts and an XML file that defines
    how a user interface should appear.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍使用 Python 创建插件的创建、测试、编辑和共享。**插件**提供了一种通过模块化代码库将用户界面项添加到 ArcGIS for
    Desktop 的方法，该代码库旨在执行特定操作。界面组件可以包括按钮、工具、工具栏、菜单、组合框、工具调色板和应用扩展。插件概念首次在 ArcGIS for
    Desktop 10.0 中引入，可以使用 .NET 或 Java 创建。然而，从 ArcGIS 10.1 的发布开始，现在可以使用 Python 创建插件。插件使用
    Python 脚本和一个定义用户界面应如何显示的 XML 文件创建。
- en: Add-ins provide an easy way to distribute user interface customizations to end
    users. No installation programs are necessary. A single compressed file with a
    file extension of `.esriaddin` is copied to a well-known folder, and ArcGIS for
    Desktop handles the rest. To simplify the development even further, a Python Add-In
    Wizard has been provided by Esri. You can download the wizard from the Esri website.
    We'll do this in the first recipe of this chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 插件提供了一种简单的方法将用户界面自定义分发到最终用户。不需要安装程序。一个扩展名为 `.esriaddin` 的单个压缩文件被复制到一个知名文件夹中，然后
    ArcGIS for Desktop 处理其余部分。为了进一步简化开发，Esri 提供了一个 Python 插件向导。您可以从 Esri 网站下载向导。我们将在本章的第一个食谱中这样做。
- en: There are a number of add-in types that can be created. Buttons and tools are
    the simplest types of add-ins that you can create. Buttons simply execute business
    logic when clicked. Tools are similar to buttons but require interaction with
    the map before the business logic is executed. Combo boxes provide a list of choices
    for the user to select from.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 可以创建多种类型的插件。按钮和工具是最简单的插件类型，您可以创建。按钮在点击时简单地执行业务逻辑。工具与按钮类似，但在执行业务逻辑之前需要与地图进行交互。组合框为用户提供了一组选项供选择。
- en: There are also a number of container objects, including menus, toolbars, tool
    palettes, and application extensions. Menus act as a container for buttons or
    other menus. Toolbars are a container for buttons, tools, combo boxes, tool palettes,
    and menus. They are the most versatile type of container for add-ins. Tool palettes
    also act as a container for tools, and need to be added to a toolbar before the
    tools are exposed. Finally, application extensions are the most complex add-in
    type. This type of add-in coordinates activities between other components and
    is responsible for listening and responding to various events, such as the addition
    or removal of a layer from a data frame.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有许多容器对象，包括菜单、工具栏、工具调色板和应用扩展。菜单充当按钮或其他菜单的容器。工具栏是按钮、工具、组合框、工具调色板和菜单的容器。它们是插件中最通用的容器类型。工具调色板也充当工具的容器，需要在工具暴露之前添加到工具栏中。最后，应用扩展是最复杂的插件类型。此类插件协调其他组件之间的活动，并负责监听和响应各种事件，例如从数据帧中添加或删除图层。
- en: Downloading and installing the Python Add-in Wizard
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载和安装 Python 插件向导
- en: Esri provides a tool that you can use to make the development of add-ins easier.
    The Python Add-In Wizard can be downloaded from the Esri website and is a great
    resource to create add-ins.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Esri 提供了一个工具，您可以使用它使插件的开发更容易。Python 插件向导可以从 Esri 网站下载，是创建插件的绝佳资源。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Python Add-In Wizard is a great resource to create the necessary files for
    an add-in. It generates the required files for the add-ins from a visual interface.
    In this recipe, you will download and install the Python Add-In Wizard.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Python 插件向导是一个创建插件所需文件的绝佳资源。它从可视化界面生成插件所需的文件。在本食谱中，您将下载并安装 Python 插件向导。
- en: How to do it…
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to download and install the Python Add-in Wizard:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何下载和安装 Python 插件向导：
- en: Open a web browser and navigate to [http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b](http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开网页浏览器并导航到 [http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b](http://www.arcgis.com/home/item.html?id=5f3aefe77f6b4f61ad3e4c62f30bff3b).
- en: 'You should see a web page similar to the following screenshot:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您应该看到一个类似于以下截图的网页：
- en: '![How to do it…](img/B04314_10_1.jpg)'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/B04314_10_1.jpg)'
- en: Click on the **Open** button to download the installer file.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **打开** 按钮下载安装文件。
- en: Using Windows Explorer, create a new folder called `Python Add-In Wizard` somewhere
    on your computer. The name of the folder is irrelevant, but to keep things simple
    and easy to remember, you should go with `Python Add-In Wizard` or something similar.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Windows 资源管理器，在您的计算机上创建一个名为 `Python Add-In Wizard` 的新文件夹。文件夹的名称无关紧要，但为了简单易记，您应该选择
    `Python Add-In Wizard` 或类似名称。
- en: Unzip the file to this new folder There are many utilities that can be used
    to unzip a file. Each will differ slightly in how they are used but with WinZip,
    you should be able to right-click on the file and select **Extract**.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件解压到这个新文件夹中。有许多工具可以用来解压文件。它们的使用方法可能略有不同，但使用 WinZip，您应该可以右键单击文件并选择 **解压**。
- en: Open the `bin` folder that was unzipped and double-click on `addin_assistant.exe`
    to run the wizard. In the following screenshot, I have created a new folder called
    `Python Add-In Wizard` and unzipped the downloaded file. The `bin` folder was
    created, and inside this folder is a file called `addin_assistant.exe`:![How to
    do it…](img/B04314_10_2.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开解压后的 `bin` 文件夹，双击 `addin_assistant.exe` 运行向导。在下面的截图中，我已经创建了一个名为 `Python Add-In
    Wizard` 的新文件夹，并解压了下载的文件。创建了 `bin` 文件夹，在这个文件夹中有一个名为 `addin_assistant.exe` 的文件：![如何操作…](img/B04314_10_2.jpg)
- en: Double-clicking on `addin_assistant.exe` will prompt you to choose a directory
    to use as the add-in project root:![How to do it…](img/B04314_10_3.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 `addin_assistant.exe` 将提示您选择一个目录作为插件项目根目录：![如何操作…](img/B04314_10_3.jpg)
- en: How it works…
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The Python Add-In Wizard is a visual interface tool that you can use to create
    add-ins for ArcGIS for Desktop. It greatly simplifies the process through a point-and-click
    tool. In the next recipe, you'll create basic ArcGIS for Desktop add-ins using
    the wizard.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Python 插件向导是一个可视化界面工具，您可以使用它为 ArcGIS for Desktop 创建插件。它通过点选工具大大简化了过程。在下一个菜谱中，您将使用向导创建基本的
    ArcGIS for Desktop 插件。
- en: Creating a button add-in and using the Python add-ins module
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建按钮插件和使用 Python 插件模块
- en: A `Button` add-in is the simplest type of add-in and is also the most commonly
    used. With button add-ins, the functionality that you code in your script is executed
    each time the button is clicked on.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`按钮` 插件是最简单类型的插件，也是最常用的。使用按钮插件，您在脚本中编写的功能会在每次点击按钮时执行。'
- en: Getting ready
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Creating an add-in project is the first step in the creation of a new add-in.
    To create a project using the Python Add-In Wizard, you select a working directory,
    enter various project settings, and click on the **Save** button. Creation of
    the add-in then follows a well-defined process, as illustrated in the following
    screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 创建插件项目是创建新插件的第一步。要使用 Python 插件向导创建项目，您需要选择一个工作目录，输入各种项目设置，然后点击 **保存** 按钮。插件的创建随后遵循一个定义良好的过程，如下面的截图所示：
- en: '![Getting ready](img/B04314_10_28.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/B04314_10_28.jpg)'
- en: You must first create a container for the add-in and this can either be in the
    form of a toolbar or menu. Next, create the button, tool, or any other add-in
    that you want to add to the container. In this recipe, we'll create a button.
    Next, you need to edit the Python script that is associated with the button. You'll
    also want to test the button to make sure it works as expected. Finally, you can
    share the add-in with others. In this recipe, you'll learn how to use the Add-In
    Wizard to create a button add-in for ArcGIS for Desktop. The button add-in will
    execute code that uses the `pythonaddins` module to display a dialog that allows
    the user to add feature classes that have already been created for a data frame.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须首先为插件创建一个容器，这可以是工具栏或菜单的形式。接下来，创建按钮、工具或您想要添加到容器中的任何其他插件。在本例中，我们将创建一个按钮。然后，您需要编辑与按钮关联的Python脚本。您还希望测试按钮以确保它按预期工作。最后，您可以与他人共享插件。在本例中，您将学习如何使用插件向导创建ArcGIS
    for Desktop的按钮插件。按钮插件将执行使用`pythonaddins`模块的代码，以显示一个对话框，允许用户添加已经为数据框架创建的特征类。
- en: How to do it...
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to create a button add-in:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何创建一个按钮插件：
- en: Open the ArcGIS Python Add-In Wizard by double-clicking on the `addin_assistant.exe`
    file located in the `bin` folder, where you extracted the wizard.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击位于您提取向导的`bin`文件夹中的`addin_assistant.exe`文件来打开ArcGIS Python插件向导。
- en: Create a new project folder called `Wildfire_Addin` and select **OK**:![How
    to do it...](img/B04314_10_4.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Wildfire_Addin`的新项目文件夹，并选择**确定**：![如何操作...](img/B04314_10_4.jpg)
- en: The **Project Settings** tab should be active initially and display the working
    directory that you just created. By default, **ArcMap** should be the selected
    product, but you should verify that this is the case:![How to do it...](img/B04314_10_5.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始时应该激活**项目设置**选项卡，并显示您刚刚创建的工作目录。默认情况下，**ArcMap**应该是选定的产品，但您应该验证这一点：![如何操作...](img/B04314_10_5.jpg)
- en: Give your project a name. We'll call it `Load Wildfire Data Addin`:![How to
    do it...](img/B04314_10_6.jpg)
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给您的项目起一个名字。我们将称之为`Load Wildfire Data Addin`：![如何操作...](img/B04314_10_6.jpg)
- en: By default, the **Version:** is **0.1**. You can change this if you like. Version
    numbers should change as you update or make additions to your tool. This helps
    with the tracking and sharing of your add-ins:![How to do it...](img/B04314_10_7.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，**版本**是**0.1**。如果您愿意，可以更改它。版本号应随着您更新或添加工具而更改。这有助于跟踪和共享您的插件：![如何操作...](img/B04314_10_7.jpg)
- en: The **Name:** and **Version:** properties are the only two required properties.
    It's a good practice to go ahead and add the company, description, and author
    information, as shown in the following screenshot. Add your own information:![How
    to do it...](img/B04314_10_8.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**名称**和**版本**属性是仅有的两个必需属性。按照以下截图所示，添加公司、描述和作者信息是一个好习惯。添加您自己的信息：![如何操作...](img/B04314_10_8.jpg)'
- en: You may also wish to add an image for the add-in. A file called `wildfire.png`
    has been provided for this purpose in the `C:\ArcpyBook\Ch10` folder:![How to
    do it...](img/B04314_10_9.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能还希望为插件添加一个图像。在`C:\ArcpyBook\Ch10`文件夹中提供了一个名为`wildfire.png`的文件用于此目的：![如何操作...](img/B04314_10_9.jpg)
- en: The **Add-In Contents** tab is used to define the various add-ins that can be
    created. In this step, we're going to create a toolbar to hold a single button
    add-in that runs a wildfire script, which imports `fires` from a text file to
    a feature class. Click on the **Add-In Contents** tab:![How to do it...](img/B04314_10_10.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**插件内容**选项卡用于定义可以创建的各种插件。在本步骤中，我们将创建一个工具栏，用于包含一个运行野火脚本的单一按钮插件，该脚本将`fires`从文本文件导入到特征类。单击**插件内容**选项卡：![如何操作...](img/B04314_10_10.jpg)'
- en: In the **Add-In Contents** tab, right-click on **TOOLBARS** and select **New
    Toolbar**. Give the toolbar a **Caption:**, accept the default name, and make
    sure the **Show Initially** checkbox is selected:![How to do it...](img/B04314_10_11.jpg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**插件内容**选项卡中，右键单击**工具栏**并选择**新建工具栏**。为工具栏提供一个**标题**，接受默认名称，并确保选中**初始显示**复选框：![如何操作...](img/B04314_10_11.jpg)
- en: While it doesn't do a whole lot functionally, the Toolbar add-in is very important
    because it acts as a container for other add-ins, such as buttons, tools, combo
    boxes, tool palettes, and menus. Toolbars can be floating or docked. Creating
    a toolbar add-in is easy using the `Python Add-In Wizard`.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然在功能上并没有做很多事情，但工具栏插件非常重要，因为它充当其他插件的容器，例如按钮、工具、组合框、工具板和菜单。工具栏可以是浮动的或固定的。使用`Python插件向导`创建工具栏插件很容易。
- en: Click on the **Save** button.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮。
- en: Now, we'll add a button by right-clicking on the new **Wildfire Toolbar** option
    and selecting **New Button**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将通过右键单击新的**野火工具栏**选项并选择**新建按钮**来添加一个按钮。
- en: Fill in the **Button** details, including a **Caption:**, **Class Name:**, **ID
    (Variable Name):**, **Tooltip:**, and so on. You can also include an **Image for
    control:**. I haven't done so in this case, but you may choose to do this. This
    information is saved to the configuration file for the add-in:![How to do it...](img/B04314_10_12.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**按钮**的详细信息，包括**标题**、**类名**、**ID（变量名）**、**工具提示**等。你还可以包括**控件图像**。在此情况下，我没有这样做，但你可以选择这样做。这些信息将保存到附加件的配置文件中：![如何操作...](img/B04314_10_12.jpg)
- en: Click on the **Save** button. Add-ins have a Python script that they are attached
    to. This file, by default, will be named `AddIns_addin.py` and can be found in
    the `install` directory of your working project folder.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮。附加件有一个它们所附加的 Python 脚本。默认情况下，此文件将命名为 `AddIns_addin.py`，并位于你工作项目文件夹的
    `install` 目录中。
- en: We've already created a custom `ArcToolbox` Python script tool that loads a
    comma-delimited text file from a disk containing wildfire data to a feature class.
    We will be using the results of this script in our add-in. In Windows Explorer,
    go to the `addin` directory that you created earlier. It should be called `Wildfire_Addin`.
    Go to the `Install` folder and you should find a file called `WildfireAddin_addin.py`.
    Load this file into your Python editor.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经创建了一个自定义的 `ArcToolbox` Python 脚本工具，该工具从包含野火数据的磁盘上的逗号分隔文本文件加载到要素类中。我们将在我们的附加件中使用此脚本的输出。在
    Windows 资源管理器中，转到你之前创建的 `addin` 目录。它应该被称为 `Wildfire_Addin`。转到 `Install` 文件夹，你应该找到一个名为
    `WildfireAddin_addin.py` 的文件。将此文件加载到你的 Python 编辑器中。
- en: 'In this next step, we''ll write code that uses the `pythonaddins` module to
    open a dialog that allows you to add one or more layers to a selected data frame.
    The `OpenDialog()` and `GetSelectedTOCLayerorDataFrame()` functions in `pythonaddins`
    are used to accomplish this task. Find the `onClick(self)` method, which is shown
    in the following code snippet. This method is triggered when the button is clicked.
    Remove the `pass` statement from the `onClick` event and add this code:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一步，我们将编写使用 `pythonaddins` 模块的代码，以打开一个对话框，允许你向选定的数据框添加一个或多个图层。`pythonaddins`
    中的 `OpenDialog()` 和 `GetSelectedTOCLayerorDataFrame()` 函数用于完成此任务。找到以下代码片段中显示的
    `onClick(self)` 方法。此方法在按钮被点击时触发。从 `onClick` 事件中删除 `pass` 语句并添加以下代码：
- en: '[PRE0]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save the file.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: You can check your work by examining the `C:\ArcpyBook\code\Ch10\WildfireAddIn.py`
    solution file.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过检查 `C:\ArcpyBook\code\Ch10\WildfireAddIn.py` 解决方案文件来检查你的工作。
- en: In the next recipe, you will learn how to install your new add-in.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个菜谱中，你将学习如何安装你的新附加件。
- en: How it works...
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'As you''ve seen in this recipe, the Python Add-In Wizard handles the creation
    of the add-in through a visual interface. However, behind the scenes, the wizard
    creates a set of folders and files for the add-in. The add-in file structure is
    really quite simple. Two folders and a set of files comprise the add-in structure.
    You can see this structure in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在本菜谱中看到的，Python 附加件向导通过可视化界面处理附加件的创建。然而，在幕后，向导为附加件创建了一系列文件夹和文件。附加件文件结构实际上非常简单。两个文件夹和一组文件构成了附加件结构。你可以在以下屏幕截图中看到此结构：
- en: '![How it works...](img/B04314_10_13.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/B04314_10_13.jpg)'
- en: The `Images` folder contains any icons or other image files used by your add-in.
    In this recipe, we used the `wildfire.png` image. So, this file should now be
    in the `Images` folder. The `Install` folder contains the Python script that handles
    the business logic of the add-in. This is the file you will work with extensively
    to code the add-in. It performs whatever business logic needs to be performed
    by the buttons, tools, menu items, and so on. The `config.xml` file in the main
    folder of the add-in defines the user interface and static properties, such as
    the name, author, version, and so on. The `makeaddin.py` file can be double-clicked
    on to create the `.esriaddin` file, which wraps everything into a compressed file
    with an `.esriaddin` extension. This `.esriaddin` file is what will be distributed
    to end users, so that the add-in can be installed.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Installing and testing an add-in
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You'll want to test add-ins before distributing them to your end users. To test
    these, you first need to install the add-in.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the working folder of your add-in, the `makeaddin.py` script can be used
    to copy all files and folders to a compressed add-in folder in a working directory
    with the `<working folder name>.esriaddin` file format. Double-click on this `.esriaddin`
    file to launch the Esri ArcGIS add-in installation utility, which will install
    your add-in. You can then go into ArcGIS for Desktop and test the add-in. The
    custom toolbar or menu may already be visible and ready to test. If it is not
    visible, go to the **Customize** menu and click on **Add-in Manager**. The **Add-In
    Manager** dialog box lists the installed add-ins that target the current application.
    Add-in information, such as name, description, and image, which are entered as
    project settings, should be displayed.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Inside the main folder for your add-in, there will be a Python script file called
    `makeaddin.py`. This script creates the `.esriaddin` file. Double-click on the
    script to execute and create the `.esriaddin` file. This process is illustrated
    in the following screenshot:![How to do it…](img/B04314_10_14.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To install the add-in for ArcGIS for Desktop, double-click on the `Widlfire_Add-In.esriaddin`
    file, which will launch the **Esri ArcGIS Add-In Installation Utility** window,
    as shown in the following screenshot:![How to do it…](img/B04314_10_15.jpg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Install Add-In**. If everything was successful, you should see the
    following message:![How to do it…](img/B04314_10_16.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To test the add-in, open **ArcMap**. Your add-in may already be active. If not,
    navigate to **Customize** | **Add-In Manager**. This will display the **Add-In
    Manager** dialog box, as shown in the following screenshot. You should be able
    to see the add-in that you created:![How to do it…](img/B04314_10_19.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If needed, select the **Customize** button. To add the toolbar to the application,
    click on the **Toolbars** tab and choose the toolbar you created:![How to do it…](img/B04314_10_20.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，请选择**自定义**按钮。要将工具栏添加到应用程序中，请单击**工具栏**选项卡并选择您创建的工具栏：![如何操作…](img/B04314_10_20.jpg)
- en: 'The add-in should now be displayed, as seen in this screenshot:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 插件现在应显示，如本截图所示：
- en: '![How to do it…](img/B04314_10_26.jpg)'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/B04314_10_26.jpg)'
- en: Click on the button and in the dialog that is displayed, navigate to the `Wildfires`
    layers you created earlier inside the `WildlandFires.mdb`. Select and add them
    to the display:![How to do it…](img/B04314_10_25.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击按钮，在显示的对话框中，导航到`Wildfires`图层，这些图层您之前在`WildlandFires.mdb`中创建。选择并添加到显示中：![如何操作…](img/B04314_10_25.jpg)
- en: 'Here, you will see the output of having selected one or more layers from the
    dialog:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，您将看到从对话框中选择一个或多个图层后的输出：
- en: '![How to do it…](img/B04314_10_27.jpg)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/B04314_10_27.jpg)'
- en: How it works…
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作…
- en: 'The utility will place the add-in into a well-known folder discoverable by
    ArcGIS for Desktop. The locations of this folder are as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 该实用程序将插件放置在ArcGIS for Desktop可发现的知名文件夹中。此文件夹的位置如下：
- en: 'Windows 8: `C:\Users\<username>\Documents\ArcGIS\AddIns\Desktop10.3`'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Windows 8: `C:\Users\<用户名>\Documents\ArcGIS\AddIns\Desktop10.3`'
- en: 'Vista/7: `C:\Users\<username>\Documents\ArcGIS\AddIns\Desktop10.3`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Vista/7: `C:\Users\<用户名>\Documents\ArcGIS\AddIns\Desktop10.3`'
- en: 'XP: `C:\Documents and Settings\<username>\My Documents\ArcGIS\AddIns\Desktop10.3`'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'XP: `C:\Documents and Settings\<用户名>\My Documents\ArcGIS\AddIns\Desktop10.3`'
- en: 'A folder with a unique **globally unique identifier** or **GUID** name will
    be created inside the well-known folder. The add-in will reside inside this unique
    folder name. This is illustrated in the following screenshot. When ArcGIS for
    Desktop starts, it will search these directories and load the add-ins:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在知名文件夹内将创建一个具有唯一**全局唯一标识符**或**GUID**名称的文件夹。插件将驻留在该唯一文件夹名称内。以下截图展示了这一点。当ArcGIS
    for Desktop启动时，它将搜索这些目录并加载插件：
- en: '![How it works…](img/B04314_10_17.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/B04314_10_17.jpg)'
- en: 'The add-in will look similar to the following:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 插件将类似于以下所示：
- en: '![How it works…](img/B04314_10_18.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/B04314_10_18.jpg)'
- en: Note
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The default add-in folder is located in the `ArcGIS` folder within your user
    account. For example, if your `ArcGIS` installation is version 10.1, the add-in
    is copied to `C:\users\<username>\Documents\ArcGIS\AddIns\Desktop10.1` on a Vista
    or Windows 7 operating system.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 默认插件文件夹位于您的用户账户中的`ArcGIS`文件夹内。例如，如果您的`ArcGIS`安装版本为10.1，则插件在Vista或Windows 7操作系统上被复制到`C:\users\<用户名>\Documents\ArcGIS\AddIns\Desktop10.1`。
- en: You can also use a private network drive to distribute add-ins to end users.
    The `Add-In Manager` in ArcGIS for Desktop adds and maintains lists of folders
    that can be searched for add-ins. Select the **Options** tab and then **Add Folder**
    to add a network drive to the list.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用私有网络驱动器向最终用户分发插件。ArcGIS for Desktop中的`Add-In Manager`添加并维护可以搜索插件的文件夹列表。选择**选项**选项卡，然后选择**添加文件夹**以将网络驱动器添加到列表中。
- en: Creating a tool add-in
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建工具插件
- en: Tool add-ins are similar to buttons with the exception that tools require some
    type of interaction with the map. The zoom-in tool, for example, is a type of
    tool. Tools should be placed inside a toolbar or tool palette. The properties
    similar to those of a button. You'll also need to edit the Python script.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 工具插件类似于按钮，但工具需要与地图进行某种类型的交互。例如，缩放工具就是一种工具。工具应放置在工具栏或工具调色板内。它们的属性类似于按钮。您还需要编辑Python脚本。
- en: Getting ready
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'The `Tool` class has a number of properties, including `cursor`, `enabled`,
    and `shape`. The `cursor` property sets the cursor for the tool when it is clicked
    on, and is defined as an integer value corresponding to the cursor types, as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`Tool`类有几个属性，包括`cursor`、`enabled`和`shape`。`cursor`属性设置工具被点击时的光标，并定义为对应于光标类型的整数值，如下所示：'
- en: '![Getting ready](img/B04314_10_21.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/B04314_10_21.jpg)'
- en: 'By default, tools are enabled. This can be changed, though, by setting the
    `enabled` property to `false`. Finally, the `shape` property specifies the type
    of shape to be drawn and it can be a line, rectangle, or circle. These properties
    are typically set inside the constructor of the tool, which is defined by the
    `__init__` method, as shown in the following code example. The `self` object refers
    to the current object (a tool in this case) and is a variable that refers to this
    current object:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，工具是启用的。不过，可以通过将 `enabled` 属性设置为 `false` 来更改此设置。最后，`shape` 属性指定要绘制的形状类型，可以是线、矩形或圆形。这些属性通常在工具的构造函数中设置，该构造函数由
    `__init__` 方法定义，如下面的代码示例所示。`self` 对象指的是当前对象（在这种情况下是工具）并是一个引用当前对象的变量：
- en: '[PRE1]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There are a number of functions associated with the `Tool` class. All classes
    will have a constructor, which is used to define the properties for the class.
    You saw an example of this `__init__` function earlier. Other important functions
    of the tool class include `onRectangle()`, `onCircle()`, and `onLine()`. These
    functions correspond to the shape that will be drawn on the map with the tool.
    The geometry of the drawn shape is passed into the function. There are also a
    number of mouse and key functions that can be used. Finally, the `deactivate()`
    function can be called when you want to deactivate the tool.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `Tool` 类相关联有许多函数。所有类都将有一个构造函数，用于定义类的属性。你之前已经看到了这个 `__init__` 函数的例子。工具类中的其他重要函数包括
    `onRectangle()`、`onCircle()` 和 `onLine()`。这些函数对应于使用工具在地图上绘制的形状。绘制的形状的几何形状被传递到函数中。还有许多鼠标和键盘函数可以使用。最后，当您想要停用工具时，可以调用
    `deactivate()` 函数。
- en: 'We''ve already seen the constructor for the `Tool` class in action. This function,
    called `__init__`, is used to set various properties for the tool when it is created.
    Here, we''ve also shown the `onRectangle()` function for the `Tool` class. This
    function is called when a rectangle is drawn on the map. The geometry of the rectangle
    is passed into the function along with a reference to the tool itself:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了 `Tool` 类的构造函数在行动中的样子。这个名为 `__init__` 的函数用于在创建工具时设置各种属性。在这里，我们还展示了 `Tool`
    类的 `onRectangle()` 函数。当在地图上绘制矩形时，会调用此函数。函数接收矩形的几何形状以及工具本身的引用：
- en: '[PRE2]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this recipe, you will learn how to create a tool add-in that responds to
    the user dragging a rectangle on the map. The tool will use the **Generate Random
    Points** tool to generate points within the rectangle.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将学习如何创建一个工具插件，该插件能够响应用户在地图上拖动矩形。该工具将使用 **生成随机点** 工具在矩形内生成点。
- en: How to do it...
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to create a tool add-in with the **ArcGIS Python Add-In
    Wizard**:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用 **ArcGIS Python Add-In 向导** 创建工具插件：
- en: Open the **ArcGIS Python Add-In Wizard** by double-clicking on the `addin_assistant.exe`
    file that is located in the `bin` folder, where you extracted the wizard.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击位于提取向导的 `bin` 文件夹中的 `addin_assistant.exe` 文件来打开 **ArcGIS Python Add-In 向导**。
- en: Create a new project folder called `Generate_Random_Points` and select **OK**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Generate_Random_Points` 的新项目文件夹，并选择 **确定**。
- en: Enter properties, including **Name:**, **Version:**, **Company:**, **Description:**,
    and **Author:**, in the **Project Settings** tab:![How to do it...](img/B04314_10_22.jpg)
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **项目设置** 选项卡中输入属性，包括 **名称**、**版本**、**公司**、**描述** 和 **作者**：![如何操作...](img/B04314_10_22.jpg)
- en: Click on the **Add-In Contents** tab.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **插件内容** 选项卡。
- en: Right-click on **TOOLBARS** and select **New Toolbar**.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 **工具栏** 并选择 **新建工具栏**。
- en: Set the caption for the toolbar to `Random Points Toolbar`.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将工具栏的标题设置为 `随机点工具栏`。
- en: Right-click on the newly created `Random Points Toolbar` and select **New Tool**.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击新创建的 `随机点工具栏` 并选择 **新建工具**。
- en: Enter items for the tool as shown in the following screenshot:![How to do it...](img/B04314_10_23.jpg)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下截图所示输入工具项：![如何操作...](img/B04314_10_23.jpg)
- en: Click on **Save**. This will generate the folder and file structure for the
    add-in.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **保存**。这将生成插件的文件夹和文件结构。
- en: Go to the `Install` folder for the new add-in and open `GenerateRandomPoints_addin.py`
    in IDLE.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往新插件的 `Install` 文件夹，并在 IDLE 中打开 `GenerateRandomPoints_addin.py` 文件。
- en: 'Add the following code to the `__init__` function, which is the constructor
    for the tool:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `__init__` 函数中，这是工具的构造函数：
- en: '[PRE3]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the `onRectangle()` function, write a code to generate a set of random points
    within the rectangle drawn on the screen:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `onRectangle()` 函数中，编写代码以在屏幕上绘制的矩形内生成一组随机点：
- en: '[PRE4]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Save the file.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: You can check your work by examining the `C:\ArcpyBook\code\Ch10\GenerateRandomPoints_addin.py`
    solution file.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过检查 `C:\ArcpyBook\code\Ch10\GenerateRandomPoints_addin.py` 解决方案文件来检查你的工作。
- en: Generate the `.esriaddin` file by double-clicking on the `makeaddin.py` file
    in the `main` folder for the add-in.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在插件的 `main` 文件夹中双击 `makeaddin.py` 文件来生成 `.esriaddin` 文件。
- en: Install the add-in by double-clicking on `GenerateRandom_Points.esriaddin`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过双击 `GenerateRandom_Points.esriaddin` 来安装插件。
- en: Open **ArcMap** and add the `Generate Random Points` toolbar, if necessary.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 **ArcMap** 并添加 `Generate Random Points` 工具栏，如果需要的话。
- en: Add the `BexarCountyBoundaries` feature class from `C:\ArcpyBook\data\CityOfSanAntonio.gdb`.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `BexarCountyBoundaries` 特征类从 `C:\ArcpyBook\data\CityOfSanAntonio.gdb` 添加。
- en: Test the add-in by dragging a rectangle on the map. The output should appear
    similar to the following screenshot. Your map will vary because the points are
    generated randomly:![How to do it...](img/B04314_10_24.jpg)
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在地图上拖动矩形来测试插件。输出应类似于以下截图。你的地图可能会有所不同，因为点是以随机方式生成的：![如何做...](img/B04314_10_24.jpg)
- en: How it works...
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Tool add-ins are very similar to button add-ins with the difference being that
    tool add-ins require some sort of interaction with the map before the functionality
    is triggered. An interaction with the map can include a number of things, such
    as clicking on the map, drawing a polygon or rectangle, or performing various
    mouse or key events. Python code is written to respond to one or more of these
    events. In this recipe, you learned how to write a code that responds to the `onRectangle()`
    event. You also set various properties inside the constructor for the add-in,
    including `cursor` and `shape`, which will be drawn on the map.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 工具插件与按钮插件非常相似，区别在于工具插件在触发功能之前需要与地图进行某种形式的交互。与地图的交互可以包括多种操作，例如点击地图、绘制多边形或矩形，或执行各种鼠标或键盘事件。Python
    代码编写用于响应这些事件中的一个或多个。在本菜谱中，你学习了如何编写响应 `onRectangle()` 事件的代码。你还在插件的构造函数中设置了各种属性，包括
    `cursor` 和 `shape`，这些将在地图上绘制。
- en: There's more...
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There are a number of additional add-ins that you can create. The `ComboBox`
    add-in provides a drop-down list of values that the user can select from, or alternatively
    type a new value into an editable field. As with the other add-ins, you'll first
    want to create a new project with the Python Add-In Wizard, add a new toolbar,
    and then create a combo box to add to the toolbar.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以创建许多额外的插件。`ComboBox` 插件提供了一个下拉列表，用户可以从中选择值，或者也可以在可编辑字段中输入新值。与其他插件一样，你首先需要使用
    Python 插件向导创建一个新项目，添加一个新的工具栏，然后创建一个组合框添加到工具栏中。
- en: The Tool Palette provides a way of grouping related tools. It does need to be
    added to an existing toolbar. By default, tools will be added to the palette in
    a grid-like pattern.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 工具调色板提供了一种将相关工具分组的方法。它需要添加到一个现有的工具栏中。默认情况下，工具将以网格状模式添加到调色板中。
- en: The `Menu` add-in acts as a container for buttons and other menus. Menus, in
    addition to being displayed by the ArcGIS for Desktop Add-in Manager, will also
    be displayed in the **Customize** dialog box for ArcGIS for Desktop.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`Menu` 插件充当按钮和其他菜单的容器。除了在 ArcGIS for Desktop 插件管理器中显示外，菜单还会在 ArcGIS for Desktop
    的 **自定义** 对话框中显示。'
- en: Application extensions are used to add specific sets of related functionality
    to ArcGIS for Desktop. Several examples include Spatial Analyst, 3D Analyst, and
    Business Analyst. Typically, application extensions are responsible for listening
    for events and handling them. For example, you could create an application extension
    that saves the map document file each time a user adds a layer to the map. Application
    extensions also coordinate activities between components.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序扩展用于向 ArcGIS for Desktop 添加特定的一组相关功能。一些例子包括空间分析器、3D 分析器和商业分析师。通常，应用程序扩展负责监听事件并处理它们。例如，你可以创建一个应用程序扩展，每次用户将图层添加到地图时都会保存地图文档文件。应用程序扩展还协调组件之间的活动。
