["```py\nfrom nose.tools import assert_equal\n\nfrom petrel import mock, storm\nfrom petrel.emitter import BasicBolt\n\nfrom randomsentence import RandomSentenceSpout\n\nclass SplitSentenceBolt(BasicBolt):\n    def __init__(self):\n        super(SplitSentenceBolt, self).__init__(script=__file__)\n\n    def declareOutputFields(self):\n        return ['word']\n\n    def process(self, tup):\n        words = tup.values[0].split(\" \")\n        for word in words:\n          storm.emit([word])\n\ndef test():\n    bolt = SplitSentenceBolt()\n    mock_spout = mock.MockSpout(\n        RandomSentenceSpout.declareOutputFields(),\n        [[\"Madam, I'm Adam.\"]])\n\n    result = mock.run_simple_topology(\n        None, [mock_spout, bolt], result_type=mock.LIST)\n        assert_equal([['Madam,'], [\"I'm\"], ['Adam.']], result[bolt])\n\ndef run():\n    SplitSentenceBolt().run()\n```", "```py\npip install nosetests\n```", "```py\n    pip install nosetests\n    ```", "```py\n    nosetests -v splitsentence.py\n    ```", "```py\nsplitsentence.test ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nOK\n```", "```py\nfrom collections import defaultdict\n\nfrom nose.tools import assert_equal\n\nfrom petrel import mock, storm\nfrom petrel.emitter import BasicBolt\n\nfrom randomsentence import RandomSentenceSpout\nfrom splitsentence import SplitSentenceBolt\n\nclass WordCountBolt(BasicBolt):\n    def __init__(self):\n        super(WordCountBolt, self).__init__(script=__file__)\n        self._count = defaultdict(int)\n\n    @classmethod\n    def declareOutputFields(cls):\n        return ['word', 'count']\n\n    def process(self, tup):\n        word = tup.values[0]\n        self._count[word] += 1\n        storm.emit([word, self._count[word]])\n\ndef test():\n    ss_bolt = SplitSentenceBolt()\n    wc_bolt = WordCountBolt()\n\n    mock_spout = mock.MockSpout(\n        RandomSentenceSpout.declareOutputFields(),\n        [[\"the bart the\"]])\n\n     result = mock.run_simple_topology(\n       None,\n       [mock_spout, ss_bolt, wc_bolt],\n       result_type=mock.LIST)\n       assert_equal([['the', 1], ['bart', 1], ['the', 2]], result[wc_bolt])\n\ndef run():\n    WordCountBolt().run()\n```", "```py\nsource <virtualenv directory>/bin/activate\npip install winpdb\n```", "```py\nimport rpdb2\nrpdb2.start_embedded_debugger('password')\n```", "```py\npetrel submit --config topology.yaml\n```", "```py\n[2015-05-07 22:51:44,772][storm][DEBUG]BasicBolt profile: total_num_tuples=79, num_tuples=79, avg_read_time=0.002431 (19.1%), avg_process_time=0.010279 (80.7%), avg_ack_time=0.000019 (0.2%)\n[2015-05-07 22:51:45,776][storm][DEBUG]BasicBolt profile: total_num_tuples=175, num_tuples=96, avg_read_time=0.000048 (0.5%), avg_process_time=0.010374 (99.3%), avg_ack_time=0.000025 (0.2%)\n[2015-05-07 22:51:46,784][storm][DEBUG]BasicBolt profile: total_num_tuples=271, num_tuples=96, avg_read_time=0.000043 (0.4%), avg_process_time=0.010417 (99.3%), avg_ack_time=0.000026 (0.2%)\n[2015-05-07 22:51:47,791][storm][DEBUG]BasicBolt profile: total_num_tuples=368, num_tuples=97, avg_read_time=0.000041 (0.4%), avg_process_time=0.010317 (99.4%), avg_ack_time=0.000021 (0.2%)\n```", "```py\n[2015-05-07 22:51:44,918][storm][DEBUG]BasicBolt profile: total_num_tuples=591, num_tuples=591, avg_read_time=0.001623 (95.8%), avg_process_time=0.000052 (3.1%), avg_ack_time=0.000019 (1.1%)\n[2015-05-07 22:51:45,924][storm][DEBUG]BasicBolt profile: total_num_tuples=1215, num_tuples=624, avg_read_time=0.001523 (94.7%), avg_process_time=0.000060 (3.7%), avg_ack_time=0.000025 (1.5%)\n[2015-05-07 22:51:46,930][storm][DEBUG]BasicBolt profile: total_num_tuples=1829, num_tuples=614, avg_read_time=0.001559 (95.4%), avg_process_time=0.000055 (3.3%), avg_ack_time=0.000021 (1.3%)\n[2015-05-07 22:51:47,938][storm][DEBUG]BasicBolt profile: total_num_tuples=2451, num_tuples=622, avg_read_time=0.001547 (95.7%), avg_process_time=0.000049 (3.0%), avg_ack_time=0.000020 (1.3%)\n```", "```py\n0.010338 seconds/tuple * 97 tuples = 1.002786 seconds (Split sentence)\n0.000069 seconds/tuple * 622 tuples = 0.042918 seconds (Word count)\n```", "```py\npetrel.parallelism.splitsentence: 24\npetrel.parallelism.wordcount: 1\n```", "```py\n    tar –xvf zookeeper-3.4.6.tar.gz\n    ```", "```py\n    server.1=172.31.36.23:2888:3888\n    tickTime=2000\n    initLimit=10\n    syncLimit=5\n    # the directory where the snapshot is stored.\n    dataDir=/home/ec2-user/zookeeper-3.4.6/tmp/zookeeper\n    clientPort=2181\n    ```", "```py\n    [ec2-user@ip-172-31-36-23 bin~]$ zkServer.sh start\n    ```", "```py\n    tar –xvf apache-storm-0.9.5.tar.gz\n    ```", "```py\n    storm.zookeeper.servers: - \"172.31.36.23\"\n\n    nimbus.host: \"172.31.36.23\"\n\n    nimbus.childopts: \"-Xmx1024m -Djava.net.preferIPv4Stack=true\"\n\n    ui.childopts: \"-Xmx768m -Djava.net.preferIPv4Stack=true\"\n\n    supervisor.childopts: \"-Djava.net.preferIPv4Stack=true\"\n\n    worker.childopts: \"-Xmx768m -Djava.net.preferIPv4Stack=true\"\n\n    storm.local.dir: \"/home/ec2-user/apache-storm-0.9.5/local\"\n\n    supervisor.slots.ports:\n     - 6700\n     - 6701\n     - 6702\n     - 6703\n    ```", "```py\n        [ec2-user@ip-172-31-19-62 ~]$ tar -xvf setuptools-17.1.1.zip\n        ```", "```py\n        [ec2-user@ip-172-31-19-62 setuptools-17.1.1]$ sudo python setup.py install\n        ```", "```py\n        storm.zookeeper.servers: - \"172.31.36.23\"\n\n        nimbus.host: \"172.31.36.23\"\n\n        nimbus.childopts: \"-Xmx1024m -Djava.net.preferIPv4Stack=true\"\n\n        ui.childopts: \"-Xmx768m -Djava.net.preferIPv4Stack=true\"\n\n        supervisor.childopts: \"-Djava.net.preferIPv4Stack=true\"\n\n        worker.childopts: \"-Xmx768m -Djava.net.preferIPv4Stack=true\"\n\n        storm.local.dir: \"/home/ec2-user/apache-storm-0.9.5/local\"\n\n        supervisor.slots.ports:\n         - 6700\n         - 6701\n         - 6702\n         - 6703\n        ```", "```py\n        [ec2-user@ip-172-31-19-62 ~]$ tar -xvf meld3-0.6.5.tar.gz\n        ```", "```py\n        [ec2-user@ip-172-31-19-62 meld3-0.6.5]$ sudo pyth setup.py install\n        ```", "```py\n        [ec2-user@ip-172-31-19-62 ~]$ tar -xvf elementtree-1.2-20040618.tar.gz\n        ```", "```py\n        [ec2-user@ip-172-31-19-62 elementtree-1.2-20040618]$ sudo python setup.py install\n        ```", "```py\n    [ec2-user@ip-172-31-19-62 ~]$ tar -xvf supervisor-3.1.3.tar.gz\n    ```", "```py\n    [ec2-user@ip-172-31-19-62 supervisor-3.1.3]$ sudo python setup.py install\n    ```", "```py\n    [ec2-user@ip-172-31-36-23 ~]$ echo_supervisord_conf\n    ```", "```py\n[unix_http_server]\nfile = /home/ec2-user/supervisor.sock\nchmod = 0777\n\n[inet_http_server]         ; inet (TCP) server disabled by default\nport=172.31.36.23:9001        ; (ip_address:port specifier, *:port for all iface)\nusername=user              ; (default is no username (open server))\npassword=123               ; (default is no password (open server))\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisord]\nlogfile_backups=10           ; (num of main logfile rotation backups;default 10)\nlogfile=/home/ec2-user/supervisord.log ; (main log file;default $CWD/supervisord.log)\nlogfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)\npidfile=/home/ec2-user/supervisord.pid ; (supervisord pidfile;default supervisord.pid)\nnodaemon=false               ; (start in foreground if true;default false)\nminfds=1024                  ; (min. avail startup file descriptors;default 1024)\n\n[supervisorctl]\n;serverurl = unix:///home/ec2-user/supervisor.sock\nserverurl=http://172.31.36.23:9001 ; use an http:// url to specify an inet socket\n;username=chris              ; should be same as http_username if set\n;password=123                ; should be same as http_password if set\n\n[program:storm-nimbus]\ncommand=/home/ec2-user/apache-storm-0.9.5/bin/storm nimbus\nuser=ec2-user\nautostart=false\nautorestart=false\nstartsecs=10\nstartretries=999\nlog_stdout=true\nlog_stderr=true\nstdout_logfile=/home/ec2-user/storm/logs/nimbus.out\nlogfile_maxbytes=20MB\nlogfile_backups=10\n\n[program:storm-ui]\ncommand=/home/ec2-user/apache-storm-0.9.5/bin/storm ui\nuser=ec2-user\nautostart=false\nautorestart=false\nstartsecs=10\nstartretries=999\nlog_stdout=true\nlog_stderr=true\nstdout_logfile=/home/ec2-user/storm/logs/ui.out\nlogfile_maxbytes=20MB\nlogfile_backups=10\n\n[program:storm-supervisor]\ncommand=/home/ec2-user/apache-storm-0.9.5/bin/storm supervisor\nuser=ec2-user\nautostart=false\nautorestart=false\nstartsecs=10\nstartretries=999\nlog_stdout=true\nlog_stderr=true\nstdout_logfile=/home/ec2-user/storm/logs/supervisor.out\nlogfile_maxbytes=20MB\nlogfile_backups=10\n```", "```py\n[ec2-user@ip-172-31-36-23 ~] sudo /usr/bin/supervisord -c /etc/supervisord.conf\n```", "```py\n[ec2-user@ip-172-31-36-23 ~] sudo /usr/bin/supervisorctl -c /etc/supervisord.conf status\nstorm-nimbus                     STOPPED   Not started\nstorm-supervisor                 STOPPED   Not started\nstorm-ui                         STOPPED   Not started\n[ec2-user@ip-172-31-36-23 ~]$ sudo /usr/bin/supervisorctl -c /etc/supervisord.conf start all\nstorm-supervisor: started\nstorm-ui: started\nstorm-nimbus: started\n[ec2-user@ip-172-31-36-23 ~]$ jps\n14452 Jps\n13315 QuorumPeerMain\n14255 nimbus\n14233 supervisor\n14234 core\n[ec2-user@ip-172-31-36-23 ~]$\n```", "```py\n[unix_http_server]\n[rpcinterface:supervisor]\n[supervisord]\n[supervisorctl]\n[program:storm-supervisor]\n```"]