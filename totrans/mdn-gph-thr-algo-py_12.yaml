- en: '8'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Dynamic Social Networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In previous chapters, we’ve considered networks that don’t change over time.
    Their geometry remains unchanged, and spreading processes and importance metrics
    calculated on them don’t vary, either. However, this is not the case for many
    real-world networks, where new connections are forged and old connections break.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll consider networks that change over time and how these
    changes impact network structure and spreading processes. For instance, within
    a social network, users can join or deactivate accounts. The strength of their
    ties can change as they interact with other users’ content. All these actions
    drive network changes over time, which impact how processes such as information
    exchange across a network function as hubs appear and disappear or bridges forge
    across different hubs. We’ll consider simulation data and trial data collected
    from wildlife observations and hypothetical epidemics spreading across populations
    of crocodiles and blue herons, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you’ll understand how networks change over time
    and what these impacts mean for spreading processes and network metrics. You’ll
    also know how to wrangle dynamic datasets into networks and analyze time slices.
    These methods scale to larger populations and longer time frames, so you’ll be
    equipped to work with population models at scale by the end of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Social networks that change over time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deeper dive into spreading on networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Example with evolving wildlife interaction datasets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be using a Jupyter notebook to run our dynamic network
    examples. You can also run this code on a cloud platform that supports Jupyter
    notebooks, such as **Amazon Web Services** (**AWS**) or **Google Cloud Platform**
    (**GCP**). We will be using a Jupyter notebook run on a laptop computer, and it
    is not necessary to have cloud access to process the examples in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Social networks that change over time
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Consider your group of closest friends. How has that group changed over the
    last year? The last 5 years? The last 10?
  prefs: []
  type: TYPE_NORMAL
- en: Many social relationships and other types of data that can be represented using
    networks evolve over time. Friendships drift away and forge as people move, graduate
    from school, get married, change jobs, travel, or pass away. Animals migrate with
    changes in season, changes in climate, and human activity encroaching on grazing
    lands. Sales patterns across stores can be interrupted by new stores in the area,
    movements of population, and major world events such as COVID-19 or the Ukraine
    conflict.
  prefs: []
  type: TYPE_NORMAL
- en: In the next sections, we’ll explore dynamic networks, whose structure changes
    over time. As network structure changes, so do many important properties related
    to information/disease flow and partitioning of the network.
  prefs: []
  type: TYPE_NORMAL
- en: Friendship networks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many social network platforms allow friendship groups to evolve and even encourage
    changes in structure. Consider sharing posts or tweets, tagging other people in
    your network post/tweet/picture who might have friends who have not met you yet,
    and adding searchable hashtags related to the content you are sharing. Each of
    these activities provides more visibility for you outside your initial social
    network, allowing friends of friends, acquaintances who haven’t connected with
    you on the social media platform, and individuals who share similar interests
    in your topic post to find you and connect.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s say someone posted a surreal dreamcatcher image on a social media platform
    (*Figure 8**.1*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.1 – A dreamcatcher image created with artificial intelligence (AI)
    posted to a social media platform](img/B21087_08_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.1 – A dreamcatcher image created with artificial intelligence (AI)
    posted to a social media platform
  prefs: []
  type: TYPE_NORMAL
- en: Perhaps the user added `#AIArt` and `#Dreamcatcher` and tagged a friend who
    posts similar content to *Figure 8**.1*. Other platform users may search for others
    creating images with AI art platforms and want to follow the user or like/share
    the content. This provides more connections for the user and expands their network.
  prefs: []
  type: TYPE_NORMAL
- en: The friend who is tagged may benefit from these new connections, as the new
    connections for this user visit the friend’s page. Additionally, friends of that
    friend who haven’t encountered the user may also connect with the user or like/share
    their content. This also expands the user’s network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Many social media platforms also connect users by creating interest pages or
    groups where users with similar interests can post content, connect, and discuss
    the topic. For instance, many social media platforms provide animal interest groups
    or pages with cute animal art or photographs, such as the animal art shown in
    *Figure 8**.2*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.2 – An AI art image of a baby elephant in a teacup surrounded by
    roses](img/B21087_08_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.2 – An AI art image of a baby elephant in a teacup surrounded by roses
  prefs: []
  type: TYPE_NORMAL
- en: These interest groups encourage connections between users and the sharing of
    searchable content to grow the group’s membership (sometimes encouraged by advertising
    optimization algorithms or other paid users, including groups themselves in some
    cases). Popular content tends to encourage group growth and interactions/connections
    between users in the group. Unpopular content tends to discourage growth.
  prefs: []
  type: TYPE_NORMAL
- en: The darker side of algorithms that encourage connection generation between users
    with similar interests and optimize content spread is the potential for conspiracy
    theories and misinformation spread, as well as promoting connections between racist
    or discriminatory groups. During the 2016 and 2020 United States presidential
    elections (and during the COVID-19 pandemic), misinformation spread rapidly across
    social media platforms. During pandemics or national crises, misinformation can
    create public panic, increase strain on resources, or precipitate higher death
    rates. Within the political realm, misinformation can sway election results or
    accelerate divides between different political groups.
  prefs: []
  type: TYPE_NORMAL
- en: 'Algorithms that encourage the evolution of a social network to increase the
    number of likes by connecting people who probabilistically will like other users’
    content or views of related advertisements can inadvertently do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Promote the spread of misinformation among users likely to like or comment on
    it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encourage connections between users sharing misinformation or harmful content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a feedback loop that perpetuates this problem on the social network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This can happen on social media platforms as well as community groups, internet
    chatrooms, and other forums. While promoting more cat memes may not be harmful
    (minus the potential for time wasted looking at cat memes), promoting racist ideologies
    or encouraging religious violence is quite harmful.
  prefs: []
  type: TYPE_NORMAL
- en: Triadic closure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most of the network evolution algorithm impacts result from a network property
    called **triadic closure**. Triadic closure on social networks roughly relies
    on the premise that friends of a user’s friends in a network might know the user
    in real life but not be connected yet. This is a direct connection-based instance
    of triadic closure in social networks. Another user who shares a friend group
    with many of our user’s friends likely knows that user (or would be a good connection
    for the user based on the shared social network). In addition, other users might
    share many interests with the user (the premise of many friend suggestion algorithms);
    this is a metadata-based instance of triadic closure, where connection formation
    hinges on similarity of user metadata rather than shared connections.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider Pieter, Kwame, and Pablo. All three enjoy football, software engineering,
    and hiking. Pablo and Pieter know each other, as do Pieter and Kwame; however,
    we don’t know if Kwame and Pablo know each other (*Figure 8**.3*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.3 – A diagram of the known relationships among our three football
    fans](img/B21087_08_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.3 – A diagram of the known relationships among our three football fans
  prefs: []
  type: TYPE_NORMAL
- en: Given the two relationships that are known, along with the shared interest metadata,
    it is likely that Kwame and Pablo know each other, as well (or would get along
    if they connected). The percentage of open triads on a network measures the overall
    triadic openness of the network. Networks with a high percentage of open triads
    have a high potential for evolution over time as friends of friends or individuals
    with similar interests connect over shared content or group membership. Now that
    we know a bit more about relationships and how they can evolve over time, let’s
    dig deeper into spreading processes over evolving networks.
  prefs: []
  type: TYPE_NORMAL
- en: A deeper dive into spreading on networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we understand a bit about how networks can change over time, let’s
    see how we can represent these networks in Python and compute spreading processes
    such as epidemic models over time on a dynamic network. Python provides several
    tools to help us both visualize and analyze dynamic networks as we have in prior
    chapters. Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: Dynamic network introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can track changes over a network through time by keeping track of connections
    at different time points. Let’s consider a pride of lions in which individuals
    interact periodically over the course of the day. *Figure 8**.4* shows this example
    network with timestamps to track edges:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.4 – An example of a dynamic network with timestamps](img/B21087_08_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.4 – An example of a dynamic network with timestamps
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 8**.4* shows an example of a dynamic lion network with an evolving
    structure of edges and vertices that can be stamped with time information. Python
    provides a handy package to create a network such as this. The `NDlib` package
    utilizes `DyNetx` to model time-evolving graphs, which utilizes several key primitives
    from `DyNetx` to create and analyze dynamic networks. This provides a powerful
    framework for working with dynamic networks in the real world. This is particularly
    valuable in fields such as epidemiology, social network analysis, and transportation
    systems, where understanding temporal dynamics is essential. Let’s explore this
    package by creating *Figure 8**.4* using `Script 8.1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Once we have *Figure 8**.4* created, we can return a list of snapshots, each
    of which represents a static view of the lion network at different points in time.
    These snapshots are essentially instances of the graph at different timestamps.
    Let’s add to `Script 8.1` to show these plots:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We can print the list of edges for each snapshot, as well. Let’s add to `Script
    8.1` to get a list of edges at each time point:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This should give us the following analysis of edges at each time point, shown
    next:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Understanding edge structure at each time point is critical in the assessment
    of network structure and properties that facilitate flow on the network, such
    as hubs and bridges. Visualization and edge lists provide us a way to summarize
    information, as well, which might provide added insight into, say, an epidemic
    through a small population. Moving away from our lion example, let’s consider
    badge tracking in an office setting during the outbreak of a new disease (such
    as COVID-19). Different individuals will interact with different people and different
    numbers of people in the office on different days, depending on their schedules.
    Lists of edges that exist at different time points and visualizations of interactions
    among employees can help researchers track the new outbreak and calculate important
    epidemic model parameters to understand the potential impact of the disease on
    a larger population.
  prefs: []
  type: TYPE_NORMAL
- en: 'Just as connections between individuals can change over time, so can the individuals
    in the network themselves. Perhaps one employee is out sick or takes a personal
    day, thus dropping out of the network at that time point. With `DyNetx`, we can
    also create an interaction network to model a dynamic structure in which both
    vertices and edges can appear and disappear as time evolves. Returning to *Figure
    8**.4*, let’s add to `Script 8.1` to create the following interaction stream:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This script creates an interaction list for each time point, denoting interactions
    that exist in the network. While we don’t have individual lions leaving or entering
    our network, lion interactions do change, and lions may or may not have interactions
    with other lions in the network for a given time point. Let’s look a bit further
    at the output to see which time points involve the most and least interaction
    among the network lions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The first two values specify the vertices participating in an edge. The third
    value designates the type of edge operation, with `'+'` indicating an appearance
    (edge creation) and `'-'` denoting vanishing (edge removal). The last value signifies
    the timestamp associated with the edge operation. For instance, we can see that
    lion F establishes multiple interactions within the network at time point `1`.
    We can also see that lions `D` and `E`, whose interaction began at the 0th time
    point, cease interaction at time point `2`.
  prefs: []
  type: TYPE_NORMAL
- en: This type of information is critical for epidemic tracking, as it allows us
    to narrow down contacts to perform contact tracing. **Contact tracing** involves
    working backward through time and interactions among impacted individuals to find
    the original patient (**patient zero**) who was infected with the disease of interest.
    This allows epidemiologists to determine the geographic region from which the
    outbreak started as well as trace its evolution over time and space from patient
    zero. Some diseases mutate rapidly, which complicates the development of a treatment.
    What works today may not work with the next mutation. This is why flu vaccines
    are typically given annually, as flu strains mutate regularly. However, some diseases
    mutate very slowly or not at all, allowing for effective treatments or vaccines.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know a bit about dynamic network construction in Python, let’s explore
    **susceptible-infected-resistant** (**SIR**) models in a bit more depth than we
    did in [*Chapter 3*](B21087_03.xhtml#_idTextAnchor042).
  prefs: []
  type: TYPE_NORMAL
- en: SIR models, Part Two
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In [*Chapter 3*](B21087_03.xhtml#_idTextAnchor042), we explored SIR models
    to track network spreading processes, but we did not go into technical detail
    regarding the differential equations. In this section, we will dive a bit further
    into SIR model mathematics. Let’s start by defining the terms we’ll use in our
    model:'
  prefs: []
  type: TYPE_NORMAL
- en: '*S(t)* represents the number of susceptible individuals at time *t*: those
    who do not have the disease but can contract it'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*I(t)* represents the number of infectious individuals at time *t*: those who
    are actively infected and able to pass along the disease to susceptible individuals'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*R(t)* represents the number of recovered individuals at time *t*: those who
    no longer are infected and cannot be reinfected due to immunity'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**beta** (*β*) is the transmission rate of infected individuals to a population
    of susceptible individuals'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**gamma** (*γ*) is the recovery rate (the rate at which infected individuals
    become recovered individuals)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*N* is the total population size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The populations of susceptible, infected, and recovered individuals will change
    over time as individuals become infected and later recover. We can define the
    population numbers at each time point by relating these populations to the transmission
    and recovery rates in a series of equations defined by time. The susceptible population
    will decline as disease is transmitted from infected individuals to susceptible
    individuals. The infected population may grow or decline at a given time point
    as more susceptible individuals become infected and as more infected individuals
    recover. The recovered population will grow over time as infected individuals
    recover from the disease.
  prefs: []
  type: TYPE_NORMAL
- en: 'For more technically minded readers, we can arrange these terms to define a
    system of differential equations governing spread and recovery within a population
    of susceptible individuals, as shown next:'
  prefs: []
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mfrac><mrow><mi>d</mi><mi>S</mi></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mrow><mi>β</mi><mi>I</mi><mi>S</mi></mrow><mi>N</mi></mfrac><mo>,</mo></mrow></mrow></math>](img/1.png)'
  prefs: []
  type: TYPE_IMG
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mfrac><mrow><mi>d</mi><mi>I</mi></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>β</mi><mi>I</mi><mi>S</mi></mrow><mi>N</mi></mfrac><mo>−</mo><mi>γ</mi><mi>I</mi><mo>,</mo></mrow></mrow></math>](img/2.png)'
  prefs: []
  type: TYPE_IMG
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mfrac><mrow><mi>d</mi><mi>R</mi></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mi>γ</mi><mi>I</mi></mrow></mrow></math>](img/3.png)'
  prefs: []
  type: TYPE_IMG
- en: A high transmission rate coupled with a low recovery rate will yield a large
    population of infected individuals. A low transmission rate with a high recovery
    rate will result in a slow or fizzling-out epidemic in the population.
  prefs: []
  type: TYPE_NORMAL
- en: However, interactions within a population are rarely random, as assumed by the
    SIR equations. Dynamic networks provide a way to capture interactions over time,
    leading to more accurate models of transmission within a population of interest
    or allowing for more accurate planning through simulated models of interaction
    levels within a population of interest. Let’s build on [*Chapter 3*](B21087_03.xhtml#_idTextAnchor042)’s
    discussion of epidemics by introducing some new network metrics that influence
    epidemic spread.
  prefs: []
  type: TYPE_NORMAL
- en: Factors influencing spread
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [*Chapter 3*](B21087_03.xhtml#_idTextAnchor042), we examined the importance
    of bridges and hubs to the spread of a music trend or epidemic across networks.
    Since then, we’ve considered many network centrality metrics that relate to the
    concepts of hubs and bridges. Let’s briefly review a few of these centrality metrics.
  prefs: []
  type: TYPE_NORMAL
- en: 'Hubness can be assessed with several centrality metrics, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Degree centrality (defined in [*Chapter 6*](B21087_06.xhtml#_idTextAnchor078))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PageRank centrality (defined in [*Chapter 6*](B21087_06.xhtml#_idTextAnchor078))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hubness centrality (defined in [*Chapter 6*](B21087_06.xhtml#_idTextAnchor078))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Degree centrality is the simplest and most related to spreading processes on
    a network. The number of connections an infected vertex has to other vertices
    impacts the ability of an infected vertex to spread the disease to its immediate
    neighbors. The combination of degree centralities across the network impacts the
    overall ability of a disease to spread globally. Sparse networks with very low
    degree centralities don’t offer chances for the disease to infect many individuals
    at the same time, leading to a situation where public health workers can effectively
    implement strategies such as isolation and contact tracing without being overwhelmed
    by many infected patients at a given time point.
  prefs: []
  type: TYPE_NORMAL
- en: However, networks with very high degree centralities likely include many hubs
    or a single large hub. A large hub allows one infected individual to pass along
    the disease to many others, who also have many contacts who can become infected.
    This means that public health resources are easily overwhelmed at the start of
    an epidemic, and the chances of containing such an epidemic before many people
    are infected are quite low. We saw this in many global cities during COVID-19,
    and citywide shutdowns became necessary to avoid overwhelming healthcare systems;
    rural areas did not experience the same rapid spikes of infection rates that we
    saw in large cities.
  prefs: []
  type: TYPE_NORMAL
- en: Bridges also play an important role in epidemic modeling on networks. If two
    large hubs are not connected, it’s easy to isolate one hub from the other to stop
    an epidemic from spreading from one hub to the other, as we simply ensure that
    no bridges are built between the two hubs until the epidemic has ended in the
    infected hub. Bridges connecting the two hubs provide an opportunity for the bridge
    vertex/vertices to become infected and pass the infection from one community to
    another. Thus, bridges provide an opportunity for infection to spread and become
    a regional or global problem rather than a local community problem.
  prefs: []
  type: TYPE_NORMAL
- en: Recall that bridging properties can be measured through **betweenness centrality
    (**defined in[*Chapter 6*](B21087_06.xhtml#_idTextAnchor078)**)**, which measures
    the number of a network’s shortest paths that pass through a vertex. Essentially,
    this measures the importance of each vertex to spreading processes on the network.
    A vertex with a high betweenness centrality represents a high chance of passing
    a disease to other parts of a population should that vertex become infected. Isolating
    or vaccinating vertices with a high betweenness centrality can disrupt disease
    spread on a network, and these individuals represent a chance to make a big impact
    on overall epidemic severity with limited resources. Within the context of COVID-19,
    frequent international travelers served as bridges between countries. Halting
    international travel from infected areas to areas not yet impacted allowed small
    nations, such as those on Caribbean islands, to avoid epidemic spread to their
    populations.
  prefs: []
  type: TYPE_NORMAL
- en: '**Forman-Ricci curvature centrality** (defined in [*Chapter 6*](B21087_06.xhtml#_idTextAnchor078))
    accounts for both bridging properties and hub properties within a network by considering
    edges connected to other edges through a set of vertices. Recent studies suggest
    that Forman-Ricci curvature can find edges and vertices important to spreading
    processes and, thus, serves as an effective metric to use in epidemic simulations
    where vertices are isolated or otherwise taken out of a population (through vaccination,
    for instance).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Eccentricity**, the maximum distance from a vertex to another vertex in a
    graph, is another metric commonly used to measure the potential impact of an epidemic
    at a population level. The **radius** of a network is the smallest eccentricity
    value across network vertices, and the **diameter** of a network is the largest
    eccentricity value across network vertices. Dense networks have smaller diameters
    than sparse networks, as vertices tend to be more interconnected (allowing for
    greater spread potential in shorter periods of time).'
  prefs: []
  type: TYPE_NORMAL
- en: Both radius and diameter bound the behavior of differential equations, such
    as our SIR model, on a network. While the theoretical proofs are beyond the scope
    of this book, we’ll explore radius and diameter in practice with a real-world
    simulation of two wildlife epidemic datasets in the next section. Let’s get started
    by exploring our datasets.
  prefs: []
  type: TYPE_NORMAL
- en: Example with evolving wildlife interaction datasets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We collected two datasets on within-species wildlife interactions (interactions
    involving animals of the same species) over short periods of time.
  prefs: []
  type: TYPE_NORMAL
- en: The first dataset includes the observation of 4 crocodiles in a South Florida
    lagoon across 15-minute intervals over 12 time periods after a cold front passed
    through the area, prompting more crocodiles to seek out sunny shorelines. Social
    interactions between crocodiles were defined as animals that interacted within
    a single 15-minute period. Connections were noted for each 15 minutes, giving
    a dynamic network of crocodile social interactions across 12 time periods.
  prefs: []
  type: TYPE_NORMAL
- en: The second dataset includes the observation of 7 blue herons interacting at
    a bait ball of migrating fish in a South Florida lagoon captured across 5-minute
    intervals over 10 time periods. Interaction among blue herons was defined as herons
    occupying the same cubic meter of space above the bait ball. Connections were
    noted for each 5 minutes, giving a dynamic network of blue heron social interactions
    across 10 time periods. Populations were initially separated into two nesting
    communities, with two herons in one community and five herons in the other community.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started by examining the epidemic dynamics and centrality metrics
    on the `Crocodile` `Network` dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Crocodile network
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We’ll first consider our crocodile network, where 4 crocodiles interact over
    the course of 3 hours. `Script 8.2` loads the relevant packages and creates our
    initial set of networks over time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '*Figure 8**.5* shows the second time point plot, where two sets of crocodiles
    interacted with another crocodile:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.5 – The second time period plot of the crocodile network](img/B21087_08_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.5 – The second time period plot of the crocodile network
  prefs: []
  type: TYPE_NORMAL
- en: 'We can track the changes in crocodile interaction over time by adding to `Script
    8.2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives the following interaction changes at time points where they occurred:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We can see that interactions change slowly and then become more frequent toward
    the end of our observation period. This may impact the dynamics of an epidemic,
    as crocodiles have more varied interactions later in the observation period. In
    addition, early additions of interactions provide the opportunity for a disease
    to spread across the population, as crocodiles begin to interact with each other.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s consider an epidemic that starts with the infection of one crocodile
    with a high infection rate (`beta` = `0.3`) relative to the recovery rate (`gamma`
    = `0.05`). This corresponds to a moderately infectious disease passing through
    our crocodile population that results in a long infection period. Crocodile pox
    is one such disease that can cause mortality in juvenile crocodiles. Infected
    animals tend to be symptomatic for weeks or months. Infection of cells tends to
    happen rapidly with a low incubation period (minutes). While the exact parameters
    for infection rate and recovery rate are not known, these estimates are good proxies
    for the infection. Let’s add to `Script 8.2` to simulate crocodile pox spread
    in our population of crocodiles as they interact over 12 time periods:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '*Figure 8**.6* summarizes the dynamics of this epidemic among our crocodile
    sample on our run of the algorithm. Given that this is a probabilistic model,
    your epidemic may proceed a bit differently with respect to time points or the
    number of infected crocodiles at a given point in time. The plot summarizes the
    number of susceptible, infected, and removed (recovered) crocodiles at each time
    point of the epidemic.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In our trial, this crocodile pox epidemic starts rapidly with the infection
    of a single crocodile at period `0` and quickly infects the entire population
    by period `5`, with none of the animals recovered by the end of observation. Any
    new animals introduced into the population who were not immune to crocodile pox
    would likely catch crocodile pox soon after entering the population and remain
    sick throughout the observation period. This suggests a need to quarantine the
    infected crocodiles to avoid epidemic spread in wild populations (perhaps by isolation
    and treatment in a local rehabilitation center):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.6 – The viral dynamics of crocodile pox in our crocodile network](img/B21087_08_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.6 – The viral dynamics of crocodile pox in our crocodile network
  prefs: []
  type: TYPE_NORMAL
- en: 'We can examine how key network metrics differ over time to examine any changes
    that might have contributed to the spread of crocodile pox in our crocodile network
    animals. From our construction of the dynamic network, we can see increases in
    population mixing from periods `0`-`5` in the Crocodile Network dataset, where
    all crocodiles can infect each other by the end of period `5` (corresponding to
    the time point where all crocodiles, in fact, have been infected). Let’s add to
    `Script 8.2` so that we can calculate betweenness centrality across the vertices
    in the network and the overall radius and diameter of the network at each time
    point:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that we have infinite values observed when vertices are isolated. We’ll
    skip calculations for those time periods by adding a `try`/`except` clause to
    our script. The output should show a plot like *Figure 8**.7* (corresponding to
    the first time point), showing betweenness centrality across vertices:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.7 – Betweenness centrality plot for the first time point of observation
    in the crocodile network](img/B21087_08_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.7 – Betweenness centrality plot for the first time point of observation
    in the crocodile network
  prefs: []
  type: TYPE_NORMAL
- en: 'Below each plot, we can see a summary of the timestamp, the number of connected
    vertices, the maximum degree of the network, the network radius, and the network
    diameter for time points where connected vertices exist. *Figure 8**.8* shows
    the output from the first time point of observation, where the radius and diameter
    of the network are both `1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.8 – Output for the first time point of observation in the Crocodile
    Network dataset](img/B21087_08_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.8 – Output for the first time point of observation in the Crocodile
    Network dataset
  prefs: []
  type: TYPE_NORMAL
- en: Note that the maximum diameter observed in our dynamic `Crocodile Network` dataset
    is a diameter of `2`. Several of these larger diameters occur during the infection
    period, where more crocodiles are interacting with each other (and forming new
    interactions). In real-world epidemics, population mixing plays an important role
    in epidemic spread dynamics, with more mixing tending to produce more severe epidemics
    that include more cases across populations and a longer duration of epidemic.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand a bit more about dynamic networks and epidemic models,
    let’s turn to a larger `Heron Network` dataset, where we have individuals from
    two separate nesting populations interacting at a bait ball, which is closer to
    how a real epidemic involving multiple populations might start.
  prefs: []
  type: TYPE_NORMAL
- en: Heron network
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s get started with our `Heron Network` dataset. `Script 8.3` creates a
    heron network and plots each time point in this network:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '*Figure 8**.9* shows the first time point in our heron network, where the five
    herons from a nesting community have interacted with each other at our bait ball:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.9 – The first time point plot of our heron network](img/B21087_08_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.9 – The first time point plot of our heron network
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that our heron network shows many different interaction patterns over
    the observation duration. This will impact our viral dynamics, as different animals
    interact at different time periods. Let’s consider an infectious disease that
    spreads rapidly (`beta` = `0.4`) and resolves at a slower pace (`gamma` = `0.2`).
    Bird flu epidemics tend to spread rapidly, and these parameters may represent
    a novel bird flu variant passing through a population. In a real epidemic of bird
    flu, longer latency to infection means we’d need to observe the population over
    a period of longer than 50 minutes (perhaps over the course of several days).
    However, let’s see how our proposed epidemic spreads through our heron population
    based on interactions by adding to `Script 8.3`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'This simulation shows an epidemic that infects nearly half of our heron population
    by the end of our observation period, with low levels of infection and recovery
    by the second time point. New infections occur periodically, and one heron appears
    to have a longer infection period than expected (period 4–7). *Figure 8**.10*
    visualizes the dynamics of this epidemic (which may differ in your run, given
    that the infection model is probabilistic):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.10 – A visualization of an epidemic on our heron network](img/B21087_08_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.10 – A visualization of an epidemic on our heron network
  prefs: []
  type: TYPE_NORMAL
- en: Were this epidemic to happen in a real population of herons, it may be possible
    to quarantine the infected heron showing a long infection period to avoid further
    spread in the population. In conserved populations such as those in wildlife preserves
    or rehabilitation centers and populations bred for human consumption, this strategy
    is common to avoid disease spread across animals. In the wild, it is difficult
    to identify infected animals or even detect an outbreak until many animals turn
    up sick in areas that are monitored.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now consider network metrics over the course of the epidemic by adding
    to `Script 8.3`, again adding a `try`/`except` clause, as herons are isolated
    at times during the period of observation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'For the first period of observation, we obtain a betweenness centrality graph
    that shows large variations in values, as shown in *Figure 8**.11*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.11 – A plot of betweenness centrality for time period 1 in our heron
    network](img/B21087_08_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.11 – A plot of betweenness centrality for time period 1 in our heron
    network
  prefs: []
  type: TYPE_NORMAL
- en: 'Betweenness centrality varies greatly across the period of observation, from
    nearly `1` to `0`. The diameter varies from `1` (time point `6`) to `6` (time
    point `8`); the radius varies from `1` (time point `6`) to `3` (time points `7`
    and `8`). Isolated vertices are common, and we see the population split up in
    interactions (time points `3` and `9`), where some herons interact in different
    locations and some do not interact at all. *Figure 8**.12* shows a split heron
    population example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.12 – A split heron population interaction pattern, observed at point
    3](img/B21087_08_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.12 – A split heron population interaction pattern, observed at point
    3
  prefs: []
  type: TYPE_NORMAL
- en: Frequent changes in interaction patterns likely limited this epidemic’s potential
    spread, as animals interacted infrequently enough and for short enough time periods
    to limit exposure to infectious individuals relative to the frequent and lasting
    interactions noted in the crocodile population. In the wild, the frequency of
    interaction and duration of interaction among animals of the same species play
    a critical role in determining the likelihood of population epidemics within a
    species sharing a common geography. Solitary species tend to have lower rates
    of infectious disease spread than species forming large herds or flocks.
  prefs: []
  type: TYPE_NORMAL
- en: Naturally occurring phenomena such as bait balls or temporary water sources
    after a storm provide time-limited interaction opportunities for disease to spread
    among solitary species or isolated herds. As such, they present an opportunity
    for conservationists to study epidemic potentials within populations of animals
    that may not interact frequently aside from a one-time event involving needed
    resources such as food or water. Models such as the ones we’ve examined provide
    the tools for estimating the impact of infectious disease on populations that
    are normally isolated but mix at such events.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored dynamic networks and how changes in network structure
    over time impact epidemic spread using examples of disease spread among crocodile
    and blue heron populations. We also explored the relationship between network
    metrics and epidemic spread, noting patterns of connectivity associated with higher
    rates of spread and more severe epidemics within a hypothesized population. These
    tools are critical to understanding trends and epidemics spread across real-world
    networks, allowing researchers to plan out critical infrastructure to deal with
    crises such as COVID-19 or Ebola in human populations, infectious diseases threatening
    endangered animal populations, fake news before a country’s elections, or dangerous
    behavioral trends spreading among youth on social media.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will shift focus to **machine learning** (**ML**) on
    networks.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bianconi, G., Darst, R. K., Iacovacci, J., & Fortunato, S. (2014). Triadic closure
    as a basic generating mechanism of communities in complex networks. *Physical
    Review E,* *90(4), 042806.*
  prefs: []
  type: TYPE_NORMAL
- en: Büttner, K., Krieter, J., Traulsen, A., & Traulsen, I. (2016). Epidemic spreading
    in an animal trade network–Comparison of distance‐based and network‐based control
    measures. *Transboundary and Emerging Diseases,* *63(1), e122-e134.*
  prefs: []
  type: TYPE_NORMAL
- en: Fèvre, E. M., Bronsvoort, B. M. D. C., Hamilton, K. A., & Cleaveland, S. (2006).
    Animal movements and the spread of infectious diseases. *Trends in microbiology,*
    *14(3), 125-131.*
  prefs: []
  type: TYPE_NORMAL
- en: Ganesh, A., Massoulié, L., & Towsley, D. (2005, March). The effect of network
    topology on the spread of epidemics. *In Proceedings IEEE 24th Annual Joint Conference
    of the IEEE Computer and Communications Societies. (Vol. 2, pp.* *1455-1466).
    IEEE.*
  prefs: []
  type: TYPE_NORMAL
- en: Garin, F., Varagnolo, D., & Johansson, K. H. (2012). Distributed estimation
    of diameter, radius and eccentricities in anonymous networks. *IFAC Proceedings
    Volumes,* *45(26), 13-18.*
  prefs: []
  type: TYPE_NORMAL
- en: 'Giuggioli, L., Pérez-Becker, S., & Sanders, D. P. (2013). Encounter times in
    overlapping domains: application to epidemic spread in a population of territorial
    animals. *Physical review letters,* *110(5), 058103.*'
  prefs: []
  type: TYPE_NORMAL
- en: Liu, C., & Zhang, Z. K. (2014). Information spreading on dynamic social networks.
    *Communications in Nonlinear Science and Numerical Simulation,* *19(4), 896-904.*
  prefs: []
  type: TYPE_NORMAL
- en: Lou, T., Tang, J., Hopcroft, J., Fang, Z., & Ding, X. (2013). Learning to predict
    reciprocity and triadic closure in social networks. *ACM Transactions on Knowledge
    Discovery from Data (TKDD),* *7(2), 1-25.*
  prefs: []
  type: TYPE_NORMAL
- en: 'Martcheva, M. (2014). Avian flu: modeling and implications for control. *Journal
    of Biological Systems,* *22(01), 151-175.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Milli, L. (2018). Understanding spreading and evolution in* *complex networks.*'
  prefs: []
  type: TYPE_NORMAL
- en: Moore, R. L., Isberg, S. R., Shilton, C. M., & Milic, N. L. (2017). Impact of
    poxvirus lesions on saltwater crocodile (Crocodylus porosus) skins. *Veterinary
    microbiology,* *211, 29-35.*
  prefs: []
  type: TYPE_NORMAL
- en: Read, J. M., Eames, K. T., & Edmunds, W. J. (2008). Dynamic social networks
    and the implications for the spread of infectious disease. *Journal of the Royal
    Society Interface,* *5(26), 1001-1007.*
  prefs: []
  type: TYPE_NORMAL
- en: 'Sarker S, Isberg SR, Moran JL, Araujo R, Elliott N, Melville L, Beddoe T, Helbig
    KJ. Crocodilepox Virus Evolutionary Genomics Supports Observed Poxvirus Infection
    Dynamics on Saltwater Crocodile (Crocodylus porosus). *Viruses. 2019 Dec 2;11(12):1116\.
    doi: 10.3390/v11121116\. PMID: 31810339;* *PMCID: PMC6950651.*'
  prefs: []
  type: TYPE_NORMAL
- en: Sekara, V., Stopczynski, A., & Lehmann, S. (2016). Fundamental structures of
    dynamic social networks. *Proceedings of the national academy of sciences,* *113(36),
    9977-9982.*
  prefs: []
  type: TYPE_NORMAL
- en: Stewart, J. D., Barroso, A., Butler, R. H., & Munns, R. J. (2018). Caught at
    the surface. *Ecology,* *99(8), 1894-1896.*
  prefs: []
  type: TYPE_NORMAL
- en: van Dam, E. R., & Kooij, R. E. (2007). The minimal spectral radius of graphs
    with a given diameter. *Linear Algebra and its Applications,* *423(2-3), 408-419.*
  prefs: []
  type: TYPE_NORMAL
- en: 'Wang, Y., Cao, J., Alofi, A., Abdullah, A. M., & Elaiw, A. (2015). Revisiting
    node-based SIR models in complex networks with degree correlations. *Physica A:
    Statistical Mechanics and its Applications,* *437, 75-88.*'
  prefs: []
  type: TYPE_NORMAL
