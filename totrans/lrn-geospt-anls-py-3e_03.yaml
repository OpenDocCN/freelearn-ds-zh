- en: Learning Geospatial Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习地理空间数据
- en: One of the most challenging aspects of geospatial analysis is the data. Geospatial
    data already includes dozens of file formats and database structures and continues
    to evolve and grow to include new types of data and standards. Additionally, almost
    any file format can technically contain geospatial information and is done by
    simply adding a location.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间分析中最具挑战性的方面之一是数据。地理空间数据已经包括数十种文件格式和数据库结构，并且仍在不断发展和增长，以包括新的数据类型和标准。此外，几乎任何文件格式在技术上都可以包含地理空间信息，只需简单地添加一个位置即可。
- en: 'In this chapter, we will look at the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下主题：
- en: Getting an overview of common data formats
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解常见的数据格式
- en: Examining some common traits of geospatial data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查地理空间数据的常见特征
- en: Understanding spatial indexing
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解空间索引
- en: Knowing the most widely used vector data types
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解最广泛使用的矢量数据类型
- en: Understanding raster data types
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解栅格数据类型
- en: We'll also gain some insight into newer, more complex types, including point
    cloud data, web services, and geospatial databases.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将对一些更复杂的新类型有所了解，包括点云数据、网络服务和地理空间数据库。
- en: Getting an overview of common data formats
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解常见的数据格式
- en: 'As a geospatial analyst, you may frequently encounter the following general
    data types:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 作为地理空间分析师，你可能会经常遇到以下几种常见的数据类型：
- en: Spreadsheets and **comma-separated values** (**CSV files**) or **tab-separated
    values** (**TSV files**)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子表格和**逗号分隔值**（**CSV 文件**）或**制表符分隔值**（**TSV 文件**）
- en: Geotagged photos
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标注地理信息的照片
- en: Lightweight binary points, lines, and polygons
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级二进制点、线和多边形
- en: Multi-gigabyte satellite or aerial images
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多吉字节卫星或航空图像
- en: Elevation data such as grids, point clouds, or integer-based images
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高程数据，如网格、点云或基于整数的图像
- en: XML files
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XML 文件
- en: JSON files
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON 文件
- en: Databases (both servers and file databases)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库（包括服务器和文件数据库）
- en: Web services
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络服务
- en: Geodatabases
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地理数据库
- en: Each format contains its own challenges for access and processing. When you
    perform analysis on data, you usually have to do some form of preprocessing first.
    You might clip or subset a satellite image of a large area down to just your area
    of interest, or you might reduce the number of points in a collection to just
    the ones meeting certain criteria in your data model. A good example of this type
    of preprocessing is the `SimpleGIS` example that we looked at the end of [Chapter
    1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml), *Learning about Geospatial Analysis
    with Python*. The state dataset included just the state of Colorado rather than
    all 50 states. The city dataset included only three sample cities demonstrating
    three levels of population, along with different relative locations.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 每种格式都包含其自身的访问和处理挑战。当你对数据进行分析时，通常需要先进行某种形式的预处理。你可能需要将大区域的卫星图像裁剪或子集化到仅包含你感兴趣的区域，或者你可能需要减少集合中的点数，只保留符合你数据模型中某些标准的数据。这种类型预处理的良好例子是我们在[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)末尾查看的`SimpleGIS`示例，*使用Python学习地理空间分析*。该州数据集只包含科罗拉多州而不是所有50个州。城市数据集只包含三个样本城市，展示了三个不同的人口水平，以及不同的相对位置。
- en: The common geospatial operations in [Chapter 1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml), *Learning
    about Geospatial Analysis with Python*, are the building blocks for this type
    of preprocessing. However, it is important to note that there has been a gradual
    shift in the field of geospatial analysis toward readily available basemaps. Until
    around 2004, geospatial data was difficult to acquire and desktop computing power
    was much less than it is today. Preprocessing data was an absolute first step
    for any geospatial project. However, in 2004, Google released Google Maps, which
    wasn't long after Google Earth. Microsoft had also been developing a technology
    acquisition called **TerraServer**, which they relaunched around this time. In
    2004, the **Open Geospatial Consortium** (**OGC**) updated the version of its
    **Web Map Service** (**WMS**), which was growing in use and popularity. This same
    year, Esri also released version 9 of its ArcGIS server system. These innovations
    were driven by Google's web map tiling model, which allowed for smooth, global,
    scrolling maps at many different resolutions, and were often called **slippy maps**.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)，“使用Python学习地理空间分析”，中提到的常见地理空间操作是该类型预处理的基础。然而，值得注意的是，地理空间分析领域已经逐渐转向易于获取的基础地图。直到大约2004年，地理空间数据获取困难，桌面计算能力远不及今天。预处理数据是任何地理空间项目的绝对第一步。然而，在2004年，谷歌发布了谷歌地图，这并不久于谷歌地球之后。微软也一直在开发一项名为**TerraServer**的技术收购，他们大约在这个时候重新推出了这项技术。2004年，**开放地理空间联盟**（**OGC**）更新了其**网络地图服务**（**WMS**）的版本，该服务正在增长使用和受欢迎程度。同年，Esri也发布了其ArcGIS服务器系统的第9版。这些创新是由谷歌的网页地图瓦片模型驱动的，它允许在不同分辨率下提供平滑、全球、可滚动的地图，通常被称为**滑块地图**。
- en: People used map servers on the internet before Google Maps, most famously with
    the MapQuest driving directions website. However, these map servers offered only
    small amounts of data at a time and usually over limited areas. The Google tiling
    system converted global maps into tiered image tiles for both images and mapping
    data. These were served dynamically using JavaScript and the browser-based `XMLHttpRequest`
    API, more commonly known as **Asynchronous JavaScript and XML** (**AJAX**). Google's
    system scaled to millions of users using ordinary web browsers. More importantly,
    it allowed programmers to leverage JavaScript programming to create mashups so
    that they could use the Google Maps JavaScript API to add additional data to the
    maps. The mashup concept is actually a shared geospatial layers system. Users
    can combine and recombine data from different web services into a single map,
    as long as the data is web-accessible. Other commercial and open source systems
    quickly mimicked this concept.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在谷歌地图出现之前，人们已经在互联网上使用地图服务器，最著名的是MapQuest驾驶方向网站。然而，这些地图服务器一次只能提供少量数据，通常在有限的区域内。谷歌的瓦片系统将全球地图转换为图像和地图数据的分层图像瓦片。这些瓦片通过JavaScript和基于浏览器的`XMLHttpRequest`
    API动态提供，更常见的是**异步JavaScript和XML**（**AJAX**）。谷歌的系统可以扩展到数百万用户，使用普通的网络浏览器。更重要的是，它允许程序员利用JavaScript编程来创建混合应用，以便他们可以使用谷歌地图JavaScript
    API向地图添加额外的数据。混合应用的概念实际上是一个共享地理空间层系统。只要数据是网络可访问的，用户就可以将来自不同网络服务的组合和重组数据合并到一个地图中。其他商业和开源系统很快模仿了这一概念。
- en: Notable examples of distributed geospatial layers are **OpenLayers**, which
    provide an open source, Google-like API that has now gone beyond Google's API,
    offering additional features. Complimentary to OpenLayers is **OpenStreetMap**,
    which is the open source answer to the tiled map services consumed by systems
    such as OpenLayers. OpenStreetMap has global, street-level vector data and other
    spatial features that have been collected from available government data sources
    and the contributions of thousands of editors worldwide. OpenStreetMap's data
    maintenance model is similar to the way Wikipedia, the online encyclopedia, crowd
    sources information creation and updates for articles. Recently, even more mapping
    APIs have appeared, including Leaflet and Mapbox, which continue to increase in
    flexibility, simplicity, and capability.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式地理空间层的显著例子是**OpenLayers**，它提供了一个类似谷歌的开源API，现在已经超越了谷歌的API，提供了额外的功能。与OpenLayers相辅相成的是**OpenStreetMap**，它是开源的，是对OpenLayers等系统使用的瓦片地图服务的回应。OpenStreetMap拥有全球性的街道级矢量数据和其他空间特征，这些数据来自可用的政府数据源和来自全球数千名编辑者的贡献。OpenStreetMap的数据维护模式类似于在线百科全书维基百科，为文章的信息创建和更新提供众包。最近，甚至出现了更多的地图API，包括Leaflet和Mapbox，它们继续在灵活性、简单性和功能上增加。
- en: The mashup revolution had interesting and beneficial side effects on data. Geospatial
    data is traditionally difficult to obtain. The cost of collecting, processing,
    and distributing data kept geospatial analysis constrained to those who could
    afford this steep overhead cost by producing data or purchasing it. For decades,
    geospatial analysis was the tool of governments, very large organizations, and
    universities. Once the web mapping trend shifted to large-scale, globally tiled
    maps, organizations began essentially providing basemap layers for free in order
    to draw developers to their platform. The massively scalable global map system
    required massively scalable, high-resolution data to be useful. Geospatial software
    producers and data providers wanted to maintain their market share and kept up
    with the technology trend.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 混合革命对数据产生了有趣且有益的副作用。地理空间数据传统上难以获取。收集、处理和分发数据的成本使得地理空间分析仅限于那些能够通过生产数据或购买数据来承担这种高昂的前期成本的群体。几十年来，地理空间分析一直是政府、非常大的组织和大学的工具。一旦网络地图趋势转向大规模、全球瓦片地图，组织开始基本上免费提供基础图层，以吸引开发者使用他们的平台。大规模可扩展的全球地图系统需要大规模可扩展、高分辨率的数据才能发挥作用。地理空间软件生产商和数据提供商希望保持他们的市场份额，并跟上技术趋势。
- en: Geospatial analysts benefited greatly from this market shift in several ways.
    First of all, data providers began distributing data in a common projection called
    **Mercator**. The Mercator projection is a nautical navigation projection that
    was introduced over 400 years ago. As we mentioned in [Chapter 1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml),
    *Learning about Geospatial Analysis with Python*, all projections have practical
    benefits, as well as distortions. The distortion in the Mercator projection is
    its size. In a global view, Greenland appears bigger than the continent of South
    America. However, like every projection, it also has some benefits. Mercator preserves
    angles. Predictable angles allowed medieval navigators to draw straight bearing
    lines when plotting a course across oceans. Google Maps didn't launch with Mercator.
    However, it quickly became clear that roads in high and low latitudes met at odd
    angles on the map instead of the 90 degrees in reality.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间分析师从这一市场转变中受益匪浅。首先，数据提供商开始以一个称为**墨卡托投影**的通用投影来分发数据。墨卡托投影是一种400多年前引入的航海导航投影。正如我们在[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)中提到的，《用Python学习地理空间分析》，所有投影都有实际的好处，以及扭曲。墨卡托投影的扭曲是其大小。在全球视图中，格陵兰岛看起来比南美洲大陆还要大。然而，像每个投影一样，它也有一些好处。墨卡托保留了角度。可预测的角度使得中世纪的航海家在绘制穿越海洋的航线时能够画出直线航向线。谷歌地图最初并没有使用墨卡托投影。然而，很快就很明显，高纬度和低纬度的道路在地图上以奇特的角相遇，而不是现实中90度的角度。
- en: Since the primary purpose of Google Maps was street-level driving directions,
    Google sacrificed the global view accuracy for far better relative accuracy among
    streets when viewing a single city. Competing mapping systems followed suit. Google
    also standardized on the WGS 84 datum. This datum defines a specific spherical
    model of the Earth, called a **geoid**. This model defines the normal sea level.
    What's significant about this choice by Google is that the **Global Positioning
    System** (**GPS**) also uses this datum. Therefore, most GPS units default to
    this datum as well, making Google Maps easily compatible with raw GIS data.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于谷歌地图的主要目的是提供街级驾驶方向，谷歌牺牲了全球视图的准确性，以换取在查看单个城市时街道之间的相对更好的准确性。竞争性的地图系统也效仿了这一做法。谷歌还标准化了WGS
    84基准。这个基准定义了一个特定的地球球面模型，称为**大地水准面**。这个模型定义了正常海平面。谷歌做出这一选择的意义在于，**全球定位系统**（**GPS**）也使用这个基准。因此，大多数GPS设备默认使用这个基准，使得谷歌地图与原始GIS数据兼容变得容易。
- en: The Google variation of the Mercator projection is often called **Google Mercator**.
    The **European Petroleum Survey Group** (**EPSG**) assigns short numeric codes
    to projections as an easy way to reference them. Rather than waiting for the EPSG
    to approve or assign a code that was first only relevant to Google, they began
    calling the projection EPSG:900913, which is *Google* spelled with numbers. Later,
    EPSG assigned the code EPSG:3857, deprecating the older code. Most GIS systems
    recognize the two codes as synonymous. It should be noted that Google tweaked
    the standard Mercator projection slightly for its use; however, this variation
    is almost imperceptible. Google uses spherical formulas at all map scales, while
    the standard Mercator assumes an ellipsoidal form at large scales.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 墨卡托投影的谷歌变体通常被称为**谷歌墨卡托**。**欧洲石油调查组**（**EPSG**）为投影分配简短的数字代码，作为引用它们的一种简单方式。他们开始将投影称为EPSG:900913，即用数字拼写的*Google*。后来，EPSG分配了代码EPSG:3857，废弃了旧代码。大多数GIS系统将这两个代码视为同义的。需要注意的是，谷歌对其使用的标准墨卡托投影进行了轻微的调整；然而，这种变化几乎察觉不到。谷歌在所有地图比例尺上使用球面公式，而标准墨卡托在大比例尺上假设椭圆形状。
- en: 'The following image of the Mercator projection ([https://en.wikipedia.org/wiki/File:Tissot_mercator.png](https://en.wikipedia.org/wiki/File:Tissot_mercator.png))
    was taken from Wikipedia:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下墨卡托投影的图像（[https://en.wikipedia.org/wiki/File:Tissot_mercator.png](https://en.wikipedia.org/wiki/File:Tissot_mercator.png)）来自维基百科：
- en: '![](img/aa3f6516-3f64-4141-bf6c-3a82af6b95a6.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa3f6516-3f64-4141-bf6c-3a82af6b95a6.png)'
- en: 'It shows the distortion caused by the Mercator projection using Tissot''s indicatrix,
    which projects small ellipses of equal size on a map. The distortion of the ellipse
    clearly shows how the projection affects the size and distance: web mapping services
    have reduced the chore of hunting for data and much of the preprocessing for analysts
    to create basemaps. However, to create anything of value, you must understand
    geospatial data and how to work with it. This chapter provides an overview of
    the common data types and issues that you will encounter in geospatial analysis.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用蒂索的指示器展示了由墨卡托投影引起的扭曲，该指示器在地图上投影了大小相等的椭圆。椭圆的扭曲清楚地显示了投影如何影响大小和距离：网络地图服务减少了寻找数据的工作量，并为分析师创建基础图预处理的大部分工作。然而，要创建有价值的东西，你必须了解地理空间数据以及如何处理它。本章概述了你在地理空间分析中可能会遇到的一些常见数据类型和问题。
- en: 'Throughout this chapter, two terms will be commonly used:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，将常用两个术语：
- en: '**Vector data:** Vector data includes any format that minimally represents
    geolocation data using points, lines, or polygons.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矢量数据**：矢量数据包括任何使用点、线或多边形最小表示地理定位数据的格式。'
- en: '**Raster data:** Raster data includes any format that stores data in a grid
    of rows and columns. Raster data includes all image formats.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**栅格数据**：栅格数据包括任何以行和列的网格存储数据的格式。栅格数据包括所有图像格式。'
- en: These are the two primary categories under which most geospatial datasets can
    be grouped.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是大多数地理空间数据集可以归组的两个主要类别。
- en: 'If you want to see a projection that shows the relative size of continents
    more accurately, refer to the Goode homolosine projection: [https://en.wikipedia.org/wiki/Goode_homolosine_projection](https://en.wikipedia.org/wiki/Goode_homolosine_projection).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想看到更准确地显示大陆相对大小的投影，请参考古德同位素投影：[https://en.wikipedia.org/wiki/Goode_homolosine_projection](https://en.wikipedia.org/wiki/Goode_homolosine_projection)。
- en: Understanding data structures
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解数据结构
- en: Despite having dozens of formats, geospatial data has some common traits. Understanding
    these traits can help you approach and understand unfamiliar data formats by identifying
    the ingredients common to nearly all spatial data. The structure of a given data
    format is usually driven by its intended use.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有数十种格式，地理空间数据有一些共同的特点。了解这些特点可以帮助你通过识别几乎所有空间数据共有的成分来接近和理解不熟悉的数据格式。给定数据格式的结构通常由其预期用途驱动。
- en: Some data is optimized for efficient storage or compression, some is optimized
    for efficient access, some is designed to be lightweight and readable (web formats),
    while other data formats seek to contain as many different data types as possible.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一些数据是为了高效存储或压缩而优化的，一些是为了高效访问而优化的，一些是为了轻量级和可读性（网络格式）而设计的，而其他数据格式则试图包含尽可能多的不同数据类型。
- en: Interestingly, some of the most popular formats today are also some of the simplest
    and even lack features found in more capable and sophisticated formats. Ease of
    use is extremely important to geospatial analysts because so much time is spent
    integrating data into geographic information systems, as well as exchanging data
    among analysts. Simple data formats facilitate these activities the best.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，今天一些最受欢迎的格式也是最简单的一些，甚至缺乏在更强大和复杂的格式中找到的功能。对于地理空间分析师来说，易用性非常重要，因为他们花费大量时间将数据集成到地理信息系统，以及在分析师之间交换数据。简单的数据格式最能促进这些活动。
- en: Common traits
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见特性
- en: 'Geospatial analysis is an approach in which you apply information processing
    techniques to data with a geographic context. This definition contains the most
    important elements of geospatial data:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间分析是一种将信息处理技术应用于具有地理背景的数据的方法。这个定义包含了地理空间数据最重要的元素：
- en: '**Geolocation data**: Geolocation information can be as simple as a single
    point on the Earth referencing where a photo was taken. It can also be as complex
    as a satellite camera engineering model and orbital mechanics information being
    used to reconstruct the exact conditions and location under which the satellite
    captured the image.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地理位置数据**：地理位置信息可以简单到地球上的一个点，指明照片拍摄的位置。它也可以复杂到卫星相机工程模型和轨道力学信息被用来重建卫星捕获图像的确切条件和位置。'
- en: '**Subject information**: Subject information can also cover a wide range of
    possibilities. Sometimes, the pixels in an image are the data in terms of a visual
    representation of the ground. Other times, an image may be processed using multispectral
    bands, such as infrared light, to provide information that''s not visible in the
    image. Processed images are often classified using a structured color palette
    that is linked to a key, describing the information each color represents. Other
    possibilities include some form of database with rows and columns of information
    for each geolocated feature, such as the population associated with each city
    in our `SimpleGIS` from [Chapter 1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml),
    *Learning about Geospatial Analysis with Python*.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题信息**：主题信息也可以涵盖广泛的可能。有时，图像中的像素是地面的视觉表示中的数据。其他时候，图像可能使用多光谱波段（如红外光）进行处理，以提供图像中不可见的信息。处理后的图像通常使用与键相关联的结构化调色板进行分类，该键描述了每种颜色代表的信息。其他可能性包括某种形式的数据库，其中包含每个地理定位特征的信息行和列，例如我们来自[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)“使用Python学习地理空间分析”的`SimpleGIS`中每个城市的关联人口。'
- en: These two factors are present in every format that can be considered geospatial
    data. Another common feature of geospatial data is spatial indexing. Overview
    datasets are also related to indexing.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这些两个因素存在于所有可以被认为是地理空间数据的格式中。地理空间数据的另一个常见特性是空间索引。概览数据集也与索引有关。
- en: Understanding spatial indexing
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解空间索引
- en: Geospatial datasets are often very large files, easily reaching hundreds of
    megabytes or even several gigabytes in size. Geospatial software can be quite
    slow in trying to repeatedly access large files when performing analysis.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间数据集通常是非常大的文件，大小轻易达到数百兆字节，甚至达到数吉字节。在执行分析时，地理空间软件在尝试反复访问大文件时可能会相当慢。
- en: As discussed briefly in [Chapter 1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml),
    *Learning about Geospatial Analysis with Python*, spatial indexing creates a guide,
    which allows the software to quickly locate query results without examining every
    single feature in the dataset. Spatial indexes allow the software to eliminate
    possibilities and perform more detailed searches or comparisons on a much smaller
    subset of the data.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如在[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)“使用Python学习地理空间分析”中简要讨论的那样，空间索引创建了一个指南，允许软件快速定位查询结果，而无需检查数据集中每个单独的特征。空间索引允许软件消除可能性，并在数据的一个更小的子集上进行更详细的搜索或比较。
- en: Spatial indexing algorithms
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 空间索引算法
- en: Many spatial indexing algorithms are derivatives of well-established algorithms
    that have been used on non-spatial information for decades. The two most common
    spatial indexing algorithms are **Quadtree index** and **R-tree index**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 许多空间索引算法是几十年来用于非空间信息的已建立算法的衍生。最常见的前两个空间索引算法是**四叉树索引**和**R树索引**。
- en: Quadtree index
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 四叉树索引
- en: The Quadtree algorithm actually represents a series of different algorithms
    based on a common theme. Each node in a Quadtree index contains four children.
    These child nodes are typically square or rectangular in shape. When a node contains
    a specified number of features and more features are added, the node splits.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 四叉树算法实际上代表了一系列基于共同主题的不同算法。四叉树索引中的每个节点包含四个子节点。这些子节点通常是方形或矩形的。当一个节点包含指定数量的特征并且添加了更多特征时，节点会分裂。
- en: The concept of dividing a space into nested squares speeds up spatial searches.
    The software must only handle five points at a time and use simple greater-than/less-than
    comparisons to check whether a point is inside a node. Quadtree indexes are most
    commonly found in file-based index formats.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 将空间划分为嵌套正方形的概念可以加快空间搜索。软件只需一次处理五个点，并使用简单的大于/小于比较来检查一个点是否在节点内部。四叉树索引最常见于基于文件的索引格式。
- en: The following diagram shows a point dataset sorted by a Quadtree algorithm.
    The black points are the actual dataset, while the boxes are the bounding boxes
    of the index. Note that none of the bounding boxes overlap. The diagram on the
    left shows the spatial representation of the index, while the diagram on the right
    shows the hierarchical relationship of a typical index, which is how spatial software
    sees the index and data.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了一个按四叉树算法排序的点数据集。黑色点是实际数据集，而框是索引的边界框。请注意，没有任何边界框重叠。左边的图显示了索引的空间表示，而右边的图显示了典型索引的层次关系，这是空间软件如何看待索引和数据的方式。
- en: 'This structure allows a spatial search algorithm to quickly eliminate possibilities
    when trying to locate one or more points in relation to some other set of features,
    as shown in the following diagram:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这种结构允许空间搜索算法在尝试定位一个或多个点与某些其他特征集的关系时快速排除可能性，如下面的图所示：
- en: '![](img/398e27ef-ba22-41b8-b31f-070bf520ed09.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/398e27ef-ba22-41b8-b31f-070bf520ed09.png)'
- en: Now that we understand quadtree indexes, let's look at another common type of
    spatial indexes called R-trees.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了四叉树索引，让我们来看看另一种常见的空间索引类型，称为R树。
- en: R-tree index
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R树索引
- en: '**R-tree** indexes are more sophisticated than Quadtrees. R-trees are designed
    to handle 3D data and are optimized to store the index in a way that is compatible
    with the way databases use disk space and memory. Nearby objects are grouped together
    using an algorithm from a variety of spatial algorithms. All objects in a group
    are bounded by a minimum rectangle. These rectangles are aggregated into hierarchical
    nodes that are balanced at each level.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**R树**索引比四叉树更复杂。R树旨在处理3D数据，并优化以将索引存储在兼容数据库使用磁盘空间和内存的方式。使用来自各种空间算法的算法将邻近对象分组在一起。组中的所有对象都由一个最小矩形所包围。这些矩形被聚合到每个级别都平衡的层次节点中。'
- en: Unlike a Quadtree, the bounding boxes of an R-tree may overlap across nodes.
    Due to their relative complexity and database-oriented structure, R-trees are
    most commonly found in spatial databases, as opposed to file-based formats.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与四叉树不同，R树的边界框可能跨越节点重叠。由于它们的相对复杂性和面向数据库的结构，R树通常在空间数据库中找到，而不是基于文件的格式中。
- en: 'The following diagram from [https://en.wikipedia.org/wiki/File:R-tree.svg](https://en.wikipedia.org/wiki/File:R-tree.svg)
    shows a balanced R-tree for a 2D point dataset:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 下图来自[https://en.wikipedia.org/wiki/File:R-tree.svg](https://en.wikipedia.org/wiki/File:R-tree.svg)，显示了一个用于2D点数据集的平衡R树：
- en: '![](img/0dbb8666-cc09-4f9f-99d4-7dd14fa27ae2.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0dbb8666-cc09-4f9f-99d4-7dd14fa27ae2.png)'
- en: Indexes break up large datasets, but to speed up searching, they may employ
    a technique called **grids**. We'll look at that next.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 索引将大型数据集分割成小块，但为了加快搜索速度，它们可能会采用一种称为**网格**的技术。我们将在下一节中探讨这一点。
- en: Grids
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网格
- en: Spatial indexes also often employ the concept of an integer grid. Geospatial
    coordinates are usually floating-point decimal numbers with anywhere from 2 to
    16 decimal places. Performing comparisons on floating-point numbers is far more
    computationally expensive than working with integers. Indexed searching is about
    eliminating possibilities that don't require precision first.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 空间索引也经常采用整数网格的概念。地理坐标通常是带有2到16位小数的浮点十进制数。对浮点数进行比较的计算成本远高于使用整数。索引搜索是关于首先消除不需要精度的可能性。
- en: Most spatial indexing algorithms, therefore, map floating-point coordinates
    to a fixed-sized integer grid. On searching for a particular feature, the software
    can use more efficient integer comparisons rather than working with floating-point
    numbers. Once the results are narrowed down, the software can access the full
    resolution data.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，大多数空间索引算法将浮点坐标映射到固定大小的整数网格。在搜索特定特征时，软件可以使用更有效的整数比较而不是处理浮点数。一旦结果被缩小，软件就可以访问完整分辨率的数据。
- en: Grid sizes can be as small as 256 x 256 for simple file formats, or can be as
    large as 3 million x 3 million in large geospatial databases designed to incorporate
    every known coordinate system and possible resolution.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 网格大小可以是256 x 256，对于简单的文件格式，也可以是3百万 x 3百万，这对于旨在包含每个已知坐标系和可能分辨率的大型地理空间数据库来说。
- en: The integer mapping technique is very similar to the rendering technique that
    is used to plot data on a graphics canvas in mapping programs. The `SimpleGIS`
    script in [Chapter 1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml), *Learning about
    Geospatial Analysis with Python*, also uses this technique to render points and
    polygons using the built-in Python turtle graphics engine.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 整数映射技术与在地图程序中用于在图形画布上绘制数据的渲染技术非常相似。在[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)“使用Python学习地理空间分析”中，`SimpleGIS`脚本也使用这种技术，通过内置的Python海龟图形引擎来绘制点和多边形。
- en: What are overviews?
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概览是什么？
- en: Overview data is most commonly found in raster formats. Overviews are resampled
    and lower-resolution versions of raster datasets that provide thumbnail views
    or simply faster-loading image views at different map scales. They are also known
    as **pyramids**, and the process of creating them is known as **pyramiding an
    image**. These overviews are usually preprocessed and stored with the full resolution
    data either embedded with the file or in a separate file.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 概览数据最常见于栅格格式。概览是对栅格数据集进行重采样和降低分辨率的版本，提供了不同地图比例的缩略图视图或更快的图像加载视图。它们也被称为**金字塔**，创建它们的过程被称为**金字塔化图像**。这些概览通常预先处理并存储与完整分辨率数据一起，要么嵌入文件中，要么存储在单独的文件中。
- en: The compromise of this convenience is that the additional images add to the
    overall file size of the dataset; however, they speed up image viewers. Vector
    data also has a concept of overviews, usually to give a dataset geographic context
    in an overview map. However, because vector data is scalable, reduced size overviews
    are usually created on the fly by software using a generalization operation, as
    mentioned in [Chapter 1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml), *Learning
    about Geospatial Analysis with Python*.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这种便利性的妥协是，额外的图像会增加数据集的总文件大小；然而，它们可以加快图像查看器的速度。矢量数据也有概览的概念，通常用于在概览图中为数据集提供地理上下文。然而，由于矢量数据是可缩放的，因此通常由软件在实时通过泛化操作创建缩小尺寸的概览，如[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)“使用Python学习地理空间分析”中所述。
- en: 'Occasionally, vector data is rasterized by converting it into a thumbnail image,
    which is stored with, or embedded in, the image header. The following diagram
    demonstrates the concept of image overviews that shows visually why they are often
    called pyramids:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，矢量数据会被转换为缩略图图像，并存储在图像头中或嵌入其中。以下图表展示了图像概览的概念，直观地说明了为什么它们经常被称为金字塔：
- en: '![](img/2c449dc3-a96e-499f-b133-afafb9a0737c.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2c449dc3-a96e-499f-b133-afafb9a0737c.png)'
- en: Spatial indexing and overviews help speed up access to data by software for
    analysts. Next, we'll look at metadata, which provides both a human-and machine-readable
    way to understand, search, and even catalog data.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 空间索引和概览有助于加快分析软件对数据的访问速度。接下来，我们将探讨元数据，它提供了一种既适合人类阅读也适合机器阅读的方式来理解、搜索甚至编目数据。
- en: What is metadata?
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是元数据？
- en: As discussed in [Chapter 1](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml), *Learning
    about Geospatial Analysis with Python*, metadata is any data that describes the
    associated dataset. Common examples of metadata include basic elements such as
    the footprint of the dataset on the Earth, as well as more detailed information
    such as spatial projection and information describing how the dataset was created.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第1章](6b5bd08a-170c-4471-a3f3-d79d5b91f017.xhtml)“使用Python学习地理空间分析”中所述，元数据是描述相关数据集的任何数据。常见的元数据示例包括基本元素，如数据集在地球上的足迹，以及更详细的信息，如空间投影和描述数据集如何创建的信息。
- en: Most data formats contain the footprint or bounding box of the data on the Earth.
    Detailed metadata is typically stored in a separate location in a standard format,
    such as the US **Federal Geographic Data Committee** (**FGDC**), **Content Standard
    for Digital Geospatial Metadata** (**CSDGM**), ISO, or the newer European Union
    initiative, which includes metadata requirements, and is called the **Infrastructure
    for Spatial Information in the European Community** (**INSPIRE**).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数数据格式包含数据在地球上的足迹或边界框。详细的元数据通常存储在标准格式（如美国联邦地理数据委员会 **FGDC**、数字地理空间元数据内容标准 **CSDGM**、ISO
    或较新的欧盟倡议）的单独位置，该倡议包括元数据要求，并称为欧洲共同体空间信息基础设施 **INSPIRE**。
- en: Understanding the file structure
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解文件结构
- en: The preceding elements can be stored in a variety of ways in a single file,
    multiple files, or databases, depending on the format. Additionally, this geospatial
    information can be stored in a variety of formats, including embedded binary headers,
    XML, database tables, spreadsheets/CSV, separate text, or binary files.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 前述元素可以以多种方式存储在单个文件、多个文件或数据库中，具体取决于格式。此外，这种地理空间信息可以存储在多种格式中，包括嵌入的二进制标题、XML、数据库表、电子表格/CSV、单独的文本或二进制文件。
- en: Human-readable formats such as XML files, spreadsheets, and structured text
    files require only a text editor to be investigated. These files are also easily
    parsed and processed using Python's built-in modules, data types, and string manipulation
    functions. Binary-based formats are more complicated. Therefore, it is typically
    easier to use a third-party library to deal with binary formats.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如 XML 文件、电子表格和结构化文本文件等人类可读格式，只需使用文本编辑器进行调查。这些文件也易于使用 Python 的内置模块、数据类型和字符串操作函数进行解析和处理。基于二进制格式的格式更复杂。因此，通常更容易使用第三方库来处理二进制格式。
- en: However, you don't have to use a third-party library, especially if you just
    want to investigate the data at a high level. Python's built-in `struct` module
    has everything that you need. The `struct` module lets you read and write binary
    data as strings. When using the `struct` module, you need to be aware of the concept
    of byte order. Byte order refers to how the bytes of information that make up
    a file are stored in memory. This order is usually platform-specific, but in some
    rare cases, including shapefiles, the byte order is mixed into the file.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，您不必使用第三方库，尤其是如果您只想从高层次调查数据的话。Python 的内置 `struct` 模块拥有您所需的一切。`struct` 模块允许您将二进制数据作为字符串读取和写入。在使用
    `struct` 模块时，您需要了解字节序的概念。字节序是指构成文件的字节信息在内存中的存储方式。这种顺序通常是平台特定的，但在某些罕见情况下，包括形状文件，字节序会混合到文件中。
- en: The Python `struct` module uses the greater than (`>`) and less than (`<`) symbols
    to specify byte order (big-endian and little-endian, respectively).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的 `struct` 模块使用大于号 (`>`) 和小于号 (`<`) 符号来指定字节序（分别表示大端和小端）。
- en: The following brief example demonstrates the usage of the Python `struct` module
    to parse the bounding box coordinates from an Esri shapefile vector dataset. You
    can download this shapefile as a zipped file from the following URL: [https://github.com/GeospatialPython/Learn/blob/master/hancock.zip?raw=true](https://github.com/GeospatialPython/Learn/blob/master/hancock.zip?raw=true).
    [](https://geospatialpython.googlecode.com/files/hancock.zip)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下简要示例演示了如何使用 Python 的 `struct` 模块从 Esri 形状文件矢量数据集中解析边界框坐标。您可以从以下网址下载此形状文件作为压缩文件：[https://github.com/GeospatialPython/Learn/blob/master/hancock.zip?raw=true](https://github.com/GeospatialPython/Learn/blob/master/hancock.zip?raw=true)。[hancock.zip](https://geospatialpython.googlecode.com/files/hancock.zip)
- en: 'When you unzip this, you will see three files. For this example, we''ll be
    using `hancock.shp`. The Esri shapefile format has a fixed location and data type
    in the file header from byte 36 to byte 37 for the minimum *x*, minimum *y*, maximum
    *x*, and maximum *y* bounding box values. In this example, we will execute the
    following steps:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当您解压时，您将看到三个文件。在这个例子中，我们将使用 `hancock.shp`。Esri 形状文件格式在文件头部的字节 36 到字节 37 处具有固定位置和数据类型，用于最小
    *x*、最小 *y*、最大 *x* 和最大 *y* 边界框值。在这个例子中，我们将执行以下步骤：
- en: Import the `struct` module.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `struct` 模块。
- en: Open the `hancock.zip` shapefile in the binary read mode.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以二进制读取模式打开 `hancock.zip` 形状文件。
- en: Navigate to byte `36`.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到字节 `36`。
- en: Read each 8-byte double variables specified as `d`, and unpack it using the
    `struct` module in little-endian order, as designated by the `<` sign.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取指定为 `d` 的每个 8 字节双精度变量，并使用 `<` 符号指定的按小端顺序使用 `struct` 模块进行解包。
- en: 'The best way to execute this script is in the interactive Python interpreter.
    We will then read the minimum longitude, minimum latitude, maximum longitude,
    and maximum latitude:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此脚本的最好方式是在交互式Python解释器中。然后我们将读取最小经度、最小纬度、最大经度和最大纬度：
- en: '[PRE0]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You''ll notice that, when the `struct` module unpacks a value, it returns a
    Python tuple with one value. You can shorten the preceding unpacking code to one
    line by specifying all four doubles at once and increasing the byte length to
    32 bytes, as shown in the following code:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，当`struct`模块解包一个值时，它返回一个包含一个值的Python元组。你可以通过一次指定所有四个双精度值并将字节长度增加到32字节来缩短前面的解包代码，如下面的代码所示：
- en: '[PRE1]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now that we understand how to describe data, let's learn about one of the most
    common types of geospatial data—vector data.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何描述数据，让我们学习最常见的一种地理空间数据类型——矢量数据。
- en: Knowing the most widely used vector data types
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解最广泛使用的矢量数据类型
- en: Vector data is, by far, the most common geospatial format because it is the
    most efficient way to store spatial information. In general, it requires fewer
    computer resources to store and process than raster data. The OGC has over 16
    formats directly related to vector data. Vector data stores only geometric primitives,
    including points, lines, and polygons. However, only the points are stored for
    each type of shape. For example, in the case of a simple straight vector line
    shape, only the endpoints would be necessarily stored and defined as a line. Software
    displaying this data would read the shape type and then connect the endpoints
    with a line dynamically.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量数据无疑是地理空间中最常见的格式，因为它是最有效存储空间信息的方式。一般来说，它比栅格数据存储和处理所需的计算机资源更少。OGC有超过16种与矢量数据直接相关的格式。矢量数据仅存储几何原语，包括点、线和多边形。然而，每种形状类型仅存储点。例如，在简单直线矢量线形状的情况下，只需存储和定义端点作为线。显示此数据的软件将读取形状类型，然后动态地将端点连接成线。
- en: Geospatial vector data is similar to the concept of vector computer graphics,
    with some notable exceptions. Geospatial vector data contains positive and negative
    Earth-based coordinates, while vector graphics typically store computer screen
    coordinates. Geospatial vector data is also usually linked to other information
    about the object that's represented by the geometry. This information may be as
    simple as a timestamp in the case of GPS data or an entire database table for
    larger geographic information systems.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间矢量数据类似于矢量计算机图形的概念，但有几个显著的例外。地理空间矢量数据包含基于地球的正负坐标，而矢量图形通常存储计算机屏幕坐标。地理空间矢量数据通常还与表示该几何形状的对象的其他信息相关联。这些信息可能像GPS数据中的时间戳那样简单，或者对于更大的地理信息系统，可能是一个完整的数据库表。
- en: Vector graphics often store styling information describing colors, shadows,
    and other display-related instructions, while geospatial vector data typically
    does not. Another important difference is the shapes. Geospatial vectors typically
    only include very primitive geometries based on points, straight lines, and straight-line
    polygons, while many computer graphic vector formats have concepts of curves and
    circles. However, geospatial vectors can model these shapes using more points.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量图形通常存储描述颜色、阴影和其他显示相关指令的样式信息，而地理空间矢量数据通常不包含这些信息。另一个重要的区别是形状。地理空间矢量通常仅包括基于点、直线和直线多边形的非常原始的几何形状，而许多计算机图形矢量格式有曲线和圆的概念。然而，地理空间矢量可以使用更多的点来模拟这些形状。
- en: Other human-readable formats, such as CSV, simple text strings, GeoJSON, and
    XML-based formats, are technically vector data because they store geometry as
    opposed to rasters, which represent all the data within the bounding box of the
    dataset. Until the explosion of XML in the late 1990s, vector data formats were
    nearly all binary. XML provided a hybrid approach that was both computer and human-readable.
    The compromise is that text formats such as GeoJSON and XML data greatly increase
    the file size compared to binary formats. These formats will be discussed later
    in this section.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 其他可读性格式，如CSV、简单的文本字符串、GeoJSON和基于XML的格式，在技术上属于矢量数据，因为它们存储几何形状，而不是栅格，栅格表示数据集边界框内的所有数据。直到20世纪90年代末XML的爆炸式增长，矢量数据格式几乎都是二进制的。XML提供了一种既适合计算机又适合人类阅读的混合方法。妥协是，与二进制格式相比，GeoJSON和XML数据等文本格式会大大增加文件大小。这些格式将在本节后面讨论。
- en: The number of vector formats to choose from is staggering. The open source vector
    library, OGR ([http://www.gdal.org/ogr_formats.html](http://www.gdal.org/ogr_formats.html)),
    lists over 86 supported vector formats. Its commercial counterpart, Safe Software's
    **Feature Manipulation Engine** (**FME**), lists over 188 supported vector formats
    ([http://www.safe.com/fme/format-search/#filters%5B%5D=VECTOR](http://www.safe.com/fme/format-search/#filters%5B%5D=VECTOR)).
    These lists include a few vector graphics formats, as well as human-readable geospatial
    formats. There are still dozens of formats out there to at least be aware of,
    in case you come across them.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 可供选择的矢量格式数量令人震惊。开源矢量库 OGR ([http://www.gdal.org/ogr_formats.html](http://www.gdal.org/ogr_formats.html))
    列出了超过 86 种受支持的矢量格式。其商业对应产品，Safe Software 的 **特征操作引擎**（**FME**），列出了超过 188 种受支持的矢量格式
    ([http://www.safe.com/fme/format-search/#filters%5B%5D=VECTOR](http://www.safe.com/fme/format-search/#filters%5B%5D=VECTOR))。这些列表包括一些矢量图形格式以及可读的地理空间格式。仍然有数十种格式至少应该知道，以防你遇到它们。
- en: Now, let's look at a specific, and widely used type of vector data called shapefiles.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看一种特定且广泛使用的矢量数据类型，称为 Shapefile。
- en: Shapefiles
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shapefiles
- en: The most ubiquitous geospatial format is the Esri shapefile. The geospatial
    software company known as Esri released the shapefile format specification as
    an open format in 1998 ([http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf](http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf)).
    Esri developed it as a format for their ArcView software, designed as a lower-end
    GIS option to complement their high-end professional package, **ArcInfo**, formerly
    called **ARC/INFO**. However, the open specification, efficiency, and simplicity
    of the format turned it into an unofficial GIS standard that is still extremely
    popular over 15 years later.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最普遍使用的地理空间格式是 Esri Shapefile。地理空间软件公司 Esri 于 1998 年将 Shapefile 格式规范作为开放格式发布
    ([http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf](http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf))。Esri
    开发它作为他们 ArcView 软件的格式，ArcView 软件被设计为低端 GIS 选项，以补充他们高端专业包 **ArcInfo**，以前称为 **ARC/INFO**。然而，该格式的开放规范、效率和简单性使其成为
    15 年后仍然非常受欢迎的非官方 GIS 标准。
- en: Virtually, every piece of the software labeled as geospatial software supports
    shapefiles because the shapefile format is so common. For this reason, you can
    almost get by as an analyst by being intimately familiar with shapefiles and mostly
    ignoring other formats. You can convert almost any other format into a shapefile
    through the source format's native software or a third-party converter, such as
    the OGR library, for which there is a Python module. Other Python modules that
    handle shapefiles are Shapely and Fiona, which are based on OGR.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有标有地理空间软件的软件都支持 Shapefile，因为 Shapefile 格式非常常见。因此，你可以通过熟悉 Shapefile 并主要忽略其他格式来几乎作为一个分析师来应对。你可以通过源格式本机软件或第三方转换器（如
    OGR 库）将几乎任何其他格式转换为 Shapefile，对于 OGR 库，有一个 Python 模块。其他处理 Shapefile 的 Python 模块是
    Shapely 和 Fiona，它们基于 OGR。
- en: 'One of the most striking features of a shapefile is that the format consists
    of multiple files (from minimum to maximum, there can be 3-15 different files).
    The following table describes the file formats. The `.shp`, `.shx`, and `.dbf`
    files are required for a valid shapefile:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Shapefile 最显著的特点之一是它的格式由多个文件组成（从最少到最多，可以有 3-15 个不同的文件）。下表描述了文件格式。`.shp`、`.shx`
    和 `.dbf` 文件是有效 Shapefile 所必需的：
- en: '| **Shapefile supporting file extension** | **Supporting file purpose** | **Notes**
    |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| **Shapefile 支持的文件扩展名** | **支持文件用途** | **注意事项** |'
- en: '| --- | --- | --- |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `.shp` | This is the shapefile. It contains the geometry. | It is a required
    file. Some software that needs only geometry will accept the `.shp` files without
    the `.shx` or `.dbf` file. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `.shp` | 这是 Shapefile。它包含几何形状。 | 这是一个必需的文件。一些只需要几何形状的软件可以接受没有 `.shx` 或 `.dbf`
    文件的 `.shp` 文件。 |'
- en: '| `.shx` | This is the shape index file. It is a fixed-sized record index referencing
    geometry for faster access. | It is a required file. This file is meaningless
    without the `.shp` file. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| `.shx` | 这是 Shapefile 索引文件。它是一个固定大小的记录索引，用于引用几何形状以实现更快的访问。 | 这是一个必需的文件。没有
    `.shp` 文件，此文件没有意义。 |'
- en: '| `.dbf` | This is the database file. It contains the geometry attributes.
    | It is a required file. Some software will access this format without the `.shp`
    file present as the specification predates shapefiles. It''s based on the very
    old FoxPro and dBase formats. An open specification exists for it called Xbase.
    The `.dbf` files can be opened by most types of spreadsheet software. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `.dbf` | 这是数据库文件。它包含几何属性。 | 是一个必需的文件。某些软件在没有 `.shp` 文件的情况下也会访问此格式，因为该规范早于
    shapefiles。它基于非常古老的 FoxPro 和 dBase 格式。存在一个名为 Xbase 的开放规范。`.dbf` 文件可以被大多数类型的电子表格软件打开。|'
- en: '| `.sbn` | This is the spatial bin file, that is, the shapefile spatial index.
    | It contains bounding boxes of features mapped to a 256 x 256 integer grid. It
    is very common for this file to accompany large shapefile datasets. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| `.sbn` | 这是空间分箱文件，即 shapefile 空间索引。 | 它包含映射到 256 x 256 整数网格的特征边界框。这个文件经常与大型
    shapefile 数据集一起出现。|'
- en: '| `.sbx` | A fixed-sized record index for the `.sbn` file. | A traditional
    ordered record index of a spatial index. Frequently seen. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| `.sbx` | `.sbn` 文件的固定大小记录索引。 | 空间索引的传统有序记录索引。经常见到。|'
- en: '| `.prj` | This contains map projection information that''s stored in a well-known
    text format. | A very common and required file for on-the-fly projection by the
    GIS software. This same format can also accompany raster data. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| `.prj` | 这包含存储在知名文本格式中的地图投影信息。 | 是 GIS 软件进行即时投影的非常常见和必需的文件。此格式也可以与栅格数据一起使用。|'
- en: '| `.fbn` | A spatial index of read-only features. | Very rarely seen. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| `.fbn` | 只读特征的空間索引。 | 很少见到。|'
- en: '| `.fbx` | A fixed-sized record index of the `.fbn` spatial index. | Very rarely
    seen. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| `.fbx` | `.fbn` 空间索引的固定大小记录索引。 | 很少见到。|'
- en: '| `.ixs` | A geocoding index. | Common in geocoding applications, including
    driving-direction type applications. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| `.ixs` | 地理编码索引。 | 在地理编码应用中很常见，包括驾驶方向类型的应用。|'
- en: '| `.mxs` | Another type of geocoding index. | Less common than the `.ixs` format.
    |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| `.mxs` | 另一种类型的地理编码索引。 | 比 `.ixs` 格式少见。|'
- en: '| `.ain` | Attribute index. | Mostly legacy format, and rarely used in modern
    software. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| `.ain` | 属性索引。 | 主要为遗留格式，在现代软件中很少使用。|'
- en: '| `.aih` | Attribute index. | Accompanies the `.ain` files. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| `.aih` | 属性索引。 | 伴随 `.ain` 文件。|'
- en: '| `.qix` | Quadtree index. | A spatial index format created by the open source
    community because the Esri `.sbn` and `.sbx` files were undocumented until recently.
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `.qix` | 四叉树索引。 | 由开源社区创建的空间索引格式，因为 Esri 的 `.sbn` 和 `.sbx` 文件直到最近才被记录。|'
- en: '| `.atx` | Attribute index. | A more recent Esri software-specific attribute
    index to speed up attribute queries. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `.atx` | 属性索引。 | 一种更近期的 Esri 软件专用属性索引，用于加速属性查询。|'
- en: '| `.shp.xml` | Metadata. | A geospatial metadata `.xml` container. It can be
    any of the multiple XML standards, including FGDC and ISO. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `.shp.xml` | 元数据。 | 一个地理空间元数据 `.xml` 容器。可以是多个 XML 标准，包括 FGDC 和 ISO。|'
- en: '| `.cpg` | Code page file for `.dbf`. | It is used for the internationalization
    of `.dbf` files. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `.cpg` | `.dbf` 的代码页文件。 | 用于 `.dbf` 文件的国际化。|'
- en: You will probably never encounter all of these formats at once. However, any
    shapefile that you use will have multiple files. You will commonly see `.shp`,
    `.shx`, `.dbf`, `.prj`, `.sbn`, `.sbx`, and occasionally, `.shp.xml` files. If
    you want to rename a shapefile, you must rename all of the associated files with
    the same name; however, in Esri software and other GIS packages, these datasets
    will appear as a single file.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能永远不会同时遇到所有这些格式。然而，你使用的任何 shapefile 都将包含多个文件。你通常会看到 `.shp`、`.shx`、`.dbf`、`.prj`、`.sbn`、`.sbx`
    和偶尔的 `.shp.xml` 文件。如果你想重命名 shapefile，你必须将所有相关文件重命名为相同的名称；然而，在 Esri 软件和其他 GIS 软件包中，这些数据集将作为一个单一文件出现。|
- en: Another important feature of shapefiles is that the records are not numbered.
    Records include the geometry, the `.shx` index record, and the `.dbf` record.
    These records are stored in a fixed order. When you examine shapefile records
    using the software, they appear to be numbered.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: shapefiles 的另一个重要特性是记录没有编号。记录包括几何形状、`.shx` 索引记录和 `.dbf` 记录。这些记录按固定顺序存储。当你使用软件检查
    shapefile 记录时，它们看起来像是编号的。|
- en: People are often confused when they delete a shapefile record, save the file,
    and reopen it; the number of the record that was deleted still appears. The reason
    for this is that the shapefile records are numbered dynamically on loading, but
    not saved. So, for example, if you delete record number 23 and save the shapefile,
    record number 24 will become 23 the next time you read the shapefile. Many people
    expect to open the shapefile and see the records jump from 22 to 24\. The only
    way to track shapefile records in this way is to create a new attribute called
    ID or similar in the `.dbf` file and assign each record a permanent and unique
    identifier.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 当人们删除一个shapefile记录，保存文件，然后重新打开它时，往往会感到困惑；被删除的记录编号仍然出现。原因是shapefile记录在加载时是动态编号的，但并未保存。所以，例如，如果你删除了编号为23的记录并保存了shapefile，下一次读取shapefile时，编号24将变为23。要以此方式跟踪shapefile记录的唯一方法是在`.dbf`文件中创建一个新的属性，例如ID，并为每个记录分配一个永久且唯一的标识符。
- en: Just like renaming shapefiles, care must be taken while editing shapefiles.
    It's best to use software that treats the shapefiles as a single dataset. If you
    edit any of the files individually and add/delete a record without editing the
    accompanying files, the shapefile will be seen as corrupt by most geospatial software.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 就像重命名shapefile一样，在编辑shapefile时必须小心。最好使用将shapefile视为单个数据集的软件。如果你单独编辑任何文件并添加/删除记录而不编辑相关文件，大多数地理空间软件都会将shapefile视为损坏。
- en: CAD files
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CAD文件
- en: '**CAD** stands for **computer-aided design**. The primary formats for CAD data
    were created by Autodesk for their leading AutoCAD package. The two formats that
    are commonly seen are **Drawing Exchange Format** (**DXF**) and AutoCAD''s native
    **Drawing** (**DWG**) format.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**CAD**代表**计算机辅助设计**。CAD数据的主要格式是由Autodesk为其领先的AutoCAD软件包创建的。常见的两种格式是**绘图交换格式**（**DXF**）和AutoCAD的本地**绘图**（**DWG**）格式。'
- en: DWG was traditionally a closed format, but it has become more open.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: DWG传统上是一个封闭的格式，但它已经变得更加开放。
- en: 'The CAD software is used for everything that is engineering-related, from designing
    bicycles to cars, parks, and city sewer systems. As a geospatial analyst, you
    don''t have to worry about mechanical engineering designs; however, civil engineering
    designs become quite an issue. Most engineering firms use geospatial analysis
    to a very limited degree, but store nearly all of their data in the CAD format.
    The DWG and DXF formats can represent objects using features not found in geospatial
    software or that are weakly supported by geospatial systems. Some examples of
    these features include the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: CAD软件用于所有与工程相关的事物，从设计自行车到汽车、公园和城市下水道系统。作为一名地理空间分析师，你不必担心机械工程设计；然而，土木工程设计成为一个相当大的问题。大多数工程公司只有限度地使用地理空间分析，但几乎将所有数据存储在CAD格式中。DWG和DXF格式可以使用地理空间软件中找不到或仅由地理空间系统弱支持的特性来表示对象。以下是一些这些特性的例子：
- en: Curves
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 曲线
- en: Surfaces (for objects that are different from geospatial elevation surfaces)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表面（用于与地理空间高程表面不同的对象）
- en: 3D solids
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3D实体
- en: Text (rendered as an object)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本（以对象的形式渲染）
- en: Text styling
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本样式
- en: Viewport configuration
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视口配置
- en: These CAD and engineering-specific features make it difficult to cleanly convert
    CAD data into geospatial formats. If you encounter CAD data, the easiest option
    is to ask the data provider if they have shapefiles or some other geospatial-centric
    format.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这些CAD和工程特定特性使得将CAD数据干净地转换为地理空间格式变得困难。如果你遇到CAD数据，最简单的选择是询问数据提供者他们是否有shapefile或其他以地理空间为中心的格式。
- en: Tag-based and markup-based formats
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于标签和标记的格式
- en: Tag-based markup formats are typically XML formats. They also include other
    structured text formats such as the **Well-Known Text** (**WKT**) format, which
    is used for projection information files as well as different types of data exchange.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 基于标签的标记格式通常是XML格式。它们还包括其他结构化文本格式，如**已知文本**（**WKT**）格式，该格式用于投影信息文件以及不同类型的数据交换。
- en: XML formats include the **Keyhole Markup Language** (**KML**), the **OpenStreetMap**
    (**OSM**) format, and the Garmin GPX format for GPS data, which has become a popular
    exchange format. The Open Geospatial Consortium's **Geographic Markup Language**
    (**GML**) standard is one of the oldest and most widely used XML-based geographic
    formats. It is also the basis for the OGC **Web Feature Service** (**WFS**) standard
    for web applications. However, GML has been largely superseded by KML and the
    GeoJSON format.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: XML 格式包括 **Keyhole 标记语言**（**KML**）、**OpenStreetMap**（**OSM**）格式以及用于 GPS 数据的
    Garmin GPX 格式，这些格式已成为流行的交换格式。开放地理空间联盟的 **地理标记语言**（**GML**）标准是其中最古老且最广泛使用的基于 XML
    的地理格式之一。它也是 OGC **网络要素服务**（**WFS**）标准的基础，该标准用于网络应用程序。然而，GML 已经被 KML 和 GeoJSON
    格式所取代。
- en: 'XML formats often contain more than just geometry. They also contain attributes
    and rendering instructions such as color, styling, and symbology. Google''s KML
    format has become a fully supported OGC standard. The following is a sample of
    KML showing a simple placemark:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: XML 格式通常包含的不仅仅是几何信息。它们还包含属性和渲染指令，如颜色、样式和符号。Google 的 KML 格式已成为一个完全支持的 OGC 标准。以下是一个简单的
    KML 示例，展示了一个标记：
- en: '[PRE2]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The XML format is attractive to geospatial analysts for the following reasons:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: XML 格式对地理空间分析师有吸引力的原因如下：
- en: It is a human-readable format.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是一种人类可读的格式。
- en: It can be edited in a text editor.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以在文本编辑器中编辑。
- en: It is well supported by programming languages (especially Python).
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它得到了编程语言的良好支持（尤其是 Python）。
- en: It is, by definition, easily extensible.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据定义，它很容易扩展。
- en: XML is not perfect, though. It is an inefficient storage mechanism for very
    large data formats and can quickly become cumbersome to edit. Errors in datasets
    are common, and most parsers do not handle errors robustly. Despite the downsides,
    XML is widely used in geospatial analysis.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，XML 并不完美。它对于非常大的数据格式来说是一个低效的存储机制，并且很快就会变得难以编辑。数据集中的错误很常见，而且大多数解析器都没有稳健地处理错误。尽管存在缺点，XML
    在地理空间分析中仍然被广泛使用。
- en: '**Scalable Vector Graphics** (**SVG**) is a widely supported XML format for
    computer graphics. It is supported well by browsers and is often used for geospatial
    rendering. However, SVG was not designed as a geographic format.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**可缩放矢量图形**（**SVG**）是一种广泛支持的 XML 格式，用于计算机图形。它得到了浏览器的良好支持，常用于地理空间渲染。然而，SVG 并非作为地理格式而设计的。'
- en: 'The WKT format is also an older OGC standard. The most common use for it is
    to define projection information usually stored in `.prj` projection files, along
    with a shapefile or raster. The WKT string for the WGS 84 coordinate system is
    as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: WKT 格式也是一种较老的 OGC 标准。它最常见的使用是定义通常存储在 `.prj` 投影文件中的投影信息，以及与 shapefile 或栅格一起。WGS
    84 坐标系的 WKT 字符串如下：
- en: '[PRE3]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The parameters that define a projection can be quite long. A standards committee,
    which was created by the EPSG, introduced a numerical coding system to reference
    projections. These codes, such as EPSG:4326, are used as shorthand for strings
    such as the preceding code. There are also short names for commonly used projections
    such as Mercator, which can be used in different software packages to reference
    a projection.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 定义投影的参数可能相当长。由 EPSG 创建的一个标准委员会引入了一个数值编码系统来引用投影。这些代码，如 EPSG:4326，用作前面代码的简写。还有一些常用投影的简称，如墨卡托投影，可以在不同的软件包中用来引用投影。
- en: More information on these reference systems can be found on the spatial reference
    website at [http://spatialreference.org/ref/](http://spatialreference.org/ref/).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这些参考系统更多信息可以在空间参考网站上找到：[http://spatialreference.org/ref/](http://spatialreference.org/ref/)。
- en: GeoJSON
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GeoJSON
- en: GeoJSON is a relatively new and brilliant text format based on the **JavaScript
    Object Notation** (**JSON**) format, which has been a commonly used data exchange
    format for years. Despite its short history, GeoJSON can be found embedded in
    all major geospatial software systems and most websites that distribute data.
    This is because JavaScript is the language of the dynamic web, and GeoJSON can
    be directly fed into JavaScript.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: GeoJSON 是一种基于 **JavaScript 对象表示法**（**JSON**）的相对较新且出色的文本格式，这种格式多年来一直是一种常用的数据交换格式。尽管它的历史很短，GeoJSON
    仍然可以嵌入到所有主要的地理空间软件系统和大多数分发数据的网站上。这是因为 JavaScript 是动态网页的语言，GeoJSON 可以直接输入到 JavaScript
    中。
- en: GeoJSON is a completely backward-compatible extension for the popular JSON format.
    The structure of JSON is very similar and, in some cases, identical to existing
    data structures of common programming languages. JSON is almost identical to Python's
    dictionary and list data types. Due to this similarity, parsing JSON in a script
    is simple to do from scratch, but there are many libraries to make it even easier.
    Python contains a built-in library aptly named `json`.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: GeoJSON 是对流行的 JSON 格式的一个完全向后兼容的扩展。JSON 的结构非常相似，在某些情况下，与常见编程语言的现有数据结构完全相同。JSON
    几乎与 Python 的字典和列表数据类型相同。由于这种相似性，在脚本中从头开始解析 JSON 很简单，但有许多库可以使它变得更加容易。Python 包含一个名为
    `json` 的内置库。
- en: GeoJSON provides you with a standard way to define geometry, attributes, bounding
    boxes, and projection information. GeoJSON has all of the advantages of XML, including
    human-readable syntax, excellent software support, and wide use in the industry.
    It also surpasses XML.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: GeoJSON 为您提供了一种标准的方式来定义几何形状、属性、边界框和投影信息。GeoJSON 具有XML的所有优点，包括人类可读的语法、优秀的软件支持以及在行业中的广泛应用。它还超越了XML。
- en: 'GeoJSON is far more compact than XML, largely because it uses simple symbols
    to define objects rather than opening and closing text-laden tags. This compactness
    also helps with the readability and manageability of larger datasets. However,
    it is still inferior to binary formats from a data volume standpoint. The following
    is a sample of the GeoJSON syntax, defining a geometry collection with both a
    point and line:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: GeoJSON 比XML更加紧凑，这主要是因为它使用简单的符号来定义对象，而不是使用包含大量文本的打开和关闭标签。这种紧凑性也有助于大型数据集的可读性和可管理性。然而，从数据量方面来看，它仍然不如二进制格式。以下是一个
    GeoJSON 语法示例，定义了一个包含点和线的几何集合：
- en: '[PRE4]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The preceding code is a valid GeoJSON, but it is also a valid Python data structure.
    You can copy the preceding code sample directly into the Python interpreter as
    a variable definition and it will evaluate without error, as follows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码是有效的 GeoJSON，但它也是一个有效的 Python 数据结构。您可以直接将上述代码示例复制到 Python 解释器中作为变量定义，它将无错误地评估，如下所示：
- en: '[PRE5]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Due to its compact size, internet-friendly syntax by virtue of being written
    in JavaScript, and support from major programming languages, GeoJSON is a key
    component of leading REST geospatial web APIs, which will be covered later in
    this chapter. It currently offers the best compromise among the computer resource
    efficiency of binary formats, the human-readability of text formats, and programmatic
    utility.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其紧凑的尺寸、JavaScript 编写的互联网友好语法以及主要编程语言的支持，GeoJSON 是领先 REST 地理空间 Web API 的关键组件，这将在本章后面讨论。它目前在计算机资源效率、文本格式的可读性和程序性效用之间提供了最佳折衷。
- en: GeoPackage
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GeoPackage
- en: We'll briefly mention the GeoPackage format here as it's covered in [Chapter
    3](a5e439d1-e7fd-46b4-8fd3-8f811bfe73e4.xhtml), *The Geospatial Technology Landscape*,
    as well as because it's a type of geodatabase. The `geopackage` format is an OGC
    open standard on a SQLite file-based database container that is a platform, vendor,
    and software independent. It's an attempt to get away from all of the issues that
    are generated from either proprietary data formats or limited data formats.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将简要介绍 GeoPackage 格式，因为它在 [第 3 章](a5e439d1-e7fd-46b4-8fd3-8f811bfe73e4.xhtml)，*地理空间技术景观*
    中有所涉及，以及因为它是一种地理数据库。`geopackage` 格式是一个基于 SQLite 文件数据库容器的 OGC 开放标准，它是平台、供应商和软件独立的。它试图摆脱由专有数据格式或有限数据格式引起的所有问题。
- en: 'Next, we''ll look at the other major data type: raster data.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨其他主要数据类型：栅格数据。
- en: Understanding raster data types
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解栅格数据类型
- en: Raster data consists of rows and columns of cells or pixels, with each cell
    representing a single value. The easiest way to think of raster data is as images,
    which is how they are typically represented by software. However, raster datasets
    are not necessarily stored as images. They can also be ASCII text files or **Binary
    Large Objects** (**BLOBs**) in databases.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 栅格数据由行和列的单元格或像素组成，每个单元格代表一个单一值。将栅格数据视为图像是思考它的最简单方式，这也是它们通常由软件表示的方式。然而，栅格数据集不一定以图像的形式存储。它们也可以是数据库中的
    ASCII 文本文件或 **二进制大对象**（**BLOBs**）。
- en: Another difference between geospatial raster data and regular digital images
    is their resolution. Digital images express resolution as dots-per-inch if printed
    in full size. Resolution can also be expressed as the total number of pixels in
    the image, and are defined as megapixels. However, geospatial raster data uses
    the ground distance that each cell represents. For example, a raster dataset with
    a two-foot resolution means that a single cell represents two feet on the ground,
    which also means that only objects larger than two feet can be identified visually
    in the dataset.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间栅格数据与常规数字图像之间的另一个区别是它们的分辨率。如果以全尺寸打印，数字图像将分辨率表示为每英寸点数。分辨率也可以表示为图像中的总像素数，并定义为百万像素。然而，地理空间栅格数据使用每个单元格代表的地面距离。例如，具有两英尺分辨率的栅格数据集意味着单个单元格代表地面上的两英尺，这也意味着在数据集中只能视觉识别大于两英尺的物体。
- en: Raster datasets may contain multiple bands, meaning that different wavelengths
    of light can be collected at the same time over the same area. Often, this range
    is from 3-7 bands, but can be several hundred in hyperspectral systems. These
    bands are viewed individually or swapped in and out as the RGB bands of an image.
    They can also be recombined into a derivative single-band image using mathematics
    and then recolored using a set number of classes representing values within the
    dataset.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 栅格数据集可能包含多个波段，这意味着可以在同一区域同时收集不同波长的光。通常，这个范围是3-7个波段，但在高光谱系统中可能有几百个波段。这些波段可以单独查看，或者像图像的RGB波段一样互换。它们还可以通过数学方法重新组合成一个单波段派生图像，然后使用代表数据集中值的固定数量的类别重新着色。
- en: Another common application of raster data is in the field of scientific computing,
    which shares many elements of geospatial remote sensing but adds some interesting
    twists. Scientific computing often uses complex raster formats, including **Network
    Common Data Form** (**NetCDF**), **GRIB**, and **HDF5**, which store entire data
    models. These formats are more like directories in a filesystem and can contain
    multiple datasets or multiple versions of the same dataset. Oceanography and meteorology
    are the most common applications of this kind of analysis. An example of a scientific
    computing dataset is the output of a weather model, where the cells of the raster
    dataset in different bands may represent a different variables' output from the
    model in a time series.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 栅格数据在科学计算领域的应用也很常见，它共享了许多地理空间遥感元素，但增加了一些有趣的变体。科学计算通常使用复杂的栅格格式，包括**网络公共数据格式**（**NetCDF**）、**GRIB**和**HDF5**，这些格式存储整个数据模型。这些格式更像是文件系统中的目录，可以包含多个数据集或同一数据集的多个版本。海洋学和气象学是这类分析最常见应用。一个科学计算数据集的例子是天气模型的输出，其中栅格数据集在不同波段中的单元格可能代表模型在时间序列中不同变量的输出。
- en: Like vector data, raster data can come in a variety of formats. The open source
    `raster` library, known as **Geospatial Data Abstraction Library** (**GDAL**),
    which actually includes the vector OGR library we mentioned earlier, lists over
    130 supported raster formats ([http://www.gdal.org/formats_list.html](http://www.gdal.org/formats_list.html)).
    The FME software package supports this many as well. However, just like shapefiles
    and CAD data, there are a few standout raster formats.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 与矢量数据一样，栅格数据也可以以各种格式存在。开源的**地理空间数据抽象库**（**GDAL**）**raster**库，实际上还包括我们之前提到的矢量OGR库，列出了超过130种支持的栅格格式（[http://www.gdal.org/formats_list.html](http://www.gdal.org/formats_list.html)）。FME软件包也支持这么多格式。然而，就像shapefile和CAD数据一样，也有一些突出的栅格格式。
- en: TIFF files
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TIFF文件
- en: 'The **Tagged Image File Format** (**TIFF**) is the most common geospatial raster
    format. The TIFF format''s flexible tagging system allows it to store any type
    of data whatsoever in a single file. TIFFs can contain overview images, multiple
    bands, integer elevation data, basic metadata, internal compression, and a variety
    of other data that''s typically stored in additional supporting files by other
    formats. Anyone can extend the TIFF format unofficially by adding tagged data
    to the file structure. This extensibility has benefits and drawbacks. However,
    a TIFF file may work fine in one piece of software but fail when it''s accessed
    in another because the two software packages implement the massive TIFF specification
    to different degrees. An old joke about TIFFs has a frustrating amount of truth
    to it: **TIFF** stands for **Thousands of Incompatible File Formats**. The GeoTIFF
    extension defines how geospatial data is stored. Geospatial rasters stored as
    TIFF files may have any of the following file extensions: `.tiff`, `.tif`, or
    `.gtif`.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '**标记图像文件格式**（**TIFF**）是最常见的地理空间栅格格式。TIFF 格式的灵活标记系统允许它在单个文件中存储任何类型的数据。TIFF 文件可以包含概览图像、多个波段、整数高程数据、基本元数据、内部压缩以及其他各种数据，这些数据通常由其他格式存储在额外的支持文件中。任何人都可以通过向文件结构添加标记数据来非官方地扩展
    TIFF 格式。这种可扩展性既有优点也有缺点。然而，一个 TIFF 文件可能在某个软件中运行良好，但在另一个软件中访问时可能会失败，因为这两个软件包对庞大的
    TIFF 规范的实施程度不同。关于 TIFF 的一个古老笑话中有许多令人沮丧的真实性：**TIFF** 代表 **数千种不兼容的文件格式**。GeoTIFF
    扩展定义了地理空间数据是如何存储的。存储为 TIFF 文件的地理空间栅格可能具有以下任何一种文件扩展名：`.tiff`、`.tif` 或 `.gtif`。'
- en: JPEG, GIF, BMP, and PNG
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JPEG、GIF、BMP 和 PNG
- en: JPEG, GIF, BMP, and PNG formats are common image formats in general, but can
    be used for basic geospatial data storage as well. Typically, these formats rely
    on accompanying the supporting text files for the georeferencing of the information
    in order to make them compatible with the GIS software, such as WKT, `.prj`, or
    world files.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: JPEG、GIF、BMP 和 PNG 格式是通用的图像格式，但也可以用于基本地理空间数据存储。通常，这些格式依赖于伴随支持文本文件来对信息进行地理参考，以便与
    GIS 软件兼容，如 WKT、`.prj` 或世界文件。
- en: The JPEG format is also fairly common for geospatial data. JPEGs have a built-in
    metadata tagging system, similar to TIFFs, called EXIF. JPEGs are commonly used
    for geotagged photographs in addition to raster GIS layers. **Bitmap** (**BMP**)
    images are used for desktop applications and document graphics. However, JPEG,
    GIF, and PNG are the formats that are used in web mapping applications, especially
    for pregenerated server map tiles for quick access via slippy maps.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: JPEG 格式在地理空间数据中也很常见。JPEGs 有一个内置的元数据标记系统，类似于 TIFF，称为 EXIF。JPEGs 常用于地理标记照片，以及栅格
    GIS 层。**位图**（**BMP**）图像用于桌面应用程序和文档图形。然而，JPEG、GIF 和 PNG 是在网络地图应用中使用，尤其是在用于通过滑块地图快速访问的预生成服务器地图瓦片中的格式。
- en: Compressed formats
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 压缩格式
- en: Since geospatial rasters tend to be very large, they are often stored using
    advanced compression techniques. The latest open standard is the JPEG 2000 format,
    which is an upgrade of the JPEG format and includes wavelet compression and a
    few other features, such as georeferencing data. The **Multi-resolution Seamless
    Image Database** (**MrSID**) (`.sid`) and **Enhanced Compression Wavelet** (**ECW**)
    (`.ecw`) are two proprietary wavelet compression formats often seen in geospatial
    contexts.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 由于地理空间栅格往往非常大，它们通常使用高级压缩技术进行存储。最新的开放标准是 JPEG 2000 格式，它是 JPEG 格式的一个升级，包括小波压缩和一些其他功能，如地理参考数据。**多分辨率无缝图像数据库**（**MrSID**）（`.sid`）和**增强型压缩小波**（**ECW**）（`.ecw`）是两种在地理空间环境中常见的专有波压缩格式。
- en: The TIFF format supports compression, including the **Lempel-Ziv-Welch** (**LZW**)
    algorithm. It must be noted that compressed data is suitable as part of a basemap,
    but should not be used for remote sensing processing. Compressed images are designed
    to look visually correct but often alter the original cell value. Lossless compression
    algorithms try to avoid degrading the source data, but it's generally considered
    a bad idea to attempt to perform spectral analysis on data that has been through
    compression. The JPEG format is designed to be a lossy format that sacrifices
    data for a smaller file size. It is also commonly encountered, so it is important
    to remember this fact to avoid invalid results.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: TIFF 格式支持压缩，包括 **Lempel-Ziv-Welch**（**LZW**）算法。需要注意的是，压缩数据适合作为基础地图的一部分，但不应用于遥感处理。压缩图像旨在在视觉上正确显示，但通常会改变原始单元格值。无损压缩算法试图避免降低源数据，但通常认为对经过压缩的数据进行光谱分析是一个糟糕的主意。JPEG
    格式旨在成为一个有损格式，牺牲数据以换取更小的文件大小。它也很常见，因此记住这个事实很重要，以避免得到无效的结果。
- en: ASCII Grids
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ASCII 网格
- en: 'Another means of storing raster data, often elevation data, is in ASCII Grid
    files. This file format was created by Esri, but has become an unofficial standard
    supported by most software packages. An ASCII Grid is a simple text file containing
    (*x*, *y*) values as rows and columns. The spatial information for the raster
    is contained in a simple header. The format of the file is as follows:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种存储栅格数据的方式，通常是高程数据，是使用 ASCII 网格文件。这种文件格式最初由 Esri 创建，但已成为大多数软件包支持的非官方标准。ASCII
    网格是一个简单的文本文件，包含作为行和列的 (*x*, *y*) 值。栅格的空间信息包含在简单的标题中。文件格式如下：
- en: '[PRE6]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'While not the most efficient way to store data, ASCII Grid files are very popular
    because they don''t require any special data libraries to create or access geospatial
    raster data. These files are often distributed as `.zip` files. The header values
    in the preceding format contain the following information:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不是存储数据的最高效方式，但 ASCII 网格文件因其不需要任何特殊的数据库来创建或访问地理空间栅格数据而非常流行。这些文件通常以 `.zip` 文件的形式分发。前述格式中的标题值包含以下信息：
- en: The number of columns
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列数
- en: The number of rows
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行数
- en: The *x*-axis cell center coordinate | *x*-axis lower-left corner coordinate
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*x*-轴单元格中心坐标 | *x*-轴左下角坐标'
- en: The *y*-axis cell center coordinate | *y*-axis lower-left corner coordinate
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*y*-轴单元格中心坐标 | *y*-轴左下角坐标'
- en: The cell size in mapping units
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在地图单位中的单元格大小
- en: The no-data value (typically, 9,999)
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无数据值（通常是 9,999）
- en: World files
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 世界文件
- en: World files are simple text files that can provide geospatial referencing information
    to any image externally for file formats that typically have no native support
    for spatial information, including JPEG, GIF, PNG, and BMP. The world file is
    recognized by geospatial software due to its naming convention. The most common
    way to name a world file is by using the raster file name and then altering the
    extension to remove the middle letter and adding `w` at the end.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 世界文件是简单的文本文件，可以为任何图像提供地理空间参考信息，这些图像通常没有对空间信息提供原生支持，包括 JPEG、GIF、PNG 和 BMP。世界文件因其命名约定而被地理空间软件识别。最常见的世界文件命名方式是使用栅格文件名，然后更改扩展名以删除中间字母，并在末尾添加
    `w`。
- en: 'The following table shows some examples of raster images in different formats
    and the associated world file name based on the convention:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 下表展示了不同格式的栅格图像及其根据惯例关联的世界文件名的一些示例：
- en: '| Raster file name | World file name |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| 栅格文件名 | 世界文件名 |'
- en: '| `World.jpg` | `World.jgw` |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| `World.jpg` | `World.jgw` |'
- en: '| `World.tif` | `World.tfw` |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| `World.tif` | `World.tfw` |'
- en: '| `World.bmp` | `World.bpw` |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| `World.bmp` | `World.bpw` |'
- en: '| `World.png` | `World.pgw` |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| `World.png` | `World.pgw` |'
- en: '| `World.gif` | `World.gfw` |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `World.gif` | `World.gfw` |'
- en: 'The structure of a world file is very simple. It is a six-line text file, as
    follows:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 世界文件的结构非常简单。它是一个六行文本文件，如下所示：
- en: 'Line 1: The cell size along the *x*-axis in ground units'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第 1 行：沿 *x*-轴的单元格大小（地面单位）
- en: 'Line 2: The rotation on the *y*-axis'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第 2 行：沿 *y*-轴的旋转
- en: 'Line 3: The rotation on the *x*-axis'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第 3 行：沿 *x*-轴的旋转
- en: 'Line 4: The cell size along the *y*-axis in ground units'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第 4 行：沿 *y*-轴的单元格大小（地面单位）
- en: 'Line 5: The center *x*-coordinate of the upper-left cell'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第 5 行：左上单元格的中心 *x*-坐标
- en: 'Line 6: The center *y*-coordinate of the upper-left cell'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第 6 行：左上单元格的中心 *y*-坐标
- en: 'The following is an example of world file values:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是世界文件值的示例：
- en: '[PRE7]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The (*x*, *y*) coordinates and the (*x*, *y*) cell size contained in lines 1,
    4, 5, and 6 allow you to calculate the coordinate of any cell or the distance
    across a set of cells. The rotation values are important for geospatial software
    because remotely sensed images are often rotated due to the data collection platform.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 第1、4、5和6行包含的(*x*, *y*)坐标和(*x*, *y*)单元格大小，允许您计算任何单元格的坐标或一组单元格之间的距离。旋转值对于地理空间软件很重要，因为遥感图像通常由于数据收集平台的原因而旋转。
- en: Rotating the images runs the risk of resampling the data and, therefore, data
    loss, so the rotation values allow the software to account for the distortion.
    The surrounding pixels outside the image are typically assigned a `no data` value
    and represented as the color black.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转图像存在重新采样数据的风险，因此可能会丢失数据，因此旋转值允许软件考虑这种扭曲。图像周围的像素通常被分配一个`无数据`值，并以黑色表示。
- en: 'The following image, courtesy of the **U.S. Geological Survey** (**USGS**)
    from [https://viewer.nationalmap.gov/advanced-viewer/](https://viewer.nationalmap.gov/advanced-viewer/),
    demonstrates image rotation, where the satellite collection path is oriented from
    southeast to northeast, but the underlying basemap is north:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像由美国地质调查局（U.S. Geological Survey，**USGS**）提供，来自[https://viewer.nationalmap.gov/advanced-viewer/](https://viewer.nationalmap.gov/advanced-viewer/)，展示了图像旋转，其中卫星收集路径从东南向东北方向延伸，但底图是北向：
- en: '![](img/5827a80b-d807-473f-b890-10df982a5080.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5827a80b-d807-473f-b890-10df982a5080.png)'
- en: World files are a great tool when working with raster data in Python. Most geospatial
    software and data libraries support world files, so they are usually a good choice
    when it comes to georeferencing.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python处理栅格数据时，世界文件是一个非常有用的工具。大多数地理空间软件和数据库支持世界文件，因此在地理参照时通常是一个不错的选择。
- en: You'll find that world files are very useful, but as you use them infrequently,
    you will forget what the unlabeled contents represent. A quick reference for world
    files is available at [https://kralidis.ca/gis/worldfile.htm](http://kralidis.ca/gis/worldfile.htm).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现世界文件非常有用，但由于您不经常使用它们，您可能会忘记未标记的内容代表什么。有关世界文件的快速参考可在[https://kralidis.ca/gis/worldfile.htm](http://kralidis.ca/gis/worldfile.htm)找到。
- en: Vector data and raster data are the two most common data types. However, there
    is another type that is gaining popularity due to the cost of collecting it gradually
    becoming cheaper. That type is point cloud data, and we'll examine it next.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 向量数据和栅格数据是两种最常见的数据类型。然而，由于收集成本逐渐降低，另一种类型的数据正在变得越来越受欢迎。这种类型是点云数据，我们将在下一节中对其进行探讨。
- en: What is point cloud data?
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 点云数据是什么？
- en: Point cloud data is any data collected as the (*x*, *y*, *z*) location of a
    surface point based on some sort of focused energy return. This can be created
    using lasers, radar waves, acoustic soundings, or other waveform generation devices.
    The spacing between points is arbitrary and dependent on the type and position
    of the sensor collecting the data.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 点云数据是指基于某种聚焦能量返回的表面点的(*x*, *y*, *z*)位置收集的任何数据。这可以使用激光、雷达波、声纳或其他波形生成设备创建。点之间的间距是任意的，并且取决于收集数据的传感器的类型和位置。
- en: In this book, we will primarily be concerned with LIDAR data and radar data.
    Radar point cloud data is typically collected on space missions, while LIDAR is
    typically collected by terrestrial or airborne vehicles. Conceptually, both types
    of data are similar.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将主要关注LIDAR数据和雷达数据。雷达点云数据通常在太空任务中收集，而LIDAR通常由地面或空中车辆收集。从概念上讲，这两种类型的数据是相似的。
- en: LIDAR
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LIDAR
- en: LIDAR uses powerful laser range-finding systems to model the world with very
    high precision. The term **LIDAR**, or LiDAR, is a combination of the words *light*
    and *radar*. Some people claim it also stands for **Light Detection and Ranging**.
    LIDAR sensors can be mounted on aerial platforms, including satellites, airplanes,
    or helicopters. They can also be mounted on vehicles for ground-based collection.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: LIDAR使用强大的激光测距系统以非常高的精度来模拟世界。术语**LIDAR**，或LiDAR，是**光**和**雷达**这两个词的组合。有些人声称它还代表**光探测与测距**。LIDAR传感器可以安装在空中平台上，包括卫星、飞机或直升机。它们也可以安装在车辆上进行地面收集。
- en: Due to the high-speed, continuous data collection provided by LIDAR, and a wide
    field of view – often 360 degrees of the sensor – LIDAR data doesn't typically
    have a rectangular footprint the way other forms of raster data do. LIDAR datasets
    are usually called point clouds because the data is a stream of *(x,y,z*) locations,
    where *z* is the distance from the laser to a detected object and the (*x*,*y*)
    values are the projected location of the object calculated from the location of
    the sensor.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 由于激光雷达提供的高速、连续数据收集和广阔的视野——通常是传感器的360度——激光雷达数据通常不具有其他形式栅格数据那样的矩形足迹。激光雷达数据集通常被称为点云，因为数据是一系列*(x,y,z*)位置，其中*z*是从激光到检测到的对象的距离，(*x*,*y*)值是从传感器位置计算出的对象的投影位置。
- en: 'The following image, courtesy of USGS, shows a point cloud LIDAR dataset in
    an urban area using a terrestrial sensor, as opposed to an aerial one. The colors
    are based on the strength of the laser''s energy return, with red areas being
    closer to the LIDAR sensor and green areas farther away, which can give a precise
    height to within a few centimeters:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像，由美国地质调查局提供，展示了一个城市区域使用地面传感器获取的点云激光雷达数据集，而不是空中传感器。颜色基于激光能量返回的强度，红色区域靠近激光雷达传感器，绿色区域较远，这可以精确到几厘米的高度：
- en: '![](img/cfdac61c-49f8-41cb-bf3d-a9733d879a9a.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cfdac61c-49f8-41cb-bf3d-a9733d879a9a.png)'
- en: The most common data format for LIDAR data is the **LIDAR Exchange Format**
    (**LAS**), which is a community standard. LIDAR data can be represented in many
    ways, including a simple text file with one (*x*, *y*, *z*) tuple per line. Sometimes,
    LIDAR data can be colorized using image pixel colors that have been collected
    at the same time. LIDAR data can also be used to create 2D elevation rasters.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 激光雷达数据最常见的数据格式是**激光雷达交换格式**（**LAS**），这是一个社区标准。激光雷达数据可以用多种方式表示，包括每行一个简单的(*x*,
    *y*, *z*)元组的文本文件。有时，可以使用同时收集到的图像像素颜色对激光雷达数据进行着色。激光雷达数据还可以用于创建2D高程栅格。
- en: This technique is the most common use for LIDAR in geospatial analysis. Any
    other use requires specialized software that allows the user to work in 3D. In
    that case, other geospatial data cannot be combined with the point cloud.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术是激光雷达在地理空间分析中最常见的用途。任何其他用途都需要专门的软件，允许用户在3D中进行工作。在这种情况下，其他地理空间数据不能与点云结合。
- en: What are web services?
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是网络服务？
- en: Geospatial web services allow users to perform data discovery, data visualization,
    and data access across the web. Web services are usually accessed by applications
    based on user input, such as zooming in to an online map or searching a data catalog.
    The most common protocols are the **Web Map Service** (**WMS**), which returns
    a rendered map image, and **Web Feature Service** (**WFS**), which typically returns
    GML, which was mentioned in this chapter's introduction.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间网络服务允许用户在网络上进行数据发现、数据可视化和数据访问。网络服务通常通过基于用户输入的应用程序访问，例如放大在线地图或搜索数据目录。最常用的协议是**网络地图服务**（**WMS**），它返回一个渲染的地图图像，以及**网络要素服务**（**WFS**），它通常返回GML，这在本章的引言中已提到。
- en: Many WFS services can also return KML, JSON, zipped shapefiles, and other formats.
    These services are called through HTTP `GET` requests. The following URL is an
    example of a WMS `GET` request, which returns a map image of the world that is
    640 pixels wide and 400 pixels tall and has an EPSG code of 900913: [http://ows.mundialis.de/services/service?SERVICE=wms&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&STYLES=&WIDTH=600&HEIGHT=400&LAYERS=TOPO-OSM-WMS&SRS=EPSG:900913&BBOX=-20037508,-20037508,20037508,20037508](http://ows.mundialis.de/services/service?SERVICE=wms&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&STYLES=&WIDTH=600&HEIGHT=400&LAYERS=TOPO-OSM-WMS&SRS=EPSG:900913&BBOX=-20037508,-20037508,20037508,20037508).
    [](http://osm.woc.noaa.gov/mapcache?SERVICE=wms&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&WIDTH=600&HEIGHT=400&LAYERS=osm&SRS=EPSG:900913&BBOX=-20037508,-20037508,20037508,20037508)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 许多WFS服务也可以返回KML、JSON、压缩的shapefile和其他格式。这些服务通过HTTP `GET`请求调用。以下URL是一个WMS `GET`请求的示例，它返回一个640像素宽、400像素高的世界地图图像，具有EPSG代码900913：[http://ows.mundialis.de/services/service?SERVICE=wms&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&STYLES=&WIDTH=600&HEIGHT=400&LAYERS=TOPO-OSM-WMS&SRS=EPSG:900913&BBOX=-20037508,-20037508,20037508,20037508](http://ows.mundialis.de/services/service?SERVICE=wms&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&STYLES=&WIDTH=600&HEIGHT=400&LAYERS=TOPO-OSM-WMS&SRS=EPSG:900913&BBOX=-20037508,-20037508,20037508,20037508)。[链接](http://osm.woc.noaa.gov/mapcache?SERVICE=wms&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&WIDTH=600&HEIGHT=400&LAYERS=osm&SRS=EPSG:900913&BBOX=-20037508,-20037508,20037508,20037508)
- en: Web services are rapidly evolving. The Open GIS Consortium is adding new standards
    for sensor networks and other geospatial contexts. **REpresentational State Transfer**
    (**REST**) services are also commonly used. REST services use simple URLs to make
    requesting data very easy to implement in nearly any programming language by tailoring
    URL parameters and their values accordingly. Nearly every programming language
    has robust HTTP client libraries that are capable of using REST services.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 网络服务正在迅速发展。开放地理信息系统联盟正在为传感器网络和其他地理空间环境添加新的标准。**表示状态转移**（**REST**）服务也被广泛使用。REST服务使用简单的URL，通过相应地定制URL参数及其值，使得在几乎任何编程语言中实现数据请求变得非常容易。几乎每种编程语言都有强大的HTTP客户端库，能够使用REST服务。
- en: These REST services can return many types of data, including images, XML, or
    JSON. There is no overarching geospatial REST standard yet, but the OGC has been
    working on one for quite some time. Esri has created a working implementation
    that is currently widely used.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这些REST服务可以返回多种类型的数据，包括图像、XML或JSON。目前还没有统一的地理空间REST标准，但OGC已经在这方面工作了一段时间。Esri已经创建了一个工作实现，目前被广泛使用。
- en: 'The following URL is an example of an Esri geospatial REST service that would
    return KML based on a weather radar image layer. You can add this URL to Google
    Earth as a network link, or you can download it as compressed KML (KMZ) in a browser
    to import it into another program: [https://idpgis.ncep.noaa.gov/arcgis/rest/services/NWS_Observations/radar_base_reflectivity/MapServer/generateKml?docName=NWSRadar&layers=0&layerOptions=separateImage](https://idpgis.ncep.noaa.gov/arcgis/rest/services/NWS_Observations/radar_base_reflectivity/MapServer/generateKml?docName=NWSRadar&layers=0&layerOptions=separateImage).'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 以下URL是一个Esri地理空间REST服务的示例，该服务基于天气雷达图像层返回KML。您可以将此URL添加到Google Earth中作为网络链接，或者您可以在浏览器中将其下载为压缩的KML（KMZ）文件以导入到另一个程序：[https://idpgis.ncep.noaa.gov/arcgis/rest/services/NWS_Observations/radar_base_reflectivity/MapServer/generateKml?docName=NWSRadar&layers=0&layerOptions=separateImage](https://idpgis.ncep.noaa.gov/arcgis/rest/services/NWS_Observations/radar_base_reflectivity/MapServer/generateKml?docName=NWSRadar&layers=0&layerOptions=separateImage)。
- en: 'You can find tutorials on the myriad of OGC services here: [http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html](http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html).'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下链接找到关于OGC服务的教程：[http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html](http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html)。
- en: At the time of writing this book, the OGC is going through an API evolution
    that will significantly lower the barrier of using geospatial APIs through technologies
    such as REST, OpenAPI, JSON/HTML, and Swagger. You can track these trends through
    OGC's technology roadmap here: [https://github.com/opengeospatial/OGC-Technology-Trends](https://github.com/opengeospatial/OGC-Technology-Trends).
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，开放地理空间联盟（OGC）正在经历一次API演变，这将通过REST、OpenAPI、JSON/HTML和Swagger等技术显著降低使用地理空间API的门槛。您可以通过OGC的技术路线图跟踪这些趋势：[https://github.com/opengeospatial/OGC-Technology-Trends](https://github.com/opengeospatial/OGC-Technology-Trends)。
- en: Now, we'll move from individual file formats to powerful geodatabases that can
    consolidate data through a single API.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将从单个文件格式转向功能强大的地理数据库，通过单个API整合数据。
- en: Understanding geospatial databases
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解地理空间数据库
- en: A geospatial database, or geodatabase, refers to an entire category of file
    formats, data schemas, and even software. In [Chapter 3](a5e439d1-e7fd-46b4-8fd3-8f811bfe73e4.xhtml), *The
    Geospatial Technology Landscape*, we'll cover geodatabases as software packages,
    formally known as database management systems. But in this section, we'll describe
    their attributes as file formats. Geodatabases historically stored only vector
    data, though modern geodatabases are well-suited for raster data management as
    well.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间数据库，或称地理数据库，指的是一类文件格式、数据模式，甚至软件。在第3章《地理空间技术景观》中，我们将介绍地理数据库作为软件包，正式称为数据库管理系统。但在此节中，我们将描述它们作为文件格式的属性。地理数据库历史上仅存储矢量数据，尽管现代地理数据库也非常适合进行栅格数据管理。
- en: Geodatabases can exhibit all of the common traits we noted previously. This
    information is stored in the database in what we call the database model. A very
    popular model is the traditional relational model, which uses tables of rows and
    columns. Each row and column combination is called a cell. Rows can be related
    to another table to link information using a designated column where each cell
    becomes a key referencing a cell in another table that then links the rows together.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 地理数据库可以表现出我们之前提到的所有常见特征。这些信息存储在数据库中，我们称之为数据库模型。一个非常流行的模型是传统的关联模型，它使用行和列的表格。每一行和列的组合称为单元格。行可以通过指定列与其他表相关联，以使用每个单元格作为引用另一个表中单元格的关键，从而将行连接起来。
- en: The actual names of the columns and the relationships among data constitute
    the data definition. At a minimum, geodatabases associate a geometry description
    with attributes about the object the geometry represents. Single points are often
    represented by `x` and `y` columns. However, polygons and polylines have arbitrary
    numbers of points. This means that geodatabases often store geometry information
    as a **BLOB** using a format standard known as **Well-Known Binary**, or **WKB**.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 列的实际名称和数据之间的关系构成了数据定义。至少，地理数据库将几何描述与表示该几何对象的属性关联起来。单个点通常由`x`和`y`列表示。然而，多边形和多折线有任意数量的点。这意味着地理数据库通常将几何信息作为**BLOB**存储，使用一种称为**已知二进制**或**WKB**的格式标准。
- en: The attribute information is usually defined as data types such as integers,
    floating-point decimal numbers, strings, or dates. The table may also include
    projection information for map display, as well as a spatial indexing column to
    speed up searching and geospatial comparisons. A geodatabase may also have another
    related table in order to link detailed metadata about the geospatial data.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 属性信息通常定义为整数、浮点小数、字符串或日期等数据类型。表格还可以包括用于地图显示的投影信息，以及一个用于加速搜索和地理空间比较的空间索引列。地理数据库还可能有一个相关的表，以便链接关于地理空间数据的详细元数据。
- en: Large geospatial raster datasets are rarely stored directly in the database.
    Typically, the raster data is stored on disk with a name, and a filesystem reference
    is stored in the database that points to the raster data. A geodatabase may also
    store a geometry column representing the ground footprint of the raster data,
    which can then be used as a proxy for geospatial operations.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 大型地理空间栅格数据集很少直接存储在数据库中。通常，栅格数据存储在磁盘上，并带有名称，同时在数据库中存储一个文件系统引用，该引用指向栅格数据。地理数据库还可能存储一个表示栅格数据地面足迹的几何列，然后可以用作地理空间操作的代理。
- en: Summary
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You now have the background needed to work with common types of geospatial data.
    You also know about the common traits of geospatial datasets that will allow you
    to evaluate unfamiliar types of data and identify key elements that will drive
    you toward which tools to use when interacting with this data.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在拥有了处理常见类型地理空间数据所需的背景知识。您还了解了地理空间数据集的常见特征，这将使您能够评估不熟悉的数据类型，并识别出将引导您选择使用哪些工具与这些数据进行交互的关键元素。
- en: In the next chapter, we'll examine the modules and libraries that you can use
    to work with geospatial datasets. We will learn about the geospatial technology
    ecosystem, which consists of thousands of software libraries and packages. We
    will also understand the hierarchy of geospatial software and how it allows you
    to quickly comprehend and evaluate any geospatial tool.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨您可以使用以处理地理空间数据集的模块和库。我们将了解地理空间技术生态系统，它由数千个软件库和包组成。我们还将了解地理空间软件的层次结构以及它是如何帮助您快速理解和评估任何地理空间工具的。
- en: Further reading
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: You can find tutorials on the myriad of OGC services here: [http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html](http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html)[.](http://www.ogcnetwork.net/tutorials)
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处找到关于OGC服务的教程：[http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html](http://cite.opengeospatial.org/pub/cite/files/edu/fundamental-concepts/text/basic.html)[.](http://www.ogcnetwork.net/tutorials)
