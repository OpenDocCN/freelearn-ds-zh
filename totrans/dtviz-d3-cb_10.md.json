["```py\n<script type=\"text/javascript\">\n    var r = 400;\n\n    var svg = d3.select(\"body\")\n            .append(\"svg\");\n\n    var positionLabel = svg.append(\"text\")\n            .attr(\"x\", 10)\n            .attr(\"y\", 30);\n\n    svg.on(\"mousemove\", function () { //<-A\n        printPosition();\n    });\n\n    function printPosition() { //<-B\n        var position = d3.mouse(svg.node()); //<-C\n        positionLabel.text(position);\n    }  \n\n    svg.on(\"click\", function () { //<-D\n        for (var i = 1; i < 5; ++i) {\n            var position = d3.mouse(svg.node());\n\n            var circle = svg.append(\"circle\")\n                    .attr(\"cx\", position[0])\n                    .attr(\"cy\", position[1])\n                    .attr(\"r\", 0)\n                    .style(\"stroke-width\", 5 / (i))\n                    .transition()\n                        .delay(Math.pow(i, 2.5) * 50)\n                        .duration(2000)\n                        .ease('quad-in')\n                    .attr(\"r\", r)\n                    .style(\"stroke-opacity\", 0)\n                    .each(\"end\", function () {\n                        d3.select(this).remove();\n                    });\n        }\n    });\n</script>\n```", "```py\nsvg.on(\"mousemove\", function () { //<-A\n    printPosition();\n});\n\nfunction printPosition() { //<-B\n    var position = d3.mouse(svg.node()); //<-C\n    positionLabel.text(position);\n}  \n```", "```py\nsvg.on(\"click\", function () { //<-D\n        for (var i = 1; i < 5; ++i) {\n            var position = d3.mouse(svg.node());\n\n        var circle = svg.append(\"circle\")\n                .attr(\"cx\", position[0])\n                .attr(\"cy\", position[1])\n                .attr(\"r\", 0)\n                .style(\"stroke-width\", 5 / (i)) // <-E\n                .transition()\n                    .delay(Math.pow(i, 2.5) * 50) // <-F\n                    .duration(2000)\n                    .ease('quad-in')\n                .attr(\"r\", r)\n                .style(\"stroke-opacity\", 0)\n                .each(\"end\", function () {\n                    d3.select(this).remove(); // <-G\n                });\n        }\n});\n```", "```py\n<script type=\"text/javascript\">\n    var initR = 100, \n        r = 400, \n        thickness = 20;\n\n    var svg = d3.select(\"body\")\n            .append(\"svg\");\n\n    d3.select(\"body\")\n            .on(\"touchstart\", touch)\n            .on(\"touchend\", touch);\n\n    function touch() {\n        d3.event.preventDefault();\n\n        var arc = d3.svg.arc()\n                .outerRadius(initR)\n                .innerRadius(initR - thickness);\n\n        var g = svg.selectAll(\"g.touch\")\n                .data(d3.touches(svg.node()), function (d) {\n                    return d.identifier;\n                });\n\n        g.enter()\n            .append(\"g\")\n            .attr(\"class\", \"touch\")\n            .attr(\"transform\", function (d) {\n                return \"translate(\" + d[0] + \",\" + d[1] + \")\";\n            })\n            .append(\"path\")\n                .attr(\"class\", \"arc\")\n                .transition().duration(2000)\n                .attrTween(\"d\", function (d) {\n                    var interpolate = d3.interpolate(\n                            {startAngle: 0, endAngle: 0},\n                            {startAngle: 0, endAngle: 2 * Math.PI}\n                        );\n                    return function (t) {\n                        return arc(interpolate(t));\n                    };\n                })\n                .each(\"end\", function (d) {\n                    if (complete(g))\n                        ripples(d);\n                    g.remove();\n                });\n\n        g.exit().remove().each(function () {\n            this.__stopped__ = true;\n        });\n    }\n\n    function complete(g) {\n        return g.node().__stopped__ != true;\n    }\n\n    function ripples(position) {\n        for (var i = 1; i < 5; ++i) {\n            var circle = svg.append(\"circle\")\n                    .attr(\"cx\", position[0])\n                    .attr(\"cy\", position[1])\n                    .attr(\"r\", initR - (thickness / 2))\n                    .style(\"stroke-width\", thickness / (i))\n                .transition().delay(Math.pow(i, 2.5) * 50).duration(2000).ease('quad-in')\n                    .attr(\"r\", r)\n                    .style(\"stroke-opacity\", 0)\n                    .each(\"end\", function () {\n                        d3.select(this).remove();\n                    });\n        }\n    }\n</script>\n```", "```py\nd3.select(\"body\")\n            .on(\"touchstart\", touch)\n            .on(\"touchend\", touch);\n```", "```py\nd3.event.preventDefault();\n```", "```py\nvar g = svg.selectAll(\"g.touch\")\n    .data(d3.touches(svg.node()), function (d) {\n        return d.identifier;\n    }); \n```", "```py\n        g.enter()\n            .append(\"g\")\n            .attr(\"class\", \"touch\")\n            .attr(\"transform\", function (d) {\n                return \"translate(\" + d[0] + \",\" + d[1] + \")\";\n            })\n            .append(\"path\")\n                .attr(\"class\", \"arc\")\n                .transition().duration(2000).ease('linear')\n                .attrTween(\"d\", function (d) { // <-A\n                    var interpolate = d3.interpolate(\n                            {startAngle: 0, endAngle: 0},\n                            {startAngle: 0, endAngle: 2 * Math.PI}\n                        );\n                    return function (t) {\n                        return arc(interpolate(t));\n                    };\n                })\n                .each(\"end\", function (d) { // <-B\n                    if (complete(g))\n                        ripples(d);\n                    g.remove();\n                });\n```", "```py\n        g.exit().remove().each(function () {\n            this.__stopped__ = true;\n        });\n```", "```py\n<script type=\"text/javascript\">\n    var width = 960, height = 500, r = 50;\n\n    var data = [\n        [width / 2 - r, height / 2 - r],\n        [width / 2 - r, height / 2 + r],\n        [width / 2 + r, height / 2 - r],\n        [width / 2 + r, height / 2 + r]\n    ];\n\n    var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .call(\n                d3.behavior.zoom()\n                    .scaleExtent([1, 10])\n                    .on(\"zoom\", zoom)\n            )\n            .append(\"g\");\n\n    svg.selectAll(\"circle\")\n            .data(data)\n            .enter().append(\"circle\")\n            .attr(\"r\", r)\n            .attr(\"transform\", function (d) {\n                return \"translate(\" + d + \")\";\n            });\n\n    function zoom() {\n        svg.attr(\"transform\", \"translate(\" \n            + d3.event.translate \n+ \")scale(\" + d3.event.scale + \")\");\n    }\n</script>\n```", "```py\nvar svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"style\", \"1px solid black\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .call( // <-A\n                d3.behavior.zoom() // <-B\n                    .scaleExtent([1, 10]) // <-C\n                    .on(\"zoom\", zoom) // <-D\n            )\n            .append(\"g\");\n```", "```py\nfunction zoom() {\n        svg.attr(\"transform\", \"translate(\" \n            + d3.event.translate \n            + \")scale(\" + d3.event.scale + \")\");\n}\n```", "```py\n<script type=\"text/javascript\">\n    var width = 960, height = 500, r = 50;\n\n    var data = [\n        [width / 2 - r, height / 2 - r],\n        [width / 2 - r, height / 2 + r],\n        [width / 2 + r, height / 2 - r],\n        [width / 2 + r, height / 2 + r]\n    ];\n\n    var svg = d3.select(\"body\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\");\n\n    var drag = d3.behavior.drag()\n            .on(\"drag\", move);\n\n    svg.selectAll(\"circle\")\n            .data(data)\n            .enter().append(\"circle\")\n            .attr(\"r\", r)\n            .attr(\"transform\", function (d) {\n                return \"translate(\" + d + \")\";\n            })\n            .call(drag);\n\n    function move(d) {\n        var x = d3.event.x, \n            y = d3.event.y;\n\n        if(inBoundaries(x, y))\n            d3.select(this) \n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + x + \", \" + y + \")\";\n                });\n    }\n\n    function inBoundaries(x, y){\n        return (x >= (0 + r) && x <= (width - r)) \n            && (y >= (0 + r) && y <= (height - r));\n    }\n</script>\n```", "```py\nvar drag = d3.behavior.drag() // <-A\n            .on(\"drag\", move);\n```", "```py\nsvg.selectAll(\"circle\")\n            .data(data)\n            .enter().append(\"circle\")\n            .attr(\"r\", r)\n            .attr(\"transform\", function (d) {\n                return \"translate(\" + d + \")\";\n            })\n            .call(drag); // <-B\n```", "```py\n   function move(d) {\n        var x = d3.event.x, // <-C\n            y = d3.event.y;\n\n        if(inBoundaries(x, y))\n            d3.select(this) \n                .attr(\"transform\", function (d) { // <-D\n                    return \"translate(\" + x + \", \" + y + \")\";\n                });\n}\n```", "```py\n    function inBoundaries(x, y){\n        return (x >= (0 + r) && x <= (width - r)) \n            && (y >= (0 + r) && y <= (height - r));\n}\n```"]