["```py\nlayer1 = iface.addRasterLayer(\"/path/to/NE1_50M_SR_W/NE1_50M_SR_W.tif\", \"basemap\")\n```", "```py\niface.zoomFull()\n```", "```py\nlayer2 = iface.addVectorLayer(\"/path/to/ne_50m_urban_areas/ne_50m_urban_areas.shp\", \"urban\", \"ogr\")\n```", "```py\niface.mapCanvas().setExtent(QgsRectangle(-125, 31, -113, 38))\niface.mapCanvas().refresh()\n```", "```py\nlayer3 = iface.addVectorLayer(\"/path/to/ne_50m_rivers_lake_centerlines/ne_50m_rivers_lake_centerlines.shp\", \"water\", \"ogr\")\n```", "```py\nfrom PyQt4.QtGui import QColor\nlayer3.rendererV2().symbols()[0].setColor(QColor(\"#4040FF\"))\niface.mapCanvas().refresh()\n```", "```py\nclass ZoomToPoint:\n    def __init__(self, iface):\n        self.iface = iface\n\n    def initGui(self):\n        ...\n\n    def unload(self):\n        ...\n\n    def run(self):\n        ...\n```", "```py\ndef classFactory(iface): \n      from zoomtopoint import ZoomToPoint \n      return ZoomToPoint(iface) \n```", "```py\ndef __init__(self, iface):\n    self.iface = iface\n\ndef initGui(self):\n    ...\n    self.iface.addPluginToMenu(\"&Zoom to point...\", self.action)\n```", "```py\ndef run(self):\n    dlg = ZoomToPointDialog()\n    ...\n    dlg.show()\n    result = dlg.exec_()\n    if result == 1:\n        x = dlg.ui.xCoord.text()\n        y = dlg.ui.yCoord.text()\n        scale = dlg.ui.spinBoxScale.value()\n        rect = QgsRectangle(float(x) â€“ scale,\n                            float(y) - scale,\n                            float(x) + scale,\n                            float(y) + scale)\n        mc=self.iface.mapCanvas() \n        mc.setExtent(rect)\n        mc.refresh()\n        ...\n```", "```py\nSET OSGEO4W_ROOT=C:\\OSGeo4W\nSET QGIS_PREFIX=%OSGEO4W_ROOT%\\apps\\qgis\nSET PATH=%PATH%;%QGIS_PREFIX%\\bin\nSET PYTHONPATH=%QGIS_PREFIX%\\python;%PYTHONPATH%\n\n```", "```py\nexport PYTHONPATH=\"$PYTHONPATH:/Applications/QGIS.app/Contents/Resources/python\"\nexport DYLD_FRAMEWORK_PATH=\"/Applications/QGIS.app/Contents/Frameworks\"\nexport QGIS_PREFIX=\"/Applications/QGIS.app/Contents/Resources\"\n\n```", "```py\nexport PYTHONPATH=\"/path/to/qgis/build/output/python/\"\nexport LD_LIBRARY_PATH=\"/path/to/qgis/build/output/lib/\"\nexport QGIS_PREFIX=\"/path/to/qgis/build/output/\"\n\n```", "```py\n>>> import qgis\n\n```", "```py\n>>> \n\n```", "```py\nImportError: No module named qgis\n\n```", "```py\nimport qgis.core\n```", "```py\nImportError: libqgis_core.so.1.5.0: cannot open shared object file: No such file or directory\n\n```", "```py\nfrom qgis.core import *\n```", "```py\nimport os\nQgsApplication.setPrefixPath(os.environ['QGIS_PREFIX'], True)\n```", "```py\nQgsApplication.initQgis()\n```", "```py\nQgsApplication.exitQgis()\n```", "```py\nimport os\nfrom qgis.core import *\n\nQgsApplication.setPrefixPath(os.environ['QGIS_PREFIX'], True)\nQgsApplication.initQgis()\n\n# ...\n\nQgsApplication.exitQgis()\n```", "```py\napp = QApplication(sys.argv)\n\nviewer = MapViewer(\"/path/to/shapefile.shp\")\nviewer.show()\n\napp.exec_()\n```", "```py\nclass MapViewer(QMainWindow):\n    def __init__(self, shapefile):\n        QMainWindow.__init__(self)\n        self.setWindowTitle(\"Map Viewer\")\n\n        canvas = QgsMapCanvas()\n        canvas.useImageToRender(False)\n        canvas.setCanvasColor(Qt.white)\n        canvas.show()\n\n        layer = QgsVectorLayer(shapefile, \"layer1\", \"ogr\")\n        if not layer.isValid():\n            raise IOError(\"Invalid shapefile\")\n\n        QgsMapLayerRegistry.instance().addMapLayer(layer)\n        canvas.setExtent(layer.extent())\n        canvas.setLayerSet([QgsMapCanvasLayer(layer)])\n\n        layout = QVBoxLayout()\n        layout.addWidget(canvas)\n\n        contents = QWidget()\n        contents.setLayout(layout)\n        self.setCentralWidget(contents)\n```", "```py\nimport sys\nfrom PyQt4.QtGui import *\nfrom PyQt4.QtCore import Qt\n```"]