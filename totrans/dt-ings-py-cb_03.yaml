- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Data Discovery – Understanding Our Data before Ingesting It
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据发现 – 在摄取之前理解我们的数据
- en: As you may already have noticed, **data ingestion** is not just retrieving data
    from a source and inserting it in another place. It involves understanding some
    business concepts, secure access to the data, and how to store it, and now it
    is essential to discover our data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能已经注意到的，**数据摄取**不仅仅是将数据从源处检索出来并插入到另一个地方。它涉及到理解一些业务概念，确保对数据的安全访问，以及如何存储它，而现在发现我们的数据变得至关重要。
- en: '**Data discovery** is the process of understanding our data’s patterns and
    behaviors, ensuring the whole data pipeline will be successful. In this process,
    we will understand how our data is modeled and used, so we can set up and plan
    our ingestion using the best fit.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据发现**是理解我们数据模式和行为的流程，确保整个数据管道将成功。在这个过程中，我们将了解我们的数据是如何建模和使用的，这样我们就可以根据最佳匹配来设置和计划我们的摄取。'
- en: 'In this chapter, you will learn about the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解以下内容：
- en: Documenting the data discovery process
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录数据发现过程
- en: Configuring OpenMetadata
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置OpenMetadata
- en: Connecting OpenMetadata to our database
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将OpenMetadata连接到我们的数据库
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You can also find the code from this chapter in its GitHub repository here:
    [https://github.com/PacktPublishing/Data-Ingestion-with-Python-Cookbook](https://github.com/PacktPublishing/Data-Ingestion-with-Python-Cookbook).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在这里找到本章的代码，GitHub仓库：[https://github.com/PacktPublishing/Data-Ingestion-with-Python-Cookbook](https://github.com/PacktPublishing/Data-Ingestion-with-Python-Cookbook)。
- en: Documenting the data discovery process
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 记录数据发现过程
- en: In recent years, manual data discovery has been rapidly deprecated, giving rise
    to **machine learning** and other automated solutions, bringing fast insights
    into data in storage or online spreadsheets, such as Google Sheets.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，手动数据发现迅速被淘汰，机器学习和其他自动化解决方案兴起，为存储或在线电子表格（如Google Sheets）中的数据带来了快速洞察。
- en: Nevertheless, many small companies are just starting out their businesses or
    data areas, so implementing a paid or cost-related solution might not be a good
    idea right away. As data professionals, we also need to be malleable when applying
    the first solution to a problem – there will always be space to improve it later.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，许多小型公司刚开始他们的业务或数据领域，因此立即实施付费或成本相关的解决方案可能不是一个好主意。作为数据专业人士，我们在将第一个解决方案应用于问题时也需要具有可塑性
    – 总是会有空间来改进它。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe will cover the steps to start the data discovery process effectively.
    Even though, here, the process is more related to the manual discovery steps,
    you will see it also applies to the automated ones.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将涵盖有效启动数据发现过程的步骤。尽管在这里，这个过程更多地与手动发现步骤相关，但你也会看到它也适用于自动化步骤。
- en: Let’s start by downloading the datasets.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从下载数据集开始。
- en: For this recipe, we are going to use the *The evolution of genes in viruses
    and bacteria* dataset ([https://www.kaggle.com/datasets/thedevastator/the-evolution-of-genes-in-viruses-and-bacteria](https://www.kaggle.com/datasets/thedevastator/the-evolution-of-genes-in-viruses-and-bacteria)),
    and another one containing *hospital administration* information ([https://www.kaggle.com/datasets/girishvutukuri/hospital-administration](https://www.kaggle.com/datasets/girishvutukuri/hospital-administration)).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们将使用*病毒和细菌中基因的演变*数据集([https://www.kaggle.com/datasets/thedevastator/the-evolution-of-genes-in-viruses-and-bacteria](https://www.kaggle.com/datasets/thedevastator/the-evolution-of-genes-in-viruses-and-bacteria))，以及另一个包含*医院管理*信息([https://www.kaggle.com/datasets/girishvutukuri/hospital-administration](https://www.kaggle.com/datasets/girishvutukuri/hospital-administration))的数据集。
- en: Note
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This recipe does not require the use of the exact datasets mentioned – it covers
    generically how to apply the methodology to datasets or any data sources. Feel
    free to use any data you want.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '这个配方不需要使用提到的确切数据集 – 它普遍地说明了如何将方法论应用于数据集或任何数据源。请随意使用你想要的数据。 '
- en: The next stage is creating the documentation. You can use any software or online
    application that suits you – the important thing is to have a place to detail
    and catalog the information.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个阶段是创建文档。你可以使用任何适合你的软件或在线应用程序 – 重要的是要有一个地方来详细和分类信息。
- en: I will use **Notion** ([https://www.notion.so/](https://www.notion.so/)). Its
    home page is shown in *Figure 3**.1*. It offers a free plan and allows you to
    create separate places for different types of documentation. However, some companies
    use **Confluence by Atlassian** to document their data. It will always depend
    on the scenario you are in.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用 **Notion** ([https://www.notion.so/](https://www.notion.so/))。其主页如 *图 3.1*
    所示。它提供免费计划，并允许您为不同类型的文档创建单独的位置。然而，一些公司使用 **Atlassian 的 Confluence** 来记录他们的数据。这始终取决于您所处的场景。
- en: '![Figure 3.1 – Notion home page](img/Figure_3.01_B19453.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – Notion 主页](img/Figure_3.01_B19453.jpg)'
- en: Figure 3.1 – Notion home page
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – Notion 主页
- en: This is an optional stage where we are creating a Notion account. On the main
    page, click on **Get** **Notion free**.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个可选阶段，我们正在创建 Notion 账户。在主页上，点击 **获取 Notion 免费版**。
- en: 'Another page will appear and you can use your Google or Apple email to create
    an account, as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个页面将出现，您可以使用 Google 或 Apple 邮箱创建账户，如下所示：
- en: '![Figure 3.2 – Notion Sign up page](img/Figure_3.02_B19453.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.2 – Notion 注册页面](img/Figure_3.02_B19453.jpg)'
- en: Figure 3.2 – Notion Sign up page
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – Notion 注册页面
- en: After that, you should see a blank page with a welcome message from Notion.
    If any other action is required, just follow the page instructions.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您应该会看到一个带有 Notion 欢迎信息的空白页面。如果需要采取其他操作，只需遵循页面说明。
- en: How to do it…
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Let’s imagine a scenario where we work at a hospital and need to apply the
    data discovery process. Here is how we go about it:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们想象一个场景，我们在一家医院工作，需要应用数据发现过程。以下是我们的操作步骤：
- en: '**Identifying our data sources**: Two main departments need their data to be
    ingested—the administration and research departments. We know they usually keep
    their CSV files in a local data center so we can access them via the intranet.
    Don’t mind the filenames; generally, in a real application, they are not supported.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别我们的数据来源**：两个主要部门需要他们的数据被摄取——行政部门和研究部门。我们知道他们通常将 CSV 文件保存在本地数据中心，因此我们可以通过内网访问它们。不要在意文件名；通常，在实际应用中，它们不受支持。'
- en: 'The following are the research department’s files:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为研究部门的文件：
- en: '![Figure 3.3 – Research files on the evolution of genes in E. coli](img/Figure_3.03_B19453.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – 关于大肠杆菌基因演化的研究文件](img/Figure_3.03_B19453.jpg)'
- en: Figure 3.3 – Research files on the evolution of genes in E. coli
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – 关于大肠杆菌基因演化的研究文件
- en: 'The following are the administration department’s files:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为行政部门文件：
- en: '![Figure 3.4 – Hospital administration files](img/Figure_3.04_B19453.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.4 – 医院行政部门文件](img/Figure_3.04_B19453.jpg)'
- en: Figure 3.4 – Hospital administration files
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 医院行政部门文件
- en: '**Categorizing data per department or project**: Here, we create folders and
    subfolders related to the department and the type of data (on patients or specific
    diseases).'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**按部门或项目分类数据**：在这里，我们创建与部门和数据类型（关于患者或特定疾病）相关的文件夹和子文件夹。'
- en: '![Figure 3.5 – Research Department page](img/Figure_3.05_B19453.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.5 – 研究部门页面](img/Figure_3.05_B19453.jpg)'
- en: Figure 3.5 – Research Department page
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 研究部门页面
- en: '**Identifying the datasets or databases**: When looking at the files, we can
    find four patterns. There are the exclusive datasets: **E.Coli Genomes**, **Protein
    Annotations**, **Escherichia Virus** in general, and **Patients**.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别数据集或数据库**：在查看文件时，我们可以找到四种模式。有专属数据集：**大肠杆菌基因组**、**蛋白质注释**、**一般大肠杆菌病毒**和**患者**。'
- en: '![Figure 3.6 – Subsections created by research type and hospital administration
    topic](img/Figure_3.06_B19453.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.6 – 根据研究类型和医院行政部门主题创建的子部分](img/Figure_3.06_B19453.jpg)'
- en: Figure 3.6 – Subsections created by research type and hospital administration
    topic
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 根据研究类型和医院行政部门主题创建的子部分
- en: '**Describing our data**: Now, at the dataset level, we need to have helpful
    information about it, such as the overall description of that dataset table, when
    it is updated, where other teams can find it, a description of each column of
    the table, and, last but not least, all metadata.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**描述我们的数据**：现在，在数据集级别，我们需要有关它的有用信息，例如该数据集表的总体描述、更新时间、其他团队可以找到它的位置、表中每一列的描述，以及最后但同样重要的是，所有元数据。'
- en: '![Figure 3.7 – Patient data documentation using Notion](img/Figure_3.07_B19453.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.7 – 使用 Notion 记录患者数据](img/Figure_3.07_B19453.jpg)'
- en: Figure 3.7 – Patient data documentation using Notion
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – 使用 Notion 记录患者数据
- en: Note
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The description of where the file is stored may not be applied in all cases.
    You can find the reference of the database name instead, such as `'admin_database.patients'`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 文件存储位置的描述可能并不适用于所有情况。你可以找到数据库名称的引用，例如 `'admin_database.patients'`。
- en: How it works…
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When starting data discovery, the first objective is identifying patterns and
    categorizing them to create a logical flow. Usually, the first categorizations
    are by department or project, followed by database and dataset identification,
    and finally, describing the data inside.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始数据发现时，第一个目标是识别模式并将它们分类以创建逻辑流程。通常，最初的分类是按部门或项目，然后是数据库和数据集的识别，最后是描述数据本身。
- en: 'There are some ways to document data discovery manually. People more used to
    the old-fashioned style of **BI** (short for **Business Intelligence**) tend to
    create more beautiful visualization models to apply discovery. However, this recipe’s
    objective is to create a catalog using a simple tool such as Notion:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些方法可以手动记录数据发现。那些更习惯于老式风格**BI**（即**商业智能**）的人倾向于创建更美观的视觉模型来应用发现。然而，这个菜谱的目标是使用像Notion这样的简单工具创建一个目录：
- en: '**Categorizing data as per department or project**: The first thing we did
    was to identify the department responsible for each piece of data. Who is the
    contact in the case of an ingestion problem or if the dataset is broken? In formal
    terms, they are also known as data stewards. In some companies, categorization
    by project can also be applied since some companies can have their particular
    necessities and data.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**按部门或项目对数据进行分类**：我们首先做的是确定每份数据负责的部门。在摄入问题或数据集损坏的情况下，谁是联系人？在正式术语中，他们也被称为数据管理员。在一些公司，按项目分类也可以应用，因为一些公司可能有他们特定的需求和数据。'
- en: '**Identifying the datasets or databases**: Here, we have only used datasets.
    Under the projects and/or departments, we insert the name of each table and other
    helpful information. If the tables are periodically updated, it is a good practice
    to also document that.'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别数据集或数据库**：在这里，我们只使用了数据集。在项目或部门下，我们插入每个表的名字和其他有用的信息。如果表是定期更新的，记录这一点也是一个好的做法。'
- en: '**Describing our data**: Finally, we document the expected columns with their
    data types in detail. It helps data engineers plan their scripts when ingesting
    raw data; if something goes wrong after the automation, they can easily detect
    the issue.'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**描述我们的数据**：最后，我们详细记录了预期的列及其数据类型。这有助于数据工程师在导入原始数据时规划脚本；如果自动化后出现问题，他们可以轻松地检测到问题。'
- en: You might notice that some data behaves strangely. For instance, the **medical_speciality**
    column in *Figure 3**.7* has values described and a number to reference something
    else. In a real-world project, it would be necessary to create auxiliary data
    inside our ingestion to make a pattern and later facilitate the report or dashboards.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到一些数据表现得很奇怪。例如，*图3.7*中的**medical_speciality**列有描述和数字来参考其他内容。在实际项目中，有必要在我们的摄入过程中创建辅助数据来创建模式，并随后便于报告或仪表板。
- en: Configuring OpenMetadata
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置OpenMetadata
- en: '**OpenMetadata** is an open source tool used for metadata management, allowing
    the process of **data discovery** and **governance**. You can find more about
    it here: [https://open-metadata.org/](https://open-metadata.org/).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**OpenMetadata**是一个开源工具，用于元数据管理，允许进行**数据发现**和**治理**。你可以在这里了解更多信息：[https://open-metadata.org/](https://open-metadata.org/)。'
- en: By performing a few steps, it is possible to create a local or production instance
    using **Docker** or **Kubernetes**. OpenMetadata can connect to multiple resources,
    such as **MySQL**, **Redis**, **Redshift**, **BigQuery**, and others, to bring
    the information needed to build a data catalog.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行几个步骤，可以使用**Docker**或**Kubernetes**创建本地或生产实例。OpenMetadata可以连接到多个资源，如**MySQL**、**Redis**、**Redshift**、**BigQuery**等，以获取构建数据目录所需的信息。
- en: Getting ready
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Before starting our configuration, we must install **OpenMetadata** and ensure
    the Docker containers are running correctly. Let us see how it is done:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始我们的配置之前，我们必须安装**OpenMetadata**并确保Docker容器正在正确运行。让我们看看它是如何完成的：
- en: Note
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'At the time this book was written, the application was in the 0.12 version
    and with some documentation and installation improvements. This means the best
    approach to installing it may change over time. Please refer to the official documentation
    for it here: [https://docs.open-metadata.org/quick-start/local-deployment](https://docs.open-metadata.org/quick-start/local-deployment).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书编写时，应用程序处于 0.12 版本，并有一些文档和安装改进。这意味着安装的最佳方法可能会随时间而改变。请参阅官方文档，链接如下：[https://docs.open-metadata.org/quick-start/local-deployment](https://docs.open-metadata.org/quick-start/local-deployment)。
- en: 'Let’s create a folder and `virtualenv` (optional):'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个文件夹和 `virtualenv`（可选）：
- en: '[PRE0]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Since we are using a Docker environment to deploy the application locally,
    you can create it with `virtualenv` or not:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在使用 Docker 环境在本地部署应用程序，你可以使用 `virtualenv` 创建它，也可以不使用：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we install OpenMetadata as follows:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们按照以下方式安装 OpenMetadata：
- en: '[PRE2]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then we check the installation, as follows:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们检查安装，如下所示：
- en: '[PRE3]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How to do it…
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'After downloading the **Python** package and **Docker**, we will proceed with
    the configurations as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在下载 **Python** 包和 **Docker** 之后，我们将继续进行如下配置：
- en: '**Running containers**: It may take some time to finish when you execute it
    for the first time:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**运行容器**：首次执行时可能需要一些时间才能完成：'
- en: '[PRE4]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'It is common for this type of error to appear:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的错误很常见：
- en: '**Error response from daemon: driver failed programming external connectivity
    on endpoint openmetadata_ingestion (3670b9566add98a3e79cd9a252d2d0d377dac627b4be94b669482f6ccce350e0):
    Bind for 0.0.0.0:8080 failed: port is** **already allocated**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**错误响应来自守护进程：在端点 openmetadata_ingestion (3670b9566add98a3e79cd9a252d2d0d377dac627b4be94b669482f6ccce350e0)
    上编程外部连接失败：绑定 0.0.0.0:8080 失败：端口已被** **占用**'
- en: It means other containers or applications are already using port `8080`. To
    solve this, specify another port (such as `8081`) or stop the other applications.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着其他容器或应用程序已经使用了端口 `8080`。为了解决这个问题，指定另一个端口（例如 `8081`）或停止其他应用程序。
- en: The first time you run this command, the results might take a while due to other
    containers associated with it.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次运行此命令时，由于与之相关的其他容器，结果可能需要一段时间。
- en: 'In the end, you should see the following output:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你应该看到以下输出：
- en: '![Figure 3.8 – Command line showing success running OpenMetadata containers](img/Figure_3.08_B19453.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.8 – 命令行显示成功运行 OpenMetadata 容器](img/Figure_3.08_B19453.jpg)'
- en: Figure 3.8 – Command line showing success running OpenMetadata containers
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – 命令行显示成功运行 OpenMetadata 容器
- en: '`http://localhost:8585` address:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`http://localhost:8585` 地址：'
- en: '![Figure 3.9 – OpenMetadata sign-in page in the browser](img/Figure_3.09_B19453.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.9 – 浏览器中的 OpenMetadata 登录页面](img/Figure_3.09_B19453.jpg)'
- en: Figure 3.9 – OpenMetadata sign-in page in the browser
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9 – 浏览器中的 OpenMetadata 登录页面
- en: '**Creating a user account and logging in**: To access the UI panel, we need
    to create a user account as follows:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建用户账户和登录**：要访问 UI 面板，我们需要按照以下方式创建用户账户：'
- en: '![Figure 3.10 – Creating a user account in the OpenMetadata Create Account
    section](img/Figure_3.10_B19453.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.10 – 在 OpenMetadata 创建账户部分创建用户账户](img/Figure_3.10_B19453.jpg)'
- en: Figure 3.10 – Creating a user account in the OpenMetadata Create Account section
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10 – 在 OpenMetadata 创建账户部分创建用户账户
- en: 'After that, we will be redirected to the main page and be able to access the
    panel, shown as follows:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将被重定向到主页，并能够访问面板，如下所示：
- en: '![Figure 3.11 – Main page of OpenMetadata](img/Figure_3.11_B19453.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.11 – OpenMetadata 主页](img/Figure_3.11_B19453.jpg)'
- en: Figure 3.11 – Main page of OpenMetadata
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.11 – OpenMetadata 主页
- en: Note
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Is also possible to log in using the default admin user by inserting the [admin@openmetadata.org](mailto:admin@openmetadata.org)
    username and `admin` as the password.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过输入用户名 [admin@openmetadata.org](mailto:admin@openmetadata.org) 和密码 `admin`
    使用默认管理员用户登录。
- en: 'For production matters, please refer to the Enable Security Guide here: [https://docs.open-metadata.org/deployment/docker/security](https://docs.open-metadata.org/deployment/docker/security).'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对于生产问题，请参阅此处启用安全指南：[https://docs.open-metadata.org/deployment/docker/security](https://docs.open-metadata.org/deployment/docker/security)。
- en: '**Creating teams**: In the **Settings** section, you should see several possible
    configurations, from creating users to access the console to integrations with
    messengers such as **Slack** or **MS Teams**.'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建团队**：在 **设置** 部分中，你应该看到几种可能的配置，从创建用户以访问控制台到与 **Slack** 或 **MS Teams** 等消息传递程序的集成。'
- en: 'Some ingestion and integration requires the user to be allocated to a team.
    To create a team, we first need to log in as `admin`. Then, go to **Settings**
    | **Teams** | **Create** **new team**:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一些摄取和集成需要用户被分配到团队中。要创建团队，我们首先需要以`admin`身份登录。然后，转到**设置** | **团队** | **创建** **新团队**：
- en: '![Figure 3.12 – Creating a team in the OpenMetadata settings](img/Figure_3.12_B19453.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图3.12 – 在OpenMetadata设置中创建团队](img/Figure_3.12_B19453.jpg)'
- en: Figure 3.12 – Creating a team in the OpenMetadata settings
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.12 – 在OpenMetadata设置中创建团队
- en: '**Adding users to our teams**: Select the team you just created and go to the
    **Users** tab. Then select the user you want to add.'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**向我们的团队添加用户**：选择您刚刚创建的团队并转到**用户**选项卡。然后选择您想要添加的用户。'
- en: '![Figure 3.13 – Adding users to a team](img/Figure_3.13_B19453.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图3.13 – 向团队添加用户](img/Figure_3.13_B19453.jpg)'
- en: Figure 3.13 – Adding users to a team
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13 – 向团队添加用户
- en: Creating teams is very convenient to keep track of users’ activity and define
    a group of roles and policies. In the following case, all users added to this
    team will be able to navigate through and create their data discovery pipelines.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 创建团队非常方便，可以跟踪用户的活动并定义一组角色和政策。在以下情况下，添加到该团队的所有用户都将能够导航并创建他们的数据发现管道。
- en: '![Figure 3.14 – Team page and the default associated Data Consumer role](img/Figure_3.14_B19453.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图3.14 – 团队页面和默认关联的数据消费者角色](img/Figure_3.14_B19453.jpg)'
- en: Figure 3.14 – Team page and the default associated Data Consumer role
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14 – 团队页面和默认关联的数据消费者角色
- en: We must have a Data Steward or Administrator role for the activities in this
    chapter and the following recipe. The Data Steward role has almost the same permissions
    as the Administrator role since it is a position that is responsible for defining
    and implementing data policies, standards, and procedures to govern data usage
    and ensure consistency.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须为本章和以下食谱中的活动设置一个数据管理员或管理员角色。数据管理员角色几乎与管理员角色具有相同的权限，因为它是一个负责定义和实施数据策略、标准和程序以管理数据使用并确保一致性的职位。
- en: 'You can read more about the **Roles and Policies** of OpenMetadata here: [https://github.com/open-metadata/OpenMetadata/issues/4199](https://github.com/open-metadata/OpenMetadata/issues/4199).'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处了解更多关于OpenMetadata的**角色和策略**：[https://github.com/open-metadata/OpenMetadata/issues/4199](https://github.com/open-metadata/OpenMetadata/issues/4199)。
- en: How it works…
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Now, let’s understand a bit more about how OpenMetadata works.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更深入地了解OpenMetadata是如何工作的。
- en: OpenMetadata is an open source metadata management tool designed to help organizations
    to manage their data and metadata across different systems or platforms. Since
    it centralizes data information in one place, it makes it easier to discover and
    understand data.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: OpenMetadata是一个开源元数据管理工具，旨在帮助组织跨不同系统或平台管理其数据和元数据。由于它将数据信息集中在一个地方，因此使发现和理解数据变得更加容易。
- en: It is also a flexible and extensible tool, allowing integration with tools such
    as Apache Kafka, Apache Hive, and others since it uses programming languages such
    as **Python** (main core code) and Java behind the scenes.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 它也是一个灵活且可扩展的工具，因为它使用诸如**Python**（主要核心代码）和Java等编程语言，因此可以与Apache Kafka、Apache
    Hive等工具集成。
- en: To orchestrate and ingest the metadata from sources, OpenMetadata counts the
    sources using Airflow code. If you look at its core, all Airflow code can be found
    in `openmetadata-ingestion`. For more heavy users who want to debug any problems
    related to the ingestion process in this framework, Airflow can be easily accessed
    at `http://localhost:8080/`, when the metadata Docker container is up and running.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要协调和从源中摄取元数据，OpenMetadata使用Airflow代码来计数源。如果你查看其核心，所有Airflow代码都可以在`openmetadata-ingestion`中找到。对于更多希望调试此框架中与摄取过程相关的任何问题的重用用户，当元数据Docker容器启动并运行时，可以轻松访问`http://localhost:8080/`。
- en: 'It also uses **MySQL DB** to store user information and relationships and an
    **Elasticsearch** container to create efficient indexes. Refer to the following
    figure ([https://docs.open-metadata.org/developers/architecture](https://docs.open-metadata.org/developers/architecture)):'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 它还使用**MySQL DB**来存储用户信息和关系，并使用**Elasticsearch**容器创建高效的索引。请参阅以下图示（[https://docs.open-metadata.org/developers/architecture](https://docs.open-metadata.org/developers/architecture)）：
- en: '![Figure 3.15 – OpenMetadata architecture diagram Font source: OpenMetadata
    documentation](img/Figure_3.15_B19453.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图3.15 – OpenMetadata架构图 字体来源：OpenMetadata文档](img/Figure_3.15_B19453.jpg)'
- en: 'Figure 3.15 – OpenMetadata architecture diagram Font source: OpenMetadata documentation'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 – OpenMetadata架构图 字体来源：OpenMetadata文档
- en: 'For more detailed information about the design decisions, you can access the
    **Main Concepts** page and explore in detail the ideas behind them: [https://docs.open-metadata.org/main-concepts/high-level-design](https://docs.open-metadata.org/main-concepts/high-level-design).'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 关于设计决策的更详细信息，您可以访问 **主概念** 页面并详细了解其背后的理念：[https://docs.open-metadata.org/main-concepts/high-level-design](https://docs.open-metadata.org/main-concepts/high-level-design)。
- en: There’s more…
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: We saw how **OpenMetadata** can be easily configured and installed locally on
    our machines and a brief overview of its architecture. However, other good options
    on the market can be used to document data, or even a **SaaS** solution of **OpenMetadata**
    using **Google Cloud**.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何轻松地在我们的机器上本地配置和安装 **OpenMetadata**，以及其架构的简要概述。然而，市场上还有其他优秀的选项可以用来记录数据，甚至可以使用基于
    **Google Cloud** 的 **OpenMetadata** 的 **SaaS** 解决方案。
- en: OpenMetadata SaaS sandbox
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OpenMetadata SaaS 沙盒
- en: Recently, OpenMetadata implemented a **Software as a Service** (**SaaS**) sandbox
    ([https://sandbox.open-metadata.org/signin](https://sandbox.open-metadata.org/signin))
    using Google, making it easier to deploy and start the discovery and catalog process.
    However, it may have costs applied, so keep that in mind.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，OpenMetadata 实现了一个使用 Google 的 **软件即服务** (**SaaS**) 沙盒 ([https://sandbox.open-metadata.org/signin](https://sandbox.open-metadata.org/signin))，这使得部署和启动发现和目录过程变得更加容易。然而，它可能会产生费用，所以请记住这一点。
- en: See also
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'You can read more about OpenMetadata in their blog: [https://blog.open-metadata.org/why-openmetadata-is-the-right-choice-for-you-59e329163cac](https://blog.open-metadata.org/why-openmetadata-is-the-right-choice-for-you-59e329163cac)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以在他们的博客中了解更多关于 OpenMetadata 的信息：[https://blog.open-metadata.org/why-openmetadata-is-the-right-choice-for-you-59e329163cac](https://blog.open-metadata.org/why-openmetadata-is-the-right-choice-for-you-59e329163cac)
- en: 'Explore OpenMetadata on GitHub: [https://github.com/open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 GitHub 上探索 OpenMetadata：[https://github.com/open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
- en: Connecting OpenMetadata to our database
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 OpenMetadata 连接到我们的数据库
- en: Now that we have configured our **Data Discovery** tool, let’s create a sample
    connection to our local database instance. Let’s try to use PostgreSQL to do an
    easy integration and practice another database usage.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经配置了我们的 **数据发现** 工具，让我们创建一个到本地数据库实例的示例连接。让我们尝试使用 PostgreSQL 进行简单的集成并练习另一种数据库的使用。
- en: Getting ready
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: First, ensure our application runs appropriately by accessing the `http://localhost:8585/my-data
    address`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保我们的应用程序通过访问 `http://localhost:8585/my-data` 地址运行得当。
- en: Note
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Inside OpenMetadata, the user must have the `admin` user using the previous
    credentials we saw.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenMetadata 内部，用户必须使用我们之前看到的凭据以 `admin` 用户身份。
- en: 'You can check the Docker status here:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处检查 Docker 状态：
- en: '![Figure 3.16 – Active containers are shown in the Docker desktop application](img/Figure_3.16_B19453.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.16 – Docker 桌面应用程序中显示活动容器](img/Figure_3.16_B19453.jpg)'
- en: Figure 3.16 – Active containers are shown in the Docker desktop application
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.16 – 在 Docker 桌面应用程序中显示活动容器
- en: Use PostgreSQL for testing. Since we already have a Google project ready, let
    us create a SQL instance using the PostgreSQL engine.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PostgreSQL 进行测试。由于我们已经有了一个准备好的 Google 项目，让我们使用 PostgreSQL 引擎创建一个 SQL 实例。
- en: As we kept the queries to create the database and tables in [*Chapter 2*](B19453_02.xhtml#_idTextAnchor064),
    we can build it again in Postgres. The queries can also be found in the GitHub
    repository of this chapter. However, feel free to create your own data.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在 [*第 2 章*](B19453_02.xhtml#_idTextAnchor064) 中将创建数据库和表的查询保持不变，我们可以在 Postgres
    中再次构建它。这些查询也可以在本章的 GitHub 仓库中找到。但是，请随意创建您自己的数据。
- en: '![Figure 3.17 – Google Cloud console header for SQL instances](img/Figure_3.17_B19453.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.17 – SQL 实例的 Google Cloud 控制台标题](img/Figure_3.17_B19453.jpg)'
- en: Figure 3.17 – Google Cloud console header for SQL instances
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.17 – SQL 实例的 Google Cloud 控制台标题
- en: Remember to let this instance allow public access; otherwise, our local OpenMetadata
    instance won’t be able to access it.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住让此实例允许公共访问；否则，我们的本地 OpenMetadata 实例将无法访问它。
- en: How to do it…
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Go to the OpenMetadata home page by typing `http://localhost:8585/my-data`
    in the browser header:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器标题栏中输入 `http://localhost:8585/my-data` 以访问 OpenMetadata 主页：
- en: '**Adding a new database to OpenMetadata**: Go to **Settings** | **Services**
    | **Databases** and click on **Add new Database Service**. Some options will appear.
    Click on **Postgres**:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**向 OpenMetadata 添加新的数据库**：转到 **设置** | **服务** | **数据库**，然后点击 **添加新的数据库服务**。将出现一些选项。点击
    **Postgres**：'
- en: '![Figure 3.18 – OpenMetadata page to add a database as a source](img/Figure_3.18_B19453.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.18 – 添加数据库作为源的 OpenMetadata 页面](img/Figure_3.18_B19453.jpg)'
- en: Figure 3.18 – OpenMetadata page to add a database as a source
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.18 – 打开 OpenMetadata 页面以添加数据库作为源
- en: Click on `CookBookData`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 `CookBookData`。
- en: '**Adding our connection settings**: After clicking on **Next** again, a page
    with some fields to input the MySQL connection settings will appear:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**添加我们的连接设置**：再次点击 **下一步** 后，将出现一个包含一些输入 MySQL 连接设置的页面的字段：'
- en: '![Figure 3.19 – Adding new database connection information](img/Figure_3.19_B19453.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.19 – 添加新的数据库连接信息](img/Figure_3.19_B19453.jpg)'
- en: Figure 3.19 – Adding new database connection information
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.19 – 添加新的数据库连接信息
- en: '**Testing our connection**: With all the credentials in place, we need to test
    the connection to the database.'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试我们的连接**：在所有凭据就绪后，我们需要测试到数据库的连接。'
- en: '![Figure 3.20 – Connection test successful message for database connection](img/Figure_3.20_B19453.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.20 – 数据库连接测试成功消息](img/Figure_3.20_B19453.jpg)'
- en: Figure 3.20 – Connection test successful message for database connection
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.20 – 数据库连接测试成功消息
- en: '**Creating an ingestion pipeline**: You can leave all the fields as they are
    without worrying about the **database tool** (**DBT**). For **Schedule Interval**,
    you can set what suits you best. I will leave it as **Daily**.'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建摄取管道**：您可以将所有字段保持原样，无需担心 **数据库工具**（**DBT**）。对于 **调度间隔**，您可以设置最适合您的选项。我将将其设置为
    **每日**。'
- en: '![Figure 3.21 – Adding database metadata ingestion](img/Figure_3.21_B19453.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.21 – 添加数据库元数据摄取](img/Figure_3.21_B19453.jpg)'
- en: Figure 3.21 – Adding database metadata ingestion
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.21 – 添加数据库元数据摄取
- en: '**Ingesting the metadata**: Heading to **Ingestions**, our database metadata
    is successfully ingested.'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**摄取元数据**：前往 **摄取**，我们的数据库元数据已成功摄取。'
- en: '![Figure 3.22 – Postgres metadata successfully ingested](img/Figure_3.22_B19453.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.22 – 成功摄取的 Postgres 元数据](img/Figure_3.22_B19453.jpg)'
- en: Figure 3.22 – Postgres metadata successfully ingested
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.22 – 成功摄取的 Postgres 元数据
- en: '**Exploring our metadata**: To explore the metadata, go to **Explore** | **Tables**:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**探索我们的元数据**：要探索元数据，请转到 **探索** | **表**：'
- en: '![Figure 3.23 – Explore page showing the tables metadata ingested](img/Figure_3.23_B19453.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.23 – 显示已摄取的表元数据的探索页面](img/Figure_3.23_B19453.jpg)'
- en: Figure 3.23 – Explore page showing the tables metadata ingested
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.23 – 显示已摄取的表元数据的探索页面
- en: 'You can see that the `people` table is there with other internal tables:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到 `people` 表与其他内部表一起存在：
- en: '![Figure 3.24 – The people table metadata](img/Figure_3.24_B19453.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.24 – 人员表元数据](img/Figure_3.24_B19453.jpg)'
- en: Figure 3.24 – The people table metadata
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.24 – 人员表元数据
- en: Here, you can explore some functionalities of the application, such as defining
    the level of importance to the organization and the owners, querying the table,
    and others.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以探索应用程序的一些功能，例如定义对组织及其所有者的重要性级别，查询表，以及其他功能。
- en: How it works…
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: As we saw previously, OpenMetadata uses Python to build and connect to different
    sources.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前看到的，OpenMetadata 使用 Python 来构建和连接到不同的来源。
- en: In `Connection Scheme` uses `psycopg2`, a widely used library in Python. All
    other arguments are passed to the behind-the-scenes Python code to create a connection
    string.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `连接方案` 中使用 `psycopg2`，这是一个在 Python 中广泛使用的库。所有其他参数都传递给背后的 Python 代码以创建连接字符串。
- en: For each metadata ingestion, OpenMetadata will create a new Airflow **Directed
    Acyclic Graph** (**DAG**) to process it based on a generic one. Having a separate
    DAG for each metadata ingestion makes debugging more manageable in case of errors.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每次元数据摄取，OpenMetadata 都会创建一个新的 Airflow **有向无环图**（**DAG**）来处理它，基于一个通用的 DAG。为每次元数据摄取创建一个单独的
    DAG，在出现错误时使调试更加容易管理。
- en: '![Figure 3.25 – Airflow DAGs created by OpenMetadata](img/Figure_3.25_B19453.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.25 – OpenMetadata 创建的 Airflow DAG](img/Figure_3.25_B19453.jpg)'
- en: Figure 3.25 – Airflow DAGs created by OpenMetadata
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.25 – OpenMetadata 创建的 Airflow DAG
- en: If you open the Airflow instance used by OpenMetadata, you can see it clearly
    and have other information about the metadata ingestion. It’s a nice place to
    debug in case an error occurs. Understanding how our solution works and where
    to look in case of a problem helps identify and solve issues more efficiently.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打开 OpenMetadata 使用的 Airflow 实例，您可以清楚地看到它，并获得有关元数据摄取的其他信息。这是一个在发生错误时进行调试的好地方。了解我们的解决方案是如何工作的，以及遇到问题时应该查看哪些地方，有助于更有效地识别和解决问题。
- en: Further reading
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[https://nira.com/data-discovery/](https://nira.com/data-discovery/)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据发现](https://nira.com/data-discovery/)'
- en: '[https://coresignal.com/blog/data-discovery/](https://coresignal.com/blog/data-discovery/)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据发现](https://coresignal.com/blog/data-discovery/)'
- en: '[https://www.polymerhq.io/blog/diligence/what-is-data-discovery-guide/](https://www.polymerhq.io/blog/diligence/what-is-data-discovery-guide/)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是数据发现指南](https://www.polymerhq.io/blog/diligence/what-is-data-discovery-guide/)'
- en: '[https://bi-survey.com/data-discovery](https://bi-survey.com/data-discovery)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据发现](https://bi-survey.com/data-discovery)'
- en: '[https://www.heavy.ai/technical-glossary/data-discovery](https://www.heavy.ai/technical-glossary/data-discovery)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据发现](https://www.heavy.ai/technical-glossary/data-discovery)'
- en: '[https://www.datapine.com/blog/what-are-data-discovery-tools/](https://www.datapine.com/blog/what-are-data-discovery-tools/)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据发现工具](https://www.datapine.com/blog/what-are-data-discovery-tools/)'
- en: '[https://www.knowsolution.com.br/data-discovery-como-relaciona-bi-descubra/](https://www.knowsolution.com.br/data-discovery-como-relaciona-bi-descubra/)
    (in Portuguese)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据发现如何与BI相关联 - 发现](https://www.knowsolution.com.br/data-discovery-como-relaciona-bi-descubra/)（葡萄牙语）'
- en: Other tools
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他工具
- en: 'If you are interested in learning more about other data discovery tools available
    on the market, here are some:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对市场上可用的其他数据发现工具感兴趣，以下是一些：
- en: '**Tableau**: Tableau ([https://www.tableau.com/](https://www.tableau.com/))
    is more extensively used for data visualizations and dashboards but comes with
    some features to discover and catalog data. You can read more about how to use
    Tableau for data discovery on their resources page here: [https://www.tableau.com/learn/whitepapers/data-driven-organization-7-keys-data-discovery](https://www.tableau.com/learn/whitepapers/data-driven-organization-7-keys-data-discovery).'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Tableau**：Tableau ([Tableau官网](https://www.tableau.com/)) 更广泛地用于数据可视化和仪表板，但也提供了一些发现和编目数据的特性。你可以在他们的资源页面上了解更多关于如何使用
    Tableau 进行数据发现的信息：[数据驱动的组织 - 7 个数据发现关键](https://www.tableau.com/learn/whitepapers/data-driven-organization-7-keys-data-discovery)。'
- en: '**OpenDataDiscovery** (free and open source): OpenDataDiscovery has recently
    arrived on the market and can provide a very nice starting point. Check it out
    here: [https://opendatadiscovery.org/](https://opendatadiscovery.org/).'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenDataDiscovery**（免费和开源）：OpenDataDiscovery 最近进入市场，可以提供一个非常好的起点。查看这里：[OpenDataDiscovery官网](https://opendatadiscovery.org/)。'
- en: '**Atlan**: Atlan ([https://atlan.com/](https://atlan.com/)) is a complete solution
    and also brings a data governance structure; however, the costs can be high and
    it requires a call with their sales team to start an **MVP** (short for **Minimum**
    **Viable Product**).'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Atlan**：Atlan ([Atlan官网](https://atlan.com/)) 是一个完整的解决方案，同时也带来了数据治理结构；然而，成本可能很高，并且需要与他们的销售团队联系以启动
    **MVP**（即 **最小可行产品**）。'
- en: '**Alation**: Alation is an enterprise tool that provides several data solutions
    that include all pillars of data governance. Find out more here: [https://www.alation.com/](https://www.alation.com/).'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Alation**：Alation 是一款企业级工具，提供包括数据治理所有支柱在内的多种数据解决方案。了解更多信息请访问：[Alation官网](https://www.alation.com/)。'
