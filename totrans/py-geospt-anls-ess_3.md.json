["```py\nSELECT * FROM table WHERE ST_Contains(table.geometry, click_point);\n\n```", "```py\npsql (9.3.4)\nType \"help\" for help.\n\npostgres=#\n\n```", "```py\n% psql –U postgres\n\n```", "```py\n% createdb test_database\n% psql -d test_database -c \"CREATE EXTENSION postgis;\"\n% dropdb test_database\n\n```", "```py\n>>> import psycopg2\n>>>\n\n```", "```py\n% createdb world_borders\n```", "```py\n% psql -d world_borders -c \"CREATE EXTENSION postgis;\"\n```", "```py\nimport psycopg2\n```", "```py\nconnection = psycopg2.connect(database=\"world_borders\", user=\"...\", password=\"...\")\n```", "```py\ncursor = connection.cursor()\n```", "```py\ncursor.execute(\"DROP TABLE IF EXISTS borders\")\n```", "```py\ncursor.execute(\"CREATE TABLE borders (\" +\n                   \"id SERIAL PRIMARY KEY,\" +\n                   \"name VARCHAR NOT NULL,\" +\n                   \"iso_code VARCHAR NOT NULL,\" +\n                   \"outline GEOGRAPHY)\")\n```", "```py\ncursor.execute(\"CREATE INDEX border_index ON borders USING GIST(outline)\")\n```", "```py\nconnection.commit()\n```", "```py\nimport psycopg2\n\nconnection = psycopg2.connect(database=\"world_borders\", user=\"...\", password=\"...\")\ncursor = connection.cursor()\n\ncursor.execute(\"DROP TABLE IF EXISTS borders\")\n\ncursor.execute(\"CREATE TABLE borders (\" +\n                   \"id SERIAL PRIMARY KEY,\" +\n                   \"name VARCHAR NOT NULL,\" +\n                   \"iso_code VARCHAR NOT NULL,\" +\n                   \"outline GEOGRAPHY)\")\n\ncursor.execute(\"CREATE INDEX border_index ON borders USING GIST(outline)\")\nconnection.commit()\n```", "```py\nimport osgeo.ogr\nimport psycopg2\n```", "```py\nconnection = psycopg2.connect(database=\"world_borders\", user=\"...\", password=\"...\")\ncursor = connection.cursor()\n```", "```py\ncursor.execute(\"DELETE FROM borders\")\n```", "```py\nshapefile = osgeo.ogr.Open(\"TM_WORLD_BORDERS-0.3/TM_WORLD_BORDERS-0.3.shp\")\nlayer = shapefile.GetLayer(0)\n\nfor i in range(layer.GetFeatureCount()):\n    feature  = layer.GetFeature(i)\n    name     = feature.GetField(\"NAME\")\n    iso_code = feature.GetField(\"ISO3\")\n    geometry = feature.GetGeometryRef()\n```", "```py\n    wkt = geometry.ExportToWkt()\n```", "```py\n    cursor.execute(\"INSERT INTO borders (name, iso_code, outline) VALUES (%s, %s, ST_GeogFromText(%s))\", (name, iso_code, wkt))\n```", "```py\nINSERT INTO table (field, field, ...) VALUES (value, value, ...);\n```", "```py\ncursor.execute(\"INSERT INTO users (name, age) VALUES (%s, %s)\", (user_name, user_age))\n```", "```py\nconnection.commit()\n```", "```py\nimport osgeo.ogr\nimport psycopg2\n\nconnection = psycopg2.connect(database=\"world_borders\", user=\"...\", password=\"...\")\ncursor = connection.cursor()\n\ncursor.execute(\"DELETE FROM borders\")\n\nshapefile = osgeo.ogr.Open(\"TM_WORLD_BORDERS-0.3.shp\")\nlayer = shapefile.GetLayer(0)\n\nfor i in range(layer.GetFeatureCount()):\n    feature = layer.GetFeature(i)\n    name = feature.GetField(\"NAME\")\n    iso_code = feature.GetField(\"ISO3\")\n    geometry = feature.GetGeometryRef()\n    wkt = geometry.ExportToWkt()\n\n    cursor.execute(\"INSERT INTO borders (name, iso_code, outline) VALUES (%s, %s, ST_GeogFromText(%s))\", (name, iso_code, wkt))\n\nconnection.commit()\n```", "```py\nimport psycopg2\nconnection = psycopg2.connect(database=\"world_borders\", user=\"...\", password=\"...\")\ncursor = connection.cursor()\n```", "```py\ncursor.execute(\"SELECT id,name FROM borders ORDER BY name\")\nfor row in cursor:\n    print row\n```", "```py\n(1264, 'Afghanistan')\n(1237, 'Albania')\n(1235, 'Algeria')\n...\n\n```", "```py\ncursor.execute(\"SELECT id FROM borders WHERE name=%s\", (country_name,))\n```", "```py\nlat    = 48.8567\nlong   = 2.3508\nradius = 1000000\n\ncursor.execute(\"SELECT name FROM borders WHERE ST_DWITHIN(\" +\n                   \"ST_MakePoint(%s, %s), outline, %s)\", (long, lat, radius))\nfor row in cursor:\n    print row[0]\n```", "```py\nSan Marino\nDenmark\nIreland\nAustria\n...\nSwitzerland\nUnited Kingdom\n\n```", "```py\nimport psycopg2\nconnection = psycopg2.connect(database=\"world_borders\", user=\"...\", password=\"...\")\ncursor = connection.cursor()\n```", "```py\ntry:\n    cursor.execute(\"ALTER TABLE borders ADD COLUMN buffered_outline GEOGRAPHY\")\nexcept psycopg2.ProgrammingError:\n    connection.rollback()\n```", "```py\ncursor.execute(\"UPDATE borders SET buffered_outline=ST_Buffer(outline, 1000)\")\n```", "```py\nconnection.commit()\n```", "```py\ncursor.execute(\"SELECT name, ST_Area(outline), ST_Area(buffered_outline) FROM borders ORDER BY name\")\nfor name, area1, area2 in cursor:\n    ...\n```", "```py\n    if not math.isnan(area1):\n        area1 = int(area1/1000000)\n    else:\n        area1 = \"n/a\"\n    if not math.isnan(area2):\n        area2 = int(area2/1000000)\n    else:\n        area2 = \"n/a\"\n    print name, area1, area2\n```", "```py\nAfghanistan 641915 646985\nAlbania 28676 29647\nAlgeria 2317478 2324740\nAmerican Samoa 229 363\n...\nZimbabwe 389856 392705\nÅland Islands 817 1144\n\n```", "```py\ncursor.execute(\"SELECT name,ST_AsText(outline) FROM borders\")\nfor name,wkt in cursor:\n    geometry = osgeo.ogr.CreateGeometryFromWkt(wkt)\n    ...\n```"]