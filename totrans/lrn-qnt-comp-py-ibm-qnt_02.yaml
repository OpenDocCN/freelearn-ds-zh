- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Creating Quantum Circuits with IBM Quantum Composer
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 IBM 量子作曲家创建量子电路
- en: In this chapter, you will learn how to use the **IBM Quantum Composer** and
    what each of its component functions are with respect to creating and running
    experiments. The Composer will help you to visually create a quantum circuit via
    its built-in UI, which in turn will help you to visually conceptualize some of
    the basic principles of quantum mechanics used to optimize your experiments. You
    will also learn how to preview the results of each experiment and create your
    first quantum circuit.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用 **IBM 量子作曲家** 以及其每个组件的功能，这些功能与创建和运行实验相关。作曲家将帮助您通过其内置 UI 可视化创建量子电路，这反过来又帮助您可视化量子力学的基本原理，这些原理用于优化您的实验。您还将学习如何预览每个实验的结果并创建您的第一个量子电路。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Getting started with the Quantum Composer
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用量子作曲家
- en: Creating a quantum circuit with the Quantum Composer
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用量子作曲家创建量子电路
- en: By the end of this chapter, you will know how to create a quantum circuit using
    the **Composer**, and create experiments that simulate classic gates and quantum
    gates. You will also have learned where to examine the various results of your
    experiments, such as state vectors and their probabilities. This will help you
    understand how some quantum gate operations affect each qubit.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将了解如何使用 **作曲家** 创建量子电路，并创建模拟经典门和量子门的实验。您还将学习如何检查实验的各种结果，例如状态向量和它们的概率。这将帮助您了解某些量子门操作如何影响每个量子比特。
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, some basic knowledge of computing is assumed, such as understanding
    the basic gates of a classic computing system.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，假设读者具备一些计算机基础知识，例如理解经典计算系统中的基本门。
- en: 'Here is the full source code used throughout the book: [https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition](https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition%0D%0A)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书中使用的完整源代码：[https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition](https://github.com/PacktPublishing/Learning-Quantum-Computing-with-Python-and-IBM-Quantum-Second-Edition%0D%0A)
- en: Getting started with the IBM Quantum Composer
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 IBM 量子作曲家
- en: 'In this section, we will review the IBM Quantum Composer (hereafter referred
    to as simply the Composer) layout so that you can understand its functionality
    and behavior when creating or editing quantum circuits. Here, you will also create
    a few circuits, leveraging the visualization features from the Composer to make
    it easy for you to understand how quantum circuits are created. So, let’s start
    at the beginning: by launching the Composer.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将回顾 IBM 量子作曲家（以下简称作曲家）布局，以便您了解其在创建或编辑量子电路时的功能和行为。在这里，您还将创建几个电路，利用作曲家的可视化功能使您更容易理解量子电路是如何创建的。因此，让我们从开始：启动作曲家。
- en: Launching the Composer
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动作曲家
- en: 'To create a quantum circuit, let’s first start by opening the Composer. To
    open the Composer view, click on the **Composer** button located at the top of
    the IBM Quantum Learning ([https://learning.quantum.ibm.com](https://learning.quantum.ibm.com))
    application as shown in the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建量子电路，首先让我们从打开作曲家开始。要打开作曲家视图，请点击 IBM 量子学习([https://learning.quantum.ibm.com](https://learning.quantum.ibm.com))
    应用程序顶部的 **作曲家** 按钮，如下截图所示：
- en: '![](img/B18420_02_01.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18420_02_01.png)'
- en: 'Figure 2.1: Launch the Composer'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1：启动作曲家
- en: Now that you have the Composer open, let’s take a tour of what each component
    of the Composer editor provides you with.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经打开了作曲家，让我们来看看作曲家编辑器中的每个组件提供了什么。
- en: Familiarizing yourself with the Composer components
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 熟悉作曲家组件
- en: In this section, we will get familiar with each of the components that make
    up the Composer. These allow you to do things such as visually inspect the results
    of your experiments in a variety of ways. Visualizing the construction of the
    quantum circuit will help you conceptualize how each quantum gate affects a qubit.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将熟悉构成作曲家的每个组件。这些组件允许您以各种方式查看实验结果。可视化量子电路的构建将帮助您理解每个量子门如何影响量子比特。
- en: Understanding the Composer
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解作曲家
- en: In this section, we will review the various functionalities available to ensure
    you have a good understanding of all the different features available to you.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将回顾各种功能，以确保您对您可用的所有不同功能有良好的理解。
- en: 'In *Figure 2.2*, you can see the landing page of the **Composer** view:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图2.2*中，您可以看到**作曲家**视图的着陆页：
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_02_02.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![计算机的屏幕截图  自动生成的描述](img/B18420_02_02.png)'
- en: 'Figure 2.2: The IBM Quantum Composer view'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2：IBM量子作曲家视图
- en: From the preceding screenshot, you can see the **Composer** view, containing
    three qubits (**q[0]**, **q[1]**, and **q[2]**). This might not look the same
    when you launch the Composer for the first time. If you would like to add or remove
    qubits, you can simply select a qubit, for example **q[1]**, by clicking on it,
    and selecting the plus icon or the trash icon, which will appear over the specific
    qubit.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从前一个屏幕截图，您可以看到**作曲家**视图，包含三个量子位（**q[0]**，**q[1]**和**q[2]**）。当您第一次启动作曲家时，这可能看起来并不相同。如果您想添加或删除量子位，您可以简单地通过点击它来选择一个量子位，例如**q[1]**，然后选择加号图标或垃圾桶图标，它将出现在特定的量子位上。
- en: 'If any of the views are not visible, this just means they have not been enabled.
    You can enable them by selecting the **View** pull-down menu located across the
    top of the Composer, hovering over **Panels**, and selecting the views that are
    not visible: for example, the **Statevector** view.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何视图不可见，这仅仅意味着它们尚未启用。您可以通过选择位于作曲家顶部的**视图**下拉菜单，悬停在**面板**上，并选择不可见的视图来启用它们：例如，**状态向量**视图。
- en: To reproduce the views used throughout this chapter, simply add or remove the
    qubits until you only have three qubits left. You can add/remove by clicking on
    the qubit label. The default is three.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制本章中使用的视图，只需添加或删除量子位，直到只剩三个量子位为止。您可以通过点击量子位标签来添加/删除。默认为三个。
- en: 'Now that you have your views set up, let’s continue to the Composer view itself.
    In the following screenshot, you can see a series of **gates** and **operations**:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经设置了视图，让我们继续到作曲家视图本身。在下面的屏幕截图中，您可以看到一系列**门**和**操作**：
- en: '![Graphical user interface, application, Teams  Description automatically generated](img/B18420_02_03.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序，团队  自动生成的描述](img/B18420_02_03.png)'
- en: 'Figure 2.3: Gates and operations'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3：门和操作
- en: Each of the components shown has a specific function or operation that acts
    upon the qubit(s), which we will cover in detail in *Chapter 6*, *Understanding
    Quantum Logic Gates*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所示的每个组件都有特定的功能或操作，它作用于量子位（s），我们将在*第6章*，*理解量子逻辑门*中详细讨论。
- en: 'As we can see in the following screenshot, we also have the **circuit editor**
    itself, which is the part of the Composer where we will create our quantum circuit
    by placing various gates and operations:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下屏幕截图所示，我们还有**电路编辑器**本身，这是作曲家的一部分，我们将通过放置各种门和操作来创建我们的量子电路：
- en: '![Application  Description automatically generated with low confidence](img/B18420_02_04.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![应用程序  自动生成的描述，置信度低](img/B18420_02_04.png)'
- en: 'Figure 2.4: Circuit editor'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4：电路编辑器
- en: As you can see from the preceding screenshot, the default circuit includes three
    qubits (though this might change over time) each of which is labeled with a **q**,
    and the index appended in order from left to right (in this case, **q[2]**, **q[1]**,
    and **q[0]**). This will be significant when we want to map the results from our
    quantum circuit. Each qubit is initialized to an initial state of **0** before
    running the experiment.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，默认电路包括三个量子位（尽管这可能会随时间而改变），每个量子位都标记为**q**，并从左到右按顺序附加索引（在这种情况下，**q[2]**，**q[1]**和**q[0]**）。当我们想要将量子电路的结果映射时，这将很重要。在运行实验之前，每个量子位都初始化为**0**的初始状态。
- en: The last line is the classical bits, which are what we will map each qubit to
    so that when we complete running our quantum circuit, the results are then passed
    to the classical bits according to the mapping. By default, the mapping from qubit
    to bit is done based on the index of the qubit. For example, q[0] measurement
    results will be mapped to c[0] via the measurement operator, which we will see
    when we run our quantum circuit. You can add or remove classical bits in the same
    manner as qubits.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一行是经典位，这是我们将其映射到每个量子位上的内容，以便当我们完成量子电路的运行时，结果将根据映射传递到经典位。默认情况下，量子位到位的映射是基于量子位的索引。例如，q[0]测量结果将通过测量算子映射到c[0]，我们将在运行量子电路时看到它。您可以通过与量子位相同的方式添加或删除经典位。
- en: 'Next to the qubit you will see a line, which looks like a wire running out
    from each qubit, in the circuit editor:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在量子位旁边，您将看到一条线，它看起来像从每个量子位延伸出来的导线，在电路编辑器中：
- en: '![Chart  Description automatically generated with low confidence](img/B18420_02_05.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图表  低置信度自动生成描述](img/B18420_02_05.png)'
- en: 'Figure 2.5: Qubits and circuit wires'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5：量子位和电路导线
- en: These lines are where you will be creating a circuit by placing various gates,
    operations, and barriers on them. This circuit has three wires, each of which
    pertains to one of the three qubits on the quantum computer. The reason it is
    called a **Composer** is primarily that these lines look very similar to a music
    staff used by musicians to compose their music. In our case, the notes on the
    music staff are represented by the gates and operations used to ultimately create
    a quantum algorithm.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这些线条是您将在这里创建电路的地方，通过在这些线条上放置各种门、操作和屏障。这个电路有三条线，每条线都与量子计算机上的三个量子位之一相关。它被称为**作曲家**的主要原因是因为这些线条看起来非常类似于音乐家用来作曲的音乐五线谱。在我们的情况下，音乐五线谱上的音符由最终用于创建量子算法的门和操作来表示。
- en: In the next section, we will review the various options you have available to
    customize the views of the Composer. This will allow you to ensure that you can
    only see what you want to see while creating your quantum circuit.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将回顾您可用于自定义作曲家视图的各种选项。这将确保您在创建量子电路时只能看到您想看到的内容。
- en: Customizing your views
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义您的视图
- en: 'Continuing with our Composer tour, at the top of the Composer view are the
    circuit menu options that allow you to save your circuit, clear the circuit, or
    share your quantum circuit:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的作曲家之旅中继续前进，在作曲家视图的顶部是电路菜单选项，允许您保存您的电路、清除电路或共享您的量子电路：
- en: '![](img/B18420_02_06.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18420_02_06.png)'
- en: 'Figure 2.6: The Composer menu options'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6：作曲家菜单选项
- en: 'First, we will cover how to save your circuit. To do this, simply click on
    the default text at the top left of the Composer where it currently reads **Untitled
    circuit**, and type in any title you wish. Ideally, select a name that is associated
    with the experiment. In this case, let’s call it **MyFirstCircuit** and save it
    by either hitting the *Enter* key or clicking the checkmark icon to the right
    of the title, as shown below:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将介绍如何保存您的电路。为此，只需点击作曲器顶部左边的默认文本，当前显示为**未命名电路**，并输入您想要的任何标题。理想情况下，选择与实验相关的名称。在这个例子中，让我们称它为**MyFirstCircuit**，并通过按*Enter*键或点击标题右侧的勾选图标来保存，如下所示：
- en: '![A screenshot of a phone  Description automatically generated](img/B18420_02_07.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![手机截图  自动生成描述](img/B18420_02_07.png)'
- en: 'Figure 2.7: Renaming the circuit'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7：重命名电路
- en: 'Across the top of the Composer, you will see a list of drop-down menu options.
    The menu items in the preceding screenshot have the following options:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在作曲器的顶部，您将看到一系列下拉菜单选项。前面截图中的菜单项有以下选项：
- en: '**File** provides options to create and open circuits, as well as copy, export,
    share, or delete the current circuit.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件**提供创建和打开电路、复制、导出、共享或删除当前电路的选项。'
- en: '**Edit** allows you to manage your circuit and clear gates and operators.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编辑**允许您管理您的电路并清除门和算子。'
- en: '**View** enables the various view options, which we look at in the following
    sections.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图**启用各种视图选项，我们将在以下几节中查看。'
- en: Let’s now look at each of the various views in the following sections.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在接下来的几节中查看各个不同的视图。
- en: The Graphical Editor view
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 图形编辑器视图
- en: 'The **Graphical Editor** view contains a few components used to create quantum
    circuits:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**图形编辑器**视图包含一些用于创建量子电路的组件：'
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18420_02_08.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成描述](img/B18420_02_08.png)'
- en: 'Figure 2.8: The Graphical Editor view options'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8：图形编辑器视图选项
- en: 'The components include the following:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 组件包括以下内容：
- en: '**Circuit Composer**: UI components used to create quantum circuits.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电路作曲家**：用于创建量子电路的UI组件。'
- en: '**Operations**: A list of available drag-and-drop gates and operators to generate
    a quantum circuit.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作**：一个可用的拖放门和算子列表，用于生成量子电路。'
- en: '**Options**: The ability to set up the alignment and turn on the **Inspect**
    feature, which allows you to step through each gate and operation as you would
    to debug your code on an IDE or browser.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选项**：设置对齐方式并开启**检查**功能的能力，这允许您像在IDE或浏览器上调试代码一样逐步通过每个门和操作。'
- en: '**Disk**: A disk that is located at the end of the circuit to serve as a visual
    representation of each qubit as you add gates and operations.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘**：位于电路末端的磁盘，用作添加门和操作时每个量子比特的视觉表示。'
- en: Now that we know where we can create a quantum circuit, let’s move on to displays,
    which provide various ways to visualize the results of our quantum circuit.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了在哪里创建量子电路，让我们继续到显示部分，它提供了各种方式来可视化量子电路的结果。
- en: The Statevector view
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 状态向量视图
- en: The **Statevector**view allows you to preview the state vector results, which
    is to say the quantum state result of your quantum circuit. The state vector view
    presents the computational basis states of the quantum circuit in a few different
    ways. To simplify the view, I have removed all but one qubit so it is easier to
    read the values.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**状态向量**视图允许您预览状态向量结果，也就是说，您的量子电路的量子状态结果。状态向量视图以几种不同的方式展示了量子电路的计算基态。为了简化视图，我已经移除了除了一个量子比特之外的所有量子比特，这样更容易读取值。'
- en: 'You can do the same if you wish, otherwise your x axis may have more than just
    the two states of 0 and 1, as shown in the following figures:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意，可以这样做，否则您的x轴可能不仅仅只有0和1这两种状态，如下面的图所示：
- en: '![Chart  Description automatically generated](img/B18420_02_09.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图表描述自动生成](img/B18420_02_09.png)'
- en: 'Figure 2.9: The Statevector view'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.9：状态向量视图
- en: First, we see the **Amplitude** bar graph, which represents the amplitude of
    the *computational basis states*. In this case, as mentioned earlier, for simplicity
    we have reduced the number of qubits to just one qubit, for which there are two
    computational basis states, 0 and 1\. These are represented along the *x* axis.
    The value of the amplitude of each basis state is represented along the *y* axis.
    In this case, since we do not have any gates or operators on our circuit, the
    state vector representation is that of the initial (ground) state. The initial
    state indicates that all qubits are set to the 0 (zero) state, indicated by an
    amplitude value of 1.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们看到**振幅**条形图，它表示**计算基态**的振幅。在这种情况下，如前所述，为了简化，我们将量子比特的数量减少到只有一个量子比特，对于这个量子比特有两个计算基态，0和1。这些表示在*x*轴上。每个基态振幅的值表示在*y*轴上。在这种情况下，由于我们的电路中没有门或算子，状态向量表示是初始（基态）状态。初始状态表示所有量子比特都设置为0（零）状态，由振幅值为1表示。
- en: At the bottom of the Statevector view we see the **Output state** representing
    the complex value of each computational basis state. In this case since we are
    in the initial state, we see the 0 state at `1 + 0j` and the 1 state at `0 + 0j`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在状态向量视图的底部，我们看到代表每个计算基态复数值的**输出状态**。在这种情况下，由于我们处于初始状态，我们看到`1 + 0j`处的0状态和`0 +
    0j`处的1状态。
- en: To the bottom left is the **phase wheel**. The phase wheel is a color visual
    representation of the phase for each basis state, which has a range between 0
    and 2π. Since we have not applied any phase gates, we see the default phase of
    0 represented by the color blue. As you apply phase shifts to each qubit, the
    color of the bar will update according to the color representation of the phase.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在左下角是**相位轮**。相位轮是每个基态相位的颜色视觉表示，其范围在0到2π之间。由于我们没有应用任何相位门，我们看到默认相位0由蓝色表示。当您对每个量子比特应用相位偏移时，条形的颜色将根据相位的颜色表示更新。
- en: We will cover what phases are in more detail in later chapters, but for now
    just know where they are and how they are indicated, both by value in the state
    vector results and in the phase wheel by color.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中更详细地介绍相位，但到目前为止，只需知道它们在哪里以及如何表示，无论是通过状态向量结果中的值还是通过相位轮中的颜色表示。
- en: The state vector information is just one of the visual representations of your
    quantum circuit. There are a couple of others we want to visit before moving on.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 状态向量信息只是您量子电路的视觉表示之一。在继续之前，我们还想参观几个其他的内容。
- en: The Probabilities view
  id: totrans-73
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 概率视图
- en: 'The next view is the **Probabilities** view. This view presents the expected
    probability result of the quantum circuit (with the addition of a single measurement
    operator to the qubit). As mentioned in the previous description, and illustrated
    in the following screenshot, since we do not have any operators on the circuit,
    the results shown are all in the initial state of 0:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个视图是**概率**视图。这个视图展示了量子电路（在量子比特上添加单个测量算子）的预期概率结果。如前所述，并在以下屏幕截图所示，由于电路中没有任何算子，显示的结果都是初始状态0：
- en: '![Chart, bar chart  Description automatically generated](img/B18420_02_10.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图表，柱状图  自动生成的描述](img/B18420_02_10.png)'
- en: 'Figure 2.10: The Probabilities view'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.10：概率视图
- en: The probability view is a general representation of the results based on expected
    values, not the actual results you will get from a quantum system. This view currently
    represents what the Composer is calculating classically as we have not yet run
    this circuit on an actual quantum computer. The results you will see as we create
    this circuit are computed by the classical system and not by a quantum system.
    The results from a quantum system are received after we send the completed circuit
    to run.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 概率视图是基于期望值的一般结果表示，而不是你将从量子系统中获得的实际结果。这个视图目前表示Composer正在经典上计算的内容，因为我们还没有在实际量子计算机上运行这个电路。当我们创建这个电路时，你将看到的结果是由经典系统计算的，而不是由量子系统计算的。量子系统的结果将在我们发送完成的电路运行后接收。
- en: The Q-sphere view
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Q球视图
- en: 'Finally, the last of the state visualizations we must review is the **Q-sphere**
    view. The Q-sphere looks similar to a Bloch sphere, which is used to represent
    the statevector of the current state of a qubit. However, the Bloch sphere does
    have some limitations, particularly that it can only represent the state of a
    single qubit. On the other hand, the Q-sphere can be used to visually represent
    the state information of a single qubit or multiple qubits at once in one sphere,
    including the phase information. The following screenshot shows a representation
    of a circuit with three qubits, all of which are in the initial state:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们必须回顾的最后一种状态可视化是**Q球**视图。Q球看起来类似于Bloch球，它用于表示量子比特当前状态的状态向量。然而，Bloch球确实有一些局限性，尤其是它只能表示单个量子比特的状态。另一方面，Q球可以用来在一个球体中直观地表示单个量子比特或多个量子比特的状态信息，包括相位信息。以下截图显示了三个量子比特的电路表示，它们都处于初始状态：
- en: '![Diagram  Description automatically generated](img/B18420_02_11.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图示  自动生成的描述](img/B18420_02_11.png)'
- en: 'Figure 2.11: The Q-sphere view'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.11：Q球视图
- en: The Q-sphere view has two components; the first is the Q-sphere itself, which
    represents the state vector of the multi-qubit state, represented by a vector
    that originates at the center of the sphere. At the end of the vector is a smaller
    sphere, which represents the probability of the state by the radius of the top
    that lies on the surface of the Q-sphere. The states represented by these small
    spheres are visible when hovered over. The previous screenshot illustrates the
    three qubits in an initial state of ![](img/B18420_02_001.png), with a probability
    of 1, and a phase angle of 0.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Q球视图有两个组成部分；第一个是Q球本身，它表示多量子比特状态的状态向量，这个向量以球心为起点。向量的末端是一个较小的球体，它通过Q球表面的顶部圆的半径来表示状态的概率。当鼠标悬停在这些小球体上时，可以看到它们所表示的状态。上一张截图展示了初始状态下的三个量子比特，概率为1，相位角为0。
- en: Those fancy symbols around the numbers are referred to as Kets; we will learn
    about them later in this book. For now, just think of them as labels to differentiate
    between the number 0 and the quantum state |0〉, for example.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 数字周围的这些花哨的符号被称为Ket；我们将在本书的后面学习它们。现在，只需将它们视为标签，以区分数字0和量子态|0〉，例如。
- en: The second component is located at the bottom left, which is the legend that
    describes the phase of the states. Since the small sphere represents the phase
    angle of 0, the color of the sphere is blue, which is the same as what the legend
    indicates for the phase of 0\. If the state had a phase value of π, then the color
    of the sphere would be red.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个组成部分位于左下角，是一个图例，描述了状态相位。由于小球体代表相位角为0，球体的颜色是蓝色，这与图例对0相位所指示的颜色相同。如果状态具有π的相位值，那么球体的颜色将是红色。
- en: There are various options here; on the top right you can see an ellipsis that
    you can select, providing various options to download visualizations in different
    image formats, and to move the view to the left or right. At the bottom right
    you can select whether to enable the state or phase angle information of the Q-sphere.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有多种选项；在右上角你可以看到一个省略号，你可以选择它，提供不同的选项来下载不同图像格式的可视化，以及将视图移动到左侧或右侧。在右下角你可以选择是否启用Q球的状态或相位角信息。
- en: OK, we went through all of the various views and components that make up the
    Composer view, so now let’s go to the fun part and start creating our first quantum
    circuit!
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们已经了解了构成Composer视图的所有各种视图和组件，所以现在让我们进入有趣的部分，开始创建我们的第一个量子电路！
- en: Creating a quantum circuit with the Quantum Composer
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Quantum Composer创建量子电路
- en: Now that we know where everything is in the Composer, we will create our first
    quantum circuit. This will help you to get a better understanding of how all these
    components work together, and it will show you how these components provide insights
    such as the current state and its probabilistic estimation as you build your first
    quantum experiment.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经知道了Composer中的所有内容的位置，我们将创建我们的第一个量子电路。这将帮助您更好地理解所有这些组件是如何协同工作的，并且将向您展示这些组件是如何在您构建第一个量子实验时提供诸如当前状态及其概率估计等见解的。
- en: Building a quantum circuit with classical bit behaviors
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建具有经典比特行为的量子电路
- en: We are all familiar with some of the basic classic bit gates such as **NOT**,
    **AND**, **OR**, and **XOR**. The behavior that these classic gates perform on
    a bit can be reproduced on a quantum circuit using quantum gates. Our first experiment
    will cover these basic building blocks, which will help you to understand the
    correlation between quantum and classical algorithms.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都熟悉一些基本的经典比特门，例如**NOT**、**AND**、**OR**和**XOR**。这些经典门在比特上执行的行为可以使用量子门在量子电路中重现。我们的第一个实验将涵盖这些基本构建块，这将帮助您理解量子算法和经典算法之间的相关性。
- en: Our first experiment will be to simulate a classical gate, specifically a `NOT`
    gate. The `NOT` gate is used to change the value of the qubit, in this case from
    the |0〉 state to the |1〉 state, and vice versa. We will cover details on how this
    gate operates on qubits in *Chapter 6, Understanding Quantum Logic Gates*.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个实验将是模拟一个经典门，具体是一个`NOT`门。`NOT`门用于改变量子比特的值，在这种情况下，从|0〉状态变为|1〉状态，反之亦然。我们将在*第6章，理解量子逻辑门*中详细介绍这个门在量子比特上的操作细节。
- en: 'To simulate a `NOT` gate on a quantum circuit, follow these steps:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要在量子电路中模拟`NOT`门，请按照以下步骤操作：
- en: From the open Composer editor that you previously created and titled `MyFirstCircuit`,
    reduce the number of qubits and classical bits down to just one of each if you
    have not already. This will simplify the visualization of the results for us.
    You may have to reopen the other views such as qsphere. to get the updated changes.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有这样做，请从之前创建并命名为`MyFirstCircuit`的开放Composer编辑器中减少量子比特和经典比特的数量，每个只保留一个。这将简化我们结果的可视化。您可能需要重新打开其他视图，如qsphere，以获取更新的更改。
- en: 'Next, click and drag the `NOT` gate, which is visually represented by the ![](img/B18420_02_002.png)
    symbol, from the list of gates down onto the first qubit, as shown in the following
    screenshot:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击并拖动`NOT`门，该门以![](img/B18420_02_002.png)符号表示，从门列表拖到第一个量子比特上，如下面的截图所示：
- en: '![Graphical user interface, application  Description automatically generated](img/B18420_02_12.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序 描述自动生成](img/B18420_02_12.png)'
- en: 'Figure 2.12: Add an X (NOT) gate to the first qubit'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.12：向第一个量子比特添加X（NOT）门
- en: 'Next, click and drag the measurement operation onto the first qubit, q[0],
    just after the `NOT` gate:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击并拖动测量操作到`NOT`门之后的第一个量子比特，q[0]：
- en: '![Graphical user interface, application, Word  Description automatically generated](img/B18420_02_13.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序，Word 描述自动生成](img/B18420_02_13.png)'
- en: 'Figure 2.13: Add a measurement operator to the first qubit'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.13：向第一个量子比特添加测量算子
- en: By taking a measurement of the qubit and having its value sent out to the pertaining
    classic bit, we are essentially reading the state of the qubit. You can see this
    by the connecting arrow between the measurement operator and the classical bit.
    It also includes the index of the classical bit, the result of which the measurement
    operator will write out, which in this case is the bit in position 0.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过对量子比特进行测量并将其值发送到相关的经典比特，我们实际上是在读取量子比特的状态。您可以通过测量算子和经典比特之间的连接箭头来看到这一点。它还包括经典比特的索引，测量算子将写入的结果，在这种情况下是位置0的比特。
- en: 'Note that the result bits, similar to the qubits, will be ordered from left
    to right: c[2]c[1]c[0], for example.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，结果比特，类似于量子比特，将从左到右排序：例如，c[2]c[1]c[0]。
- en: A measurement occurs when you want to observe the state of the qubit. What this
    means is that we will collapse the state of the qubit to either a `0` or a `1`.
    In this example, it is straightforward that when we measure the qubit after the
    `NOT` gate, the reading will be `1`. This is because since the initial state is
    set to `0`, applying a `NOT` gate will flip it from `0` to `1`.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要观察量子比特的状态时，就会发生测量。这意味着我们将量子比特的状态折叠到`0`或`1`。在这个例子中，当我们在`NOT`门之后测量量子比特时，读数将是`1`。这是因为初始状态被设置为`0`，应用`NOT`门将把它从`0`翻转到`1`。
- en: Before we run this experiment, let’s note a few things. First, note that the
    classic bits are all on one line. This is mostly to save space. Next is to note
    that all the views are updated as we add gates and operators. As mentioned earlier,
    this is the system computing these classically to provide us with an ideal result.
    We have not yet specified which quantum computer to run this circuit on, hence
    the results you are seeing are what the classical system is computing and not
    real-time results from a quantum computer.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们运行这个实验之前，让我们记下几点。首先，请注意经典比特都在一行上。这主要是为了节省空间。接下来是注意，随着我们添加门和算子，所有视图都会更新。如前所述，这是系统在计算这些经典值以提供理想结果。我们尚未指定要在哪台量子计算机上运行此电路，因此您看到的结果是经典系统正在计算的结果，而不是量子计算机的实时结果。
- en: 'Select the **Setup and run** button located at the top right of the Composer
    view. This will display the run settings, illustrated as follows:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择位于Composer视图右上角的**设置和运行**按钮。这将显示运行设置，如下所示：
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_02_14.png)'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![计算机屏幕截图  自动生成的描述](img/B18420_02_14.png)'
- en: 'Figure 2.14: The run settings view'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图2.14：运行设置视图
- en: 'The run dialog prompts you to take two steps:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行对话框提示您执行两个步骤：
- en: First, select which quantum system you would like to run the experiment on.
    Select any of the options you wish to run. In this example, we’ll select `ibm_brisbane`.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，选择您要在其上运行实验的量子系统。选择您希望运行的任何选项。在这个例子中，我们将选择`ibm_brisbane`。
- en: The second step first allows you to select the **Provider**. There are different
    providers—`ibm-q/open/main` is for open free quantum devices, and if you are a
    member of the IBM Quantum Network then you’ll have a provider that assigns you
    to the available premium quantum devices.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二步首先允许您选择**提供商**。有不同的提供商——`ibm-q/open/main`用于开放的免费量子设备，如果您是IBM量子网络的成员，那么您将有一个分配给您可用高级量子设备的提供商。
- en: For now, leave it at the default setting. This step also prompts you to select
    a number of **Shots** of the quantum circuit you wish to run. What this means
    is how many times you wish the quantum circuit to run during your experiment to
    obtain a reliable overall result. For now, let’s set it to `8000`.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 目前，请保持默认设置。此步骤还会提示您选择要运行的量子电路的**射击次数**。这意味着您希望在实验中让量子电路运行多少次以获得可靠的总体结果。目前，让我们将其设置为`8000`。
- en: Now that you have selected your run options, let’s run the circuit. Click **Run
    on ibm_brisbane**. If you selected a different device, it will indicate it accordingly.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您已经选择了运行选项，让我们运行电路。点击**在ibm_brisbane上运行**。如果您选择了不同的设备，它将相应地指示。
- en: Once your experiment begins, you should see an entry of this experiment in the
    **Composer jobs** view in the left panel on the Composer view, indicating that
    your experiment is **Pending**. While the job is **Pending**, it will display
    the status of the job, accordingly.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦实验开始，您应该在Composer视图左侧面板的**作曲家作业**视图中看到该实验的条目，表明您的实验处于**挂起**状态。在作业挂起期间，它将显示作业的状态，相应地。
- en: Note that depending on how busy the selected device is, you may have to wait
    for some time for your job to complete.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，根据所选设备有多忙，您可能需要等待一段时间才能完成作业。
- en: 'Once completed, you will see the status for the specified job as **Completed**,
    illustrated as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成，您将看到指定作业的状态为**完成**，如下所示：
- en: '![Graphical user interface, text, application, chat or text message  Description
    automatically generated](img/B18420_02_15.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面、文本、应用程序、聊天或文本消息  自动生成的描述](img/B18420_02_15.png)'
- en: 'Figure 2.15: The Composer jobs view displaying the job status for the selected
    circuit'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.15：Composer作业视图显示所选电路的作业状态
- en: 'Upon completion, open your experiment from the list by clicking on the job.
    This opens the **Jobs** results view:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，通过点击作业从列表中打开您的实验。这会打开**作业**结果视图：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18420_02_16.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序  自动生成的描述](img/B18420_02_16.png)'
- en: 'Figure 2.16: The Jobs results view'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.16：作业结果视图
- en: Once you have the job opened, you can see some basic information about the job,
    such as the job ID across the top, followed by the date and time the job was completed,
    the backend it was run on, and three views that contain details about the job
    itself, such as the status, details, and results. You will also see a button at
    the top right that will provide the same information in the views, only in a separate
    window. Let’s review the views next.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦打开作业，您可以看到有关作业的一些基本信息，例如顶部的作业ID，然后是作业完成的日期和时间，运行的底层以及包含有关作业本身详细信息的三个视图，例如状态、详细信息和结果。您还会在右上角看到一个按钮，它将在单独的窗口中提供相同的信息。接下来，让我们回顾一下这些视图。
- en: 'First, we have the **Status timeline** view, as illustrated in *Figure 2.17*:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们有**状态时间线**视图，如图2.17所示：
- en: '![A screenshot of a phone  Description automatically generated](img/B18420_02_17.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![手机的截图  自动生成的描述](img/B18420_02_17.png)'
- en: 'Figure 2.17: The jobs status timeline view'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.17：作业状态时间线视图
- en: 'Here you can see the timeline that represents the time it took to complete
    your circuit. Each step represents the different processes that your circuit completes
    as it is executed on the quantum system:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以查看表示完成您的电路所需时间的时间线。每个步骤代表您的电路在量子系统上执行时完成的不同的过程：
- en: '**Creatinged**: The date and time the job instance was added to the queue to
    run on a specific quantum system.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建**：作业实例被添加到队列以在特定量子系统上运行的时间和日期。'
- en: '**In queue**: The length of time your job was in the queue prior to running
    on the quantum system.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**排队中**：您的作业在量子系统上运行之前在队列中的时间长度。'
- en: '**Running**: The time it takes from moving out of the queue and running on
    a quantum system before returning the results back. **Time in system** is the
    actual time that the circuit is running on a quantum system, separate from the
    time it is on the classical components. For example, transforming the circuit
    from digital to analog and analog to digital is not included in the *time in system*
    value.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**运行**：从离开队列并在量子系统上运行，直到返回结果的时间。**系统内时间**是指电路在量子系统上实际运行的时间，与在经典组件上的时间分开。例如，将电路从数字转换为模拟和从模拟转换为数字不包括在**系统内时间**值中。'
- en: '**Completed**: The date and time the job had completed running on the quantum
    system.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**完成**：作业在量子系统上完成运行的时间和日期。'
- en: Next is the **Details** view, as seen in the following figure, which provides
    you with the details of the job; in this case it was sent from `MyFirstCircuit`.
    It also provides information such as the program, the number of shots, the number
    of circuits, and the instance. The instance is the provision of the quantum system;
    since we are using open free devices, this is categorized as an open system.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是**详细信息**视图，如图所示，它提供了作业的详细信息；在这种情况下，它是从`MyFirstCircuit`发送的。它还提供了有关程序、射击次数、电路数量和实例的信息。实例是量子系统的提供；由于我们使用的是开放免费设备，因此这被归类为开放系统。
- en: If you are a premium user, you will likely run in a mode specific to your provider,
    details of which you can obtain from your administrative provider.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是高级用户，您可能会以特定于您的提供商的模式运行，您可以从您的管理提供商处获得有关这些细节的信息。
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_02_18.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![计算机的截图  自动生成的描述](img/B18420_02_18.png)'
- en: 'Figure 2.18: The Details view'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.18：详细信息视图
- en: Finally, the **Result – histogram** view, illustrated in *Figure 2.19*, shows
    you the results of your experiment as rendered on a histogram.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，**结果 – 直方图**视图，如图2.19所示，显示了您的实验结果，以直方图的形式呈现。
- en: '![A screenshot of a graph  Description automatically generated](img/B18420_02_19.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图表的截图  自动生成的描述](img/B18420_02_19.png)'
- en: 'Figure 2.19: Job results – histogram view'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.19：作业结果 – 直方图视图
- en: In this view, the *x* axis represents the frequency of each state that resulted
    after each shot of your circuit. The *y* axis represents each state that had a
    result.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在此视图中，*x*轴代表每次射击后电路产生的每个状态的频率。*y*轴代表每个有结果的状态。
- en: 'All these views can be seen on a separate page altogether by clicking the **See
    more details** button, located at the top right of the report. This will provide
    the same details regarding your experiment, plus it will include the transpiled
    circuit diagram. The transpiled diagram will show you the same circuit, only it
    will use the basis gates of the specified quantum system. We will cover what basis
    gates are and how they are transpiled into the circuit in a later chapter. For
    now, think of it as a circuit using gates that are specific to the quantum system,
    as illustrated in the following screenshot:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些视图都可以通过点击报告右上角的**查看更多详细信息**按钮在单独的页面上查看。这将提供有关您实验的相同详细信息，还包括转换后的电路图。转换后的图将显示相同的电路，但它将使用指定量子系统的基门。我们将在后面的章节中介绍基门是什么以及它们是如何转换到电路中的。现在，将其视为使用特定于量子系统的门的电路，如下面的屏幕截图所示：
- en: '![A screenshot of a computer  Description automatically generated](img/B18420_02_20.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图  自动生成的描述](img/B18420_02_20.png)'
- en: 'Figure 2.20: The Details view with the original circuit (left) and the transpiled
    circuit (right)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.20：包含原始电路（左侧）和转换后电路（右侧）的详细信息视图
- en: The diagram of the circuits is just one of the three representations of the
    circuit. The other two tabs will display the **Qasm** and **Qiskit** representations.
    Keep in mind that depending on the size of the device that you ran this on, you
    may see all qubits listed (which could range over 100 qubits). In this case I
    truncated the view so you only see a few qubits to save space.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 电路图只是电路的三种表示方法之一。其他两个标签将显示**Qasm**和**Qiskit**表示。请注意，根据您运行此设备的尺寸，您可能看到所有量子比特的列表（可能超过100个量子比特）。在这种情况下，我截断了视图，以便您只能看到几个量子比特以节省空间。
- en: Now that we have the results from running our first quantum circuit, let’s take
    a closer look at our results and see what we got back.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经运行了我们的第一个量子电路并得到了结果，让我们更仔细地看看我们的结果，看看我们得到了什么。
- en: Reviewing your results
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查您的结果
- en: The histogram result in *Figure 2.19* provides information about the outcome
    of our experiment. Some parts might seem straightforward, but let’s review the
    details. It may seem trivial now, but later when we work on more elaborate quantum
    algorithms, understanding the results will prove invaluable.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2.19*中的直方图结果提供了我们实验结果的信息。有些部分可能看起来很简单，但让我们来回顾一下细节。现在可能看起来微不足道，但当我们后来处理更复杂的量子算法时，理解这些结果将证明是无价的。'
- en: There are two axes to the results. Along the *y* axis, we have all the possible
    states (or measurement outcomes) of our circuit. This is what the measurement
    operation observed when measuring the qubit. Recall that we measured the first
    qubit, so from the least significant bit (on the far right), q[0] is in the right-most
    position within each possible state result. Therefore, as we add more qubits,
    they are appended to the left of the previous qubit. For example, a three-qubit
    system would be set in the following order, q[2], q[1S], q[0]. We know that our
    likely result of ![](img/B18420_02_003.png) is correct due to the fact that we
    placed a `NOT` gate on the first qubit, which changes its state from 0 to 1\.
    If we were to add two more qubits, then the second and third qubit would simply
    take a measurement that equates to measuring the initial state, which we know
    to be 0, creating a likely result of ![](img/B18420_02_004.png).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 结果有两个轴。在*y*轴上，我们有电路的所有可能状态（或测量结果）。这是测量操作在测量量子比特时观察到的。回想一下，我们测量了第一个量子比特，所以从最不重要的位（最右侧）开始，q[0]在每个可能的状态结果中位于最右侧。因此，当我们添加更多量子比特时，它们将附加到前一个量子比特的左侧。例如，一个三量子比特系统将按以下顺序设置，q[2]，q[1S]，q[0]。我们知道我们的可能结果![img/B18420_02_003.png]是正确的，因为我们在一个量子比特上放置了一个`NOT`门，这将其状态从0变为1。如果我们再添加两个量子比特，那么第二个和第三个量子比特将简单地执行一个等于测量初始状态的测量，我们知道初始状态是0，从而产生一个可能的结果![img/B18420_02_004.png]。
- en: The *x* axis provides the results for each of the possible states. Since we
    ran the experiment `8000` times, the results show that we a have very high chance
    of the first qubit resulting in the state of `1`. The reason why the result is
    not 100% is due to noise from the quantum device. We will cover the topic of noise
    in later chapters, but for now we can be confident of a high probability, based
    on our results, that the NOT gate worked.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '*x* 轴提供了每个可能状态的输出结果。由于我们进行了`8000`次实验，结果显示我们有很大的可能性第一个量子比特将处于`1`的状态。结果不是100%的原因是由于量子设备的噪声。我们将在后面的章节中介绍噪声的话题，但现在我们可以根据我们的结果有信心地认为NOT门是有效的。'
- en: In this section, we simulated a simple `NOT` gate operation on a qubit and ran
    the circuit on a quantum device.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们在量子设备上模拟了一个简单的`NOT`门操作，并运行了电路。
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the IBM Quantum Composer and its many components.
    You created an experiment that simulated a classic NOT gate. You then viewed the
    results on a histogram, and read the probabilities based on the results.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了IBM量子Composer及其许多组件。你创建了一个模拟经典NOT门的实验。然后你在直方图上查看结果，并基于结果读取概率。
- en: This has provided you with the skills to experiment with other gates to see
    what effect each operation has on each qubit and what information might be determined
    or used based on the results of the operation. This will be helpful when we look
    at some of the quantum algorithms and how these operations are leveraged to solve
    certain problems.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这为你提供了实验其他门操作的技能，以查看每个操作对每个量子比特的影响以及基于操作结果可能确定或使用的信息。当我们查看一些量子算法以及这些操作如何被利用来解决某些问题时，这将非常有帮助。
- en: In the next set of chapters, we will move away from the click-and-drag work
    of the UI and instead create experiments using Jupyter Notebook, as well as beginning
    to program quantum circuits using Python.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一组章节中，我们将从UI的点击和拖拽操作中移开，而是使用Jupyter Notebook创建实验，并开始使用Python编写量子电路。
- en: Questions
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: From the Composer, where would you find the time it took to run your circuit
    on a quantum computer?
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Composer中，你可以在哪里找到在量子计算机上运行你的电路所需的时间？
- en: How would you remove or add a qubit to your circuit on the Composer?
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何在Composer中移除或添加一个量子比特到你的电路中？
- en: On which view would you specify which quantum system to run your circuit?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在哪个视图中你会指定运行你的电路的量子系统？
- en: Which sphere would be ideal to view the quantum state of three qubits in a single
    sphere?
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个球体最适合用来观察三个量子比特在单个球体中的量子状态？
- en: Join us on Discord
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的社区Discord空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/3FyN1](Chapter_2.xhtml)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/3FyN1](Chapter_2.xhtml)'
- en: '![](img/QR_Code2617625996838265932.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![二维码](img/QR_Code2617625996838265932.png)'
