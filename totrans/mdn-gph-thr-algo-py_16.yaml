- en: '11'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mapping Language Families – an Ontological Approach
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we’ll explore an important area of science called linguistics.
    **Linguistics** is the study of languages, including word usage patterns, grammar
    evolution, and the social constructs of language. We’ll explore **ontologies**,
    which relate concepts such as words to each other through defined relationships,
    and build **language families**, where languages within a family are related to
    each other across time and geography.
  prefs: []
  type: TYPE_NORMAL
- en: Network science provides us with tools to summarize and compare ontologies and
    language families to study hypothesized similarities and differences. We’ll quantify
    differences in hypothesized language families at the end of this chapter, though
    the methodology can apply to ontologies or any other network-based structures
    derived from linguistic studies.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is an ontology?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Language families
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mapping language families
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you’ll know some of the basic tools used in linguistic-related
    analyses and be able to compare different networks to understand the key differences
    between them. Because these tools scale well, you’ll be able to tackle even very
    large ontologies.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will require Jupyter Notebook to run the practical examples in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code for this chapter is available here: [https://github.com/PacktPublishing/Modern-Graph-Theory-Algorithms-with-Python](https://github.com/PacktPublishing/Modern-Graph-Theory-Algorithms-with-Python)'
  prefs: []
  type: TYPE_NORMAL
- en: What is an ontology?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we’ll learn about ontologies and how they can be represented
    and stored as networks. While this chapter focuses on linguistic ontologies, many
    other types of ontologies exist, including gene ontologies, briefly reviewed to
    motivate this section.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to ontologies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As mentioned in the chapter introduction, an ontology is a set of ideas that
    are related by some property. Generally, they are used to organize knowledge within
    a specific discipline. Let’s make this a little bit more concrete with an example.
    Because examples in genetics are more widely used in ontology study, we’ll build
    up the intuition with a biological example before tackling linguistics.
  prefs: []
  type: TYPE_NORMAL
- en: 'Say we have five genes that are within a regulatory pathway that controls the
    production of enzymes or polypeptides found in an animal’s venom. Often, environmental
    conditions and geography play a role in the ratio of active compounds found in
    venom, even within the same species, through regulating gene transcription within
    the venom glands. Before we start collecting information on these genes and their
    influence on venom production, we simply have a collection of genes, as shown
    in *Figure 11**.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.1 – A collection of five genes involved in regulating venom production](img/B21087_11_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.1 – A collection of five genes involved in regulating venom production
  prefs: []
  type: TYPE_NORMAL
- en: 'To better understand the genes in *Figure 11**.1*, we might run an environmental
    experiment with varying conditions to turn genes on and off and elucidate their
    relationships with each other—the dependencies that exist within this regulatory
    pathway. Interdependencies can be represented by connecting each of these gene
    vertices with an edge. Let’s say we ran several experiments and found the following
    relationships:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.2 – An ontology representing relationships between genes that regulate
    venom production](img/B21087_11_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.2 – An ontology representing relationships between genes that regulate
    venom production
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 11**.2* shows that all four other genes are downstream from *Gene 1*,
    suggesting that this gene is critically important to the regulation of a critical
    compound in the animal’s venom. Mutations in *Gene 1* likely result in loss of
    function (and potentially endanger the animal). Visually representing this ontology
    as a network allows us to easily pinpoint key information within the system we
    are studying.'
  prefs: []
  type: TYPE_NORMAL
- en: However, many organisms’ gene regulation pathways are much larger than this
    example and are hard to visualize in practice—particularly entire gene ontologies,
    where the organisms’ full set of genes is mapped and connected via functional
    pathways. This means that we’ll need to use network analytics tools to study differences
    in proposed gene regulation pathways or compare gene regulation pathways across
    organisms that show the same function. For instance, in our venom example, we
    might be interested in mapping the full gene ontology of a species of sea krait,
    a member of the elapid family, and comparing its full gene ontology with another
    elapid species, such as taipan or a black mamba. These species can have upward
    of 12,000 genes, creating a very large ontology comparison problem.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s return to our focus on linguistics and see how language-related ontologies
    are constructed and can be used to study language differences among dialects,
    pidgins, or socioeconomic groups—or simply to understand the structure and function
    of a language.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider two words in the English language: *go* and *went*. Both words are
    verbs. Both have the same semantic meaning with respect to the sentence’s subject.
    However, one is present tense and the other is past tense. All these pieces of
    information help us understand the functionality of these words within the English
    language. We can map these relationships to a network structure for each word,
    as *Figure* *11**.3* summarizes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.3 – Two networks showing the linguistic properties of the words
    “go” and “went”](img/B21087_11_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.3 – Two networks showing the linguistic properties of the words “go”
    and “went”
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 11**.3* summarizes the linguistic properties of our two words: *go*
    and *went*. Imagine creating networks like this for every word in the English
    language. We would have very many networks mapping linguistic properties to words,
    and it would be easy to lose important networks. We’d also use a lot of computing
    power trying to search through graph collections for words or properties of interest.
    Let’s explore ontology creation further.'
  prefs: []
  type: TYPE_NORMAL
- en: Representing information as an ontology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To create an ontology, we need to define concepts/words/terms of interest and
    the properties that they might share. In our *Figure 11**.3* example, we have
    a set of words with linguistic properties of interest. Once we have these two
    sets defined (words and linguistic properties, respectively, in *Figure 11**.3*’s
    example), we can create maps between these two sets (the lines shown in *Figure
    11**.3*). Our word example was a very small example, though. Many times, these
    sets can include thousands or tens of thousands of items in each of our sets.
  prefs: []
  type: TYPE_NORMAL
- en: To deal with these larger sets of information and the potential relationships
    that exist between items in them, we need a systematic way to store both sets
    and their relationships. We’ll also need a lot of people to create this very large
    ontology, preferably with a way to share the information among all of the people
    working to create this ontology. That’s where databases come into play.
  prefs: []
  type: TYPE_NORMAL
- en: '**Ontology Web Language** (**OWL**) database systems organize knowledge networks
    like the ones shown in *Figure 11**.3*. Each word, term, or concept occupies a
    row within the database that is mapped to whichever properties of interest within
    the ontology match that word/term/concept, thereby creating a sort of database
    of databases to store word/term/concept data along with their relationships to
    key properties of interest in the ontology. From this database, we can search
    for information, visualize relationships of interest, and mine the entire ontology
    for overarching themes.'
  prefs: []
  type: TYPE_NORMAL
- en: Any type of knowledge can be organized in an OWL database. For instance, we
    could use an OWL database to organize knowledge about animal taxonomies or evolutionary
    genetics to quickly search for relationships among colubrid snake species according
    to genetic analysis results. We could also organize medical terms to create an
    easy-to-use lookup system for doctors to use when confronted with symptoms or
    diseases beyond their areas of expertise to facilitate the diagnosis of a patient.
    We could even organize knowledge about character relationships in long fictional
    works to provide study guides for a book such as *War* *and Peace*.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know the basics about ontologies and the systems in which we can
    store them, let’s turn our attention back to linguistics, where we may wish to
    study the evolution of languages across language families.
  prefs: []
  type: TYPE_NORMAL
- en: Language families
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Language families** are groups of languages with a common ancestor that evolved
    (usually) within a related geographic region. For example, the Romance language
    family consists of languages that evolved from Vulgar Latin (late-period Latin)
    in the Southern European region. The Nilo-Saharan language family evolved in the
    Nile Delta during the time of the Nubian kingdom. There are roughly 150 language
    families rolled into major language families that exist today, plus several **language
    isolates** that do not have relationships with other languages (Australian Tiwi,
    for instance). Language isolates have no genetic ancestors linked to other languages.
    Campbell gives seven major language families (one per continent), though other
    researchers classify major language families into other groups of languages.'
  prefs: []
  type: TYPE_NORMAL
- en: Language drift and relationships
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Language families emerged as different populations of genetic ancestor languages
    became geographically isolated enough for the ancestor language to evolve regionally.
    As languages evolve, words may change. Pronunciations may change. Grammar may
    evolve. In many English **pidgins** (mixes of two or more languages, including
    English in this case), English has mixed with local languages to create a hybrid
    language that retains some of the grammar and phrasing of English alongside a
    local language. In Nigerian English pidgins, English mixes with local languages,
    such as Igbo, Hausa, or Yoruba. For instance, “*How are you?*” becomes “*How na?*”
    and “*Please come join me for a meal*” becomes “*Abeg come* *chop food*.”
  prefs: []
  type: TYPE_NORMAL
- en: Over time, pidgin languages can evolve to the point of being a separate language
    altogether (a child of English, much the way Middle English evolved from Old English
    as other languages influenced Old English) or remain a pidgin of the parent language
    (English, in this case). When the language evolves, it becomes a child branch
    of the parent language. In the case of English, its widespread use in business
    and school systems suggests that many child languages will develop over time into
    separate languages with distinct diction and grammar. Given pidgins in Nigeria
    and their widespread usage, a Nigerian English child language is probably the
    most likely child language to develop in the next century or so.
  prefs: []
  type: TYPE_NORMAL
- en: A few driving factors tend to favor language evolution into child languages
    or pidgins. Commerce between different countries or regions that do not overlap
    linguistically necessitates means of communication. Pidgins often develop in marketplaces
    where many speakers of different languages must communicate with each other to
    buy and sell goods. Common words and phrases might be used over and over during
    a transaction (such as currency values or amounts). Tricky grammar or articles
    might be dropped to facilitate understanding between speakers of two different
    languages.
  prefs: []
  type: TYPE_NORMAL
- en: Empire expansion is another driver of language evolution. The Roman Empire spread
    Latin throughout much of Europe, influencing languages, particularly those closest
    to Rome, over centuries. Spain and Portugal are interesting cases, where both
    Roman influences in Latin and Moor influences in Arabic influenced local dialects.
    Over time, the Romance languages, including Spanish and Portuguese, evolved out
    of Latin as the Roman Empire’s power waned and other linguistic and cultural influences
    separated regions that were united in their use of Latin for commerce, schooling,
    and religion. In fact, the Roman Empire influenced the development of these languages
    so directly that the term **Romance languages** refers to the Roman Empire!
  prefs: []
  type: TYPE_NORMAL
- en: Most English pidgins that exist today owe their existence to British colonialism,
    as do different dialects of English spoken across Great Britain, the United States
    of America, and Australia. Depending on how long English lasts as business’s lingua
    franca, we may see many child languages evolving from English in the next centuries.
  prefs: []
  type: TYPE_NORMAL
- en: A **phylogeny tree** can be used to summarize the evolutionary relationships
    between ideas, languages, or species over time visually by showing parent and
    child relationships. This makes the study of evolutionary structure easier, as
    the visuals provide clues about hypothesized pathways of evolution and a network
    structure that is easy to analyze for information and potential statistical differences.
    General ontology structures do not have a hierarchical structure, where one part
    of the network is ideologically dependent on a prior part of the network. Let’s
    see this in action with the hypothesized evolutionary pathways of Nilo-Saharan
    languages.
  prefs: []
  type: TYPE_NORMAL
- en: Nilo-Saharan languages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Nilo-Saharan languages include languages spoken in South Sudan, Ethiopia, Sudan,
    Kenya, Tanzania, Uganda, Chad, Burkina Faso, Cameroon, Mali, the Democratic Republic
    of Congo, Benin, Algeria, Nigeria, Niger, Egypt, and Libya. Further small language
    communities exist in several other countries, as well. Some common languages included
    in this family are Maasai, Songhay, Dinka, Luo, and Kanuri. About 70 million people
    speak a Nilo-Saharan language, with the number of speakers increasing for some
    regions and dialects.
  prefs: []
  type: TYPE_NORMAL
- en: The linguistic study of Nilo-Saharan languages dates to at least the 1800s,
    and many papers in the last decade have debated language drift and relationships
    of parent languages with their child languages. In this section, we’ll examine
    a few of the proposed hierarchies and then return to analyze the similarities
    and differences of these hierarchies with Python code in the next section. If
    you are interested in the papers themselves, you can consult the references at
    the end of the chapter, particularly the Dimmendaal paper, which summarizes recent
    debates on parent-child relationships in the Nilo-Saharan family.
  prefs: []
  type: TYPE_NORMAL
- en: 'Greenberg proposed the following hierarchy in 1963, classifying several language
    family branches. *Figure 11**.4* shows this hierarchy, including children branches
    off a child branch of the larger Nilo-Saharan family:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.4 – Greenberg’s classification of Nilo-Saharan languages](img/B21087_11_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.4 – Greenberg’s classification of Nilo-Saharan languages
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 11**.4* shows some subclassifications of Nilo-Saharan languages that
    are part of the language family. Each of these subclassifications continues to
    individual languages, totaling roughly 130 languages spoken in this region that
    originated near the area where the Nile tributaries meet in what was once Nubia.'
  prefs: []
  type: TYPE_NORMAL
- en: Since 1963, many papers have further divided these subclasses and added additional
    subclasses culminating in the Dimmendaal paper that we’ll discuss in this section,
    occasionally creating very complicated and deep network structures. Grammar, diction,
    phonology (pronunciation of consonants, in this case), and terminology typically
    dictate where lines are drawn, but languages are often fluid and may overlap somewhat,
    making classification systems difficult to discern. Let’s turn to one of the more
    recent works on the Nilo-Saharan family of languages.
  prefs: []
  type: TYPE_NORMAL
- en: 'Dimmendaal’s recent work proposes a new hierarchy of the Nilo-Saharan subfamilies,
    summarized in *Figure 11**.5*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.5 – Dimmendaal’s hierarchy of Nilo-Saharan subfamilies](img/B21087_11_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.5 – Dimmendaal’s hierarchy of Nilo-Saharan subfamilies
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: In *Figure 11**.5*, Dimmendaal’s classification splits languages first by region
    and then by dialect or region. Note also that some language subfamilies appear
    to have emerged together (such as Fur and Kunama) without the presence of an intermediary
    family. This is a more complicated structure than Greenberg’s classification in
    *Figure 11**.4*.
  prefs: []
  type: TYPE_NORMAL
- en: As language family hierarchies evolve as languages are studied more systematically
    over time, it is important to note differences that emerge and their potential
    causes. This shines light on avenues of further linguistic research and can contribute
    to future language family hierarchy development.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know a little bit about Nilo-Saharan languages and their hierarchies,
    let’s see how network science can help us understand differences in structure
    that may be important.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Our example is very limited in size such that it is easy to visualize results
    and why our analyses may show differences. Working with full OWL databases or
    full language hierarchies creates much more nuanced and large networks to study.
    However, the tools for doing so are the same regardless of network size or complexity.
    Thus, the analyses we’re about to begin can be applied to much more complicated
    linguistic data structures where simply visualizing the differences between OWL
    databases created by different research groups or different language family hierarchies
    may not be feasible.
  prefs: []
  type: TYPE_NORMAL
- en: Mapping language families
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s return to our two examples of Nilo-Saharan language family trees. To
    examine differences in structure, we’ll need to first create these in NetworkX.
    For the Dimmendaal family tree, we’ll break with the tree structure slightly to
    show the interrelationships that exist for some of the child subfamilies. Let’s
    get started by creating and plotting the Greenberg tree with `Script 11.1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This script produces a similar representation to *Figure 11**.4*. *Figure 11**.6*
    shows the NetworkX plot of the Greenberg Nilo-Saharan language subfamily tree:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.6 – A plot of Greenberg’s Nilo-Saharan language subfamily tree](img/B21087_11_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.6 – A plot of Greenberg’s Nilo-Saharan language subfamily tree
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we can see Greenberg’s Nilo-Saharan language subfamily tree and its
    various branches, let’s create and plot the Dimmendaal Nilo-Saharan language subfamily
    tree and its various branches by adding to `Script 11.1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This piece of the script produces a plot of Dimmendaal’s Nilo-Saharan language
    subfamily tree, shown in *Figure 11**.7*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.7 – A plot of Dimmendaal’s Nilo-Saharan language subfamily tree](img/B21087_11_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.7 – A plot of Dimmendaal’s Nilo-Saharan language subfamily tree
  prefs: []
  type: TYPE_NORMAL
- en: Note the connections that exist in Dimmendaal’s Nilo-Saharan language subfamily
    tree between Kunama and Fur, as well as Saharan and Eastern Sudanic. These represent
    related child subfamilies within the Northeastern branch of Nilo-Saharan languages.
    From *Figures 11.6* and *11.7*, we can see a similar overall structure, where
    a lot of shallow, unconnected branches exist. However, Dimmendaal’s Nilo-Saharan
    language subfamily tree adds an extra layer to the tree and includes the related
    subfamilies without a common ancestor directly begetting them.
  prefs: []
  type: TYPE_NORMAL
- en: 'Given these differences, we’d expect some centrality metrics to vary between
    the two language subfamily trees. We’ll start with some familiar metrics defined
    in earlier chapters. `Script 11.2` analyzes the differences in average betweenness
    centrality across our two language subfamily trees:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We obtain average betweenness centralities of `0.131` (Greenberg’s) and `0.127`
    (Dimmendaal’s), suggesting that bridging properties are similar across these subfamily
    trees. Let’s assess hubness properties by calculating the average degree centrality
    by adding to `Script 11.2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We obtain average degree centralities of `0.182` (Greenberg’s) and `0.278` (Dimmendaal’s),
    suggesting that hubness properties vary somewhat across these subfamily trees.
    Given the added layer of depth connecting other layers of the tree in Dimmendaal’s
    subfamily tree structure, we’d expect to see this difference.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s turn our attention to a centrality metric especially suited for real-world
    linguistic data (and other ontology or phylogeny network datasets).
  prefs: []
  type: TYPE_NORMAL
- en: '**Subgraph centrality** measures how each vertex participates within subgraphs
    on the network by weighting small subnetworks heavily and larger subnetworks less,
    using the spectra of the network’s adjacency matrix, and estimating subnetworks
    through random walks on the network. This blends the properties of **spectral
    clustering** (seen in [*Chapter 5*](B21087_05.xhtml#_idTextAnchor066)) and degree
    centrality to create a hybrid centrality measurement.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can see this in action on our two subfamily trees by adding to `Script 11.2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This script shows that average subgraph centrality varies between the two subfamily
    trees, with Greenberg’s average subgraph centrality of `2.478` and Dimmendaal’s
    average subgraph centrality of `3.276`. This suggests that the spectra and degree
    distributions are different across these hypothesized subfamily trees.
  prefs: []
  type: TYPE_NORMAL
- en: While this example only involves two small ontology structures, these types
    of analyses can be helpful when working with many ontologies or comparing very
    large ontologies where visualization is not recommended. For example, we may wish
    to compare the full Nilo-Saharan language trees hypothesized across many different
    papers. These trees would include hundreds of vertices and possibly dozens of
    trees. Tracking the differences visually would be quite a challenge!
  prefs: []
  type: TYPE_NORMAL
- en: When we consider linguistic OWL databases, the scale of our analysis grows even
    further to hundreds of thousands of vertices to compare across OWL databases.
    At this scale, it is not possible to visually mine the data in a comparison. Network
    science provides a way to compare the proposed OWL database structures and zero
    in on differences that exist between those databases to find key differences between
    the proposed structures. In addition, many of the tools we’ve overviewed scale
    well to this size of data analysis, providing an efficient way to find these key
    differences. However, understanding the differences that exist in etymology theory
    is beyond the scope of this book, and many OWL databases include storage in proprietary
    systems or are proprietary themselves.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter has focused on the field of linguistics. However, many types of
    ontologies and phylogenies exist in other disciplines. Zoology and human genomics
    often use ontologies to study relationships between genes, environments, and gene
    expression. These ontologies tend to be large, and the curation of knowledge to
    create these ontologies can result in significant differences or knowledge gaps
    between different ontologies attempting to capture the same knowledge. Scalable
    centrality metrics, such as those we overviewed in a simple-to-visualize example,
    can pinpoint overall and individual branch differences across these complicated
    ontologies to pinpoint areas of interest and potential caveats of using one open
    source ontology versus another.
  prefs: []
  type: TYPE_NORMAL
- en: As knowledge in different fields grows, the methodology to compare ontologies
    will develop further, and network science will play a significant role in the
    management, understanding, and usage of ontologies within different disciplines.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned how to represent linguistic data in databases and
    networks. We compared two Nilo-Saharan language subfamily networks using centrality
    metrics and introduced subgraph centrality as a centrality metric particularly
    suited to analyzing ontologies and phylogenies. Finally, we expanded our treatment
    of ontologies to those outside the field of linguistics and discussed how the
    tools in this chapter can be used to scale these analyses to very large groups
    of very large ontologies to compare suitability for use in real-world applications.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn about graph databases, which can be used
    to store ontology data such as the data discussed in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Campbell, L. R. (2018). *How many language families are there in* *the world?*
  prefs: []
  type: TYPE_NORMAL
- en: Dimmendaal, G. J. (2019). *A typological perspective on the morphology of Nilo-Saharan
    languages*. In *Oxford Research Encyclopedia* *of Linguistics*.
  prefs: []
  type: TYPE_NORMAL
- en: Dimmendaal, G. J., Ahland, C., Jakobi, A., and Lojenga, C. K. (2019). *Linguistic
    features and typologies in languages commonly referred to as ‘Nilo-Saharan’*.
    *Cambridge Handbook of African* *Languages*, 326-381.
  prefs: []
  type: TYPE_NORMAL
- en: Done, B., Khatri, P., Done, A., and Draghici, S. (2008). *Predicting novel human
    gene ontology annotations using semantic analysis*. *IEEE/ACM transactions on
    computational biology and bioinformatics*, *7*(1), 91-99.
  prefs: []
  type: TYPE_NORMAL
- en: Ehret, C. (2006). *The Nilo-Saharan background of Chadic*. *Studies in African
    Linguistics*, *35*, 56-66.
  prefs: []
  type: TYPE_NORMAL
- en: Estrada, E., and Rodriguez-Velazquez, J. A. (2005). *Subgraph centrality in
    complex networks*. *Physical Review E*, *71*(5), 056103.
  prefs: []
  type: TYPE_NORMAL
- en: Gene Ontology Consortium. (2008). *The gene ontology project in 2008*. *Nucleic
    acids research*, *36*(suppl_1), D440-D444.
  prefs: []
  type: TYPE_NORMAL
- en: Greenberg, J. H. (1957). *Essays* *in linguistics*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Greenberg, Joseph H. 1963\. *The Languages of Africa*. Bloomington, IN: Indiana
    University.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Jakobi, A., and Dimmendaal, G. J. (2022). *Number marking in Karko and Nilo-Saharan*.
    *Number in World’s languages: A Comparative* *Handbook*, 63-106.'
  prefs: []
  type: TYPE_NORMAL
- en: McGuinness, D. L., and Van Harmelen, F. (2004). *OWL web ontology language overview*.
    *W3C recommendation*, *10*(10), 2004.
  prefs: []
  type: TYPE_NORMAL
- en: 'Oladnabi, M., Omidi, S., Mehrpouya, M., Azadmehr, A., Kazemi-Lomedasht, F.,
    and Yardehnavi, N. (2021). *Venomics and antivenomics data: Current and future
    perspective*. *Archives of Biotechnology and Biomedicine*, *5*(1), 026-031.'
  prefs: []
  type: TYPE_NORMAL
- en: Souag, L. (2022). *How a West African language becomes North African, and vice
    versa*. *Linguistic Typology*, *26*(2), 283-312.
  prefs: []
  type: TYPE_NORMAL
- en: Subich, V. G. (2020). *STRUCTURAL AND TYPOLOGICAL ANALYSIS OF THE GENEALOGY
    OF AFRICAN LANGUAGES.* Арабистика Евразии, (12), 103-117.
  prefs: []
  type: TYPE_NORMAL
- en: Suryamohan, K., Krishnankutty, S. P., Guillory, J., Jevit, M., Schröder, M.
    S., Wu, M., ... and Seshagiri, S. (2020). *The Indian cobra reference genome and
    transcriptome enables comprehensive identification of venom toxins*. *Nature Genetics*,
    *52*(1), 106-117.
  prefs: []
  type: TYPE_NORMAL
- en: Urban, M. (2021). *The geography and development of language isolates*. *Royal
    Society open science*, *8*(4), 202232.
  prefs: []
  type: TYPE_NORMAL
- en: Wardhaugh, R. (1972). *Introduction* *to Linguistics*.
  prefs: []
  type: TYPE_NORMAL
- en: '*Nigerian Pidgin – 20 useful words and phrases* (n.d.): [https://www.britishcouncil.org/voices-magazine/nigerian-pidgin-words-phrases](https://www.britishcouncil.org/voices-magazine/nigerian-pidgin-words-phrases)'
  prefs: []
  type: TYPE_NORMAL
