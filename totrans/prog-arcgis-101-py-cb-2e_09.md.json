["```py\n    import arcpy.da\n    ```", "```py\n    arcpy.env.workspace = \"c:/ArcpyBook/Ch9\"\n    ```", "```py\n    with arcpy.da.SearchCursor(\"Schools.shp\",(\"Facility\",\"Name\")) as cursor:\n    ```", "```py\n    for row in sorted(cursor):\n      print(\"School name: \" + row[1])\n    ```", "```py\n    School name: ALLAN\n    School name: ALLISON\n    School name: ANDREWS\n    School name: BARANOFF\n    School name: BARRINGTON\n    School name: BARTON CREEK\n    School name: BARTON HILLS\n    School name: BATY\n    School name: BECKER\n    School name: BEE CAVE\n\n    ```", "```py\n    with arcpy.da.SearchCursor(\"Schools.shp\",(\"Facility\",\"Name\"), '\"FACILITY\" = \\'HIGH SCHOOL\\'') as cursor:\n\n    ```", "```py\n    High school name: AKINS\n    High school name: ALTERNATIVE LEARNING CENTER\n    High school name: ANDERSON\n    High school name: AUSTIN\n    High school name: BOWIE\n    High school name: CROCKETT\n    High school name: DEL VALLE\n    High school name: ELGIN\n    High school name: GARZA\n    High school name: HENDRICKSON\n    High school name: JOHN B CONNALLY\n    High school name: JOHNSTON\n    High school name: LAGO VISTA\n\n    ```", "```py\nwith arcpy.da.SearchCursor(fc, (\"SHAPE@XY\",\"Facility\",\"Name\")) as cursor:\n```", "```py\n    import arcpy.da, time\n    ```", "```py\n    arcpy.env.workspace = \"c:/ArcpyBook/Ch9\"\n    ```", "```py\n    start = time.clock()\n    ```", "```py\n    with arcpy.da.SearchCursor(\"coa_parcels.shp\",(\"PY_FULL_OW\",\"SHAPE@XY\")) as cursor:\n    ```", "```py\n    for row in cursor:\n      print(\"Parcel owner: {0} has a location of: {1}\".format(row[0], row[1]))\n    ```", "```py\n    elapsed = (time.clock() - start)\n    ```", "```py\n    print \"Execution time: \" + str(elapsed)\n    ```", "```py\n    Parcel owner: CITY OF AUSTIN ATTN REAL ESTATE DIVISION has a location of: (3110480.5197341456, 10070911.174956793)\n    Parcel owner: CITY OF AUSTIN ATTN REAL ESTATE DIVISION has a location of: (3110670.413783513, 10070800.960865)\n    Parcel owner: CITY OF AUSTIN has a location of: (3143925.0013213265, 10029388.97419636)\n    Parcel owner: CITY OF AUSTIN % DOROTHY NELL ANDERSON ATTN BARRY LEE ANDERSON has a location of: (3134432.983822767, 10072192.047894118)\n    Execution time: 9.08046185109\n\n    ```", "```py\n    with arcpy.da.SearchCursor(\"coa_parcels.shp\",(\"PY_FULL_OW\",\"SHAPE@\")) as cursor:\n    ```", "```py\n    Parcel owner: CITY OF AUSTIN ATTN REAL ESTATE DIVISION has a location of: <geoprocessing describe geometry object object at 0x06B9BE00>\n    Parcel owner: CITY OF AUSTIN ATTN REAL ESTATE DIVISION has a location of: <geoprocessing describe geometry object object at 0x2400A700>\n    Parcel owner: CITY OF AUSTIN has a location of: <geoprocessing describe geometry object object at 0x06B9BE00>\n    Parcel owner: CITY OF AUSTIN % DOROTHY NELL ANDERSON ATTN BARRY LEE ANDERSON has a location of: <geoprocessing describe geometry object object at 0x2400A700>\n    Execution time: 10.1211390896\n\n    ```", "```py\nrowValues = [{'Bastrop','N',3000,(-105.345,32.234)),('Ft Davis','N', 456, (-109.456,33.468))]\nfc = \"c:/data/wildfires.gdb/California\"\nfields[\"FIRE_NAME\", \"FIRE_CONTAINED\", \"ACRES\", \"SHAPE@XY\"]\nwith arcpy.da.InsertCursor(fc, fields) as cursor:\n  for row in rowValues:\n    cursor.insertRow(row)\n```", "```py\n    import arcpy,os\n    ```", "```py\n    arcpy.env.workspace = \"C:/ArcpyBook/Ch9/WildfireData/WildlandFires.mdb\"\n    ```", "```py\n    f = open(\"C:/ArcpyBook/Ch9/WildfireData/NorthAmericaWildfires_2007275.txt\",\"r\")\n    lstFires = f.readlines()\n    ```", "```py\n    try:\n    ```", "```py\n    with da.InsertCursor(\"FireIncidents\",(\"SHAPE@XY\",\"CONFIDENCEVALUE\")) as cur:\n    ```", "```py\n    cntr = 1\n    ```", "```py\n    for fire in lstFires:\n          if 'Latitude' in fire:\n            continue\n          vals = fire.split(\",\")\n          latitude = float(vals[0])\n          longitude = float(vals[1])\n          confid = int(vals[2])\n          rowValue = [(latitude,longitude),confid]\n          cur.insertRow(rowValue)\n          print \"Record number \" + str(cntr) + \" written to feature class\"\n          #arcpy.AddMessage(\"Record number\" + str(cntr) + \" written to feature class\")\n          cntr = cntr + 1\n    ```", "```py\n    except Exception as e:\n      print e.message\n    ```", "```py\n    finally:\n      f.close()\n    ```", "```py\n    import arcpy, os\n\n    arcpy.env.workspace = \"C:/ArcpyBook/Ch9/WildfireData/WildlandFires.mdb\"\n    f = open(\"C:/ArcpyBook/Ch9/WildfireData/NorthAmericaWildfires_2007275.txt\",\"r\")\n    lstFires = f.readlines()\n    try:\n      with da.InsertCursor(\"FireIncidents\",(\"SHAPE@XY\",\"CONFIDENCEVALUE\")) as cur:\n        cntr = 1\n        for fire in lstFires:\n          if 'Latitude' in fire:\n            continue\n          vals = fire.split(\",\")\n          latitude = float(vals[0])\n          longitude = float(vals[1])\n          confid = int(vals[2])\n          rowValue = [(latitude,longitude),confid]\n          cur.insertRow(rowValue)\n          print \"Record number \" + str(cntr) + \" written to feature class\"\n          #arcpy.AddMessage(\"Record number\" + str(cntr) + \" written to feature class\")\n          cntr = cntr + 1\n    except Exception as e:\n      print e.message\n    finally:\n      f.close()\n    ```", "```py\n    Record number: 406 written to feature class\n    Record number: 407 written to feature class\n    Record number: 408 written to feature class\n    Record number: 409 written to feature class\n    Record number: 410 written to feature class\n    Record number: 411 written to feature class\n\n    ```", "```py\n    import arcpy,os\n    ```", "```py\n    arcpy.env.workspace = \"C:/ArcpyBook/Ch9/WildfireData/WildlandFires.mdb\"\n    ```", "```py\n    try:\n    ```", "```py\n    arcpy.AddField_management(\"FireIncidents\",\"CONFID_RATING\",\"TEXT\",\"10\")\n    print \"CONFID_RATING field added to FireIncidents\"\n    ```", "```py\n    with arcpy.da.UpdateCursor(\"FireIncidents\",(\"CONFIDENCEVALUE\",\"CONFID_RATING\")) as cursor:\n    ```", "```py\n    cntr = 1\n    ```", "```py\n        for row in cursor:\n              # update the confid_rating field\n              if row[0] <= 40:\n                row[1] = 'POOR'\n                cursor.updateRow(row)\n              elif row[0] > 40 and row[0] <= 60:\n                row[1] = 'FAIR'\n                cursor.updateRow(row)\n              elif row[0] > 60 and row[0] <= 85:\n                row[1] = 'GOOD'\n                cursor.updateRow(row)\n              else:\n                row[1] = 'EXCELLENT'\n                cursor.updateRow(row)\n        print \"Record number \" + str(cntr) + \" updated\"\n        cntr = cntr + 1\n        ```", "```py\n    except Exception as e:\n      print e.message\n    ```", "```py\n    import arcpy, os\n\n    arcpy.env.workspace = \"C:/ArcpyBook/Ch9/WildfireData/WildlandFires.mdb\"\n    try:\n      #create a new field to hold the values\n      arcpy.AddField_management(\"FireIncidents\",\"CONFID_RATING\",\"TEXT\",\"10\")\n      print \"CONFID_RATING field added to FireIncidents\"\n      with arcpy.da.UpdateCursor(\"FireIncidents\",(\"CONFIDENCEVALUE\",\"CONFID_RATING\")) as cursor:\n        cntr = 1\n        for row in cursor:\n          # update the confid_rating field\n          if row[0] <= 40:\n            row[1] = 'POOR'\n          elif row[0] > 40 and row[0] <= 60:\n            row[1] = 'FAIR'\n          elif row[0] > 60 and row[0] <= 85:\n            row[1] = 'GOOD'\n          else:\n            row[1] = 'EXCELLENT'\n          cursor.updateRow(row)\t\t\t\n    print \"Record number \" + str(cntr) + \" updated\"\n          cntr = cntr + 1\n    except Exception as e:\n      print e.message\n    ```", "```py\n    Record number 406 updated\n    Record number 407 updated\n    Record number 408 updated\n    Record number 409 updated\n    Record number 410 updated\n\n    ```", "```py\n    import arcpy,os\n    ```", "```py\n    arcpy.env.workspace = \"C:/ArcpyBook/Ch9/WildfireData/WildlandFires.mdb\"\n    ```", "```py\n    try:\n    ```", "```py\n    with arcpy.da.UpdateCursor(\"FireIncidents\",(\"CONFID_RATING\"),'[CONFID_RATING] = \\'POOR\\'') as cursor:\n    ```", "```py\n    cntr = 1\n    ```", "```py\n    for row in cursor:\n      cursor.deleteRow()\n         print \"Record number \" + str(cntr) + \" deleted\"\n         cntr = cntr + 1\n    ```", "```py\n    except Exception as e:\n      print e.message\n    ```", "```py\n    import arcpy, os\n\n    arcpy.env.workspace = \"C:/ArcpyBook/Ch9/WildfireData/WildlandFires.mdb\"\n    try:\n      with arcpy.da.UpdateCursor(\"FireIncidents\",(\"CONFID_RATING\"),'[CONFID_RATING] = \\'POOR\\'') as cursor:\n        cntr = 1\n        for row in cursor:\n          cursor.deleteRow()\n          print \"Record number \" + str(cntr) + \" deleted\"\n          cntr = cntr + 1\n    except Exception as e:\n      print e.message\n    ```", "```py\n    Record number 1 deleted\n    Record number 2 deleted\n    Record number 3 deleted\n    Record number 4 deleted\n    Record number 5 deleted\n\n    ```", "```py\nedit = arcpy.da.Editor('Database Connections/Portland.sde')\nedit.startEditing(False)\nedit.startOperation()\nwith arcpy.da.InsertCursor(\"Portland.jgp.schools\",(\"SHAPE\",\"Name\")) as cursor:\n  cursor.insertRow([7642471.100, 686465.725), 'New School'])\nedit.stopOperation()\nedit.stopEditing(True)\n```", "```py\n    arcpy.AddField_management(\"FireIncidents\",\"CONFID_RATING\",\"TEXT\",\"10\")\n    print \"CONFID_RATING field added to FireIncidents\"\n    ```", "```py\n    edit = arcpy.da.Editor('C:\\ArcpyBook\\data\\CityOfSanAntonio.gdb')\n    edit.startEditing(True)\n    ```", "```py\n    if row[0] > 40 and row[0] <= 60:\n      row[1] = 'GOOD'\n    elif row[0] > 60 and row[0] <= 85:\n      row[1] = 'BETTER'\n    else:\n      row[1] = 'BEST'\n    ```", "```py\n    edit.stopEditing(True)\n    ```", "```py\n    import arcpy, os\n\n    arcpy.env.workspace = \"C:/ArcpyBook/Ch9/WildfireData/WildlandFires.mdb\"\n    try:\n      edit = arcpy.da.Editor('C:\\ArcpyBook\\data\\CityOfSanAntonio.gdb')\n      edit.startEditing(True)\n      with arcpy.da.UpdateCursor(\"FireIncidents\",(\"CONFIDENCEVALUE\",\"CONFID_RATING\")) as cursor:\n        cntr = 1\n        for row in cursor:\n          # update the confid_rating field\n          if row[0] > 40 and row[0] <= 60:\n            row[1] = 'GOOD'\n          elif row[0] > 60 and row[0] <= 85:\n            row[1] = 'BETTER'\n          else:\n            row[1] = 'BEST'\n          cursor.updateRow(row)\n          print \"Record number \" + str(cntr) + \" updated\"\n          cntr = cntr + 1\n      edit.stopEditing(True)\n    except Exception as e:\n      print e.message\n    ```", "```py\n    import arcpy\n    ```", "```py\n    infc = \"c:/ArcpyBook/data/CityOfSanAntonio/SchoolDistricts\"\n    ```", "```py\n    for row in arcpy.da.SearchCursor(infc, [\"OID@\", \"SHAPE@\"]):\n    Print the object id of each feature.  \n    # Print the current ID\n      print(\"Feature {0}:\".format(row[0]))\n      partnum = 0\n    ```", "```py\n      # Step through each part of the feature\n      for part in row[1]:\n        # Print the part number\n        print(\"Part {0}:\".format(partnum))\n    ```", "```py\n        # Step through each vertex in the feature\n        #\n        for pnt in part:\n          if pnt:\n            # Print x,y coordinates of current point\n            #\n            print(\"{0}, {1}\".format(pnt.X, pnt.Y))\n          else:\n            # If pnt is None, this represents an interior ring\n            #\n            print(\"Interior Ring:\")\n        partnum += 1\n    ```", "```py\n    Feature 1:\n    Part 0:\n    -98.492224986, 29.380866971\n    -98.489300049, 29.379610054\n    -98.486967023, 29.378995028\n    -98.48503096, 29.376808947\n    -98.481447988, 29.375624018\n    -98.478799041, 29.374304981\n\n    ```"]