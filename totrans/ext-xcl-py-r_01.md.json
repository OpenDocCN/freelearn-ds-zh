["```py\npython -m pip install pandas==2.0.1\npython -m pip install openpyxl==3.1.2\n```", "```py\npython -m pip install -r requirements.txt\n```", "```py\n%pip install pandas==2.0.1\n%pip install openpyxl==3.1.2\n```", "```py\npkgs <- c(\"openxlsx\", \"xlsx\", \"readxl\")\ninstall.packages(pkgs, dependencies = TRUE)\nlapply(pkgs, library, character.only = TRUE)\n```", "```py\n read_excel_sheets <- function(filename, single_tbl) {\n```", "```py\nsheets <- readxl::excel_sheets(filename)\n```", "```py\nif (single_tbl) {\n```", "```py\nx <- purrr::map_df(sheets, read_excel, path = filename)\n```", "```py\n} else {\n```", "```py\n x <- purrr::map(sheets, ~ readxl::read_excel(filename, sheet = .x))\n```", "```py\n purrr::set_names(x, sheets)\n```", "```py\n x\n```", "```py\nimport pandas as pd\n# Read the Excel file\ndf = pd.read_excel('iris_data.xlsx', sheet_name='setosa')\n# Display the first few rows of the DataFrame\nprint(df.head())\n```", "```py\nimport openpyxl\nimport pandas as pd\n# Load the workbook\nwb = openpyxl.load_workbook('iris_data.xlsx')\n# Select the sheet\nsheet = wb['versicolor']\n# Extract the values (including header)\nsheet_data_raw = sheet.values\n# Separate the headers into a variable\nheader = next(sheet_data_raw)[0:]\n# Create a DataFrame based on the second and subsequent lines of data with the header as column names\nsheet_data = pd.DataFrame(sheet_data_raw, columns=header)\nprint(sheet_data.head())\n```", "```py\n# Assuming you are working with the first sheet\nsheet = wb['versicolor']\n# Iterate over rows and print raw values\nfor row in sheet.iter_rows(min_row=1, max_row=5, values_only=True):\n    print(row)\n```", "```py\n# Iterate over columns and print raw values\nfor column in sheet.iter_cols(min_col=1, max_col=5, values_only=True):\n    print(column)\n```", "```py\nfrom openpyxl import load_workbook\nimport pandas as pd\ndef read_single_sheet(workbook, sheet_name):\n   # Load the sheet from the workbook\n    sheet = workbook[sheet_name]\n    # Read out the raaw data including headers\n    sheet_data_raw = sheet.values\n    # Separate the headers into a variable\n    columns = next(sheet_data_raw)[0:]\n    # Create a DataFrame based on the second and subsequent lines of data with the header as column names and return it\n    return pd.DataFrame(sheet_data_raw, columns=columns)\ndef read_multiple_sheets(file_path):\n    # Load the workbook\n    workbook = load_workbook(file_path)\n    # Get a list of all sheet names in the workbook\n    sheet_names = workbook.sheetnames\n    # Cycle through the sheet names, load the data for each and concatenate them into a single DataFrame\n    return pd.concat([read_single_sheet(workbook=workbook, sheet_name=sheet_name) for sheet_name in sheet_names], ignore_index=True)\n# Define the file path and sheet names\nfile_path = 'iris_data.xlsx' # adjust the path as needed\n# Read the data from multiple sheets\nconsolidated_data = read_multiple_sheets(file_path)\n# Display the consolidated data\nprint(consolidated_data.head())\n```"]