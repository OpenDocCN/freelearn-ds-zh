- en: '7\. Data Analysis: Creating and Using Calculations'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7. 数据分析：创建和使用计算
- en: Overview
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, you will learn to create and use various types of calculations,
    not just within an existing data source, but also across data sources. This chapter
    first describes the definitions and the differences between Aggregate and Non-Aggregate
    values. Then, you will learn about various types of calculations, such as numeric
    calculations, string calculations, and date calculations, as well as how to write
    logic statements in Tableau.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何创建和使用各种类型的计算，不仅限于现有数据源内，还可以跨数据源。本章首先描述了聚合和非聚合值的定义及其区别。然后，你将了解各种类型的计算，如数值计算、字符串计算和日期计算，以及如何在Tableau中编写逻辑语句。
- en: By the end of this chapter, you will be able to create and use various types
    of calculations in Tableau.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将能够创建和使用Tableau中的各种类型的计算。
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Typically, the first step when analyzing data is to start with some questions
    or goals. It could be as simple as determining your most profitable customers,
    or more complicated, such as investigating which products are leading to losses
    despite high sales. After deciding on questions or goals, you would audit your
    data. This means identifying where data resides—whether the required fields are
    stored in a single or in multiple data sources and whether all fields are readily
    available for use. Then, you would check the integrity and validity of your data.
    This means checking whether the data needs any modifications in terms of cleaning,
    combining, or restructuring.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，分析数据的第一步是提出一些问题或目标。这可能是确定你最有利可图的客户，或者更复杂，比如调查尽管销售量高但导致亏损的产品。在确定问题或目标后，你会审计你的数据。这意味着确定数据所在的位置——所需字段是否存储在单个或多个数据源中，以及所有字段是否都易于使用。然后，你会检查数据的完整性和有效性。这意味着检查数据是否需要在清洁、合并或重构方面进行任何修改。
- en: Once data is audited, the tools in Tableau Desktop allow you to explore it visually
    for more streamlined analysis. This can mean building charts, adding interactivity,
    separating data into groups, or creating calculations to derive more meaningful
    insights. Once analysis is complete, the insights you gather will be ready to
    share with others. This chapter aims to cover all aspects of the data analysis
    cycle.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据经过审计，Tableau Desktop中的工具允许你以视觉方式探索它，以便进行更流畅的分析。这可能意味着构建图表、添加交互性、将数据分组或创建计算以获得更有意义的见解。一旦分析完成，你收集的见解就可以与他人分享了。本章旨在涵盖数据分析周期的所有方面。
- en: In this chapter, you will later learn how to create and use Tableau's various
    types of calculation, which is an essential skill in data analysis. Differentiating
    Between Aggregate and Non-Aggregate
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何创建和使用Tableau的各种计算类型，这是数据分析中的一项基本技能。区分聚合和非聚合
- en: To work effectively with Tableau, it is vital that you have a thorough understanding
    of aggregation. When adding any data, Tableau quickly classifies the data in the
    `Data` pane as `Dimensions` and `Measures.` When a `Measure` enters the view,
    Tableau aggregates it (typically, using the `SUM` aggregation).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有效地使用Tableau，你深刻理解聚合至关重要。当你添加任何数据时，Tableau会迅速将`数据`面板中的数据分类为`维度`和`度量`。当一个`度量`进入视图时，Tableau会对其进行聚合（通常使用`SUM`聚合）。
- en: 'This can be demonstrated using the `Orders` data from *Sample-Superstore.xlsx*,
    which can be found at `Documents\My Tableau Repository\Datasources\` or downloaded
    from this book''s GitHub repository at the following link: [https://packt.link/T9PeZ](https://packt.link/T9PeZ).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过使用来自*Sample-Superstore.xlsx*的`Orders`数据来演示，该文件可以在`Documents\My Tableau
    Repository\Datasources\`中找到，或者可以从本书的GitHub仓库下载，链接如下：[https://packt.link/T9PeZ](https://packt.link/T9PeZ)。
- en: 'Once you have access to the data, drag the `Profit` field from the `Data` pane
    into the `Rows` shelf. Notice that the properties of the field have changed to
    `SUM(Profit)` and a vertical bar is generated. Refer to the following figure:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你获得了数据访问权限，将`Profit`字段从`数据`面板拖动到`行`架上。注意，该字段的属性已更改为`SUM(Profit)`，并生成一个垂直条。参见图下：
- en: '![Figure 7.1: A screenshot showing SUM(Profit)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.1：显示SUM(Profit)的屏幕截图](img/B16342_07_01.jpg)'
- en: '](img/B16342_07_01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_01.jpg](img/B16342_07_01.jpg)'
- en: 'Figure 7.1: A screenshot showing SUM(Profit)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1：显示SUM(Profit)的屏幕截图
- en: 'Look at the status bar at the bottom of the sheet. Notice there is only `1
    mark` and the `SUM(Profit)` is `286,397`. This is the *total aggregated profit
    of the data*:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 查看工作表底部的状态栏。注意只有`1个标记`，而`SUM(利润)`为`286,397`。这是数据的*总聚合利润*：
- en: '![Figure 7.2: A screenshot showing SUM(Profit) in the status bar'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.2：显示状态栏中SUM(利润)的截图'
- en: '](img/B16342_07_02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_02.jpg)'
- en: 'Figure 7.2: A screenshot showing SUM(Profit) in the status bar'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.2：显示状态栏中SUM(利润)的截图
- en: 'Now, observe what happens when you disaggregate it. In order to disaggregate
    the `Measure`, uncheck the `Aggregate Measures` option, which is available in
    the *toolbar* under `Analysis`:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，观察当你分解它时会发生什么。为了分解`度量`，取消选中`聚合度量`选项，该选项位于`分析`下的`工具栏`中：
- en: '![Figure 7.3: A screenshot showing the Aggregate Measures option'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.3：显示聚合度量选项的截图'
- en: '](img/B16342_07_03.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_03.jpg)'
- en: 'Figure 7.3: A screenshot showing the Aggregate Measures option'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3：显示聚合度量选项的截图
- en: 'The `SUM(Profit)` field, which was in the `Rows` shelf, has now changed to
    show just `Profit`. Further, the bar chart is now broken into multiple bubbles;
    some bubbles are on the negative axis, and the status bar now shows `9994 marks`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 原来位于`行`架中的`SUM(利润)`字段现在已更改，只显示`利润`。此外，条形图现在被分解成多个气泡；一些气泡位于负轴上，状态栏现在显示`9994个标记`：
- en: '![Figure 7.4: A screenshot showing disaggregated profit'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4：显示分解利润的截图'
- en: '](img/B16342_07_04.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_04.jpg)'
- en: 'Figure 7.4: A screenshot showing disaggregated profit'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4：显示分解利润的截图
- en: 'When you uncheck the `Aggregate Measures` option, the `Profit` value becomes
    non-aggregated, which in turn breaks the aggregated profit bar showing the `Sum
    of Profit` in bubbles that represent *every transactional profit value in the
    data*. At any given point, you can right-click on a bubble to view the data and
    see the full details of a transaction:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当你取消选中`聚合度量`选项时，`利润`值变为非聚合，这反过来又打破了显示在代表数据中每个交易利润值的气泡中的`利润总和`的聚合利润条。在任何给定的时间点，你都可以右键单击一个气泡来查看数据并看到交易的完整细节：
- en: '![Figure 7.5: A screenshot showing the view data option'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.5：显示查看数据选项的截图'
- en: '](img/B16342_07_05.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_05.jpg)'
- en: 'Figure 7.5: A screenshot showing the view data option'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5：显示查看数据选项的截图
- en: 'By default, the `Aggregate Measures` option is on, and all `Measures` will
    be *aggregated by default* (unless you choose to disaggregate them as explained
    above). Further, the default aggregation of `Measures` is `SUM` and this can be
    changed by right-clicking on a `Measure` in the `Data` pane and changing `Aggregation`
    under `Default Properties` from `Sum` to `Average` or `Minimum` to `Maximum, etc.`:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`聚合度量`选项是开启的，所有`度量`都将默认聚合（除非你选择像上面解释的那样分解它们）。此外，`度量`的默认聚合是`求和`，这可以通过在`数据`面板中右键单击一个`度量`并从`默认属性`下的`求和`更改为`平均值`或`最小值`到`最大值`等来更改：
- en: '![Figure 7.6: A screenshot showing how to change aggregation'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.6：显示如何更改聚合的截图'
- en: '](img/B16342_07_06.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_06.jpg)'
- en: 'Figure 7.6: A screenshot showing how to change aggregation'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6：显示如何更改聚合的截图
- en: From the previous example, you can conclude that when you see `SUM(Profit)`
    in the view, it means that Tableau is aggregating all transactional values. When
    you see `Profit` only, it means that Tableau is taking notice of the transactional
    values without aggregating them. This particular distinction is important, especially
    when creating calculated fields. You will further explore this point when diving
    deeper into creating and using calculations.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的例子中，你可以得出结论，当你看到视图中`SUM(利润)`时，这意味着Tableau正在聚合所有交易值。当你只看到`利润`时，这意味着Tableau正在关注交易值而没有对它们进行聚合。这种特定的区别很重要，尤其是在创建计算字段时。你将在深入研究创建和使用计算时进一步探讨这一点。
- en: 'In the previous example, you looked at aggregating and disaggregating `Measures`.
    However, when dealing with `Dimensions`, which includes all categorical data,
    there are additional considerations. Specifically, you should be asking yourself:
    *Which/Who?* and *How many?*.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，你看了如何聚合和分解`度量`。然而，当处理包括所有分类数据的`维度`时，还有额外的考虑。具体来说，你应该问自己：*哪个/谁？* 和 *有多少个？*。
- en: 'Taking the `Sample-Superstore.xlsx` file as an example, when analyzing `Sub-Category`,
    you might ask the following questions: *Which sub-categories are profitable?*
    or *How many sub-categories are profitable?* The first question is easy to answer
    as you are only concerned with data members from the `Sub-Category` field that
    are in profit. When you drag a dimension into the view, you will get the list
    of all unique data members of that field by default. So, dragging the `Sub-Category`
    field into the `Rows` shelf will result in the following view:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以`Sample-Superstore.xlsx`文件为例，当分析`子类别`时，您可能会提出以下问题：*哪些子类别是盈利的？* 或 *有多少子类别是盈利的？*
    第一个问题很容易回答，因为您只关心`子类别`字段中的盈利数据成员。当您将维度拖入视图时，您将默认获得该字段所有唯一数据成员的列表。因此，将`子类别`字段拖入`行`面板将导致以下视图：
- en: '![Figure 7.7: A screenshot showing the unique list of data members of a dimension'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.7：显示某一维度的唯一数据成员列表的屏幕截图'
- en: '](img/B16342_07_07.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_07.jpg)'
- en: 'Figure 7.7: A screenshot showing the unique list of data members of a dimension'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7：显示某一维度的唯一数据成员列表的屏幕截图
- en: 'However, for the second question, you need to find the number of sub-categories
    that have positive profit. This means finding the number of data members for that
    dimension. This is achieved by clicking on the dropdown of the `Sub-Category`
    field, and selecting the `Count` or `Count(Distinct)` option, available under
    `Measure`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于第二个问题，您需要找到具有正利润的子类别数量。这意味着找到该维度的数据成员数量。这可以通过点击`子类别`字段的下拉菜单，并选择在`度量`下可用的“计数”或“计数（不同）”选项来实现：
- en: '![Figure 7.8: A screenshot showing the Count and Count (Distinct)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.8：显示计数和计数（不同）的屏幕截图'
- en: options for a dimension in the view
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 视图中某一维度的选项
- en: '](img/B16342_07_08.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_08.jpg)'
- en: 'Figure 7.8: A screenshot showing the Count and Count (Distinct) options for
    a dimension in the view'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8：显示视图中某一维度计数和计数（不同）选项的屏幕截图
- en: 'When selecting the `Count` or the `Count(Distinct)` option, notice that the
    list of sub-categories changes into a bar showing that there are a total of 17
    sub-categories in the data. This method will only make the count of sub-categories
    available in the worksheet where they were created. However, if you need to show
    the same information for other visualizations across your workbook, it makes sense
    to have the count in your `Data` pane, so you can drag it into the view as and
    when required. This can be achieved in two ways:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择“计数”或“计数（不同）”选项时，请注意，子类别列表将变为一个条形图，显示数据中总共有17个子类别。此方法将仅在创建子类别的电子表格中提供子类别的计数。然而，如果您需要在工作簿中的其他可视化中显示相同的信息，那么在您的“数据”面板中显示计数是有意义的，这样您就可以根据需要将其拖入视图。这可以通过两种方式实现：
- en: 'The first method is to change the `Sub-Category` dimension into a `Measure`,
    which will change the original `Dimensions` field from showing a list of data
    members into a `Measure` showing a distinct count of sub-categories:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一种方法是将`子类别`维度转换为`度量`，这将把原始的`维度`字段从显示数据成员列表转换为显示子类别唯一计数的`度量`：
- en: '![Figure 7.9: A screenshot showing aggregation of a dimension by converting
    it into a measure'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.9：显示通过将其转换为度量来聚合维度的屏幕截图'
- en: '](img/B16342_07_09.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_09.jpg)'
- en: 'Figure 7.9: A screenshot showing aggregation of a dimension by converting it
    into a measure'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.9：显示通过将其转换为度量来聚合维度的屏幕截图
- en: The second way is to create a calculated field on the `Sub-Category` dimension.
    This will not only maintain the original dimension, but we will also have another
    field that can be used to get the desired output. You will learn more about creating
    a calculated field in the topics to come.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二种方式是在`子类别`维度上创建一个计算字段。这不仅将保持原始维度，我们还将拥有另一个可以用来获取所需输出的字段。您将在接下来的主题中了解更多关于创建计算字段的信息。
- en: Creating and Using Ad hoc / Edit in Shelf Calculations
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和使用临时/在架计算
- en: '`Rows`, `Columns`, and `Measure Values` shelves, as well as in the `Marks cards`.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: “行”、“列”和“度量值”面板，以及“标记卡”。
- en: 'Simply double-click on the existing field in your shelf of choice, or, alternatively
    you can use the `Edit in Shelf` option in the drop-down list of that field, as
    shown in the following figure:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您只需双击您选择的架子上现有的字段，或者，作为替代，您可以使用该字段的下拉列表中的“在架上编辑”选项，如图下所示：
- en: '![Figure 7.10: A screenshot showing how to create an ad hoc calculation'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.10：显示如何创建临时计算的屏幕截图'
- en: '](img/B16342_07_10.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_10.jpg)'
- en: 'Figure 7.10: A screenshot showing how to create an ad hoc calculation'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.10：显示如何创建临时计算的截图](img/B16342_07_11.jpg)'
- en: These ad hoc calculations are useful when creating quick, on-the-fly calculations
    that you may or may not want to save and reuse. You will explore this in the exercise below.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些临时的计算在创建快速、即兴的计算时很有用，你可能希望保存并重复使用，也可能不希望。你将在下面的练习中探索这一点。
- en: 'Exercise 7.01: Creating an Ad Hoc Calculation to Highlight Loss-Making Sub-Categories'
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习7.01：创建一个临时的计算来突出亏损的子类别
- en: The aim of this exercise is to find out which sub-categories have negative profit
    and which ones have positive profit. Those with negative profit will be your loss-making
    sub-categories and will be color-coded orange. You will use the `Orders` data
    from `Sample-Superstore.xlsx` for this exercise.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 本练习的目的是找出哪些子类别有负利润，哪些子类别有正利润。那些有负利润的将是你亏损的子类别，并将用橙色标记。你将使用`Sample-Superstore.xlsx`中的`Orders`数据来完成这个练习。
- en: 'Perform the following steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Start by creating a bar chart showing `SUM(Sales)` by `Sub-Category` with `SUM(Profit)`
    in the `Color` shelf, as shown in the following screenshot.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建一个条形图，显示按`Sub-Category`的`SUM(Sales)`，并在`Color`面板中显示`SUM(Profit)`，如图所示。
- en: '![Figure 7.11: A screenshot showing a bar chart of Sales by Sub-Category with
    profit in color'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.11：显示按子类别划分的销售条形图和颜色的截图](img/B16342_07_11.jpg)'
- en: '](img/B16342_07_11.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_11.jpg)'
- en: 'Figure 7.11: A screenshot showing a bar chart of Sales by Sub-Category with
    profit in color'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.11：显示按子类别划分的销售条形图和颜色的截图](img/B16342_07_11.jpg)'
- en: The bars have a color palette of orange and blue, with shades of *orange indicating
    negative profit*, and shades of *blue indicating positive profit*. The shades
    indicate the intensity of `Profit`. However, the task at hand is to highlight
    the bars that are loss-making, which means those with a profit less than zero.
    The intensity of profit is irrelevant for this task.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图的颜色调色板为橙色和蓝色，其中橙色的阴影表示负利润，蓝色的阴影表示正利润。阴影表示利润的强度。然而，当前的任务是突出亏损的条形图，这意味着那些利润小于零的条形图。对于这个任务，利润的强度是不相关的。
- en: 'To address this, either double-click or use the `Edit in Shelf` option in the
    dropdown of the `SUM(Profit)` field in the `Color` shelf and type the following formula:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，要么双击，要么在`Color`面板中`SUM(Profit)`字段的下拉菜单中使用`Edit in Shelf`选项，并输入以下公式：
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Hit *Enter* to see the new ad hoc calculation. It now shows two colors instead
    of the previously seen diverging colors. In this case, the orange bars indicate
    subcategories are loss-making and the blue bars indicate subcategories are profitable.
    Refer to the following screenshots:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Enter*键查看新的临时计算。现在它显示了两种颜色，而不是之前看到的差异颜色。在这种情况下，橙色条形图表示亏损的子类别，蓝色条形图表示盈利的子类别。请参考以下截图：
- en: '![Figure 7.12: Screenshots with an ad hoc calculation in the color shelf'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.12：在颜色面板中包含临时计算的截图](img/B16342_07_12.jpg)'
- en: '](img/B16342_07_12.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_12.jpg)'
- en: 'Figure 7.12: Screenshots with an ad hoc calculation in the color shelf'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.12：包含临时计算的截图](img/B16342_07_12.jpg)'
- en: Further, as mentioned previously, this ad hoc calculation is an on-the-fly calculation
    that may be used only in this specific visualization, in which case, there isn't
    any need to save this calculation.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如前所述，这种临时的计算是一种即兴计算，可能只能用于特定的可视化中，在这种情况下，没有必要保存这个计算。
- en: 'So that you can reuse this in other visualizations, save the calculation in
    the `Data` pane by simply dragging and dropping, as shown in the following screenshots:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在其他可视化中重复使用这个计算，只需通过拖放将其保存在`Data`面板中，如图所示。
- en: '![Figure 7.13: Screenshots showing how to save an ad hoc calculation'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.13：显示如何保存临时计算的截图](img/B16342_07_13.jpg)'
- en: '](img/B16342_07_13.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_13.jpg)'
- en: 'Figure 7.13: Screenshots showing how to save an ad hoc calculation'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.13：显示如何保存临时计算的截图](img/B16342_07_13.jpg)'
- en: Creating and Using Different Types of Calculations
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和使用不同类型的计算
- en: 'Tableau is a simple yet versatile tool, and the ability to create calculations
    gives users the flexibility to perform powerful analysis, which can help with
    decision-making. Most of the time, creating calculations in Tableau is a fun experience,
    but sometimes it can be a little frustrating as well, especially if you are coming
    from a different platform to Tableau and are trying to replicate some functionality.
    The way these tools are structured and designed is different and trying to replicate
    the functionality from one tool in another can make the experience frustrating.
    The best way to avoid frustration while creating calculations in Tableau is to
    start small and get acquainted with the functions that Tableau has to offer. While
    writing a calculation in Tableau is easy, it is recommended that, if possible,
    you should try to use the built-in native features first, instead of creating
    a new calculated field. Some examples of these features are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau 是一个简单而通用的工具，创建计算的能力使用户能够执行强大的分析，这有助于决策。大多数时候，在 Tableau 中创建计算是一个有趣的过程，但有时也可能有点令人沮丧，尤其是如果你来自不同的平台并试图复制某些功能。这些工具的结构和设计不同，试图在另一个工具中复制功能可能会让人感到沮丧。在
    Tableau 中创建计算的最佳方式是从小处着手，熟悉 Tableau 提供的函数。虽然编写 Tableau 中的计算很简单，但如果可能的话，建议首先尝试使用内置的原生功能，而不是创建一个新的计算字段。以下是一些这些功能的例子：
- en: The `Split` or `Custom Split` function, available under the `Transform` option
    when right-clicking any `String Dimension` in the `Data` pane. This is used to
    split the string into smaller sub-strings. For example, splitting a customer name
    into, for example, the first name and last name.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“数据”面板中右键单击任何“字符串维度”时，可用的“拆分”或“自定义拆分”功能。这个功能用于将字符串拆分为更小的子字符串。例如，将客户姓名拆分为，例如，名和姓。
- en: The `Group` function, which is available under the `Create` option when right-clicking
    any dimension in the `Data` pane. This is used to group the data members of that
    dimension into higher categories, for example, grouping the data members of the
    geographic state field into, for example, regions.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“数据”面板中右键单击任何维度时，可用的“分组”功能。这个功能用于将那个维度的数据成员分组到更高的类别中，例如，将地理州字段的数据成员分组到，例如，地区。
- en: The `Custom date` function, which is available under the `Create` option when
    right-clicking on a `Date Dimension` in the `Data` pane. This is used to truncate
    dates into different granularities such as month, month-year, etc.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“数据”面板中右键单击“日期维度”时，可用的“自定义日期”功能。这个功能用于将日期截断到不同的粒度，例如月份、月份-年份等。
- en: The `Bins` function, which is available under the `Create` option when right-clicking
    on a `Measure` in the `Data` pane. This is used to group `Measure` values into
    different range buckets, for example, age bins that range from, for example <10
    years, 11-20 years, 21-30 years, etc.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“数据”面板中右键单击“度量”时，可用的“分组”功能。这个功能用于将度量值分组到不同的范围桶中，例如，年龄分组从，例如 <10 岁，11-20 岁，21-30
    岁，等等。
- en: The `Combined Field` function, available under the `Create` option when selecting
    more than 1 `String Dimension` in the `Data` pane, and then right-clicking any
    selected string dimension. This is useful when combining multiple string dimensions
    into one field.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“数据”面板中选择多个“字符串维度”，然后右键单击任何选定的字符串维度时，可用的“组合字段”功能。当需要将多个字符串维度组合到一个字段中时，这个功能很有用。
- en: The `Aliases` function, which is available upon right-clicking any dimension
    in the `Data` pane. This is useful when renaming the members of any dimension.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“数据”面板中右键单击任何维度时，可用的“别名”功能。这个功能在重命名任何维度的成员时很有用。
- en: A point to note is that all objectives mentioned here can be achieved by creating
    a calculated field from scratch, but since these native functions are readily
    and easily available, it is best to avoid the hassle and make use of them. Over
    the course of this chapter and various other chapters in this book, you will explore
    these functions in a little more detail.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是，这里提到的所有目标都可以通过从头创建一个计算字段来实现，但由于这些原生函数易于获取和使用，最好避免麻烦并利用它们。在本章以及本书中的其他章节中，你将更详细地探索这些函数。
- en: To understand the process of creating calculations, you will first create a
    basic calculation to find the distinct count of your order IDs. You can do this
    in many ways. You could change the `Order ID` dimension into a `Measure` or click
    the dropdown of the `Order ID` field that is shown in your view, and then click
    the `Measure` | `Count (Distinct)` option. Alternatively, you could even create
    an ad hoc calculation.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解创建计算的过程，您首先将创建一个基本计算来查找订单ID的唯一计数。您可以通过多种方式做到这一点。您可以将`订单ID`维度更改为`度量`，或者点击您视图中显示的`订单ID`字段的下拉菜单，然后点击`度量`|`计数（唯一）`选项。或者，您甚至可以创建一个临时计算。
- en: 'In an earlier topic, you saw how to save an ad hoc calculation in the `Data`
    pane. However, inexplicably, when attempting this after performing basic aggregations
    such as sum, average, or count, you''ll find that the ad hoc calculation does
    not save. From testing, the drag-drop method appears to fix this issue. Try it
    with the calculation below:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的主题中，您看到了如何在“数据”面板中保存一个临时计算。然而，令人费解的是，在执行基本聚合操作，如求和、平均值或计数之后尝试这样做时，您会发现临时计算无法保存。从测试来看，拖放方法似乎可以解决这个问题。尝试使用下面的计算进行测试：
- en: '[PRE1]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You will now be creating a calculation in Tableau from scratch. To do this,
    you will continue with the objective of getting the distinct count of order IDs.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在将从头开始在Tableau中创建一个计算。为此，您将继续以获取订单ID的唯一计数为目标。
- en: 'Right-click on the `Order ID` dimension in the `Data` pane and select the `Create`
    | `Calculated Field` option. This will open a new type in the box, as shown in
    the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在“数据”面板中右键单击“订单ID”维度，并选择“创建”|“计算字段”选项。这将打开一个新类型在框中，如下面的截图所示：
- en: '![Figure 7.14: A screenshot showing components of a calculation box'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.14：显示计算框组件的截图'
- en: '](img/B16342_07_14.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_14.jpg](img/B16342_07_14.jpg)'
- en: 'Figure 7.14: A screenshot showing components of a calculation box'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.14：显示计算框组件的截图
- en: '*Figure 7.14* shows the components of a calculation box. These are as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7.14*显示了计算框的组件。这些如下：'
- en: '**1 – Calculation name**: This is where you can define the name of a calculation.
    It is always recommended to give meaningful names to calculated fields.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1 – 计算名称**：这是您可以定义计算名称的地方。始终建议为计算字段赋予有意义的名称。'
- en: '`Number`, `String`, `Date`, `Type Conversion`, `Aggregate`, `Logical`, etc.
    When clicking any of these functions, Tableau presents the syntax of that function,
    an explanation of what the function does, and an example. Refer to the following
    screenshot:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`数字`、`字符串`、`日期`、`类型转换`、`聚合`、`逻辑`等。当点击这些函数中的任何一个时，Tableau会显示该函数的语法、该函数的作用以及一个示例。请参考以下截图：'
- en: '![Figure 7.15: A screenshot showing details of the selected function'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.15：显示所选函数详细信息的截图'
- en: '](img/B16342_07_15.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_15.jpg](img/B16342_07_15.jpg)'
- en: 'Figure 7.15: A screenshot showing details of the selected function'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.15：显示所选函数详细信息的截图
- en: '**3 – Calculation editor**: This is where you will type your formula.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3 – 计算编辑器**：这是您将输入公式的位置。'
- en: '`The calculation contains errors` in red font, and the calculation editor box
    will display a red squiggly line near the text with the error.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算中存在错误`以红色字体显示，计算编辑器框将在有错误的文本附近显示一条红色波浪线。
- en: Ever since you right-clicked on the `Order ID` field to create a calculation,
    Tableau has assumed you will be creating a calculation for that field, and because
    of that, it has already fetched the field into the calculation editor.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 自从您右键单击`订单ID`字段以创建计算以来，Tableau已经假设您将为该字段创建计算，因此它已经将字段提取到计算编辑器中。
- en: 'Start by typing the word `CountD` before `Order ID.` As you type, Tableau starts
    recommending functions, as well as data fields that share characters with what
    you type. Now, name the calculation ''`Count of Orders''`. Your calculation box
    should look like the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在“订单ID”之前输入单词`CountD`。当您输入时，Tableau开始推荐函数以及与您输入的字符共享字符的数据字段。现在，将计算命名为"`订单计数'`"。您的计算框应如下截图所示：
- en: '![Figure 7.16: A screenshot showing the formula for calculating the distinct
    count of Order ID'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.16：显示计算订单ID唯一计数的公式的截图'
- en: '](img/B16342_07_16.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_16.jpg](img/B16342_07_16.jpg)'
- en: 'Figure 7.16: A screenshot showing the formula for calculating the distinct
    count of Order ID'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.16：显示计算订单ID唯一计数的公式的截图
- en: 'Once, you have valid calculation, you can click `OK` and proceed to use it.
    Clicking `OK` will save your calculation in the `Data` pane, as shown in the following
    screenshot:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了有效的计算，你可以点击“确定”并继续使用它。点击“确定”将在“数据”面板中保存你的计算，如下面的截图所示：
- en: '![Figure 7.17: A screenshot showing the newly created calculated field'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.17：显示新创建的计算字段的截图]'
- en: '](img/B16342_07_17.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_17.jpg](img/B16342_07_17.jpg)'
- en: 'Figure 7.17: A screenshot showing the newly created calculated field'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.17：显示新创建的计算字段的截图]'
- en: 'Now, that you have your calculated field available in the `Data` pane, you
    can start using it across the entire workbook. There are, however, a few important
    points to note:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经在“数据”面板中有了可用的计算字段，你可以在整个工作簿中使用它。然而，还有一些重要的事项需要注意：
- en: 'In the previous example, you right-clicked on `Order ID` and selected the `Create
    | Calculated Field` option, which opened the calculation editor box. This can
    also be made available by selecting the `Analysis | Create Calculated Field...`
    option in the toolbar, or by clicking on the dropdown in the `Data` pane and selecting
    `Create Calculated Field...`:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在前面的例子中，你右键单击“订单ID”，并选择“创建 | 计算字段”选项，这打开了计算编辑器框。这也可以通过在工具栏中选择“分析 | 创建计算字段...”选项或通过在“数据”面板中单击下拉菜单并选择“创建计算字段...”来实现：
- en: '![Figure 7.18: A screenshot showing other ways to create a calculated field'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.18：显示创建计算字段的其它方法的截图]'
- en: '](img/B16342_07_18.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_18.jpg](img/B16342_07_18.jpg)'
- en: 'Figure 7.18: A screenshot showing other ways to create a calculated field'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.18：显示创建计算字段的其它方法的截图]'
- en: Any field that is computed or calculated in Tableau will have `=` as a prefix,
    which indicates that the field was created in Tableau, and does not derive from
    the data itself. The = sign will be followed by either `Abc` or `#` (or something
    similar), which indicates the data type of that field. So, for example, `=Abc`
    is indicative of a computed field with a string output.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Tableau中计算或计算的任何字段都将有`=`作为前缀，这表示该字段是在Tableau中创建的，而不是从数据本身派生的。等号后面将跟随`Abc`或`#`（或类似的内容），这表示该字段的数据类型。例如，`=Abc`表示具有字符串输出的计算字段。
- en: 'To add comments to a calculation, you need to make use of two forward slashes,
    that is, `//. Tableau will ignore anything that follows the //`. Refer to the
    following screenshot:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要对计算添加注释，你需要使用两个连续的前斜杠，即`//`。Tableau将忽略`//`之后的所有内容。请参考以下截图：
- en: '![Figure 7.19: A screenshot showing how to add comments in a calculated field'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.19：显示如何在计算字段中添加注释的截图]'
- en: '](img/B16342_07_19.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_19.jpg](img/B16342_07_19.jpg)'
- en: 'Figure 7.19: A screenshot showing how to add comments in a calculated field'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.19：显示如何在计算字段中添加注释的截图]'
- en: 'The functions (blue text in *Figure 7.19* in Tableau are not case-sensitive,
    but data fields (orange text in *Figure 7.19*) are, hence, you need to be extra
    careful about the case, as well as the spelling of the data field. If there are
    any issues, the syntax validator will give an error, and you will not be able
    to use the calculated field for further analysis. To overcome this, drag and drop
    the desired field from the `Data` pane into the calculation editor box instead
    of typing the text, as shown in the following screenshot:'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数（*图7.19*中的表格蓝文字符）在Tableau中不区分大小写，但数据字段（*图7.19*中的橙色文字）是区分大小写的，因此，你需要特别注意大小写以及数据字段的拼写。如果有任何问题，语法验证器将给出错误，你将无法使用计算字段进行进一步分析。为了克服这个问题，你可以将所需的字段从“数据”面板拖放到计算编辑器框中，而不是键入文本，如下面的截图所示：
- en: '![Figure 7.20: A screenshot showing dragging and dropping fields into the calculation
    editor'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.20：显示将字段拖放到计算编辑器的截图]'
- en: '](img/B16342_07_20.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_20.jpg](img/B16342_07_20.jpg)'
- en: 'Figure 7.20: A screenshot showing dragging and dropping fields into the calculation
    editor'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.20：显示将字段拖放到计算编辑器的截图]'
- en: Tableau supports all standard operators, such as multiplication (*), division
    (/), modulo (%), addition (+), subtraction (-), as well as all the comparisons,
    such as equal to (== or =), greater than (>), greater than or equal to (>=), less
    than (<), less than or equal to (<=), and not equal to (!= or <>). These operators
    must be typed and are not part of the list of functions in the calculation box.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tableau支持所有标准运算符，例如乘法（*）、除法（/）、取模（%）、加法（+）、减法（-），以及所有比较运算符，例如等于（==或=）、大于（>）、大于等于（>=）、小于（<）、小于等于（<=）和不等（!=或<>）。这些运算符必须键入，并且不是计算框中函数列表的一部分。
- en: Since Tableau is a read-only tool, the calculated fields you are computing will
    not be written back to the data, thus keeping the integrity of your data intact.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于Tableau是一个只读工具，你正在计算的计算字段不会被写回数据，从而保持数据的完整性。
- en: You can create a calculated field and use it in other calculated fields as well.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以创建一个计算字段，并在其他计算字段中使用它。
- en: You will now work through examples of how some of these calculations can be
    created and used.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你将学习如何创建和使用这些计算的一些示例。
- en: 'Creating and Using Different Types of Calculations: Numeric Calculations'
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和使用不同类型的计算：数值计算
- en: 'Numeric calculations are used when performing mathematical/arithmetic functions
    on numeric data in order to return a numeric output. The `Number` functions supported
    by Tableau at this point in time (that is, in version 2020.1) are as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 数值计算是在对数值数据执行数学/算术函数时使用的，以便返回数值输出。Tableau在当前时间点（即2020.1版本）支持的`Number`函数如下：
- en: '`ABS` function, which is used to return the absolute value of the number; the
    `ROUND` function, which is used to round the number to the specified number of
    decimal places; `SQRT`, which is used to return the square root of a number; and
    the `ZN` function, which returns zero if there are null values, or returns the
    value itself otherwise.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ABS`函数，用于返回数字的绝对值；`ROUND`函数，用于将数字四舍五入到指定的十进制位数；`SQRT`，用于返回数字的平方根；以及`ZN`函数，如果存在空值则返回零，否则返回其本身的值。'
- en: '`ASIN`, `ACOS`, `ATAN`, `SIN`, `COS`, `TAN`, and others.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ASIN`、`ACOS`、`ATAN`、`SIN`、`COS`、`TAN`以及其他函数。'
- en: '`DEGREES` and `RADIANS`.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DEGREES`和`RADIANS`。'
- en: '`HEXBINX` and `HEXBINY`.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HEXBINX`和`HEXBINY`。'
- en: '`LN` and `LOG`.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LN`和`LOG`。'
- en: '`EXP` and `POWER`, and others.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EXP`和`POWER`以及其他函数。'
- en: As mentioned earlier, when selecting any of these functions, you will see the
    syntax of that function, an explanation of the purpose of that function, along
    with an example. Further, with these numeric functions, as well as the arithmetic
    operators above, you can create some immensely powerful and useful calculations.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，在选择这些函数中的任何一个时，你将看到该函数的语法、该函数目的的解释以及一个示例。此外，使用这些数值函数以及上面的算术运算符，你可以创建一些非常强大和有用的计算。
- en: In the previous topic, you created a new calculated field called `Count of Orders`,
    which gave the distinct count of your order IDs. You will now use this computed
    field to create another calculated field to find the average order value for your
    sub-categories.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的主题中，你创建了一个名为`订单数量`的新计算字段，它给出了你订单ID的唯一计数。现在，你将使用这个计算字段来创建另一个计算字段，以找到你子类别的平均订单价值。
- en: 'Exercise 7.02: Creating a Numeric Calculation'
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习7.02：创建数值计算
- en: The objective of this exercise is to create a numeric calculation to find the
    average order value of each sub-category. You will continue with the `Orders data`
    from the *Sample-Superstore.xlsx* file and, using the `Sales` field and the previously
    created `Count of Orders` field, create a new calculated field called `Average
    Order Value (AOV)` for each `Sub-Category` and display it in a bar chart.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 本练习的目标是创建一个数值计算，以找到每个子类别的平均订单价值。你将继续使用来自*Sample-Superstore.xlsx*文件的`订单数据`，并使用`销售额`字段和之前创建的`订单数量`字段，为每个`子类别`创建一个名为`平均订单价值（AOV）`的新计算字段，并在条形图中显示它。
- en: 'First, drag your `Sub-Category` field and drop it in the `Rows` shelf. Next,
    drag the Sales and the `Count of Orders` field into the `Columns` shelf. Now enable
    the labels for your bar charts by clicking on `Show Marks Label` in the toolbar.
    See the following screenshot:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，将你的`子类别`字段拖动到`行`架中。接下来，将销售额和`订单数量`字段拖动到`列`架中。现在，通过在工具栏中点击`显示标记标签`来启用你的条形图的标签。请参见以下截图：
- en: '![Figure 7.21: A screenshot showing a bar chart with Sales and'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.21：显示包含销售额和订单数量的子类别条形图的截图]'
- en: Count of Orders across sub-categories
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 子类别间的订单数量
- en: '](img/B16342_07_21.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_21.jpg]'
- en: 'Figure 7.21: A screenshot showing a bar chart with Sales and Count of Orders
    across sub-categories'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.21：显示包含销售额和订单数量的子类别条形图的截图
- en: 'Create a calculated field called `Average Order Value (AOV)` with the following
    formula:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`平均订单价值（AOV）`的计算字段，其公式如下：
- en: '[PRE2]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You should see the following on your screen:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在屏幕上看到以下内容：
- en: '![Figure 7.22: A screenshot showing the formula for'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.22：显示平均订单价值（AOV）计算公式的截图]'
- en: the Average Order Value (AOV) calculation
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 平均订单价值（AOV）计算
- en: '](img/B16342_07_22.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_22.jpg]'
- en: 'Figure 7.22: A screenshot showing the formula for the Average Order Value (AOV)
    calculation'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.22：显示平均订单价值 (AOV) 计算公式的屏幕截图
- en: 'Drag and drop the `Average Order Value (AOV)` next to the `Count of Orders`
    field in the `Columns` shelf. Refer to the following screenshot:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `平均订单价值 (AOV)` 拖放到 `列` 面板中的 `订单数量` 字段旁边。参考以下屏幕截图：
- en: '![Figure 7.23: A screenshot showing the bar chart with'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.23：显示平均订单价值 (AOV) 计算的柱状图的屏幕截图]'
- en: the Average Order Value (AOV) calculation
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 平均订单价值 (AOV) 计算
- en: '](img/B16342_07_23.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_23.jpg]'
- en: 'Figure 7.23: A screenshot showing the bar chart with the Average Order Value
    (AOV) calculation'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.23：显示平均订单价值 (AOV) 计算的柱状图的屏幕截图
- en: As you can see in *Figure 7.23*, the `Copiers` sub-category has the `Machines`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在 *图 7.23* 中所看到的，`复印机` 子类别包含 `机器`。
- en: Note that the prefix for `Average Order Value (AOV)` is `AGG`, which stands
    for `SUM()` for sales and the count of orders field is using the `COUNTD()` function).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`平均订单价值 (AOV)` 的前缀是 `AGG`，它代表 `SUM()` 用于销售额，而订单数量的字段使用的是 `COUNTD()` 函数。
- en: This exercise shows an example of creating and using a numeric calculation.
    You have created a new calculation called `Average Order Value (AOV)` using the
    `Sales` field and the `Count of Orders` field. Since this `Average Order Value
    (AOV)` field has a numeric output, the calculation is called a numeric calculation.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 本练习展示了创建和使用数值计算的一个示例。你使用 `Sales` 字段和 `订单数量` 字段创建了一个名为 `平均订单价值 (AOV)` 的新计算。由于这个
    `平均订单价值 (AOV)` 字段具有数值输出，因此该计算被称为数值计算。
- en: 'Creating and Using Different Types of Calculations: Logic Statements'
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和使用不同类型的计算：逻辑语句
- en: 'Logic statements are typically used for criteria-based or condition-based evaluation.
    Some of the logical functions available in Tableau are as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑语句通常用于基于标准或条件评估。Tableau 中可用的某些逻辑函数如下：
- en: Operators such as `AND`, `OR`, and `NOT`.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如 `AND`、`OR` 和 `NOT` 等运算符。
- en: Functions such as `IF`, `ELSE`, `ELSEIF`, `CASE`, `IIF`, `IFNULL`, `ISNULL`,
    `ISDATE`, etc.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如 `IF`、`ELSE`、`ELSEIF`、`CASE`、`IIF`、`IFNULL`、`ISNULL`、`ISDATE` 等函数。
- en: '`IF…ELSE`, `IF…ELSEIF…ELSE`, and `CASE` are the most commonly used logic functions
    and, typically, when using these logic functions, the `THEN` function is used
    to specify the value that needs to be displayed when the expression is true.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`IF…ELSE`、`IF…ELSEIF…ELSE` 和 `CASE` 是最常用的逻辑函数，通常，当使用这些逻辑函数时，使用 `THEN` 函数来指定当表达式为真时需要显示的值。'
- en: An important point to remember here is that when using the `IF` statement or
    a `CASE` statement for logical evaluation, you need to terminate your logical
    statement with the `END` function.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里需要记住的一个重要点是，当使用 `IF` 语句或 `CASE` 语句进行逻辑评估时，你需要使用 `END` 函数来结束你的逻辑语句。
- en: You have already seen an example of a logic statement in the `SUM(Profit)` was
    greater than or less than zero. The output of this calculation was a Boolean output,
    with the outcome being either `True` or `False`. Boolean calculations are a quick
    and easy type of logic statement. They get executed quickly and perform well compared
    to the other types of logic statement.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到了一个逻辑语句的示例，即 `SUM(Profit)` 大于或小于零。这个计算的输出是一个布尔输出，结果为 `True` 或 `False`。布尔计算是一种快速且简单的逻辑语句。它们执行速度快，与其他类型的逻辑语句相比性能良好。
- en: Although Boolean calculations have many advantages, they could confuse an end
    user if they are unaware of what `True` and `False` stand for. The meaning of
    Booleans depends on the criteria in your calculations. In the earlier example,
    the outcome `True` indicates either positive or negative profit, depending on
    what is specified in your calculation. If the end user is unfamiliar with these
    criteria, the Boolean outcome will be unhelpful.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管布尔计算有许多优点，但如果最终用户不了解 `True` 和 `False` 的含义，它们可能会造成混淆。布尔的意义取决于你计算中的标准。在早期示例中，结果
    `True` 表示正利润或负利润，具体取决于你计算中指定的内容。如果最终用户不熟悉这些标准，布尔结果将无助于解决问题。
- en: To avoid confusion, it is best to use a more elaborate logic statement incorporating
    user-friendly tags. You will explore this by following the steps in the following exercise.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免混淆，最好使用更详细的逻辑语句，并包含用户友好的标签。你将通过遵循以下练习中的步骤来探索这一点。
- en: Note
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: If you are using a version of Tableau later than 2020.1, you may need to create
    Number of records to match the output of *Exercise 7.03*.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 2020.1 版本之后的 Tableau，你可能需要创建“记录数”以匹配 *练习 7.03* 的输出。
- en: 'Exercise 7.03: Creating a Logic Calculation'
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 7.03：创建逻辑计算
- en: 'In this exercise, you will create a logic calculation to find unprofitable
    products. as well as to find out how many transactions for each product are unprofitable.
    You will use the `CoffeeChain Query` table from the `Sample-Coffee Chain.mdb`
    dataset. This is a *Microsoft Access Database*. The dataset can be downloaded
    from the following link: [https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=rWpksB](https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=rWpksB).'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将创建一个逻辑计算来查找不盈利的产品，以及找出每个产品中有多少交易是不盈利的。你将使用`Sample-Coffee Chain.mdb`数据集的`CoffeeChain
    Query`表。这是一个*Microsoft Access数据库*。数据集可以从以下链接下载：[https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=rWpksB](https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=rWpksB)。
- en: First, you will connect to the `CoffeeChain Query` table from the `Sample-Coffee
    Chain.mdb` dataset and create a bar chart using the `Product` field and the `Number
    of records` field. You will then create new calculated fields, which will help
    find and highlight *unprofitable products*, and find out *how many of the transactions
    in each product are unprofitable*.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 点击`OK`并将这个新字段拖动到`Color`轴上。你的视图将更新，如以下屏幕截图所示：
- en: 'Connect to the `CoffeeChain Query` table from `Sample-Coffee Chain.mdb`. Create
    a bar chart by dragging the `Product Name` field into the `Rows` shelf. Then,
    drag `Number of Records` into the `Columns` shelf and enable the labels for these
    bars. Refer to the following screenshot:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有产品的整体盈利能力，以及每个产品的交易中有多少是盈利的。这两个要求都是很有用的。你将首先找到你产品的整体盈利能力。
- en: '![Figure 7.24: A screenshot showing the bar chart showing Number of Records
    by Product'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.24：显示按产品记录数量的条形图的屏幕截图](img/B16342_07_26.jpg)'
- en: '](img/B16342_07_24.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.24：显示按产品记录数量的条形图的屏幕截图'
- en: 'Figure 7.24: A screenshot showing the bar chart showing Number of Records by
    Product'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.25：显示整体盈利能力公式的屏幕截图'
- en: Now, you want to find the profitability of your products. However, profitability
    (especially in this case) can be computed on two levels.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你想要找到你产品的盈利能力。然而，盈利能力（尤其是在这种情况下）可以在两个层面上进行计算。
- en: There is the overall profitability of a product, and there is how many transactions
    for a product are profitable. Both these requirements are useful to know. You
    will begin by finding the overall profitability of your products.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你将连接到`Sample-Coffee Chain.mdb`数据集的`CoffeeChain Query`表，并使用`Product`字段和`Number
    of records`字段创建一个条形图。然后，你将创建新的计算字段，这将帮助你找到并突出显示*不盈利的产品*，并找出每个产品中*有多少交易是不盈利的*。
- en: Note
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Please replace the quotes around `Profitable Product` and `Unprofitable Product`
    after pasting the code in *Step 2* below. This will ensure the output is error-free.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 请在以下步骤2中粘贴代码后，替换`Profitable Product`和`Unprofitable Product`周围的引号。这将确保输出无错误。
- en: 'Create a new calculated field called `Overall Profitability` using the `IF…THEN…ELSE…END`
    function. The formula will be as follows:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图7.26：显示使用颜色的整体盈利能力的屏幕截图
- en: '[PRE3]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Refer to the following screenshot:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下屏幕截图：
- en: '![Figure 7.25: A screenshot showing the formula for Overall Profitability'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.25：显示整体盈利能力公式的屏幕截图'
- en: '](img/B16342_07_25.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.26：显示使用颜色的整体盈利能力的屏幕截图'
- en: 'Figure 7.25: A screenshot showing the formula for Overall Profitability'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.24：显示按产品记录数量的条形图的屏幕截图
- en: 'Click `OK` and drag this new field into the `Color` shelf. Your view will update,
    as shown in the following screenshot:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`IF…THEN…ELSE…END`函数创建一个名为`Overall Profitability`的新计算字段。公式如下：
- en: '![Figure 7.26: A screenshot showing Overall Profitability using color'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.26：显示使用颜色的整体盈利能力的屏幕截图'
- en: '](img/B16342_07_26.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 从`Sample-Coffee Chain.mdb`数据库连接到`CoffeeChain Query`表。通过将`Product Name`字段拖动到`Rows`轴上创建一个条形图。然后，将`Number
    of Records`拖动到`Columns`轴上，并启用这些条形的标签。参考以下屏幕截图：
- en: 'Figure 7.26: A screenshot showing Overall Profitability using color'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从颜色图例中看到的，*蓝色条形*是*盈利产品*，而*橙色条形*是*不盈利产品*。在先前的屏幕截图中，您可以清楚地看到绿茶是唯一一个不盈利的产品。
- en: As you see from the color legend, the *blue bars* are the *profitable products*,
    and the *orange bars* are the *unprofitable products*. In the preceding screenshot,
    you can clearly see that green tea is the only product that is unprofitable.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.25：显示整体盈利能力公式的屏幕截图
- en: 'In the ad hoc calculation example (*Exercise 7.01, Creating an Ad Hoc Calculation
    to Highlight Loss-Making Sub-Categories*), when you saved the calculation in the
    `Data` pane, you had a Boolean output with a prefix of =T|F, whereas when you
    save this `Overall Profitability` calculation by clicking `OK`, you see that the
    output is a string with the prefix `=Abc`. Refer to the following screenshot:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.27: A screenshot showing the prefix for an ad hoc calculation and
    Overall Profitability calculation'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16342_07_27.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.27: A screenshot showing the prefix for an ad hoc calculation and
    Overall Profitability calculation'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have found which of your products are profitable, it is time to
    find out how many profitable transactions there are for each product.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: '`Overall Profitability` calculation and change the code.'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use the `IF…THEN…ELSE…END` function. The formula and syntax should be similar
    to the `Overall Profitability` calculation, except for a change in the aggregation
    of the `Profit` field and the displayed output string. Name this calculated field
    `Transactional Profitability`. The formula will be as follows:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Refer to the following screenshot:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.28: A screenshot showing the formula for Transactional Profitability'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16342_07_28.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.28: A screenshot showing the formula for Transactional Profitability'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: 'Click `OK` and drag this new field into the `Color` shelf. Your view will update,
    as shown in the following screenshot:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.29: A screenshot showing Transactional Profitability in color'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16342_07_29.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.29: A screenshot showing Transactional Profitability in color'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: As you see from the color legend, the *blue bars* represent `profitable transactions`,
    and the *orange bars* represent `unprofitable transactions`. From this, you can
    find some interesting outcomes. For example, it shows that all `Decaf Espresso`
    transactions are profitable.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: You have now successfully created and used logic statements to find the profitability,
    and profitable transactions for each of your products
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: 'Creating and Using Different Types of Calculations: String Calculations'
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Tableau, string calculations can be performed on any data type. Tableau
    converts and processes all such data types and yields a string output. You can
    create string calculations on `Integer` fields, as well as `Date` fields by first
    converting them into a string. You can use the type conversion function `STR()`
    in Tableau to achieve this. The various string functions supported by Tableau
    (in version 2020.1) are as follows:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: Functions such as `ASCII` and `CHAR` find the ASCII code of a character and
    the character based on the ASCII code, respectively.
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Case functions such as `LOWER` and `UPPER` change the casing of strings to lowercase
    and uppercase, respectively.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functions such as `CONTAINS`, `STARTSWITH`, `ENDSWITH`, and `ISDATE` check string
    or substring conditions.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functions such as `TRIM`, `LTRIM`, and `RTRIM` remove blank spaces.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functions such as `FIND` and `FINDNTH` find the position of a substring.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FIND`和`FINDNTH`等函数可以找到子字符串的位置。'
- en: Functions such as `LEFT`, `RIGHT`, and `MID`, return the specified number of
    characters in a string.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LEFT`、`RIGHT`和`MID`等函数返回字符串中的指定字符数。'
- en: Regular expressions such as `REGEXP_EXTRACT`, `REGEXP_EXTRACT_NTH`, `REGEXP_MATCH`,
    and `REGEXP_REPLACE` allow you to specify patterns to match, locate, and manage
    text.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正则表达式，如`REGEXP_EXTRACT`、`REGEXP_EXTRACT_NTH`、`REGEXP_MATCH`和`REGEXP_REPLACE`，允许您指定要匹配、定位和管理文本的模式。
- en: Some other string functions available in Tableau are `LEN`, which returns the
    length of the string; `REPLACE`, which searches for a specified substring and
    replaces it with a replacement substring; `SPLIT`, which returns the substring
    from a string based on the specified delimiter; and `MIN` and `MAX`, which return
    either the alphabetically minimum or maximum value for a string.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tableau中可用的其他一些字符串函数包括`LEN`，它返回字符串的长度；`REPLACE`，它搜索指定的子字符串并将其替换为替换子字符串；`SPLIT`，它根据指定的分隔符从字符串中返回子字符串；以及`MIN`和`MAX`，它们返回字符串的字母顺序最小或最大值。
- en: In this section, you will further explore some of these functions.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将进一步探索这些函数中的一些。
- en: You will now continue with the `Orders` data from *Sample-Superstore.xlsx* and
    work with the `Customer Name` field. Currently, this field is a combination of
    the first names and last names of customers. First and last names are separated
    by a *space*. For this example, you would separate the first and last names of
    each customer, and then find the initial letters of the last names for your customers.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在将继续使用来自*Sample-Superstore.xlsx*的`订单`数据，并处理`客户姓名`字段。目前，此字段是客户名和姓的组合。名和姓由*空格*分隔。对于此示例，您将分隔每个客户的姓和名，然后找到客户的姓的首字母。
- en: After that, you create groups for names starting with letters *A to I*, *J to
    R*, and *S to Z* to find out how many customers fall in each group.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您为以字母*A到I*、*J到R*和*S到Z*开头的名字创建组，以找出每个组中有多少客户。
- en: You begin by dragging the `Customer Name` field into the `Rows` shelf. There
    should be 793 unique customers.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 您首先将`客户姓名`字段拖放到`行`架上。应该有793个唯一的客户。
- en: 'To find the last name, you have to create calculations on the `Customer Name`
    field. Right-click on the `Customer Name` field in the `Data` pane and choose
    the `Split` or `Custom Split` option available under `Transform`. Refer to the
    following screenshot:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到姓氏，您必须在`客户姓名`字段上创建计算。在`数据`面板中右键单击`客户姓名`字段，并选择`转换`下可用的`拆分`或`自定义拆分`选项。请参考以下屏幕截图：
- en: '![Figure 7.30: A screenshot showing the Split and Custom Split options'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.30：显示拆分和自定义拆分选项的屏幕截图'
- en: '](img/B16342_07_30.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_30.jpg)'
- en: 'Figure 7.30: A screenshot showing the Split and Custom Split options'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.30：显示拆分和自定义拆分选项的屏幕截图
- en: 'When using the `Split` function, Tableau automatically creates two calculated
    fields named `Customer Name – Split 1` and `Customer Name – Split 2.` When you
    edit these calculated fields, you will see the following syntax for `Split 1`
    and `Split 2` respectively:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`拆分`函数时，Tableau会自动创建两个名为`客户姓名 – 拆分1`和`客户姓名 – 拆分2`的计算字段。当您编辑这些计算字段时，您将看到`拆分1`和`拆分2`的以下语法：
- en: '[PRE5]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This auto split targeted *delimiter*, which in this case was *space*, and on
    that basis, has split the field to give the *first column before the space*, which
    is customer *first names* *second column after the space*, which in this case
    is customer last names.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 此自动拆分目标*分隔符*，在本例中是*空格*，基于此，已将字段拆分为*空格前的第一列*，这是客户*名*，*空格后的第二列*，在本例中是客户*姓*。
- en: 'The `Custom Split` option allows for more control than the auto split option.
    Here, for example, only the last name is needed. The first name isn''t of any
    use at this point. So, instead of using the auto split option, you can use `Custom
    Split`, which brings up the following screenshot:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`自定义拆分`选项比自动拆分选项提供了更多的控制。例如，这里只需要姓氏。名在此点没有用处。因此，您可以使用`自定义拆分`而不是自动拆分选项，它将显示以下屏幕截图：'
- en: '![Figure 7.31: A screenshot showing the Custom Split option'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.31：显示自定义拆分选项的屏幕截图'
- en: '](img/B16342_07_31.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_31.jpg)'
- en: 'Figure 7.31: A screenshot showing the Custom Split option'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.31：显示自定义拆分选项的屏幕截图
- en: 'Here, you can specify the separator/delimiter. You can decide whether you want
    the first column or the second column, and whether you want to split the columns.
    To get only the last name, choose *space* as the separator, and then `Split off`
    the `Last` `1` column. You get one new calculated field called `Customer Name
    - Split 2`. The syntax of this field is as follows:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以指定分隔符/定界符。你可以决定你想要第一列还是第二列，以及是否想要分割列。要只获取姓氏，请选择*空格*作为分隔符，然后`Split off`最后一个`1`列。你将得到一个名为`Customer
    Name - Split 2`的新计算字段。该字段的语法如下：
- en: '[PRE6]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`Split` and `Custom Split` are shortcut options provided by Tableau to split
    strings. However, you could get the same result by creating new calculated fields
    from scratch using some of the previously stated string functions. You will now
    explore this further.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`Split`和`Custom Split`是Tableau提供的用于分割字符串的快捷选项。然而，你也可以通过从头开始创建一些之前提到的字符串函数的新计算字段来得到相同的结果。你现在将进一步探索这一点。'
- en: 'First, parse the string to find the position of the space. Next, ask Tableau
    to give the string that follows the space. To find the position of the space,
    use the `FIND` function in Tableau. The syntax of the calculated field should
    be as follows:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，解析字符串以找到空格的位置。然后，要求Tableau给出空格后的字符串。为了找到空格的位置，使用Tableau中的`FIND`函数。计算字段的语法应如下所示：
- en: '[PRE7]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This gives the position of the space as a numeric value. However, you need
    the string after the space. To identify this, use the `MID` function. The syntax
    should be as follows:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这给出了空格位置的数值。然而，你需要空格后的字符串。为了识别这一点，使用`MID`函数。语法应如下所示：
- en: '[PRE8]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This formula gives you the string followed by the space, but this also includes
    the leading space. To remove this leading space, either use the `TRIM` function
    or the `LTRIM` function as follows:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 此公式给出了空格后的字符串，但这也包括了前导空格。为了移除这个前导空格，你可以使用以下`TRIM`函数或`LTRIM`函数：
- en: '`TRIM`:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`TRIM`:'
- en: '[PRE9]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`LTRIM`:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`LTRIM`:'
- en: '[PRE10]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Either of these two functions will remove the leading space and give only the
    string followed by the space. However, if you don''t want to use the `TRIM` or
    `LTRIM` function, you could even modify the calculation to tweak the `FIND` function,
    as shown here:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个函数中的任何一个都会移除前导空格，并只给出空格后的字符串。然而，如果你不想使用`TRIM`或`LTRIM`函数，你甚至可以修改计算来调整`FIND`函数，如下所示：
- en: '[PRE11]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `+1` in the preceding example finds the first position after the space,
    and thus will work similarly to the `TRIM` and `LTRIM` functions.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个示例中的`+1`找到空格后的第一个位置，因此它将类似于`TRIM`和`LTRIM`函数的工作方式。
- en: 'The point of discussing all these options is to show that many string functions
    can be utilized differently to get the same output. Now, choose any of the preceding
    formulae and save your calculated field as `Last Name`. Refer to the following screenshot:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论所有这些选项的目的是为了表明，许多字符串函数可以以不同的方式利用来得到相同的结果。现在，选择任何前面的公式并将你的计算字段保存为`Last Name`。参见图表：
- en: '![Figure 7.32: A screenshot showing the Last Name calculated field'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.32：显示姓氏计算字段的屏幕截图]'
- en: '](img/B16342_07_32.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_32.jpg)'
- en: 'Figure 7.32: A screenshot showing the Last Name calculated field'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.32：显示姓氏计算字段的屏幕截图
- en: 'Now, you have the `Last Name` of your customers, it is time to find the initial
    letter of `Last Name`. Here, again, you can use functions such as `LEFT` and `MID`.
    The syntax for both these functions is as follows:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经有了客户的`Last Name`，是时候找到`Last Name`的首字母了。在这里，你同样可以使用`LEFT`和`MID`等函数。这两个函数的语法如下所示：
- en: '[PRE12]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `LEFT` function will return the *specified number of characters (shown as*
    `1` *in the previous example)* from the start of the given string.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`LEFT`函数将从给定字符串的开始返回*指定数量的字符（如前一个示例中所示为`1`）*。'
- en: The `MID` function will return the characters from the middle of the string,
    giving a *starting position and a length (shown as* `1,1` *in the previous example)*.
    So, both the `LEFT` and the `MID` functions will give us the first character of
    the string.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`MID`函数将返回字符串中间的字符，提供一个*起始位置和长度（如前一个示例中所示为`1,1`）*。因此，`LEFT`和`MID`函数都将给我们字符串的第一个字符。'
- en: 'Here, you will continue with the `MID` function, as shown in the following
    screenshot:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你将继续使用`MID`函数，如下面的屏幕截图所示：
- en: '![Figure 7.33: A screenshot showing the initial letter of the Last Name calculated
    field'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.33：显示姓氏首字母计算字段的屏幕截图]'
- en: '](img/B16342_07_33.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_33.jpg)'
- en: 'Figure 7.33: A screenshot showing the initial letter of the Last Name calculated
    field'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.33：显示姓氏首字母计算字段的屏幕截图
- en: 'Finally, it is time for you to create your groups. You can use the following
    formula:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，是时候创建您的组了。您可以使用以下公式：
- en: '[PRE13]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Name this calculation `Groups-Starting alphabet of Last Name`. Refer to the
    following screenshot:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 将此计算命名为`Groups-Starting alphabet of Last Name`。参考以下屏幕截图：
- en: '![Figure 7.34: A screenshot showing the Groups-Starting alphabet'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.34：显示“Groups-Starting alphabet”的屏幕截图'
- en: of Last Name calculated field
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 的屏幕截图
- en: '](img/B16342_07_34.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_34.jpg)'
- en: 'Figure 7.34: A screenshot showing the Groups-Starting alphabet of Last Name
    calculated field'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.34：显示“Groups-Starting alphabet of Last Name”计算字段的屏幕截图
- en: 'Change the `Customer Name` field in the `Rows` shelf to show the distinct count
    of customers. Then, drop the new calculated field into the `Columns` shelf. Refer
    to the following screenshot:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 将`Customer Name`字段在`Rows`轴上更改为显示客户的唯一计数。然后，将新的计算字段拖放到`Columns`轴上。参考以下屏幕截图：
- en: '![Figure 7.35: A screenshot showing the bar chart of Groups-Starting letter
    of Last Name'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.35：显示“Groups-Starting letter of Last Name”柱状图的屏幕截图'
- en: '](img/B16342_07_35.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_35.jpg)'
- en: 'Figure 7.35: A screenshot showing the bar chart of Groups-Starting letter of
    Last Name'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.35：显示“Groups-Starting letter of Last Name”柱状图的屏幕截图
- en: '*Figure 7.35* shows that there are more than 350 customers whose last name
    starts with a letter that is between `A` and `I`.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7.35*显示，有超过350位客户的姓氏以字母`A`到`I`之间的字母开头。'
- en: Typically, when dealing with string data, the two main operations you might
    perform are splitting a string into substrings or concatenating two or more strings
    to make one long string. You have now learned how to split strings. In the following
    exercise, you will be concatenating two strings together.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在处理字符串数据时，您可能执行的两个主要操作是将字符串拆分为子字符串或将两个或多个字符串连接起来形成一个长字符串。您已经学会了如何拆分字符串。在接下来的练习中，您将连接两个字符串。
- en: 'Exercise 7.04: Creating a String Calculation'
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习7.04：创建字符串计算
- en: In this exercise, you will create a string calculation that will combine `Product
    Type`, `Product`, and the aggregated `Sales` value. You will continue using the
    `CoffeeChain Query` data from the `Sample-Coffee Chain.mdb` file. You will use
    the `Product Type` and `Product` fields, along with `SUM(Sales)`.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您将创建一个字符串计算，该计算将结合`Product Type`、`Product`和汇总的`Sales`值。您将继续使用来自`Sample-Coffee
    Chain.mdb`文件的`CoffeeChain Query`数据。您将使用`Product Type`和`Product`字段，以及`SUM(Sales)`。
- en: 'Start by creating a bar chart using the `Product Type`, `Product`, and `SUM(Sales)`
    fields, as shown in the following screenshot:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个使用`Product Type`、`Product`和`SUM(Sales)`字段的柱状图，如图所示：
- en: '![Figure 7.36: A screenshot showing the bar chart of SUM(Sales) by Product
    Type and Product'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.36：显示按“Product Type”和“Product”分组求和的“Sales”的柱状图'
- en: '](img/B16342_07_36.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_36.jpg)'
- en: 'Figure 7.36: A screenshot showing the bar chart of SUM(Sales) by Product Type
    and Product'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.36：显示按“Product Type”和“Product”分组求和的“Sales”的柱状图
- en: 'Once the bar chart is created, create a calculated field that is a combination
    of the first three letters of `Product Type` followed by the `Product` text and
    the `SUM(Sales)` value. So, for example, if `Product Type` is, `Coffee` and `Product`
    is `Colombian`, and if the total sales for this `Product` are `$90,000`, then
    the output should be `COF-Colombian: $90000`.'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '一旦创建了柱状图，创建一个计算字段，该字段是`Product Type`的前三个字母与`Product`文本和`SUM(Sales)`值的组合。例如，如果`Product
    Type`是`Coffee`，而`Product`是`Colombian`，并且这个`Product`的总销售额为`$90,000`，那么输出应该是`COF-Colombian:
    $90000`。'
- en: To achieve this, you must change the Product Type to upper case, then pick only
    the first 3 characters. You must append the Product labels, and the SUM(Sales)
    value, which needs to start with a $ sign and must be rounded off to show zero
    decimals. You also need to add some special characters such as space, `-`, and
    `:`. These can be inserted using either single quotes or double quotes. Follow
    along with this exercise to learn how.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现这一点，您必须将`Product Type`转换为上标，然后仅选择前3个字符。您必须附加产品标签和`SUM(Sales)`值，该值需要以美元符号`$`开头，并且必须四舍五入以显示零位小数。您还需要添加一些特殊字符，如空格、`-`和`:`。这些可以使用单引号或双引号插入。跟随这个练习来学习如何操作。
- en: 'Begin by creating a new calculated field called `Concatenated string` and type
    the following formula:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个名为`Concatenated string`的新计算字段，并输入以下公式：
- en: '[PRE14]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This gives you the first part of what the desired string should look like.
    So, for example, if the desired output is `COF-Colombian: $90000`, then the preceding
    calculation gives an output of `COF-Colombian:`.'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '这给出了所需字符串的第一部分。例如，如果所需的输出是`COF-Colombian: $90000`，则前面的计算给出输出为`COF-Colombian:`。'
- en: You are halfway there. Now, if you saved the calculation mid-way, you will have
    to right-click on this new calculated field and edit it from the `Dimensions`
    pane. However, if not, you can continue working in the same calculation box.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了一半。现在，如果你在中间保存了计算，你将必须右键单击这个新的计算字段，并在“维度”面板中编辑它。如果没有，你可以在同一个计算框中继续工作。
- en: 'Now you must append the `SUM(Sales)` value, and this is where things start
    to get complicated. Firstly, `Product Type` and `Product` are *string values*,
    but `SUM(Sales)` is an *integer value*, so it is not possible to concatenate them,
    unless you convert `SUM(Sales)` to a *string value*. Further, you need the `SUM(Sales)`
    value to be *rounded off to zero decimal places* and it needs to have *$ as a
    prefix*. Keeping this in mind, amend the existing calculation as follows:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在必须附加`SUM(Sales)`值，从这里事情开始变得复杂。首先，“产品类型”和“产品”是*字符串值*，但`SUM(Sales)`是*整数值*，所以它们不能连接，除非将`SUM(Sales)`转换为*字符串值*。此外，你需要`SUM(Sales)`值被*四舍五入到零位小数*，并且它需要以*美元符号$*作为前缀。记住这一点，按照以下方式修改现有的计算：
- en: '[PRE15]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You will see that Tableau doesn''t agree with this formula and gives an error
    indicator. Refer to the following screenshot:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到Tableau不同意这个公式，并给出一个错误指示器。参考以下屏幕截图：
- en: '![Figure 7.37: A screenshot showing the error in the calculation of Concatenated
    string'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.37：显示连接字符串计算错误的屏幕截图]'
- en: '](img/B16342_07_37.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_37.jpg)'
- en: 'Figure 7.37: A screenshot showing the error in the calculation of Concatenated
    string'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.37：显示连接字符串计算错误的屏幕截图]'
- en: 'Click the error dropdown. You should see an error that reads `Cannot mix aggregate
    and non-aggregate arguments with this function`. Refer to the following screenshot:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击错误下拉菜单。你应该看到一个错误，显示为“Cannot mix aggregate and non-aggregate arguments with
    this function”。参考以下屏幕截图：
- en: '![Figure 7.38: A screenshot showing the "Cannot mix aggregate'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.38：显示“Cannot mix aggregate and non-aggregate arguments…”错误的屏幕截图]'
- en: and non-aggregate arguments…" error
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 和非聚合参数…错误
- en: '](img/B16342_07_38.jpg)'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_38.jpg)'
- en: 'Figure 7.38: A screenshot showing the "Cannot mix aggregate and non-aggregate
    arguments…" error'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.38：显示“Cannot mix aggregate and non-aggregate arguments…”错误的屏幕截图]'
- en: 'This is a *classic error* common in Tableau. It means that `SUM(Sales)` is
    an *aggregated field* whereas the `Product Type` and `Product` fields, being `Dimensions`,
    are *not aggregated* and, logically, Tableau can''t work with aggregated and non-aggregated
    values in a calculation. So, to overcome this, you must aggregate the `Product
    Type` and `Product fields`. Since both the Product Type and Product fields are
    dimensions, you can use any of the following functions: `MIN`, `MAX`, or `ATTR`.'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个在Tableau中常见的*经典错误*。这意味着`SUM(Sales)`是一个*聚合字段*，而“产品类型”和“产品”字段作为“维度”，不是聚合的，从逻辑上讲，Tableau无法在计算中使用聚合和非聚合值。因此，为了克服这个问题，你必须对“产品类型”和“产品”字段进行聚合。由于产品类型和产品字段都是维度，你可以使用以下任何函数：`MIN`、`MAX`或`ATTR`。
- en: Save your existing calculation as it is and spend a little time understanding
    these three functions before amending it.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 保存现有的计算，并在修改之前花点时间理解这三个函数。
- en: When aggregating the dimension using the MIN function, you get the *alphabetically
    minimum or lowest value*. The `MAX` function, on the other hand, gives the *alphabetically
    maximum or highest value*. The ATTR function gives the value of the field as is
    if it has a single value for all rows; otherwise, it will return an asterisk.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`MIN`函数对维度进行聚合时，你会得到*字母顺序最小或最低的值*。另一方面，`MAX`函数给出*字母顺序最大或最高的值*。如果字段对于所有行只有一个值，`ATTR`函数将给出字段的值；否则，它将返回一个星号。
- en: 'To demonstrate this, create a new sheet to show `Product Type` in the `Rows`
    shelf. Then, create a new calculated field called `Min of Product` with the following
    formula:'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了演示这一点，创建一个新的工作表以在“行”面板中显示“产品类型”。然后，创建一个新的计算字段，称为“产品最小值”，使用以下公式：
- en: '[PRE16]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Refer to the following screenshot:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下屏幕截图：
- en: '![Figure 7.39: A screenshot showing Min of Product calculation'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.39：显示产品最小值计算的屏幕截图]'
- en: '](img/B16342_07_39.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_39.jpg)'
- en: 'Figure 7.39: A screenshot showing Min of Product calculation'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.39：显示产品最小值计算的屏幕截图
- en: Save the calculation. Notice that even though it has a string output, it is
    now part of the `Measures` pane. This is because it is now an aggregated field
    and, as discussed earlier, any aggregated field becomes part of the `Measures`
    pane.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 保存计算。注意，尽管它有一个字符串输出，但它现在已成为“度量”面板的一部分。这是因为它现在是一个聚合字段，如前所述，任何聚合字段都将成为“度量”面板的一部分。
- en: 'Now, create another calculation called `Max of Product` with the following formula:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，创建另一个名为“产品最大值”的计算，其公式如下：
- en: '[PRE17]'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Refer to the following screenshot:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下截图：
- en: '![Figure 7.40: A screenshot showing the Max of Product calculation'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.40：显示产品最大值计算的截图'
- en: '](img/B16342_07_40.jpg)'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_40.jpg)'
- en: 'Figure 7.40: A screenshot showing the Max of Product calculation'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.40：显示产品最大值计算的截图
- en: This calculation should also be in the `Measures` pane.
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此计算也应位于“度量”面板中。
- en: 'Finally, create a calculation called `Attribute of Product` with the following formula:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，创建一个名为“产品属性”的计算，其公式如下：
- en: '[PRE18]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Refer to the following screenshot:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下截图：
- en: '![Figure 7.41 – A screenshot showing the Attribute of Product calculation'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.41 – 显示产品属性计算的截图'
- en: '](img/B16342_07_41.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_41.jpg)'
- en: Figure 7.41 – A screenshot showing the Attribute of Product calculation
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.41 – 显示产品属性计算的截图
- en: Now drop these three calculated fields into your sheet, right after the `Product
    Type` field in the `Rows` shelf.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将这些三个计算字段拖放到你的工作表中，紧接在“产品类型”字段之后，位于“行”货架中。
- en: 'First, drop the `Min of Product` field, followed by `Max of Product`, and finally
    `Attribute of Product`. You should notice that all three fields give different
    outputs. Refer to the following screenshot:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，将“产品最小值”字段放下，然后是“产品最大值”，最后是“产品属性”。您应该注意到这三个字段给出了不同的输出。参考以下截图：
- en: '![Figure 7.42: A screenshot showing the output of Min, Max, and Attribute of
    Product calculations at the Product Type level'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.42：显示在产品类型级别上计算出的最小值、最大值和产品属性的截图'
- en: '](img/B16342_07_42.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_42.jpg)'
- en: 'Figure 7.42: A screenshot showing the output of Min, Max, and Attribute of
    Product calculations at the Product Type level'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.42：显示在产品类型级别上计算出的最小值、最大值和产品属性的截图
- en: As you can see, `Min of Product` gives you `Amaretto for Coffee`, `Caffe Latte
    for Espresso`, `Chamomile for Herbal Tea`, and `Darjeeling for Tea`. These are
    the *alphabetically minimum values* of our `Product` field within that `Product
    Type`. Similarly, `Max of Product` is giving `Decaf Irish Cream for Coffee`, `Regular
    Espresso for Espresso`, `Mint for Herbal Tea`, and `Green Tea for Tea`. These
    are the *alphabetically maximum values* of your `Product` field within that `Product`
    Type. Further, `Attribute of Product` is giving *neither the minimum nor the maximum*;
    instead, it is giving an *asterisk*. This means there is more than 1 `Product`
    under that `Product Type` and since Tableau can't display all the values, it is
    showing the asterisk to indicate there is more than 1 `Product` under each Product
    Type.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，“产品最小值”给出的是“咖啡阿玛雷托”，“浓缩咖啡卡布奇诺”，“洋甘菊花草茶”和“大吉岭红茶”。这些是在该“产品类型”下我们“产品”字段的**字母顺序最小值**。同样，“产品最大值”给出的是“咖啡脱因爱尔兰奶油”，“常规浓缩咖啡”，“薄荷花草茶”和“绿茶”。这些是在该“产品类型”下您“产品”字段的**字母顺序最大值**。进一步地，“产品属性”既不是最小值也不是最大值；相反，它给出的是一个**星号**。这意味着在该“产品类型”下有超过1个“产品”，由于Tableau无法显示所有值，因此显示星号以指示每个产品类型下有超过1个“产品”。
- en: 'Now drag the `Product` field from the `Dimensions` pane and drop it after `Product
    Type` in the `Rows` shelf. Refer to the following screenshot:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将“产品”字段从“维度”面板拖动，并将其放置在“行”货架中的“产品类型”之后。参考以下截图：
- en: '![Figure 7.43: A screenshot showing the output of Min, Max, and Attribute of
    Product calculations at the Product level'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.43：显示在产品级别上计算出的最小值、最大值和产品属性的截图'
- en: '](img/B16342_07_43.jpg)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B16342_07_43.jpg)'
- en: 'Figure 7.43: A screenshot showing the output of Min, Max, and Attribute of
    Product calculations at the Product level'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.43：显示在产品级别上计算出的最小值、最大值和产品属性的截图
- en: As you see, when the `Product` field is in the view, all three calculations
    give the same value. This is because the `Min` or `Max` of a `Product` at the
    `Product` level is the `Product` itself (that is, the *Min or Max for Colombian
    will be Colombian itself*). Similarly, for the `Attribute` function, since there
    is only one row of `Product` under each `Product`, you get the output as that
    `Product` itself, and not an *asterisk*. However, the minute you remove the granularity
    of the `Product`, you start getting different results. So, keep in mind that if
    the dimension being aggregated is in the view, all three of these functions will
    give the same output.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，当 `Product` 字段在视图中时，所有三个计算都给出相同的值。这是因为 `Product` 在 `Product` 级别的 `Min`
    或 `Max` 就是 `Product` 本身（即，对于哥伦比亚的 `Min` 或 `Max` 将是哥伦比亚本身）。同样，对于 `Attribute` 函数，由于每个
    `Product` 下只有一个 `Product` 行，你得到的结果就是那个 `Product` 本身，而不是一个 *星号*。然而，当你移除 `Product`
    的粒度时，你开始得到不同的结果。所以，请记住，如果正在聚合的维度在视图中，这三个函数都将给出相同的输出。
- en: 'Now you have seen the various options for aggregating dimensions, you will
    now go back and amend your `Concatenated string` calculation. Since you have two
    dimensions, namely, `Product Type` and `Product`, you must aggregate both. Since
    both dimensions are in the view, you can use any of the functions discussed. For
    this, use the `MIN` function. Your formula should update as follows:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已经看到了聚合维度的各种选项，你现在将返回并修改你的 `Concatenated string` 计算。由于你有两个维度，即 `Product Type`
    和 `Product`，你必须对两者进行聚合。由于这两个维度都在视图中，你可以使用所讨论的任何函数。为此，使用 `MIN` 函数。你的公式应更新如下：
- en: '[PRE19]'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Refer to the following screenshot:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下截图：
- en: '![Figure 7.44: A screenshot showing the error-free calculation of Concatenated
    string'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.44：显示 Concatenated 字符串无错误计算的截图]'
- en: '](img/B16342_07_44.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B16342_07_44.jpg](img/B16342_07_44.jpg)'
- en: 'Figure 7.44: A screenshot showing the error-free calculation of Concatenated
    string'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.44：显示 Concatenated 字符串无错误计算的截图
- en: 'Click `OK` and go back to the sheet where you created a bar chart showing `Product
    Type`, `Product`, and `SUM(Sales)`. Drop this new field, which is now found under
    the `Measures` pane, into the `Rows` shelf just after `Product`. Refer to the
    following screenshot:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `OK` 并返回你创建的显示 `Product Type`、`Product` 和 `SUM(Sales)` 的条形图的工作表。将这个新字段（现在在
    `Measures` 面板下）拖放到 `Product` 之后的 `Rows` 面板上。参考以下截图：
- en: '![Figure 7.45 – A screenshot showing the output of the Concatenated string
    calculation'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.45 – 显示 Concatenated 字符串计算输出的截图]'
- en: '](img/B16342_07_45.jpg)'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B16342_07_45.jpg](img/B16342_07_45.jpg)'
- en: Figure 7.45 – A screenshot showing the output of the Concatenated string calculation
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.45 – 显示 Concatenated 字符串计算输出的截图
- en: You have now created and used string functions in Tableau. You created a concatenated
    string using dimensions and aggregated `Measures`. You saw how to typecast an
    integer of a float value into a string, and how to aggregate a dimension using
    either the `MIN`, `MAX`, or `ATTR` functions to get rid of the `Cannot mix aggregate
    and non-aggregate arguments…` error. Now you know how to manipulate string fields,
    it is time to explore date functions.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经在 Tableau 中创建并使用了字符串函数。你使用维度和聚合 `Measures` 创建了一个连接字符串。你看到了如何将整数的浮点值转换为字符串，以及如何使用
    `MIN`、`MAX` 或 `ATTR` 函数聚合维度以消除 `Cannot mix aggregate and non-aggregate arguments…`
    错误。现在你知道如何操作字符串字段，是时候探索日期函数了。
- en: 'Creating and Using Different Types of Calculations: Date Calculations'
  id: totrans-345
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和使用不同类型的计算：日期计算
- en: 'When manipulating `Date` fields, you can use the various `Date` functions supported
    by Tableau. At this point in time (that is, in version 2020.1), these are as follows:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 当操作 `Date` 字段时，你可以使用 Tableau 支持的各种 `Date` 函数。到目前为止（即，在 2020.1 版本中），这些如下：
- en: '`DATENAME`, `DATEPART`, `DATETRUNC`, `YEAR`, `QUARTER`, `MONTH`, `WEEK`, `DAY`,
    `ISOYEAR`, `ISOQUARTER`, `ISOWEEK`, and `ISOWEEKDAY`, which can be used to find
    the date part of the `Date` field.'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DATENAME`、`DATEPART`、`DATETRUNC`、`YEAR`、`QUARTER`、`MONTH`、`WEEK`、`DAY`、`ISOYEAR`、`ISOQUARTER`、`ISOWEEK`
    和 `ISOWEEKDAY`，可用于查找 `Date` 字段的日期部分。'
- en: '`DATEDIFF` and `DATEADD`, used to find the difference between two dates or
    to generate a new `Date` field based on an incremental interval.'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DATEDIFF` 和 `DATEADD`，用于查找两个日期之间的差异或基于增量间隔生成新的 `Date` 字段。'
- en: '`TODAY` and `NOW`, which give the current date or date and time.'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TODAY` 和 `NOW`，它们给出当前的日期或日期和时间。'
- en: '`ISDATE`, used to find out whether a given field is a `Date` field.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ISDATE`，用于确定给定的字段是否为 `Date` 字段。'
- en: You will now use a `Date` calculation to find out how many months it has been
    since your customers last made a purchase.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在将使用`Date`计算来找出客户上次购买以来已经过去了多少个月。
- en: 'Exercise 7.05: Creating a Date Calculation'
  id: totrans-352
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习7.05：创建日期计算
- en: The objective of this exercise is to create a `Date` calculation to find the
    number of months since the last purchase for your customers. You will continue
    using your `Orders` data from `Sample-Superstore.xlsx` and use the `Customer Name`
    and the `Order Date` fields.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 本练习的目的是创建一个`Date`计算，以找到客户上次购买以来的月份数。你将继续使用来自`Sample-Superstore.xlsx`的`Orders`数据，并使用`客户名称`和`订单日期`字段。
- en: 'Perform the following steps:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: 'Start by dragging `Customer Name` into the Rows shelf. Then, right-click drag
    and drop the `Order Date` field into the `Rows` shelf, which should create a `Menu`.
    Select `MDY(Order Date)`. Refer to the following screenshot:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，将`Customer Name`拖入行货架。然后，右键单击并将`Order Date`字段拖放到`Rows`货架，这将创建一个菜单。选择`MDY(Order
    Date)`。参考以下截图：
- en: '![Figure 7.46: A screenshot showing the right-click drag-drop menu for Order
    Date'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.46：显示订单日期的右键单击拖放菜单的截图'
- en: '](img/B16342_07_46.jpg)'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_46.jpg)'
- en: 'Figure 7.46: A screenshot showing the right-click drag-drop menu for Order
    Date'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.46：显示订单日期的右键单击拖放菜单的截图
- en: Now you can see all order dates at the customer level. There is no point looking
    at all transactional dates for every customer. You are only interested in the
    last purchase date, and how many months it has been since it occurred.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以在客户级别看到所有订单日期。查看每个客户的所有交易日期是没有意义的。你只对最后购买日期以及自上次购买以来过去了多少个月感兴趣。
- en: 'To achieve this, first create a calculation called `Last purchase date` with
    the following formula:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要实现这一点，首先创建一个名为`Last purchase date`的计算，使用以下公式：
- en: '[PRE20]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Refer to the following screenshot:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下截图：
- en: '![Figure 7.47: A screenshot showing the Last purchase date calculation'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.47：显示最后购买日期计算的截图'
- en: '](img/B16342_07_47.jpg)'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_47.jpg)'
- en: 'Figure 7.47: A screenshot showing the Last purchase date calculation'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.47：显示最后购买日期计算的截图
- en: 'Since this calculation will be computed on the fly, the `Max` date is dependent
    on the dimensions in the view. If you drag and drop this new field into your `Rows`
    shelf, you should notice that the values are the same as for the `MDY(Order Date)`.
    This won''t work for you; you want the Max date for each customer, and hence you
    must remove the `MDY(Order Date)` granularity. This will update your view, as
    shown in the following screenshot:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于此计算将实时计算，`Max`日期取决于视图中的维度。如果你将此新字段拖放到你的`Rows`货架，你应该会注意到值与`MDY(Order Date)`相同。这对你不起作用；你想要每个客户的最大日期，因此你必须删除`MDY(Order
    Date)`粒度。这将更新你的视图，如以下截图所示：
- en: '![Figure 7.48: A screenshot showing the Last purchase date for each customer'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.48：显示每个客户的最后购买日期的截图'
- en: '](img/B16342_07_48.jpg)'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_48.jpg)'
- en: 'Figure 7.48: A screenshot showing the Last purchase date for each customer'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.48：显示每个客户的最后购买日期的截图
- en: Now you have your `Last purchase date` field, it is time to find out how many
    months it has been since the customers last made a purchase. This can be achieved
    by finding the difference between two dates, that is, `Last purchase date` and,
    ideally, `Today`. However, since your data is not daily-updating, you will consider
    the end date as December 31, 2019, which is the last date in the data.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了`Last purchase date`字段，是时候找出客户上次购买以来已经过去了多少个月了。这可以通过找出两个日期之间的差异来实现，即`Last
    purchase date`和理想情况下`Today`。然而，由于你的数据不是每日更新的，你将考虑结束日期为2019年12月31日，这是数据中的最后一天。
- en: 'Create a new calculated field called *Months since last purchase* and use the
    following formula:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的计算字段，称为*自上次购买以来月份*，并使用以下公式：
- en: '[PRE21]'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Refer to the following screenshot:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下截图：
- en: '![Figure 7.49: A screenshot showing the Months since last purchase calculation'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.49：显示自上次购买以来月份计算的截图'
- en: '](img/B16342_07_49.jpg)'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_49.jpg)'
- en: 'Figure 7.49: A screenshot showing the Months since last purchase calculation'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.49：显示自上次购买以来月份计算的截图
- en: 'After you save this calculation, you can drag it into the `Text` shelf, and
    should get the desired output. This calculation finds the difference in months
    between `Last purchase date` and December 31, 2019\. A point to remember is that
    when you need to enter a hardcoded date, it will start and end with a *hash* (`#`),
    as shown above. Further, if this data was daily-updating and you wanted to find
    the difference with respect to `Today`, that is, the current date, then you could
    use the `Today()` function, and the calculation would update as shown here:'
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存此计算后，您可以将它拖到`文本`架中，应该会得到期望的输出。这个计算找出`最后购买日期`和2019年12月31日之间的月数差异。一个需要注意的点是，当您需要输入硬编码的日期时，它将以*井号*（`#`）开始和结束，如上图所示。此外，如果这些数据是每日更新的，并且您想找到与`Today`（即当前日期）的差异，那么您可以使用`Today()`函数，计算将像下面这样更新：
- en: '[PRE22]'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Figure 7.50: A screenshot showing the final output of the Date calculation'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.50：显示日期计算最终输出的截图'
- en: '](img/B16342_07_50.jpg)'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_50.jpg)'
- en: 'Figure 7.50: A screenshot showing the final output of the Date calculation'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.50：显示日期计算最终输出的截图
- en: In this exercise, you used the `DATEDIFF()` function to find how many months
    it has been since customers last made a purchase. In the next section, you'll
    see what to do when the value of data for a product is returned as null.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您使用了`DATEDIFF()`函数来找出客户上次购买以来有多少个月。在下一节中，您将看到当产品数据值返回为空时应该做什么。
- en: Handling Null Values while Creating and Using Calculations
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在创建和使用计算时处理空值
- en: 'Often, you might deal with data containing null values. These could be genuine
    entries in the data. For example, there may not be any `Sales` value to report
    against a particular product—even though it is part of the inventory, it may not
    have been sold yet. These nulls could also be because of some data entry errors.
    Most likely, you would identify and take care of these nulls at the data preparation
    stage. However, that may not always be the case. At times, you may need to tackle
    them within Tableau Desktop using calculations. Null values tend to pose a problem
    when used in calculated fields, simply because when doing arithmetic operations
    on fields, it may result in the output being null in Tableau. Refer to the following
    screenshot:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您可能会处理包含空值的数据。这些可能是数据中的真实条目。例如，可能没有针对特定产品的`销售`值来报告——即使它是库存的一部分，它可能尚未售出。这些空值也可能是因为某些数据输入错误。最有可能的是，您会在数据准备阶段识别并处理这些空值。然而，情况并不总是如此。有时，您可能需要在Tableau
    Desktop中使用计算来处理它们。空值在计算字段中使用时往往会引起问题，因为当对字段进行算术运算时，它可能会导致Tableau中的输出为空。参见图表：
- en: '![Figure 7.51 – A screenshot showing the Excel data and the output'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.51 – 显示Excel数据和计算输出的截图'
- en: of the calculation on fields with null values
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 在具有空值字段的计算上
- en: '](img/B16342_07_51.jpg)'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_51.jpg)'
- en: Figure 7.51 – A screenshot showing the Excel data and the output of the calculation
    on fields with null values
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.51 – 显示Excel数据和具有空值字段的计算输出的截图
- en: The preceding screenshot is a quick mockup to show the Excel data on the left
    and the Tableau display on the right. You can see that both fields (that is, `Value
    of Product A` and `Value of Product B`) have *null values* in certain months.
    Now, when you want to find the total value in each month, you add the values of
    product A and product B. However, since both of these fields have null values
    in certain months, the calculated field only shows the output for months with
    values in both columns. For months where either of the values are missing, the
    calculated field gives null output. This is simply because you can't do math on
    null values without getting a null output.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图是一个快速草稿，用于展示左侧的Excel数据和右侧的Tableau显示。您可以看到，这两个字段（即“产品A的价值”和“产品B的价值”）在特定月份有*空值*。现在，当您想要找到每个月的总价值时，您需要加上产品A和产品B的价值。然而，由于这两个字段在特定月份都有空值，计算字段只显示两个列都有值的月份的输出。对于其中任何一个值缺失的月份，计算字段给出空输出。这仅仅是因为您不能在没有得到空输出的情况下对空值进行数学运算。
- en: To overcome this, you will use functions such as `ZN`, `IFNULL`, and `ISNULL`.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 为了克服这个问题，您将使用`ZN`、`IFNULL`和`ISNULL`等函数。
- en: 'The data for this section is available for download using this link: [https://packt.link/k59i9](https://packt.link/k59i9).'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的数据可通过以下链接下载：[https://packt.link/k59i9](https://packt.link/k59i9)。
- en: 'Refer to the `Handling Null Values in Tableau.xlsx` data file for this section.
    Begin by connecting to this data in Tableau and creating a quick tabular view
    showing `Month` and `Value of Product A` and `Value of Product B`. Create a calculated
    field called `Value of Product A + B`. The formula is as follows:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 参考本节中的 `Handling Null Values in Tableau.xlsx` 数据文件。首先，在 Tableau 中连接到这些数据，并创建一个快速表格视图，显示
    `Month`、`Product A 的价值` 和 `Product B 的价值`。创建一个名为 `Product A + B 的价值` 的计算字段。公式如下：
- en: '[PRE23]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add this calculated field to the view. It should update as shown in the following screenshot:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 将此计算字段添加到视图中。它应该像以下屏幕截图所示更新：
- en: '![Figure 7.52: A screenshot showing the output of calculation on fields with
    null values'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.52：显示对包含空值字段计算输出的屏幕截图](img/B16342_07_52.jpg)'
- en: '](img/B16342_07_52.jpg)'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_52.jpg](img/B16342_07_52.jpg)'
- en: 'Figure 7.52: A screenshot showing the output of calculation on fields with
    null values'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.52：显示对包含空值字段计算输出的屏幕截图
- en: As you see, the calculated field needs some tweaking. The best way to handle
    these null values when doing mathematical operations is to *convert them to zero*.
    You will use either the `ZN`, `IFNULL`, or `ISNULL` function.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，计算字段需要一些调整。在执行数学运算时处理这些空值最佳方式是将它们**转换为零**。你将使用 `ZN`、`IFNULL` 或 `ISNULL`
    函数之一。
- en: 'First, try the `ZN` function. `ZN` stands for *Zero if Null*, and that is exactly
    what this function does; it *replaces the nulls with zero*. Since both fields
    contain null at some point, you need to use the `ZN` function for both fields.
    Tweak your calculation to use the following formula:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，尝试使用 `ZN` 函数。`ZN` 代表 **Zero if Null**，这正是这个函数的功能；它**将空值替换为零**。由于两个字段在某些时候都包含空值，因此你需要为两个字段都使用
    `ZN` 函数。调整你的计算以使用以下公式：
- en: '[PRE24]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Once you update the calculation, your view will update as shown in the following screenshot:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 更新计算后，你的视图将像以下屏幕截图所示更新：
- en: '![Figure 7.53: A screenshot showing the output of the calculated field using
    the ZN function'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.53：显示使用 `ZN` 函数计算字段输出的屏幕截图](img/B16342_07_53.jpg)'
- en: '](img/B16342_07_53.jpg)'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_53.jpg](img/B16342_07_53.jpg)'
- en: 'Figure 7.53: A screenshot showing the output of the calculated field using
    the ZN function'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.53：显示使用 `ZN` 函数计算字段输出的屏幕截图
- en: You now get values for every single `Month`, despite the *nulls* because Tableau
    is now *converting these nulls to zero* before adding them up.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在会得到每个 `Month` 的值，即使有 **空值**，因为 Tableau 现在在加总之前将这些空值**转换为零**。
- en: 'You will now look at the `IFNULL` function. Amend your calculated field to
    *comment out* the formula using the `ZN` function, and instead use the `IFNULL`
    formula as follows:'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在将查看 `IFNULL` 函数。修改你的计算字段，用 `ZN` 函数**注释掉**公式，并改用以下 `IFNULL` 公式：
- en: '[PRE25]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Refer to the following screenshot:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下屏幕截图：
- en: '![Figure 7.54: A screenshot showing the syntax of the IFNULL function'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.54：显示 `IFNULL` 函数语法的屏幕截图](img/B16342_07_54.jpg)'
- en: '](img/B16342_07_54.jpg)'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_54.jpg](img/B16342_07_54.jpg)'
- en: 'Figure 7.54: A screenshot showing the syntax of the IFNULL function'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.54：显示 `IFNULL` 函数语法的屏幕截图
- en: 'Once you click `OK`, you will see that you still get output for each `Month`.
    The `IFNULL` function returns the expression if it is not null; otherwise, it
    returns the alternate expression that is defined: zero, in this case.'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你点击 `OK`，你仍然会看到每个 `Month` 的输出。`IFNULL` 函数如果表达式不是空值则返回表达式；否则返回定义的替代表达式：在这种情况下为零。
- en: 'Now you understand the `ZN` and the `IFNULL` functions, you will look at the
    `ISNULL` function. The `ISNULL` function returns `True` if the expression contains
    a null value; otherwise, it returns `False`. In other words, the `ISNULL` function
    gives us a *Boolean output as either True or False*. If you wish to specify some
    criteria for when a null condition is `True`, you should use the `ISNULL` function
    with either a `CASE` statement or an `IF` statement. Edit your existing calculated
    field to comment out the `IFNULL` formula and use the following formula:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经理解了 `ZN` 和 `IFNULL` 函数，接下来你将查看 `ISNULL` 函数。`ISNULL` 函数如果表达式包含空值则返回 `True`；否则返回
    `False`。换句话说，`ISNULL` 函数给我们一个**布尔输出，要么是 True 要么是 False**。如果你希望指定一些条件，当空值条件为 `True`
    时，你应该使用 `ISNULL` 函数与 `CASE` 语句或 `IF` 语句一起使用。编辑现有的计算字段，注释掉 `IFNULL` 公式，并使用以下公式：
- en: '[PRE26]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Refer to the following screenshot:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下屏幕截图：
- en: '![Figure 7.55: A screenshot showing the syntax of the ISNULL function'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.55：显示 `ISNULL` 函数语法的屏幕截图](img/B16342_07_55.jpg)'
- en: '](img/B16342_07_55.jpg)'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_55.jpg](img/B16342_07_55.jpg)'
- en: 'Figure 7.55: A screenshot showing the syntax of the ISNULL function'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.55：显示 `ISNULL` 函数语法的屏幕截图
- en: Once you click `OK`, you see that you still get output for each `Month`. The
    `ISNULL` function, when used in the `IF` statement, will return `Zero if it the
    Null condition is True`; otherwise, it returns the `False condition, which is
    the field that we have specified`.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 `OK` 后，你会看到你仍然为每个 `Month` 获得了输出。当 `ISNULL` 函数在 `IF` 语句中使用时，如果为真，将返回 `Zero`；否则，它返回
    `False condition`，这是我们指定的字段。
- en: Creating Calculations across Data Sources
  id: totrans-420
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在数据源之间创建计算
- en: In earlier sections of this chapter, you have seen how to create and use calculations,
    but all these calculations were done within the same data source. Having all your
    data in one source would be an idealistic scenario; however, that may not always
    be the case, and you may have to deal with data coming from multiple sources.
    This means you may have to compute calculations across data sources, too.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的早期部分，你已经看到了如何创建和使用计算，但所有这些计算都是在同一个数据源内完成的。所有数据都在一个源中将会是一个理想化的场景；然而，情况可能并不总是如此，你可能需要处理来自多个源的数据。这意味着你可能还需要在数据源之间进行计算。
- en: In this section, you will focus on how to create calculations across data sources
    using data blending. You will also look at how to create and use calculated fields
    to join data. You have already seen the data blending and join functionality in
    previous chapters, and you will use that knowledge to create and use calculations
    across data sources.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将专注于如何使用数据混合来创建数据源之间的计算。你还将了解如何创建和使用计算字段来连接数据。你已经在之前的章节中看到了数据混合和连接功能，你将使用这些知识来创建和使用数据源之间的计算。
- en: 'You will use the `Modified CoffeeChain` data along with `Budget Sales for CofeeChain.xlsx`.
    These can be downloaded at the following links:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用 `Modified CoffeeChain` 数据以及 `Budget Sales for CofeeChain.xlsx`。这些可以在以下链接中下载：
- en: '[https://packt.link/EK3uu](https://packt.link/EK3uu).'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://packt.link/EK3uu](https://packt.link/EK3uu).'
- en: '[https://packt.link/Pqpah](https://packt.link/Pqpah).'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://packt.link/Pqpah](https://packt.link/Pqpah).'
- en: 'Once downloaded, load the files into Tableau Desktop. Use the `Microsoft Access`
    option to connect to the *CoffeeChain Query* table from the `Modified_CoffeeChain.mdb`
    data. Refer to the following screenshot:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，将文件加载到 Tableau Desktop 中。使用 `Microsoft Access` 选项从 `Modified_CoffeeChain.mdb`
    数据连接到 `*CoffeeChain Query*` 表。请参考以下截图：
- en: '![Figure 7.56: A screenshot showing the preview of the Modified CoffeeChain
    data'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.56：显示修改后的 CoffeeChain 数据预览的截图'
- en: '](img/B16342_07_56.jpg)'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_56.jpg)'
- en: 'Figure 7.56: A screenshot showing the preview of the Modified CoffeeChain data'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.56：显示修改后的 CoffeeChain 数据预览的截图
- en: 'Look at this data preview. Notice that the `Date` field is of a `DATETIME`
    data type, even though the timestamp is 00:00:00\. Once you familiarize yourself
    with this dataset, you will try to get the `Budget` data as well. To achieve this,
    click on the `Add` button in the left-hand side section of this data connection
    window and select the `Microsoft Excel` option to select `Budget Sales for CoffeeChain.xlsx`.
    This should create a cross-database join between the two. Refer to the following screenshot:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这个数据预览。注意，`Date` 字段是 `DATETIME` 数据类型，尽管时间戳是 00:00:00。一旦你熟悉了这个数据集，你将尝试获取 `Budget`
    数据。为了实现这一点，点击数据连接窗口左侧部分的 `Add` 按钮，并选择 `Microsoft Excel` 选项来选择 `Budget Sales for
    CoffeeChain.xlsx`。这应该在两个之间创建一个跨数据库连接。请参考以下截图：
- en: '![Figure 7.57 – A screenshot showing the preview of a cross-database join'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.57 – 显示跨数据库连接预览的截图'
- en: of CoffeeChain data and Budget Sales
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: CoffeeChain 数据和预算销售
- en: '](img/B16342_07_57.jpg)'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16342_07_57.jpg)'
- en: Figure 7.57 – A screenshot showing the preview of a cross-database join of CoffeeChain
    data and Budget Sales
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.57 – 显示 CoffeeChain 数据和预算销售跨数据库连接预览的截图
- en: Something has gone wrong with the join, indicated by the *red exclamation mark*
    and the lack of data to preview. This is because the `Date` field in the `Access`
    database is a `DATETIME` *field* whereas, the `Date` field in the Excel data is
    a `DATE` *field*. To use the `Date` field as a common linking field between both
    these datasets, it will have to be of the same data type. So, change the `DATETIME`
    field to a `DATE` field and then try to enable the join. Changing the datatype
    could be done in many ways; however, here, you will use the calculation method
    and will use this calculation to create a join between the two data sources.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 连接过程中出现了问题，这由*红色感叹号*和预览数据的缺失表示。这是因为`Access`数据库中的`Date`字段是一个`DATETIME` *字段*，而Excel数据中的`Date`字段是一个`DATE`
    *字段*。为了将`Date`字段作为这两个数据集之间的公共链接字段，它必须具有相同的数据类型。因此，将`DATETIME`字段更改为`DATE`字段，然后尝试启用连接。更改数据类型可以通过多种方式完成；然而，在这里，您将使用计算方法，并使用此计算在两个数据源之间创建连接。
- en: 'Begin by clicking the *red exclamation mark* and then clicking the dropdown
    under the left column in the window where you are defining the join criteria.
    Select the `Create Join Calculation...` option. Refer to the following screenshot:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 开始时，点击*红色感叹号*，然后点击您定义连接条件的窗口中左侧列下的下拉菜单。选择`创建连接计算...`选项。参见图表：
- en: '![Figure 7.58: A screenshot showing the Create Join Calculation option'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.58：显示创建连接计算选项'
- en: '](img/B16342_07_58.jpg)'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_58.jpg](img/B16342_07_58.jpg)'
- en: 'Figure 7.58: A screenshot showing the Create Join Calculation option'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.58：显示创建连接计算选项的屏幕截图
- en: 'Type the following formula:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下公式：
- en: '[PRE27]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Refer to the following screenshot:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 参见图表：
- en: '![Figure 7.59: A screenshot showing the Create Join Calculation formula'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.59：显示创建连接计算公式'
- en: for typecasting the Date field
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 用于类型转换日期字段
- en: '](img/B16342_07_59.jpg)'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_59.jpg](img/B16342_07_59.jpg)'
- en: 'Figure 7.59: A screenshot showing the Create Join Calculation formula for typecasting
    the Date field'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.59：显示用于类型转换日期字段的创建连接计算公式的屏幕截图
- en: 'Since the `Date` field in the Budget Sales data is already a `DATE` *data type*,
    select the `Date (Budget Sale)` field from the dropdown. Refer to the following
    screenshot:'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 由于预算销售数据中的`Date`字段已经是`DATE` *数据类型*，从下拉菜单中选择`Date (Budget Sale)`字段。参见图表：
- en: '![Figure 7.60: A screenshot showing the Date field in the Budget Sales data'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.60：显示预算销售数据中的日期字段'
- en: being used for joining
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 用于连接
- en: '](img/B16342_07_60.jpg)'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_60.jpg](img/B16342_07_60.jpg)'
- en: 'Figure 7.60: A screenshot showing the Date field in the Budget Sales data being
    used for joining'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.60：显示在预算销售数据中使用日期字段进行连接的屏幕截图
- en: You should see that the `Join` condition is resolved, and your dataset is now
    ready for use. The output of this join will be a single combined dataset and you
    can then create other calculations using this combined dataset.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到`Join`条件已解决，并且您的数据集现在已准备好使用。此连接的输出将是一个单一组合数据集，然后您可以使用此组合数据集创建其他计算。
- en: You will now use a calculation across data sources using data blending, where
    you first connect to these datasets independently and then combine them on the
    fly as and when required.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将使用数据混合在数据源之间进行计算，首先独立连接到这些数据集，然后在需要时即时将它们组合。
- en: So, you have the `Modified CoffeeChain` data and `Budget Sales for CoffeeChain`
    data, and you want to use these independently across your workbook. This won't
    present issues until you need to get data from both these data sources in one
    single sheet. For example, imagine you want to find the percentage of a target
    you have achieved across months of a year. You have the `Sales` field in the `Modified
    CoffeeChain` data and `Budget Sales` in the `Budget Sales for CoffeeChain` data;
    to find the percentage of the target achieved across those months, you need to
    create a new calculated field. Name this new calculated field `% Target Achieved`.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您有`Modified CoffeeChain`数据和`Budget Sales for CoffeeChain`数据，并且您想在您的工作簿中独立使用这些数据。这不会引起问题，直到您需要从这两个数据源在一个单独的表格中获取数据。例如，假设您想找到一年中各个月份实现目标的百分比。您在`Modified
    CoffeeChain`数据中有`Sales`字段，在`Budget Sales for CoffeeChain`数据中有`Budget Sales`；为了找到这些月份实现目标的百分比，您需要创建一个新的计算字段。将此新计算字段命名为`%
    Target Achieved`。
- en: 'Begin by connecting to the `Modified CoffeeChain` data independently and then
    connect to the `Budget Sales for CoffeeChain` data. You should get two separate
    data sources in your `Data` pane. Refer to the following screenshot:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 首先独立连接到 `Modified CoffeeChain` 数据，然后连接到 `Budget Sales for CoffeeChain` 数据。您应该在
    `Data` 面板中获得两个独立的数据源。参考以下截图：
- en: '![Figure 7.61: A screenshot showing Budget Sales and Modified CoffeChain'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.61: 展示预算销售和修改后的咖啡链的截图]'
- en: as separate and independent data sources
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 作为独立数据源
- en: '](img/B16342_07_61.jpg)'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_61.jpg](img/B16342_07_61.jpg)'
- en: 'Figure 7.61: A screenshot showing Budget Sales and Modified CoffeChain as separate
    and independent data sources'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.61: 展示预算销售和修改后的咖啡链作为独立数据源的截图]'
- en: 'Once you have both these data sources within Tableau Desktop, drag the `Date`
    field from the `Modified CoffeeChain` data into the `Rows` shelf, then drop the
    `Product` field from the same data source into the `Rows` shelf just after `YEAR(Date)`.
    Next, double-click on `Sales` from the `Measures` pane of the `Modified CoffeeChain`
    data. Then click on the `Budget Sales for CoffeeChain` data in the `Data` pane
    to enable the dimensions and `Measures` for that data source. You should now notice
    the blending link enabled for the `Date` field, as well as the `Product` field.
    Keep these links as is, then double-click the `Budget Sales` field from the `Measures`
    pane of the `Budget Sales for CoffeeChain` data. The view updates, as shown in
    the following screenshot:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在 Tableau Desktop 中拥有这两个数据源，将 `Date` 字段从 `Modified CoffeeChain` 数据源拖动到 `Rows`
    面板，然后从同一数据源将 `Product` 字段拖动到 `Rows` 面板中 `YEAR(Date)` 之后。接下来，双击 `Modified CoffeeChain`
    数据的 `Measures` 面板中的 `Sales`。然后点击 `Data` 面板中的 `Budget Sales for CoffeeChain` 数据以启用该数据源的维度和
    `Measures`。现在，您应该会注意到 `Date` 字段和 `Product` 字段启用了混合链接。保持这些链接不变，然后双击 `Budget Sales`
    字段，它位于 `Budget Sales for CoffeeChain` 数据的 `Measures` 面板中。视图将更新，如下面的截图所示：
- en: '![Figure 7.62: A screenshot showing the results of data blending'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.62: 展示数据混合结果的截图]'
- en: '](img/B16342_07_62.jpg)'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_62.jpg](img/B16342_07_62.jpg)'
- en: 'Figure 7.62: A screenshot showing the results of data blending'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.62: 展示数据混合结果的截图]'
- en: 'Now, create a new calculated field called `% Target Achieved` in your `Budget
    Sales for CoffeeChain` data. Drag the `Sales` field from the `Modified CoffeeChain`
    data into the calculation box and divide this by `SUM([Budget Sales])`. The formula
    is as follows:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在您的 `Budget Sales for CoffeeChain` 数据中创建一个新的计算字段，称为 `% Target Achieved`。将
    `Modified CoffeeChain` 数据中的 `Sales` 字段拖动到计算框中，并将其除以 `SUM([Budget Sales])`。公式如下：
- en: '[PRE28]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Refer to the following screenshot:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下截图：
- en: '![Figure 7.63: A screenshot showing the formula of the % Target Achieved calculation'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.63: 展示 % Target Achieved 计算公式的截图]'
- en: '](img/B16342_07_63.jpg)'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_63.jpg](img/B16342_07_63.jpg)'
- en: 'Figure 7.63: A screenshot showing the formula of the % Target Achieved calculation'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.63: 展示 % Target Achieved 计算公式的截图]'
- en: 'The field `Sales` is shown as `[Sheet1 (Modified CoffeeChain)].[Sales]`, which
    shows that the field is coming from the `Modified CoffeeChain` data. Click `OK`
    and save this calculation. Change `Default Properties` to format this new field
    to show `Percentage with 2 decimals`. This can be done by using the `Default Properties`
    > `Number Format` option, which is available when right-clicking on the field
    in the `Measures` pane. Now, drop this new calculated field in the view and your
    view should update, as shown in the following screenshot:'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 字段 `Sales` 显示为 `[Sheet1 (Modified CoffeeChain)].[Sales]`，这表明该字段来自 `Modified
    CoffeeChain` 数据。点击 `OK` 并保存此计算。将 `Default Properties` 更改为格式化此新字段以显示 `Percentage
    with 2 decimals`。这可以通过使用 `Default Properties` > `Number Format` 选项完成，该选项在右键单击
    `Measures` 面板中的字段时可用。现在，将此新计算字段拖放到视图中，您的视图应更新，如下面的截图所示：
- en: '![Figure 7.64: A screenshot showing the output of the % Target Achieved calculation'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.64: 展示 % Target Achieved 计算结果的截图]'
- en: '](img/B16342_07_64.jpg)'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_64.jpg](img/B16342_07_64.jpg)'
- en: 'Figure 7.64: A screenshot showing the output of the % Target Achieved calculation'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.64: 展示 % Target Achieved 计算结果的截图]'
- en: As you see in the preceding screenshot, there are some products where the `%
    Target Achieved` is less than 100%, and there are certain products where the `%
    Target Achieved` is more than 100%. You have now learned to create calculations
    across data sources. A point to remember here, is that when you do this, the fields
    you use always need to be aggregated.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，有些产品的 `% Target Achieved` 比率低于 100%，而有些产品的 `% Target Achieved` 比率高于
    100%。您现在已经学会了在数据源之间创建计算。这里要记住的一个要点是，当您这样做时，您使用的字段始终需要聚合。
- en: You will now try some activities based on what you have learned so far.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在将尝试一些基于您所学内容的练习。
- en: Note
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Now, even though we have tried to cover a lot of the Tableau functions, we
    still haven''t been able to go through all the functions that Tableau has to offer.
    If you wish to know more about all the functions that Tableau has to offer, then
    you can look at the following links:'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，尽管我们已经尝试覆盖许多Tableau函数，但我们仍然没有能够遍历Tableau所能提供的所有函数。如果您想了解更多关于Tableau所能提供的所有函数的信息，那么您可以查看以下链接：
- en: '[https://help.tableau.com/current/pro/desktop/en-us/functions_all_categories.htm](https://help.tableau.com/current/pro/desktop/en-us/functions_all_categories.htm)'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://help.tableau.com/current/pro/desktop/en-us/functions_all_categories.htm](https://help.tableau.com/current/pro/desktop/en-us/functions_all_categories.htm)'
- en: '[https://help.tableau.com/current/pro/desktop/en-us/functions_all_alphabetical.htm](https://help.tableau.com/current/pro/desktop/en-us/functions_all_alphabetical.htm)'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://help.tableau.com/current/pro/desktop/en-us/functions_all_alphabetical.htm](https://help.tableau.com/current/pro/desktop/en-us/functions_all_alphabetical.htm)'
- en: 'Activity 7.01: Calculating the Profit Margin'
  id: totrans-480
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动第7.01：计算利润率
- en: As a data analyst, you may encounter a scenario where you are required to compute
    profit margins using the `Profit and Sales` field and filter this `Profit Margin`
    below a certain threshold. The aim of this activity is to calculate the `Profit
    Margin`, which is computed by dividing `Profit` by `Sales`. Once you have the
    `Profit Margin` computed, you want to filter products and only display the `Profit
    Margin` for the `Xerox` product. Finally, you want to filter the `Xerox` products,
    and only look at those where the `Profit Margin` is more than 45%.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据分析师，您可能会遇到需要使用`Profit and Sales`字段计算利润率并过滤此`Profit Margin`低于某个阈值的场景。这个活动的目的是计算`Profit
    Margin`，它是通过将`Profit`除以`Sales`来计算的。一旦计算出`Profit Margin`，您希望过滤产品，只显示`Xerox`产品的`Profit
    Margin`。最后，您想过滤`Xerox`产品，并只查看利润率超过45%的产品。
- en: 'Steps for completion:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 完成步骤：
- en: For this activity, use the `Orders` data from the *Sample-Superstore.xlsx* file.
  id: totrans-483
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个活动，使用来自`Sample-Superstore.xlsx`文件的`Orders`数据。
- en: Create a table/tabular view to show `Product Name`, `Profit`, and `Sales`.
  id: totrans-484
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个表格视图来显示`Product Name`、`Profit`和`Sales`。
- en: Create a calculated field on `Product Name` to identify the `Xerox` products
    and group the rest of the products as `Others`.
  id: totrans-485
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Product Name`上创建一个计算字段来识别`Xerox`产品，并将其他产品分组为`Others`。
- en: Use this new calculated field to filter the table to show only the `Xerox` products.
  id: totrans-486
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用这个新的计算字段来过滤表格，只显示`Xerox`产品。
- en: Then create another calculated field to compute the `Profit Margin`, which will
    be derived by dividing the `Profit` values by the `Sales` values.
  id: totrans-487
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后创建另一个计算字段来计算`Profit Margin`，这将通过将`Profit`值除以`Sales`值来得出。
- en: Add this new calculated field into the view and make sure to change the number
    format to show percentages with two decimals.
  id: totrans-488
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这个新的计算字段添加到视图中，并确保将数字格式更改为显示两位小数的百分比。
- en: 'Use this new calculated field to filter the view to show the `Profit Margin`
    above 45% and sort the final output in ascending order of `Profit Margin`. Refer
    to the following screenshot:'
  id: totrans-489
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用这个新的计算字段来过滤视图，以显示利润率超过45%的`Profit Margin`，并按`Profit Margin`升序排序最终输出。请参考以下截图：
- en: '![Figure 7.65: A screenshot showing the expected output of Activity 7.01'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.65：显示活动7.01预期输出的截图](img/B16342_07_65.jpg)'
- en: '](img/B16342_07_65.jpg)'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_65.jpg](img/B16342_07_65.jpg)'
- en: 'Figure 7.65: A screenshot showing the expected output of Activity 7.01'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.65：显示活动7.01预期输出的截图
- en: Note
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The solution to this activity can be found here: [https://packt.link/CTCxk](https://packt.link/CTCxk).'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 这个活动的解决方案可以在以下链接找到：[https://packt.link/CTCxk](https://packt.link/CTCxk)。
- en: 'Activity 7.02: Calculating the Percentage Achievement with Respect to Budget
    Sales'
  id: totrans-495
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动第7.02：计算与预算销售额的百分比完成情况
- en: 'As data analysts, you may often be required to compare actual sales with budgeted
    sales, to determine performance. In this activity, you will find out what percentage
    of budget sales targets have been achieved for the year 2012\. You will use the
    *CoffeeChain Query* table from the `Sample-Coffee Chain.mdb` dataset. The data
    can be downloaded from the following link for this activity: [https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=TrYFWQ](https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=TrYFWQ).'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据分析师，您可能会经常需要比较实际销售额与预算销售额，以确定绩效。在这个活动中，您将找出2012年实现了多少预算销售额目标。您将使用来自`Sample-Coffee
    Chain.mdb`数据集的`CoffeeChain Query`表。此活动的数据可以从以下链接下载：[https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=TrYFWQ](https://1drv.ms/u/s!Av5QCoyLTBpnmkPL8Yx_0_2KtrG4?e=TrYFWQ)。
- en: Use the `Sample-Coffee Chain.mdb` data.
  id: totrans-497
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`Sample-Coffee Chain.mdb`数据。
- en: Create a bar chart to show `Sales` across `Products` for the year 2012.
  id: totrans-498
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个柱状图来展示2012年`产品`的`销售额`。
- en: Create a calculated field to find out the percentage `Achievement of Actual
    Sales` with respect to the `Budget Sales` for all the `Products` displayed in
    the view.
  id: totrans-499
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个计算字段，以找出所有在视图中显示的`产品`相对于`预算销售额`的`实际销售额完成率`百分比。
- en: 'Color code the bars with respect to `% Achievement` in such a way that `Products`
    with less than 95% `Achievement` are called `<95% of Target achieved` (color-coded
    orange). Those with more than 100% `Achievement` are called `>100% Target achieved`
    (color-coded gray). Those between 95% and 100% `Achievement` are called `Between
    95% to 100% Target` achieved (color-coded blue). Refer to the following screenshot:'
  id: totrans-500
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据百分比`完成率`对柱状图进行着色，使得完成率低于95%的`产品`被称为`完成率低于95%的目标`（着色为橙色）。完成率超过100%的被称为`完成率超过100%的目标`（着色为灰色）。完成率在95%到100%之间的被称为`完成率在95%到100%之间`（着色为蓝色）。请参考以下屏幕截图：
- en: '![Figure 7.66: A screenshot showing the expected output of Activity 7.02'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.66：显示活动7.02预期输出的屏幕截图'
- en: '](img/B16342_07_66.jpg)'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16342_07_66.jpg](img/B16342_07_66.jpg)'
- en: 'Figure 7.66: A screenshot showing the expected output of Activity 7.02'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.66：显示活动7.02预期输出的屏幕截图
- en: Note
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The solution to this activity can be found here: [https://packt.link/CTCxk](https://packt.link/CTCxk).'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 本活动的解决方案可以在以下链接找到：[https://packt.link/CTCxk](https://packt.link/CTCxk)。
- en: Summary
  id: totrans-506
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you explored some important aspects involved in creating and
    using calculations in Tableau and studied the difference between aggregate and
    non-aggregate fields. You looked at numeric, string, and date calculations, and
    learned to write logic statements and handle null values. Finally, you looked
    at how to use these calculations across data sources.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你探索了在Tableau中创建和使用计算的一些重要方面，并研究了聚合字段和非聚合字段之间的差异。你了解了数值、字符串和日期计算，并学习了如何编写逻辑语句和处理空值。最后，你了解了如何跨数据源使用这些计算。
- en: In upcoming chapters, you will move on to more advanced table and level of detail
    calculations, which will allow you to do even more with your data.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，你将进入更高级的表格和详细级别计算，这将使你能够对你的数据进行更多操作。
