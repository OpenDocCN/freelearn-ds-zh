- en: Linking Data together
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Joining two tables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Labeling features using a joined table
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Querying data in a joined table
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and using a Relate
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joining features spatially
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and using a relationship class using existing data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You now know that GIS data includes more than just what you may see in a map.
    Each layer has additional information linked to it which is stored in an Attribute
    Table. Also, not all data you display in a map is stored in a traditional GIS
    format. Some may be stored in standalone tables or even spreadsheets. These can
    also be displayed in a map if they include an address or *x* and *y* coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: However, there is a lot data out there in various databases which may not have
    *x* and *y* coordinates, or an address, or even be part of our GIS, but we need
    to be able to use that information to perform queries, display information, or
    conduct analysis in the GIS. This data may come from other systems, such as tax
    appraisal, permitting, inspections, work order, and asset management systems.
    If we want to use data stored in these systems we must be able to link it to our
    GIS data. ArcGIS Pro provides a couple of methods to do this, Join and Relate.
  prefs: []
  type: TYPE_NORMAL
- en: At other times, we may need to transfer or link data together that is in our
    GIS. ArcGIS Pro supports several tools which allow you to do this, including a
    Spatial Join and creating relationship classes within a geodatabase.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will learn the steps needed to link data in ArcGIS Pro
    to increase the capabilities of your datasets. You will learn how to create and
    use joins and relates. You will perform a spatial join to combine attributes between
    two layers based on a spatial relationship. Lastly, you will learn how to create
    and configure a relationship class within a geodatabase. You will start with a
    simple relationship class by creating an annotation feature class which is linked
    to another layer. Then you will create a relationship class manually, which will
    link two feature classes together.
  prefs: []
  type: TYPE_NORMAL
- en: Joining two tables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Join is one of two basic methods which can be used to link data in ArcGIS Pro.
    Joins link two datasets together to create a single virtual dataset within a single
    map in a project. This allows you to use the joined data to query, label, and
    symbolize using the information from both joined datasets.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, you will join the Parcel layer to a table which contains a list
    of owner names. You will learn the requirements needed to join two tables and
    how to complete the join.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this recipe, you will need to ensure that you have installed the book data
    and have ArcGIS Pro installed. An ArcGIS Pro Basic license level will be sufficient
    for this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To begin, you will need to start ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the ArcGIS Pro start window, click on Open another project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select Computer from the Open window and then click Browse in the area on the
    right:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/387b3e86-65c1-4db8-a245-abaa85a2fd6c.png)'
  prefs: []
  type: TYPE_IMG
- en: Navigate to `C:\Student\ArcGISProCookbook\Chapter3\Joining Data` by clicking
    on C:\ in the area on the left of the Open Project window. Then double-click on
    Student, ArcGISProCookbook, Chapter3, and Joining Data folders.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Joining Data.aprx project file and click OK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The project will open with a single map named City of Thomasville. The map contains
    two layers, City Limits and Parcels, plus the Topographic basemap. First you will
    review the information contained in the Attribute Table for the Parcel layer.
  prefs: []
  type: TYPE_NORMAL
- en: In the Contents pane, right click on the Parcels layer and select Attribute
    Table from the menu that appears. The Attribute Table for the Parcels layer should
    open in a window located at the bottom of the map view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eb92faeb-8057-4c50-ac0f-e29b6d558afc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Take a moment to look at the fields the Attribute Table contains, and answer
    the following question:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What fields does the Parcels Attribute Table contain?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the table contains information about the parcel, such as the
    **Parcel Identification Number** (**PIN**), RealKey, OwnerKey, and more. It does
    not, however, contain any information about who owns the parcels. However, you
    do know that information is available in the **Computer Aided Mass Appraisal**
    (**CAMA**) system located in the Tax Appraisal Office for the County.
  prefs: []
  type: TYPE_NORMAL
- en: They have provided you with a table of all the land owners in the County. You
    now need to join it to your Parcels layer.
  prefs: []
  type: TYPE_NORMAL
- en: In the Catalog pane, normally located on the right side of the interface, expand
    the Databases folder by clicking on the small arrowhead to the left.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the Thomaston.gbd so that you can see its contents. You should see at
    least three feature classes (CityLimits, Parcels,Â and Street_CL) and a couple
    of stand-alone tables (Owners and Parcels_Sales).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Owners table and select Add to Current Map.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3740f774-d297-4758-b4dc-91d0a4a39cbc.png)'
  prefs: []
  type: TYPE_IMG
- en: The newly added table should appear in your Contents pane at the bottom of the
    list. Now you will look at the data contained within this newly added table.
  prefs: []
  type: TYPE_NORMAL
- en: In the Contents pane, right click on the Owner table you just added and select
    Open. The Owners table should open in the same area as the Parcels Attribute Table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Review the Owners table, paying close attention to what fields it contains.
    Then answer the following question:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What fields does the Owner table contain?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, this table does have information about all the land owners in
    the County. However, it does not have any information about the parcels they own.
    In order to join the Owner information to the Parcels, you must identify a **key
    field**. A key field is a field in each table which contains data common to the
    two tables you are attempting to link. Now you will identify a key field in each
    table, which you will use to link them together.
  prefs: []
  type: TYPE_NORMAL
- en: Key fields are not required to have the same names in both tables. The names
    can be different. However, they must be the same data type and contain the same
    data values. By the same data values, that means they must be exactly the same.
    This includes capitalization and the number of spaces if the key fields contain
    text. This why it is often best to use numeric values if possible.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the table view area, click on the tab at the top of the table which says
    Owners. Hold your mouse button down and begin to drag it downward. A series of
    icons should appear in the middle of the table view. Drag your mouse to the icon
    which has the filled beige area located on the right side as shown ahead. Then
    release your mouse:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/2e7744a1-9462-4f86-9efe-845ffb6fab57.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Click on Owners tab and drag to docking icon
  prefs: []
  type: TYPE_NORMAL
- en: You should now see the two tables side by side, as shown in the following image.
    This allows you to see data in both tables at the same time.
  prefs: []
  type: TYPE_NORMAL
- en: '**![](img/2bf17ff9-5db2-4513-b0cc-d8f1d38c3ac6.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Two tables docked side by side
  prefs: []
  type: TYPE_NORMAL
- en: In ArcGIS Pro, you can actually drag the tables out so that they are viewable
    individually in their own window. These individual windows can then be positioned
    anywhere in your display, including on other monitors. They can also be sized
    individually as well. This can make it easier to view the multiple tables at one
    time.
  prefs: []
  type: TYPE_NORMAL
- en: In the Parcels table, right click on the Ownerkey field and select Sort Descending.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Owners table, right click on the OwnKey field and select Sort Descending.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Review and compare the values for these fields in each table, then answer the
    following question:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: These two fields appear to contain the same values?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have verified the two fields contain like values, you need to verify
    the field types are the same.
  prefs: []
  type: TYPE_NORMAL
- en: 'Right-click on the OwnerKey field in the Parcels table and select Fields from
    the menu that appears:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/f34e048e-3b9c-42fc-bb18-23cadda19827.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Perform the same operation on the OwnKey in the Owners table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your table view should now look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '**![](img/171f0e55-d9c6-495a-81b4-523b7db9c55d.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Table design views side by side
  prefs: []
  type: TYPE_NORMAL
- en: Verify that the Data Type is the same for the Ownerkey field in the Parcels
    table and the OwnKey in the Owners table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As you can see, the fields are both a Double data type. Since the fields contain
    the same data values and the field types are the same, these fields can be used
    to link the two tables. Now, it is time to link them.
  prefs: []
  type: TYPE_NORMAL
- en: Close the Tables and the Fields tab by clicking on the small X.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is not required to close the tables before joining them. You can leave them
    open if desired. It is just cleaner to close them before you join, to reduce screen
    clutter.
  prefs: []
  type: TYPE_NORMAL
- en: In the Contents pane, right click on the Parcels layer. Go to Joins and Relates
    and select Add Join.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b6f9181e-aae6-43c7-8f81-6010b1342e21.png)'
  prefs: []
  type: TYPE_IMG
- en: The Geoprocessing pane should open with the Add Join tool.
  prefs: []
  type: TYPE_NORMAL
- en: Verify that the Layer Name or Table View in the Add Join tool is set to Parcels.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the Input Join Field, select OwnerKey.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the Join Table, select Owners by clicking on the small drop-down arrow in
    the cell. The Owners table may automatically be populated into the cell. If so,
    you do not need to change it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Output Join Field to OwnKey using the drop-down arrow if needed. It
    may be automatically set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Verify that the Add Join tool looks like the following screenshot. If it does,
    click Run:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/63eebde1-5cbb-4cac-8a83-fd10a74cb019.png)'
  prefs: []
  type: TYPE_IMG
- en: Close the Geoprocessing pane once the Add Join tool has completed successfully
    by clicking on the small X in the upper-right corner of the pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Parcels layer in the Contents pane and select Attribute Table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the scroll bar at the bottom of the Parcels table, scroll through the
    table fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What do you see now that you have joined the Parcel and Owners
    table?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the fields that were on the Owners table have now been added
    to the Parcels Attribute Table. Now that those fields have been added, you can
    use that information to locate all parcels owned by a specific owner, or label
    parcels with the owner. Letâs put that to the test. Â You will start with labeling
    the parcels with fields from the joined table in the next recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Close the Parcels table by clicking on the small X in the tab which shows the
    table name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Project tab in the ribbon, and click on Save, located in the panel
    on the left side.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you are continuing to the next recipe, keep ArcGIS Pro open. If you are not
    you may close ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, you joined the Owners table to the Parcels table. ArcGIS Pro
    links these two tables together, based on a key field in each table. The key fields
    are not required to have the same name, but must have the exact same values and
    be the same data type. ArcGIS Pro then compares the two tables and where the values
    are identical, it adds those fields and values to the primary table in the map.
    Where the values are not identical, it leaves the field values for the joined
    fields blank or null.
  prefs: []
  type: TYPE_NORMAL
- en: The Join only exists in the map in which you create it. It will not be applied
    to other maps within the ArcGIS Pro project. It is also not permanently applied
    to the feature class or table. Join works best when you want to link data which
    comes from other systems or datasets which will not be maintained in your GIS
    directly, such as the Owners table, which is maintained in the Countyâs CAMA system.
    You just get an updated download of the data on a regular basis and replace the
    old table with the new one, so that when you open the map which contains the join,
    you always see the most current available information.
  prefs: []
  type: TYPE_NORMAL
- en: Labeling features using a joined table
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you have learned how to join tables, and seen how it links them to
    provide more information, what can you do with that information? In short, you
    can do anything with the joined information that you can do with the normal attributes
    in the layers Attribute Table.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, you will learn how you label features using the data from the
    joined table. You will label each parcel with its PIN and Owner Name. You will
    use the new Arcade language to do this. You will learn more about Arcade in [Chapter
    11](6de6f9c1-9e73-4d0d-98b3-1b27818c49c5.xhtml), *Introducing Arcade*.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will need to have completed the previous recipe before you can begin this
    one.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you closed ArcGIS Pro after completing the previous recipe, open the `Joining
    Data.aprx` project by following the same instructions as shown in the beginning
    of the previous recipe.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Bookmarks on the Map tab in the ribbon. Select the Labeling bookmark.
    This will zoom you in to an area located in the center of the City.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Parcels layer in the Contents pane so that the Feature Layer Contextual
    menu appears with three new tabs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Labeling tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6e656114-1fcd-4477-8f18-49cb5b9e4490.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on the Label button located in the Layer group on the Labeling tab. It
    should be the located on the far-left side of the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Text will appear in the map showing the PIN for each parcel. The values being
    displayed are being pulled from the Attribute Table for the Parcels layer. If
    you look in the Label Class group on the Labeling tab, you will see a setting
    for Field. It is set to Parcels.PIN. This means that the values being displayed
    are those found in the PIN field from the original Parcels table. You will now
    build an expression using the Arcade language, which will label each parcel with
    its PIN from the Parcels table and with its owner from the joined Owners table.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Expression button located to the right of the Field cell in the
    Label Class group. The Label Class pane should appear on the right of the interface.
    This is where you will build your labeling expression:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/703bf266-1bf9-42d3-8cdf-c74ed89bdbce.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click in form of `$feature[âParcels.Pinâ]`, the expression area in the Label
    Class pane. Type `âPIN: â+` in the expression area, as shown ahead:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/841e32ec-0c3d-42d1-9cd0-7ad57dec8c84.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Validate button located at the bottom of the expression area. It
    looks like a green check mark. If it says Expression is valid, continue. If it
    does not, double check your expression against the previous graphic to make sure
    you typed in the correct syntax.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the expression area, add the following to the end of the expression you
    have already created:Â `+Textformatting.Newline+"Owner: "`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Fields window in the Labeling Class pane, scroll down until you see Owners.LASTNAME.
    Double click on Owners.LASTNAME to add it to the expression.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your full labeling expression should now say:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Click on the Validate button once again to verify your syntax. If it says,Â Your
    expression is valid, click Apply. If it does not, verify your expression. If you
    continue to have issues, read the following tip:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you are having issues creating the expression, you can load one that has
    already been created. Just click on the Import button located next to the validate
    button and navigate to `C:\Student\ArcGISProCookbook\Chapter3\Joining Data. Select
    the PIN_Owner_Label_Expression.lxp`. Then click OK to import the expression.
  prefs: []
  type: TYPE_NORMAL
- en: Save your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have just labeled each parcel using the PIN field found in the original
    Parcels Attribute Table and the LastName field from the Owners table. You also
    added descriptive text to the label to make it easier to know what the labels
    were. Now you will clean up your labels so they are easier to read.
  prefs: []
  type: TYPE_NORMAL
- en: ArcGIS Pro supports several languages for writing labeling expressions. In addition
    to Arcade, you can write expressions using Python, VBScript, and Jscript. Labeling
    expressions written for ArcMap and saved to expression files (`.exp`) are not
    compatible with ArcGIS Pro.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Position tab in the Label Class pane, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6c74fb81-07a0-401a-b85a-010b520f83a9.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on the Position button in the Position tab in the Label Class pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If required, expand the Placement option and select Land Parcel placement from
    the drop-down menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Locate where it says Horizontal in polygon and click on the drop-down arrow.
    Select Straight in polygon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Fitting Strategy button located at the top of the Labeling Class
    pane. It looks like a Knight chess piece.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand Reduce size by clicking on the small arrowhead.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the box next to Reduce font size to enable this function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Set the following parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Font size reduction:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lower limit: 4.0'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step interval: 1.0'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Font width compression:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lower limit: 60'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step interval: 5.0'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Label Class pane should now look like the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3324d95e-3cb8-46d8-966d-26631e334ba7.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on the Labeling tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Visibility Range group, click on the drop-down arrow for Out Beyond and
    select <Current>. This will mean that the labels you just configured will only
    appear when you zoom in to the current scale of your map. If you zoom out to show
    a larger area, the labels will not be displayed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/88526b58-be13-4b03-b9b4-b2717817bdc0.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Save your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this recipe, you labeled the parcels in the map with values from the PIN
    field in the Parcels Attribute Table and the LASTNAME field in the Owners table
    which you had joined to the parcels in the last recipe. You did this using Esriâs
    new Arcade expression language.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the first part of your expression, you added descriptive text which allowed
    users to know what the labeled values were. You did this in Arcade by using double
    quotes. This tells ArcGIS Pro to simply display the text values found inside the
    double quotes. For example, your expression contained `âPIN: â`. This produced
    a label which showed up in the map a `PIN:` .'
  prefs: []
  type: TYPE_NORMAL
- en: 'This was then followed up with a reference to a database field. In Arcade,
    you did this using the `+` to indicate another part of the expression, followed
    by `$feature[âParcels.PIN]`. This displays the value found in the PIN field within
    the Parcels Attribute Table. The `+` sign must be used between each part of the
    expression. You then displayed the owner name on another line in the label using
    `Textformatting.Newline` in your expression. Â Once you set the owner name to be
    displayed on a separate line, you add more descriptive text by including `âOwner:
    â` in your expression. Lastly, you displayed the owners name by calling to the
    LASTNAME field in the joined Owners table by including `$feature[âOwners.LASTNAMEâ]`
    at the end of your expression. This produced a label for each parcel that looked
    like this in the map:'
  prefs: []
  type: TYPE_NORMAL
- en: 'PIN: `T22 028`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Owner: `Unknown`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You then adjusted several configuration settings for the labels in the Label
    Class pane to make the labels fit in the parcels better and to be easier to read.
    You did this by setting the placement option to Land parcel placement. This automatically
    applies some settings that are preconfigured in ArcGIS Pro for placing text within
    a parcel. This cleaned up several of the overlapping labels, but left many parcels
    without a label.
  prefs: []
  type: TYPE_NORMAL
- en: So, next you set the positioning to be Straight in a polygon as opposed to the
    default Horizontal in a polygon. This allows ArcGIS Pro to fit labels diagonally
    within the polygon if needed, first adjusting the size of the font. This allowed
    ArcGIS Pro to label a few more parcels, but still not all of them.
  prefs: []
  type: TYPE_NORMAL
- en: Next, you moved over to the Fitting Strategy to adjust the font size for your
    labels. You enabledÂ Reduce font size. This allowed ArcGIS Pro to automatically
    resize the font within the parameters you designated to help fit the label within
    the parcels. By making this adjustment you were able to get all the parcels in
    the view labeled.
  prefs: []
  type: TYPE_NORMAL
- en: Querying data in a joined table
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Labeling is not the only thing you can do with a joined table. You can also
    use the joined information to perform queries and analysis. In this recipe, you
    will perform a query to locate all the parcels owned by the City of Thomaston.
    You will then export that information to a spreadsheet using a geoprocessing tool.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You must have completed the recipe titled *Joining two tables* from this chapter
    before you can perform this recipe. You will also need to have Microsoft Excel
    or a similar application installed which will open a spreadsheet.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you closed ArcGIS Pro after completing the previous recipe, open the `Joining
    Data.aprx` project by following the same instructions as shown in the beginning
    of the previous recipe. Otherwise continue with this recipe.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Map tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Full Extent button in the Navigate group on the Map tab. It looks
    like a small globe.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Select by Attributes tool in the Selection group on the Map tab
    in the ribbon. This will open the Select Layer by Attribute tool in the Geoprocessing
    pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Layer Name or Table View to Parcels using the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure the Selection type is set to New selection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under Expression, click on the Add Clause button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2a5f234f-3a7c-4624-a409-f49480993b76.png)'
  prefs: []
  type: TYPE_IMG
- en: Set the Field to LASTNAME using the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure the operator is set to is Equal to.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the last cell, either type City of Thomaston, or pick it from the list of
    values shown with the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/a9389df5-ddf7-4aa2-b418-2687d6a5a844.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Verify that your clause looks like the preceding screenshot and click Add.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Verify button located below the Expression to make sure your syntax
    is correct. The Verify button looks like a green check mark.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If your SQL expression is valid, click Run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the List by Selection button located at the top of the Contents pane.
    The button is three polygons, one blue and two white. Look at the number to the
    right of Parcels. Verify that you have selected 84 parcels.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have just selected all the parcels owned by the City of Thomaston using
    a Select by Attributes query. You were able to do that using data from the joined
    Owners table.
  prefs: []
  type: TYPE_NORMAL
- en: If you are already familiar with writing SQL where clauses, you can click on
    the small SQL button located under Expression and manually type the query you
    just built. The proper syntax would be `Owners.LASTNAME = 'City of Thomaston'`.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the small arrow in a circle located at the top of the Geoprocessing
    pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a4481b26-8d5a-4767-b87a-f4be979f1018.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on the Toolboxes tab located near the top of the Geoprocessing pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the Conversion Tools toolbox by clicking on the small arrowhead.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the Excel toolset using the same method.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the Table to Excel python script.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the toolboxes, different icons indicate different types of tools. Hammers
    indicate system tools. Scrolls indicate python scripts. Series of connected squares
    indicate models created with ModelBuilder.
  prefs: []
  type: TYPE_NORMAL
- en: Set the Input Table to Parcels using the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the Output Excel File, click on the Browse button located at the end of
    the cell.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Save As window that appears, navigate to the MyProjects folder located
    in `C:\Student\ArcGISProCookbook\`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type `Parcels owned by Thomaston` into the File Name cell.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify that your Save As window looks similar to the following screenshot and
    click Save. The folders you see in the MyProject folder will be different.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/29f1fe79-7f1e-4d43-8eda-97c82e7cded7.png)'
  prefs: []
  type: TYPE_IMG
- en: Your Table to Excel tool should look like the following. If it does, click Run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2023bb4e-cbed-4924-994f-8cb7745b86d5.png)'
  prefs: []
  type: TYPE_IMG
- en: When you run a geoprocessing tool with features selected, the tool only works
    on the selected features. So, in this case, you only exported the parcels which
    are owned by the City of Thomaston to a spreadsheet.
  prefs: []
  type: TYPE_NORMAL
- en: Open File Explorer. It is normally located on your taskbar near the Start button,
    and looks like a file folder in a holder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the tree on the left, select This PC or My Computer depending on what operating
    system you are running.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on your C:\ drive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to `C:\Student\ArcGISProCookbook\MyProjects`. You should see the spreadsheet
    you just created from ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the Parcels_owned_by_Thomaston.xls file to open it. Take a moment
    to explore the spreadsheet to see what you have created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you are done reviewing the spreadsheet, close it and return to ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click back on the Map tab in ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Clear button in the Selection group on the Map tab in the ribbon.
    This deselects all selected features.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Close the Geoprocessing pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save your project and close ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this recipe, you queried all the parcels owned by the City of Thomaston and
    then exported the selected list to a spreadsheet. To query the parcels owned by
    the City, you created an SQL where clause using the query builder. This allows
    you to create SQL expressions without having to know SQL.
  prefs: []
  type: TYPE_NORMAL
- en: '**SQL** stands for **Structured Query Language**. SQL is the standard language
    used by databases to communicate. It allows you to perform many functions within
    a relational database. Where clauses allow you to select records (or features
    within a GIS) which meet specific criteria. In the recipe you just completed,
    the criteria was where the Parcels owner equaled the City of Thomaston, thus why
    it is called a where clause. Like all languages, SQL has a specific syntax which
    must be followed to work. The ArcGIS Pro query builder you used knows the syntax
    and automatically creates the proper expression based on the parameters you provide.
    You used the Create Feature Class geoprocessing tool to generate the new shapefile.
    After you created the new shapefile, you added attribute fields to the table,
    which will store additional information about the street signs.'
  prefs: []
  type: TYPE_NORMAL
- en: After you selected the parcels owned by the City of Thomaston, you exported
    them to a spreadsheet using the Table to Excel python script tool found in the
    Conversion toolbox and Excel toolset. Python is a scripting language which has
    been heavily integrated in to the ArcGIS platform. Python scripts can be created
    to assist with automating and streamlining workflows. To learn more about using
    Python with ArcGIS, we recommend *Programming ArcGIS with Python Cookbook, 2nd
    Edition* by Eric Pimpler from Packt Publishing.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and using a Relate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Join is just one of the basic methods you can use in ArcGIS Pro to link data
    together. Another method is a Relate. A Relate links two tables together, but
    unlike a Join, which adds information to the primary table, the two tables remain
    separate when related. This allows you to see all the related records in the linked
    table.
  prefs: []
  type: TYPE_NORMAL
- en: A Relate works best when you have one record in your primary table which matches
    to multiple records in the linked table, or when you have multiple records in
    the primary that match multiple records in the linked table. In these situations,
    a Join would not work as well because it would have multiple records which match.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, you will create a Relate between the Parcels and a land sales
    table. The land sales table contains all parcels sales which have occurred over
    the last several years. This table also comes from the Countyâs CAMA system, like
    the Owners table did. Once you relate the two tables, you will see how you can
    view all the sales for a selected parcel.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will need to ensure that ArcGIS Pro and the book data is installed. This
    recipe is not based on previous recipes, so, you are not required to have completed
    any previous recipes before starting this one.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Start ArcGIS Pro and open the `Creating and using a Relate.aprx` project, located
    in `C:\Student\ArcGISProCookbook\Chapter3\Creating and using a Relate`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Catalog pane located on the right of the ArcGIS Pro interface, expand
    Databases by clicking on the small arrowhead.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the Thomaston.gdb geodatabase so you can see its contents.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Parcels_Sales table and select Add to Current Map. The table
    should then appear at the bottom of the list in the Contents pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Parcels layer and select Attribute Table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Parcels_Sales table and select Open.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the skills you learned in the previous recipe, try to determine the key
    field in each table which you will use to link the two tables together. Remember
    the key fields must contain the same data values and be the same field data type.
    The field names do not need to be the same.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What is the key field in each table?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: After reviewing each table, the key field should be fairly easy to pick out.
    The Realkey is the only field in each table which has the same data values and
    the same data type.
  prefs: []
  type: TYPE_NORMAL
- en: In the Parcels Attribute Table, right-click on the Realkey field and select
    Sort Descending.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Parcels Attribute Table, locate the records with a Realkey value of 15812.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You could also use the Select by Attribute tool to create a query which would
    select all parcels with a Realkey value of 15812.
  prefs: []
  type: TYPE_NORMAL
- en: '**Question**: How many rows in the table contain a Realkey value of 15812?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: In the Parcels_Sales table, right-click on the REALKEY field and select Sort
    Descending.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Parcels_Sales table, locate the rows with a REALKEY value of 15812\.
    You will need to scroll down until you see that value, or you could use the Select
    by Attribute tool to select the records.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: How many records in the Parcels_Sales table have a REALKEY value
    of 15812?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: You should now know that there is one parcel and two sales records which have
    a realkey value of 15812\. This means that you have a one to many cardinality,
    which works well with a Relate. Now you need to configure the Relate to link the
    Parcels to the Parcels_Sales table.
  prefs: []
  type: TYPE_NORMAL
- en: '**Cardinality** refers to how many records in one table match to records in
    another table, based on a comparison of values found in a key field. There are
    four types of cardinality, one to one, one to many, many to one, and many to many.
    This relationship between records in the two tables can impact how you are able
    to work with them. Traditionally, with older Esri software such as ArcMap, if
    you had a one to one or a many to many, you would always want to use a Join. If
    you had a one to many or a many to many, you would always want to use a Relate.
    This is not the case with ArcGIS Pro. ArcGIS Pro offers more flexibility so you
    can choose either a Join or a Relate depending on how you need to use the data.'
  prefs: []
  type: TYPE_NORMAL
- en: Right-click on the Parcels layer in the Contents pane. Go to Joins and Relates
    and select Add Relate. The Add Relate tool should open the Geoprocessing pane
    on the right-hand side of the ArcGIS Pro interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/35216cda-4ef2-4f75-b216-f8c5d5f09c1f.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Ensure the Layer Name or Table View is set to Parcels. Since you right-clicked
    on the Parcels layer to add the Relate, this should be automatically populated.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Input Relate Field to Realkey using the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Relate Table and Output Relate Field should automatically populate because
    you have no other standalone tables in your map.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the Relate Name to `Parcel Sales`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify that your Add Relate tool looks like the following image. If it does
    click Run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e8763e61-05fc-4f3f-857e-cf831673e55b.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the Add Relate tool has completed successfully, close the Geoprocessing
    pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Map tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ActivateÂ the Explore tool by clicking on it. Move your mouse point to the approximate
    center of the City and zoom in by pushing your scroll wheel away from you until
    your map looks similar in scale to the following.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/d9b44b7f-9e45-4823-881f-85fa0881d48e.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Center on town square and zoom to 1:2,900 +/-
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Parcels Attribute Table in the table view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the List by Selection button near the top of the Contents pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If it is checked, click on the small box located next to the CityLimits layer
    to make it not selectable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Parcels layer in the Contents pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the Map tab in the ribbon, select the Select tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the parcel indicated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/392561b5-7493-4923-aaca-07a5a43275e2.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Select parcel due west of town square
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Data tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Related Data button and select Parcel_Sales:Parcel_Sales as shown
    ahead:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/8bf8cbe9-22b2-4c05-b48f-f5664c14837b.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: The records which show the two times that the selected parcel has been sold
    should be displayed in the Parcels_Sales table. So, as you can see, the two tables
    are linked but still remain separate.
  prefs: []
  type: TYPE_NORMAL
- en: Try selecting a few other Parcels and see if they have been sold multiple times.
    Some parcels may not have been sold even once. You may need to click the Related
    Data button with each selection to see the related records.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is moreâ¦.
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As was mentioned earlier in this recipe, the cardinality was a major consideration
    when choosing whether you should use a Join or a Relate to link tables when using
    older Esri applications such as ArcMap. In ArcMap, you should always use a Join
    if you have a one to one or a many to one cardinality. However, if you have a
    one to many or many to many, you should use a relate in ArcMap otherwise you will
    miss data because the result would be a joined table that contained Null values
    or just the values from the first record it finds that matches.
  prefs: []
  type: TYPE_NORMAL
- en: 'ArcGIS Pro does not work that way. You can Join two tables regardless of the
    cardinality as long as they are in the same database. If you join two tables in
    ArcGIS Pro that have a one to many or a many to many cardinality, you see all
    the matched records. ArcGIS Pro does this by creating virtual records in the table
    view for each match, as shown ahead:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/97e5d7bf-fff1-4de8-851e-281aa94a4848.png)'
  prefs: []
  type: TYPE_IMG
- en: Single parcel selected but two records displayed in Attribute Table
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, you have a single parcel selected but two records are shown
    in the table view for the layer. This is because the Parcels_Sales table was joined
    to the Parcels Attribute Table. As you saw in the recipe, there is a one to many
    cardinality between these tables. So, there are two sales associated with the
    selected parcel in the Parcel_Sales table, and both are displayed.
  prefs: []
  type: TYPE_NORMAL
- en: In ArcGIS Pro, this method of joining tables with one to many and many to many
    has other advantages. You are able to label features with values from each record
    in the joined table. This is something ArcMap users are unable to do. However,
    remember this only works with tables in the same database. If the tables are in
    two different databases or are different formats such as linking a spreadsheet
    to a geodatabase feature class, then the normal rules about when to use a join
    and when to use a relate still apply.
  prefs: []
  type: TYPE_NORMAL
- en: If you wish, use the skills you have learned in this and the previous recipe
    to join the Parcel_Sales table to the Parcels layer. Then explore how this join
    works by selecting several parcels while looking at the Attribute Table.
  prefs: []
  type: TYPE_NORMAL
- en: Joining features spatially
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So in the previous recipes, you have seen how you can link external data to
    layers or other tables using a Join or a Relate. However, what if you want to
    transfer data from one layer to another but there is no key field to use to link
    the data. Maybe the two layers in question overlap one another, or are next to
    one another, or share some other spatial relationship, surely there should be
    some way to link or join the two layers together based on a spatial relationship.
  prefs: []
  type: TYPE_NORMAL
- en: You can join two layers together based on a spatial relationship. This is called
    a **Spatial Join**. A Spatial Join creates a new feature class which adds the
    attributes from the joined feature class to the target feature class based on
    a spatial relationship you define when you run the tool. It is not required that
    the target and joined feature classes be the same type. You can spatially join
    lines with polygons, or points with lines, or points with polygons, as well as
    those of the same feature type.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you run the Spatial Join tool you can specify the Join Operation. This
    determines how joins between the target features and join features will be handled
    in the output feature class if multiple join features are found that have the
    same spatial relationship with a single target feature. The options for this include:'
  prefs: []
  type: TYPE_NORMAL
- en: JOIN_ONE_TO_ONE:Â When this option is chosen, if a single feature in the target
    layer matches to multiple features in the join layer because they have the same
    spatial relationship, the attributes from all the matched join features will be
    aggregated based on the field map merger rule you configure. For example, if you
    set the target layer to be the road centerlines and a road centerline crosses
    two wetland polygons which are in your join layer, the attributes from the two
    wetland polygons will be aggregated before being transferred to the output line
    feature class. If one wetland polygon has an area value of 2 acres and the other
    has an area value of 5 acres, and a Mean merge rule is specified, the aggregated
    value in the output feature class will be 3.5.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'JOIN_ONE_TO_MANY: When this option is chosen, if a single feature in the target
    layer is found to match with multiple features in the join layer because they
    have same spatial relationship, the resulting output feature class will contain
    multiple records representing the single target feature and each match it has
    with features in the join layer. Using the same example as previous, if a single
    road centerline crosses two wetland polygons, the output feature class will contain
    two road centerlines: one will have the attributes from one of the wetland polygons
    it crossed and the second will have the attributes from the other.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this recipe, you have been asked to assign each sewer line and sewer manhole
    the name of the watershed it is located within. This is for an annual report the
    sewer superintendent must submit to the state every year. You have the boundary
    of the existing watersheds in your area and you have layers for the sewer lines
    and sewer manholes, so you will use the Spatial Join geoprocessing tool to assign
    the name of each watershed to the sewer features that are inside it.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe can be completed with any license level of ArcGIS Pro. Completion
    of any other recipes is not required, though it is recommend that you complete
    the recipes in [Chapter 1](45fda239-2b00-4355-9553-6c6c2b69b0ab.xhtml), *ArcGIS
    Pro Capabilities and Terminology*. This will ensure that you have the basic skills
    required to successfully complete this recipe. Of course, you must install the
    sample data before you begin.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Start ArcGIS Pro and open the `Spatial Join.aprx`Â project located in `C:\Student\ArcGISProCookbook\Chapter3\Spatial
    Join\`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Sewer Manholes layer in the Contents pane and click Attribute
    Table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Explore the Attribute Table for the Sewer Manholes layer and answer the following
    question:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What fields do you see in the Attribute Table for the Sewer Manholes?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: You will notice that it does not indicate which watershed each manhole is located
    in. So, you need to add this attribute to each manhole. Luckily you do have a
    watershed layer which shows the boundary of each watershed and its name. You will
    be able to use the Spatial Join to add this information to the manholes. First
    you will explore the Attribute Table for the Watersheds layer. Then you will use
    the Spatial Join tool.
  prefs: []
  type: TYPE_NORMAL
- en: Right-click on the Watersheds layer and select Attribute Table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Explore the fields contained in the Attribute Table for the Watersheds layer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What fields do you see in the Attribute Table for the Watersheds
    layer?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Analysis tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Spatial Join tool from the Tools group on the Analysis tab in the
    ribbon. This will open the Geoprocessing pane with the Spatial Join tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/57d33fa0-9647-46c5-903c-a4b6e48ee511.png)'
  prefs: []
  type: TYPE_IMG
- en: Select Spatial Join tool
  prefs: []
  type: TYPE_NORMAL
- en: Set the Target Features to Sewer Manholes using the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Join Features to Watersheds using the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the Output Feature Class, click the Browse button. Then select the Databases
    folder located under Project in the tree on the left side of the Output Feature
    Class dialog window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the Spatial Join.gdb.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Name cell, type `Sewer_Manholes_Watersheds` and click Save.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Join Operation to Join one to one using the drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Match Option to Within. This is the spatial relationship which will
    join the watershed name to each manhole that is inside the watershed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify that your Spatial Join tool looks like the following and click Run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/48808d95-139e-48d2-bba1-7c4596f42cb7.png)'
  prefs: []
  type: TYPE_IMG
- en: When the Spatial Join tool is complete, close the Geoprocessing pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A new layer should have been added to your map, called Sewer_Manhole_Watersheds.
    Right-click on this new layer and select Attribute Table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What fields does the Attribute Table for this new layer contain?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Question**:Â How does the new table compare to the Attribute Table for the
    Sewer Manhole and the Watersheds layers?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: As you should hopefully see, the new layer contains the combined attributes
    of both the sewer manholes and watersheds layers. The output was a new point layer
    because the target was the sewer manholes, which was a point layer.
  prefs: []
  type: TYPE_NORMAL
- en: Close the Attribute Table and save your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, using the same process perform a spatial join between the sewer lines and
    the watersheds. However, this time set the Match Option to Intersect and the Output
    Feature Class to `Sewer_Lines_Watersheds`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Your Spatial Join tool should look like this. If it does, click Run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bdaf73ad-f33f-4e69-a680-01a93d241ef2.png)'
  prefs: []
  type: TYPE_IMG
- en: The Crimes_2014 table should appear in the Contents pane. Right-click on the
    table and click Open.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the tool is complete, close the Geoprocessing pane and save your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the tool completes, the new layer you created should be added to the map.
    If you open the Attribute Table you will see it too contains the combined attributes
    from both the inputs. This time, the output was a line layer instead of a point
    because the target layer was the sewer lines layer, which, as the name indicates,
    is a line layer.
  prefs: []
  type: TYPE_NORMAL
- en: Close ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have now seen how a spatial join can be used to merge data in two different
    layers into a single layer or feature class. This can increase the types of analysis
    you can perform on the data or how you can display it. Remember, when you perform
    a spatial join, it does create a new data layer. This means that your original
    data is still intact for you to use as well.
  prefs: []
  type: TYPE_NORMAL
- en: Creating feature linked annotation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You have now seen how to link data together based on a common key field using
    a Join or Relate, based on a spatial relationship. These methods are extremely
    useful. However, they do have limitations. Joins and Relates only exist in a single
    map and do not transfer easily to other maps or projects. Spatial Joins create
    new feature classes or tables while still leaving the original data unaltered.
    So, is there a way to permanently link two tables or two feature classes together?
  prefs: []
  type: TYPE_NORMAL
- en: The answer is yes, if the data is all in the same geodatabase. In a geodatabase,
    you can create a relationship class. A relationship class permanently links data
    together and the link carries over into any map, scene, or project you use the
    data in. You can create a relationship class between two feature classes, two
    standalone tables, or a feature class and a standalone table.
  prefs: []
  type: TYPE_NORMAL
- en: Relationship classes provide greater flexibility than the other methods we have
    looked at in previous recipes. Not only can you link data together so you can
    access the additional information, the related data can also impact the behavior
    or contents. For example, if I relate a sewer line feature class to a manhole
    feature class, the relationship class can be configured to allow information such
    as an attribute value from one feature class to also pass to another, or if I
    delete a feature in one feature class it deletes the connected feature in the
    other feature class.
  prefs: []
  type: TYPE_NORMAL
- en: One of the easiest relationship classes to create is called **Feature Linked
    Annotation**. In this recipe, you will create feature linked annotation and then
    explore its behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To complete this recipe, you will need a Standard or Advanced license of ArcGIS
    Pro. A Basic license does not support this level of functionality. If you are
    not sure what license you have, you can check it by doing the following. Open
    ArcGIS Pro, and on the bottom left of the start window, where you would normally
    select a project to open, click on About ArcGIS Pro. Then select Licensing from
    the list on the left. This will display the license level available to you and
    any extensions you may have access to as well.
  prefs: []
  type: TYPE_NORMAL
- en: If you only have a Basic license, check with your account administrator to see
    if they can assign you a Standard or Advanced license at least temporarily. If
    a higher license is not available, you can request a trial license from Esri by
    going to their website, at [http://www.esri.com/arcgis/trial](http://www.esri.com/arcgis/trial).
    This will provide you with access to an Advanced license for ArcGIS Pro and more.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will begin by starting ArcGIS Pro. Then open the `FeatureLinkedAnno.aprx`
    located in `C:\Student\ArcGISProCookbook\Chapter3\FeatureLinkedAnno`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The project should open with a single map called `Trippville`. Click on the
    Bookmarks button located in the Navigate group on the Map tab. Select Labeling
    Area to zoom to the middle of Trippville.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Contents pane, select the Street Centerline layer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the ribbon, select the Labeling tab, which appears in the Feature Layer
    contextual tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Map group on the Labeling tab, select the More drop-down.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Label button located on the far-left side of the Labeling tab to
    turn on the labels for the Street Centerlines layer. Ensure Use Maplex Labeling
    Engine is not checked. If it is, click on it to deactivate. If you get a warning
    about switching the labeling engine, click Yes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8055569d-35c1-46a1-a3df-00c9d0879acc.png)'
  prefs: []
  type: TYPE_IMG
- en: Select Label button on far left
  prefs: []
  type: TYPE_NORMAL
- en: Set the Field locate in the Label Class group on the Labeling tab to ST_NAME
    using the drop-down arrow to scroll to the field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Label Placement group on the Labeling tab, select Curved Line.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/65992a45-8d25-4acf-a6b3-8f87f55dd397.png)'
  prefs: []
  type: TYPE_IMG
- en: Verify that your font is set to Tahoma, size 10, and color is black in the Text
    Symbol group on the Labeling tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have added labels for the street names to the map. If you configured everything,
    your map should now look very similar to the following image. Yours may not be
    an exact match due to the size of your monitor being different or you may have
    other panes open.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/adf4521f-b84e-4fb3-b688-8754b1212e13.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on the Map tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the far-right end of the Map tab, click on the Convert To Annotation button.
    This will open the Convert Labels to Annotation tool in the Geoprocessing pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ArcGIS Pro supports two types of text display in a map or scene. The first is
    labels. Labels are dynamic text which is tied to a specific layer and attributes
    associated with that layer. The user can configure some settings which the computer
    will use when trying to determine where to place the label or if one will be placed
    at all. However, users are not able to individually place a label and guarantee
    it will always appear or be in a consistent location. The computer makes the final
    decision. Labels are extremely useful because they do automatically adjust as
    your map view changes in size or location. Annotation is the other method for
    displaying text. Annotation is fixed text, which can be individually placed and
    modified. This provides much greater control over the text, allowing you to put
    it exactly where and how you want it. Its big disadvantage is that it is more
    labor intensive to maintain and will not work at all scales. Feature Linked Annotation
    is the best of both worlds. It provides the control of annotation with some of
    the dynamic behavior of labels, as you will see in this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Verify that the Input Map is set to Trippville.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Browse button located to the right of the Output Geodatabase. Click
    on the Databases folder in the panel on the left side of the Output Geodatabase
    window that appears. Double-click on the Trippville_GIS.gdb. Select the Base feature
    dataset and click OK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the Extent, select the Street Centerlines layer from the list using the
    drop-down arrow.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable Create Feature Linked Annotation by clicking on the box next to it. Two
    other options will appear, Create Annotation when new features are added and Update
    annotation when features shape is modified. Ensure they are both enabled.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the Output Layer to StreetNames.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Verify thatÂ your Convert Labels to AnnotationÂ looks like the following graphic,
    and click Run:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8ff71dff-5a81-4095-91ce-a4cf2cf266e2.png)'
  prefs: []
  type: TYPE_IMG
- en: The new StreetNames layer you just created should appear in the Contents pane
    if the tool runs successfully. If the new layer does appear, close the Geoprocessing
    pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, letâs look at what you created. In the Contents pane, expand the StreetNames
    layer by clicking on the small arrow located next to the layer name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Street_CenterlinesAnno layer. Right-click on it and select Properties
    from the bottom of the context menu that appears.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Source option from the list on the left panel in the Layer Properties
    window, then answer the following questions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**: What is the data type and feature type for the new layer?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Question**:Â What database is the feature class that the layer references
    named and where is it located?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Question**:Â What is the name of the feature class you created which is referenced
    by the new layer?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see when you answer the preceding questions, the Convert to Annotation
    tool created not only a new layer in your map, but also a new feature class within
    the geodatabase. It is an annotation feature class which is a specialized version
    of a standard Polygon feature class; basically it acts like a text box. Like all
    feature classes, an annotation feature class is another form of vector data. As
    such, it has both the spatial component as well as an attribute component.
  prefs: []
  type: TYPE_NORMAL
- en: Click OK to close the Layer Properties window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Street_CenterlinesAnno layer in the Contents pane. Select
    Attribute Table from the context menu which appears.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Take a moment to explore the Attribute Table for the new layer you just created,
    then answer the following question:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**:Â What attribute fields are in the table for the Street_CenterlineAnno
    layer?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the List by Selection button located near the top of the Contents pane.
    It looks like three polygons, one of which has a blue fill.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Street Centerlines and Street_CenterlinesAnno layers as selectable and
    all others as not selectable. Those with a check mark in the box are selectable
    layers and those without a check mark are not. To change the status from selectable
    or not selectable simply click on the box next to the layer name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Select tool in the Map tab in the ribbon. If you click on the drop-down
    arrow, select Rectangle.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click just to the southeast of Pine St, in the map. Continue to hold your mouse
    button down and move your pointer just to the northwest of Pine St as shown in
    the following screenshot, so you select both the street centerline and the road
    name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6ccc0aad-e30d-49cd-ac22-82c98283019e.png)'
  prefs: []
  type: TYPE_IMG
- en: Right-click on the Street Centerline layer in the Contents pane and select Attribute
    Table from the context menu that appears.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the bottom of the table view, click on the Show Selected Records button to
    only display the attributes for the street centerline you have selected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the attribute values for the selected street. Pay special attention
    to the value for the ObjectID.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure the Street Centerlines layer is still selected in the Content pane, then
    click on the Data tab in the Feature Layer contextual menu in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Related Data button in the Relationship group on the Data tab in
    the ribbon. Choose the Anno_80_85:Street_CenterlinesAnno option that appears.
    The numbers identifying the relationship may be different. This should open the
    Attribute Table for the Street_CenterlinesAnno layer and select the related annotation
    record.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Review the attribute values for the selected record, then answer the following
    question:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**:Â Which fields for the Street_CenterlinesAnno layer contain similar
    values as those for the street centerline you have selected?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: Your comparison of the values for the selected street centerline and the related
    annotation should have revealed that the Object ID for the street centerline matched
    the FeatureID value for the annotation, and the ST_NAME value for the street centerline
    matched the TextString value for the annotation.
  prefs: []
  type: TYPE_NORMAL
- en: The two feature classes are linked to one another in the relationship class
    using the ObjectID of the Street Centerlines and the FeatureID of the Annotation
    as the key field, similar to how you used a key field to create both a join and
    a relate in previous recipes. As you will see next, the ST_NAME field and TextString
    fields are also linked as part of the relationship class.
  prefs: []
  type: TYPE_NORMAL
- en: Ensure that you still have the Pine St centerline selected, and then click on
    the Edit tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Attributes button located in the Selection group on the Edit tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5173fcda-9e0f-4892-b303-f851a7047989.png)'
  prefs: []
  type: TYPE_IMG
- en: In the window at the top of the Attributes pane, select the Street Centerlines
    layer. This should display a list of all attributes associated with Pine St in
    the area below where you selected the layer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click in the cell located next to ST_NAME, which currently contains the value
    `PINE ST` and type `OAK AVE`. Hit your *Enter* key when done.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Notice what happens to the annotation for the street name in the map. It should
    have also changed because the ST_NAME field is linked to the TextString field
    for the annotation layer. Changing the ST_NAME value in the Street Centerlines
    layer automatically updates the value for the annotation layer because of the
    relationship class you created. For feature linked annotation, this is a one way
    relationship. This means the change is only pushed from the Street Centerlines
    layer to the Street_CenterlinesAnno layer, but not from the Street_CenterlinesAnno
    layer to the Street Centerlines.
  prefs: []
  type: TYPE_NORMAL
- en: While on the Edit tab, click the Clear button in the Selection group to clear
    your selection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Contents pane, right-click on the Street Centerlines layer and select
    Make this the only selectable layer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You may need to make sure you are still looking at the List by Selection option
    in the Contents pane.
  prefs: []
  type: TYPE_NORMAL
- en: Choose the Selection tool from the Selection group in the Edit tab on the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the street centerline for the newly renamed Oak Ave, which was formerly
    Pine St.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With Oak Ave selected and only Oak Ave selected, press your *Delete* key or
    click on the *Delete* button in the Features group on the Edit tab in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Notice that the annotation is also deleted when you delete the street centerline
    for Oak Ave. The relationship class not only links fields together, but also creates
    a link between the features in each feature class, so that by deleting the centerline
    it also deletes all related annotation features. Like the field relationship you
    explored earlier, this is only a one-way relationship. This means that if you
    were to delete the annotation it would not delete the related street centerline.
  prefs: []
  type: TYPE_NORMAL
- en: Not all relationship classes are a one-way relationship. Feature linked annotation
    is just one example of how a relationship class works. They can be configured
    in several different ways, depending on what you wish to accomplish.
  prefs: []
  type: TYPE_NORMAL
- en: On the Edit tab in the Manage Edits group, select Discard to discard all edits
    you have made.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Catalog pane, expand the Databases folder so you see the two geodatabases
    connected to the project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the Trippville_GIS.gdb geodatabase to see its contents.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now expand the Base feature dataset and examine its contents. You should see
    the two feature classes which were referenced by the two layers you have been
    working with, Street_Centerlines and Street_CenterlinesAnno. You should also see
    the relationship class which you created when you created the feature linked annotation
    layer, Anno_80_85\. Again, the name of your relationship class may have different
    numbers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Because the feature classes and relationship classes exist as objects in your
    geodatabase, they may be used in other maps, scenes, or projects. This provides
    much greater flexibility than the joins and relates you performed in past recipes.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you saw in this recipe, feature linked annotation links text in one layer
    to the features in another layer. It does this using a relationship class. Like
    joins and relates, the relationship class relies on a key field from the Attribute
    Tables for both feature classes to establish a basic link between the text features
    in the annotation layer and the feature that the text references in the other
    feature class. In the case of feature linked annotation, the key field was automatically
    determined and the relationship class configured when you converted the labels
    for the street centerlines to annotation using the Convert to Annotation tool.
  prefs: []
  type: TYPE_NORMAL
- en: Feature Linked annotation takes advantage of the additional functionality the
    relationship class allows.Â  In addition to relating the two features classes together
    so you can located related features or records, it also allows you to push changes
    from the feature to the annotation. This is called a **composite relationship**.
    In a composite relationship, the existence or values of the origin feature controls
    or changes the existence or values of the destination feature or record. You saw
    this demonstrated when you changed the street name for the centerline and deleted
    the centerline, which caused changes to the street annotation layer.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and using a relationship class using existing data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You have seen the power of a relationship class in the previous recipe. You
    saw how linking two feature classes together allowed you to not only access information
    about the linked features but also control some behavior. However, this was all
    automatically set up by the Convert to Annotation tool. In many cases, the data
    you wish to link together already exists. So how do you create a relationship
    class which would link that existing data together?
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, you will create a relationship class between a feature class
    and a standalone table. This will be between the same parcel layer and sales table
    you related in the *Creating and using a Relate* recipe earlier in this chapter.
    Â However, once you establish the relationship class, the link becomes permanent,
    unlike the relate which is limited to the map in which it was created.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To complete this recipe, you will need a Standard or Advanced license of ArcGIS
    Pro. A Basic license does not support this level of functionality. If you are
    not sure what license you have, you can check it by doing the following. Open
    ArcGIS Pro, and on the bottom left of the start window, where you would normally
    select a project to open, click on About ArcGIS Pro. Then select Licensing from
    the list on the left. This will display the license level available, to you and
    any extensions you may have access to as well.
  prefs: []
  type: TYPE_NORMAL
- en: If you only have a Basic license, check with your account administrator to see
    if they can assign you a Standard or Advanced license at least temporarily. If
    a higher license is not available you can request a trial license from Esri by
    going to their website, at [http://www.esri.com/arcgis/trial](http://www.esri.com/arcgis/trial).
    This will provide you with access to an Advanced license for ArcGIS Pro and more.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As normal, you will need to start ArcGIS Pro and then open the `RelationshipClass.aprx`
    located in `C:\Student\ArcGISProCookbook\Chapter3\RelationshipClass\`. The project
    should open with a single map called Thomaston. If you completed the previous
    *Creating and using Relates* recipe it should look familiar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Contents pane, you need to verify that you see the Parcels layer and
    the Parcels_Sales table. If not, use skills you have learned to add them to the
    map from the Thomaston.gdb geodatabase which is connected to the project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to create a relationship class between the Parcels layer and the Parcels_Sales
    table, you need to determine two things: a key field in each table and the cardinality.
    If you completed the *Creating and using a Relate* recipe, you will be using the
    same key field and should already know the cardinality, so you can skip to *step
    12* and continue from there. If you did not complete that recipe, continue to
    the next step.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Parcels layer and select Attribute Table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Parcels_Sales table and select Open.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the name of the Parcels_Sales located at the top of the table view,
    and drag it until your mouse point is over the docking icon, as shown ahead:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8b5f72a6-16d1-4e51-91b7-df224960a91a.png)'
  prefs: []
  type: TYPE_IMG
- en: Drag and dock the tables so they can be seen side by side
  prefs: []
  type: TYPE_NORMAL
- en: 'The two tables should now appear side by side so you can more easily assess
    each one:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/befa1460-1203-415f-b89b-ff35089930f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Tables viewed side by side
  prefs: []
  type: TYPE_NORMAL
- en: Review each table to determine the key field in each table that you will use
    to link the two tables together. Remember the key fields must contain the same
    data values and be the same field data type. The field names do not need to be
    the same.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**:Â What is the key field in each table?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: After reviewing each table, the key field should be easy to pick out. The Realkey
    is the only field in each table which has the same data values and the same data
    type.
  prefs: []
  type: TYPE_NORMAL
- en: In the Parcels Attribute Table, right-click on the Realkey field and select
    Sort Descending.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Parcels Attribute Table, locate the records with a Realkey value of 15812.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**:Â How many rows in the table contain a Realkey value of 15812?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: In the Parcels_Sales table, right-click on the REALKEY field and select Sort
    Descending.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Parcels_Sales table, locate the rows with a REALKEY value of 15812\.
    You will need to scroll down until you see that value or you could use the Select
    by Attribute tool to select the records.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Question**:Â How many records in the Parcels_Sales table have a REALKEY value
    of 15812?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Answer**:'
  prefs: []
  type: TYPE_NORMAL
- en: Close both tables by clicking on the small X next to their name in the table
    view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Clear button located in the Selection group on the Map tab if you
    selected any records in either table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should now know that there is one parcel and two sales records which have
    a realkey value of 15812\. This means you have a one to many cardinality. So,
    you know the key field and the cardinality you will need to create the relationship
    class which will link the Parcels layer to the Parcels_Sales table.
  prefs: []
  type: TYPE_NORMAL
- en: In the Catalog pane, expand the Database folder so you can see the two databases
    which are connected to the project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the Thomaston.gdb geodatabase, then right-click on it and select Relationship.
    The Create Relationship tool should open in the Geoprocessing pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Origin Table to Parcels using the drop-down arrow. This establishes
    the Parcels as the primary table for the relationship.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Destination Table to Parcels_Sales using the drop-down arrow. This establishes
    it as the secondary or child table for the relationship.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Output Relationship Class should be automatically populated with Parcels_Parcels_Sales.
    You can change the name if you desire, or accept the default.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Both the Forward Path Label and Backward Path Label should be automatically
    populated as well. Accept these default values.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Message Direction to None using the drop-down arrow, since we just want
    to be able to view related records between the tables. We are not trying to have
    one table control the information in the other.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the drop-down arrow, set the Cardinality to One to Many (1:M), since this
    was what you determined the cardinality to be previously.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Origin Primary Key to Realkey and set the Origin Foreign Key to REALKEY.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify that your Create RelationshipÂ Class looks like the following image. If
    it does, click Run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d24c6ae4-90bf-4aef-a8f1-1143ebe49620.png)'
  prefs: []
  type: TYPE_IMG
- en: Create Relationship Class window in Geoprocessing pane
  prefs: []
  type: TYPE_NORMAL
- en: Once the tool has completed successfully, close the Geoprocessing pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Catalog pane, look at the contents of the Thomaston.gdb geodatabase.
    You should see the new relationship class you just created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the Relationship class in the Catalog pane and select Properties.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Take a moment to review the properties. They should reflect the settings you
    defined in the Create Relationship Class tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click OK when done reviewing the properties.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now to see if the new Relationship class you create works. Select the Parcels
    layer in the Contents pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the Explore tool, zoom into the center of the City of Thomaston. Zoom
    in so you can easily see the boundary of the individual parcels. This should be
    somewhere close to a scale of `1:4800`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the Map tab in the ribbon, activate the Select tool and click on a single
    parcel in the map. The selected parcel should have a blue highlighted boarder
    around it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Data tab in the Feature Layer contextual menu in the ribbon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Related Data button and the Parcels_Parcels_Sales: Parcels option
    that is displayed. The Parcels_Sales table should open, displaying any sales associated
    with the parcel you selected. If no sales are displayed, try selecting another
    parcel.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will need to click on the Related Data button each time you select a new
    parcel to refresh the table view.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have verified that the relationship class is working, close the table
    view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save your project and close ArcGIS Pro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this recipe, you created a Relationship class which linked the Parcels feature
    class to the Parcels_Sales standalone table. This permanently linked these two
    objects in the geodatabase so that you were able to select a parcel in the map
    and easily see each time it had been sold from the Parcels_Sales table.
  prefs: []
  type: TYPE_NORMAL
- en: This link was established using a key field you identified in each table. The
    key field used by a Relationship class, like a Relate or a Join, must contain
    the same exact values and be the same field type (text, long integer, short integer,
    and others). However, the field names are not required to be the same. ArcGIS
    Pro is then able to find records in both tables that have the same value and link
    those together, as you saw demonstrated in this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike a Join or a Relate, a relationship class is part of your geodatabase.
    This means that anytime you add the Parcels feature class to a map in any project,
    you will have access to the data in the Parcels_Sales table automatically through
    the Related Data function.
  prefs: []
  type: TYPE_NORMAL
- en: Once you create a relationship class, you are not able to change how it is configured.
    If you wanted to change a simple relationship to a composite for example, you
    would have to create a completely new relationship class.
  prefs: []
  type: TYPE_NORMAL
