["```py\n<script type=\"text/javascript\">\n    var w = 1280, h = 800,\n        force = d3.layout.force()\n            .size([w ,h])\n            .gravity(0)\n            .charge(0)\n            .friction(0.7);\n\n    var svg = d3.select(\"body\")\n        .append(\"svg\")\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n\n    force.on(\"tick\", function () {\n        svg.selectAll(\"circle\")\n            .attr(\"cx\", function (d) {return d.x;})\n            .attr(\"cy\", function (d) {return d.y;});\n    });\n\n    svg.on(\"mousemove\", function () {\n        var point = d3.mouse(this),\n            node = {x: point[0], y: point[1]}; // <-A\n\n        svg.append(\"circle\")\n                .data([node])\n            .attr(\"class\", \"node\")\n            .attr(\"cx\", function (d) {return d.x;})\n            .attr(\"cy\", function (d) {return d.y;})\n            .attr(\"r\", 1e-6)\n        .transition()\n            .attr(\"r\", 4.5)\n        .transition()\n            .delay(7000)\n            .attr(\"r\", 1e-6)\n            .each(\"end\", function () {\n                force.nodes().shift(); // <-B\n            })\n            .remove();\n\n        force.nodes().push(node); // <-C\n        force.start(); // <-D\n    });\n\n    function changeForce(charge, gravity) {\n        force.charge(charge).gravity(gravity);\n    }\n</script>\n\n<div class=\"control-group\">\n    <button onclick=\"changeForce(0, 0)\">\n        No Force\n    </button>\n    <button onclick=\"changeForce(-60, 0)\">\n        Mutual Repulsion\n    </button>\n    <button onclick=\"changeForce(60, 0)\">\n        Mutual Attraction\n    </button>\n    <button onclick=\"changeForce(0, 0.02)\">\n        Gravity\n    </button>\n    <button onclick=\"changeForce(-30, 0.1)\">\n        Gravity with Repulsion\n    </button>    \n</div>\n```", "```py\nvar w = 1280, h = 800,\n        force = d3.layout.force()\n            .size([w ,h])\n            .gravity(0)\n            .charge(0)\n            .friction(0.7);\n```", "```py\nsvg.on(\"mousemove\", function () {\n        var point = d3.mouse(this),\n            node = {x: point[0], y: point[1]}; // <-A\n\n        svg.append(\"circle\")\n                .data([node])\n            .attr(\"class\", \"node\")\n            .attr(\"cx\", function (d) {return d.x;})\n            .attr(\"cy\", function (d) {return d.y;})\n            .attr(\"r\", 1e-6)\n        .transition()\n            .attr(\"r\", 4.5)\n        .transition()\n            .delay(7000)\n            .attr(\"r\", 1e-6)\n            .each(\"end\", function () {\n                force.nodes().shift(); // <-B\n            })\n            .remove();\n\n        force.nodes().push(node); // <-C\n        force.start(); // <-D\n});\n```", "```py\nfunction changeForce(charge, gravity) {\n    force.charge(charge).gravity(gravity);\n}\nchangeForce(-60, 0);\n```", "```py\nforce.on(\"tick\", function () {\n        svg.selectAll(\"circle\")\n            .attr(\"cx\", function (d) {return d.x;})\n            .attr(\"cy\", function (d) {return d.y;});\n});\n```", "```py\nfunction changeForce(charge, gravity) {\n    force.charge(charge).gravity(gravity);\n}\nchangeForce(60, 0);\n```", "```py\nfunction changeForce(charge, gravity) {\n    force.charge(charge).gravity(gravity);\n}\nchangeForce(0, 0.02);\n```", "```py\nfunction changeForce(charge, gravity) {\n    force.charge(charge).gravity(gravity);\n}\nchangeForce(-30, 0.1);\n```", "```py\n<script type=\"text/javascript\">\n    var force = d3.layout.force()\n            .gravity(0)\n            .charge(0)\n            .friction(0.95);\n\n    var svg = d3.select(\"body\").append(\"svg:svg\");\n\n    force.on(\"tick\", function () {\n        // omitted, same as previous recipe\n       ...\n    });\n\n    var previousPoint;\n\n    svg.on(\"mousemove\", function () {\n        var point = d3.mouse(this),\n            node = {\n                x: point[0],\n                y: point[1],\n                px: previousPoint ? previousPoint[0] : point[0],\n                py: previousPoint ? previousPoint[1] : point[1]\n            };\n\n        previousPoint = point;\n\n        // omitted, same as previous recipe\n       ...\n    });\n</script> \n```", "```py\nvar force = d3.layout.force()\n            .gravity(0)\n            .charge(0)\n            .friction(0.95);\n```", "```py\n    var previousPoint;\n\n    svg.on(\"mousemove\", function () {\n        var point = d3.mouse(this),\n            node = {\n                x: point[0],\n                y: point[1],\n                px: previousPoint ? previousPoint[0] : point[0],\n                py: previousPoint ? previousPoint[1] : point[1]\n            };\n\n        previousPoint = point;\n        ...\n    }\n```", "```py\n<script type=\"text/javascript\">\n    var force = d3.layout.force()\n            .gravity(0.1)\n            .charge(-30)\n            .friction(0.95)\n            .linkDistance(20)\n            .linkStrength(1);\n\n    var duration = 60000; // in milliseconds\n\n    var svg = d3.select(\"body\").append(\"svg:svg\");\n\n    force.size([1100, 600])\n        .on(\"tick\", function () {\n            // omitted, will be discussed in details later\n            ...\n        });\n\n    function offset() {\n        return Math.random() * 100;\n    }\n\n    function createNodes(point) {\n        var numberOfNodes = Math.round(Math.random() * 10);\n        var nodes = [];\n\n        for (var i = 0; i < numberOfNodes; ++i) {\n            nodes.push({\n                x: point[0] + offset(), \n                y: point[1] + offset()\n            });\n        }\n\n        return nodes;\n    }\n\n    function createLinks(nodes) {\n        // omitted, will be discussed in details later\n        ...\n    }\n\n    svg.on(\"click\", function () {\n        var point = d3.mouse(this),\n                nodes = createNodes(point),\n                links = createLinks(nodes);\n\n        nodes.forEach(function (node) {\n            svg.append(\"circle\")\n                    .data([node])\n                .attr(\"class\", \"node\")\n                .attr(\"cx\", function (d) {return d.x;})\n                .attr(\"cy\", function (d) {return d.y;})\n                .attr(\"r\", 1e-6)\n                .call(force.drag)\n                    .transition()\n                .attr(\"r\", 7)\n                    .transition()\n                    .delay(duration)\n                .attr(\"r\", 1e-6)\n                .each(\"end\", function () {force.nodes().shift();})\n                .remove();\n        });\n\n        links.forEach(function (link) {\n            // omitted, will be discussed in details later\n            ...\n        });\n\n        nodes.forEach(function (n) {force.nodes().push(n);});\n        links.forEach(function (l) {force.links().push(l);});\n\n        force.start();\n    });\n</script>\n```", "```py\nvar force = d3.layout.force()\n            .gravity(0.1)\n            .charge(-30)\n            .friction(0.95)\n            .linkDistance(20)\n            .linkStrength(1);\n```", "```py\n    function createLinks(nodes) {\n        var links = [];\n        for (var i = 0; i < nodes.length; ++i) { // <-A\n            if(i == nodes.length - 1) \n                links.push(\n                    {source: nodes[i], target: nodes[0]}\n                );\n            else\n                links.push(\n                    {source: nodes[i], target: nodes[i + 1]}\n                );\n        }\n        return links;\n    }\n...\nsvg.on(\"click\", function () {\n        var point = d3.mouse(this),\n                nodes = createNodes(point),\n                links = createLinks(nodes);\n    ...\n\n        links.forEach(function (link) {\n            svg.append(\"line\") // <-B\n                    .data([link])\n                .attr(\"class\", \"line\")\n                .attr(\"x1\", function (d) {\n                   return d.source.x;\n                    })\n                .attr(\"y1\", function (d) {\n                   return d.source.y;\n})\n                .attr(\"x2\", function (d) {\n                   return d.target.x;\n                    })\n                .attr(\"y2\", function (d) {\n                   return d.target.y;\n    })\n                    .transition()\n                    .delay(duration)\n                .style(\"stroke-opacity\", 1e-6)\n                .each(\"end\", function () {\n                   force.links().shift();\n    })\n                .remove();\n        });\n\n        nodes.forEach(function (n) {force.nodes().push(n);});\n        links.forEach(function (l) { // <-C\n          force.links().push(l);\n   });\n\n        force.start();\n}\n```", "```py\nforce.size([1100, 600])\n        .on(\"tick\", function () {\n            svg.selectAll(\"circle\")\n                .attr(\"cx\", function (d) {return d.x;})\n                .attr(\"cy\", function (d) {return d.y;});\n\n            svg.selectAll(\"line\")\n                .attr(\"x1\", function (d) {return d.source.x;})\n                .attr(\"y1\", function (d) {return d.source.y;})\n                .attr(\"x2\", function (d) {return d.target.x;})\n                .attr(\"y2\", function (d) {return d.target.y;});\n        });\n```", "```py\nnodes.forEach(function (node) {\n            svg.append(\"circle\")\n                    .data([node])\n                .attr(\"class\", \"node\")\n                ...\n                .call(force.drag) // <-D\n                    .transition()\n                ...\n                .each(\"end\", function () {force.nodes().shift();})\n                .remove();\n        });\n```", "```py\n<svg>\n    <defs>\n        <radialGradient id=\"gradient\" cx=\"50%\" cy=\"50%\" r=\"100%\" fx=\"50%\" fy=\"50%\">\n            <stop offset=\"0%\" style=\"stop-color:blue;stop-opacity:0\"/>\n            <stop offset=\"100%\" style=\"stop-color:rgb(255,255,255);stop-opacity:1\"/>\n        </radialGradient>\n    </defs>\n</svg>\n\n<script type=\"text/javascript\">\n    var force = d3.layout.force()\n            .gravity(0.1)\n            .charge(-30)\n            .friction(0.95)\n            .linkDistance(20)\n            .linkStrength(0.5);\n\n    var duration = 10000;\n\n    var svg = d3.select(\"svg\");\n\n    var line = d3.svg.line()\n            .interpolate(\"basis-closed\")\n            .x(function(d){return d.x;})\n            .y(function(d){return d.y;});\n\n    force.size([svg.node().clientWidth, svg.node().clientHeight])\n        .on(\"tick\", function () {\n            // omitted, will be discussed in details later\n            ...\n        });\n\n    function offset() {\n        return Math.random() * 100;\n    }\n\n    function createNodes(point) {\n        // omitted, same as previous recipe\n       ...\n    }\n\n    function createLinks(nodes) {\n        // omitted, same as previous recipe\n       ...\n    }\n\n    svg.on(\"click\", function () {\n        // omitted, will be discussed in details later\n        ...\n    });\n</script>\n```", "```py\nvar line = d3.svg.line() // <-A\n            .interpolate(\"basis-closed\")\n            .x(function(d){return d.x;})\n            .y(function(d){return d.y;});\n...\nsvg.on(\"click\", function () {\n        var point = d3.mouse(this),\n                nodes = createNodes(point),\n                links = createLinks(nodes);\n\n        var circles = svg.append(\"path\")\n                .data([nodes])\n            .attr(\"class\", \"bubble\")\n            .attr(\"fill\", \"url(#gradient)\") // <-B\n            .attr(\"d\", function(d){return line(d);}) // <-C\n                .transition().delay(duration)\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-opacity\", 0)\n            .each(\"end\", function(){d3.select(this).remove();});\n\n        nodes.forEach(function (n) {force.nodes().push(n);});\n        links.forEach(function (l) {force.links().push(l);});\n\n        force.start();\n});\n```", "```py\nforce.size([svg.node().clientWidth, svg.node().clientHeight])\n        .on(\"tick\", function () {\n            svg.selectAll(\"path\")\n                .attr(\"d\", line);\n        });\n```", "```py\n<script type=\"text/javascript\">\n    var svg = d3.select(\"body\").append(\"svg:svg\"),\n            colors = d3.scale.category10(),\n            w = 900,\n            h = 600;\n\n    svg.attr(\"width\", w).attr(\"height\", h);\n\n    var force = d3.layout.force()\n            .gravity(0.1)\n            .charge(-30)\n            .size([w, h]);\n\n    var nodes = force.nodes(),\n            centers = [];\n\n    for (var i = 0; i < 5; ++i) {\n        for (var j = 0; j < 50; ++j) {\n            nodes.push({x: w / 2 + offset(), \n              y: h / 2 + offset(), \n              color: colors(i), // <-A\n              type: i}); // <-B\n        }\n    }\n\n    function offset() {\n        return Math.random() * 100;\n    }\n\n    svg.selectAll(\"circle\")\n                .data(nodes).enter()\n            .append(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"cx\", function (d) {return d.x;})\n            .attr(\"cy\", function (d) {return d.y;})\n            .attr(\"fill\", function(d){return d.color;})\n            .attr(\"r\", 1e-6)\n                .transition()\n            .attr(\"r\", 4.5);\n\n    force.on(\"tick\", function(e) {\n          // omitted, will discuss in detail\n    ...\n    });\n\n    d3.select(\"body\")\n        .on(\"touchstart\", touch)\n        .on(\"touchend\", touch);\n\n    function touch() {\n        // omitted, will discuss in detail\n        ...\n    }\n\n    force.start();\n</script>\n```", "```py\nfunction touch() {\n        d3.event.preventDefault();\n\n        centers = d3.touches(svg.node());\n\n        var g = svg.selectAll(\"g.touch\")\n                .data(centers, function (d) {\n                    return d.identifier;\n                });\n\n        g.enter()\n            .append(\"g\")\n            .attr(\"class\", \"touch\")\n            .attr(\"transform\", function (d) {\n                return \"translate(\" + d[0] + \",\" + d[1] + \")\";\n            })\n            .append(\"circle\")\n                .attr(\"class\", \"touch\")\n                .attr(\"fill\", function(d){\n                   return colors(d.identifier);\n                })\n                    .transition()\n                .attr(\"r\", 50);\n\n        g.exit().remove();\n\n        force.resume();\n}\n```", "```py\nforce.on(\"tick\", function(e) {\n          var k = e.alpha * .2;\n          nodes.forEach(function(node) {\n            var center = centers[node.type];\n            if(center){\n                node.x += (center[0] - node.x) * k; // <-C\n                node.y += (center[1] - node.y) * k; // <-D\n            }\n          });\n\n          svg.selectAll(\"circle\")\n              .attr(\"cx\", function(d) { return d.x; })\n              .attr(\"cy\", function(d) { return d.y; });\n});\n```", "```py\n<script type=\"text/javascript\">\n    var w = 1280,\n        h = 800,\n        z = d3.scale.category20c();\n\n    var force = d3.layout.force()\n        .size([w, h]);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n\n    d3.json(\"/data/flare.json\", function(root) {\n      var nodes = flatten(root),\n          links = d3.layout.tree().links(nodes); // <-B\n\n      force\n          .nodes(nodes)\n          .links(links)\n          .start();\n\n      var link = svg.selectAll(\"line\")\n          .data(links)\n        .enter().insert(\"line\")\n          .style(\"stroke\", \"#999\")\n          .style(\"stroke-width\", \"1px\");\n\n      var node = svg.selectAll(\"circle.node\")\n          .data(nodes)\n        .enter().append(\"circle\")\n          .attr(\"r\", 4.5)\n          .style(\"fill\", function(d) { \n             return z(d.parent && d.parent.name); \n})\n          .style(\"stroke\", \"#000\")\n          .call(force.drag);\n\n      force.on(\"tick\", function(e) {\n        link.attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n\n        node.attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n      });\n    });\n\n    function flatten(root) { // <-A\n      var nodes = [];\n      function traverse(node, depth) {\n        if (node.children) {\n          node.children.forEach(function(child) {\n            child.parent = node;\n            traverse(child, depth + 1);\n          });\n        }\n        node.depth = depth;\n        nodes.push(node);\n      }\n      traverse(root, 1);\n      return nodes;\n    }\n</script>\n```"]