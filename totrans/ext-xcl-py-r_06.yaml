- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Inserting ggplot2/matplotlib Graphs
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插入 ggplot2/matplotlib 图表
- en: 'As a programmer, data visualizations are an indispensable tool for analyzing
    and presenting complex information in a more accessible and intuitive manner.
    They play a vital role in various domains, from data analysis and business intelligence
    to scientific research and even everyday decision-making. One of the reasons that
    visuals are beneficial to decision-making is that they help an analyst understand
    data to help communicate items that can help in the decision-making process. Here
    are some other reasons:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 作为程序员，数据可视化是分析并以更易于访问和直观的方式呈现复杂信息的不可或缺的工具。它们在各个领域都发挥着至关重要的作用，从数据分析和企业智能到科学研究甚至日常决策。可视化对决策有益的一个原因是它们帮助分析师理解数据，以帮助传达有助于决策过程的项目。以下是一些其他原因：
- en: '**Enhanced understanding**: Visualizations provide a clear and concise representation
    of data, making it easier for both technical and non-technical stakeholders to
    grasp complex relationships, trends, and patterns. They help identify outliers,
    correlations, and insights that might otherwise be overlooked in raw data.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强理解**：可视化提供了清晰简洁的数据表示，使得技术和非技术利益相关者都能更容易地把握复杂的关系、趋势和模式。它们有助于识别异常值、相关性以及可能在原始数据中被忽视的见解。'
- en: '**Effective communication**: Visualizations are a powerful communication tool
    that transcends language barriers and simplifies complex concepts. Presenting
    data in charts, graphs, and interactive dashboards allows for a more compelling
    and persuasive narrative during meetings, presentations, and reports. When data
    is presented visually, it becomes easier to digest and understand. For example,
    a Sankey chart helps to make a visualization of how data flows from a starting
    point to an endpoint easily digestible.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有效沟通**：可视化是一种超越语言障碍的强大沟通工具，它简化了复杂的概念。在会议、演示和报告中以图表、图形和交互式仪表板的形式呈现数据，可以使叙事更具吸引力和说服力。当数据以视觉形式呈现时，它变得更容易消化和理解。例如，桑基图有助于使从起点到终点的数据流可视化变得易于消化。'
- en: '**Geospatial analysis**: Geographic data visualizations enable deeper exploration.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地理空间分析**：地理数据可视化使得更深入的探索成为可能。'
- en: Examples of popular data visualizations include line charts for time series
    analysis, bar and pie charts for categorical data comparison, scatter plots for
    correlation analysis, bubble charts for multivariate comparisons, and choropleth
    maps for geospatial data representation.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 流行数据可视化的例子包括用于时间序列分析的折线图、用于分类数据比较的条形图和饼图、用于相关性分析的散点图、用于多元比较的气泡图以及用于地理空间数据表示的等值线图。
- en: In conclusion, data visualizations are indispensable for programmers, as they
    facilitate data understanding, communication, decision-making, and exploration,
    making them an essential tool in today’s data-driven world.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，数据可视化对于程序员来说是不可或缺的，因为它们促进了数据理解、沟通、决策和探索，使它们成为当今数据驱动世界中的基本工具。
- en: In the following sections, we are going to explore the use of `ggplot2` and
    `cowplot` to build some visualizations, such as histograms, ordered bar charts,
    and dumbbell charts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将探讨使用 `ggplot2` 和 `cowplot` 构建一些可视化，例如直方图、有序条形图和哑铃图。
- en: 'In this chapter, we are going to learn the following topics:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Visualizing data with `ggplot2`
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `ggplot2` 可视化数据
- en: Enhancing your Excel reports with `plotnine2`, `matplotlib`, and `plotly` graphs
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `plotnine2`、`matplotlib` 和 `plotly` 图表增强你的 Excel 报告
- en: Enhancing Excel reports with visualizations
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用可视化增强 Excel 报告
- en: An introduction to data visualization libraries
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可视化库简介
- en: Creating graphs with `plotnine` (Python’s `ggplot2`)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `plotnine`（Python 的 `ggplot2`）创建图表
- en: Other visualization libraries
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他可视化库
- en: Embedding visualizations in Excel
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Excel 中嵌入可视化
- en: Technical requirements
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need to make sure that you have a few different
    R packages installed. These include the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，你需要确保安装了几个不同的 R 包。这些包括以下内容：
- en: '`ggplot2 3.4.4`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ggplot2 3.4.4`'
- en: '`cowplot 1.1.3`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cowplot 1.1.3`'
- en: 'The code for this chapter can be found on GitHub at the following link: [https://github.com/PacktPublishing/Extending-Excel-with-Python-and-R/tree/main/chapter](https://github.com/PacktPublishing/Extending-Excel-with-Python-and-R/tree/main/chapter6)6.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在以下链接的 GitHub 上找到：[https://github.com/PacktPublishing/Extending-Excel-with-Python-and-R/tree/main/chapter](https://github.com/PacktPublishing/Extending-Excel-with-Python-and-R/tree/main/chapter6)。
- en: Some basics
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些基础知识
- en: 'Before we dive into the core of this chapter, here are some things that it
    will help us understand:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入本章的核心内容之前，这里有一些事情将有助于我们理解：
- en: '**Effective communication**: Visualizations are a powerful communication tool
    that transcends language barriers and simplifies complex concepts. Presenting
    data in charts, graphs, and interactive dashboards allows for a more compelling
    and persuasive narrative during meetings, presentations, and reports.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有效沟通**：可视化是一种强大的沟通工具，它超越了语言障碍并简化了复杂的概念。在会议、演示和报告中以图表、图形和交互式仪表板的形式呈现数据，可以在会议、演示和报告中提供更有说服力和有说服力的叙述。'
- en: '**Data-driven decision making**: Visualizations empower decision-makers to
    base their judgments on data evidence. When data is presented visually, it becomes
    easier to identify potential opportunities, risks, and areas for improvement,
    leading to more informed and effective decisions.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据驱动决策**：可视化使决策者能够基于数据证据做出判断。当数据以视觉形式呈现时，更容易识别潜在的机会、风险和改进领域，从而做出更明智和有效的决策。'
- en: '**Identifying trends and anomalies**: Visualization tools enable programmers
    to spot trends, changes, and anomalies in data quickly. This is particularly valuable
    in fields such as finance, where spotting irregularities promptly can prevent
    significant financial losses.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**识别趋势和异常**：可视化工具使程序员能够快速发现数据中的趋势、变化和异常。这在金融等需要及时识别异常以防止重大财务损失的行业中尤其有价值。'
- en: '**Exploratory Data Analysis** (**EDA**): Data visualizations are essential
    during the exploratory phase of data analysis. By creating scatter plots, histograms,
    box plots, and heatmaps, programmers can explore data’s distribution and relationships
    before diving into more in-depth analysis.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**探索性数据分析**（**EDA**）：在数据分析的探索阶段，数据可视化至关重要。通过创建散点图、直方图、箱线图和热图，程序员可以在进行更深入的分析之前探索数据的分布和关系。'
- en: '**Real-time monitoring**: In applications that deal with constantly changing
    data, real-time visualizations offer a dynamic way to monitor key metrics and
    respond swiftly to emerging situations.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实时监控**：在处理不断变化的数据的应用程序中，实时可视化提供了一种动态的方式来监控关键指标并迅速对新兴情况做出反应。'
- en: '**Geospatial analysis**: Geographic data visualizations, such as maps and heatmaps,
    are invaluable for analyzing location-based information, such as customer distribution,
    disease outbreaks, or environmental changes.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地理空间分析**：地理数据可视化，如地图和热图，对于分析基于位置的信息（如客户分布、疾病爆发或环境变化）非常有价值。'
- en: '**Forecasting and predictive analysis**: Visualizations help in presenting
    predictive models’ results and trends, making it easier for stakeholders to understand
    potential future scenarios and make proactive decisions.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测和预测分析**：可视化有助于展示预测模型的结果和趋势，使利益相关者更容易理解潜在的情景并做出主动决策。'
- en: '**Interactive reporting**: Interactive visualizations allow end users to customize
    and interact with data, creating a more personalized experience and enabling deeper
    exploration.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互式报告**：交互式可视化允许最终用户自定义和交互数据，创造更个性化的体验并允许更深入的探索。'
- en: Let us now go into the details of these basics.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在深入了解这些基础知识。
- en: Visualizing data with ggplot2
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ggplot2 可视化数据
- en: '`ggplot2` is a powerful and widely used data visualization package in the R
    programming language. Developed by Hadley Wickham, it is part of the `tidyverse`
    ecosystem. With `ggplot2`, users can create high-quality and customizable graphics
    through a declarative approach, where plots are constructed by specifying data,
    mapping aesthetics to variables, and adding layers of geometric shapes, statistics,
    and themes. Its grammar of graphics paradigm allows you to easily create complex
    visualizations, making it a popular choice for exploratory data analysis and presentation
    of insights.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`ggplot2` 是 R 编程语言中一个强大且广泛使用的可视化包。由 Hadley Wickham 开发，它是 `tidyverse` 生态系统的一部分。通过
    `ggplot2`，用户可以通过声明式方法创建高质量和可定制的图形，其中图表是通过指定数据、将美学映射到变量以及添加几何形状、统计和主题层来构建的。其图形语法范式允许您轻松创建复杂的可视化，使其成为探索性数据分析和信息展示的热门选择。'
- en: 'In this section, we will make a few graphs using the `ggplot2` library and
    the `iris` dataset that comes with R. The first thing we need to do is install
    it and load it into the current environment:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用 `ggplot2` 库和随 R 一起提供的 `iris` 数据集制作几个图表。我们首先需要做的是安装它并将其加载到当前环境中：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now that we have the library installed and loaded, we can first see how the
    graph will look in base R, using the `hist()` function and then looping through
    the `Species` column of data for `Sepal.Width`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装并加载了库，我们可以首先看看使用`hist()`函数并通过循环鸢尾花数据集中`Species`列的`Sepal.Width`数据，基础R中的图形会是什么样子。
- en: 'Let’s see the rest of the script with an explanation to accompany it:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们带着解释来看一下剩下的脚本：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first line of code, `hist(iris$Sepal.Width)`, makes a histogram of the sepal
    width for all species of iris. The iris dataset is built into R, so we don’t need
    to load it with the `data()` function. The `Sepal.Width` column of the iris dataset
    contains the sepal width measurements for each flower. The `hist()` function plots
    a histogram of the data in a specified column.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行代码，`hist(iris$Sepal.Width)`，为所有鸢尾花种类的花瓣宽度绘制直方图。鸢尾花数据集内置在R中，因此我们不需要使用`data()`函数来加载它。鸢尾花数据集的`Sepal.Width`列包含每个花朵的花瓣宽度测量值。`hist()`函数在指定的列中绘制数据的直方图。
- en: The second line of code, `par(mfrow = c(2,2))`, tells R to split the plotting
    area into four quadrants. This will allow us to plot four histograms side by side.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行代码，`par(mfrow = c(2,2))`，告诉R将绘图区域分成四个象限。这将允许我们并排绘制四个直方图。
- en: The third line of code, `for (species in unique(iris$Species)) {`, starts a
    `for` loop. The `for` loop will iterate over the unique values of the `Species`
    column in the iris dataset. The `unique()` function returns a vector of all the
    unique values in a column.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第三行代码，`for (species in unique(iris$Species)) {`，开始一个`for`循环。这个`for`循环将遍历鸢尾花数据集中`Species`列的唯一值。`unique()`函数返回一个包含列中所有唯一值的向量。
- en: The body of the `for` loop, `hist(iris$Sepal.Width[iris$Species == species],
    main = species, xlab = species)`, makes a histogram of the sepal width for the
    current species. The `iris$Sepal.Width[iris$Species == species]` expression selects
    the sepal width measurements for the current species. The `main` argument specifies
    the title of the histogram, and the `xlab` argument specifies the label for the
    x axis.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`for`循环的主体，`hist(iris$Sepal.Width[iris$Species == species], main = species,
    xlab = species)`，为当前种类的花瓣宽度绘制直方图。表达式`iris$Sepal.Width[iris$Species == species]`选择当前种类的花瓣宽度测量值。`main`参数指定直方图的标题，`xlab`参数指定x轴的标签。'
- en: The fourth line of code, `hist(iris$Sepal.Width, main = "All Species")`, makes
    a histogram of the sepal width for all species. This histogram is plotted in the
    last quadrant of the plotting area.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 第四行代码，`hist(iris$Sepal.Width, main = "All Species")`，为所有种类的花瓣宽度绘制直方图。这个直方图绘制在绘图区域的最后一个象限。
- en: 'The fifth line of code, `par(mfrow = c(1,1))`, tells R to reset the plotting
    area to a single quadrant. Now that we have gone over the code, let’s see what
    the output looks like:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 第五行代码，`par(mfrow = c(1,1))`，告诉R将绘图区域重置为单个象限。现在我们已经看过了代码，让我们看看输出是什么样子：
- en: f
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: f
- en: '![Figure 6.1 – Base R histograms](img/B19142_06_1.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1 – 基础R直方图](img/B19142_06_1.jpg)'
- en: Figure 6.1 – Base R histograms
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – 基础R直方图
- en: 'Now that we have the base R version done, let’s see what this will look like
    in `ggplot2`:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了基础R版本，让我们看看在`ggplot2`中它会是什么样子：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The first line of code, `iris |> ggplot(aes(x = Sepal.Width)) + geom_histogram(alpha
    = 0.328) + theme_minimal()`, makes a histogram of the sepal width for all species
    of iris. The iris dataset is built into R, so we don’t need to load it with the
    `data()` function. The `ggplot()` function is a powerful plotting function in
    R that allows us to create customized visualizations. The `aes()` function specifies
    the aesthetic mappings for the plot. In this case, we are mapping the sepal width
    to the *x*-axis. The `geom_histogram()` function plots a histogram of the data
    in the specified column. The alpha argument specifies the transparency of the
    bars in the histogram. The `theme_minimal()` function applies a minimal theme
    to the plot.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行代码，`iris |> ggplot(aes(x = Sepal.Width)) + geom_histogram(alpha = 0.328)
    + theme_minimal()`，为所有鸢尾花种类的花瓣宽度绘制直方图。鸢尾花数据集内置在R中，因此我们不需要使用`data()`函数来加载它。`ggplot()`函数是R中的一个强大绘图函数，允许我们创建自定义的可视化。`aes()`函数指定了绘图的美学映射。在这种情况下，我们将花瓣宽度映射到*x*轴。`geom_histogram()`函数在指定的列中绘制数据的直方图。alpha参数指定了直方图中柱子的透明度。`theme_minimal()`函数将最小主题应用到绘图上。
- en: The second line of code, `iris |> ggplot(aes(x = Sepal.Width, fill = Species))
    + geom_histogram(alpha = 0.328) + theme_minimal()`, makes a histogram of the sepal
    width for each species. The `fill` argument in the `aes()` function specifies
    the fill color of the bars in the histogram. In this case, we are using the `Species`
    column to color the bars in the histogram. This will allow us to see the distribution
    of sepal width for each species. Now that we have gone over the code, let’s see
    the output.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行代码，`iris |> ggplot(aes(x = Sepal.Width, fill = Species)) + geom_histogram(alpha
    = 0.328) + theme_minimal()`，为每个物种绘制了花瓣宽度的直方图。`aes()` 函数中的 `fill` 参数指定了直方图中条形的填充颜色。在这种情况下，我们使用
    `Species` 列来为直方图中的条形着色。这将使我们能够看到每个物种花瓣宽度的分布。现在我们已经看过了代码，让我们看看输出结果。
- en: This will be in two plots, as `ggplot2` objects are not plotted in a similar
    fashion to base R using the `par()` function.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这将分为两个图表，因为 `ggplot2` 对象不是使用 `par()` 函数以类似的方式绘制的。
- en: 'Here is the first plot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是第一个图表：
- en: '![Figure 6.2 – A ggplot2 histogram of Sepal.Width for all species](img/B19142_06_2.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – 所有物种的 Sepal.Width ggplot2 直方图](img/B19142_06_2.jpg)'
- en: Figure 6.2 – A ggplot2 histogram of Sepal.Width for all species
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 所有物种的 Sepal.Width ggplot2 直方图
- en: 'This is the second plot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第二个图表：
- en: '![Figure 6.3 – A ggplot2 histogram of Sepal.Width filled by species](img/B19142_06_3.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – Sepal.Width 的 ggplot2 直方图，按物种填充](img/B19142_06_3.jpg)'
- en: Figure 6.3 – A ggplot2 histogram of Sepal.Width filled by species
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – Sepal.Width 的 ggplot2 直方图，按物种填充
- en: 'Now, there is one way in which we can see the histograms side by side in `ggplot2`,
    and that is by using the `facet_wrap()` function:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在 `ggplot2` 中并排查看直方图的一种方法是使用 `facet_wrap()` 函数：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `aes()` function specifies the aesthetic mappings for the plot. In this
    case, we are mapping the sepal width to the *x*-axis and the species to the fill
    color of the bars. The `geom_histogram()` function plots a histogram of the data
    in the specified columns. The alpha argument specifies the transparency of the
    bars in the histogram. The `facet_wrap()` function creates a separate plot for
    each value of the `Species` column. The `scales = "free"` argument tells the `facet_wrap()`
    function to allow the x axis and y axis scales to vary for each plot. The `theme_minimal()`
    function applies a minimal theme to the plot. The output of the code is a series
    of three histograms, one for each species of iris. The histograms show the distribution
    of sepal width for each species. The different colors of the bars make it easy
    to see the distribution of sepal width for each species. Here is the result:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`aes()` 函数指定了图表的美学映射。在这种情况下，我们将花瓣宽度映射到 *x* 轴，将物种映射到条形的填充颜色。`geom_histogram()`
    函数在指定的列中绘制数据的直方图。alpha 参数指定了直方图中条形的透明度。`facet_wrap()` 函数为 `Species` 列的每个值创建一个单独的图表。`scales
    = "free"` 参数告诉 `facet_wrap()` 函数允许每个图表的 x 轴和 y 轴比例变化。`theme_minimal()` 函数将最小主题应用到图表上。代码的输出是一系列三个直方图，每个直方图对应于一种鸢尾花物种。直方图显示了每个物种花瓣宽度的分布。条形的颜色差异使我们能够轻松地看到每个物种花瓣宽度的分布。以下是结果：'
- en: '![Figure 6.4 – The ggplot2 histogram of Sepal.Width using facet_wrap](img/B19142_06_4.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4 – 使用 facet_wrap 的 Sepal.Width ggplot2 直方图](img/B19142_06_4.jpg)'
- en: Figure 6.4 – The ggplot2 histogram of Sepal.Width using facet_wrap
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – 使用 facet_wrap 的 Sepal.Width ggplot2 直方图
- en: In this section, we learned how to plot some simple histograms using both base
    R and `ggplot2`. We learned how to facet the histogram by species in both situations
    as well.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何使用基础 R 和 `ggplot2` 绘制一些简单的直方图。我们还学习了如何在两种情况下通过物种对直方图进行分面。
- en: We have finished working in `ggplot`, and now it is time to see how we can extend
    plots with the use of a cowplot, which can help us build more complex and publication-ready
    graphics.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了在 `ggplot` 中的工作，现在是时候看看我们如何通过使用 cowplot 来扩展图表，这可以帮助我们构建更复杂且适合发表的图形。
- en: Visualizing data with the cowplot package
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 cowplot 包可视化数据
- en: 'The R `cowplot` package provides numerous functions for plotting data that
    is of high quality. The `cowplot` package is an R library that provides various
    features to help with creating publication-quality figures. It can be used for
    the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: R 的 `cowplot` 包提供了许多用于绘制高质量数据的函数。`cowplot` 包是一个 R 库，它提供了各种功能来帮助创建发表质量的图形。它可以用于以下方面：
- en: '`plot_grid()` function can be used to arrange multiple plots into a grid, with
    labels and annotations'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot_grid()` 函数可以用来将多个图表排列成一个网格，并带有标签和注释'
- en: '`align_plots()` function can be used to align the axes and other elements of
    multiple plots so that they look consistent'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`align_plots()` 函数可以用来对多个绘图的对齐轴和其他元素，使它们看起来一致'
- en: '`plot_grid()` function can be used to mix plots from different plotting frameworks,
    such as `ggplot2` and base graphics'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot_grid()` 函数可以用来混合来自不同绘图框架的绘图，例如 `ggplot2` 和基础图形'
- en: '`ggdraw()` and `draw_*()` functions can be used to add annotations to plots,
    such as text, images, and shapes'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ggdraw()` 和 `draw_*()` 函数可以用来向绘图添加注释，例如文本、图像和形状'
- en: '`cowplot` package includes several themes that are designed for publication-quality
    figures'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cowplot` 包包含几个专为出版物质量图形设计的主题'
- en: 'Now that we understand what `cowplot` is, let’s dive into the first example:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了什么是 `cowplot`，那么让我们深入第一个例子：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the preceding code, we install both the `ggplot2` and `cowplot` libraries;
    this will work even if they are already installed, but we will install the latest
    version.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们安装了 `ggplot2` 和 `cowplot` 库；即使它们已经安装，这也会正常工作，但我们将会安装最新版本。
- en: 'Now, let’s use a `for` loop to create a plot for each species of the iris dataset:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用一个 `for` 循环为 iris 数据集中的每个物种创建一个绘图：
- en: '[PRE5]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Let’s break the code down step by step in simple terms.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步步简单地分解代码。
- en: The `histograms <- list()` line creates an empty list called `histograms`, where
    we’ll store the histograms for each species.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`histograms <- list()` 行创建了一个名为 `histograms` 的空列表，我们将在这里存储每个物种的直方图。'
- en: In the next line, for `(species in unique(iris$Species))` `{ ... }`, the loop
    goes through each unique species in the Iris dataset and performs the following
    steps for each species. Next is `data_subset <- iris[iris$Species == species,
    ]`; this line creates a subset of the Iris dataset, including only the rows where
    the species matches the current species in the loop. It helps us focus on data
    for one species at a time.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一行，对于 `(species in unique(iris$Species))` `{ ... }`，循环遍历 Iris 数据集中的每个独特的物种，并对每个物种执行以下步骤。接下来是
    `data_subset <- iris[iris$Species == species, ]`；这一行创建了一个 Iris 数据集的子集，只包括与循环中当前物种匹配的行。这有助于我们一次关注一个物种的数据。
- en: The `histogram <- ggplot(data_subset, aes(x = Sepal.Width)) + ...` line is where
    the magic happens. We’re using the `ggplot2` library to create a histogram. It’s
    like drawing a graph that shows how many flowers have a specific sepal width.
    The `aes(x = Sepal.Width)` option tells R that we’re interested in plotting the
    `Sepal.Width` on the *x*-axis.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`histogram <- ggplot(data_subset, aes(x = Sepal.Width)) + ...` 这一行是魔法发生的地方。我们正在使用
    `ggplot2` 库创建一个直方图。这就像绘制一个显示有多少花朵具有特定花瓣宽度的图表。`aes(x = Sepal.Width)` 选项告诉 R 我们对在
    *x*-轴上绘制 `Sepal.Width` 感兴趣。'
- en: The fifth line, `geom_histogram(binwidth = 0.1, fill = "lightblue", color =
    "black")`, adds the bars to the histogram. It specifies how the bars should look,
    such as their width and color. It’s like building the columns of the histogram.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 第五行，`geom_histogram(binwidth = 0.1, fill = "lightblue", color = "black")`，向直方图中添加条形。它指定了条形的外观，例如它们的宽度和颜色。这就像构建直方图的列。
- en: 'The `labs(title = paste("Sepal Width Histogram for", species))` line adds a
    title to the histogram, telling us what it’s about. The title changes based on
    the current species in the loop. It’s like writing a name tag for each histogram.
    The next line, `labs(x = "", y = "")`, removes the *x*- and *y*-axis labels, making
    the histogram look cleaner. We then add a theme to the plot using `theme_minimal()`,
    which makes the background of the histogram simple and clean. Finally, the `histograms[[species]]
    <- histogram` line takes the histogram for the current species, and we store it
    in the `histograms` list. We use the species name to access this histogram later.
    The following code is slightly different but produces the same exact plots:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`labs(title = paste("Sepal Width Histogram for", species))` 这一行向直方图添加了一个标题，告诉我们它是什么。标题根据循环中的当前物种而变化。这就像为每个直方图写一个标签。下一行，`labs(x
    = "", y = "")`，移除了 *x*- 和 *y*-轴标签，使直方图看起来更干净。然后我们使用 `theme_minimal()` 添加一个主题到绘图上，这使得直方图的背景简单且干净。最后，`histograms[[species]]
    <- histogram` 这一行将当前物种的直方图取出，并将其存储在 `histograms` 列表中。我们使用物种名称来访问这个直方图。接下来的代码略有不同，但会产生完全相同的绘图：'
- en: '[PRE6]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'So, in summary, this code creates histograms for the sepal width of different
    species in the iris dataset. It does this by looping through each species, creating
    a subset of data for that species, and then creating a histogram with appropriate
    formatting and labels. All the histograms are stored in a list called `histograms`,
    so we can use them later. In this list, each species is a histogram object, and
    the object is named after the species it visualizes. Now, we are going to create
    and explain the histogram created on the full dataset and then combine them all,
    using the `plot_grid()` function from cowplot. Here is the code:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总的来说，这段代码为iris数据集中不同物种的萼片宽度创建了直方图。它是通过循环每个物种，为该物种创建数据子集，然后创建具有适当格式和标签的直方图来实现的。所有直方图都存储在一个名为`histograms`的列表中，因此我们可以稍后使用它们。在这个列表中，每个物种都是一个直方图对象，并且对象是以它所可视化的物种命名的。现在，我们将创建并解释在完整数据集上创建的直方图，然后使用cowplot的`plot_grid()`函数将它们全部组合。以下是代码：
- en: '[PRE7]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The first line of code that creates the `all_species_hist` variable creates
    a histogram of the `Sepal.Width` column for all species combined. The histogram
    has a binwidth of `0.1`, and the fill color is light blue. The color of the borders
    is black. The title of the histogram is `Sepal Width Histogram for All Species`.
    The theme of the histogram is `theme_minimal()`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`all_species_hist`变量的第一行代码为所有物种的`Sepal.Width`列创建直方图。直方图的binwidth为`0.1`，填充颜色为浅蓝色。边框颜色为黑色。直方图的标题为`所有物种的萼片宽度直方图`。直方图的样式为`theme_minimal()`。
- en: The next line of code, `plot_grid(histograms[["setosa"]], histograms[["versicolor"]],
    histograms[["virginica"]], all_species_hist, ncol = 2, align = "hv")`, uses the
    `cowplot` package to arrange the histograms for each species into a grid. The
    histograms are arranged in two columns, and they are aligned horizontally and
    vertically.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 下一条代码，`plot_grid(histograms[["setosa"]], histograms[["versicolor"]], histograms[["virginica"]],
    all_species_hist, ncol = 2, align = "hv")`，使用`cowplot`包将每个物种的直方图排列成网格。直方图以两列排列，并且水平垂直对齐。
- en: The `plot_grid()` function takes a list of plots as its arguments. The plots
    are arranged in a grid according to the number of columns and rows specified by
    the `ncol` and `nrow` arguments. The `align` argument specifies how the plots
    are aligned with each other. In this case, the plots are aligned horizontally
    and vertically with the `align = "``hv"` argument.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot_grid()`函数接受一个包含图表的列表作为其参数。图表根据`ncol`和`nrow`参数指定的列数和行数排列成网格。`align`参数指定图表如何相互对齐。在这种情况下，图表通过`align
    = "hv"`参数水平垂直对齐。'
- en: 'The output of the `plot_grid()` function is a grid of plots that can be saved
    to a file or displayed in the R console. Now, let’s see the final output:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot_grid()`函数的输出是一个可以保存到文件或显示在R控制台中的图表网格。现在，让我们看看最终的输出：'
- en: '![Figure 6.5 – Using cowplot to plot four histograms together](img/B19142_06_5.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图6.5 – 使用cowplot绘制四个直方图](img/B19142_06_5.jpg)'
- en: Figure 6.5 – Using cowplot to plot four histograms together
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 – 使用cowplot绘制四个直方图
- en: Now that we have seen how to effectively use `cowplot` to combine plots and
    control other parts of the graphic, we can move on to the next type of plot, bar
    charts and dumbbell plots.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了如何有效地使用`cowplot`来组合图表和控制图形的其他部分，我们可以继续到下一种图表类型，条形图和哑铃图。
- en: Bar charts and dumbbell plots
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条形图和哑铃图
- en: 'A bar chart and dumbbell plot are all types of visualizations used to represent
    data. Here is a description of each and their pros and cons. First up is the bar
    chart. A bar chart, also known as a bar graph, uses rectangular bars to compare
    different categories of data. The length or height of each bar represents the
    value of a particular category. The bars can be plotted vertically or horizontally,
    with the most common type being vertical. Some of the pros of a bar chart are
    as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图和哑铃图都是用于表示数据的可视化类型。以下是每种类型的描述及其优缺点。首先是条形图。条形图，也称为条形图，使用矩形条来比较不同类别的数据。每根条的长度或高度代表特定类别的值。条形图可以垂直或水平绘制，最常见的类型是垂直。条形图的一些优点如下：
- en: '**Easy to read and interpret**: Bar charts are straightforward and intuitive,
    making them easy to understand even for people without a background in statistics
    or data visualization'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**易于阅读和理解**：条形图简单直观，即使没有统计学或数据可视化背景的人也能轻松理解。'
- en: '**Effective for comparisons**: Bar charts allow for quick and easy comparisons
    between different categories, making them useful for identifying patterns or trends'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有效的比较工具**：条形图允许快速轻松地比较不同类别，这使得它们在识别模式或趋势时非常有用'
- en: '**Suitable for categorical data**: Bar charts are ideal for representing categorical
    or discrete variables'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适用于分类数据**：条形图非常适合表示分类或离散变量'
- en: 'Here are some of the cons:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些缺点：
- en: '**Limited for continuous data**: Bar charts are not as effective for representing
    continuous variables or data with many distinct values'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连续数据受限**：条形图在表示连续变量或具有许多不同值的 数据方面不如有效'
- en: '**Potential readability issues**: When the number of bars is large or the values
    are close in magnitude, it can be challenging to read the exact values on the
    chart'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**潜在的阅读问题**：当条形数量较多或数值接近时，可能难以在图表上准确读取数值'
- en: 'A dumbbell plot, also known as a connected dot plot or a range bar chart, compares
    the values of two categories or groups. It consists of two dots or markers connected
    by a line, with each dot representing a value and the line indicating the range
    between them. Here are its pros:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 哑铃图，也称为连接点图或范围条形图，比较两个类别或组的数值。它由两个通过线连接的点或标记组成，每个点代表一个值，线表示它们之间的范围。以下是它的优点：
- en: '**Highlights differences and comparisons**: Dumbbell plots are effective for
    emphasizing the differences or comparisons between two categories or groups'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**突出差异和比较**：哑铃图在强调两个类别或组之间的差异或比较方面非常有效'
- en: '**Shows ranges and variances**: The line connecting the dots in a dumbbell
    plot represents the range or variance between the values, providing additional
    information'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示范围和方差**：哑铃图中连接点的线代表数值之间的范围或方差，提供了额外的信息'
- en: '**Suitable for categorical or continuous data**: Dumbbell plots can be used
    for both ordinal and continuous variables'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适用于分类或连续数据**：哑铃图可以用于有序变量和连续变量'
- en: 'Here are the cons:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些缺点：
- en: '**Limited for multiple comparisons**: Dumbbell plots are best suited for comparing
    two categories or groups. If there are more than two groups, the plot can become
    cluttered and confusing.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多比较受限**：哑铃图最适合比较两个类别或组。如果有超过两个组，图表可能会变得杂乱且难以理解。'
- en: '**Less common and familiar**: Dumbbell plots are not as widely used or recognized
    as bar charts or time series charts, which may make them less familiar to some
    viewers.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不如条形图或时间序列图常见或熟悉**：哑铃图不像条形图或时间序列图那样被广泛使用或认可，这可能会使一些观众感到不熟悉。'
- en: In summary, bar charts are useful for comparing values between groups, and dumbbell
    plots are suitable for comparing two categories or groups. Each visualization
    has its strengths and limitations, and the choice depends on the nature of the
    data and the specific insights you want to convey.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，条形图适用于比较组间数值，而哑铃图适合比较两个类别或组。每种可视化都有其优势和局限性，选择取决于数据的性质和您想要传达的具体见解。
- en: Now that we have some information about the different types of plots, along
    with their pros and cons, it’s time to delve into creating them and seeing the
    output.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对不同的图表类型及其优缺点有了些了解，是时候深入探讨如何创建它们并查看输出结果了。
- en: Bar charts with ggplot2
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用ggplot2的条形图
- en: 'Bar charts can be plotted vertically or horizontally, with the most common
    type being vertical. The vertical axis on the left or right side of the bar chart
    is called the y axis, while the horizontal axis at the bottom of the chart is
    called the x axis. The height or length of each bar represents the value of a
    particular category of data. Bar charts can be used to compare different sets
    of data among different groups easily, and they can illustrate important changes
    in data throughout a period. They can be of great use when explaining the meaning
    of complex data, as they allow for quick and easy comparisons between different
    categories. Bar charts are particularly useful for showing segments of information
    and are commonly used to present data or concepts involving data visually. Some
    key properties of bar charts include the following:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图可以垂直或水平绘制，其中最常见的类型是垂直。条形图左侧或右侧的垂直轴称为 y 轴，而图表底部的水平轴称为 x 轴。每个条形的高度或长度代表特定数据类别的值。条形图可以轻松地比较不同组之间的不同数据集，并且可以展示一段时间内数据的重要变化。在解释复杂数据的意义时，它们非常有用，因为它们允许快速轻松地比较不同类别。条形图特别适用于展示信息片段，并且常用于以视觉方式展示涉及数据的数据或概念。条形图的一些关键特性包括以下内容：
- en: The bars are rectangular and of equal width, with varying heights
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条形是矩形且宽度相等，高度不同
- en: The gap between one bar and another should be uniform throughout
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个条形与另一个条形之间的间隙应保持均匀
- en: They can be either horizontal or vertical
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以是水平的或垂直的
- en: Overall, bar charts are a useful tool to convey relational information quickly
    in a visual manner and can be used to compare different sets of data among different
    groups easily. Now that we have a basic understanding of a bar chart and how it
    is useful, let’s go through an example using the `ggplot2` library.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，条形图是一种在视觉上快速传达关系信息的有效工具，可以轻松地比较不同组之间的不同数据集。现在我们已基本了解了条形图及其用途，让我们通过使用 `ggplot2`
    库的示例来学习。
- en: 'First, let’s load in the required libraries, of which `healthyR` and `healthyR.data`
    may need to be installed on your machine, as they may not have been already:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们加载所需的库，其中 `healthyR` 和 `healthyR.data` 可能需要在您的机器上安装，因为它们可能尚未安装：
- en: '[PRE8]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, we’re loading several packages that provide functions and tools for data
    manipulation (`dplyr`, `forcats`, and `purrr`) and visualization (`ggplot2`).
    These packages extend R’s capabilities for handling data and creating plots. We
    load in the `healthyR.data` library for the dataset to work with and the `healthyR`
    library for the use of the `category_counts_tbl()` function.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们加载了几个提供数据操作函数和工具（`dplyr`、`forcats` 和 `purrr`）以及可视化工具（`ggplot2`）的包。这些包扩展了
    R 处理数据和创建图表的能力。我们加载了 `healthyR.data` 库以便使用数据集，以及 `healthyR` 库以便使用 `category_counts_tbl()`
    函数。
- en: 'The next block of code is used to create the dataset that we are going to plot:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 下一段代码用于创建我们将要绘制的数据集：
- en: '[PRE9]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In this step, a pipeline (`|>`) is used to perform a series of operations on
    the data:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，使用管道（`|>`）对数据进行一系列操作：
- en: '`healthyR_data` is a dataset provided by the `healthyR.data` package.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`healthyR_data` 是由 `healthyR.data` 包提供的数据集。'
- en: The `filter()` function removes rows where the `payer_grouping` column is not
    equal to ‘`?`’.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filter()` 函数删除了 `payer_grouping` 列不等于 `''`?`’’ 的行。'
- en: The `category_counts_tbl()` function is applied, which counts the occurrences
    of each unique value in the `payer_grouping` column within each combination of
    `ip_op_flag` values. The `.count_col` argument specifies the column to count,
    `.arrange` sorts the counts in descending order, and `ip_op_flag` groups the data
    by this column.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`category_counts_tbl()` 函数被应用，该函数计算每个唯一的值在 `payer_grouping` 列中每个 `ip_op_flag`
    值组合中的出现次数。`.count_col` 参数指定要计数的列，`.arrange` 按降序排序计数，而 `ip_op_flag` 则按此列对数据进行分组。'
- en: The data is grouped by the `ip_op_flag` column using `group_by()`.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据使用 `group_by()` 函数按 `ip_op_flag` 列进行分组。
- en: The `mutate()` function adds a new column named `order_var`, which contains
    formatted rank values based on the count column, `n`. This is done using the `sprintf()`
    function to format the rank as a two-digit integer. We then ungroup the data,
    as the groups are no longer necessary.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mutate()` 函数添加了一个名为 `order_var` 的新列，其中包含基于计数列 `n` 的格式化排名值。这是通过使用 `sprintf()`
    函数将排名格式化为两位整数来完成的。然后我们取消分组，因为组不再必要。'
- en: 'Now, let’s make the plot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们制作这个图表：
- en: '[PRE10]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This section creates a bar plot using `ggplot2`:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 本节使用 `ggplot2` 创建条形图：
- en: '`ggplot()` initializes the plot, and `aes()` specifies aesthetics (such as
    what goes on the x axis and y axis).'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ggplot()` 初始化图表，`aes()` 指定美学（例如 x 轴和 y 轴上放置的内容）。'
- en: '`geom_col()` adds bars to the plot, where the height of each bar represents
    the value of *n*. The alpha parameter controls the transparency of the bars.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`geom_col()` 向图表中添加条形，其中每个条形的高度代表 *n* 的值。alpha 参数控制条形的透明度。'
- en: '`labs()` sets the axis labels to be empty.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`labs()` 将轴标签设置为空。'
- en: '`theme()` allows theme adjustments to be made, such as removing the legend
    and using a minimal theme.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme()` 允许进行主题调整，例如移除图例和使用简约主题。'
- en: '`facet_wrap()` is used to create separate panels for each unique value of `ip_op_flag`.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`facet_wrap()` 用于为 `ip_op_flag` 的每个唯一值创建单独的面板。'
- en: '`scale_x_discrete()` is used to customize the *x*-axis labels using the `payer_grouping`
    values, indexed by `order_var`.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scale_x_discrete()` 用于使用 `payer_grouping` 值自定义 *x* 轴标签，按 `order_var` 索引。'
- en: '`xlab(NULL)` removes the *x*-axis label.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xlab(NULL)` 移除 *x* 轴标签。'
- en: '`theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))` adjusts
    the appearance of the *x*-axis text, making it vertical.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))` 调整了
    *x* 轴文本的外观，使其垂直。'
- en: '`coord_flip()` flips the *x* and *y* axes.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`coord_flip()` 翻转 *x* 和 *y* 轴。'
- en: '`theme_minimal()` applies a minimalistic theme to the plot.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme_minimal()` 将简约主题应用到图表上。'
- en: 'In summary, this code takes a dataset, filters and processes it, and then creates
    a bar plot with multiple facets, each displaying bars based on counts of a categorical
    variable. The plot’s appearance is customized using various `ggplot2` functions
    and settings. Now, after all of that, let’s see the final output:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，这段代码首先对数据集进行筛选和处理，然后创建一个具有多个维度的条形图，每个维度显示基于分类变量计数的条形。图表的外观通过各种 `ggplot2`
    函数和设置进行定制。现在，在完成所有这些之后，让我们看看最终的输出结果：
- en: '![Figure 6.6 – Using ggplot2 to create bar plots](img/B19142_06_6.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.6 – 使用 ggplot2 创建条形图](img/B19142_06_6.jpg)'
- en: Figure 6.6 – Using ggplot2 to create bar plots
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6 – 使用 ggplot2 创建条形图
- en: In this section, we have learned how to make a fairly sophisticated horizonal
    bar chart. We created an ordered one that allowed us to see information in two
    different groups ordered by the same factor column. It shows us volumes by insurance
    payer group for inpatient and outpatient facets. Now, we will move onto the dumbbell
    plot.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何制作一个相当复杂的水平条形图。我们创建了一个有序的图表，允许我们按相同的因素列查看两个不同组的信息。它显示了住院和门诊维度的保险支付者组体积。现在，我们将转向双杠图。
- en: Dumbbell plots with ggplot2
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ggplot2 的双杠图
- en: A dumbbell plot, also known as a *dot plot with lines*, is a visualization that
    displays the change between two points for different categories. It often uses
    dots (representing the categories) connected by lines to show the change. In R,
    you can create a dumbbell plot using libraries such as `ggplot2`. Here’s how you
    can do it.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 双杠图，也称为*点线图*，是一种显示不同类别之间两点变化的可视化图表。它通常使用点（代表类别）通过线连接来显示变化。在 R 中，你可以使用 `ggplot2`
    等库创建双杠图。下面是如何做到这一点的方法。
- en: First, make sure you have the `ggplot2` and `dplyr` packages installed and loaded.
    You can install them if needed using `install.packages("ggplot2")` and `install.packages("dplyr")`.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，请确保你已经安装并加载了 `ggplot2` 和 `dplyr` 包。如果需要，你可以使用 `install.packages("ggplot2")`
    和 `install.packages("dplyr")` 安装它们。
- en: 'Let’s make a data frame; we will make this with two columns for the initial
    and final values, and a categorical variable to group them. Your data might look
    something like this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个数据框；我们将使用两列来表示初始值和最终值，以及一个分类变量来对它们进行分组。你的数据可能看起来像这样：
- en: '[PRE11]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, let’s create a midpoint of our data before we make the actual plot:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们制作实际图表之前，让我们先创建数据的中点：
- en: '[PRE12]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, we can go ahead and create the plot:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以继续创建图表：
- en: '[PRE13]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This example assumes you have a `Category` column in your data frame that defines
    the groups/categories. The plot will display initial values (blue dots), final
    values (red dots), lines connecting them, and midpoint labels above the lines.
    You can customize the aesthetics, colors, labels, and other elements according
    to your preferences. Now, let’s see what we have created.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例假设你的数据框中有一个 `Category` 列，它定义了组/类别。图表将显示初始值（蓝色点）、最终值（红色点）、连接它们的线以及线上的中点标签。你可以根据你的喜好自定义外观、颜色、标签和其他元素。现在，让我们看看我们创建了什么。
- en: '![Figure 6.7 – A dumbbell plot with ggplot2](img/B19142_06_7.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.7 – 使用 ggplot2 创建的双杠图](img/B19142_06_7.jpg)'
- en: Figure 6.7 – A dumbbell plot with ggplot2
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.7 – 使用 ggplot2 创建的双杠图
- en: Remember that this is just a basic example. Depending on your data and requirements,
    you might need to adjust the code to fit your needs. It is now time for some time
    series graphs.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这只是一个基本示例。根据您的数据和需求，您可能需要调整代码以适应您的需求。现在是时候制作一些时间序列图表了。
- en: Enhancing your Excel reports with plotnine2, matplotlib, and plotly graphs
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 plotnine2、matplotlib 和 plotly 图表增强您的 Excel 报告
- en: The Python section of this chapter explores the integration of popular data
    visualization libraries, such as `plotnine`, `matplotlib`, and `plotly`, with
    Microsoft Excel using Python.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的 Python 部分探讨了如何使用 Python 将流行的数据可视化库，如 `plotnine`、`matplotlib` 和 `plotly`，与
    Microsoft Excel 集成。
- en: You’ll learn how to leverage the strengths of each library to visualize data
    effectively and enhance your Excel reports.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 您将学习如何利用每个库的优势来有效地可视化数据并增强您的 Excel 报告。
- en: 'This part of the chapter is organized into the following sections:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的这一部分组织如下：
- en: '*Enhancing Excel reports with visualizations*: We’ll provide guidance on effectively
    using visualizations to communicate insights and patterns.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用可视化增强 Excel 报告*：我们将提供有关如何有效地使用可视化来传达洞察力和模式的指导。'
- en: '*Introduction to visualization libraries*: We’ll provide an overview of the
    key visualization libraries – `plotnine`, `matplotlib`, and `plotly`. Understanding
    these and the use cases is essential for selecting the right library for your
    needs.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可视化库简介*：我们将概述关键的可视化库 – `plotnine`、`matplotlib` 和 `plotly`。了解这些库及其用例对于选择满足您需求的正确库至关重要。'
- en: '*Creating graphs with* `plotnine`: This section will delve into using the `plotnine`
    library to craft sophisticated graphs. You’ll learn how to generate various plot
    types, customize visual elements, and incorporate additional layers for enhanced
    clarity.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 `plotnine` 创建图表*：本节将深入探讨如何使用 `plotnine` 库制作复杂的图表。您将学习如何生成各种图表类型，自定义视觉元素，并添加额外的层以增强清晰度。'
- en: '*Generating graphs with* `matplotlib`: `matplotlib` is a versatile library
    for creating static visualizations. We’ll walk you through the process of generating
    different types of graphs using `matplotlib` and then transferring them into Excel
    for inclusion in your reports.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 `matplotlib` 创建图表*：`matplotlib` 是一个用于创建静态可视化的多功能库。我们将向您介绍使用 `matplotlib`
    生成不同类型图表的过程，然后将它们转移到 Excel 中以包含在您的报告中。'
- en: '*Embedding visualizations into Excel*: This section covers the practical aspects
    of inserting graphs and charts generated with Python libraries into Excel sheets.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将可视化嵌入到 Excel 中*：本节涵盖了将使用 Python 库生成的图表和图表插入到 Excel 工作表中的实际操作。'
- en: By the end of this chapter, you’ll have the skills to seamlessly bridge the
    gap between data visualization in Python and Excel reporting. Whether you’re creating
    static graphs or interactive visualizations, you’ll be equipped to present data
    in a visually compelling and insightful way within Excel, facilitating more engaging
    and impactful reports.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将具备无缝连接 Python 数据可视化和 Excel 报告的技能。无论您是创建静态图表还是交互式可视化，您都将能够以视觉吸引力和洞察力在
    Excel 中展示数据，从而促进更具吸引力和影响力的报告。
- en: Let’s get plotting! (You can now imagine breaking out in an evil laugh!)
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始绘图吧！（现在您可以想象自己发出邪恶的笑声！）
- en: Enhancing Excel reports with visualizations
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用可视化增强 Excel 报告
- en: In this section of the chapter, we dive into the practical aspect of using visualizations
    to enhance your Excel reports. Beyond the technical aspects of generating and
    embedding visualizations from Python, we will explore the broader significance
    of these visual aids in the context of data-driven decision-making. Visualizations
    in Excel aren’t just about aesthetics; they’re powerful tools for effectively
    communicating insights, patterns, and trends hidden within your data. Whether
    you’re preparing reports for stakeholders, colleagues, or clients, mastering the
    art of incorporating visualizations will elevate your data-driven narratives and
    facilitate more informed decision-making.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的这一部分，我们深入探讨使用可视化来增强 Excel 报告的实际应用。除了从 Python 生成和嵌入可视化的技术方面之外，我们还将探讨这些辅助工具在数据驱动决策背景下的更广泛意义。Excel
    中的可视化不仅仅是关于美观；它们是有效传达隐藏在数据中的洞察力、模式和趋势的强大工具。无论您是为利益相关者、同事还是客户准备报告，掌握融入可视化艺术的技巧都将提升您数据驱动的叙述，并促进更明智的决策。
- en: The upcoming sections provide guidance on how to strategically use visualizations
    within your Excel reports to maximize their impact. You’ll learn not only how
    to create compelling graphs and charts but also how to interpret and present them
    effectively to convey your data’s story.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分将提供指导，说明如何在Excel报告中战略性地使用可视化以最大化其影响力。你不仅将学习如何创建引人入胜的图表和图形，还将学习如何有效地解释和展示它们，以传达数据的故事。
- en: Integrating visualizations into Excel reports goes beyond mere aesthetics –
    it’s about transforming data into insights that drive informed decisions. We will
    delve into various strategies to enhance the impact of your reports by effectively
    utilizing visualizations.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 将可视化集成到Excel报告中不仅关乎美观——它关乎将数据转化为能够驱动明智决策的洞察。我们将深入探讨各种策略，通过有效利用可视化来增强报告的影响力。
- en: The power of visualizations lies not just in their aesthetics but also in their
    ability to tell compelling stories with data. By mastering the art of choosing
    the right visualization type, utilizing annotations, simplifying complex data,
    and adhering to design principles, you’ll be well equipped to elevate your Excel
    reports to new levels of impact and clarity.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化的力量不仅在于其美学，还在于它们用数据讲述引人入胜故事的能力。通过掌握选择正确可视化类型、利用注释、简化复杂数据以及遵循设计原则的艺术，你将充分准备，将Excel报告提升到新的影响力和清晰度水平。
- en: An introduction to data visualization libraries
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可视化库简介
- en: Data visualization is a fundamental aspect of data analysis, and Python offers
    a rich ecosystem of libraries to create engaging and informative visualizations.
    In this section, we will introduce you to three prominent data visualization libraries
    – `plotnine`, `matplotlib`, and `plotly`. Understanding the strengths and applications
    of each library is crucial for effectively conveying your data’s story in Excel
    reports.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化是数据分析的基本方面，Python提供了一套丰富的库来创建引人入胜且信息丰富的可视化。在本节中，我们将向您介绍三个突出的数据可视化库——`plotnine`、`matplotlib`和`plotly`。了解每个库的优势和应用对于在Excel报告中有效地传达数据的故事至关重要。
- en: Plotnine – elegant grammar of graphics
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Plotnine – 优雅的图形语法
- en: The `ggplot2` library is a popular data visualization library in the R programming
    language, known for its expressive and declarative syntax. The Python adaptation
    is called `plotnine`.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`ggplot2`库是R编程语言中流行的数据可视化库，以其表达性和声明性语法而闻名。Python的适配版本称为`plotnine`。'
- en: It is based on the `plotnine` excels in creating intricate, publication-quality
    plots. It offers fine-grained control over aesthetics, enabling you to customize
    every aspect of your visualization.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 它基于`plotnine`在创建复杂、出版物质量图表方面表现出色。它提供了对美学的精细控制，使你能够自定义可视化的每一个方面。
- en: Plotly – interactive visualizations
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Plotly – 交互式可视化
- en: '`plotly` is a versatile Python library that specializes in creating interactive,
    web-based visualizations. It allows you to build interactive dashboards, scatter
    plots, line charts, and more. Users can hover over data points, zoom in, or filter
    data for a dynamic user experience.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotly`是一个多功能的Python库，专注于创建交互式、基于网络的可视化。它允许你构建交互式仪表板、散点图、折线图等。用户可以在数据点上悬停、放大或筛选数据，以实现动态的用户体验。'
- en: '`plotly` integrates seamlessly with Jupyter notebooks, making it a favorite
    choice for data scientists and analysts. It is ideal for generating interactive
    visualizations for web applications, reports, and data exploration.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotly`与Jupyter笔记本无缝集成，使其成为数据科学家和分析师的首选。它非常适合为网络应用程序、报告和数据探索生成交互式可视化。'
- en: Matplotlib – classic and customizable plots
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Matplotlib – 经典且可定制的图表
- en: '`matplotlib` is a foundational library for creating static, high-quality visualizations
    in Python. It provides a wide range of plotting functions, making it suitable
    for various chart types, such as line plots, bar charts, and scatter plots.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib`是创建Python中静态、高质量可视化的基础库。它提供了一系列绘图函数，使其适用于各种图表类型，如折线图、条形图和散点图。'
- en: '`matplotlib` is highly customizable, allowing you to control every detail of
    your plots, from colors and labels to fonts and gridlines. It is the go-to choice
    for generating custom, static plots for research papers, presentations, and Excel
    reports.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib`高度可定制，允许你控制图表的每一个细节，从颜色和标签到字体和网格线。它是生成用于研究论文、演示文稿和Excel报告的定制静态图表的首选选择。'
- en: Understanding the capabilities and best use cases of these libraries will empower
    you to select the right tool for your data visualization needs. Whether you want
    to create elegant, static plots with `plotnine`, interactive dashboards with `plotly`,
    or highly customized visualizations with `matplotlib`, you’ll have the knowledge
    to choose the library that aligns with your goals.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 理解这些库的功能和最佳用例将赋予你选择适合你数据可视化需求正确工具的能力。无论你想要使用 `plotnine` 创建优雅的静态图表，还是使用 `plotly`
    创建交互式仪表板，或者使用 `matplotlib` 创建高度定制的可视化，你都将拥有选择与你的目标相符的库的知识。
- en: In the following sections, we’ll delve deeper into each library, providing practical
    examples and insights to help you master the art of data visualization in Python
    for Excel reports.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将更深入地探讨每个库，提供实际示例和见解，帮助你掌握在 Python 中进行数据可视化的艺术，以便为 Excel 报告制作。
- en: Let’s dive into `plotnine` first.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先深入了解 `plotnine`。
- en: Creating graphs with plotnine (Python’s ggplot2)
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 plotnine 创建图表（Python 的 ggplot2）
- en: In this section, we will explore the powerful capabilities of the `plotnine`
    library in Python, which draws inspiration from R’s `ggplot2`, covered by the
    R section of this chapter. You will see that (other than accounting for differences
    in syntax between R and Python) the code and features are extremely similar –
    `plotnine` and *ggplot2* are truly sister packages.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探索 Python 中 `plotnine` 库的强大功能，该库从 R 的 `ggplot2` 中汲取灵感，如本章 R 部分所述。你会发现（除了
    R 和 Python 之间语法差异的考虑之外）代码和功能极其相似——`plotnine` 和 *ggplot2* 真的是姐妹包。
- en: By the end of this section, you’ll be well versed in generating a wide range
    of visualizations, customizing every detail, and incorporating additional layers
    for enhanced clarity.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 到本节结束时，你将熟练掌握生成各种可视化、自定义每个细节以及添加额外层以增强清晰度的技能。
- en: Understanding the grammar of graphics
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解图形语法
- en: Before we dive into creating impressive graphs with `plotnine`, it’s essential
    to understand the grammar of graphics. This structured approach to data visualization
    forms the core of `plotnine` and enables you to build complex plots by combining
    data, aesthetics, and geometric objects.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨使用 `plotnine` 创建令人印象深刻的图表之前，了解图形语法至关重要。这种结构化的数据可视化方法构成了 `plotnine` 的核心，并使你能够通过组合数据、美学和几何对象来构建复杂的图表。
- en: 'Let’s break down some key concepts:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一些关键概念：
- en: '`plotnine` links data to visual elements in your plot. You’ll specify which
    variables represent the *x* and *y* axes, color, shape, size, and so on.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plotnine` 将数据与图表中的视觉元素相连接。你需要指定哪些变量代表 *x* 和 *y* 轴、颜色、形状、大小等。'
- en: '**Aesthetics**: Aesthetics control how data attributes are represented visually.
    You can use aesthetics to encode information such as color, shape, and size.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**美学**：美学控制数据属性如何以视觉方式表示。你可以使用美学来编码诸如颜色、形状和大小等信息。'
- en: '`plotnine` encourages a layered approach. Each layer adds a new element to
    your plot, such as points, lines, or labels. This allows for intricate, information-rich
    visualizations.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plotnine` 鼓励分层方法。每一层都会为你的图表添加一个新元素，例如点、线或标签。这允许创建复杂且信息丰富的可视化。'
- en: Generating various plot types
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成各种图表类型
- en: One of the `plotnine` library’s strengths is its versatility. You can create
    numerous plot types, catering to different data visualization needs.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotnine` 库的一个优势是其多功能性。你可以创建多种图表类型，满足不同的数据可视化需求。'
- en: 'In this section, we’ll illustrate the construction of various plot types using
    `plotnine`:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用 `plotnine` 展示各种图表类型的构建。
- en: '**Scatter plots**: Simple yet effective, scatter plots help visualize relationships
    between two numerical variables:'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**散点图**：简单而有效，散点图有助于可视化两个数值变量之间的关系：'
- en: '[PRE14]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here is the plot the preceding code generates:'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是前面代码生成的图表：
- en: '![Figure 6.8 – A basic scatter plot](img/B19142_06_8.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.8 – 基本散点图](img/B19142_06_8.jpg)'
- en: Figure 6.8 – A basic scatter plot
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.8 – 基本散点图
- en: '**Bar charts**: Ideal for displaying categorical data, bar charts are excellent
    for comparisons:'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**条形图**：非常适合显示分类数据，条形图在比较方面表现优秀：'
- en: '[PRE15]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here is the plot for it:'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是它的图表：
- en: '![](img/B19142_06_9.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![img/B19142_06_9.jpg](img/B19142_06_9.jpg)'
- en: Figure 6.9 – A basic bar chart
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.9 – 基本条形图
- en: '**Histograms**: These are used to explore the distribution of a single variable:'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直方图**：这些用于探索单个变量的分布：'
- en: '[PRE16]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here is the plot for it:'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是它的图表：
- en: '![](img/B19142_06_10.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![img/B19142_06_10.jpg](img/B19142_06_10.jpg)'
- en: Figure 6.10 – A basic histogram
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.10 – 基本直方图
- en: Note how we can use a syntax completely analogue to the R `ggplot2` syntax up
    to and including the alpha parameter to control the transparency. It goes to show
    that R and Python are essentially similar tools with similar syntax in some packages!
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们如何使用与 R `ggplot2` 语法完全类似，包括 alpha 参数来控制透明度的语法。这表明 R 和 Python 在某些包中实际上是相似的工具，具有相似的语法！
- en: '**Box plots**: Box plots provide a summary of the distribution of a dataset,
    including the median, quartiles, and potential outliers:'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**箱线图**：箱线图提供了数据集分布的摘要，包括中位数、四分位数和潜在的异常值：'
- en: '[PRE17]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Here is the plot for it:'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是相应的图表：
- en: '![](img/B19142_06_11.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19142_06_11.jpg)'
- en: Figure 6.11 – A basic box plot
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 – 一个基本的箱线图
- en: '`geom_tile()` to achieve this:'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `geom_tile()` 来实现这一点：
- en: '[PRE18]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here is the plot for it:'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是相应的图表：
- en: '![Figure 6.12 – A basic heatmap](img/B19142_06_12.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图6.12 – 一个基本的热图](img/B19142_06_12.jpg)'
- en: Figure 6.12 – A basic heatmap
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12 – 一个基本的热图
- en: '**Violin plots**: Combining box plots and kernel density estimation, violin
    plots showcase data distributions with rich detail:'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小提琴图**：结合箱线图和核密度估计，小提琴图展示了具有丰富细节的数据分布：'
- en: '[PRE19]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here is the plot for it:'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是相应的图表：
- en: '![](img/B19142_06_13.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19142_06_13.jpg)'
- en: Figure 6.13 – A basic violin plot
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13 – 一个基本的提琴图
- en: Now that the basics are covered, let’s have a look at what makes `plotnine`
    so special – all the customization possibilities!
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 现在基础知识已经介绍完毕，让我们看看是什么让 `plotnine` 如此特别——所有的自定义可能性！
- en: Customizing the visual elements of a plotnine plot
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义 plotnine 图表的视觉元素
- en: 'The `plotnine` library’s strength extends to customization. You can tailor
    every aspect of your visualizations to meet specific requirements. Here’s a detailed
    explanation of how you can customize various aspects of your visualizations:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotnine` 库的优势也体现在自定义上。你可以定制视觉呈现的各个方面以满足特定需求。以下是关于如何自定义视觉呈现各个方面的详细说明：'
- en: '`plotnine`, you can customize labels for the *x* and *y*-axes using the `xlab()`
    and `ylab()` functions, respectively. To add a title and subtitle to your plot,
    use the `ggtitle()` and `labs()` functions:'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `plotnine`，你可以使用 `xlab()` 和 `ylab()` 函数分别自定义 *x* 和 *y* 轴的标签。要为你的图表添加标题和副标题，请使用
    `ggtitle()` 和 `labs()` 函数：
- en: '[PRE20]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '`scale_x_continuous()` and `scale_y_continuous()` to customize scales and legends:'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scale_x_continuous()` 和 `scale_y_continuous()` 用于自定义刻度和图例：'
- en: '[PRE21]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '`theme_minimal()` or `theme_light()` to maintain a clean look throughout your
    reports or presentations.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `theme_minimal()` 或 `theme_light()` 来保持报告或演示文稿的整体整洁外观。
- en: '[PRE22]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`theme()` function. Adjust parameters such as `text`, `text_size`, `text_family`,
    and `text_align` to achieve the desired text formatting:'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `theme()` 函数调整参数，如 `text`、`text_size`、`text_family` 和 `text_align` 以实现所需的文本格式：
- en: '[PRE23]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The preceding customizations result in the following graph:'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述自定义设置产生了以下图表：
- en: '![](img/B19142_06_14.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19142_06_14.jpg)'
- en: Figure 6.14 – Custom visual elements
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 – 自定义视觉元素
- en: By customizing these elements, you can create visually appealing and highly
    tailored visualizations to effectively communicate your data insights.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 通过自定义这些元素，你可以创建视觉上吸引人且高度定制的视觉呈现，以有效地传达你的数据洞察。
- en: Beyond customization, `plotnine` has another trick up its sleeves – layers!
    In the next section, we will have a look at what layers are and how to use them
    to deliver the best visualization possible.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 除了自定义之外，`plotnine` 还有一个绝招——图层！在下一节中，我们将探讨图层是什么以及如何使用它们来呈现最佳的视觉呈现。
- en: Incorporating additional layers
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加额外的图层
- en: 'Layering is a powerful concept in `plotnine`. It allows you to superimpose
    multiple layers on a single plot, each conveying different aspects of your data.
    In this section, we’ll explore some common layers:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 层叠是 `plotnine` 中的一个强大概念。它允许你在单个图表上叠加多个图层，每个图层传达数据的不同方面。在本节中，我们将探讨一些常见的图层：
- en: '**Trendlines**: Add trendlines to reveal underlying patterns in your data'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**趋势线**：添加趋势线以揭示数据中的潜在模式'
- en: '**Error bars**: Visualize variability and uncertainty by incorporating error
    bars'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**误差线**：通过包含误差线来可视化变异性和不确定性'
- en: '**Annotations**: Highlight specific data points or regions with text labels
    or geometric shapes'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注释**：使用文本标签或几何形状突出显示特定的数据点或区域'
- en: 'To add error bars, you can use the following code:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加误差线，你可以使用以下代码：
- en: '[PRE24]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This results in the following plot:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这产生了以下图表：
- en: '![Figure 6.15 – Error bars added](img/B19142_06_15.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![图6.15 – 添加了误差线](img/B19142_06_15.jpg)'
- en: Figure 6.15 – Error bars added
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 – 添加了误差线
- en: 'For trendlines, you can use the following:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 对于趋势线，你可以使用以下方法：
- en: '[PRE25]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This results in a trendline added to the plot:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在图表中添加趋势线：
- en: '![](img/B19142_06_16.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19142_06_16.jpg)'
- en: Figure 6.16 – A scatter plot with a trendline
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16 – 带趋势线的散点图
- en: 'Finally, for annotations, we have the following:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于注释，我们有以下内容：
- en: '[PRE26]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'This results in the following plot:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 这会产生以下图表：
- en: '![Figure 6.17 – An annotated scatter plot](img/B19142_06_17.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![图6.17 – 带注释的散点图](img/B19142_06_17.jpg)'
- en: Figure 6.17 – An annotated scatter plot
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17 – 带注释的散点图
- en: Whether you’re communicating insights, comparing datasets, or exploring trends,
    `plotnine` will empower you to create engaging and data-driven narratives for
    your Excel reports.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是传达洞察力、比较数据集还是探索趋势，`plotnine`都将赋予您为Excel报告创建引人入胜且数据驱动的叙述的能力。
- en: Next, let’s have a look at similar plots using `matplotlib`!
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看使用`matplotlib`的类似图表！
- en: Generating graphs with matplotlib
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用matplotlib生成图表
- en: In this section, we will dive into the versatile world of `matplotlib`, one
    of the most widely used data visualization libraries in Python. With `matplotlib`,
    you have the power to create an array of static visualizations, fine-tune their
    appearance, and tailor them to your specific needs. Whether you’re looking to
    craft scatter plots, bar charts, histograms, or other graphical representations
    of your data, `matplotlib` provides the tools to turn your data into compelling
    visual insights.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将深入探讨`matplotlib`的灵活世界，它是Python中最广泛使用的可视化库之一。使用`matplotlib`，您有权创建一系列静态可视化，精细调整其外观，并按您的特定需求定制。无论您是想制作散点图、条形图、直方图或其他数据图形表示，`matplotlib`都提供了将您的数据转化为引人入胜的视觉洞察力的工具。
- en: Creating diverse plot types with matplotlib
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用matplotlib创建多种图表类型
- en: '`matplotlib` is celebrated for its versatility, offering a wide array of plot
    types to meet diverse data visualization requirements. In this section, we’ll
    delve into the construction of various plot types using `matplotlib`, allowing
    you to craft scatter plots, bar charts, histograms, box plots, heatmaps, and violin
    plots. Whether you’re seeking to explore relationships between variables, display
    categorical data, or analyze data distributions, `matplotlib` equips you with
    the tools to create the visualizations you need:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib`因其多功能性而受到赞誉，提供了广泛的图表类型以满足不同的数据可视化需求。在本节中，我们将深入研究使用`matplotlib`构建各种图表类型，让您能够制作散点图、条形图、直方图、箱线图、热图和小提琴图。无论您是寻求探索变量之间的关系、显示分类数据还是分析数据分布，`matplotlib`都为您提供了创建所需可视化的工具：'
- en: '**Scatter plots**: Here is the code for them:'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**散点图**：以下是它们的代码：'
- en: '[PRE27]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This code will create a scatter plot of height versus weight and save it as
    a `.png` image. You can further customize the plot as needed. The result is shown
    as follows:'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码将创建身高与体重的关系散点图，并将其保存为`.png`图像。您可以根据需要进一步自定义图表。结果如下所示：
- en: '![Figure 6.18 – A basic scatter plot with matplotlib](img/B19142_06_18.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![图6.18 – 使用matplotlib的基本散点图](img/B19142_06_18.jpg)'
- en: Figure 6.18 – A basic scatter plot with matplotlib
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.18 – 使用matplotlib的基本散点图
- en: '**Bar charts**: Here is the code for them:'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**条形图**：以下是它们的代码：'
- en: '[PRE28]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This code creates a simple bar chart with categories on the *x*-axis and corresponding
    values on the *y*-axis, resulting in the following:'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码创建了一个简单的条形图，类别在*x*轴上，相应的值在*y*轴上，结果如下：
- en: '![Figure 6.19 – A basic bar chart with matplotlib](img/B19142_06_19.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![图6.19 – 使用matplotlib的基本条形图](img/B19142_06_19.jpg)'
- en: Figure 6.19 – A basic bar chart with matplotlib
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.19 – 使用matplotlib的基本条形图
- en: '**Histograms**: Here is the code for them:'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直方图**：以下是它们的代码：'
- en: '[PRE29]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This code generates a histogram from random data, showcasing the frequency
    distribution of values. You can adjust the number of bins, colors, labels, and
    other properties to customize the histogram as needed. The histogram generated
    is shown as follows:'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码从随机数据生成直方图，展示了值的频率分布。您可以调整箱数、颜色、标签和其他属性以根据需要自定义直方图。生成的直方图如下所示：
- en: '![Figure 6.20 – A basic histogram with matplotlib](img/B19142_06_20.jpg)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![图6.20 – 使用matplotlib的基本直方图](img/B19142_06_20.jpg)'
- en: Figure 6.20 – A basic histogram with matplotlib
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.20 – 使用matplotlib的基本直方图
- en: '**Box plots**: Here is the code for them:'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**箱线图**：以下是它们的代码：'
- en: '[PRE30]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This code generates a basic box plot from random data, comparing three different
    datasets. You can adjust various parameters to customize the appearance of the
    box plot as needed. The preceding code results in this visualization:'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码从随机数据生成基本箱线图，比较三个不同的数据集。您可以调整各种参数以根据需要自定义箱线图的外观。前面的代码产生以下可视化：
- en: '![Figure 6.21 – A basic box plot with matplotlib](img/B19142_06_21.jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.21 – 使用 matplotlib 的基本箱线图](img/B19142_06_21.jpg)'
- en: Figure 6.21 – A basic box plot with matplotlib
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.21 – 使用 matplotlib 的基本箱线图
- en: '**Heatmaps**: Here is the code for them:'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**热图**：以下是它们的代码：'
- en: '[PRE31]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'In this code, we generate a random 5x5 matrix of values and create a heatmap
    from it. We will use the `viridis` colormap, but you can choose from various colormaps
    to adjust the color scheme. This example demonstrates how to create a basic heatmap;
    you can further customize it according to your data and preferences. The resulting
    heatmap is shown as follows:'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此代码中，我们生成一个随机的 5x5 矩阵值并从中创建一个热图。我们将使用 `viridis` 色彩映射，但您可以从各种色彩映射中选择以调整颜色方案。此示例演示了如何创建基本热图；您可以根据数据和偏好进一步自定义它。结果热图如下所示：
- en: '![Figure 6.22 – A basic heatmap with matplotlib](img/B19142_06_22.jpg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.22 – 使用 matplotlib 的基本热图](img/B19142_06_22.jpg)'
- en: Figure 6.22 – A basic heatmap with matplotlib
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.22 – 使用 matplotlib 的基本热图
- en: '**Violin plots**: Here is the code for them:'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小提琴图**：以下是它们的代码：'
- en: '[PRE32]'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'In this code, we generate three sets of random data and create a violin plot
    to visualize their distributions. The `showmedians=True` argument displays the
    median values inside each violin. You can adjust the data, labels, and other plot
    properties to fit your specific dataset and requirements. Let’s have a look at
    the plot generated:'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此代码中，我们生成三组随机数据并创建小提琴图来可视化它们的分布。`showmedians=True` 参数在每把小提琴内显示中值。您可以根据特定数据集和需求调整数据、标签和其他图表属性。让我们看看生成的图表：
- en: '![Figure 6.23 – A basic violin plot with matplotlib](img/B19142_06_23.jpg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.23 – 使用 matplotlib 的基本小提琴图](img/B19142_06_23.jpg)'
- en: Figure 6.23 – A basic violin plot with matplotlib
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.23 – 使用 matplotlib 的基本小提琴图
- en: Next, let’s see how to customize the visual elements in a plot of matplotlib.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何自定义 matplotlib 图表中的视觉元素。
- en: Customizing visual elements of a matplotlib plot
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义 matplotlib 图表的可视元素
- en: The plots created by `matplotlib` can, of course, be customized in many ways,
    just like the plots generated with `plotly`. In this section, we will explore
    the most important aspects and provide some examples along the way.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib` 创建的图表当然可以以多种方式自定义，就像使用 `plotly` 生成的图表一样。在本节中，我们将探讨最重要的方面，并在过程中提供一些示例。'
- en: Labels and titles
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标签和标题
- en: '`matplotlib` allows you to customize axis labels, plot titles, and subtitles
    easily. You can set labels for the *x*- and *y*-axes, title your plot for context,
    and even add subtitles to provide additional information or context. Here’s an
    example of how to customize labels and titles in `matplotlib`:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib` 允许您轻松自定义坐标轴标签、图表标题和副标题。您可以为 *x* 和 *y* 轴设置标签，为图表添加上下文标题，甚至添加副标题以提供额外信息或背景。以下是如何在
    `matplotlib` 中自定义标签和标题的示例：'
- en: '[PRE33]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Here is the graph for it:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的图表：
- en: '![Figure 6.24 – Customizing labels with matplotlib](img/B19142_06_24.jpg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.24 – 使用 matplotlib 自定义标签](img/B19142_06_24.jpg)'
- en: Figure 6.24 – Customizing labels with matplotlib
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.24 – 使用 matplotlib 自定义标签
- en: Axes and legends
  id: totrans-313
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 坐标轴和图例
- en: '`matplotlib` allows you to adjust axis scales, add axis breaks, and fine-tune
    legends. You can change the range, scale, and tick positions on both the *x*-
    and *y*-axes. Additionally, you can customize legends to better represent data
    series or categories.'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib` 允许您调整坐标轴刻度，添加坐标轴断点，并微调图例。您可以在 *x* 和 *y* 轴上更改范围、刻度和小数点位置。此外，您还可以自定义图例以更好地表示数据系列或类别。'
- en: 'Here’s an example of customizing axes and legends:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个自定义坐标轴和图例的示例：
- en: '[PRE34]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Here is the plot for it:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的图表：
- en: '![Figure 6.25 – Customizing axes and the legend with matplotlib](img/B19142_06_25.jpg)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.25 – 使用 matplotlib 自定义坐标轴和图例](img/B19142_06_25.jpg)'
- en: Figure 6.25 – Customizing axes and the legend with matplotlib
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.25 – 使用 matplotlib 自定义坐标轴和图例
- en: Themes
  id: totrans-320
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主题
- en: '`matplotlib` offers a variety of themes to maintain consistency in your visualizations.
    You can choose from different predefined styles to match your report or presentation’s
    aesthetics. Here’s how you can apply a different theme. As an example, we will
    apply the `ggplot` theme you became familiar with earlier in the chapter:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib` 提供了各种主题，以保持可视化的一致性。您可以从不同的预定义样式中选择，以匹配您的报告或演示文稿的美学。以下是如何应用不同主题的方法。作为一个例子，我们将应用您在本章早期熟悉的
    `ggplot` 主题：'
- en: '[PRE35]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Here is the plot:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 这是图表：
- en: '![Figure 6.26 – Using themes with matplotlib](img/B19142_06_26.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.26 – 在 matplotlib 中使用主题](img/B19142_06_26.jpg)'
- en: Figure 6.26 – Using themes with matplotlib
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.26 – 在 matplotlib 中使用主题
- en: Text formatting
  id: totrans-326
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本格式化
- en: '`matplotlib` allows you to control text size, style, and alignment for a polished
    look. You can adjust the font size, use bold or italic styles, and specify alignment
    for text elements such as titles, labels, and annotations. Here’s an example of
    text formatting:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib` 允许你控制文本大小、样式和对齐，以获得精美的外观。你可以调整字体大小，使用粗体或斜体样式，并指定标题、标签和注释等文本元素的对齐方式。以下是一个文本格式化的示例：'
- en: '[PRE36]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Here is the plot for it:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 这是相应的图表：
- en: '![Figure 6.27 – Text formatting with matplotlib](img/B19142_06_27.jpg)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.27 – 使用 matplotlib 进行文本格式化](img/B19142_06_27.jpg)'
- en: Figure 6.27 – Text formatting with matplotlib
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.27 – 使用 matplotlib 进行文本格式化
- en: These examples showcase how you can achieve various customization aspects in
    your `matplotlib` visualizations.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例展示了你如何在 `matplotlib` 可视化中实现各种定制方面。
- en: This concludes our overview of the most popular and powerful visualization libraries
    in Python. The next section covers short descriptions of the other choices available.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了我们对 Python 中最受欢迎和功能强大的可视化库的概述。下一节将涵盖其他可选方案的简要描述。
- en: Other visualization libraries
  id: totrans-334
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他可视化库
- en: For completeness’s sake, here is a brief description of other popular libraries
    as well.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完整性，这里简要描述其他流行的库。
- en: plotly
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: plotly
- en: '`plotly` is a popular Python library known for creating interactive and visually
    appealing data visualizations. It excels in generating dynamic charts, dashboards,
    and interactive plots. Unfortunately, the full power of the `plotly` library’s
    interactivity does not work seamlessly with the most recent versions of Excel,
    due to security considerations introduced by Microsoft. This limitation can hinder
    its integration into Excel for users who rely on the latest Excel features and
    functionalities. Since the focus of this book is enhancing your Excel-based workflows,
    we will not cover `plotly` in detail.'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotly` 是一个流行的 Python 库，以其创建交互式和视觉上吸引人的数据可视化而闻名。它在生成动态图表、仪表板和交互式图表方面表现出色。不幸的是，由于微软引入的安全考虑，`plotly`
    库的交互功能与 Excel 的最新版本无法无缝工作。这种限制可能会阻碍依赖最新 Excel 特性和功能的用户将其集成到 Excel 中。鉴于本书的重点是增强你的
    Excel 工作流程，我们将不会详细介绍 `plotly`。'
- en: seaborn
  id: totrans-338
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: seaborn
- en: '`seaborn` is another Python library designed for statistical data visualization.
    While it offers a wide range of customization options and the ability to create
    complex plots, it often requires more code to achieve the same results compared
    to libraries such as `matplotlib` and `plotnine`. Given the focus on simplicity
    and ease of use in the chapter, we chose to emphasize libraries that provide a
    more straightforward and concise approach to data visualization.'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '`seaborn` 是另一个专为统计数据可视化设计的 Python 库。虽然它提供了广泛的定制选项和创建复杂图表的能力，但与 `matplotlib`
    和 `plotnine` 等库相比，通常需要更多的代码来实现相同的结果。鉴于本章的重点是简单性和易用性，我们选择强调提供更直接和简洁的数据可视化方法的库。'
- en: In this section, we primarily focused on `matplotlib` and `plotnine` due to
    their simplicity and compatibility with Excel, ensuring you can quickly generate
    and integrate visualizations into Excel reports without unnecessary complexity.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们主要关注 `matplotlib` 和 `plotnine`，因为它们简单且与 Excel 兼容，确保你可以快速生成并集成可视化到 Excel
    报告中，而无需不必要的复杂性。
- en: 'Now that we have covered the most popular libraries you can use to create visualizations,
    we can continue with the distribution of the plots: embedding them into Excel!'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了你可以用来创建可视化的最受欢迎的库，我们可以继续讨论图表的分布：将它们嵌入到 Excel 中！
- en: Embedding visualizations into Excel
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将可视化嵌入到 Excel 中
- en: When working with Python libraries such as `matplotlib` and `plotnine` to create
    visualizations, you might want to seamlessly integrate these visualizations into
    your Excel reports or spreadsheets. Embedding these plots and charts into Excel
    can be a valuable addition to your data analysis toolkit. In this section, we’ll
    explore the fundamentals of embedding `matplotlib` and `plotnine` visualizations
    into Excel, helping you leverage the power of Python’s data visualization libraries
    alongside Excel’s reporting capabilities.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 `matplotlib` 和 `plotnine` 等Python库创建可视化时，你可能希望将这些可视化无缝集成到你的 Excel 报告或电子表格中。将这些图表和图表嵌入到
    Excel 中可以成为你的数据分析工具包中的一个宝贵补充。在本节中，我们将探讨将 `matplotlib` 和 `plotnine` 可视化嵌入到 Excel
    的基础知识，帮助你利用 Python 数据可视化库的强大功能以及 Excel 的报告功能。
- en: A basic embedding process
  id: totrans-344
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本嵌入过程
- en: The process of embedding `matplotlib` and `plotnine` visualizations into Excel
    typically involves exporting your plots or charts as image files (such as PNG
    or JPEG) and then importing these images into your Excel sheet. While this approach
    doesn’t offer the same level of interactivity as some other methods, it’s a straightforward
    way to enhance your Excel reports with data visualizations generated in Python.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 将`matplotlib`和`plotnine`可视化嵌入到Excel中的过程通常涉及将你的图表或图形导出为图像文件（如PNG或JPEG），然后将这些图像导入到你的Excel表中。虽然这种方法不提供与其他一些方法相同级别的交互性，但它是一种简单直接的方法，可以将Python生成的数据可视化添加到Excel报告中。
- en: 'Here are the basic steps:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是基本步骤：
- en: '`matplotlib` or `plcotnine` visualization in your Python script or Jupyter
    notebook. Customize it to meet your data analysis and reporting requirements.'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的Python脚本或Jupyter笔记本中，使用`matplotlib`或`plotnine`进行可视化。根据你的数据分析和要求进行自定义。
- en: '`matplotlib` or `plotnine` to save your visualization as an image file. Common
    image formats such as PNG or JPEG work well for this purpose. Ensure that you
    save the image in a location accessible from your Excel sheet.'
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`matplotlib`或`plotnine`将你的可视化保存为图像文件。常见的图像格式，如PNG或JPEG，适用于此目的。确保你将图像保存到可以从你的Excel表中访问的位置。
- en: '`pywin32`:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`pywin32`：'
- en: '[PRE37]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '**Scheduling a script for updates (optional)**: If your data changes regularly,
    you may want to consider scheduling script-generating the image in Excel and inserting
    it, using the method from the preceding *option 2*. This way, your visualization
    regularly updates automatically. You can do this with what you learned in [*Chapter
    4*](B19142_04.xhtml#_idTextAnchor078).'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安排脚本更新（可选）**：如果你的数据经常变化，你可能需要考虑使用前一个*选项2*中的方法来安排在Excel中生成图像的脚本，并将其插入。这样，你的可视化将定期自动更新。你可以使用你在[*第4章*](B19142_04.xhtml#_idTextAnchor078)中学到的知识来做这件事。'
- en: While this method provides a static representation of your visualizations, it’s
    a practical way to enhance your Excel reports with Python-generated charts and
    plots.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种方法提供了你可视化的静态表示，但它是用Python生成的图表和图形来增强Excel报告的实用方法。
- en: Summary
  id: totrans-353
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Embedding visualizations in Excel reports offers a practical way to enhance
    data presentation, customization, and automation. Whether you’re working with
    sales data, financial reports, or any other dataset, this approach empowers you
    to create insightful reports that convey your data-driven insights effectively.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 在Excel报告中嵌入可视化提供了一种实用的方法来增强数据展示、自定义和自动化。无论你是在处理销售数据、财务报告还是任何其他数据集，这种方法都能让你创建出能够有效传达数据驱动洞察力的有洞察力的报告。
- en: In this chapter, you learned about data visualization techniques in general,
    the ways to extend your Excel workflows and reports with those techniques, and
    how to implement them in R and Python.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了数据可视化技术的一般知识，如何使用这些技术扩展你的Excel工作流程和报告，以及如何在R和Python中实现它们。
- en: We have covered the most popular and powerful R packages and Python libraries
    in detail. You learned about the typical plots used to carry out your analysis
    and how to communicate your findings, along with use cases and examples where
    those data visualizations can be used.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 我们详细介绍了最受欢迎和最强大的R包和Python库。你了解了执行分析时使用的典型图表，以及如何传达你的发现，包括使用案例和示例，说明这些数据可视化可以在哪些情况下使用。
- en: The next time you prepare an Excel report, you will be in a position to dazzle
    your audience with the most beautiful and insightful visualizations they have
    ever seen!
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 下次你准备Excel报告时，你将能够用最美丽、最有洞察力的可视化来惊艳你的观众！
- en: 'In the next chapter, we will look at another way to communicate your findings
    to audiences for whom the details of raw data are too much: automating pivot tables.'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨另一种方法来向那些对原始数据细节过多的观众传达你的发现：自动化数据透视表。
