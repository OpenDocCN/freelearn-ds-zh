- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Python can be used for more than just general-purpose programming. It is a free,
    open source language and environment that has tremendous potential for use within
    the domain of scientific computing. This book presents Python in tight connection
    with mathematical applications and demonstrates how to use various concepts in
    Python for computing purposes, including examples with the latest version of Python
    3\. Python is an effective tool to use when coupling scientific computing and
    mathematics and this book will teach you how to use it for linear algebra, arrays,
    plotting, iterating, functions, polynomials, and much more.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Python不仅仅可以用于通用编程。它是一个免费、开源的语言和环境，在科学计算领域具有巨大的潜力。本书将Python与数学应用紧密结合，展示了如何使用Python的各种概念进行计算，包括使用Python
    3最新版本的示例。当将科学计算和数学结合使用时，Python是一个有效的工具，本书将教会你如何使用它进行线性代数、数组、绘图、迭代、函数、多项式等。
- en: What this book covers
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](ch01.html "Chapter 1. Getting Started"), *Getting Started,* addresses
    the main language elements of Python without going into detail. Here we make a
    brief tour through all. It is a good starting point for those who want to start
    directly. It is a quick reference for those readers who want in a later chapter
    understand an example which uses might use constructs like functions before functions
    were explained in deep .'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](ch01.html "第一章. 入门"), *入门*，简要介绍了Python的主要语言元素，而不深入细节。在这里，我们简要地浏览了所有内容。对于那些想直接开始的人来说，这是一个好的起点。对于那些想在后面的章节中理解可能使用函数等结构的示例的读者来说，这是一个快速参考，因为在深入解释函数之前，这些结构就已经被使用了。'
- en: '[Chapter 2](ch02.html "Chapter 2. Variables and Basic Types"), *Variables and
    Basic Types*, presents the most important and basic types in Python. Float is
    the more important datatype in scientific computing together with the special
    numbers nan and inf. Booleans, integers, complex, and strings are other basic
    datatypes, which will be used throughout this book.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](ch02.html "第二章. 变量和基本类型"), *变量和基本类型*，介绍了Python中最重要和基本的数据类型。在科学计算中，浮点数是比nan和inf这两个特殊数字更重要的数据类型。布尔值、整数、复数和字符串是其他基本数据类型，本书将使用这些类型。'
- en: '[Chapter 3](ch03.html "Chapter 3. Container Types"), *Container Types, *explains
    how to work with container types, mainly lists. Dictionaries and tuples will be
    explained as well as indexing and looping, through container objects. Occasionally,
    one uses even sets as a special container type.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章](ch03.html "第三章. 容器类型"), *容器类型*，解释了如何使用容器类型，主要是列表。字典和元组也将通过容器对象解释，以及索引和循环。偶尔，甚至使用集合作为特殊的容器类型。'
- en: '[Chapter 4](ch04.html "Chapter 4. Linear Algebra – Arrays"), *Linear Algebra,*works
    with the most important objects in linear algebra--vectors and matrices. This
    book chooses NumPy array as the central tool for describing matrices and even
    higher order tensors. Arrays have many advanced features and allows also for universal
    functions acting on matrices or vectors elementwise. The book emphasizes on array
    indexing, slices, and the dot product as the basic operation in most computing
    tasks. Some linear algebra examples are worked out to demonstrate the use of SciPy''s
    submodule linalg.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[第四章](ch04.html "第四章. 线性代数 – 数组"), *线性代数*，与线性代数中最重要的对象——向量和矩阵一起工作。本书选择NumPy数组作为描述矩阵甚至更高阶张量的核心工具。数组具有许多高级功能，并允许对矩阵或向量进行逐元素操作的通用函数。本书强调数组索引、切片和点积作为大多数计算任务中的基本操作。一些线性代数示例被解决，以展示SciPy子模块linalg的使用。'
- en: '[Chapter 5](ch05.html "Chapter 5. Advanced Array Concepts"), *Advanced Array
    Concepts,*explains some more advanced aspects of arrays. The difference between
    array copies and views is explained extensively as views make programs using arrays
    very fast but are often a source for errors, which are hard to debug. The use
    of Boolean arrays to write effective, compact, and readable code is shown and
    demonstrated. Finally, the technique of array broadcasting-- a unique feature
    of NumPy arrays -- is explained by its analogy to operations performed on functions.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第五章](ch05.html "第五章. 高级数组概念"), *高级数组概念*，解释了数组的一些更高级的方面。数组副本和视图之间的区别被详细解释，因为视图使得使用数组的程序非常快速，但往往是错误的来源，这些错误很难调试。展示了如何使用布尔数组编写有效、紧凑且易于阅读的代码，并进行了演示。最后，通过将其与在函数上执行的操作的类比，解释了数组广播技术——这是NumPy数组的一个独特特性。'
- en: '[Chapter 6](ch06.html "Chapter 6. Plotting"), *Plotting,*shows how to make
    plots, mainly classical x/yplots but also 3D plots and histograms. Scientific
    computing requires good tools for visualizing the results. Python''s module matplotlib
    is introduced starting from the handy plotting commands in its submodule pyplot.
    Finetuning and modifying plots becomes possible by creating graphical objects
    such as axes. We show how attributes of these objects can be changed and annotations
    can be made.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章。绘图")，*绘图*，展示了如何制作图表，主要是经典的x/y图表，但也包括3D图表和直方图。科学计算需要良好的工具来可视化结果。从其子模块pyplot中的便捷绘图命令开始介绍Python的matplotlib模块。通过创建图形对象，如坐标轴，可以实现图表的微调和修改。我们展示了如何更改这些对象的属性以及如何添加注释。'
- en: '[Chapter 7](ch07.html "Chapter 7. Functions"), *Functions,* form the fundamental
    building block in programming, which is probably nearest to underlying mathematical
    concepts. Function definition and function calls are explained as the different
    ways to set function arguments. Anonymous lambda functions are introduced and
    used in various examples throughout the book.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。函数")，*函数*，是编程中的基本构建块，这可能是与底层数学概念最接近的。函数定义和函数调用被解释为设置函数参数的不同方式。匿名lambda函数在本章中被引入并在各种示例中使用。'
- en: '[Chapter 8](ch08.html "Chapter 8. Classes"), *Classes,* defines objects as
    instances of classes, which we provide with methods and attributes. In mathematics,
    class attributes often depend on each other, which requires special programming
    techniques for setter and getter functions. Basic mathematical operations such
    as + can be defined for special mathematic datatypes. Inheritance and abstraction
    are mathematical concepts which are reflected by object oriented programming.
    We demonstrate the use of inheritance by a simple solver class for ordinary differential
    equations.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。类")，*类*，定义了对象为类的实例，我们为它们提供了方法和属性。在数学中，类属性通常相互依赖，这需要为设置器和获取器函数使用特殊的编程技术。基本数学运算，如+，可以定义在特殊的数学数据类型上。继承和抽象是数学概念，在面向对象编程中得到了体现。我们通过一个简单的常微分方程求解器类来展示继承的使用。'
- en: '[Chapter 9](ch09.html "Chapter 9. Iterating"), *Iterating,*presents iteration
    using loops and iterators. There is now a chapter in this book without loops and
    iterations, but here we come to principles of iterators and create own generator
    objects. In this chapter, you learn why a generator can be exhausted and how infinite
    loops can be programmed. Python''s module itertools is a useful companion for
    this chapter.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。迭代")，*迭代*，介绍了使用循环和迭代器的迭代。这本书中现在有一个没有循环和迭代的章节，但在这里我们来到了迭代器的原理以及创建自己的生成器对象。在本章中，你将学习为什么生成器会耗尽以及如何编写无限循环。Python的itertools模块是本章的有用伴侣。'
- en: '[Chapter 10](ch10.html "Chapter 10. Error Handling"), *Error Handling,* covers
    errors and exceptions and how to find and fix them. An error or an exception is
    an event, which breaks the execution of a program unit. This chapter shows what
    to do then, that is, how an exception can be handled. You learn to define your
    own exception classes and how to provide valuable information, which can be used
    for catching these exceptions. Error handling is more than printing an error message.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章。错误处理")，*错误处理*，涵盖了错误和异常以及如何查找和修复它们。错误或异常是一个事件，它中断了程序单元的执行。本章展示了随后应该做什么，即如何处理异常。你将学习如何定义自己的异常类以及如何提供有价值的信息，这些信息可以用于捕获这些异常。错误处理不仅仅是打印错误消息。'
- en: '[Chapter 11](ch11.html "Chapter 11. Namespaces, Scopes, and Modules"), *Namespaces,
    Scopes and Modules,* covers Python modules. What are local and global variables?
    When is a variable known and when is it unknown to a program unit? This is discussed
    in this chapter. A variable can be passed to a function by a parameter list or
    tacitly injected by making use of its scope. When should this technique be applied
    and when not? This chapter tries to give an answer to this central question.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](ch11.html "第11章。命名空间、作用域和模块")，*命名空间、作用域和模块*，涵盖了Python模块。什么是局部变量和全局变量？何时一个变量为程序单元所知，何时它不为程序单元所知？这个问题在本章中进行了讨论。变量可以通过参数列表传递给函数，或者通过利用其作用域隐式注入。何时应该应用这种技术，何时不应该？本章试图回答这个核心问题。'
- en: '[Chapter 12](ch12.html "Chapter 12. Input and Output"), *Input and Output,*
    covers some options for handling data files. Data files are used for storing and
    providing data for a given problem, often large scale measurements. This chapter
    describes how this data can be accessed and modified using different formats.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](ch12.html "第12章. 输入和输出")，*输入和输出*，涵盖了处理数据文件的一些选项。数据文件用于存储和提供特定问题的数据，通常是大规模测量。本章描述了如何使用不同的格式访问和修改这些数据。'
- en: '[Chapter 13](ch13.html "Chapter 13. Testing"), *Testing,* focuses on testing
    for scientific programming. The key tool is unittest, which allows for automatic
    testing and parametrized tests. By considering the classical bisection algorithm
    in numerical mathematics, we exemplify different steps to design meaningful tests,
    which as a side effect also deliver a documentation of the use of a piece of code.
    Careful testing provides test protocols which can be later helpful when debugging
    a complex code often written by many different programmers.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](ch13.html "第13章. 测试")，*测试*，专注于科学编程的测试。关键工具是 unittest，它允许进行自动测试和参数化测试。通过考虑数值数学中的经典二分算法，我们举例说明了设计有意义的测试的不同步骤，这些测试作为副作用还提供了代码使用说明。仔细的测试提供了测试协议，这在调试由许多不同程序员编写的复杂代码时可能很有帮助。'
- en: '[Chapter 14](ch14.html "Chapter 14. Comprehensive Examples"), *Comprehensive
    Examples,* presents some comprehensive and longer examples together with a brief
    introduction to the theoretical background and their complete implementation.
    These examples make use of all constructs shown in the book so far and put them
    in a larger and more complex context. They are open for extensions by the reader.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第14章](ch14.html "第14章. 综合示例")，*综合示例*，展示了几个综合性和较长的示例，并简要介绍了理论背景及其完整实现。这些示例利用了本书迄今为止展示的所有结构，并将它们置于更大、更复杂的环境中。它们对读者开放，可以进行扩展。'
- en: '[Chapter 15](ch15.html "Chapter 15. Symbolic Computations - SymPy"), *Symbolic
    Computations - SymPy,* speaks about symbolic computations. Scientific computing
    is mainly numeric computations with inexact data and approximative results. This
    is contrasted by symbolic computations often formal manipulation, which aims for
    exact solutions in a closed form expression. In this last chapter of the book,
    we introduce this technique in Python, which is often used for deriving and verifying
    theoretically mathematical models and numerical results. We emphasize on high
    precision floating point evaluation of symbolic expressions.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第15章](ch15.html "第15章. 符号计算 - SymPy")，*符号计算 - SymPy*，讲述了符号计算。科学计算主要是基于不精确数据和近似结果的数值计算。这与符号计算形成对比，符号计算通常涉及形式化的操作，目的是在封闭形式表达式中寻求精确解。在本书的最后一章中，我们介绍了在
    Python 中实现这一技术，它常用于推导和验证理论数学模型和数值结果。我们强调对符号表达式的精确浮点评估。'
- en: What you need for this book
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书准备什么
- en: You would need Pyhon3.5 or higher, SciPy, NumPy, Matplotlib, IPython shell (we
    recommend strongly to install Python and its packages through Anaconda). The examples
    of the book do not have any special hardware requirements on memory and graphics.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要 Python 3.5 或更高版本，SciPy，NumPy，Matplotlib，IPython shell（我们强烈建议通过 Anaconda
    安装 Python 及其包）。本书的示例在内存和图形硬件方面没有特殊要求。
- en: Who this book is for
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is the outcome of a course on Python for scientific computing which
    is taught at Lund University since 2008\. The course expanded over the years,
    and condensed versions of the material were taught at universities in Cologne,
    Trondheim, Stavanger, Soran, Lappeenranta and also in computation oriented companies.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是自 2008 年以来在隆德大学讲授的 Python 科学计算课程的成果。该课程逐年扩展，其浓缩版在科隆、特隆赫姆、斯塔万格、索兰、拉彭兰塔的大学以及面向计算的公司的课程中教授。
- en: 'Our belief is that Python and its surrounding scientific computing ecosystem
    — SciPy, NumPY and matplotlib — represent a tremendous progress in scientific
    computing environment. Python and the aforementioned libraries are free and open
    source. What’s more, is a modern language featuring all the bells and whistles
    that this adjective entails: object oriented programming, testing, advanced shell
    with IPython, etc. When writing this book we had two groups of readers in mind:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们相信，Python 及其周围的科学计算生态系统——SciPy、NumPy 和 matplotlib——在科学计算环境中取得了巨大的进步。Python
    及上述库是免费和开源的。更重要的是，它是一种现代语言，具有所有这个形容词所包含的 bells and whistles：面向对象编程、测试、高级的 IPython
    shell 等。在撰写本书时，我们考虑了两组读者：
- en: The reader who chooses Python as his or her first programming language will
    use this book in a teacher-led course. The book guides into the different topics
    and offers background reading and experimenting. A teacher typically selects and
    orders the material from this book in such a way, that it fits to the specific
    learning outcomes of an introductory course.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择Python作为他们第一门编程语言的读者将在这本书的指导下进行教师引导的课程。这本书引导读者进入不同的主题，并提供背景阅读和实验。教师通常会从这本书中选择和安排材料，以便它适合入门课程的特定学习成果。
- en: The reader who already has some experience in programming, and some taste for
    scientific computing or mathematics will use this book as a companion when diving
    into the world of Scipy and Numpy. Programming in Python can be quite different
    from programming in MATLAB, say. The book wants to point out the "pythonic" way
    of programming, which makes programming a pleasure.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于已经有一些编程经验，并对科学计算或数学有一定兴趣的读者来说，这本书将作为他们进入Scipy和Numpy世界的伴侣。用Python编程可能与用MATLAB编程大不相同。这本书旨在指出“Pythonic”编程方式，这使编程变得愉快。
- en: Our goal is to explain the steps to get started with Python in the context of
    scientific computing. The book may be read either from the first page to the last,
    or by picking the bits that seem most interesting. Needless to say, as improving
    one’s programming skills requires considerable practice, it is highly advisable
    to experiment and play with the examples and the exercises in the book.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是在科学计算背景下解释如何开始使用Python的步骤。这本书可以从前一页读到最后一页，也可以挑选看起来最有趣的部分来阅读。不用说，提高编程技能需要相当多的实践，因此强烈建议实验和玩这本书中的示例和练习。
- en: We hope that the readers will enjoy programming with Python, SciPy, NumPY and
    matplotlib as much as we do.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望读者能像我们一样享受使用Python、SciPy、NumPY和matplotlib编程。
- en: Python vs Other Languages
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python与其他语言的比较
- en: When it comes to deciding what language to use for a book on scientific computing
    many factors come in to play. The learning threshold of the language itself is
    important for newcomers, here scripting languages usually provide the best options.
    A wide range of modules for numerical computing is necessary, preferably with
    a strong developer community. If these core modules are built on a well-tested,
    optimized foundation of fast libraries like e.g. LAPACK, even better. Finally,
    if the language is also usable in a wider setting and a wider range of applications,
    the chance of the reader using the skills learned from this book outside an academic
    setting is greater. Therefore the choice of Python was a natural one.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到决定用于科学计算书籍的语言时，许多因素都会发挥作用。语言本身的学习门槛对于新入门者来说很重要，在这里脚本语言通常提供最佳选择。需要一系列用于数值计算的模块，最好有一个强大的开发者社区。如果这些核心模块建立在经过良好测试、优化的快速库（如LAPACK）的基础上，那就更好了。最后，如果语言也适用于更广泛的领域和更广泛的应用，那么读者将更有可能将在这本书中学到的技能应用于学术环境之外。因此，选择Python是一个自然的选择。
- en: In short, Python is
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，Python是
- en: free and open source
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 免费和开源
- en: a scripting language, meaning that it is interpreted
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种脚本语言，意味着它是可解释的
- en: a modern language (object oriented, exception handling, dynamic typing etc.)
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种现代语言（面向对象、异常处理、动态类型等）
- en: concise, easy to read and quick to learn
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简洁、易于阅读和快速学习
- en: full of freely available libraries, in particular scientific ones (linear algebra,
    visualization tools, plotting, image analysis, differential equations solving,
    symbolic computations, statistics etc.)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 充满了免费可用的库，特别是科学库（线性代数、可视化工具、绘图、图像分析、微分方程求解、符号计算、统计学等）
- en: 'useful in a wider setting: scientific computing, scripting, web sites, text
    parsing, etc.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在更广泛的领域中有用：科学计算、脚本编写、网站、文本解析等。
- en: widely used in industrial applications
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在工业应用中广泛使用
- en: There are other alternatives to Python. Some of them and the differences to
    Python are listed here.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Python之外，还有其他替代方案。这里列出了其中一些，以及与Python的差异。
- en: 'Java, C++ : Object oriented, compiled languages. More verbose and low level
    compared to Python. Few scientific libraries.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Java, C++：面向对象、编译语言。与Python相比，它们更冗长且更底层。科学库较少。
- en: 'C, FORTRAN : Low level compiled languages. Both languages are extensively used
    in scientific computing, where computational time matters. Nowadays these languages
    are often combined with Python *wrappers*.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: C, FORTRAN：低级编译语言。这两种语言在科学计算中得到了广泛的应用，因为计算时间至关重要。如今，这些语言通常与Python的包装器结合使用。
- en: PHP, Ruby, other interpreted languages. PHP is web oriented. Ruby is as flexible
    as Python but has few scientific libraries.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: PHP、Ruby、其他解释型语言。PHP是面向Web的。Ruby与Python一样灵活，但科学库较少。
- en: 'MATLAB, Scilab, Octave : MATLAB is a tool for matrix computation that evolved
    for scientific computing. The scientific library is huge. The language features
    are not as developed as those of Python. Neither free nor open source. SciLab
    and Octave are open source tools which are syntactically similar to MATLAB.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB、Scilab、Octave：MATLAB是一种用于矩阵计算的工具体，它为科学计算而发展。科学库非常庞大。语言功能不如Python发达。既不是免费的也不是开源的。SciLab和Octave是类似MATLAB的开源工具。
- en: 'Haskell : Haskell is a modern functional language and follows different programming
    paradigms than Python. There are some common constructions like list comprehension.
    Haskell is rarely used in scientific computing. See also [[12]](apa.html "Appendix . References").'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Haskell：Haskell是一种现代函数式语言，其编程范式与Python不同。有一些常见的结构，如列表推导。Haskell在科学计算中很少使用。另请参阅[[12]](apa.html
    "附录。参考文献")。
- en: Other Python literature
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他Python文献
- en: Here we give some hints to literature on Python which can serve as complementary
    sources or as texts for parallel reading. Most introductory books on Python are
    devoted to teach this language as a general purpose tool. One excellent example
    which we want to mention here explicitly is [[19]](apa.html "Appendix . References").
    It explains the language by simple examples, e.g. object oriented programming
    is explained by organizing a pizza bakery.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们提供一些关于Python文献的提示，这些文献可以作为补充资源或作为并行阅读的文本。大多数Python入门书籍都致力于教授这门语言作为通用工具。这里我们要特别提到的一个优秀例子是[[19]](apa.html
    "附录。参考文献")。它通过简单的示例解释了语言，例如，通过组织披萨店来解释面向对象编程。
- en: There are very few books dedicated to Python directed towards scientific computing
    and engineering. Among these few books we would like to mention the two books
    by Langtangen which combine scientific computing with the modern "pythonic" view
    on programming, [[16,17]](apa.html "Appendix . References").
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 非常有少数书籍专门针对科学计算和工程领域的Python。在这些少数书籍中，我们想提到Langtangen的两本书，它们将科学计算与现代“Pythonic”编程观点相结合，[[16,17]](apa.html
    "附录。参考文献")。
- en: This "pythonic" view is also the guiding line of our way of teaching programming
    of numerical algorithms. We try to show how many well-established concepts and
    constructions in computer science can be applied to problems within scientific
    computing. The pizza-bakery example is replaced by Lagrange polynomials, generators
    become time stepping methods for ODEs, and so on.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这种“Pythonic”的观点也是我们教授数值算法编程的指导原则。我们试图展示计算机科学中许多已建立的概念和结构如何应用于科学计算中的问题。披萨店示例被拉格朗日多项式所取代，生成器成为常微分方程的时间步进方法，等等。
- en: Finally we have to mention the nearly infinite amount of literature on the web.
    The web was also a big source of knowledge when preparing this book. Literature
    from the web often covers things that are new, but can also be totally outdated.
    The web also presents solutions and interpretations which might contradict each
    other. We strongly recommend to use the web as additional source, but we consider
    a "traditional" textbook with the web resources "edited" as the better entry point
    to a rich new world.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们必须提到网络上几乎无穷无尽的文献。在准备本书时，网络也是一个重要的知识来源。网络上的文献通常涵盖新事物，但也可能完全过时。网络还提供了可能相互矛盾的解释和解决方案。我们强烈建议将网络作为辅助来源使用，但我们认为带有网络资源的“传统”教科书是进入这个丰富新世界的更好起点。
- en: Conventions
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 习惯用法
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到多种文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, and user input are shown as follows: "install additional packages with
    `conda install` within your virtual environment"'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名和用户输入应如下显示：“在您的虚拟环境中使用`conda install`安装额外的包”
- en: 'A block of code is set as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "The **Jupyter notebook** is a fantastic tool for demonstrating your work."'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。屏幕上显示的单词，例如在菜单或对话框中，在文本中显示如下：“**Jupyter笔记本**是一个展示您工作的绝佳工具。”'
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要注意事项以如下方框显示。
- en: Tip
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Tips and tricks appear like this.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 小技巧和技巧如下所示。
- en: Reader feedback
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail feedback@packtpub.com, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。请告诉我们您对这本书的看法——您喜欢或不喜欢的地方。读者的反馈对我们非常重要，因为它帮助我们开发出您真正能从中受益的标题。要发送一般性反馈，请简单地发送电子邮件至
    feedback@packtpub.com，并在邮件主题中提及书籍的标题。如果您在某个领域有专业知识，并且对撰写或为书籍做出贡献感兴趣，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经是Packt书籍的骄傲拥有者，我们有一些事情可以帮助您从您的购买中获得最大收益。
- en: Downloading the example code
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您的账户中下载此书的示例代码文件[http://www.packtpub.com](http://www.packtpub.com)。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册我们的网站。
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的**支持**标签上。
- en: Click on **Code Downloads & Errata**.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载与勘误**。
- en: Enter the name of the book in the **Search** box.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书籍名称。
- en: Select the book for which you're looking to download the code files.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买此书的来源。
- en: Click on **Code Download**.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载**。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，请确保您使用最新版本的以下软件解压缩或提取文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的WinRAR / 7-Zip
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac上的Zipeg / iZip / UnRarX
- en: 7-Zip / PeaZip for Linux
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux上的7-Zip / PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Scientific-Computing-with-Python-3](https://github.com/PacktPublishing/Scientific-Computing-with-Python-3).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上[https://github.com/PacktPublishing/Scientific-Computing-with-Python-3](https://github.com/PacktPublishing/Scientific-Computing-with-Python-3)。我们还有其他来自我们丰富图书和视频目录的代码包可供在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上获取。查看它们吧！
- en: Downloading the color images of this book
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载本书的颜色图像
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/ScientificComputingwithPython3_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/ScientificComputingwithPython3_ColorImages.pdf).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为您提供了一个包含本书中使用的截图/图表的颜色图像的PDF文件。这些颜色图像将帮助您更好地理解输出的变化。您可以从[https://www.packtpub.com/sites/default/files/downloads/ScientificComputingwithPython3_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/ScientificComputingwithPython3_ColorImages.pdf)下载此文件。
- en: Errata
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在我们的书中发现错误——可能是文本或代码中的错误——如果您能向我们报告这一点，我们将不胜感激。通过这样做，您可以避免其他读者的挫败感，并帮助我们改进本书的后续版本。如果您发现任何勘误，请通过访问
    [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误提交表单**链接，并输入您的勘误详情。一旦您的勘误得到验证，您的提交将被接受，勘误将被上传到我们的网站或添加到该标题的勘误部分下的现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看之前提交的勘误，请访问 [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索字段中输入书籍名称。所需信息将出现在**勘误**部分下。
- en: Piracy
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上对版权材料的盗版是一个跨所有媒体的持续问题。在Packt，我们非常重视保护我们的版权和许可证。如果您在互联网上发现任何形式的我们作品的非法副本，请立即提供位置地址或网站名称，以便我们可以寻求补救措施。
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过 copyright@packtpub.com 联系我们，并提供涉嫌盗版材料的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您在保护我们的作者和我们为您提供有价值内容的能力方面的帮助。
- en: Questions
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何方面有问题，可以通过 questions@packtpub.com 联系我们，我们将尽力解决问题。
