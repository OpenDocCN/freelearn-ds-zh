- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Spark for Python Developers* aims to combine the elegance and flexibility
    of Python with the power and versatility of Apache Spark. Spark is written in
    Scala and runs on the Java virtual machine. It is nevertheless polyglot and offers
    bindings and APIs for Java, Scala, Python, and R. Python is a well-designed language
    with an extensive set of specialized libraries. This book looks at PySpark within
    the PyData ecosystem. Some of the prominent PyData libraries include Pandas, Blaze,
    Scikit-Learn, Matplotlib, Seaborn, and Bokeh. These libraries are open source.
    They are developed, used, and maintained by the data scientist and Python developers
    community. PySpark integrates well with the PyData ecosystem, as endorsed by the
    Anaconda Python distribution. The book puts forward a journey to build data-intensive
    apps along with an architectural blueprint that covers the following steps: first,
    set up the base infrastructure with Spark. Second, acquire, collect, process,
    and store the data. Third, gain insights from the collected data. Fourth, stream
    live data and process it in real time. Finally, visualize the information.'
  prefs: []
  type: TYPE_NORMAL
- en: The objective of the book is to learn about PySpark and PyData libraries by
    building apps that analyze the Spark community's interactions on social networks.
    The focus is on Twitter data.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Setting Up a Spark Virtual Environment"),
    *Setting Up a Spark Virtual Environment*, covers how to create a segregated virtual
    machine as our sandbox or development environment to experiment with Spark and
    PyData libraries. It covers how to install Spark and the Python Anaconda distribution,
    which includes PyData libraries. Along the way, we explain the key Spark concepts,
    the Python Anaconda ecosystem, and build a Spark word count app.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Building Batch and Streaming Apps with Spark"),
    *Building Batch and Streaming Apps with Spark*, lays the foundation of the *Data
    Intensive Apps Architecture*. It describes the five layers of the apps architecture
    blueprint: infrastructure, persistence, integration, analytics, and engagement.
    We establish API connections with three social networks: Twitter, GitHub, and
    Meetup. This chapter provides the tools to connect to these three nontrivial APIs
    so that you can create your own data mashups at a later stage.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Juggling Data with Spark"), *Juggling Data
    with Spark*, covers how to harvest data from Twitter and process it using Pandas,
    Blaze, and SparkSQL with their respective implementations of the dataframe data
    structure. We proceed with further investigations and techniques using Spark SQL,
    leveraging on the Spark dataframe data structure.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Learning from Data Using Spark"), *Learning
    from Data Using Spark*, gives an overview of the ever expanding library of algorithms
    of Spark MLlib. It covers supervised and unsupervised learning, recommender systems,
    optimization, and feature extraction algorithms. We put the Twitter harvested
    dataset through a Python Scikit-Learn and Spark MLlib K-means clustering in order
    to segregate the *Apache Spark* relevant tweets.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Streaming Live Data with Spark"), *Streaming
    Live Data with Spark*, lays down the foundation of streaming architecture apps
    and describes their challenges, constraints, and benefits. We illustrate the streaming
    concepts with TCP sockets, followed by live tweet ingestion and processing directly
    from the Twitter firehose. We also describe Flume, a reliable, flexible, and scalable
    data ingestion and transport pipeline system. The combination of Flume, Kafka,
    and Spark delivers unparalleled robustness, speed, and agility in an ever-changing
    landscape. We end the chapter with some remarks and observations on two streaming
    architectural paradigms, the Lambda and Kappa architectures.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Visualizing Insights and Trends"), *Visualizing
    Insights and Trends*, focuses on a few key visualization techniques. It covers
    how to build word clouds and expose their intuitive power to reveal a lot of the
    key words, moods, and memes carried through thousands of tweets. We then focus
    on interactive mapping visualizations using Bokeh. We build a world map from the
    ground up and create a scatter plot of critical tweets. Our final visualization
    is to overlay an actual Google map of London, highlighting upcoming meetups and
    their respective topics.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You need inquisitiveness, perseverance, and passion for data, software engineering,
    application architecture and scalability, and beautiful succinct visualizations.
    The scope is broad and wide.
  prefs: []
  type: TYPE_NORMAL
- en: You need a good understanding of Python or a similar language with object-oriented
    and functional programming capabilities. Preliminary experience of data wrangling
    with Python, R, or any similar tool is helpful.
  prefs: []
  type: TYPE_NORMAL
- en: You need to appreciate how to conceive, build, and scale data applications.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The target audience includes the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Data scientists are the primary interested parties. This book will help you
    unleash the power of Spark and leverage your Python, R, and machine learning background.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software developers with a focus on Python will readily expand their skills
    to create data-intensive apps using Spark as a processing engine and Python visualization
    libraries and web frameworks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data architects who can create rapid data pipelines and build the famous Lambda
    architecture that encompasses batch and streaming processing to render insights
    on data in real time, using the Spark and Python rich ecosystem, will also benefit
    from this book.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows "Launch
    PySpark with `IPYNB` in directory `examples/AN_Spark` where the Jupyter or IPython
    Notebooks are stored".
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "After installing VirtualBox, let''s open the Oracle VM VirtualBox Manager and
    click the **New** button."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you would report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **errata** **submission** **form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded on our website, or added to any
    list of existing errata, under the Errata section of that title. Any existing
    errata can be viewed by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  prefs: []
  type: TYPE_NORMAL
