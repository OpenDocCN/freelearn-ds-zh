["```py\n    arcpy.env.workspace = \"C:/ArcpyBook/data/Wildfires/WildlandFires.mdb\"\n      f = open(\"C:/ArcpyBook/data/Wildfires/NorthAmericaWildfires_2007275.txt\",\"r\")\n    ```", "```py\n    cur = arcpy.InsertCursor(\"FireIncidents\")\n    ```", "```py\n    try:\n      # the output feature class name\n      outputFC = arcpy.GetParameterAsText(0)\n\n      # the template feature class that defines the attribute schema\n      fClassTemplate = arcpy.GetParameterAsText(1)\n\n      # open the file to read\n      f = open(arcpy.GetParameterAsText(2),'r')\n\n      arcpy.CreateFeatureclass_management(os.path.split(outputFC)[0], os.path.split(outputFC[1]), \"point\", fClassTemplate)\n    ```", "```py\n    cur = arcpy.InsertCursor(outputFC)\n    ```", "```py\n    import arcpy, os\n    try:\n    \toutputFC = arcpy.GetParameterAsText(0)\n      fClassTemplate = arcpy.GetParameterAsText(1)\n    \tf = open(arcpy.GetParameterAsText(2),'r')\n    \tarcpy.CreateFeatureclass_management(os.path.split(outputFC)[0], os.path.split(outputFC[1]), \"point\", fClassTemplate)\n      lstFires = f.readlines()\n      cur = arcpy.InsertCursor(outputFC)\n      cntr = 1\n      for fire in lstFires:\n        if 'Latitude' in fire:\n          continue\n        vals = fire.split(\",\")\n        latitude = float(vals[0])\n        longitude = float(vals[1])\n        confid = int(vals[2])\n        pnt = arcpy.Point(longitude, latitude)\n        feat = cur.newRow()\n        feat.shape = pnt\n        feat.setValue(\"CONFIDENCEVALUE\", confid)\n        cur.insertRow(feat)\n        arcpy.AddMessage(\"Record number: \" + str(cntr) + \" written to feature class\")\n        cntr = cntr + 1\n    except:\n      print arcpy.GetMessages()\n    finally:\n      del cur\n      f.close()\n    ```", "```py\n    outputFC = arcpy.GetParameterAsText(0)\n    ```"]