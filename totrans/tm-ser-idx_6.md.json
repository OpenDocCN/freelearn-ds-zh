["```py\n \"name\": \"flare\",\n \"children\": [\n  {\n   \"name\": \"analytics\",\n   \"children\": [\n    {\n.\n.\n.\n```", "```py\nJSON_message = {\n  \"name\": None,\n  \"size\": None,\n  \"children\": []\n}\n```", "```py\n    # The JSON data to return\n    data = {}\n    data['name'] = \"0\"\n    data['children'] = []\n    # Create JSON output\n    for subTree in ISAX.children:\n        if ISAX.ht[subTree] == None:\n            continue\n        subTreeData = createJSON(ISAX.ht[subTree])\n        data['children'].append(subTreeData)\n    print(json.dumps(data))\n```", "```py\ndef createJSON(subtree):\n    if subtree == None:\n        return None\n    t = {}\n    t['name'] = subtree.word\n    t['children'] = []\n    # First, check if this is a Terminal node\n    if subtree.terminalNode == True:\n        t['size'] = subtree.nTimeSeries()\n        return t\n    # This is still a Terminal node\n    # Just in case!\n    elif subtree.left == None and subtree.right == None:\n        print(\"This should not happen!\")\n        return t\n    else:\n        ch1 = createJSON(subtree.left)\n        ch2 = createJSON(subtree.right)\n        t['children'].append(ch1)\n        t['children'].append(ch2)\n    return t\n```", "```py\n$ ./exportJSON.py -s 3 -c 8 ts.gz\n{\"name\": \"0\", \"children\": [{\"name\": \"0_0_1\", \"children\": [], \"size\": 18}, {\"name\": \"0_1_1\", \"children\": [], \"size\": 12}, {\"name\": \"1_0_1\", \"children\": [], \"size\": 12}, {\"name\": \"1_0_0\", \"children\": [], \"size\": 17}, {\"name\": \"0_1_0\", \"children\": [], \"size\": 12}, {\"name\": \"1_1_0\", \"children\": [], \"size\": 13}, {\"name\": \"1_1_1\", \"children\": [], \"size\": 1}]}\n```", "```py\n$ ./exportJSON.py -s 3 -c 8 ts.gz | jq\n{\n  \"name\": \"0\",\n  \"children\": [\n    {\n      \"name\": \"0_0_1\",\n      \"children\": [],\n      \"size\": 18\n    },\n    {\n      \"name\": \"0_1_1\",\n      \"children\": [],\n      \"size\": 12\n    },\n    {\n      \"name\": \"1_0_1\",\n      \"children\": [],\n      \"size\": 12\n    },\n    {\n      \"name\": \"1_0_0\",\n      \"children\": [],\n      \"size\": 17\n    },\n    {\n      \"name\": \"0_1_0\",\n      \"children\": [],\n      \"size\": 12\n    },\n    {\n      \"name\": \"1_1_0\",\n      \"children\": [],\n      \"size\": 13\n    },\n    {\n      \"name\": \"1_1_1\",\n      \"children\": [],\n      \"size\": 1\n    }\n  ]\n}\n```", "```py\n$ ../ch01/synthetic_data.py 100000 -100 100 > 100k\n$ gzip 100k\n```", "```py\n$ ./exportJSON.py -s 4 -c 16 -t 2500 100k.gz > 100k.json\n```", "```py\n$ tree\n.\n├── 5432439324f2c616@268.js\n├── 7a9e12f9fb3d8e06@498.js\n├── LICENSE.txt\n├── README.md\n├── files\n│   └── 85b8f86120ba5c8012f55b82fb5af4fcc9ff5e3cf250d110e111b3ab 98c32a3fa8f5c19f956e096fbf550c47d6895783a4edf72a9c474bef5782f 879573750ba.json\n├── index.xhtml\n├── index.js\n├── inspector.css\n├── package.json\n└── runtime.js\n2 directories, 10 files\n```", "```py\n$ python3 -m http.server\nServing HTTP on :: port 8000 (http://[::]:8000/) ...\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] \"GET / HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] \"GET /inspector.css HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] \"GET /runtime.js HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] \"GET /index.js HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] \"GET /5432439324f2c616@268.js HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] \"GET /7a9e12f9fb3d8e06@498.js HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] code 404, message File not found\n::ffff:127.0.0.1 - - [29/Mar/2023 20:42:08] \"GET /favicon.ico HTTP/1.1\" 404 -\n```", "```py\n$ ./exportJSON.py -s 4 -c 16 -t 5000 100k.gz\n```", "```py\n$ ./exportJSON.py -s 3 -c 16 -t 5000 100k.gz\n```"]