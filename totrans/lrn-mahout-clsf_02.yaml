- en: Chapter 2. Apache Mahout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous chapter, we discussed classification and looked into the algorithms
    provided by Mahout in this area. Before going to those algorithms, we need to
    understand Mahout and its installation. In this chapter, we will explore the following
    topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is Apache Mahout?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Algorithms supported in Mahout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why is it a good choice for classification problems?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the system for Mahout development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing Apache Mahout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A mahout is a person who rides and controls an elephant. Most of the algorithms
    in Apache Mahout are implemented on top of Hadoop, which is another Apache-licensed
    project and has the symbol of an elephant ([http://hadoop.apache.org/](http://hadoop.apache.org/)).
    As Apache Mahout rides over Hadoop, this name is justified.
  prefs: []
  type: TYPE_NORMAL
- en: Apache Mahout is a project of Apache Software Foundation that has implementations
    of machine learning algorithms. Mahout was started as a subproject of the Apache
    Lucene project in 2008\. After some time, an open source project named **Taste**,
    which was developed for collaborative filtering, and it was absorbed into Mahout.
    Mahout is written in Java and provides scalable machine learning algorithms. Mahout
    is the default choice for machine learning problems in which the data is too large
    to fit into a single machine. Mahout provides Java libraries and does not provide
    any user interface or server. It is a framework of tools to be used and adapted
    by developers.
  prefs: []
  type: TYPE_NORMAL
- en: '![Introducing Apache Mahout](img/4959OS_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: To sum it up, Mahout provides you with implementations of the most frequently
    used machine learning algorithms in the area of classification, clustering, and
    recommendation. Instead of spending time writing algorithms, it provides us with
    ready-to-consume solutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Mahout uses Hadoop for its algorithms, but some of the algorithms can also
    run without Hadoop. Currently, Mahout supports the following use cases:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Recommendation**: This takes the user data and tries to predict items that
    the user might like. With this use case, you can see all the sites that are selling
    goods to the user. Based on your previous action, they will try to find out unknown
    items that could be of use. One example can be this: as soon as you select some
    book from Amazon, the website will show you a list of other books under the title,
    **Customers Who Bought This Item Also Bought**. It also shows the title, **What
    Other Items Do Customers Buy After Viewing This Item?** Another example of recommendation
    is that while playing videos on YouTube, it recommends that you listen to some
    other videos based on your selection. Mahout provides full API support to develop
    your own user-based or item-based recommendation engine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Classification**: As defined in the earlier chapter, classification decides
    how much an item belongs to one particular category. E-mail classification for
    filtering out spam is a classic example of classification. Mahout provides a rich
    set of APIs to build your own classification model. For example, Mahout can be
    used to build a document classifier or an e-mail classifier.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Clustering**: This is a technique that tries to group items together based
    on some sort of similarity. Here, we find the different clusters of items based
    on certain properties, and we do not know the name of the cluster in advance.
    The main difference between clustering and classification is that in classification,
    we know the end class name. Clustering is useful in finding out different customer
    segments. Google News uses the clustering technique in order to group news. For
    clustering, Mahout has already implemented some of the most popular algorithms
    in this area, such as k-means, fuzzy k-means, canopy, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dimensional reduction**: As we discussed in the previous chapter, features
    are called dimensions. Dimensional reduction is the process of reducing the number
    of random variables under consideration. This makes data easy to use. Mahout provides
    algorithms for dimensional reduction. Singular value decomposition and Lanczos
    are examples of the algorithms that Mahout provides.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Topic modeling**: Topic modeling is used to capture the abstract idea of
    a document. A topic model is a model that associates probability distribution
    with each document over topics. Given that a document is about a particular topic,
    one would expect particular words to appear in the document more or less frequently.
    "Football" and "goal" will appear more in a document about sports. **Latent Dirichlet
    Allocation** (**LDA**) is a powerful learning algorithm for topic modeling. In
    Mahout, collapsed variational Bayes is implemented for LDA.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Algorithms supported in Mahout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The implementation of algorithms in Mahout can be categorized into two groups:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sequential algorithms**: These algorithms are executed sequentially and do
    not use Hadoop scalable processing. They are usually the ones derived from Taste.
    For example: user-based collaborative filtering, logistic regression, Hidden Markov
    Model, multi-layer perceptron, singular value decomposition.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Parallel algorithms**: These algorithms can support petabytes of data using
    Hadoop''s map and hence reduce parallel processing. For example, Random Forest,
    Naïve Bayes, canopy clustering, k-means clustering, spectral clustering, and so
    on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reasons for Mahout being a good choice for classification
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In machine learning systems, the more data you use, the more accurate the system
    built will be. Mahout, which uses Hadoop for scalability, is way ahead of others
    in terms of handling huge datasets. As the number of training sets increases,
    Mahout's performance also increases. If the input size for training examples is
    from 1 million to 10 million, then Mahout is an excellent choice.
  prefs: []
  type: TYPE_NORMAL
- en: For classification problems, increased data for training is desirable as it
    can improve the accuracy of the model. Generally, as the number of datasets increases,
    memory requirement also increases, and algorithms become slow, but Mahout's scalable
    and parallel algorithms work better with regards to the time taken. Each new machine
    added decreases the training time and provides higher performance.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Mahout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now let''s try the slightly challenging part of this book: Mahout installation.
    Based on common experiences, I have come up with the following questions or concerns
    that users face before installation:'
  prefs: []
  type: TYPE_NORMAL
- en: I do not know anything about Maven. How will I compile Mahout build?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can I set up Eclipse to write my own programs in Mahout?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can I install Mahout on a Windows system?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'So, we will install Mahout with the help of the following steps. Each step
    is independent from the other. You can choose any one of these:'
  prefs: []
  type: TYPE_NORMAL
- en: Building Mahout code using Maven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up a development environment using Eclipse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Mahout for a Windows user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Before any of the steps, some of the prerequisites are:'
  prefs: []
  type: TYPE_NORMAL
- en: You should have Java installed on your system. Wikihow is a good source for
    this at [http://www.wikihow.com/Install-Java-on-Linux](http://www.wikihow.com/Install-Java-on-Linux)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You should have Hadoop installed on your system from the [http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleNodeSetup.html](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleNodeSetup.html)
    URL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building Mahout from source using Maven
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mahout's build and release system is based on Maven.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Maven
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Create the folder `/usr/local/maven`, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the distribution `apache-maven`-`x.y.z-bin.tar.gz` from the Maven
    site ([http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi))
    and move this to `/usr/local/maven`, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Unpack to the location `/usr/local/maven`, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Edit the `.bashrc` file, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the Eclipse IDE, go to **Help** and select **Install new Software**. Click
    on the **Add** button, and in the pop up, type the name `M2Eclipse`, provide the
    link [http://download.eclipse.org/technology/m2e/releases](http://download.eclipse.org/technology/m2e/releases),
    and click on **OK**.
  prefs: []
  type: TYPE_NORMAL
- en: Building Mahout code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By default, Mahout assumes that Hadoop is already installed on the system.
    Mahout uses the `HADOOP_HOME` and `HADOOP_CONF_DIR` environment variables to access
    Hadoop cluster configurations. For setting up Mahout, execute the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the Mahout distribution file `mahout-distribution-0.9-src.tar.gz` from
    the location [http://archive.apache.org/dist/mahout/0.9/](http://archive.apache.org/dist/mahout/0.9/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose an installation directory for Mahout (`/usr/local/Mahout`), and place
    the downloaded source in the folder. Extract the source code and ensure that the
    folder contains the `pom.xml` file. The following is the exact location of the
    source:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the Mahout Maven project, and skip the test cases while installing,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Set the `MAHOUT_HOME` environment variable in the `~/.bashrc` file, and update
    the `PATH` variable with the `Mahout bin` directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To test the Mahout installation, execute the command: `mahout`. This will list
    the available programs within the distribution bundle, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Building Mahout code](img/4959OS_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Setting up a development environment using Eclipse
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For this setup, you should have Maven installed on the system and the Maven
    plugin for Eclipse. Refer to the *Installing Maven* step explained in the previous
    section. This setup can be done in the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Download the Mahout distribution file `mahout-distribution-0.9-src.tar.gz`
    from the location [http://archive.apache.org/dist/mahout/0.9/](http://archive.apache.org/dist/mahout/0.9/)
    and unzip this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Let''s create a folder named `workspace` under `/usr/local/workspace`, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Move the downloaded distribution to this folder (from the downloads folder),
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Move to the folder `/usr/local/workspace/mahout-distribution-0.9` and make
    an Eclipse project (this command can take up to an hour):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Set the Mahout home in the `.bashrc` file, as explained earlier in the *Building
    Mahout code* section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now open Eclipse. Select the file, import Maven, and **Existing Maven Projects**.
    Now, navigate to the location for **mahout-distribution-0.9** and click on **Finish**.![Setting
    up a development environment using Eclipse](img/4959OS_02_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting up Mahout for a Windows user
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A Windows user can use Cygwin (a large collection of GNU and open source tools
    that provides functionality similar to a Linux distribution on Windows) to set
    up their environment. There is also another way that is easy to use, as shown
    in the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Download Hortonworks Sandbox for virtual box on your system from the location
    [http://hortonworks.com/products/hortonworks-sandbox/#install](http://hortonworks.com/products/hortonworks-sandbox/#install).
    Hortonworks Sandbox on your system will be a pseudo-distributed mode of Hadoop.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to the console. Use *Alt* + *F5* or alternatively download Putty and
    provide **127.0.0.1** as the hostname and **2222** in the port, as shown in the
    following figure. Log in with the username `root` and password `-hadoop`.![Setting
    up Mahout for a Windows user](img/4959OS_02_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, you will see a screen like this:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Setting up Mahout for a Windows user](img/4959OS_02_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Enter `y`, and your Mahout will start installing. Once this is done, you can
    test by typing the command `mahout` and this will show you the same screen as
    shown in the *Setting up a development environment using Eclipse* recipe seen
    earlier.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We discussed Apache Mahout in detail in this chapter. We covered the process
    of installing Mahout on our system, along with setting up a development environment
    that is ready to execute Mahout algorithms. We have also taken a look at the reasons
    behind Mahout being considered a good choice for classification. Now, we move
    to the next where we will understand about logistic regression and learn about
    the process that needs to be followed to execute our first algorithm in Mahout.
  prefs: []
  type: TYPE_NORMAL
