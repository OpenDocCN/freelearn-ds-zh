- en: Chapter 2. Viewing Spatial Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will cover how to view spatial data from different data
    sources. QGIS supports many file and database formats as well as OGC Web Services.
    We will first see how we can load layers from these different data sources. We
    will then look into the basics of styling both vector and raster layers and will
    create our first map, which you can see in the following screenshot. We will finish
    this chapter with an example for loading background maps from online services.
  prefs: []
  type: TYPE_NORMAL
- en: '![Viewing Spatial Data](img/7488_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the examples in this chapter, we will be using sample data provided by the
    QGIS project and available for download from [download.osgeo.org/qgis/data/qgis_sample_data.zip](http://download.osgeo.org/qgis/data/qgis_sample_data.zip)
    (20 MB). Download and unzip it.
  prefs: []
  type: TYPE_NORMAL
- en: Loading vector data from files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will talk about loading vector data from GIS formats such
    as Shapefiles as well as from text files.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can load vector files using the menu entry by going to **Layer** | **Add
    vector layer** and also by using the **Add vector layer** toolbar button. If you
    like shortcuts, use *Ctrl* + *Shift* + *V*. In the **Add vector layer** dialog,
    we find a drop-down list that allows us to specify the encoding of the input file.
    This option is important if we are dealing with files that contain special characters,
    such as German umlauts or letters from alphabets other than the default Latin
    one. The following screenshot shows the **Add vector layer** dialog:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Loading vector data from files](img/7488_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: What we are most interested in now is the **Browse** button, which opens the
    file-opening dialog. Note the **file type filter** drop-down list on the bottom-right
    corner of the dialog. We can open it to see a list of the supported vector file
    types. This filter is useful to find specific files faster by hiding all files
    of a different type, but be aware that the filter settings are stored and will
    be applied again the next time we open the dialog.
  prefs: []
  type: TYPE_NORMAL
- en: This can be a source of confusion if we later try to find a different file and
    it happens to be hidden by the filter, so remember to check the filter settings
    if you are having trouble locating a file.
  prefs: []
  type: TYPE_NORMAL
- en: We can load more than one file in one go by selecting multiple files at once
    (holding down *Ctrl* on Windows/Ubuntu or *Cmd* on Mac). Let's give it a try.
  prefs: []
  type: TYPE_NORMAL
- en: We select `alaska.shp` and `airports.shp` from the sample data `vmap0_shapefiles`
    folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we confirm our selection by clicking on **Open**, and we are taken back
    to the **Add vector layer** dialog.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After clicking on **Open** once more, the selected files are loaded. You will
    notice that each vector layer is displayed in a random color. Don't worry about
    that now. We'll deal with layer styles later in this chapter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: There are multiple tricks that make loading data even faster; for example, you
    can simply drag and drop files from the operating system file browser into QGIS.
    Another way to quickly access your spatial data is by using QGIS' built-in file
    browser. If you set up QGIS as shown in [Chapter 1](ch01.html "Chapter 1. Getting
    Started with QGIS"), *Getting Started with QGIS*, you'll find the browser on the
    left-hand side, just below the layer list. Navigate to your data folder and you
    can again drag and drop files from the browser to the map. Additionally, you can
    mark a folder as favorite by right-clicking on the folder and selecting **Add
    to favorites**. This way, your data folders will be even faster to access because
    they are added in the **Favorites** section right at the top of the browser list.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Another popular source of spatial data are delimited text (CSV) files. QGIS
    can load CSV files using the **Add Delimited Text Layer** option available via
    the menu entry by going to **Layers** | **Add Delimited Text Layer** or the corresponding
    toolbar button. Click on **Browse** and select `elevp.csv` from the sample data.
    CSVs come with all kinds of delimiters. As you can see in the following screenshot,
    the plugin lets you choose from the most common ones (**Comma**, **Tab**, and
    so on), but you can also specify any other plain or regular expression delimiter.
    If your CSV contains quotation marks such as " or ', you can use the **Quote**
    option to have them removed. The **Number of header lines to discard** option
    allows us to skip extra lines at the beginning of the text file. The following
    **Field options** include functionality to trim extra spaces from field values
    or to redefine the decimal separator to a comma. The spatial information itself
    can be provided either in two columns containing coordinates of points X and Y
    or by using the **Well known text (WKT)** format. A WKT field can contain points,
    lines, or polygons.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: WKT is a very useful and flexible format. For example, a line can be specified
    by writing `LINESTRING (30 10, 10 30, 40 40)`. If you are unfamiliar with the
    concept, you can find an introduction with examples at [en.wikipedia.org/wiki/Well-known_text](http://en.wikipedia.org/wiki/Well-known_text).
  prefs: []
  type: TYPE_NORMAL
- en: '![Loading vector data from files](img/7488_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After clicking on **OK**, QGIS will prompt us to specify the layer's **coordinate
    reference system** (**CRS**). We will talk about handling coordinate reference
    systems next.
  prefs: []
  type: TYPE_NORMAL
- en: Dealing with coordinate reference systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whenever we load a data source, QGIS looks for usable CRS information; for example,
    in the Shapefile's `.prj` file. If QGIS cannot find any usable information, it
    will by default ask you to specify the CRS manually. This behavior can be changed
    by going to **Settings** | **Options** | **CRS** to always use either the project
    CRS or a default CRS.
  prefs: []
  type: TYPE_NORMAL
- en: 'The QGIS Coordinate Reference System Selector offers a filter that makes finding
    the CRS easier. It can filter by name or by ID (for example, the EPSG code). Just
    start typing and watch how the list of potential CRSs gets shorter. There are
    actually two separate lists: the upper one contains the CRSs we have recently
    used while the lower list is much longer and contains all available CRSs. For
    the `elevp.csv` file, we select **NAD27 / Alaska Albers**.'
  prefs: []
  type: TYPE_NORMAL
- en: If we want to check a layer's CRS, we can find this information in the layer
    properties' **General** section, which can be accessed by going to **Layer** |
    **Properties** or by double-clicking on the layer name in the layer list. If you
    think that QGIS picked the wrong CRS or you made a mistake specifying the CRS,
    you can correct the CRS settings using **Specify CRS**. Note that this does not
    change the underlying data or reproject it. We'll talk about reprojecting vectors
    and raster files in [Chapter 3](ch03.html "Chapter 3. Data Creation and Editing"),
    *Data Creation and Editing*.
  prefs: []
  type: TYPE_NORMAL
- en: 'In QGIS, we can create a map out of multiple layers even if each dataset is
    stored with a different CRS. QGIS handles the necessary reprojections automatically
    by enabling a mechanism called on-the-fly reprojection, which can be accessed
    by going to **Settings** | **Project Properties** as you can see in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: All layers are reprojected to the project CRS on the fly, which means that QGIS
    calculates these reprojections dynamically and only for the purpose of rendering
    the map. The underlying data is not changed and spatial analyses are not affected.
  prefs: []
  type: TYPE_NORMAL
- en: '![Dealing with coordinate reference systems](img/7488_02_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In some cases, you might have to specify a CRS that is not available in QGIS'
    CRS database. You can add CRS definitions by going to **Settings** | **Custom
    CRS**. Click on the **Add new CRS** button to create a new entry, type in a name
    for the new CRS, and paste the `proj4` definition string. Just close the dialog
    by clicking on **OK** when you are done.
  prefs: []
  type: TYPE_NORMAL
- en: Loading raster files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Loading raster files is not much different from loading vector files. Selecting
    the menu entry **Layer** and then clicking on **Add Raster Layer**, clicking on
    the **Add Raster Layer** button, or pressing the *Ctrl* + *Shift* + *R* shortcut
    will take you directly to the file-opening dialog. Again, you can check the file
    type filter to see a list of supported file types.
  prefs: []
  type: TYPE_NORMAL
- en: Let's give it a try and load `landcover.img` from the sample data `raster` folder.
    Similarly, just like vector files, you can load rasters by dragging them into
    QGIS from the operating system or the built-in file browser.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Support for all these different vector and raster file types in QGIS is handled
    by the powerful GDAL/OGR package. You can check the full list of supported formats
    at [www.gdal.org/formats_list.html](http://www.gdal.org/formats_list.html) (for
    rasters) and [www.gdal.org/ogr/ogr_formats.html](http://www.gdal.org/ogr/ogr_formats.html)
    (for vectors).
  prefs: []
  type: TYPE_NORMAL
- en: Georeferencing raster maps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some raster data sources, such as simple scanned maps, lack proper spatial referencing,
    and we have to georeference them before we can use them in a GIS. In QGIS, we
    can georeference rasters using the Georeferencer GDAL plugin, which can be accessed
    by going to **Raster** | **Georeferencer** (enable it by going to **Plugins**
    | **Manage and Install Plugins** if you cannot find it in the **Raster** menu).
  prefs: []
  type: TYPE_NORMAL
- en: 'Georeferencer covers the following use cases:'
  prefs: []
  type: TYPE_NORMAL
- en: We can create a world file for a raster file without altering the original raster.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If we have a map image that contains points with known coordinates, we can set
    **ground control points** (**GCPs**) and enter the known coordinates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, if we don't know the coordinates of any points on the map, we still
    have the chance to place GCPs manually using a second, already georeferenced map
    of the same area. We can use objects that are visible in both maps to pick points
    in the map that we want to georeference and work out their coordinates from the
    reference map.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After loading a raster into Georeferencer by going to **File** | **Open raster**
    or using the **Open raster** toolbar button, we are asked to specify the CRS of
    the ground control points we are planning to add. Next, we can start adding ground
    control points by going to **Edit** | **Add point**. We can use the pan and zoom
    tools to navigate and we can place GCPs by clicking on the map. We are then prompted
    to insert the coordinates of the new point or pick them from the reference map
    in the main QGIS window.
  prefs: []
  type: TYPE_NORMAL
- en: After placing the GCPs, we can define the transformation algorithm by going
    to **Settings** | **Transformation Settings**. Which algorithm you choose depends
    on your input data and the level of geometric distortion you want to allow. The
    most commonly used algorithms are polynomial 1 to 3\. A first-order polynomial
    transformation allows scaling, translation, and rotation only.
  prefs: []
  type: TYPE_NORMAL
- en: A second-order polynomial transformation can handle some curvature, and a third-order
    polynomial transformation consequently allows for even higher degrees of distortion.
    The thin-plate spline algorithm can handle local deformations in the map, and
    is therefore very useful when working with very low-quality map scans. The linear
    option, on the other hand, is only used to create world files, and as mentioned
    previously, this does not actually transform the raster.
  prefs: []
  type: TYPE_NORMAL
- en: The resampling method depends on your input data and the result you want to
    achieve. Cubic resampling creates smooth results, but if you don't want to change
    the raster values, choose the nearest neighbor method.
  prefs: []
  type: TYPE_NORMAL
- en: Before we can start the georeferencing process, we still have to specify the
    output file name and target CRS. Make sure that the **Load in QGIS when done**
    option is active. Then, we can close the **Transformation Settings** dialog and
    go to **File** | **Start Georeferencing**. The georeferenced raster will automatically
    be loaded into the QGIS main map window.
  prefs: []
  type: TYPE_NORMAL
- en: Loading data from databases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'QGIS supports PostGIS, SpatiaLite, MSSQL, SQL Anywhere, and Oracle Spatial
    databases. We will cover the two open source options: PostGIS and SpatiaLite.
    Both are available cross-platform, just like QGIS.'
  prefs: []
  type: TYPE_NORMAL
- en: '**SpatiaLite** is the spatial extension for Sqlite databases. Sqlite is a self-contained,
    serverless, zero-configuration, transactional SQL database engine ([www.sqlite.org](http://www.sqlite.org)).
    This basically means that an Sqlite database, and therefore also a SpatiaLite
    database, doesn''t need a server installation, and can be copied and exchanged
    just like any ordinary file.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download an example database from [www.gaia-gis.it/spatialite-2.3.1/test-2.3.zip](http://www.gaia-gis.it/spatialite-2.3.1/test-2.3.zip).
    Unzip the file; you will be able to connect to it by going to **Layer** | **Add
    SpatiaLite Layer**, using the **Add SpatiaLite Layer** toolbar button, or by pressing
    *Ctrl* + *Shift* + *L*. Click on **New** to select the database file `test-2.3.sqlite`.
    QGIS will save all connections and add them to the drop-down list at the top.
    After clicking on **Connect**, you will see the list of layers stored in the database
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Loading data from databases](img/7488_02_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Like with files, you can select one or more tables from the list and click on
    **Add** to load them into the map. Additionally, you can use **Set Filter** to
    load only specific features.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Filters in QGIS use SQL-like syntax; for example, `"Name" = 'EMILIA-ROMAGNA'`
    to select only the region called EMILIA-ROMAGNA, or `"Name" LIKE 'ISOLA%'` to
    select all regions starting with ISOLA. The filter queries are passed on to the
    underlying data provider (for example, Spatialite or OGR). The provider syntax
    for basic filter queries is consistent over different providers, but can vary
    when using more exotic functions. You can read up on the details of OGR SQL on
    [http://www.gdal.org/ogr/ogr_sql.html](http://www.gdal.org/ogr/ogr_sql.html).
  prefs: []
  type: TYPE_NORMAL
- en: '**PostGIS** is the spatial extension for the PostgreSQL database system. Installing
    and configuring the database is out of the scope of this book, but there are installers
    for Windows and packages for many Linux distributions as well as for Mac. To load
    data from a PostGIS database, go to **Layers** | **Add PostGIS Layer**, use the
    **Add PostGIS Layer** toolbar button, or press *Ctrl* + *Shift* + *D*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When using a database for the first time, click on **New** to establish a new
    database connection. In the following dialog, you can specify a **Name** for the
    new connection. Other fields that have to be filled are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Host**: The server''s IP address is inserted in this field. You can use localhost
    if PostGIS is running locally.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Port**: The PostGIS default port is 5432.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database**: This is the name of the PostGIS database you want to connect
    to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Username** and **Password**: For convenience, you can tell QGIS to save them.![Loading
    data from databases](img/7488_02_06.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows the dialog to create a new connection to a database
    called **postgis**:'
  prefs: []
  type: TYPE_NORMAL
- en: After the connection is established, you can load and filter tables just like
    we discussed for SpatiaLite.
  prefs: []
  type: TYPE_NORMAL
- en: Loading data from web services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: More and more data providers offer access to their datasets via OGC-compliant
    web services such as WMS, WCS, or WFS. QGIS supports these services out-of-the-box.
  prefs: []
  type: TYPE_NORMAL
- en: You can load WMS layers by going to **Layer** | **Add WMS Layer**, by clicking
    on the **Add WMS Layer** button, or by pressing *Ctrl* + *Shift* + *W*. If you
    know a WMS server, you can connect to it by clicking on **New** and filling in
    a name and the URL. All other fields are optional. Don't worry if you don't know
    of any WMS server, because we can simply click on **Add default servers** to get
    access information about servers whose administrators collaborate with the QGIS
    project. One of these servers is called **Lizardtech server**. Select it, or any
    of the other servers, from the drop-down box and click on **Connect** to see the
    list of layers available through the server.
  prefs: []
  type: TYPE_NORMAL
- en: From the layer list, you can now select one or more layers for download. It
    is worth noting that the order in which you select the layers does matter because
    the layers will be combined on the server side, and QGIS will only receive the
    combined image as the resultant layer. If you want to be able to use the layers
    separately, you have to download them one by one. The data download starts once
    you click on **Add**. The dialog will stay open so that you can add additional
    layers from the server.
  prefs: []
  type: TYPE_NORMAL
- en: Many WMS servers offer their layers in multiple different CRSs. You can check
    the list of available CRSs by clicking on the **Change** button at the bottom
    of the dialog. This will open a CRS selector dialog, which is limited to the WMS
    server's CRS capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Loading data from WCS or WFS servers works in the same way, but public servers
    are rare and unreliable, and therefore no recommendation can be provided here.
  prefs: []
  type: TYPE_NORMAL
- en: Styling raster layers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After this introduction to data sources, we can now create our first map. We
    will build the map from the bottom up by first loading some background rasters
    (hillshade and land cover), which we will then overlay with point, line, and polygon
    layers.
  prefs: []
  type: TYPE_NORMAL
- en: Let's start by loading land cover and hillshade from `landcover.img` and `SR_50M_alaska_nad.tif`
    and then opening the **Style** section in layer properties (**Layer** | **Properties**
    or by double-clicking on the layer name). QGIS tries to pick a reasonable default
    render type. The hillshade raster, `SR_50M_alaska_nad.tif`, is loaded with the
    **Singleband gray** render type as you can see in the following screenshot. If
    we want to render the hillshade raster in color instead of grayscale, we can change
    the render type to **Singleband pseudocolor**. In pseudocolor mode, we can create
    color maps either manually or by selecting one of the premade color ramps. But
    let's stick with **Singleband gray** for hillshade for now.
  prefs: []
  type: TYPE_NORMAL
- en: Below the color settings, we find a section with more advanced options that
    control raster resampling, brightness, contrast, saturation, and hue—options you
    probably know from image processing software. By default, resampling is set to
    the fast **Nearest neighbour** option. To get nice, smoother results, we can change
    to the **Bilinear** or **Cubic** method.
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Ok** or **Apply** to confirm. In both cases, the map will be redrawn
    using the new layer style. If you click on **Apply**, the **Layer Properties**
    dialog stays open and you can continue to fine-tune the layer style. If you click
    on **Ok**, the **Layer Properties** dialog is closed.
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling raster layers](img/7488_02_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The `landcover.img` raster is a good example of a paletted raster. Each cell
    value is mapped to a specific color. To change a color, we can simply double-click
    on the **Color** preview and a color picker will open.
  prefs: []
  type: TYPE_NORMAL
- en: 'The style section of a paletted raster looks like the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling raster layers](img/7488_02_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If we want to combine hillshade and land cover into one aesthetically pleasing
    background, we can use a combination of the **Blending mode** and layer **Transparency**.
    Blending modes are another feature commonly found in image-processing software.
    The main advantage of blending modes over transparency is that we can avoid the
    usually dull, low-contrast look that results from combining rasters using transparency
    alone. If you haven''t had any experience with blending, take some time to try
    the different effects. For this example, I used the **Darken** blending mode,
    as highlighted in the previous screenshot, together with a global layer transparency
    of **50 %,** as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling raster layers](img/7488_02_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Styling vector layers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When we load vector layers, QGIS renders them using a default style and a random
    color. Of course, we want to customize these styles to better reflect our data.
    In the following exercises, we will style point, line, and polygon layers, and
    we will also get accustomed with the most common vector styling options.
  prefs: []
  type: TYPE_NORMAL
- en: Creating point styles – an example of an airport style
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's get started with a point layer! Load `airport.shp` from our sample data.
    Regardless of the layer's geometry type, we always find a drop-down list with
    the available style options in the upper-left corner of the **Style** dialog.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following style options are available for vector layers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Single Symbol**: This is the simplest option. When we use a Single Symbol
    style, all points are displayed with the same symbol.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Categorized**: This is the style of choice if a layer contains points of
    different categories; for example, a layer containing locations of different animal
    sightings.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Graduated styles**: These are great if we want to visualize numerical values;
    for example, temperature measurements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rule-based styles**: These are the most advanced options. These styles are
    very flexible because they allow us to write multiple rules for one layer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Point displacement styles**: These are only available for point layers. These
    styles are useful if you need to visualize point layers with multiple points at
    the same coordinates; for example, students of a school living at the same address.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Below the drop-down list we find the symbol preview, and below that there is
    the list of symbol layers, which shows us the different layers the symbol consists
    of. On the right-hand side, we find options for the symbol size and size units,
    color and transparency, as well as rotation. Using the **Data defined properties**
    button, we can also tell QGIS to use the feature's attribute values to define
    symbol shape, size, color, and so on. Finally, the bottom-right area contains
    a preview area with saved symbols.
  prefs: []
  type: TYPE_NORMAL
- en: 'Point layers are by default displayed using a simple circle symbol. We want
    to use a symbol of an airplane instead. To change the symbol, select the **Simple
    marker** entry in **Symbol layers**. Notice how the right-hand side of the dialog
    changes. We can now see the options available for simple markers: **Colors**,
    **Size**, **Rotation**, **Form**, and so on. However, we are not looking for circles,
    stars, or square symbols—we want an airplane. That''s why we need to change the
    **Symbol layer type** option from **Simple marker** to **SVG marker**. Many of
    the options are similar, but on the bottom we now find a selection of SVG images
    that we can choose from. Scroll through the list and pick the airplane symbol
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating point styles – an example of an airport style](img/7488_02_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Symbol layer types for point layers include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Simple marker**: These include geometric forms such as circles, stars, and
    squares'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Font marker**: These provide access to your symbol fonts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SVG marker**: Each QGIS installation comes with a collection of default SVG
    symbols; add your own folders containing SVG images by going to **Settings** |
    **Options** | **System** | **SVG Paths**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ellipse marker**: These include customizable ellipses, rectangles, crosses,
    and triangles; especially useful when combined with what we set in the data defined
    settings option'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vector Field marker**: This is a customizable vector-field visualization
    tool'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating line styles – an example of river or road styles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this exercise, we will create a river style for the `majriver.shp` file
    in our sample data. The goal is to create a line style with two colors: a fill
    color for the center of the line and an outline color. This technique is very
    useful because it can also be used to create road styles.'
  prefs: []
  type: TYPE_NORMAL
- en: To create such a style, we combine two simple lines. The default symbol is one
    simple line. Click on the green **+** symbol located below the **Symbol layers**
    list to add another simple line. The lower one will be our outline and the upper
    one will be the fill. Select the upper simple line and change the color to blue
    and the width to 0.3 millimeters. Next, select the lower simple line and change
    its color to gray and the width to 0.6 millimeters, slightly wider than the other
    line. Check the preview and click on **Apply** to test how the style looks when
    applied to the river layer.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will notice that the style doesn''t look perfect yet. That''s because each
    line feature is drawn separately, one after the other, and this leads to a rather
    disconnected appearance. Luckily, that''s easy to fix; we only need to enable
    the so-called symbol levels. To do that, select the **Line** entry in the **Symbol
    layers** list and tick the checkbox in the **Symbol Levels** dialog of the **Advanced**
    section (the button in the lower-right corner of the style dialog) as shown in
    the following screenshot. Click on **Apply** to test the results:'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Whenever we create a symbol that we might want to re-use in other maps, we can
    save it by going to **Symbol** | **Save in symbol library** (the button beside
    the **Advanced** button in the bottom-right corner). We can assign a name to the
    new symbol; after we save it, it will be added to the **Saved styles** preview
    area.
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating line styles – an example of river or road styles](img/7488_02_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Symbol layer types for line layers include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Simple line**: These are solid or dashed lines'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Marker line**: These lines are made out of point markers located at line
    vertices or in regular intervals'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating polygon styles – an example of a landmass style
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this exercise, we will create a style for the `alaska.shp` file. The goal
    is to create a simple fill with a blue halo. Like in the previous river style
    example, we will combine two symbol layers to create this style: a simple fill
    layer that defines the main fill color with a thin border and an additional simple
    line outline layer for the halo. The halo should have nice rounded corners. To
    achieve those, change the **Join style** option to **Round**. Similar to the previous
    example, we again enable symbol levels; to prevent this landmass style from blocking
    out the background map, we select the **Multiply** blending mode as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating polygon styles – an example of a landmass style](img/7488_02_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Symbol layer types for polygon layers include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Simple fill**: These define fill and outline colors as well as basic fill
    styles'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Centroid fill**: These allow us to put point markers at the center of polygons'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Line/Point pattern fill**: These support user-defined line and point patterns
    with flexible spacing'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SVG fill**: These fill the polygon using SVG patterns'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outline**: These make it possible to outline areas using line styles'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading background maps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Background maps are very useful for quick checks and to provide orientation,
    especially if you don't have access to any other base layers. Adding background
    maps is easy using the OpenLayers plugin. It provides access to satellite, street,
    and hybrid maps by Google, Yahoo!, and Bing, as well as different map types by
    OpenStreetMap, Stamen, and Apple.
  prefs: []
  type: TYPE_NORMAL
- en: To install the OpenLayers plugin, go to **Plugins** | **Manage and Install Plugins
    | Get more**. Wait until the list of available plugins has finished loading. Use
    the filter to look for the **OpenLayers Plugin** option as shown in the following
    screenshot. Select it from the list and click on **Install**. This is going to
    take a moment. Once it's done, you will see a short confirmation message. You
    can then close the installer and the **OpenLayers Plugin** option should be available
    through the **Plugins** menu.
  prefs: []
  type: TYPE_NORMAL
- en: '![Loading background maps](img/7488_02_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note that you have to be online to use these services. Another fact worth mentioning
    is that all these services provide their maps only in Pseudo Mercator (EPSG:3857).
    Your project CRS will automatically be changed to Pseudo Mercator when you load
    a background map using the **OpenLayers plugin** option.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you load the OSM Landscape layer, your map will look like the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Loading background maps](img/7488_02_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered how to load spatial data from files, databases,
    and web services. We saw how QGIS handles coordinate reference systems and had
    a first introduction to styling vector and raster layers, a topic we will cover
    in more detail in [Chapter 5](ch05.html "Chapter 5. Creating Great Maps"), *Creating
    Great Maps*. We also installed our first Python plugin, the OpenLayers plugin,
    and used it to load background maps into our project.
  prefs: []
  type: TYPE_NORMAL
