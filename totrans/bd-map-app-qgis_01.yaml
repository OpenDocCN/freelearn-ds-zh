- en: Chapter 1. Getting Started with QGIS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. QGIS 入门
- en: 'This chapter provides an overview of the QGIS system and how you can work with
    it using the Python programming language. In particular, this chapter will cover
    the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了 QGIS 系统，以及您如何使用 Python 编程语言与之交互。特别是，本章将涵盖以下内容：
- en: Downloading, installing, and running QGIS
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载、安装和运行 QGIS
- en: Becoming familiar with the QGIS application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 熟悉 QGIS 应用程序
- en: Using Python within QGIS
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 QGIS 中使用 Python
- en: Using the Python Console as a window into the QGIS environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Python 控制台作为 QGIS 环境的窗口
- en: Working of a QGIS Python plugin
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QGIS Python 插件的工作原理
- en: Interacting with the QGIS Python API from an external Python program
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从外部 Python 程序与 QGIS Python API 交互
- en: About QGIS
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于 QGIS
- en: QGIS is a popular, free, and open source **Geographic Information System** (**GIS**),
    which runs on all major operating systems. People often use QGIS to view, edit,
    and analyze geospatial data. For our purposes, however, QGIS is more than just
    a GIS system; it is also a geospatial programming environment, which we can use
    to build our own geospatial applications using Python.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS 是一个流行的、免费的、开源的 **地理信息系统** (**GIS**)，可在所有主要操作系统上运行。人们通常使用 QGIS 来查看、编辑和分析地理空间数据。然而，对于我们来说，QGIS
    不仅仅是一个 GIS 系统；它还是一个地理空间编程环境，我们可以使用它来构建自己的地理空间应用程序，使用 Python 实现。
- en: QGIS has a comprehensive website ([http://qgis.org](http://qgis.org)), which
    makes it easy to download, install, and use.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS 拥有一个全面的网站 ([http://qgis.org](http://qgis.org))，这使得下载、安装和使用变得容易。
- en: 'Before reading further, you should spend 15 minutes looking through the website
    and getting familiar with the application and the documentation available online.
    In particular, you should check out the **Documentation** page, where three important
    manuals are available: *QGIS User guide/Manual*, *QGIS Training manual*, and *PyQGIS
    cookbook*.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续阅读之前，您应该花 15 分钟浏览网站，熟悉应用程序和在线可用的文档。特别是，您应该查看 **文档** 页面，其中提供了三本重要的手册：*QGIS
    用户指南/手册*、*QGIS 培训手册* 和 *PyQGIS 烹饪书*。
- en: '*QGIS User guide/Manual* provides in-depth user documentation, which you might
    find useful. *QGIS Training manual* is a detailed introduction to GIS systems
    and concepts based on QGIS; you might find it useful to work through this course
    if you aren''t already familiar with geospatial data and techniques. Finally,
    *PyQGIS cookbook* will be an essential reference to use as you develop your own
    mapping applications built on top of QGIS.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*QGIS 用户指南/手册* 提供了深入的用户文档，您可能会发现它很有用。*QGIS 培训手册* 是基于 QGIS 的 GIS 系统和概念的详细介绍；如果您不熟悉地理空间数据和技巧，您可能会发现完成这门课程很有用。最后，*PyQGIS
    烹饪书* 将成为您在开发基于 QGIS 的自己的映射应用程序时的必备参考。'
- en: Installing and running QGIS
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和运行 QGIS
- en: 'If you haven''t already installed QGIS, click on the **Download Now** button
    on the main QGIS web page to download the QGIS software. What you do next depends
    on which operating system you are running on your computer:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未安装 QGIS，请点击 QGIS 主网页上的 **立即下载** 按钮，以下载 QGIS 软件。您接下来的操作取决于您在计算机上运行的操作系统：
- en: For MS Windows, you can download a double-clickable installer that installs
    QGIS and all the required libraries in one go. Make sure you use the OSGeo4W installer,
    which includes the Python interpreter, QGIS itself, and all the required libraries.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 MS Windows，您可以下载一个可双击的安装程序，该安装程序一次安装 QGIS 和所有必需的库。请确保您使用的是 OSGeo4W 安装程序，它包括
    Python 解释器、QGIS 本身以及所有必需的库。
- en: For Mac OS X, you'll need to visit the Kyngchaos website ([http://www.kyngchaos.com/software/qgis](http://www.kyngchaos.com/software/qgis))
    to download and install the GDAL and matplotlib libraries before installing a
    version of QGIS specially built for your operating system. All the required packages
    are available from the Kyngchaos site.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Mac OS X，您需要访问 Kyngchaos 网站 ([http://www.kyngchaos.com/software/qgis](http://www.kyngchaos.com/software/qgis))
    下载并安装 GDAL 和 matplotlib 库，然后再安装为您的操作系统专门构建的 QGIS 版本。所有必需的软件包都可在 Kyngchaos 网站上找到。
- en: For Unix-like systems, you'll use a package manager to download, compile, and
    install QGIS and the required libraries from an appropriate package repository.
    More information about installing on a Unix-like system can be found at [http://qgis.org/en/site/forusers/alldownloads.html#linux](http://qgis.org/en/site/forusers/alldownloads.html#linux).
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于类 Unix 系统，您将使用包管理器从适当的软件仓库下载、编译和安装 QGIS 及所需库。有关在类 Unix 系统上安装的更多信息，请参阅[http://qgis.org/en/site/forusers/alldownloads.html#linux](http://qgis.org/en/site/forusers/alldownloads.html#linux)。
- en: Once you have installed the QGIS system, you can run it just like any other
    application on your computer, for example, by double-clicking on the QGIS icon
    in your `Applications` folder.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您安装了QGIS系统，您就可以像在计算机上运行任何其他应用程序一样运行它，例如，通过双击您`应用程序`文件夹中的QGIS图标。
- en: 'If everything goes well, the QGIS application will start up and you will be
    greeted with the following window:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，QGIS应用程序将启动，您将看到以下窗口：
- en: '![Installing and running QGIS](img/00002.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![安装和运行QGIS](img/00002.jpeg)'
- en: Note
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The exact appearance of the window might vary depending on your operating system.
    Don't worry, as long as a window appears, which looks something like the one shown
    in the previous screenshot, you are running QGIS.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口的精确外观可能因您的操作系统而异。不必担心，只要出现一个类似于前一个屏幕截图的窗口，您就是在运行QGIS。
- en: You don't need to worry too much about the QGIS user interface right now; the
    QGIS User Guide describes the interface and various options in great detail. Rather
    than duplicating this information, let's take a look under the hood to see how
    QGIS works.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在不必太担心QGIS用户界面；QGIS用户指南详细描述了界面和各种选项。我们不如深入了解一下QGIS的工作原理。
- en: Understanding QGIS concepts
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解QGIS概念
- en: 'To understand QGIS, you will have to become familiar with the following basic
    terms and concepts:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解QGIS，您必须熟悉以下基本术语和概念：
- en: QGIS works with geospatial information loaded from a variety of **data sources**.
    These data sources can include vector and raster data files on a disk, a variety
    of spatial databases, and even web services such as **Web Map Service** (**WMS**)
    servers that provide geospatial data from the Internet.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QGIS与从各种**数据源**加载的地理空间信息一起工作。这些数据源可以包括磁盘上的矢量数据和栅格数据文件、各种空间数据库，甚至提供来自互联网的地理空间数据的Web服务，如**Web地图服务**（WMS）服务器。
- en: Wherever the data comes from, it is retrieved by QGIS and displayed as a **map
    layer**. Map layers can be shown or hidden, and also customized in various ways
    to affect the way the data is displayed on the map.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无论数据来自何处，它都由QGIS检索并以**地图层**的形式显示。地图层可以显示或隐藏，并且可以通过各种方式自定义，以影响数据在地图上的显示方式。
- en: The map layers are then combined and displayed on a **map**.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后将地图层组合并在**地图**上显示。
- en: Finally, the various map layers, the map, and the other settings, all make up
    a project. QGIS always has one and only one project that it is working with. The
    project consists of all the map layers, the map display options, and the various
    settings that are currently loaded into QGIS.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，各种地图层、地图和其他设置共同构成了一个项目。QGIS始终只有一个项目，并且正在处理该项目。项目包括所有地图层、地图显示选项和当前加载到QGIS中的各种设置。
- en: 'These concepts are related in the following manner:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这些概念以以下方式相关联：
- en: '![Understanding QGIS concepts](img/00003.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![理解QGIS概念](img/00003.jpeg)'
- en: Note
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the data sources are outside QGIS. While the map layer refers to a
    data source, the data itself is stored somewhere else, for example, in a file
    on a disk or within a database.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意数据源位于QGIS之外。虽然地图层引用数据源，但数据本身存储在其他地方，例如，磁盘上的文件或数据库中。
- en: Whenever you are working with QGIS, you are always working within the current
    project. You can save projects and reload them later, or start a new project to
    reset QGIS back to its original state.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您何时使用QGIS，您总是在当前项目中工作。您可以保存项目并在以后重新加载它们，或者开始一个新的项目以将QGIS重置到其原始状态。
- en: Linking QGIS and Python
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链接QGIS和Python
- en: While QGIS itself is written in C++, it includes extensive support for Python
    programming. A Python interpreter is built in, and can be used interactively via
    the Python Console, or to run plugins written in Python. There is also a comprehensive
    API for querying and controlling the QGIS application using Python code.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然QGIS本身是用C++编写的，但它提供了广泛的Python编程支持。内置了一个Python解释器，可以通过Python控制台交互式使用，或运行用Python编写的插件。还有一个全面的API，可以使用Python代码查询和控制QGIS应用程序。
- en: 'There are three ways in which you can use Python to work with the QGIS system:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下三种方式使用Python与QGIS系统一起工作：
- en: '**Python Console**: You can open this console, which runs the interactive Python
    interpreter built into QGIS, allowing you to type in commands and see the results
    immediately.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Python控制台**：您可以打开这个控制台，它运行的是QGIS内置的交互式Python解释器，允许您输入命令并立即看到结果。'
- en: '**Python plugin**: These are Python packages designed to be run within the
    QGIS environment.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Python插件**：这些是为在QGIS环境中运行而设计的Python包。'
- en: 'E**xternal applications**: You can use the QGIS Python API in your own applications.
    This lets you use QGIS as a geospatial processing engine, or even build your own
    interactive applications based on QGIS.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部应用程序**：你可以在自己的应用程序中使用 QGIS Python API。这让你可以使用 QGIS 作为地理空间处理引擎，甚至基于 QGIS
    构建自己的交互式应用程序。'
- en: No matter how you use Python and QGIS, you will make extensive use of the QGIS
    Python libraries, which are often referred to as **PyQGIS**. They provide a complete
    programmatic interface to the QGIS system, including calls to load data sources
    into layers, manipulate the map, export map visualizations, and build custom applications
    using the QGIS user interface. While an in-depth examination of the PyQGIS library
    will have to wait until [Chapter 3](part0021_split_000.html#page "Chapter 3. Learning
    the QGIS Python API"), *Learning the QGIS Python API*, we will start dabbling
    with it right away in the next section on the Python Console.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你如何使用 Python 和 QGIS，你都将大量使用 QGIS Python 库，这些库通常被称为 **PyQGIS**。它们为 QGIS 系统提供了一个完整的程序接口，包括将数据源加载到图层中、操作地图、导出地图可视化以及使用
    QGIS 用户界面构建自定义应用程序的调用。虽然对 PyQGIS 库的深入探讨将不得不等到 [第 3 章](part0021_split_000.html#page
    "第 3 章。学习 QGIS Python API")，即 *学习 QGIS Python API*，但我们将在下一节关于 Python 控制台的下一节中立即开始尝试。
- en: For the remainder of this chapter, we will examine each of the three ways in
    which you can work with QGIS and Python.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的剩余部分，我们将检查你可以使用 QGIS 和 Python 交互的三个方法。
- en: Exploring the Python Console
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Python 控制台
- en: 'The QGIS Python Console window can be accessed by using the **Python Console**
    item in the **Plugins** menu. When you select this command, the Python Console
    will appear in the lower-right corner of the QGIS window. Here''s what the Python
    Console looks like when you first open it:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在 **插件** 菜单中使用 **Python 控制台** 项来访问 QGIS Python 控制台窗口。当你选择此命令时，Python 控制台将出现在
    QGIS 窗口的右下角。以下是在你首次打开它时 Python 控制台的外观：
- en: '![Exploring the Python Console](img/00004.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![探索 Python 控制台](img/00004.jpeg)'
- en: While the Python Console is an excellent tool for interacting with an existing
    QGIS project, we are going to use it to create a new project from scratch. Before
    we can do this, though, we'll need to download some geospatial data sources for
    our QGIS project.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Python 控制台是一个与现有 QGIS 项目交互的出色工具，但我们将用它从头开始创建一个新项目。不过，在我们这样做之前，我们需要为我们的 QGIS
    项目下载一些地理空间数据源。
- en: We are going to need a suitable **base map** for our project, as well as some
    river and city information to display on top of this base map. Let's use the Natural
    Earth website to obtain the information we need. Go to [http://naturalearthdata.com](http://naturalearthdata.com)
    and click on the **Downloads** tab.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将需要一个合适的 **底图** 用于我们的项目，以及一些河流和城市信息，以便在底图上显示。让我们使用自然地球网站来获取所需的信息。转到 [http://naturalearthdata.com](http://naturalearthdata.com)
    并点击 **下载** 选项卡。
- en: Firstly, we'll want to download a nice-looking base map for our project. To
    do this, select the **Raster** link under the **Medium scale data, 1:50m** section,
    choose the **Natural Earth 1** dataset, and click on the **Download small size**
    link under the *Natural Earth I with Shaded Relief and Water* heading.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们希望下载一个看起来很不错的底图。为此，在 **中等比例数据，1:50m** 部分下选择 **栅格** 链接，选择 **自然地球 1** 数据集，然后在
    **自然地球 I 带阴影和水的** 标题下点击 **下载小尺寸** 链接。
- en: Next, we need an overlay, which will show lakes and rivers on top of our base
    map. To get this information, go back to the **Downloads** tab and select the
    **Physical** link under the **Medium scale data, 1:50m** section. The dataset
    you want is called *Rivers, Lake Centerlines*, so click on the **Download rivers
    and lake centerlines** link to obtain this file.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要一个叠加图层，它将在底图上显示湖泊和河流。要获取这些信息，回到 **下载** 选项卡，并在 **中等比例数据，1:50m** 部分下选择
    **物理** 链接。你想要的数据集称为 *Rivers, Lake Centerlines*，因此点击 **下载河流和湖泊中心线** 链接以获取此文件。
- en: Finally, we'll want to highlight the cities on top of our base map. Go back
    to the **Downloads** page and select the **Cultural** link under the **Medium
    scale data, 1:50m** heading. At the bottom is a section labelled **Urban Areas**.
    Click on the **Download urban areas** link to download this file.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们希望突出显示底图上的城市。回到 **下载** 页面，并在 **中等比例数据，1:50m** 标题下选择 **文化** 链接。底部有一个标记为
    **城市区域** 的部分。点击 **下载城市区域** 链接以下载此文件。
- en: 'Once you''ve done all this, you should have the following three files:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成所有这些，你应该有以下三个文件：
- en: A raster base map in a file named `NE1_50M_SR_W.zip`
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个名为 `NE1_50M_SR_W.zip` 的栅格底图
- en: Lake and river vector data in a file named `ne_50m_rivers_lake_centerlines.zip`
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件名为 `ne_50m_rivers_lake_centerlines.zip` 的湖泊和河流矢量数据
- en: Urban area vector data in a file named `ne_50m_urban_areas.zip`
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件名为 `ne_50m_urban_areas.zip` 的城市区域矢量数据
- en: Since these are ZIP archives, you will need to unzip these files and store them
    somewhere at a convenient location on your hard disk.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些是 ZIP 存档，你需要解压缩这些文件并将它们存储在硬盘上方便的位置。
- en: Tip
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You'll need to type in the full path to these datasets, so you might want to
    put them somewhere convenient, for example, in your home or user directory. In
    this way, the path you type won't be too long.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要输入这些数据集的完整路径，因此你可能希望将它们放在一个方便的位置，例如你的家目录或用户目录中。这样，你输入的路径就不会太长。
- en: 'Now that we have our data, let''s use the QGIS Python Console to import this
    data into a project. If you''ve already loaded some data into QGIS (for example,
    by following the tutorial in the QGIS User Guide), choose the **New** option from
    the **Project** menu to start again with a blank project. Then, type the following
    into the QGIS Python Console:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了数据，让我们使用 QGIS Python 控制台将此数据导入到项目中。如果你已经将一些数据加载到 QGIS 中（例如，通过遵循 QGIS 用户指南中的教程），请从
    **项目** 菜单中选择 **新建** 选项，以使用空白项目重新开始。然后，在 QGIS Python 控制台中输入以下内容：
- en: '[PRE0]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Make sure you replace `/path/to/` with the full path to the `NE1_50M_SR_W`
    directory you downloaded. Assuming you typed the path correctly, the Natural Earth
    1 base map should appear in the QGIS window:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将 `/path/to/` 替换为你下载的 `NE1_50M_SR_W` 目录的完整路径。假设你输入了正确的路径，自然地球 1 基础地图应该出现在
    QGIS 窗口中：
- en: '![Exploring the Python Console](img/00005.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![探索 Python 控制台](img/00005.jpeg)'
- en: 'As you can see, our base map is a bit small right now. You can use the various
    panning and zooming commands in the toolbar at the top of the window to make it
    bigger, but let''s use Python to do the same thing:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们的基础地图现在有点小。你可以使用窗口顶部的工具栏中的各种平移和缩放命令将其放大，但让我们使用 Python 来做同样的事情：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will expand the base map to fill the entire window.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这将扩展基础地图以填充整个窗口。
- en: 'Now that we have a base map, let''s add our two vector layers to the project.
    To do this, type the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了基础地图，让我们将我们的两个矢量图层添加到项目中。为此，请输入以下内容：
- en: '[PRE2]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once again, make sure you replace `/path/to/` with the full path to the `ne_50m_urban_areas`
    directory you downloaded earlier. The urban areas shapefile will be loaded into
    the QGIS project and will appear as a series of colored areas on top of the base
    map. Let''s zoom in to an area of California so that we can see what this looks
    like more clearly. To do this, type the following commands into the Python Console
    window:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 再次确认，将 `/path/to/` 替换为你之前下载的 `ne_50m_urban_areas` 目录的完整路径。城市区域形状文件将被加载到 QGIS
    项目中，并作为一系列彩色区域出现在基础地图上。让我们放大到加利福尼亚的一个区域，以便我们可以更清楚地看到它。为此，请在 Python 控制台窗口中输入以下命令：
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will zoom in on the map in so that an area of California, including Los
    Angeles and the southern part of San Francisco, is now shown on the map:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这将放大地图，以便加利福尼亚的一个区域，包括洛杉矶和旧金山的南部，现在显示在地图上：
- en: '![Exploring the Python Console](img/00006.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![探索 Python 控制台](img/00006.jpeg)'
- en: 'Finally, let''s add our river and lake data to our project. To do this, enter
    the following into the Python Console:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们将河流和湖泊数据添加到我们的项目中。为此，请在 Python 控制台中输入以下内容：
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you look at the map, you''ll see that the rivers and lakes are now visible.
    However, they are drawn in a default green color. Let''s change this so that the
    water is now blue:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看地图，你会看到河流和湖泊现在可见。然而，它们是以默认的绿色绘制的。让我们将其改为蓝色，以便水现在是蓝色：
- en: '[PRE5]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This code might be a bit confusing, but don't worry—we'll learn about renderers
    and symbols in [Chapter 3](part0021_split_000.html#page "Chapter 3. Learning the
    QGIS Python API"), *Learning the QGIS Python API*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码可能有点令人困惑，但别担心——我们将在 [第 3 章](part0021_split_000.html#page "第 3 章。学习 QGIS
    Python API") 中学习关于渲染器和符号的内容，*学习 QGIS Python API*。
- en: Now that we are finished, you can save your project using the **Save As...**
    item in the **Project** menu. As you can see, it's quite possible to set up and
    customize your QGIS project using Python.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成，你可以使用 **项目** 菜单中的 **另存为...** 项保存你的项目。正如你所见，使用 Python 设置和自定义 QGIS 项目是完全可能的。
- en: Examining a Python plugin
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查 Python 插件
- en: While the Python Console is a fantastic tool for interactive coding, it isn't
    all that useful if you want to use Python to extend the functionality of QGIS.
    This is where QGIS plugins come in; you can create (or download) a plugin that
    adds new features or changes the way QGIS works.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Python 控制台是一个交互式编码的绝佳工具，但如果你想使用 Python 来扩展 QGIS 的功能，它就不是很实用了。这就是 QGIS 插件发挥作用的地方；你可以创建（或下载）一个插件，添加新功能或改变
    QGIS 的工作方式。
- en: Because QGIS is written using the Qt framework, QGIS plugins make use of the
    Python bindings in Qt, which are called **PyQt**. We will download and install
    PyQt and the related tools when we start to build our own plugins in [Chapter
    4](part0026_split_000.html#page "Chapter 4. Creating QGIS Plugins"), *Creating
    QGIS Plugins*.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 QGIS 是使用 Qt 框架编写的，QGIS 插件利用了 Qt 中的 Python 绑定，这些绑定被称为 **PyQt**。当我们开始在 [第 4
    章](part0026_split_000.html#page "第 4 章。创建 QGIS 插件") 中构建自己的插件时，我们将下载并安装 PyQt 和相关工具，*创建
    QGIS 插件*。
- en: To get an idea of how a Python plugin works, let's take a look at the **Zoom
    to Point** plugin. As the name suggests, this plugin lets you zoom to display
    a given coordinate on the map. It's also written in Python, and is a convenient
    example for learning about plugins in general.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解 Python 插件是如何工作的，让我们看看 **缩放到点** 插件。正如其名所示，此插件允许你缩放以显示地图上的给定坐标。它也是用 Python
    编写的，是学习插件的一般方便示例。
- en: Before we can use it, we have to install this plugin. Choose the **Manage and
    Install Plugins...** item from the **Plugins** menu, and click on the **Not Installed**
    tab. You should see **Zoom to Point** listed near the bottom of the list of available
    plugins; click on this plugin, and then click on the **Install Plugin** button
    to download and install it.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够使用它之前，我们必须安装这个插件。从 **插件** 菜单中选择 **管理和安装插件...** 项，然后点击 **未安装** 选项卡。你应该会在可用插件的列表底部看到
    **缩放到点**；点击此插件，然后点击 **安装插件** 按钮来下载并安装它。
- en: 'Let''s run this plugin to see how it works; with the project you created earlier
    still loaded, click on the **Zoom to Point** plugin''s icon in the toolbar, which
    looks like this:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行这个插件来看看它是如何工作的；在之前创建的项目仍然加载的情况下，点击工具栏中的 **缩放到点** 插件图标，它看起来像这样：
- en: '![Examining a Python plugin](img/00007.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![检查 Python 插件](img/00007.jpeg)'
- en: Try entering the longitude/latitude of your current location (if you don't know
    it, you might find [http://itouchmap.com/latlong.html](http://itouchmap.com/latlong.html)
    helpful). You should see the base map, urban areas, and waterways for your current
    location.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试输入你当前位置的经纬度（如果你不知道，你可能需要 [http://itouchmap.com/latlong.html](http://itouchmap.com/latlong.html)
    的帮助）。你应该能看到你当前位置的基础地图、城市区域和水道。
- en: Tip
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Don't forget that x equals longitude and y equals latitude. It's easy to get
    them the wrong way around.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记 x 等于经度，y 等于纬度。很容易弄错它们的位置。
- en: Now that we know what the plugin does, let's see how it works. The downloaded
    plugins are stored in a hidden directory named `.qgis2` in your user or home directory.
    Go to this hidden directory using your favorite file manager (for Mac OS X, you
    can use the **Go to Folder...** item in the Finder's **Go** menu), and find the
    `python/plugins` subdirectory. This is where the Python plugins are stored.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经知道了插件的功能，让我们看看它是如何工作的。下载的插件存储在你用户或主目录中名为 `.qgis2` 的隐藏目录中。使用你喜欢的文件管理器进入这个隐藏目录（对于
    Mac OS X，你可以在 Finder 的 **Go** 菜单中使用 **Go to Folder...** 项），然后找到 `python/plugins`
    子目录。Python 插件就是存储在这里。
- en: Tip
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Depending on your operating system and the version of QGIS you are using, the
    name of this hidden directory might be different. If you can't find it, look for
    a directory named `.qgis` or `.qgis2` or something similar.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的操作系统和使用的 QGIS 版本，这个隐藏目录的名称可能不同。如果你找不到它，寻找名为 `.qgis` 或 `.qgis2` 或类似名称的目录。
- en: 'You should see a directory named `zoomtopoint` (the full path to this directory
    will be `~/.qgis2/python/plugins/zoomtopoint`). Inside this directory, you will
    find the various files that make up the Zoom to Point plugin:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到一个名为 `zoomtopoint` 的目录（该目录的完整路径将是 `~/.qgis2/python/plugins/zoomtopoint`）。在这个目录中，你会找到组成缩放到点插件的各个文件：
- en: '![Examining a Python plugin](img/00008.jpeg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![检查 Python 插件](img/00008.jpeg)'
- en: 'Let''s see what these various files do:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些各种文件的作用：
- en: '| Filename | Used for |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 文件名 | 用途 |'
- en: '| --- | --- |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `__init__.py` | This is a standard Python package initialization file. This
    file also initializes the plugin and makes it available to the QGIS system. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `__init__.py` | 这是一个标准的 Python 包初始化文件。此文件还初始化插件并使其可供 QGIS 系统使用。 |'
- en: '| `COPYING` | This is a copy of the GNU **General Public License** (**GPL**).
    Since the Zoom to Point plugin is generally available, this defines the license
    under which it can be used. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `COPYING` | 这是一个 GNU **通用公共许可证** (**GPL**) 的副本。由于 Zoom to Point 插件通常是可用的，这定义了它可以在哪种许可下使用。|'
- en: '| `icon.png` | As the name suggests, this is the plugin''s toolbar icon. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `icon.png` | 如其名所示，这是插件的工具栏图标。|'
- en: '| `Makefile` | This is a standard *nix Makefile used to automate the process
    of compiling and deploying the plugin. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `Makefile` | 这是一个标准的 *nix Makefile，用于自动化插件的编译和部署过程。|'
- en: '| `metadata.txt` | This file contains the plugin''s metadata, including the
    full name of the plugin, a description, the current version number, and so on.
    |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `metadata.txt` | 这个文件包含了插件的元数据，包括插件的完整名称、描述、当前版本号等。|'
- en: '| `resources.qrc` | This is a Qt resource file that defines the various resources
    such as images and sound files used by the plugin. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `resources.qrc` | 这是一个 Qt 资源文件，定义了插件使用的各种资源，如图像和声音文件。|'
- en: '| `resources.py` | This indicates the contents of the `resources.qrc` file,
    compiled into a Python module. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `resources.py` | 这表示 `resources.qrc` 文件的内容被编译成一个 Python 模块。|'
- en: '| `ui_zoomtopoint.ui` | This is a Qt user interface template that defines the
    main UI for the plugin. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `ui_zoomtopoint.ui` | 这是一个 Qt 用户界面模板，定义了插件的主要 UI。|'
- en: '| `ui_zoomtopoint.py` | This indicates the contents of the `ui_zoomtopoint.ui`
    file compiled into a Python module. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `ui_zoomtopoint.py` | 这表示 `ui_zoomtopoint.ui` 文件的内容被编译成一个 Python 模块。|'
- en: '| `zoomtopoint.py` | This file contains the main Python code for the plugin.
    |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `zoomtopoint.py` | 这个文件包含了插件的主要 Python 代码。|'
- en: '| `zoomtopointdialog.ui` | This is a copy of the `ui_zoomtopoint.ui` file.
    It looks like this file was included by accident, as the plugin can run without
    it. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `zoomtopointdialog.ui` | 这是一个 `ui_zoomtopoint.ui` 文件的副本。看起来这个文件是意外包含进来的，因为插件可以在没有它的情况下运行。|'
- en: '| `zoomtopointdialog.py` | This Python module defines a `QtGui.QDialog` subclass
    that loads the dialog box''s contents from `ui_zoomtopoint.py`. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `zoomtopointdialog.py` | 这个 Python 模块定义了一个 `QtGui.QDialog` 子类，它从 `ui_zoomtopoint.py`
    加载对话框的内容。|'
- en: 'Open the `zoomtopoint.py` module in your favorite text editor. As you can see,
    this contains the main Python code for the plugin, in the form of a `ZoomToPoint`
    class. This class has the following basic structure:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在你喜欢的文本编辑器中打开 `zoomtopoint.py` 模块。正如你所看到的，它包含了插件的主要 Python 代码，形式为一个 `ZoomToPoint`
    类。这个类具有以下基本结构：
- en: '[PRE6]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you open the `__init__.py` module, you''ll see how this class is used to
    define the plugin''s behavior:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打开 `__init__.py` 模块，你会看到这个类是如何用来定义插件行为的：
- en: '[PRE7]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When the plugin is loaded, a parameter named `iface` is passed to the `ClassFactory`
    function. This parameter is an instance of `QgsInterface`, and provides access
    to the various parts of the running QGIS application. As you can see, the class
    factory creates a `ZoomToPoint` object, and passes the `iface` parameter to the
    initializer so that `ZoomToPoint` can make use of it.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当插件被加载时，一个名为 `iface` 的参数传递给 `ClassFactory` 函数。这个参数是 `QgsInterface` 的一个实例，它提供了访问正在运行的
    QGIS 应用程序各个部分的能力。正如你所看到的，类工厂创建了一个 `ZoomToPoint` 对象，并将 `iface` 参数传递给初始化器，以便 `ZoomToPoint`
    可以使用它。
- en: 'Notice how `ZoomToPoint.__init__()`, in the `Zoomtopoint.py` module, stores
    a reference to the `iface` parameter in an instance variable, so that the other
    methods can refer to the QGIS interface using `self.iface`. For example:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在 `Zoomtopoint.py` 模块中的 `ZoomToPoint.__init__()`，如何将 `iface` 参数存储在一个实例变量中，这样其他方法就可以通过
    `self.iface` 来引用 QGIS 接口。例如：
- en: '[PRE8]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This allows the plugin to interact with and manipulate the QGIS user interface.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得插件能够与 QGIS 用户界面进行交互和操作。
- en: 'The four methods defined by the `ZoomToPoint` class are all quite straightforward:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`ZoomToPoint` 类定义的四个方法都非常直接：'
- en: '`__init__()`: This method initializes a new `ZoomToPoint` object.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__init__()`: 这个方法初始化一个新的 `ZoomToPoint` 对象。'
- en: '`initGui()`: This method initializes the plugin''s user interface, preparing
    it to be used.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`initGui()`: 这个方法初始化插件的用户界面，准备使用。'
- en: '`unload()`: This method removes the plugin from the QGIS user interface.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unload()`: 这个方法从 QGIS 用户界面中移除插件。'
- en: '`run()`: This method is called when the plugin is activated, that is, when
    the user clicks on the plugin''s icon in the toolbar, or selects the plugin from
    the Plugins menu.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`run()`: 当插件被激活时调用这个方法，即当用户在工具栏中点击插件的图标，或从插件菜单中选择插件时。'
- en: 'Don''t worry too much about all the details here; we''ll look at the process
    of initializing and unloading a plugin in a later chapter. For now, take a closer
    look at the `run()` method. This method essentially looks like the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 不要过于担心这里的所有细节；我们将在后面的章节中查看初始化和卸载插件的过程。现在，更仔细地看看 `run()` 方法。这个方法本质上看起来如下：
- en: '[PRE9]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We''ve excluded the code that remembers the values the user entered previously,
    and copies those values back into the dialog when the plugin is run. Looking at
    the previous code, the logic seems to be fairly straightforward and is explained
    as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经排除了记住用户之前输入的值并将这些值在插件运行时复制回对话框的代码。查看之前的代码，逻辑似乎相当简单，解释如下：
- en: Create a `ZoomToPointDialog` object.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个 `ZoomToPointDialog` 对象。
- en: Display the dialog box to the user.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向用户显示对话框。
- en: If the user clicks on the **OK** button, extract the entered values, use them
    to create a new bounding rectangle, and set the extent of the map to this rectangle.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户点击 **确定** 按钮，提取输入的值，使用这些值创建一个新的边界矩形，并将地图的范围设置为这个矩形。
- en: 'While this plugin is quite straightforward and the actual code doesn''t do
    all that much, it is a useful example of what a Python plugin should look like,
    as well as the various files that are needed by a Python plugin. In particular,
    you should note that:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个插件相当简单直接，实际代码并没有做很多，但它是一个有用的示例，说明了 Python 插件应该是什么样子，以及 Python 插件所需的各个文件。特别是，你应该注意以下几点：
- en: A plugin is simply a directory that contains a Python package initialization
    file (`__init__.py`), some Python modules, and other files created using Qt Designer.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件只是一个包含 Python 包初始化文件 (`__init__.py`)、一些 Python 模块以及其他使用 Qt Designer 创建的文件的目录。
- en: The `__init__.py` module must define a top-level function named `ClassFactory`
    that accepts an `iface` parameter and returns an object that represents the plugin.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__init__.py` 模块必须定义一个名为 `ClassFactory` 的顶级函数，该函数接受一个 `iface` 参数并返回一个代表插件的对象。'
- en: The plugin object must define an `initGui()` method, which is called to initialize
    the plugin's user interface, and an `unload()` method, which is called to remove
    the plugin from the QGIS application.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件对象必须定义一个 `initGui()` 方法，该方法用于初始化插件的用户界面，以及一个 `unload()` 方法，该方法用于从 QGIS 应用程序中移除插件。
- en: The plugin can interact with and manipulate the QGIS application via the `iface`
    object passed to the class factory.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件可以通过传递给类工厂的 `iface` 对象与 QGIS 应用程序交互并操作。
- en: The `resources.qrc` file lists various resources such as images, which are used
    by the plugin.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resources.qrc` 文件列出了各种资源，如图片，这些资源由插件使用。'
- en: The `resources.qrc` file is compiled into a `resources.py` file using the PyQt
    command-line tools.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PyQt 命令行工具将 `resources.qrc` 文件编译成 `resources.py` 文件。
- en: Dialog boxes and other windows are created using a Qt Designer template, which
    are typically stored in a file with a name of the form `ui_Foo.ui`.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对话框和其他窗口是通过 Qt Designer 模板创建的，这些模板通常存储在名为 `ui_Foo.ui` 的文件中。
- en: The UI template files are then compiled into Python code using the PyQt command-line
    tools. If the template is named `ui_foo.ui`, then the associated Python module
    will be named `ui_foo.py`.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后将 UI 模板文件编译成 Python 代码，使用 PyQt 命令行工具。如果模板命名为 `ui_foo.ui`，则相关的 Python 模块将被命名为
    `ui_foo.py`。
- en: Once the user interface for a dialog box has been defined, you create a subclass
    of `QtGui.QDialog`, and load that user interface module into it. This defines
    the contents of the dialog box based on your template.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦定义了对话框的用户界面，你将创建 `QtGui.QDialog` 的一个子类，并将该用户界面模块加载到其中。这根据你的模板定义了对话框的内容。
- en: Your plugin can then display the dialog box as required, extracting the entered
    values and using the results to interact with QGIS via the `iface` variable.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的插件可以按要求显示对话框，提取输入的值，并使用这些结果通过 `iface` 变量与 QGIS 交互。
- en: Plugins are a useful way of extending and customizing QGIS. We will return to
    the topic of QGIS plugins in [Chapter 4](part0026_split_000.html#page "Chapter 4. Creating
    QGIS Plugins"), *Creating QGIS Plugins*, where we will create our own plugin from
    scratch.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 插件是扩展和定制 QGIS 的有用方式。我们将在 [第 4 章](part0026_split_000.html#page "第 4 章。创建 QGIS
    插件") 中回到 QGIS 插件的主题，我们将从头开始创建自己的插件。
- en: Writing an external application
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写外部应用程序
- en: 'The final way to work with Python and QGIS is to write a completely standalone
    Python program that imports the QGIS libraries and works with them directly. In
    many ways, this is an ideal way of writing your own custom mapping applications,
    because your program doesn''t have to run within the existing QGIS user interface.
    There are, however, a few things you need to be aware of when you attempt to use
    Python and QGIS in this way:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Python 和 QGIS 一起工作的最终方式是编写一个完全独立的 Python 程序，该程序导入 QGIS 库并直接与之交互。在许多方面，这是编写您自己的自定义地图应用程序的理想方式，因为您的程序不需要在现有的
    QGIS 用户界面中运行。然而，当您尝试以这种方式使用 Python 和 QGIS 时，有一些事情您需要注意：
- en: Your Python program needs to be able to find the QGIS Python libraries before
    it can be run. Since these are bundled into the QGIS application itself, you will
    need to add the directory where the PyQGIS libraries are installed in your Python
    path.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的 Python 程序需要在运行之前能够找到 QGIS Python 库。由于这些库捆绑在 QGIS 应用程序本身中，您需要将 PyQGIS 库安装的目录添加到您的
    Python 路径中。
- en: You also need to tell the PyQGIS libraries where the QGIS application's resources
    are stored.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还需要告诉 PyQGIS 库 QGIS 应用程序资源存储的位置。
- en: As the application is running outside the QGIS application, you won't have access
    to the `iface` variable. You also can't use those parts of the PyQGIS library
    that assume you are running inside QGIS.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于应用程序是在 QGIS 应用程序外部运行的，因此您将无法访问 `iface` 变量。您也不能使用假设您在 QGIS 内部运行的 PyQGIS 库的某些部分。
- en: None of this is too onerous, though it can trip you up the first time you attempt
    to access PyQGIS from your external Python code. Let's take a look at how we can
    avoid these traps when writing your own Python programs.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些都不是很繁重，但它们可能会在您第一次尝试从外部 Python 代码访问 PyQGIS 时让您感到困惑。让我们看看在编写您自己的 Python 程序时如何避免这些陷阱。
- en: 'Firstly, to allow your program to access the PyQGIS libraries, you need to
    modify your Python path (and possibly some other environment variables) before
    you can import any of the QGIS packages. For MS Windows, you can do this by running
    the following in the command line:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为了使您的程序能够访问 PyQGIS 库，您需要在导入任何 QGIS 包之前修改您的 Python 路径（以及可能的一些其他环境变量）。对于 MS
    Windows，您可以在命令行中运行以下操作：
- en: '[PRE10]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If you are running Mac OS X, the following commands will set up the Python
    path for you:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在运行 Mac OS X，以下命令将为你设置 Python 路径：
- en: '[PRE11]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'For computers that run a version of Linux, you can use the following:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 对于运行 Linux 版本的计算机，您可以使用以下命令：
- en: '[PRE12]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Obviously, you will need to replace `/path/to/qgis` with the actual path of
    your QGIS installation.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，您需要将 `/path/to/qgis` 替换为您 QGIS 安装的实际路径。
- en: 'If you have QGIS installed in a nonstandard location, you might need to modify
    these commands before they will work. To check if they have worked, start up the
    Python interpreter and enter the following command:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将 QGIS 安装在非标准位置，您可能需要修改这些命令才能使其生效。要检查它们是否已生效，请启动 Python 解释器并输入以下命令：
- en: '[PRE13]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If everything goes well, you''ll simply see the Python prompt:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，您将简单地看到 Python 提示符：
- en: '[PRE14]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'On the other hand, you might see the following error:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，您可能会看到以下错误：
- en: '[PRE15]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In this case, the `PYTHONPATH` variable has not been set up correctly, and you
    will have to check the commands you entered earlier to set this environment variable,
    and possibly modify it to allow for a nonstandard location of the QGIS libraries.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`PYTHONPATH` 变量尚未正确设置，您将不得不检查您之前输入的设置此环境变量的命令，并可能对其进行修改以允许非标准位置的 QGIS
    库。
- en: Note
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Note that in some cases, this isn''t enough because the Python libraries are
    only wrappers around the underlying C++ libraries; you might also need to tell
    your computer where to find these C++ libraries. To see if this is a problem,
    you can try to do the following:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在某些情况下，这还不够，因为 Python 库只是底层 C++ 库的包装器；您可能还需要告诉您的计算机在哪里可以找到这些 C++ 库。为了检查这是否是一个问题，您可以尝试以下操作：
- en: '[PRE16]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You might get an error that looks like this:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会遇到一个看起来像这样的错误：
- en: '[PRE17]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You will to have to tell your computer where to find the underlying shared libraries.
    We will return to this later when we look at writing our own external applications;
    if you want to see the details, skip ahead to [Chapter 5](part0033_split_000.html#page
    "Chapter 5. Using QGIS in an External Application"), *Using QGIS in an External
    Application*.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 您将不得不告诉您的计算机在哪里可以找到底层共享库。我们将在查看编写我们自己的外部应用程序时返回这个问题；如果您想查看详细信息，请跳转到[第 5 章](part0033_split_000.html#page
    "第 5 章。在外部应用程序中使用 QGIS")，*在外部应用程序中使用 QGIS*。
- en: 'With the path set, you can now import the various parts of the PyQGIS library
    that you want to use, for example:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 路径设置好后，你现在可以导入你想要使用的 PyQGIS 库的各个部分，例如：
- en: '[PRE18]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now that we have access to the PyQGIS libraries, our next task is to initialize
    these libraries. As mentioned earlier, we have to tell PyQGIS where to find the
    various QGIS resources. We do this using the `QgsApplication.setPrefixPath()`
    function, like this:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经可以访问 PyQGIS 库了，我们的下一个任务是要初始化这些库。如前所述，我们必须告诉 PyQGIS 它可以找到各种 QGIS 资源。我们使用
    `QgsApplication.setPrefixPath()` 函数来做这件事，如下所示：
- en: '[PRE19]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This uses the `QGIS_PREFIX` environment variable we set earlier to tell QGIS
    where to find its resources. With this done, you can then initialize the PyQGIS
    library by making the following call:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这使用我们之前设置的 `QGIS_PREFIX` 环境变量来告诉 QGIS 它的资源在哪里。完成这个步骤后，你可以通过以下调用初始化 PyQGIS 库：
- en: '[PRE20]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We can now use PyQGIS to do whatever we want in our application. When our program
    exits, we also need to inform the PyQGIS library that we are exiting:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 PyQGIS 在我们的应用程序中做我们想做的任何事情。当我们的程序退出时，我们还需要通知 PyQGIS 库我们正在退出：
- en: '[PRE21]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Putting all this together, our minimal Python application looks like this:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有这些放在一起，我们的最小 Python 应用程序看起来像这样：
- en: '[PRE22]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Of course, this application doesn't do anything useful yet—it simply starts
    up and shuts down the PyQGIS libraries. So let's replace the "`...`" line with
    some useful code that displays a basic map widget. To do this, we need to define
    a `QMainWindow` subclass, which displays the map widget, and then create and use
    a `QApplication` object to display this window and handle the various user-interface
    events while the application is running.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这个应用程序目前还没有做任何有用的事情——它只是启动并关闭 PyQGIS 库。所以让我们用一些有用的代码替换掉 "`...`" 行，以显示一个基本的地图小部件。为此，我们需要定义一个
    `QMainWindow` 子类，它显示地图小部件，然后创建并使用一个 `QApplication` 对象来显示这个窗口，并在应用程序运行时处理各种用户界面事件。
- en: Note
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Both `QMainWindow` and `QApplication` are PyQt classes. We will be working extensively
    with the various PyQt classes as we develop our own external applications using
    QGIS and Python.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`QMainWindow` 和 `QApplication` 都是 PyQt 类。在我们使用 QGIS 和 Python 开发自己的外部应用程序时，我们将广泛使用各种
    PyQt 类。'
- en: 'Let''s start by replacing the "`...`" line with the following code, which displays
    a map viewer and then runs the application''s main event loop:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先替换掉 "`...`" 行，用以下代码替换，该代码显示地图查看器，然后运行应用程序的主事件循环：
- en: '[PRE23]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: As you can see, a `MapViewer` instance (which we will define shortly) is created
    and displayed, and the `QApplication` object is run by calling the `exec_()` method.
    For simplicity, we pass the name of a shapefile to display within the map viewer.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，创建并显示了一个 `MapViewer` 实例（我们很快就会定义它），并通过调用 `exec_()` 方法运行 `QApplication`
    对象。为了简单起见，我们传递了一个 shapefile 的名称，在地图查看器中显示。
- en: Running this code will cause the map viewer to be displayed, and the application
    will run until the user closes the window or chooses the **Quit** command from
    the menu.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此代码将导致地图查看器显示，并且应用程序将运行，直到用户关闭窗口或从菜单中选择 **退出** 命令。
- en: 'Now, let''s define the `MapViewer` class. Here is what the class definition
    looks like:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们定义 `MapViewer` 类。以下是类的定义看起来像这样：
- en: '[PRE24]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Don't worry too much about the details of this class; we basically just create
    a window and place a `QgsMapCanvas` object within it. We then create a map layer
    (an instance of `QgsVectorLayer`) and add it to the map canvas. Finally, we add
    the canvas to the window's contents.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 不要过于担心这个类的细节；我们基本上只是创建一个窗口，并在其中放置一个 `QgsMapCanvas` 对象。然后我们创建一个地图图层（`QgsVectorLayer`
    的实例）并将其添加到地图画布上。最后，我们将画布添加到窗口的内容中。
- en: Notice that `QgsMapCanvas` and `QgsVectorLayer` are both part of PyQGIS, while
    `QMainWindow`, `QVBoxLayout`, and `QWidget` are all PyQt classes. This application
    uses the PyQGIS classes within a PyQt application, mixing the classes from both
    sources. This is possible because QGIS is built using Qt, and the various PyQGIS
    classes are based on PyQt.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到 `QgsMapCanvas` 和 `QgsVectorLayer` 都是 PyQGIS 的一部分，而 `QMainWindow`、`QVBoxLayout`
    和 `QWidget` 都是 PyQt 类。这个应用程序在 PyQt 应用程序中使用 PyQGIS 类，混合了两个来源的类。这是可能的，因为 QGIS 是使用
    Qt 构建的，而各种 PyQGIS 类都是基于 PyQt 的。
- en: 'To turn the preceding code into a working application, all we need to do is
    add some more `import` statements to the top of the module:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 要将前面的代码转换成一个可工作的应用程序，我们只需要在模块顶部添加一些额外的 `import` 语句：
- en: '[PRE25]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Tip
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)下载您购买的所有Packt Publishing书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便直接将文件通过电子邮件发送给您。
- en: 'If you run this application, the map viewer will be displayed, showing the
    contents of the shapefile referred to by the code. For example:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您运行此应用程序，地图查看器将显示，显示由代码引用的shapefile内容。例如：
- en: '![Writing an external application](img/00009.jpeg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![编写外部应用程序](img/00009.jpeg)'
- en: This application is still a bit ugly—you can see white space at the top and
    bottom this map because it doesn't take into account the aspect ratio of the map
    data. There's also no feature of zooming in or scrolling around the map. However,
    these can be added quite easily, and as you can see, it's not very difficult to
    create your own standalone mapping applications built on top of QGIS.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用程序仍然有点丑陋——您可以看到地图顶部和底部有空白，因为它们没有考虑到地图数据的长宽比。此外，也没有放大或滚动地图的功能。然而，这些功能可以很容易地添加，如您所见，创建基于QGIS的独立地图应用程序并不困难。
- en: Summary
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we became familiar with QGIS and the various ways in which
    it can be used as a Python geospatial development system. We installed and explored
    the QGIS application itself, and then looked at how Python can be used with QGIS.
    We saw how QGIS uses data sources, map layers, maps, and projects to organize
    and work with geospatial data. Next, we examined the three ways in which you can
    use Python and QGIS: by typing commands into the Python Console, by writing a
    Python plugin or by writing an external application that makes use of the QGIS
    Python API.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们熟悉了QGIS以及它作为Python地理空间开发系统可以使用的各种方式。我们安装并探索了QGIS应用程序本身，然后查看Python如何与QGIS一起使用。我们看到了QGIS如何使用数据源、地图图层、地图和项目来组织和处理地理空间数据。接下来，我们检查了您可以使用Python和QGIS的三种方式：通过在Python控制台中输入命令、编写Python插件或编写利用QGIS
    Python API的外部应用程序。
- en: We then looked at the extensive set of Python libraries that come with QGIS,
    called PyQGIS, which you can use for geospatial development. We saw how to use
    the QGIS Python Console to directly manipulate the QGIS project, add layers, zoom
    in and out, change options, and so on.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们然后查看与QGIS一起提供的广泛的Python库集，称为PyQGIS，您可以使用它进行地理空间开发。我们看到了如何使用QGIS Python控制台直接操作QGIS项目，添加图层，放大缩小，更改选项等。
- en: Next up, we downloaded and examined a QGIS Python plugin. In doing this, we
    learned that QGIS plugins are simply Python packages installed in a hidden directory
    named `.qgis2` (or `.qgis`) within your home or user directory. A plugin makes
    use of the Qt library to define and build resources such as user interface templates.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们下载并检查了一个QGIS Python插件。在这个过程中，我们了解到QGIS插件只是安装在您家目录或用户目录中名为`.qgis2`（或`.qgis`）的隐藏目录中的Python包。插件利用Qt库来定义和构建资源，例如用户界面模板。
- en: Finally, we saw how we can write external Python applications that load the
    PyQGIS libraries from within the QGIS system, and then use those libraries within
    a larger PyQt application.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们看到了如何编写外部Python应用程序，这些应用程序可以从QGIS系统中加载PyQGIS库，然后在更大的PyQt应用程序中使用这些库。
- en: In the next chapter, we will explore the QGIS Python Console in more detail,
    and use it to become more familiar with the PyQGIS library, and also see how we
    can use it within our own Python geospatial development projects.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将更详细地探讨QGIS Python控制台，并使用它来熟悉PyQGIS库，同时看看我们如何在我们的Python地理空间开发项目中使用它。
