["```py\n    QgsLogger.logMessageToFile(\"This is a message to a log file.\")\n\n    ```", "```py\n    QgsMessageLog.logMessage(\"This is a message from the Python Console\", \"Python Console\")\n\n    ```", "```py\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    msg = QMessageBox()\n\n    ```", "```py\n    msg.setText(\"This is a simple information message.\")\n\n    ```", "```py\n    msg.show()\n\n    ```", "```py\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    msg = QMessageBox()\n\n    ```", "```py\n    msg.setText(\"This is a warning...\")\n\n    ```", "```py\n    msg.setIcon(QMessageBox.Warning)\n\n    ```", "```py\n    msg.show()\n\n    ```", "```py\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    msg = QMessageBox()\n\n    ```", "```py\n    msg.setText(\"This is an error!\")\n\n    ```", "```py\n    msg.setIcon(QMessageBox.Critical)\n\n    ```", "```py\n    msg.show()\n\n    ```", "```py\n    from PyQt4.QtGui import *\n    from PyQt4.QtCore import *\n\n    ```", "```py\n    class Bar(QProgressBar):\n     value = 0\n     def increaseValue(self):\n     self.setValue(self.value)\n     self.value = self.value+1\n\n    ```", "```py\n    bar = Bar()\n\n    ```", "```py\n    bar.resize(300,40)\n    bar.setWindowTitle('Working...')\n\n    ```", "```py\n    timer = QTimer()\n\n    ```", "```py\n    timer.timeout.connect(bar.increaseValue)\n\n    ```", "```py\n    timer.start(500)\n\n    ```", "```py\n    bar.show()\n\n    ```", "```py\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    qid = QInputDialog()\n\n    ```", "```py\n    title = \"Enter Your Name\"\n    label = \"Name: \"\n    mode = QLineEdit.Normal\n    default = \"<your name here>\"\n\n    ```", "```py\n    text, ok = QInputDialog.getText(qid, title, label, mode, default)\n\n    ```", "```py\n    print text\n\n    ```", "```py\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    qfd = QFileDialog()\n    title = 'Open File'\n\n    ```", "```py\n    path = \"/Users/joellawhead/qgis_data\"\n\n    ```", "```py\n    f = QFileDialog.getOpenFileName(qfd, title, path)\n\n    ```", "```py\n    print f\n\n    ```", "```py\nfrom PyQt4.QtCore import *path = QFileInfo(f).path()\n\n```", "```py\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    cb = QComboBox()\n\n    ```", "```py\n    cb.addItems([\"North\", \"South\", \"West\", \"East\"])\n\n    ```", "```py\n    cb.resize(200,35)\n\n    ```", "```py\n    cb.show()\n\n    ```", "```py\n    text = cb.currentText()\n\n    ```", "```py\n    print text\n\n    ```", "```py\n    from PyQt4.QtCore import *\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    class RadioButton(QWidget):\n     def __init__(self, parent=None):\n     QWidget.__init__(self, parent)\n\n    ```", "```py\n    self.layout = QVBoxLayout()\n    self.rb1 = QRadioButton('Option 1')\n    self.rb2 = QRadioButton('Option 2')\n    self.rb3 = QRadioButton('Option 3')\n    self.textbox = QLineEdit()\n\n    ```", "```py\n    self.rb1.toggled.connect(self.rb1_active)\n    self.rb2.toggled.connect(self.rb2_active)\n    self.rb3.toggled.connect(self.rb3_active)\n\n    ```", "```py\n    self.layout.addWidget(self.rb1)\n    self.layout.addWidget(self.rb2)\n    self.layout.addWidget(self.rb3)\n    self.layout.addWidget(self.textbox)\n\n    ```", "```py\n     self.setLayout(self.layout)\n\n    ```", "```py\n    def rb1_active(self, on):\n     if on:\n     self.textbox.setText('Option 1 selected')\n    def rb2_active(self, on):\n     if on:\n     self.textbox.setText('Option 2 selected')\n    def rb3_active(self, on):\n     if on:\n     self.textbox.setText('Option 3 selected')\n\n    ```", "```py\n    buttons = RadioButton()\n    buttons.show()\n\n    ```", "```py\n    from PyQt4.QtCore import *\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    class CheckBox(QWidget):\n     def __init__(self, parent=None):\n     QWidget.__init__(self, parent)\n\n    ```", "```py\n    self.layout = QVBoxLayout()\n\n    ```", "```py\n     self.cb1 = QCheckBox('Option 1')\n     self.cb2 = QCheckBox('Option 2')\n     self.cb3 = QCheckBox('Option 3')\n     self.textbox1 = QLineEdit()\n     self.textbox2 = QLineEdit()\n     self.textbox3 = QLineEdit()\n\n    ```", "```py\n     self.cb1.toggled.connect(self.cb1_active)\n     self.cb2.toggled.connect(self.cb2_active)\n     self.cb3.toggled.connect(self.cb3_active)\n\n    ```", "```py\n     self.layout.addWidget(self.cb1)\n     self.layout.addWidget(self.cb2)\n     self.layout.addWidget(self.cb3)\n     self.layout.addWidget(self.textbox1)\n     self.layout.addWidget(self.textbox2)\n     self.layout.addWidget(self.textbox3)\n\n    ```", "```py\n     self.setLayout(self.layout)\n\n    ```", "```py\n     # First checkbox\n     def cb1_active(self, on):\n     if on:\n     self.textbox1.setText('Option 1 selected')\n     else: self.textbox1.setText('') \n     # Second checkbox \n     def cb2_active(self, on):\n     if on:\n     self.textbox2.setText('Option 2 selected')\n     else: self.textbox2.setText('') \n     # Third checkbox \n     def cb3_active(self, on):\n     if on:\n     self.textbox3.setText('Option 3 selected')\n     else: self.textbox3.setText('')\n\n    ```", "```py\n    buttons = CheckBox()\n    buttons.show()\n\n    ```", "```py\n    from PyQt4.QtCore import *\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    qtw = QTabWidget()\n    qtw.setWindowTitle(\"PyQGIS Tab Example\")\n    qtw.resize(400,300)\n\n    ```", "```py\n    tab1 = QWidget()\n    tab2 = QWidget()\n    tab3 = QWidget()\n\n    ```", "```py\n    layout1 = QVBoxLayout()\n    layout1.addWidget(QTextEdit(\"<b>Type text here</b>\"))\n    tab1.setLayout(layout1)\n\n    ```", "```py\n    layout2 = QVBoxLayout()\n    layout2.addWidget(QPushButton(\"Button\"))\n    tab2.setLayout(layout2)\n\n    ```", "```py\n    layout3 = QVBoxLayout()\n    layout3.addWidget(QLabel(\"Label text example\"))\n    tab3.setLayout(layout3)\n\n    ```", "```py\n    qtw.addTab(tab1, \"First Tab\")\n    qtw.addTab(tab2, \"Second Tab\")\n    qtw.addTab(tab3, \"Third Tab\")\n\n    ```", "```py\n    qtw.show()\n\n    ```", "```py\n    from PyQt4.QtCore import *\n    from PyQt4.QtGui import *\n\n    ```", "```py\n    class Page1(QWizardPage):\n     def __init__(self, parent=None):\n     super(Page1, self).__init__(parent)\n     self.setTitle(\"What's Your Name?\")\n     self.setSubTitle(\"Please enter your name.\")\n     self.label = QLabel(\"Name:\")\n     self.uname = QLineEdit(\"<enter your name>\")\n\n    ```", "```py\n     self.registerField(\"uname\", self.uname)\n\n    ```", "```py\n     layout = QVBoxLayout()\n     layout.addWidget(self.label)\n     layout.addWidget(self.uname)\n     self.setLayout(layout)\n\n    ```", "```py\n    class Page2(QWizardPage):\n     def __init__(self, parent=None):\n     super(Page2, self).__init__(parent)\n     self.setTitle(\"When's Your Birthday?\")\n     self.setSubTitle(\"Select Your Birthday.\")\n\n    ```", "```py\n     self.cal = QCalendarWidget()\n\n    ```", "```py\n     self.registerField(\"cal\", self.cal, \"selectedDate\")\n\n    ```", "```py\n     layout = QVBoxLayout()\n     layout.addWidget(self.cal)\n     self.setLayout(layout)\n\n    ```", "```py\n    class Page3(QWizardPage):\n     def __init__(self, parent=None):\n     super(Page3, self).__init__(parent)\n     self.setTitle(\"About You\")\n     self.setSubTitle(\"Here is Your Information:\")\n     self.name_lbl = QLabel()\n     self.date_lbl = QLabel()\n     layout = QVBoxLayout()\n     layout.addWidget(self.name_lbl)\n     layout.addWidget(self.date_lbl)\n     self.setLayout(layout)\n\n    ```", "```py\n     def initializePage(self):\n     uname = self.field(\"uname\")\n     date = self.field(\"cal\").toString()\n\n    ```", "```py\n     self.name_lbl.setText(\"Your name is %s\" % uname)\n     self.date_lbl.setText(\"Your birthday is %s\" % date)\n\n    ```", "```py\n    wiz = QWizard()\n    wiz.addPage(Page1())\n    wiz.addPage(Page2())\n    wiz.addPage(Page3())\n    wiz.show() \n\n    ```", "```py\n    from PyQt4.QtGui import *\n    from PyQt4.QtCore import *\n\n    ```", "```py\n    msg = \"   This window will always stay on top.\"\n\n    ```", "```py\n    lbl = QLabel(msg, None, Qt.WindowStaysOnTopHint)\n\n    ```", "```py\n    lbl.resize(400,400)\n    lbl.show()\n\n    ```"]