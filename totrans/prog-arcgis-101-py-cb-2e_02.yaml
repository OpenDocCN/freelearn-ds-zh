- en: Chapter 2. Writing Basic Geoprocessing Scripts with ArcPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 章：使用 ArcPy 编写基本的地理处理脚本
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Using the ArcGIS Python window
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ArcGIS Python 窗口
- en: Accessing ArcPy with Python
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Python 访问 ArcPy
- en: Executing tools from a script
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从脚本中执行工具
- en: Using ArcGIS Desktop help
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ArcGIS Desktop 帮助
- en: Using variables to store data
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用变量存储数据
- en: Accessing ArcPy modules with Python
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Python 访问 ArcPy 模块
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Geoprocessing tasks tend to be time consuming and repetitive, and often need
    to be run on a periodic basis. Frequently, many data layers and functions are
    involved. The ArcPy Python site package for ArcGIS provides a set of tools and
    execution environments that can be used to transform your data into meaningful
    results. Using scripts you can automate your geoprocessing tasks and schedule
    them to run when it is most convenient for your organization.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 地理处理任务往往耗时且重复，通常需要定期运行。通常，涉及许多数据层和函数。ArcGIS 的 ArcPy Python 站点包提供了一套工具和执行环境，可用于将您的数据转换为有意义的成果。使用脚本，您可以自动化您的地理处理任务，并安排它们在您组织最方便的时候运行。
- en: ArcGIS provides a geoprocessing framework for the purpose of automating your
    repetitive GIS tasks through a set of tools and execution environments for these
    tools. All tools operate on an input dataset, which you supply and transform in
    some way (depending upon the nature of the tool used) to produce a new output
    dataset. This new output dataset can then, if necessary, be used as the input
    dataset to additional geoprocessing tools in a larger workflow for your tasks.
    There are many tools provided by the ArcGIS geoprocessing framework, each designed
    to provide specific functionality.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS 提供了一个地理处理框架，用于通过一系列工具和执行环境来自动化您的重复性 GIS 任务。所有工具都操作在一个输入数据集上，您需要提供并对其进行某种方式的转换（取决于所使用的工具的性质），以生成一个新的输出数据集。如果需要，这个新的输出数据集可以随后用作更大工作流程中其他地理处理工具的输入数据集。ArcGIS
    地理处理框架提供了许多工具，每个工具都旨在提供特定的功能。
- en: While there are many different environments that you can use to write your geoprocessing
    scripts with Python, this book will focus on the use of the built-in ArcGIS Python
    window and the Python IDLE editor.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管您可以使用许多不同的环境来编写您的地理处理脚本，但本书将专注于使用内置的 ArcGIS Python 窗口和 Python IDLE 编辑器。
- en: Using the ArcGIS Python window
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ArcGIS Python 窗口
- en: In this recipe, you'll learn how to use the ArcGIS Python window. In [Chapter
    1](ch01.html "Chapter 1. Fundamentals of the Python Language for ArcGIS"), *Fundamentals
    of the Python Language for ArcGIS*, you learned how to use the IDLE development
    environment for Python, so this chapter will give you an alternative for writing
    your geoprocessing scripts. Either development environment can be used but it
    is common for people to start writing scripts with the ArcGIS Desktop Python window
    and then move on to IDLE when scripts become more complex. I should also mention
    that there are many other development environments that you may want to consider,
    including PythonWin, Wingware, Komodo, and others. The development environment
    you choose is really a matter of preference.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，您将学习如何使用 ArcGIS Python 窗口。在[第 1 章](ch01.html "第 1 章。ArcGIS Python 语言基础")《ArcGIS
    Python 语言基础》中，您学习了如何使用 IDLE 开发环境进行 Python 开发，因此本章将为您提供编写地理处理脚本的另一种选择。两种开发环境都可以使用，但人们通常从使用
    ArcGIS Desktop Python 窗口开始编写脚本，然后在脚本变得更加复杂时转向 IDLE。我还应该提到，还有许多其他您可能想要考虑的开发环境，包括
    PythonWin、Wingware、Komodo 等。您选择哪种开发环境实际上是一个个人偏好的问题。
- en: Getting ready
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The new Python window is an embedded, interactive Python window in ArcGIS Desktop
    10, that is ideal for testing small blocks of code, learning Python basics, building
    quick and easy workflows, and executing geoprocessing tools. However, as your
    scripts become more complex, you'll quickly find the need for a more robust development
    environment. By default, IDLE is installed with ArcGIS Desktop, so this is a logical
    next choice for many. For new programmers, though, the ArcGIS Python window is
    a great place to start!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 新的 Python 窗口是 ArcGIS Desktop 10 中嵌入的交互式 Python 窗口，非常适合测试小块代码、学习 Python 基础知识、构建快速简便的工作流程以及执行地理处理工具。然而，随着您的脚本变得更加复杂，您很快就会发现自己需要更强大的开发环境。默认情况下，IDLE
    与 ArcGIS Desktop 一起安装，因此对于许多人来说，这是一个合乎逻辑的下一步选择。但对于新程序员来说，ArcGIS Python 窗口是一个很好的起点！
- en: The ArcGIS Python window has a number of capabilities in addition to being the
    location for writing your code. You can save the content of the window to a Python
    script file on a disk or load an existing Python script into the window. The window
    can be either pinned or floating. While floating, the window can be expanded or
    contracted as you wish. The window can also be pinned to various parts of the
    ArcGIS display. You can also format the font and text colors displayed in the
    window by right-clicking on the window and selecting **Format**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 除了是编写代码的位置之外，ArcGIS Python 窗口还具有许多功能。你可以将窗口的内容保存到磁盘上的 Python 脚本文件中，或者将现有的 Python
    脚本加载到窗口中。窗口可以是固定的或浮动的。在浮动状态下，窗口可以按你的意愿扩展或收缩。窗口还可以固定在 ArcGIS 显示的各个部分。你还可以通过右键单击窗口并选择
    **格式** 来格式化窗口中显示的字体和文本颜色。
- en: How to do it…
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: The Python window can be opened by clicking on the Python window button on the
    main ArcGIS Desktop toolbar.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Python 窗口可以通过点击主 ArcGIS Desktop 工具栏上的 Python 窗口按钮来打开。
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Note
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You don't have to specifically open `Crime_Ch2.mxd`. Any map document file can
    be used with the Python window.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你不必专门打开 `Crime_Ch2.mxd`。任何地图文档文件都可以与 Python 窗口一起使用。
- en: Click on the Python window button from the main **ArcMap** toolbar. The Python
    window will be displayed as shown in the following screenshot. This is a floating
    window, so you can resize as needed and also dock it at various places on the
    **ArcMap** interface:![How to do it…](img/4445_02_1.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主 **ArcMap** 工具栏中点击 Python 窗口按钮。Python 窗口将显示如下截图所示。这是一个浮动窗口，因此你可以根据需要调整大小，也可以将其停靠在
    **ArcMap** 界面的各个位置：![如何操作…](img/4445_02_1.jpg)
- en: The Python window is essentially a shell window that allows you to type in statements
    one line at a time, just after the line input characters `>>>`. On the right-hand
    side of the divider, you will find a help window.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Python 窗口本质上是一个shell窗口，允许你逐行输入语句，就在输入行字符`>>>`之后。在分隔符的右侧，你会找到一个帮助窗口。
- en: Load an existing script by right-clicking inside the Python window and selecting
    **Load** from the menu. Navigate to the `c:\ArcpyBook\Ch2` directory and select
    `ListFields.py` to load a sample script.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在 Python 窗口中右键单击并从菜单中选择 **加载** 来加载现有脚本。导航到 `c:\ArcpyBook\Ch2` 目录并选择 `ListFields.py`
    以加载一个示例脚本。
- en: 'You can also format the font and text colors displayed in the window by right-clicking
    on the window and selecting **Format**. You will be provided with White and Black
    themes; you can select fonts and colors individually:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以通过右键单击窗口并选择 **格式** 来格式化窗口中显示的字体和文本颜色。你将提供白色和黑色主题；你可以单独选择字体和颜色：
- en: '![How to do it…](img/4445_02_10.jpg)'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/4445_02_10.jpg)'
- en: 'Click on the **Set Black Theme** button to see an example. If you spend a lot
    of time writing code, you may find that darker themes are easier on your eyes:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **设置黑色主题** 按钮查看示例。如果你花费大量时间编写代码，你可能发现较暗的主题对眼睛更容易：
- en: '![How to do it…](img/4445_02_11.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/4445_02_11.jpg)'
- en: Accessing ArcPy with Python
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 访问 ArcPy
- en: Before you can take advantage of all the geoprocessing functionality provided
    by ArcPy, you must first import the package into your script. This will always
    be the first line of code in every geoprocessing script that you write.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在你可以利用 ArcPy 提供的所有地理处理功能之前，你必须首先将包导入到你的脚本中。这将是每个地理处理脚本中的第一行代码。
- en: Getting ready
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: ArcPy is a Python site package that is part of the ArcGIS 10 release, and fully
    encompasses the functionality provided with the `arcgis scripting` module at ArcGIS
    9.2, which further enhances its capabilities. With ArcPy you have access to the
    geoprocessing tools, extensions, functions, and classes for working with ESRI
    GIS data. ArcPy provides code-completion and integrated documentation for the
    modules, classes, and functions. ArcPy can also be integrated with other Python
    modules to widen the scope of its capabilities. All ArcGIS geoprocessing scripts
    that you write with Python must first provide a reference to ArcPy.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: ArcPy 是 ArcGIS 10 版本的一部分 Python 站点包，完全包含了 ArcGIS 9.2 中 `arcgis scripting` 模块提供的功能，进一步增强了其能力。使用
    ArcPy，你可以访问用于处理 ESRI GIS 数据的地理处理工具、扩展、函数和类。ArcPy 为模块、类和函数提供代码补全和集成文档。ArcPy 还可以与其他
    Python 模块集成，以扩大其功能范围。你用 Python 编写的所有 ArcGIS 地理处理脚本都必须首先提供对 ArcPy 的引用。
- en: How to do it…
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to import the `arcpy` site package into the ArcGIS Python
    window:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤将 `arcpy` 站点包导入到 ArcGIS Python 窗口：
- en: Open the `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` file with ArcMap.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 ArcMap 打开 `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` 文件。
- en: Click on the Python window button to display a shell window where you can write
    the Python code.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Python 窗口按钮以显示一个可以编写 Python 代码的壳窗口。
- en: In the Python window, import the `arcpy` package and press the *Enter* key on
    your keyboard. After each statement that you enter in the Python window, you will
    press the *Enter* key. You will include this line of code in every single script
    that you write, so get used to it! This `import` statement is what gives you access
    to all the functionality provided by ArcPy.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Python 窗口中导入 `arcpy` 包并按下键盘上的 *Enter* 键。在 Python 窗口中输入的每个语句之后，您都需要按下 *Enter*
    键。您将在每个脚本中都包含这一行代码，所以请习惯它！这个 `import` 语句是您访问 ArcPy 提供的所有功能的基础。
- en: Note
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Technically, you don't have to include the `import arcpy` statement when working
    inside the ArcMap Python window. It's inherent to this window. However, it is
    required when creating standalone scripts in IDLE, PythonWin, or any other integrated
    development environment. It's also a good habit to get into as many of your scripts
    will ultimately be run as standalone scripts.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从技术上讲，在 ArcMap Python 窗口内部工作时不一定要包含 `import arcpy` 语句。它是这个窗口固有的。然而，在创建 IDLE、PythonWin
    或任何其他集成开发环境中的独立脚本时，它却是必需的。这也是一个好习惯，因为您的大多数脚本最终都将作为独立脚本运行。
- en: '![How to do it…](img/4445_02_2.jpg)'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/4445_02_2.jpg)'
- en: ArcPy also provides code-completion functionality that makes your life as a
    programmer much easier. On the second line, begin by typing `arcpy` and then a
    dot. ArcPy is an object-oriented package, which means that you access the properties
    and methods of an object using the dot notation. Notice that a drop-down list
    of available items is provided. These are the tools, functions, classes, and extensions
    that are available on this particular object. All objects have their own associated
    items, so the list of items presented will differ depending on the object that
    you have currently selected:![How to do it…](img/4445_02_3.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ArcPy 还提供了代码补全功能，这使得您作为程序员的编程生活变得更加容易。在第二行，开始键入 `arcpy` 并然后一个点。ArcPy 是一个面向对象的包，这意味着您使用点符号来访问对象的属性和方法。请注意，提供了一个可用项的下拉列表。这些是在特定对象上可用的工具、函数、类和扩展。所有对象都有它们自己的相关项，因此呈现的项列表将根据您当前选定的对象而有所不同：![如何操作…](img/4445_02_3.jpg)
- en: This is an auto-filtering list, so as you begin typing the name of the tool,
    function, class, or extension, the list will be filtered by what you have typed:![How
    to do it…](img/4445_02_4.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个自动过滤列表，因此当您开始键入工具、函数、类或扩展的名称时，列表将根据您输入的内容进行过滤：![如何操作…](img/4445_02_4.jpg)
- en: You can choose to have the Python window auto-complete the text for you by selecting
    an item from the list using your mouse or by using the arrow keys to highlight
    your choice, and then using the *Tab* key to enter the command. This auto-completion
    feature makes you a faster, more efficient programmer. Not only is it easy to
    use, but it also dramatically cuts down the number of typos in your code.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以选择让 Python 窗口自动为您完成文本，通过鼠标从列表中选择一个项目，或者使用箭头键突出显示您的选择，然后使用 *Tab* 键来输入命令。这个自动完成功能使您成为一个更快、更高效的程序员。这不仅易于使用，而且还能显著减少您代码中的错误。
- en: How it works…
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Once the ArcPy module has been imported, you get access to the geoprocessing
    tools, extensions, functions, and classes for working with ESRI GIS data. One
    of the most important aspects of ArcPy is that it provides access to all of the
    geoprocessing tools available, based on the license level of ArcGIS Desktop currently
    in use. The tools available to your script will vary depending upon whether you
    are using the ArcGIS Basic, Standard, or Advanced license level, with the Basic
    level providing the fewest tools and the Advanced level providing a complete set
    of tools.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦导入了 ArcPy 模块，您就可以访问用于处理 ESRI GIS 数据的地理处理工具、扩展、函数和类。ArcPy 最重要的一点是，它根据当前使用的
    ArcGIS Desktop 许可证级别提供对所有地理处理工具的访问。脚本可用的工具将根据您是否使用 ArcGIS 基础、标准或高级许可证级别而有所不同，其中基础级别提供最少的工具，而高级级别提供完整的工具集。
- en: Executing tools from a script
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从脚本中执行工具
- en: As an ArcGIS user, you have almost certainly used the many available tools in
    ArcToolbox to accomplish your geoprocessing tasks. Some examples include Clip,
    Buffer, Feature Class to Feature Class, Add Field, and many more. Your scripts
    can execute any of the tools found in ArcToolbox. Remember that the tools available
    to you as a programmer are dependent upon the license level of ArcGIS Destkop
    that you are using. These tasks can be automated through the creation of a Python
    script that executes these tools programmatically.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 作为ArcGIS用户，您几乎肯定已经使用ArcToolbox中提供的许多工具来完成您的地理处理任务。一些例子包括Clip、Buffer、Feature
    Class to Feature Class、Add Field等。您的脚本可以执行ArcToolbox中找到的任何工具。请记住，您作为程序员可用的工具取决于您使用的ArcGIS
    Desktop的许可级别。这些任务可以通过创建一个执行这些工具的Python脚本来自动化。
- en: How to do it…
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Follow these steps to learn how to execute a geoprocessing tool from your script.
    Open c`:\ArcpyBook\Ch2\TravisCounty.mxd` with ArcMap.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从您的脚本中执行地理处理工具。使用ArcMap打开`c:\ArcpyBook\Ch2\TravisCounty.mxd`。
- en: Open the Python window.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy` package:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy`包：
- en: '[PRE0]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Set the workspace. We haven''t discussed the `env` class yet. Environment settings
    for ArcGIS are exposed as properties of this `env` class, which is a part of `arcpy`.
    One of the properties of the `env` class is workspace, which defines the current
    working directory for data input and output. In this case, it will be the directory
    where we''ll write the output dataset from our tool:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置工作空间。我们还没有讨论`env`类。ArcGIS的环境设置作为`env`类的属性公开，它是`arcpy`的一部分。`env`类的一个属性是工作空间，它定义了数据输入和输出的当前工作目录。在这种情况下，它将是我们将从工具中写入输出数据集的目录：
- en: '[PRE1]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We're going to use the **Buffer** tool from the **Analysis Tools** toolbox to
    buffer the **Streams** layer seen in the active data frame in ArcMap. Open ArcToolbox
    and find this tool, as shown in the following screenshot:![How to do it…](img/4445_02_5.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用**Analysis Tools**工具箱中的**Buffer**工具来缓冲在ArcMap活动数据帧中看到的**Streams**层。打开ArcToolbox并找到此工具，如下面的截图所示：![如何操作…](img/4445_02_5.jpg)
- en: Double-click on the **Buffer** tool to display the interface shown in the following
    screenshot. Most tools have one or more input parameters that must be supplied
    for the tool to execute. Whether you're running the tool from the user interface
    or from a Python script, you must always supply these required parameters:![How
    to do it…](img/4445_02_6.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**Buffer**工具以显示以下截图所示的界面。大多数工具都有一个或多个必须提供的输入参数，以便工具可以执行。无论您是从用户界面还是从Python脚本中运行工具，您都必须始终提供这些必需的参数：![如何操作…](img/4445_02_6.jpg)
- en: Close the **Buffer** tool.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**Buffer**工具。
- en: Execute the **Buffer** tool in the Python window. Use the code-completion feature
    of the Python window to help you as well as the tool help displayed in the window
    on the right.![How to do it…](img/4445_02_7.jpg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Python窗口中执行**Buffer**工具。使用Python窗口的代码补全功能以及窗口右侧显示的工具帮助来帮助您。
- en: 'This will buffer the **Streams** layer by 50 meters to create a new `Streams_Buff`
    polygon layer:'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将使**Streams**层缓冲50米以创建一个新的`Streams_Buff`多边形层：
- en: '[PRE2]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Use your ArcMap **zoom** and **pan** tools to get a better look at the output
    dataset, as shown in the following screenshot:![How to do it…](img/4445_02_8.jpg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的ArcMap**缩放**和**平移**工具来更好地查看输出数据集，如下面的截图所示：![如何操作…](img/4445_02_8.jpg)
- en: How it works…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: All geoprocessing tools available to your script are defined as dynamic functions
    from the main `arcpy` object. Each tool that you execute from a script must follow
    a specific syntax that first defines the tool name, followed by an underscore,
    and then the alias for the toolbox name. In our example, the **Buffer** tool is
    located in the **Analysis Tools** toolbox, which has an alias of `analysis`. This
    is done because it is possible for more than one tool to have the same name. A
    unique reference for each tool is generated using the syntax `<toolname>_<toolbox_alias>`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您的脚本可用的所有地理处理工具都定义为来自主`arcpy`对象的动态函数。您从脚本中执行的每个工具都必须遵循特定的语法，首先定义工具名称，然后是一个下划线，接着是工具箱名称的别名。在我们的例子中，**Buffer**工具位于**Analysis
    Tools**工具箱中，其别名为`analysis`。这样做是因为可能存在多个工具具有相同的名称。使用语法`<toolname>_<toolbox_alias>`为每个工具生成一个唯一的引用。
- en: 'Getting the toolbox alias is easy in ArcGIS Desktop. Find the toolbox associated
    with the tool and right-click on the toolbox name. Select **Properties**. In the
    **Properties** dialog box that is displayed, find the **Alias** textbox. You will
    see the following alias when referring to a particular tool in your geoprocessing
    scripts:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在ArcGIS Desktop中获取工具箱别名很容易。找到与工具关联的工具箱，右键单击工具箱名称。选择**属性**。在显示的**属性**对话框中，找到**别名**文本框。当在地理处理脚本中引用特定工具时，你会看到以下别名：
- en: '![How it works…](img/4445_02_12.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理…](img/4445_02_12.jpg)'
- en: In addition to the dynamic functions that represent geoprocessing tools, there
    are many additional functions available on the `arcpy` class that are not geoprocessing
    tools. Functions for creating cursors, listing datasets, describing datasets,
    working with environment settings, messaging, and many others are provided. We'll
    cover many of these functions as we move through the book.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 除了表示地理处理工具的动态函数外，`arcpy`类上还有许多其他可用函数，它们不是地理处理工具。提供了创建游标、列出数据集、描述数据集、处理环境设置、消息传递等许多其他功能的函数。随着我们阅读本书，我们将介绍这些函数中的许多。
- en: There's more…
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Geoprocessing workflows often require multiple steps that require the use of
    one or more geoprocessing tools. You can more efficiently and effectively develop
    scripts by first creating an outline for your script. This outline will help you
    consider the task at hand and identify the geoprocessing tools that will be used.
    Outlines don't have to be complex undertakings. You can simply draw a diagram
    of the workflow and then implement your code based on this workflow. The point
    is to do some planning ahead of time before you actually start coding.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 地理处理工作流程通常需要多个步骤，这些步骤需要使用一个或多个地理处理工具。通过首先为你的脚本创建一个大纲，你可以更高效、更有效地开发脚本。这个大纲将帮助你考虑手头的任务并确定将使用的地理处理工具。大纲不必是复杂的任务。你可以简单地绘制一个工作流程图，然后根据这个工作流程实现你的代码。关键是实际开始编码之前做一些规划。
- en: Using ArcGIS Desktop help
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ArcGIS Desktop帮助
- en: The ArcGIS Desktop help system is an excellent resource for obtaining information
    about any available tool. Each tool is described in detail on a unique page. The
    help system is available through ArcGIS Desktop or online.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS Desktop帮助系统是获取任何可用工具信息的优秀资源。每个工具都在一个独特的页面上进行了详细描述。帮助系统可通过ArcGIS Desktop或在线访问。
- en: Getting ready
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In addition to containing basic descriptive information about each tool, the
    help system also includes information of interest to Python programmers, including
    syntax and code examples that provide detailed information about how the tool
    can be used in your scripts. In this recipe, you will learn how to access the
    ArcGIS Desktop help system to obtain syntax information and code examples.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 除了包含每个工具的基本描述信息外，帮助系统还包括对Python程序员感兴趣的信息，包括语法和代码示例，这些示例提供了有关如何在脚本中使用工具的详细信息。在本食谱中，你将学习如何访问ArcGIS
    Desktop帮助系统以获取语法信息和代码示例。
- en: How to do it...
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Follow these steps to learn how to use the ArcGIS Desktop help system to access
    syntax information about a tool as well as a code example showing how the tool
    is used in a script.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用ArcGIS Desktop帮助系统访问有关工具的语法信息，以及一个代码示例，展示如何在脚本中使用该工具。
- en: If necessary, open ArcMap and select **Help** | **ArcGIS Desktop Help** from
    the main menu.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，打开ArcMap并从主菜单中选择**帮助** | **ArcGIS Desktop帮助**。
- en: Select the **Contents** tab.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**内容**选项卡。
- en: Select **Geoprocessing** | **Tool reference**. The tools are grouped according
    to toolbox just as they are in ArcToolbox.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**地理处理** | **工具参考**。工具根据工具箱分组，就像在ArcToolbox中一样。
- en: Select **Analysis toolbox** and then **Proximity toolset**.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**分析工具箱**，然后选择**邻近工具集**。
- en: Click on the **Buffer** tool. You should see the **Buffer** tool help displayed,
    as shown in the following screenshot:![How to do it...](img/4445_02_13.jpg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**缓冲区**工具。你应该会看到显示的**缓冲区**工具帮助，如图所示：![如何操作...](img/4445_02_13.jpg)
- en: Scroll down to the **Syntax** section, as shown in the following screenshot:![How
    to do it...](img/4445_02_14.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**语法**部分，如图所示：![如何操作...](img/4445_02_14.jpg)
- en: 'This section defines the syntax for how the tool should be called from your
    script. In this case, the syntax is as follows:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该部分定义了从脚本中调用工具的语法。在这种情况下，语法如下：
- en: '[PRE3]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Scroll down to the **Code Sample** section. Here, you will find one or more
    code samples showing you how the tool can be used in your scripts. I always recommend
    taking a look at these samples before writing your scripts.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到 **代码示例** 部分。在这里，你可以找到一个或多个代码示例，展示如何在你的脚本中使用工具。我总是建议在编写脚本之前查看这些示例。
- en: How it works...
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The help system for each tool contains several sections including a summary,
    illustration, usage, syntax, code sample, environments, related topics, and licensing
    information. As a programmer, you will primarily be interested in the syntax and
    code sample sections.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 每个工具的帮助系统包含几个部分，包括摘要、插图、用法、语法、代码示例、环境、相关主题和许可信息。作为一个程序员，你主要会对语法和代码示例部分感兴趣。
- en: When looking at the syntax section, notice that you call each tool using a combination
    of the name followed by an underscore and finally the alias for the toolbox where
    the tool resides. We discussed this briefly in a recipe earlier in this chapter.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当查看语法部分时，请注意，你通过名称后跟一个下划线和工具所在工具箱的别名来调用每个工具。我们在这个章节的早期部分简要讨论了这一点。
- en: 'Tools typically accept one or more parameters, which are passed into the tool
    inside parentheses. Parameters can be either required or optional. In this case,
    the **Buffer** tool includes three required parameters: the input feature, an
    output feature class, and a distance. Required parameters are listed first and
    are not enclosed by any special characters. Optional parameters, on the other
    hand, are enclosed by curly braces and will follow any required parameters. The
    **Buffer** tool contains several optional parameters including the line side,
    line end type, dissolve option, and dissolve field. Notice that each of these
    parameters is enclosed by curly braces. You do not have to include these parameters
    when calling a tool for it to execute.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 工具通常接受一个或多个参数，这些参数通过括号传递到工具内部。参数可以是必需的或可选的。在这种情况下，**Buffer** 工具包括三个必需参数：输入要素、输出要素类和距离。必需参数首先列出，并且不被任何特殊字符包围。另一方面，可选参数被大括号包围，并且将跟在必需参数之后。**Buffer**
    工具包含几个可选参数，包括线侧、线端类型、溶解选项和溶解字段。请注意，这些参数中的每一个都被大括号包围。在调用工具时，你不必包括这些参数，它仍然可以执行。
- en: You should also examine the syntax information in greater detail to determine
    the data-type that should be passed in for each parameter. For example, the `buffer_distance_or_field`
    parameter can accept a data-type that is either a linear unit or a field. Therefore,
    you can supply a numeric value for this parameter or a `Field` object that represents
    an attribute field containing distance information.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该更详细地检查语法信息，以确定每个参数应传递的数据类型。例如，`buffer_distance_or_field` 参数可以接受的数据类型可以是线性单位或字段。因此，你可以为这个参数提供一个数值或一个表示包含距离信息的属性字段的
    `Field` 对象。
- en: Always review the syntax for each tool before using it in your code to make
    sure that you have the right parameters in the right order and of the right data
    type.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的代码中使用每个工具之前，总是要检查其语法，以确保你有正确的参数、正确的顺序和正确的数据类型。
- en: I recommend taking a look at the code samples as well since they will frequently
    give you a starting point for your script. Often you will find that you can copy
    and paste at least a portion of the sample into your own script and then alter
    the script to suit your needs. This can make you a more efficient programmer and
    for learning purposes it is helpful to take a look at other scripts and examine
    the script line-by-line to determine how the script works.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议你也看看代码示例，因为它们通常会为你提供脚本的起点。通常你会发现，你可以将示例代码的一部分复制粘贴到自己的脚本中，然后修改脚本以满足你的需求。这可以使你成为一个更高效的程序员，并且在学习方面，查看其他脚本并逐行检查脚本以确定脚本的工作方式是有帮助的。
- en: Using variables to store data
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用变量存储数据
- en: In [Chapter 1](ch01.html "Chapter 1. Fundamentals of the Python Language for
    ArcGIS"), *Fundamentals of the Python Language for ArcGIS*, we covered the topic
    of variables, so you should have a basic understanding of these structures. Variables
    are given a name and assigned a data value in your scripts. These named variables
    occupy space in your computer's memory and the data contained within these structures
    can change while a script is running. After the script has finished the memory
    space occupied by these variables is then released and can be used for other operations.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章. ArcGIS的Python语言基础")《ArcGIS的Python语言基础》中，我们讨论了变量的主题，因此你应该对这些结构有一个基本的了解。在脚本中，变量被赋予一个名称并分配一个数据值。这些命名变量占据了计算机内存中的空间，在脚本运行期间，这些结构中的数据可以改变。脚本完成后，这些变量占用的内存空间将被释放，可用于其他操作。
- en: Getting ready
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: When writing geoprocessing scripts with Python there will be many times when
    you will need to create variables to hold data of one type or another. This data
    can then be used in your script as input parameters for tools and functions, as
    intermediate data for internal processing, to hold paths to datasets, and for
    other reasons. In addition, many of the ArcPy functions and tools also return
    data that can be stored in a variable for further use in your script. In this
    recipe, you will learn the basic techniques for creating variables and assigning
    data to them.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用Python编写地理处理脚本时，你将需要多次创建变量来存储不同类型的数据。这些数据然后可以用作脚本中的工具和函数的输入参数，作为内部处理的中间数据，存储数据集的路径，以及其他原因。此外，许多ArcPy函数和工具也会返回数据，这些数据可以存储在变量中以供脚本进一步使用。在本食谱中，你将学习创建变量并将数据赋给它们的基本技术。
- en: How to do it...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps to create a script that contains variables that are hardcoded
    with values and that are returned from a function:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建一个包含硬编码值和从函数返回的变量的脚本：
- en: Open IDLE and create a new script window.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开IDLE并创建一个新的脚本窗口。
- en: Save the script to `c:\ArcpyBook\Ch2\WorkingWithVariables.py`.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本保存到`c:\ArcpyBook\Ch2\WorkingWithVariables.py`。
- en: 'Import the `arcpy` package:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy`包：
- en: '[PRE4]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create a variable called `path` and assign a value to it:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`path`的变量并将其赋予一个值：
- en: '[PRE5]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Use the newly-created variable to set the workspace:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新创建的变量设置工作空间：
- en: '[PRE6]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Call the `ListFields()` function and assign the returned value to a new variable
    called `fields`:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`ListFields()`函数并将返回值赋给一个名为`fields`的新变量：
- en: '[PRE7]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Start a `for` loop to process each of the field objects contained within the
    `fields` variable:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个`for`循环以处理`fields`变量中包含的每个字段对象：
- en: '[PRE8]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Print the name of each field:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印每个字段的名称：
- en: '[PRE9]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The entire script should appear as follows:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个脚本应如下所示：
- en: '[PRE10]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Save the script.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存脚本。
- en: How it works...
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We created three variables in this script. The first variable, `path`, was created
    and assigned a hard-coded value with a data path. This is an example of a literal
    variable, meaning that they literally mean exactly what they say. They are distinguished
    from variables, whose values are not directly determined by their name. The second
    variable, `fields`, is created from the returned value of the `ListFields()` function
    and is a Python `list` object containing one or more `Field` objects. Each `Field`
    represents a field from the attribute table of a feature class or a standalone
    table. The final variable is a dynamic variable called `fld`. As the `for` loop
    cycles through the list returned by the `ListFields()` function, each `Field`
    is assigned to the `fld` variable. The name of each field is then printed to the
    screen.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在此脚本中我们创建了三个变量。第一个变量`path`被创建并赋予了一个硬编码的数据路径值。这是一个字面量变量的例子，意味着它们确实就是所说的那样。它们与变量不同，变量的值不是直接由其名称确定的。第二个变量`fields`是由`ListFields()`函数的返回值创建的，是一个包含一个或多个`Field`对象的Python列表对象。每个`Field`代表一个来自要素类或独立表的属性表中的字段。最后一个变量是一个名为`fld`的动态变量。当`for`循环遍历`ListFields()`函数返回的列表时，每个`Field`被分配给`fld`变量。然后，每个字段的名称将被打印到屏幕上。
- en: Accessing ArcPy modules with Python
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python访问ArcPy模块
- en: Up to this point, we have covered some basic concepts related to ArcPy. In addition
    to the basic ArcPy site package, there are a number of modules that you can use
    to access specific functionality. These modules must be specifically imported
    into your scripts before you can use the functionality provided. In this recipe,
    you will learn how to import these modules.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经介绍了一些与ArcPy相关的基本概念。除了基本的ArcPy站点包外，还有一些模块可以用来访问特定的功能。在使用这些模块提供的功能之前，你必须将这些模块明确导入到你的脚本中。在本教程中，你将学习如何导入这些模块。
- en: Getting ready
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In addition to providing access to tools, functions, and classes, ArcPy also
    provides several modules. **Modules** are purpose-specific Python libraries containing
    functions and classes. The modules include a Mapping module (`arcpy.mapping`),
    a Data Access module (`arcpy.da`), a Spatial Analyst module (`arcpy.sa`), a Geostatistical
    module (`arcpy.ga`), a Network Analyst module (`arcpy.na`), and a Time module
    (`arcpy.time`). To use the functions and classes included with each of these modules
    you must specifically import their associated libraries.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供对工具、函数和类的访问外，ArcPy还提供了几个模块。**模块**是针对特定目的的Python库，包含函数和类。这些模块包括一个映射模块（`arcpy.mapping`）、一个数据访问模块（`arcpy.da`）、一个空间分析模块（`arcpy.sa`）、一个地理统计模块（`arcpy.ga`）、一个网络分析模块（`arcpy.na`）和一个时间模块（`arcpy.time`）。要使用这些模块包含的函数和类，你必须明确导入它们相关的库。
- en: How to do it…
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to use the functions and classes provided by
    the `arcpy.mapping` module:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用`arcpy.mapping`模块提供的函数和类：
- en: Open `c:\ArcpyBook\Ch2\Crime_Ch2.mxd` with ArcMap.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ArcMap打开`c:\ArcpyBook\Ch2\Crime_Ch2.mxd`。
- en: Open the Python window.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Python窗口。
- en: 'Import the `arcpy.mapping` module:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`arcpy.mapping`模块：
- en: '[PRE11]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Get a reference to the current map document (`Crime_Ch2.mxd`):'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取当前地图文档（`Crime_Ch2.mxd`）的引用：
- en: '[PRE12]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Call the `arcpy.mapping.ListLayers` function:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`arcpy.mapping.ListLayers`函数：
- en: '[PRE13]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This will return a list of all layers in the map document and print these to
    the shell window:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回地图文档中所有层的列表，并将这些打印到shell窗口中：
- en: '[PRE14]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Access to all the functions and objects available in the Mapping module is done
    in the same way.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 访问映射模块中所有可用的函数和对象的方式是相同的。
- en: How it works…
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Each of the modules provided by ArcPy gives access to functionality that fills
    a specific purpose. For example, the ArcPy Mapping module provides access to functions
    that allow you to manage map documents and layer files. The functions and objects
    in this module all relate in some way to managing these files.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: ArcPy提供的每个模块都提供了访问特定功能的方法。例如，ArcPy映射模块提供了访问允许你管理地图文档和层文件的函数。该模块中的函数和对象都与以某种方式管理这些文件相关。
