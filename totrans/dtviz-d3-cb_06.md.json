["```py\n<script type=\"text/javascript\">\n    var body = d3.select(\"body\"), \n        duration = 5000;\n\n    body.append(\"div\") // <-A\n            .classed(\"box\", true)\n            .style(\"background-color\", \"#e9967a\") // <-B\n        .transition() // <-C\n .duration(duration) // <-D\n            .style(\"background-color\", \"#add8e6\") // <-E\n            .style(\"margin-left\", \"600px\") // <-F\n            .style(\"width\", \"100px\")\n            .style(\"height\", \"100px\");\n</script> \n```", "```py\n    body.append(\"div\") // <-A\n            .classed(\"box\", true)\n            .style(\"background-color\", \"#e9967a\") // <-B\n            .transition() // <-C\n .duration(duration) // <-D\n\n```", "```py\n.style(\"background-color\", \"#e9967a\") // <-B\n```", "```py\n.style(\"background-color\", \"#add8e6\") // <-E\n.style(\"margin-left\", \"600px\") // <-F\n.style(\"width\", \"100px\")\n.style(\"height\", \"100px\");\n```", "```py\n<script type=\"text/javascript\">\n    var id= 0, \n        data = [], \n        duration = 500, \n        chartHeight = 100, \n        chartWidth = 680;\n\nfor(var i = 0; i < 20; i++){ \n    push(data);   \n}\n\n    function render(data) {\n        var selection = d3.select(\"body\")\n                .selectAll(\"div.v-bar\")\n .data(data, function(d){return d.id;}); // <-A\n\n        // enter\n        selection.enter()\n                .append(\"div\")\n                    .attr(\"class\", \"v-bar\")\n                    .style(\"position\", \"fixed\")\n .style(\"top\", chartHeight + \"px\")\n .style(\"left\", function(d, i){\n return barLeft(i+1) + \"px\"; // <-B\n })\n .style(\"height\", \"0px\") // <-C\n                .append(\"span\");\n\n        // update\n        selection\n .transition().duration(duration) // <-D\n .style(\"top\", function (d) { \n return chartHeight - barHeight(d) + \"px\"; \n })\n .style(\"left\", function(d, i){\n return barLeft(i) + \"px\";\n })\n .style(\"height\", function (d) { \n return barHeight(d) + \"px\"; \n })\n                .select(\"span\")\n                    .text(function (d) {return d.value;});\n\n        // exit\n        selection.exit()\n .transition().duration(duration) // <-E\n .style(\"left\", function(d, i){\n return barLeft(-1) + \"px\"; //<-F\n })\n .remove(); // <-G\n    }\n\n function push(data) {\n data.push({\n id: ++id, \n value: Math.round(Math.random() * chartHeight)\n });\n }\n\nfunction barLeft(i) {\n // start bar position is i * (barWidth + gap)\n return i * (30 + 2);\n }\n\n function barHeight(d) {\n return d.value;\n }\n\n    setInterval(function () {\n        data.shift();\n        push(data);\n        render(data);\n    }, 2000);\n\n    render(data);\n\n    d3.select(\"body\")\n       .append(\"div\")\n           .attr(\"class\", \"baseline\")\n           .style(\"position\", \"fixed\")\n           .style(\"top\", chartHeight + \"px\")\n           .style(\"left\", \"0px\")\n           .style(\"width\", chartWidth + \"px\");\n</script>\n```", "```py\nvar selection = d3.select(\"body\")\n                .selectAll(\"div.v-bar\")\n                .data(data, function(d){return d.id;}); // <-A\n```", "```py\n        // enter\n        selection.enter()\n                .append(\"div\")\n                    .attr(\"class\", \"v-bar\")\n                    .style(\"position\", \"fixed\")\n                    .style(\"top\", chartHeight + \"px\")\n                    .style(\"left\", function(d, i){\n                        return barLeft(i+1) + \"px\"; // <-B\n                    })\n                    .style(\"height\", \"0px\") // <-C\n                .append(\"span\");\n```", "```py\n        // update\n        selection\n            .transition().duration(duration) // <-D\n                .style(\"top\", function (d) { \n                    return chartHeight - barHeight(d) + \"px\"; \n                })\n                .style(\"left\", function(d, i){\n                    return barLeft(i) + \"px\";\n                })\n                .style(\"height\", function (d) { \n                    return barHeight(d) + \"px\"; \n                })\n                .select(\"span\")\n                    .text(function (d) {return d.value;});\n```", "```py\n        // exit\n        selection.exit()\n                .transition().duration(duration) // <-E\n                .style(\"left\", function(d, i){\n                    return barLeft(-1) + \"px\"; // <-F\n                })\n                .remove(); // <-G\n```", "```py\n<script type=\"text/javascript\">\n var data = [ // <-A\n \"linear\", \"cubic\", \"cubic-in-out\", \n \"sin\", \"sin-out\", \"exp\", \"circle\", \"back\", \n \"bounce\",\n function(t){ // <-B\n return t * t;\n }\n ],\n        colors = d3.scale.category10();\n\n    d3.select(\"body\").selectAll(\"div\")\n .data(data) // <-C\n        .enter()\n        .append(\"div\")\n            .attr(\"class\", \"fixed-cell\")\n            .style(\"top\", function (d, i) {\n                return i * 40 + \"px\";\n            })\n            .style(\"background-color\", function (d, i) {\n                return colors(i);\n            })\n            .style(\"color\", \"white\")\n            .style(\"left\", \"500px\")\n            .text(function (d) {\n                if(typeof d === 'function') return \"custom\";\n                return d;\n            });\n\n d3.selectAll(\"div\").each(function(d){\n d3.select(this)\n .transition().ease(d) // <-D\n .duration(1500)\n .style(\"left\", \"10px\");\n });\n</script>\n```", "```py\nvar data = [ // <-A\n        \"linear\", \n          \"cubic\", \n          \"cubic-in-out\", \n        \"sin\", \n          \"exp\", \n          \"circle\", \n          \"back\", \n        \"bounce\",\n        function(t){ // <-B\n            return t * t;\n        }\n        ]\n```", "```py\nd3.selectAll(\"div\").each(function(d){\n        d3.select(this)\n            .transition().ease(d) // <-D\n            .duration(1500)\n            .style(\"left\", \"10px\");\n    });\n```", "```py\n    .transition().ease(function(d){return d;}) // does not work\n    .duration(1500)\n    .style(\"left\", \"10px\");\n```", "```py\nfunction(t){ // <-B\n  return t * t;\n}\n```", "```py\n<script type=\"text/javascript\">\n    var body = d3.select(\"body\"), duration = 5000;\n\n    body.append(\"div\").append(\"input\")\n        .attr(\"type\", \"button\")\n        .attr(\"class\", \"countdown\")\n        .attr(\"value\", \"0\")\n        .style(\"width\", \"150px\")\n        .transition().duration(duration).ease(\"linear\")\n            .style(\"width\", \"400px\")\n            .attr(\"value\", \"9\");\n\n    body.append(\"div\").append(\"input\")\n        .attr(\"type\", \"button\")\n        .attr(\"class\", \"countdown\")\n        .attr(\"value\", \"0\")\n .transition().duration(duration).ease(\"linear\")\n .styleTween(\"width\", widthTween) // <- A\n .attrTween(\"value\", valueTween); // <- B\n\n function widthTween(a){\n var interpolate = d3.scale.quantize()\n .domain([0, 1])\n .range([150, 200, 250, 350, 400]);\n\n return function(t){\n return interpolate(t) + \"px\";\n };\n }\n\n function valueTween(){\n var interpolate = d3.scale.quantize() // <-C\n .domain([0, 1])\n .range([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n return function(t){ // <-D\n return interpolate(t);\n };\n    }        \n</script>\n```", "```py\nbody.append(\"div\").append(\"input\")\n        .attr(\"type\", \"button\")\n        .attr(\"class\", \"countdown\")\n        .attr(\"value\", \"0\")\n        .style(\"width\", \"150px\")\n        .transition().duration(duration).ease(\"linear\")\n            .style(\"width\", \"400px\")\n            .attr(\"value\", \"9\");\n```", "```py\n.transition().duration(duration).ease(\"linear\")\n            .styleTween(\"width\", widthTween) // <- A\n            .attrTween(\"value\", valueTween); // <- B\n```", "```py\nfunction valueTween(){\n    var interpolate = d3.scale.quantize() // <-C\n        .domain([0, 1])\n        .range([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n    return function(t){ // <-D\n        return interpolate(t);\n    };\n}        \n```", "```py\n<script type=\"text/javascript\">\n    var body = d3.select(\"body\");\n\n function teleport(s){\n s.transition().duration(300) // <-A\n .style(\"width\", \"200px\")\n .style(\"height\", \"1px\")\n .transition().duration(100) // <-B\n .style(\"left\", \"600px\")\n .transition().duration(300) // <-C\n .style(\"left\", \"800px\")\n .style(\"height\", \"80px\")\n .style(\"width\", \"80px\");\n }\n\n    body.append(\"div\")    \n            .style(\"position\", \"fixed\")\n            .style(\"background-color\", \"steelblue\")\n            .style(\"left\", \"10px\")\n            .style(\"width\", \"80px\")\n            .style(\"height\", \"80px\")\n .call(teleport); // <-D \n</script> \n```", "```py\nfunction teleport(s){\n    s.transition().duration(300) // <-A\n        .style(\"width\", \"200px\")\n        .style(\"height\", \"1px\")\n    .transition().duration(100) // <-B\n        .style(\"left\", \"600px\")\n    .transition().duration(300) // <-C\n        .style(\"left\", \"800px\")\n        .style(\"height\", \"80px\")\n        .style(\"width\", \"80px\");\n};\n```", "```py\n<script type=\"text/javascript\">\n    var data = [\"Cat\", \"Dog\", \"Cat\", \"Dog\", \"Cat\", \"Dog\", \"Cat\", \"Dog\"],\n        duration = 1500;\n\n    d3.select(\"body\").selectAll(\"div\")\n            .data(data)\n        .enter()\n        .append(\"div\")\n            .attr(\"class\", \"fixed-cell\")\n            .style(\"top\", function (d, i) {\n                return i * 40 + \"px\";\n            })\n            .style(\"background-color\", \"steelblue\")\n            .style(\"color\", \"white\")\n            .style(\"left\", \"500px\")\n            .text(function (d) {\n                return d;\n            })\n .transition() // <- A\n .duration(duration)\n .style(\"left\", \"10px\")\n .filter(function(d){return d == \"Cat\";}) // <- B\n .transition() // <- C\n .duration(duration)\n .style(\"left\", \"500px\");\n</script>\n```", "```py\n.transition() // <- A\n.duration(duration)\n    .style(\"left\", \"10px\")\n.filter(function(d){return d == \"Cat\";}) // <- B\n.transition() // <- C\n.duration(duration)\n    .style(\"left\", \"500px\");\n```", "```py\n<script type=\"text/javascript\">\n    var body = d3.select(\"body\"), duration = 3000;\n\n    var div = body.append(\"div\")\n            .classed(\"box\", true)\n            .style(\"background-color\", \"steelblue\")\n            .style(\"color\", \"white\")\n .text(\"waiting\") // <-A\n .transition().duration(duration) // <-B\n .delay(1000) // <-C\n .each(\"start\", function(){ // <-D\n console.log(arguments);\n d3.select(this).text(function (d, i) {\n return \"transitioning\";\n });\n })\n .each(\"end\", function(){ // <-E\n d3.select(this).text(function (d, i) {\n return \"done\";\n });\n })\n            .style(\"margin-left\", \"600px\");\n</script>\n```", "```py\nvar div = body.append(\"div\")\n            .classed(\"box\", true)\n            .style(\"background-color\", \"steelblue\")\n            .style(\"color\", \"white\")\n            .text(\"waiting\") // <-A\n        .transition().duration(duration) // <-B\n                .delay(1000) // <-C\n```", "```py\n.each(\"start\", function(){ // <-D\n    d3.select(this).text(function (d, i) {\n        return \"transitioning\";\n    });\n})\n```", "```py\n.each(\"end\", function(){ // <-E\n    d3.select(this).text(function (d, i) {\n        return \"done\";\n    });\n})\n```", "```py\n <script type=\"text/javascript\">\n d3.interpolators.push(function(a, b) { // <-A\n var re = /^([a-z])$/, ma, mb;\n if ((ma = re.exec(a)) && (mb = re.exec(b))) {\n a = a.charCodeAt(0);\n var delta = a - b.charCodeAt(0);\n return function(t) {\n return String.fromCharCode(Math.ceil(a - delta * t));\n };\n }\n });\n\n    var body = d3.select(\"body\");\n\n    var countdown = body.append(\"div\").append(\"input\");\n\n    countdown.attr(\"type\", \"button\")\n        .attr(\"class\", \"countdown\")\n .attr(\"value\", \"a\") // <-B\n .transition().ease(\"linear\") // <-C\n .duration(4000).delay(300)\n .attr(\"value\", \"z\"); // <-D\n</script>\n```", "```py\nd3.interpolators.push(function(a, b) { // <-A\n      var re = /^([a-z])$/, ma, mb;\n      if ((ma = re.exec(a)) && (mb = re.exec(b))) {\n        a = a.charCodeAt(0);\n        var delta = a - b.charCodeAt(0);\n        return function(t) {\n          return String.fromCharCode(Math.ceil(a - delta * t));\n        };\n      }\n});\n```", "```py\ncountdown.attr(\"type\", \"button\")\n        .attr(\"class\", \"countdown\")\n        .attr(\"value\", \"a\") // <-B\n        .transition().ease(\"linear\") // <-C\n        .duration(4000).delay(300)\n        .attr(\"value\", \"z\"); // <-D\n```", "```py\n<script type=\"text/javascript\">\n    var body = d3.select(\"body\");\n\n    var countdown = body.append(\"div\").append(\"input\");\n\n    countdown.attr(\"type\", \"button\")\n        .attr(\"class\", \"countdown\")\n        .attr(\"value\", \"0\");\n\n    function countup(target){ // <-A\n        d3.timer(function(){ // <-B\n            var value = countdown.attr(\"value\");\n            if(value == target) return true;  // <-C\n            countdown.attr(\"value\", ++value); // <-D            \n        });\n    }\n\n    function reset(){\n        countdown.attr(\"value\", 0);\n    }\n</script>\n\n<div class=\"control-group\">\n    <button onclick=\"countup(100)\">\n        Start\n    </button>\n    <button onclick=\"reset()\">\n        Clear\n    </button>\n</div>\n```", "```py\nfunction countup(target){ // <-A\n        d3.timer(function(){ // <-B\n            var value = countdown.attr(\"value\");\n            if(value == target) return true;  // <-C\n            countdown.attr(\"value\", ++value); // <-D            \n        });\n    }\n```"]