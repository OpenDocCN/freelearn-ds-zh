["```py\nlist_example = [51, 27, 34, 46, 90, 45, -19]\n```", "```py\nlist_example2 = [15, \"Yellow car\", True, 9.456, [12, \"Hello\"]]\n```", "```py\nmy_list [ inclusive start index : exclusive end index ]\n```", "```py\nlist_example = [51, 27, 34, 46, 90, 45, -19]\nlist_example[0]\n```", "```py\n51\n```", "```py\nlen(list_example)\n```", "```py\n7\n```", "```py\nlist_example.append(11)\nlist_example\n```", "```py\n[51, 27, 34, 46, 90, 45, -19, 11]\n```", "```py\n    import pandas as pd\n    ssn = list(pd.read_csv(\"../datasets/ssn.csv\"))\n    print(ssn)\n    ['218-68-9955',\n     '165-73-3124',\n     '432-47-4043',\n     '563-93-1393',\n     '153-93-3401',\n     '670-09-7369',\n     '123-05-9652',\n     '812-13-2476',\n     '726-13-1007',\n     '825-05-4836']\n    ```", "```py\n    ssn[0]\n    ```", "```py\n    '218-68-9955'\n    ```", "```py\n    ssn[3]\n    ```", "```py\n    '563-93-1393'\n    ```", "```py\n    ssn[len(ssn) - 1]\n    ```", "```py\n    '825-05-4836'\n    ```", "```py\n    ssn[-1] \n    ```", "```py\n    '825-05-4836'\n    ```", "```py\n    ssn[1:3]\n    ```", "```py\n    ['165-73-3124', '432-47-4043']\n    ```", "```py\n    ssn[-2:]\n    ```", "```py\n    ['726-13-1007', '825-05-4836']\n    ```", "```py\n    ssn[:-2]\n    ```", "```py\n    ssn[-1::-1]\n    ```", "```py\n    import pandas as pd\n    ssn = list(pd.read_csv(\"ssn.csv file on your system.\n    ```", "```py\n    ssn_2 = []\n    for x in ssn:\n        ssn_2.append(x)\n    ssn_2\n    ```", "```py\n    ssn_3 = [\"soc: \" + x for x in ssn_2]\n    ssn_3\n    ```", "```py\n    i = 0\n    while i < len(ssn_3):\n        print(ssn_3[i])\n        i += 1\n    ```", "```py\n    soc: 218-68-9955\n    soc: 165-73-3124\n    soc: 432-47-4043\n    soc: 563-93-1393\n    soc: 153-93-3401\n    soc: 670-09-7369\n    soc: 123-05-9652\n    soc: 812-13-2476\n    soc: 726-13-1007\n    soc: 825-05-4836\n    ```", "```py\n    numbers = [x for x in ssn_3 if \"5\" in x]\n    numbers\n    ```", "```py\n    ssn_4 = [\"102-90-0314\" , \"247-17-2338\" , \"318-22-2760\"]\n    ssn_5 = ssn_4 + ssn\n    ssn_5\n    ```", "```py\n    ssn_2.extend(ssn_4)\n    ssn_2\n    ```", "```py\n    for x in ssn_2:\n        for y in ssn_5:\n            print(str(x) + ' , ' + str(y))\n    ```", "```py\n    import pandas as pd\n    car_models = list(pd.read_csv(\"../datasets/car_models.csv\"))\n    car_models\n    ['Escalade ',\n     ‹ X5 M›,\n     ‹D150›,\n     ‹Camaro›,\n     ‹F350›,\n     ‹Aurora›,\n     ‹S8›,\n     ‹E350›,\n     ‹Tiburon›,\n     ‹F-Series Super Duty ‹]\n    ```", "```py\n    list_1 = [x for x in car_models]\n    for i in range(0, len(list_1)):\n        print(list_1[i])\n    ```", "```py\n    Escalade\n    X5 M\n    D150\n    Camaro\n    F350\n    Aurora\n    S8\n    E350\n    Tiburon\n    F-Series Super Duty\n    ```", "```py\n    for i in list_1:\n        print(i)\n    ```", "```py\n    Escalade\n    X5 M\n    D150\n    Camaro\n    F350\n    Aurora\n    S8\n    E350\n    Tiburon\n    F-Series Super Duty\n    ```", "```py\n    \"D150\" in list_1\n    ```", "```py\n    \"Mustang\" in list_1\n    ```", "```py\n    import pandas as pd\n    ssn = list(pd.read_csv(\"ssn.csv file on your system. \n    ```", "```py\n    list_1 = [*range(0, 21, 1)]\n    list_1.sort(reverse=True)\n    list_1\n    ```", "```py\n    [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, \n    6, 5, 4, 3, 2, 1, 0]\n    ```", "```py\n    list_1.reverse()\n    list_1\n    ```", "```py\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, \n    17, 18, 19, 20]\n    ```", "```py\n    import random\n    ```", "```py\n    list_1 = [random.randint(0, 30) for x in range (0, 100)]\n    ```", "```py\n    list_1\n    ```", "```py\n    list_2 = [x**2 for x in list_1]\n    list_2\n    ```", "```py\n    import math \n    list_2 = [math.log(x+1,10) for x in list_2]\n    list_2\n    ```", "```py\n    66.3\n    ```", "```py\nlist_12 = list(set(list_1))\n```", "```py\nlist_12\n```", "```py\nset1 = {\"Apple\", \"Orange\", \"Banana\"}\nset2 = {\"Pear\", \"Peach\", \"Mango\", \"Banana\"}\n```", "```py\nset1 | set2\n```", "```py\n{'Apple', 'Banana', 'Mango', 'Orange', 'Peach', 'Pear'}\n```", "```py\nset1 & set2\n```", "```py\n{'Banana'}\n```", "```py\nnull_set_1 = set({})\nnull_set_1\n```", "```py\nset()\n```", "```py\nnull_set_2 = {}\nnull_set_2\n```", "```py\n{}\n```", "```py\ndict_1 = {\"key1\": \"value1\", \"key2\": \"value2\"}\ndict_1\n```", "```py\n{'key1': 'value1', 'key2': 'value2'}\n```", "```py\ndict_2 = {\"key1\": 1, \"key2\": [\"list_element1\", 34], \\\n          \"key3\": \"value3\",\"key4\": {\"subkey1\": \"v1\"}, \\\n          \"key5\": 4.5}\ndict_2\n```", "```py\n\\ ) to split the logic across multiple lines. When the code is executed, Python will ignore the backslash, and treat the code on the next line as a direct continuation of the current line.\n```", "```py\n{'key1': 1,\n 'key2': ['list_element1', 34],\n 'key3': 'value3',\n 'key4': {'subkey1': 'v1'},\n 'key5': 4.5}\n```", "```py\n    stocks = \\\n    {\"Solar Capital Ltd.\":\"$920.44M\", \\\n     \"Zoe's Kitchen, Inc.\":\"$262.32M\",\\\n     \"Toyota Motor Corp Ltd Ord\":\"$156.02B\",\\\n     \"Nuveen Virginia Quality Municipal Income Fund\":\"$238.33M\",\\\n     \"Kinross Gold Corporation\":\"$5.1B\",\\\n     \"Vulcan Materials Company\":\"$17.1B\",\\\n     \"Hi-Crush Partners LP\":\"$955.69M\",\\\n     \"Lennox International, Inc.\":\"$8.05B\",\\\n     \"WMIH Corp.\":\"$247.66M\",\\\n     \"Comerica Incorporated\":\"n/a\"}\n    ```", "```py\n    stocks[\"WMIH Corp.\"]\n    ```", "```py\n    '$247.66M'\n    ```", "```py\n    stocks[\"WMIH Corp.\"] = \"$300M\"\n    ```", "```py\n    dict_3 = {} # Not a null set. It is a dict\n    dict_3[\"key1\"] = \"Value1\"\n    dict_3\n    {'key1': 'Value1'}\n    ```", "```py\n    stocks = \\\n    {\"Solar Capital Ltd.\":\"$920.44M\",\\\n     \"Zoe's Kitchen, Inc.\":\"$262.32M\",\\\n     \"Toyota Motor Corp Ltd Ord\":\"$156.02B\",\\\n     \"Nuveen Virginia Quality Municipal Income Fund\":\"$238.33M\",\\\n     \"Kinross Gold Corporation\":\"$5.1B\",\\\n     \"Vulcan Materials Company\":\"$17.1B\",\\\n     \"Hi-Crush Partners LP\":\"$955.69M\",\\\n     \"Lennox International, Inc.\":\"$8.05B\",\\\n     \"WMIH Corp.\":\"$247.66M\",\\\n     \"Comerica Incorporated\":\"n/a\"}\n    ```", "```py\n    for key,val in stocks.items():\n        stocks[key] = val.replace('$', '')\n    stocks\n    ```", "```py\n    {'Solar Capital Ltd.': '920.44M',\n     \"Zoe's Kitchen, Inc.\": '262.32M',\n     'Toyota Motor Corp Ltd Ord': '156.02B',\n     'Nuveen Virginia Quality Municipal Income Fund': '238.33M',\n     'Kinross Gold Corporation': '5.1B',\n     'Vulcan Materials Company': '17.1B',\n     'Hi-Crush Partners LP': '955.69M',\n     'Lennox International, Inc.': '8.05B',\n     'WMIH Corp.': '300M',\n     'Comerica Incorporated': 'n/a'}\n    ```", "```py\n    for key,val in stocks.items():\n        mult = val[-1]\n        stocks[key] = [val[:-1],mult]\n    stocks\n    ```", "```py\n    {'Solar Capital Ltd.': ['920.44', 'M'],\n     «Zoe›s Kitchen, Inc.»: [‹262.32›, ‹M›],\n     ‹Toyota Motor Corp Ltd Ord›: [‹156.02›, ‹B›],\n     ‹Nuveen Virginia Quality Municipal Income Fund›: [‹238.33›, ‹M›],\n     ‹Kinross Gold Corporation›: [‹5.1›, ‹B›],\n     ‹Vulcan Materials Company›: [‹17.1›, ‹B›],\n     ‹Hi-Crush Partners LP›: [‹955.69›, ‹M›],\n     ‹Lennox International, Inc.›: [‹8.05›, ‹B›],\n     ‹WMIH Corp.›: [‹300›, ‹M›],\n     ‹Comerica Incorporated›: [‹n/›, ‹a›]}\n    ```", "```py\n    import random\n    list_1 = [random.randint(0, 30) for x in range (0, 100)]\n    ```", "```py\n    list(dict.fromkeys(list_1).keys())\n    ```", "```py\n    dict_1 = {\"key1\": 1, \"key2\": [\"list_element1\", 34], \\\n              \"key3\": \"value3\",\"key4\": {\"subkey1\": \"v1\"}, \\\n              \"key5\": 4.5}\n    dict_1\n    ```", "```py\n    {'key1': 1,\n     'key2': ['list_element1', 34],\n     'key3': 'value3',\n     'key4': {'subkey1': 'v1'},\n     'key5': 4.5}\n    ```", "```py\n    del dict_1[\"key2\"]\n    dict_1\n    ```", "```py\n    {'key1': 1, 'key3': 'value3', 'key4': {'subkey1': 'v1'}, 'key5': 4.5}\n    ```", "```py\n    del dict_1[\"key3\"]\n    del dict_1[\"key4\"]\n    ```", "```py\n    dict_1\n    ```", "```py\n    {'key1': 1, 'key5': 4.5}\n    ```", "```py\n    list_1 = [x for x in range(0, 10)]\n    dict_1 = {x : x**2 for x in list_1}\n    dict_1\n    ```", "```py\n    {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}\n    ```", "```py\n    dict_2 = dict([('Tom', 100), ('Dick', 200), ('Harry', 300)])\n    dict_2\n    ```", "```py\n    {'Tom': 100, 'Dick': 200, 'Harry': 300}\n    ```", "```py\n    dict_3 = dict(Tom=100, Dick=200, Harry=300)\n    dict_3\n    ```", "```py\n    {'Tom': 100, 'Dick': 200, 'Harry': 300}\n    ```", "```py\ntuple_1 = 24, 42, 2.3456, \"Hello\"\n```", "```py\ntuple_1 = ()\n```", "```py\ntuple_1 = \"Hello\",\n```", "```py\ntuple_1 = \"hello\", \"there\"\ntuple_12 = tuple_1, 45, \"Sam\"\n```", "```py\ntuple_1 = \"Hello\", \"World!\"\ntuple_1[1] = \"Universe!\"\n```", "```py\ntuple_1 = (\"good\", \"morning!\" , \"how\", \"are\" \"you?\")\ntuple_1[0]\n```", "```py\n'good'\n```", "```py\ntuple_1[4]\n```", "```py\n'you?'\n```", "```py\ntuple_1 = \"Hello\", \"World\"\nhello, world = tuple_1\nprint(hello)\nprint(world)\n```", "```py\nHello\nWorld\n```", "```py\n    tupleE = \"1\", \"3\", \"5\"\n    tupleE\n    ```", "```py\n    ('1', '3', '5')\n    ```", "```py\n    tupleE[1] = \"5\"\n    ```", "```py\n    TypeError                                 Traceback (most recent call last)\n    <ipython-input-58-b4cba6d5ed11> in <module>\n    ----> 1 tupleE[1] = \"5\"\n    TypeError: 'tuple' object does not support item assignment\n    ```", "```py\n    1, 3, 5 = tupleE\n    ```", "```py\n    File \"<ipython-input-3-a5283cb38d62>\", line 1\n        1, 3, 5 = tupleE\n                         ^\n    SyntaxError: can't assign to literal\n    ```", "```py\n    print(tupleE[0])\n    print(tupleE[1])\n    ```", "```py\n    1\n    3\n    ```", "```py\nstring1 = 'Hello World!' \n```", "```py\nstring2 = \"Hello World 2!\"\n```", "```py\nstr[ inclusive start position:  exclusive end position ]. \n```", "```py\n    str_1 = \"Hello World!\"\n    str_1\n    ```", "```py\n    'Hello World!'\n    ```", "```py\n    str_1[0]\n    ```", "```py\n    'H'\n    ```", "```py\n    str_1[4]\n    ```", "```py\n    'o'\n    ```", "```py\n    str_1[len(str_1) - 1]\n    ```", "```py\n    '!'\n    ```", "```py\n    str_1[-1]\n    ```", "```py\n    '!'\n    ```", "```py\n    str_1 = \"Hello World! I am learning data wrangling\"\n    str_1\n    ```", "```py\n    'Hello World! I am learning data wrangling'\n    ```", "```py\n    str_1[2:10]\n    ```", "```py\n    'llo Worl'\n    ```", "```py\n    str_1[-31:]\n    ```", "```py\n    'd! I am learning data wrangling'\n    ```", "```py\n    str_1[-10:-5]\n    ```", "```py\n    ' wran'\n    ```", "```py\nstr_1 = \"Hello World! I am learning data wrangling\"\nlen(str_1)\n```", "```py\nstr_1 = \"A COMPLETE UPPER CASE STRING\"\nstr_1.lower()\n```", "```py\n'a complete upper case string'\n```", "```py\nstr_1.upper()\n```", "```py\n'A COMPLETE UPPER CASE STRING'\n```", "```py\nstr_1 = \"A complicated string looks like this\"\nstr_1.find(\"complicated\")\nstr_1.find(\"hello\")\n```", "```py\nstr_1 = \"A complicated string looks like this\"\nstr_1.replace(\"complicated\", \"simple\")\n```", "```py\n'A simple string looks like this'\n```", "```py\nstr.split(separator)\n```", "```py\nstring.join(seperator)\n```", "```py\n    str_1 = \"Name, Age, Sex, Address\"\n    list_1 = str_1.split(\",\")\n    list_1\n    ```", "```py\n    ['Name', ' Age', ' Sex', ' Address']\n    ```", "```py\n    s = \" | \"\n    s.join(list_1) \n    ```", "```py\n    'Name |  Age |  Sex |  Address'\n    ```"]