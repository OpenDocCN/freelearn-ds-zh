["```py\nrequire([\"dojo/on\", \"dojox/gesture/tap\"], function (dojoOn, tap) {\n  dojoOn(node, tap, function (e) {…});\n});\n```", "```py\nrequire([\"dojo/on\", \"dojox/gesture/swipe\"], function(on, swipe){\n  on(node, swipe, function(e){ … });\n  on(node, swipe.end, function(e){ alert(\"That was easy.\");});\n});\n```", "```py\n<head>\n  …\n  <!-- note that the claro.css stylesheet is removed -->\n  <link rel=\"stylesheet\" \n    href=\"https://js.arcgis.com/3.13/esri/css/esri.css\" />\n  <link rel=\"stylesheet\" href=\"./css/style.css\" />\n  <script type=\"text/javascript\">\n    dojoConfig = { async: true, isDebug: true };\n  </script>\n  <script src=\"img/\"></script>\n</head>\n…\n```", "```py\n<body>\n  <div id=\"mapview\" data-dojo-type=\"dojox/mobile/View\">\n    <h1 data-dojo-type=\"dojox/mobile/Heading\">\n      Incident Reporting App\n    </h1>\n    <div id=\"map\" >\n      <div id=\"locatebutton\"></div>\n    </div>\n  </div>\n  <div id=\"incidentview\" data-dojo-type=\"dojox/mobile/View\">\n    <h2 data-dojo-type=\"dojox/mobile/Heading\" \n    data-dojo-props=\"back:'Map',moveTo:'mapview'\">\n      Incident\n    </h2>\n    <div id=\"pickerdiv\"></div>\n  </div>\n  <div id=\"attributeview\" data-dojo-type=\"dojox/mobile/View\">\n    <h2 data-dojo-type=\"dojox/mobile/Heading\" \n data-dojo-props=\"back:'Incident',moveTo:'incidentview'\">\n      Description\n    </h2>\n    <div id=\"attributediv\"></div>\n  </div>\n  …\n</body>\n```", "```py\nrequire([\n  \"dojox/mobile/parser\",\n  \"dojo/dom\",\n  \"dojo/on\",\n  \"esri/config\",\n  \"esri/map\",\n  \"esri/graphic\",\n  \"esri/layers/FeatureLayer\",\n  \"esri/layers/ArcGISDynamicMapServiceLayer\",\n  \"esri/symbols/SimpleMarkerSymbol\",\n  \"esri/geometry/Extent\",\n  \"esri/dijit/editing/Editor\",\n  \"esri/dijit/editing/TemplatePicker\",\n  \"esri/dijit/editing/AttributeInspector\",\n  \"esri/dijit/LocateButton\",\n  \"esri/tasks/query\",\n  \"dijit/registry\",\n  \"dojox/mobile/Button\",\n  \"dojox/mobile\",\n  \"dojox/mobile/deviceTheme\",\n  \"dojox/mobile/compat\",\n  \"dojox/mobile/View\", \n  \"dojox/mobile/Heading\",\n  \"dojox/mobile/ToolBarButton\",\n  \"dojo/domReady!\"\n], function (\n  parser, dojoDom, dojoOn,\n  esriConfig, Map, Graphic,\n  FeatureLayer, ArcGISDynamicMapServiceLayer,\n  MarkerSymbol, Extent,\n  Editor, TemplatePicker, AttributeInspector,\n  LocateButton, Query, registry, Button\n) {\n```", "```py\n#mapview {\n  height: 100%;\n  overflow-y: hidden;\n}\n\n#map {\n  width: 100%;\n  height: 100%;\n}\n```", "```py\n.LocateButton {\n  position: absolute;\n  left: 21px;\n  top: 130px;\n  z-index: 500;\n}\n```", "```py\nfunction startEditing () {\n  …\n  picker = new TemplatePicker({\n    featureLayers: [ layer ],\n    style: \"width:100%;height:auto;\",\n    grouping: false\n  }, \"pickerdiv\");\n  picker.startup();\n…\n```", "```py\nfunction showInspector(evt) {\n  var selectQuery = new Query(),\n  point = evt.mapPoint,\n  mapScale = map.getScale();\n  selectQuery.geometry = new Extent({\n    xmin: point.x - mapScale * 5 / 96,\n    xmax: point.x + mapScale * 5 / 96,\n    ymin: point.y - mapScale * 5 / 96,\n    ymax: point.y + mapScale * 5 / 96,\n    spatialReference: map.spatialReference\n  });\n\n  incidentLayer.selectFeatures(selectQuery, FeatureLayer.SELECTION_NEW, function (features) {\n    if (!features.length) {\n goToPicker(point);\n } else {\n goToAttributeInspector('mapview', features[0]);\n }\n  });\n   }\n```", "```py\n  function goToPicker(point) {\n    registry.byId('mapview').performTransition('incidentview', 1, 'slide', null, function() {\n…\n  });\n}\n```", "```py\n  registry.byId('mapview').performTransition('incidentview', 1, 'slide', null, function() {\n\n    //refresh the grid used by the templatePicker.\n    picker.grid.render();\n    picker.clearSelection();\n    // on picker selection change…\n    dojoOn.once(picker, 'selection-change', function () {\n\n    var selected = picker.getSelected();\n     if (selected) {\n      // log the date and time\n      var currentDate = new Date();\n       var incidentAttributes = {\n         req_type: selected.template.name,\n        req_date:(currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear(),\n        req_time: currentDate.toLocaleTimeString(),\n        address: \"\",\n        district: \"\",\n         status: 1\n       };\n      addIncident(point, selected.symbol, incidentAttributes);\n       }\n      });\n    });\n  }\n```", "```py\nfunction addIncident(point, symbol, attributes) {\n  var incident = new Graphic(point, symbol, attributes);\n// add incident to the map so it can be selected and passed to the\n// attribute inspector. \nincidentLayer.applyEdits([incident],null,null).then(function () {\n  var selectQuery = new Query(),\n        mapScale = map.getScale();\n  selectQuery.geometry = new Extent({\n    xmin: point.x - mapScale / 96,\n    xmax: point.x + mapScale / 96,\n    ymin: point.y - mapScale / 96,\n    ymax: point.y + mapScale / 96,\n    spatialReference: map.spatialReference\n  });\n\n  // must select features before going to attributeInspector\n  incidentLayer.selectFeatures(selectQuery, FeatureLayer.SELECTION_NEW, function (features) {\n    if (features.length) {\n      // fill in the items\n      goToAttributeInspector(features[0], \"incidentview\");\n    }\n  });\n  });\n}\n```", "```py\n<div id=\"attributeview\" data-dojo-type=\"dojox/mobile/View\">\n  <div id=\"attinspector\"></div>\n</div>\n```", "```py\n    function generateAttributeInspector(layer) {\n\n        layerInfos = [{\n          featureLayer: layer,\n          showAttachments: true,\n          isEditable: true,\n          showDeleteButton: false,\n          fieldInfos: [\n            {'fieldName': 'req_type', 'isEditable':true, 'tooltip': 'What\\'s wrong?', 'label':'Status:'},\n            {'fieldName': 'req_date', 'isEditable':false, 'tooltip': 'Date incident was reported.', 'label':'Date:'},\n            {'fieldName': 'req_time', 'isEditable':false,'label':'Time:'},\n            {'fieldName': 'address', 'isEditable':true, 'label':'Address:'},\n            {'fieldName': 'district', 'isEditable':true, 'label':'District:'},\n            {'fieldName': 'status', 'isEditable':false, 'label':'Status:'}\n          ]\n        }]; //\"\",\"req_date\",\"req_time\",\"address\",\"district\",\"status\"\n\n        attInspector = new AttributeInspector({\n          layerInfos: layerInfos\n        }, \"attinspector\");\n\n        attInspector.startup();\n\n        //add a save button next to the delete button\n        var saveButton = new Button({ label: \"Save\", \"class\": \"saveButton\"});\n        domConstruct.place(saveButton.domNode, attInspector.deleteBtn.domNode, \"after\");\n\n        saveButton.on(\"click\", function(){\n          updateFeature.getLayer()\n           .applyEdits(null, [updateFeature], null); \n        });\n\n        attInspector.on(\"attribute-change\", function(evt) {\n          //store the updates to apply when the save button is clicked\n          updateFeature.attributes[evt.fieldName] = evt.fieldValue;\n        });\n\n        attInspector.on(\"next\", function(evt) {\n          updateFeature = evt.feature;\n          console.log(\"Next \" + updateFeature.attributes.objectid);\n        });\n\n        attInspector.on(\"delete\", function(evt){\n          evt.feature.getLayer()\n            .applyEdits(null,null,[updateFeature]);\n          map.infoWindow.hide();\n        });\n     // content after this was deleted.\n      }\n    ```", "```py\nrequire([…, \"dojox/mobile/RoundRect\", \"dojox/mobile/TextBox\",\n \"dijit/form/DataList\", \"dojox/mobile/ComboBox\", \n  \"dojox/mobile/Button\", \"dojo/domReady!\"], function ( … ) { \n…\n});\n```", "```py\n<div id=\"attributeview\" data-dojo-type=\"dojox/mobile/View\">\n  <h2 data-dojo-type=\"dojox/mobile/Heading\" \n    data-dojo-props=\"back:'Incident',moveTo:'incidentview'\">\n      Description\n  </h2>\n  <div data-dojo-type=\"dojox/mobile/RoundRect\">\n    <label>Request Type:</label>\n    <select data-dojo-type=\"dijit/form/DataList\"\n      data-dojo-props='id:\"incidentDataList\"'>\n        <option>Graffiti Complaint</option>\n        <option>Blocked Street or Sidewalk</option>\n        <option>Damaged Property</option>\n        <option>Sewer Issues</option>\n        <option>Tree Maintenance or Damage</option>\n        <option>Sidewalk and Curb Issues</option>\n    </select>\n    <input type=\"text\" data-dojo-type=\"dojox/mobile/ComboBox\"\n      data-dojo-props='list:\"incidentDataList\",\n        id:\"incidentSelector\"' />\n    <br />\n    <label>Date:</label>\n    <span id=\"incidentDate\"></span>\n    <br />\n    <label>Time:</label>\n    <span id=\"incidentTime\"></span>\n    <br />\n    <label>Address:</label>\n    <input type=\"text\" data-dojo-type=\"dojox/mobile/TextBox\"\n      data-dojo-props='id:\"incidentAddress\"' />\n    <br />\n    <label>District:</label>\n    <input type=\"text\" data-dojo-type=\"dojox/mobile/TextBox\"\n      data-dojo-props='id:\"incidentDistrict\"' />\n    <br />\n    <label>Status: </label>\n    <span id=\"incidentStatus\"></span>\n    <br />\n    <button data-dojo-type=\"dojox/mobile/Button\"\n      data-dojo-props=\"id:'saveButton'\">Save</button>\n…\n  </div>\n```", "```py\n  function setupIncident(feature, view) {\n    var attr = feature.attributes;\n    updateFeature = feature;\n    registry.byId(\"incidentSelector\").set(\"value\", attr.req_type);\n    dojoDom.byId(\"incidentDate\").innerHTML = attr.req_date;\n    dojoDom.byId(\"incidentTime\").innerHTML = attr.req_time;\n    registry.byId(\"incidentAddress\").set(\"value\", attr.address);\n    registry.byId(\"incidentDistrict\").set(\"value\", attr.district);\n    dojoDom.byId(\"incidentStatus\").innerHTML = attr.status;\n\n    attInspector.showAttachments(feature, incidentLayer);\n    registry.byId(view).performTransition('attributeview', 1, 'slide');\n  }\n```", "```py\n  function setupIncident() { \n    …\n  }\n  function saveEdits(){\n    // add updated values\n    updateFeature.attributes.req_type = registry.byId(\"incidentSelector\").get(\"value\");\n    updateFeature.attributes.address = registry.byId(\"incidentAddress\").get(\"value\");\n    updateFeature.attributes.district = registry.byId(\"incidentDistrict\").get(\"value\");\n\n    // update the feature layer\n    updateFeature.getLayer().applyEdits(null, [updateFeature], null);\n    // move back to the map view\n    registry.byId(\"attributeview\").performTransition(\"mapview\",  -1, 'slide');\n  }\n```", "```py\nrequire([…\n  \"esri/dijit/editing/TemplatePicker\",\n  \"esri/dijit/editing/AttachmentEditor\",\n  …\n], function (… \n  TemplatePicker, AttachmentEditor,\n  …\n) {  });\n```", "```py\nrequire([…\n  \"esri/dijit/editing/TemplatePicker\",\n \"esri/dijit/editing/AttachmentEditor\",\n  …\n], function ( \n  TemplatePicker, AttachmentEditor,\n  …\n) {\n\n var attachmentEditor;\n  …\n  function startEditing () {\n    // add the Locate button\n    var locator = new LocateButton({map: map}, \"locatebutton\");\n    var incidentLayer = map.getLayer(\"incidentLayer\");\n\n    picker = new TemplatePicker({\n      featureLayers: [ layer ],\n      style: \"width:100%;height:auto;\",\n      grouping: false\n    }, \"pickerdiv\");\n    picker.startup();\n\n attachmentEditor = new AttachmentEditor({}, \"attributediv\");\n attachmentEditor.startup();\n    …\n  }\n  …\n});\n```", "```py\n  function setupIncident(feature, view) {\n    var attr = feature.attributes;\n    updateFeature = feature;\n    registry.byId(\"incidentSelector\").set(\"value\", attr.req_type);\n    dojoDom.byId(\"incidentDate\").innerHTML = attr.req_date;\n    dojoDom.byId(\"incidentTime\").innerHTML = attr.req_time;\n    registry.byId(\"incidentAddress\").set(\"value\", attr.address);\n    registry.byId(\"incidentDistrict\").set(\"value\", attr.district);\n    dojoDom.byId(\"incidentStatus\").innerHTML = attr.status;\n\n attachmentEditor.showAttachments(feature, incidentLayer);\n    registry.byId(view).performTransition('attributeview', 1, 'slide');\n  }\n```", "```py\n<div id=\"attributeview\" data-dojo-type=\"dojox/mobile/View\">\n  <h2 data-dojo-type=\"dojox/mobile/Heading\" \n    data-dojo-props=\"back:'Incident',moveTo:'incidentview'\"> \n  Description\n  </h2>\n  <div data-dojo-type=\"dojox/mobile/RoundRect\">\n    …\n    <button data-dojo-type=\"dojox/mobile/Button\"\n    data-dojo-props=\"id:'saveButton'\">Save</button>\n  </div>\n <div id=\"attributediv\"></div>\n</div>\n```"]