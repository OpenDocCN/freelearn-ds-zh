- en: Chapter 5. Creating Great Maps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will cover the important features that enable us to create
    great maps. We will first go into advanced vector styling, building on what we
    learned in [Chapter 2](ch02.html "Chapter 2. Viewing Spatial Data"), *Viewing
    Spatial Data*. Then, we will learn how to label features by following examples
    for point labels as well as more advanced road labels with road shield graphics.
    We will also cover how to tweak labels manually. Finally, we will get to know
    the print composer and how to use it to create printable maps and map books.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Advanced vector styling
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section introduces more advanced vector styling features, building on the
    basics we saw in [Chapter 2](ch02.html "Chapter 2. Viewing Spatial Data"), *Viewing
    Spatial Data*. We will see how to use graduated styles, categorized styles, and
    rulebased styles.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Creating a graduated style with size-scaling
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Graduated styles are great to visualize distributions of numeric values in
    a choropleth map or similar. In our sample data, there is a `climate.shp` file,
    which contains locations and mean temperature values that we can visualize using
    a graduated style by simply selecting the value **T_F_MEAN** for the **Column**
    field and clicking on **Classify**. We can pick an existing **Color ramp** field
    or create a new one by scrolling down the list to the **New color ramp…** entry.
    Graduated styles are available in different classification modes as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '**Equal Intervals**: This mode creates classes by splitting at equal intervals
    between the maximum and minimum values found in the specified column'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quantile (Equal Count)**: This mode creates classes so that each class contains
    an equal number of features'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Natural Breaks (Jenks)**: This mode uses the Jenks Natural Breaks algorithm
    to create classes by taking the distribution of values into account'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Standard Deviation**: This mode uses the column values'' standard deviation
    to create classes'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pretty Breaks**: This mode is the only classification that doesn''t strictly
    create the specified number of classes, but tries to find pretty class breaks
    instead'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Besides using color to distinguish between the different temperature values,
    we can also use size. By setting the **Size scale** **field** field in the **Advanced**
    tab to **T_F_MEAN**, as shown in the following screenshot, all point symbols will
    be scaled so that locations with higher mean temperatures are displayed with a
    bigger symbol.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using **Size scale field** , we can make the size of point symbols or the width
    of line symbols responsive to a certain attribute value. Note that we can choose
    between scaling the area or the diameter of a point symbol depending on the nature
    of the values. Similarly, there is also a **Rotation field** option, which allows
    us to rotate point symbols. The expected input is in degrees from 0 to 360 with
    0 pointing towards the north.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a graduated style with size-scaling](img/7488_05_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot shows the results of using a **Graduated renderer**
    option with four classes using the **Pretty Breaks** classification mode and a
    **Size scale field** option, as shown in the preceding screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a graduated style with size-scaling](img/7488_05_02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
- en: Using categorized styles
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just as graduated styles are very useful to visualize numeric values, categorized
    styles are great for text values, or more generally speaking, for all kinds of
    values on a nominal scale. A good example for this kind of data can be found in
    the `trees.shp` file in our sample data. For each area, there is a **VEGDESC**
    value that describes the type of forest found there. Using a categorized style,
    we can very easily generate a style with one symbol for every unique value in
    the **VEGDESC** column as shown in the following screenshot.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Of course, every symbol is editable and can be customized. Just double-click
    on the symbol preview to open the **Symbol** selector dialog, which allows us
    to select and combine different symbols.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '![Using categorized styles](img/7488_05_03.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
- en: 'Once we click on **OK**, the style is applied to our trees layer to visualize
    the distribution of different tree types in the area. The map will look like the
    following screenshot:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '![Using categorized styles](img/7488_05_04.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
- en: Creating a rule-based style for road layers
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With rule-based styles, we can create a layer style with a hierarchy of rules.
    Rules can take into account anything, from attribute values to scale and geometry
    properties such as area or length. The following screenshot shows an example of
    a rule-based renderer for the `ne_10m_roads.shp` file from Natural Earth (you
    can download it from [http://www.naturalearthdata.com/downloads/10m-cultural-vectors/roads/](http://www.naturalearthdata.com/downloads/10m-cultural-vectors/roads/)).
    On the first level of rules, we distinguish between roads of **"type" = 'Major
    Highway'** and those of **"type" = 'Secondary Highway'**. The next level of rules
    handles scale-dependence. To add this second layer of rules, we can use the **Refine
    current rules** button and select **Add scales to rule**. We simply input one
    or more scale values at which we want the rule to be split.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are no symbols specified on the first rule level. If we would have symbols
    specified on the first level as well, the renderer would draw two symbols over
    each other. While this can be useful in certain cases, we don't want this effect
    now. Symbols can be deactivated in the Rule properties, which are accessible by
    double-clicking on the rule or clicking on the edit button below the rule's tree
    view (the button between the plus and minus buttons).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a rule-based style for road layers](img/7488_05_05.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
- en: In the following screenshot, we can see the scale rules in action. While the
    left-hand side shows a simplified version with thin grey lines for secondary highways,
    the right-hand side version shows wider, white roads with grey outlines.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a rule-based style for road layers](img/7488_05_06.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can download the symbols used in this style by going to **Settings** |
    **Style Manager** | **Share** | **Import from**. The URL is [https://raw.github.com/anitagraser/QGIS-resources/master/symbols/osm_symbols.xml](https://raw.github.com/anitagraser/QGIS-resources/master/symbols/osm_symbols.xml).
    Paste the URL in the **Location** textbox, click on **Fetch Symbols**, then on
    **Select all**, and finally on **Import**. The dialog will look like the following
    screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a rule-based style for road layers](img/7488_05_07.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: Labeling
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can activate labeling by going to **Layer Properties** | **Labels**, checking
    **Label this layer with**, and selecting the attribute field that we want to use
    for the labels. This is all we need to do to display labels with default settings.
    While default labels are great for a quick preview, we usually want to customize
    the labels if we create visualizations for reports or stand-alone maps.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'Using **Expressions** (the button that is right beside the attribute drop-down
    list), we can format the label text to suit our needs. For example, the **NAME**
    field in our sample `airports.shp` file contains text in uppercase. To display
    the airport names in mixed case instead, we can set the expression `title(NAME)`,
    which will reformat the name text in title case. We can also use multiple fields
    to create the label, for example, combining name and elevation in brackets using
    the concatenation operator `||` as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '`title(NAME) || '' ('' || "ELEV" || '')''`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'Note the use of simple quotation marks around text such as `'' (''` and double
    quotation marks around field names such as `"ELEV"`. The dialog will look like
    the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Labeling](img/7488_05_08a.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: 'The big preview area at the top of the dialog titled **Text/Buffer sample**
    shows a preview of the current settings. The background color can be adjusted
    to test readability on different backgrounds. Under the preview area, we find
    the following different label settings:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '**Text**: Besides changing the font style, size, color, and transparency, we
    can also modify letter and word spacing as well as the blend mode, which works
    like the layer blending mode we covered in [Chapter 2](ch02.html "Chapter 2. Viewing
    Spatial Data"), *Viewing Spatial Data*. Note the column of buttons on the right-hand
    side of every setting. Clicking on these buttons allows us to create so-called
    data-defined overrides. These can be used, for example, to define different label
    colors or to vary label size depending on an individual feature''s attribute value
    or an expression.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Formatting**: Here we can enable multiline labels by specifying which characters
    to wrap on. Additionally, we can control **line height** and **alignment**. We
    can also add a symbol that displays the line''s digitizing direction to the label.
    Finally, the **Formatted numbers** option offers a shortcut to format numeric
    values to a certain number of decimal places.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Buffer**: We can adjust the buffer size, color and transparency, as well
    as the pen join style, and blending mode. With transparency and blending, we can
    improve label readability without blocking out the underlying map too much.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Background**: This allows us to add a background shape in the form of a rectangle,
    square, circle, ellipsoid, or an SVG. SVG backgrounds are great to create effects
    such as highway shields.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Shadow**: This makes it possible to add a shadow to labels. We can control
    everything from shadow direction to color, blur, size, and transparency.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Placement**: The available automatic label placement options depend on the
    layer geometry type. For point layers, we can choose between the following:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The flexible **Around point** option tries to find the best position for labels
    by distributing them around the points without overlaps. As you can see in the
    following screenshot, some labels are put to the upper-right corner of their point
    symbol while others appear at different positions in the lower-left (for example,
    **Anchorage Intl (129)**) or lower-right (for example, **Merrill Fld (123)**)
    corners.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Offset from point** option forces all labels to a certain position; for
    example, all labels can be placed above their point symbol.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows airport labels with a 50 percent transparent
    **Buffer** and **Drop Shadow** placed using **Around point** and a **Label distance**
    of 1 mm:'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Labeling](img/7488_05_08.jpg)'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'For line layers, we can choose from the following:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Parallel** for straight labels that are rotated according to the line orientation'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Curved** for labels that follow the shape of the line'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Horizontal** for labels that keep a horizontal orientation regardless of
    the line orientation'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For further fine-tuning, we can define whether the label should be placed **Above**
    **line**, **One line**, or **Below line**, and how far above and below using **Label
    distance**.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following example shows labels with road shields. You can download a blank
    road shield SVG from [http://upload.wikimedia.org/wikipedia/commons/c/c3/Blank_shield.svg](http://upload.wikimedia.org/wikipedia/commons/c/c3/Blank_shield.svg).
    Note how only Interstates are labeled. This can be achieved using the following
    labeling expression:'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`CASE WHEN "level" = ''Interstate'' THEN name END`'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The labels are positioned using the **Horizontal** option. Additionally, **Merge
    connected lines to avoid duplicate labels** (in the Rendering section) and **Suppress
    labeling of features smaller than** are activated; for example, 5 mm helps to
    avoid clutter by not labeling pieces of road that are shorter than 5 mm at the
    current scale.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Labeling](img/7488_05_09.jpg)'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: To set up the road shield, go to the **Background** section and select the blank
    shield SVG from the folder you downloaded it to. To make sure that the label fits
    nicely inside the shield, we additionally specify the **Size type** field as a
    buffer with a **Size** of 1 mm, which makes the shield a little bigger than the
    label it contains.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you click on **Apply** now, you will notice that the labels are not centered
    perfectly inside the shields. To fix that, we apply a small **Offset** in the
    **Y** direction to the shield position, as shown in the following screenshot.
    Additionally, I recommend to deactivate the label **Buffer** as it tends to block
    out parts of the shield, and we don't need it anyway.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Labeling](img/7488_05_10.jpg)'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'For polygon layers, the options are as follows:'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Offset from centroid**, which uses the polygon centroid as an anchor and
    works like **Offset from point** for point layers'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Around centroid** works in a manner similar to **Around point**'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Horizontal** places a horizontal label somewhere inside the polygon, independent
    of the centroid'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Free** fits a freely rotated label inside the polygon'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Using perimeter** places the label on the polygon outline'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows lake labels (`lakes.shp`) using the **Multiple
    lines** feature wrapping on the empty space character and positioned using the
    **Free** option:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Labeling](img/7488_05_11.jpg)'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Tip
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: By default, QGIS avoids overlapping labels, but for debug purposes, it can be
    useful to force **Show all labels (including colliding labels)** using the options
    in the Rendering section.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Besides automatic label placement, we also have the option to use data-defined
    placement to position labels exactly where we want them to be. In the labeling
    toolbar, we find tools to move and rotate labels by hand. They are only active
    and available for layers that have data-defined placement for at least X and Y
    coordinates set up. To start using the tools, we can simply add three new columns,
    `label_x`, `label_y`, and `label_rot` to, for example, the `airports.shp` file.
    Then, we can specify these columns in data-defined settings by pressing the buttons
    beside **Offset X, Y** and **Rotation**. We don't have to enter any values in
    the attribute table right now. The labeling engine will check for values, and
    if it finds the attribute fields empty, it will simply place the labels automatically.
    By specifying data-defined placement, the labeling toolbar's tools are now available
    (note that the editing mode has to be turned on), and we can use the tools to
    move and rotate any of the labels on the map. The changes are written back to
    the attribute table. Try moving some labels, especially where they are placed
    closely together, and watch how the automatically placed labels adapt to your
    changes.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Rendering**: This allows us to define **scale-based visibility** limits to
    display labels only at certain scales and **pixel size-based visibility** to hide
    labels for small features. Here, we can also tell the labeling engine to **show
    colliding labels,** which are normally hidden by default.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing print maps
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In QGIS, print maps are designed in the print composer. A QGIS project can contain
    multiple composers, so it makes sense to pick descriptive names. Compositions
    are saved automatically whenever we save the project. To see a list of all the
    compositions available in a project, go to **Project** | **Composer Manager**.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: 'We can open a new composer by going to **Project** | **New Print Composer**
    or by using *Ctrl* + *P*. The composer window consists of the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: A preview area for the map composition displaying a blank page on start
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Panels for configuring the **Composition**, **Item properties**, and **Atlas
    generation**, as well as a **Command history** panel for quick undo and redo
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Toolbars for managing, saving and exporting compositions, navigating in the
    preview area, as well as adding and arranging different composer items
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Composition** panel gives us access to the paper options such as size,
    orientation, and number of pages. It is also the place to configure snapping behavior
    and output resolution.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: First, we add a map item to the paper using the **Add new map** button, or by
    going to **Layout** | **Add Map** and drawing the map rectangle onto the paper.
    Click on the paper, keep the mouse button pressed down, and drag the rectangle
    open. We can move, resize, and zoom the map using the mouse and the **Select/Move
    item** tools. Alternatively, it is also possible to configure all map settings
    in the **Item Properties** panel.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: The **Item Properties** panel content depends on the currently selected composition
    item. If a map item is selected, we can adjust the map's **Scale** and **Extents**
    as well as the **Position and size** tool of the map item itself. At a **Scale**
    of 10,000,000, we can more or less fit Alaska on an A4 paper. To move the area
    that is displayed within the map item, we can use the **Move item content** tool.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: After the map looks like we want it to, we can add a scale bar using the **Add
    new scalebar** button or by going to **Layout** | **Add Scalebar** and clicking
    on the map. The **Item Properties** panel now displays the scalebar's properties
    similar to what you can see in the following screenshot. Since we can add multiple
    map items to one composition, it is important to specify which map the scale belongs
    to. The second main property is the scalebar style, which allows us to choose
    between different scalebar types or a **Numeric** type for a simple textual representation
    such as 1:10,000,000\. Using the **Units** properties, we can convert the map
    units in feet or meters to something more manageable, such as miles or kilometers.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: The **Segments** properties control the number of segments and the size of a
    single segment in the scalebar. Further, the properties control the scalebar's
    color, font, background, and so on.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: North arrows can be added to a composition using the **Add Image** button or
    by going to **Layout** | **Add image** and clicking on the paper. It might take
    a while for the **Item Properties** panel to update while QGIS loads the previews
    of the images in the SVG folder. Pick a north arrow from the list of images shipped
    with QGIS or select your own SVG. Further map decorations such as arrows or rectangle,
    triangle, and ellipse shapes can be added using the appropriate toolbar buttons
    **Add Arrow**, **Add Rectangle**, and so on.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '![Designing print maps](img/7488_05_12.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: Maps that show an area close up are often accompanied by a second map that tells
    the reader where the area is located in a larger context. To create such an overview
    map, we add a second map item and activate its **Overview** option. By setting
    the **Overview frame**, we can define which detail map's extent should be highlighted.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every map item in a composition can display a different combination of layers.
    Generally, map items in composer are synced with the map in the main QGIS window.
    So, if we turn a layer off in the main window, it also gets removed from the print
    composer map. But, we can stop this automatic synchronization by enabling **Lock
    layers** for a map item in the map item's properties.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: 'Other common map features are grids and coordinate frames. Grids can be enabled
    for any map item. We can choose between a normal **Solid** grid or **Crosses**
    only. **Interval** and **Offset** values have to be specified in map units. Additionally,
    we can activate a value of **Zebra** for the **Frame style** and **Draw coordinates**
    inside or outside the frame, as shown in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![Designing print maps](img/7488_05_13.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: Legends are another vital map element. We can use the **Add new legend** button
    or go to **Layout** | **Add legend** to add a default legend with entries for
    all currently visible map layers. Legend entries can be reorganized, edited, and
    removed in the Legend items' properties. Using the **Wrap text on** option, we
    can split long labels on multiple rows as shown in the following screenshot. Additionally,
    the legend in this example is divided into four columns. By default, QGIS tries
    to keep all entries of one layer in a single column, but we can override this
    behavior be enabling **Split layers**.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'To add text to the map, we can use the **Add new label** button or go to **Layout**
    | **Add label**. Simple labels display all text using the same font. By enabling
    **Render** as HTML, we can create more elaborate labels with headers, lists, different
    colors, and highlights in bold or italics using the normal HTML notation, for
    example:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Labels can also contain expressions such as:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '`[% $now %]` to insert the current timestamp'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[% $page %] of [% $numpages %]` to insert page numbers in compositions with
    multiple pages'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Even more advanced text areas can be added using the **Add html frame** button.
    We can point the item's URL reference to any HTML page on our local machines or
    online, and the content will be displayed on the composer page.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '![Designing print maps](img/7488_05_14.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
- en: To add additional details to the map, the composer also offers the possibility
    to add an attribute table to the composition using the **Add attribute table**
    button or by going to **Layout** | **Add attribute table**. By enabling **Show
    only visible features**, we can filter the table and display only relevant results.
    Sorting and renaming of columns is possible via the **Attributes…** button.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the **Atlas generation** panel enables us to create a series of maps
    using one print composition. The tool will create one map for every feature in
    the **Coverage layer** dropdown we define in the atlas configuration. Features
    in the Coverage layer can be displayed like regular features or hidden by enabling
    **Hidden coverage layer**. **Feature sorting** and **Feature filtering** make
    it possible to further fine-tune the results.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Using the **Fixed scale** option, all maps will be rendered using the same scale.
    If we need more flexible output, we can switch to the **Margin around feature**
    option instead, which zooms to every Coverage layer feature and renders it in
    addition to the specified margin surrounding area. The **Output** field can be
    one image or PDF for each Coverage layer feature or a multipage PDF by enabling
    **Single file export** when possible before going to **Composer** | **Export as
    PDF**.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**固定比例**选项，所有地图都将使用相同的比例渲染。如果我们需要更灵活的输出，我们可以切换到**边缘周围功能**选项，该选项将缩放到每个覆盖层特征，并在指定的边缘周围区域渲染其外。**输出**字段可以是每个覆盖层特征的图像或PDF，或者通过在进入**作曲家**
    | **导出为PDF**之前启用**单文件导出**，可以生成多页PDF。
- en: '![Designing print maps](img/7488_05_15.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![设计打印地图](img/7488_05_15.jpg)'
- en: Summary
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we had a closer look into how we can create some more complex
    maps using advanced vector layer styles such as the categorized or rule-based
    style. We also covered the automatic and manual feature labeling options available
    in QGIS. This chapter also showed how to create printable maps using print composer,
    and introduced the Atlas functionality for creating map books. Congratulations!
    Over the previous chapters, you have learned how to install and use QGIS to create,
    edit, and analyze spatial data and how to present it in an effective manner.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们更深入地探讨了如何使用高级矢量图层样式，如分类样式或基于规则的样式来创建一些更复杂的地图。我们还介绍了QGIS中可用的自动和手动特征标签选项。本章还展示了如何使用打印作曲家创建可打印的地图，并介绍了用于创建地图集的Atlas功能。恭喜！在之前的章节中，你已经学习了如何安装和使用QGIS来创建、编辑、分析空间数据，以及如何有效地展示它。
