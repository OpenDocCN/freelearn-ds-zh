["```py\n./mapdql mapd -u mapd -p {Instance-ID}\n```", "```py\nconda install -c conda-forge pymapd\n```", "```py\npip install pymapd\n```", "```py\nfrom pymapd import connect\nconnection = connect(user=\"mapd\", password= \"{password}\", \n     host=\"{my.host.com}\", dbname=\"mapd\")\ncursor = connection.cursor()\n```", "```py\nconnection = connect(user=\"mapd\", password= \"i-0ed5ey62se2w8eed3\", \n  host=\"ec2-54-212-133-87.us-west-2.compute.amazonaws.com\", dbname=\"mapd\")\n```", "```py\nfrom pymapd import connect\nconnection = connect(user=\"mapd\", password= \"{password}\", \n     host=\"{my.host.com}\", dbname=\"mapd\")\ncursor = connection.cursor()\nsql_statement = \"\"\"SELECT name FROM county;\"\"\"\ncursor.execute(sql_statement)\nresults = list(cursor)\nfor result in results:\n    print(result[0])\n```", "```py\nfrom pymapd import connect\nconnection = connect(user=\"mapd\", password= \"{password}\", \n     host=\"{my.host.com}\", dbname=\"mapd\")\ncursor = connection.cursor()\ncreate = \"\"\"CREATE TABLE county ( id integer NOT NULL, \n  name VARCHAR(50), statefips VARCHAR(3), \n  stpostal VARCHAR(3), geom MULTIPOLYGON );\n\"\"\"\ncursor.execute(create)\nconnection.commit()\n```", "```py\nfrom pymapd import connect\nconnection = connect(user=\"mapd\", password= \"{password}\", \n     host=\"{my.host.com}\", dbname=\"mapd\")\ncursor = connection.cursor()\ncreate = \"\"\"CREATE TABLE address ( id integer NOT NULL PRIMARY KEY, \n  address VARCHAR(50), geom Point );\n\"\"\"\ncursor.execute(create)\nconnection.commit()\n```", "```py\nfrom pymapd import connect\nimport shapefile\nconnection = connect(user=\"mapd\", password= \"{password}\", \n     host=\"{my.host.com}\", dbname=\"mapd\")\nimport shapefile\nimport pygeoif\ncursor = connection.cursor()\ninsert = \"\"\"INSERT INTO county\n     VALUES ({cid},'{name}','12','FL','{geom}');\n\"\"\"\ncountyfile = r'FloridaCounties.shp'\ncounty_shapefile = shapefile.Reader(countyfile)\ncounty_shapes = county_shapefile.shapes()\ncounty_records = county_shapefile.records()\nfor count, record in enumerate(county_records):\n    name = record[3]\n    county_geo = county_shapes[count]\n    gshape = pygeoif.Polygon(pygeoif.geometry.as_shape(county_geo))\n    geom = gshape.wkt\n    insert_statement = insert.format(name=name, geom=geom,cid=count+1)\n    cursor.execute(insert_statement)\n```", "```py\nimport pyarrow as pa\nimport pandas as pd\nfrom pymapd import connect\nimport shapefile\nconnection = connect(user=\"mapd\", password= \"{password}\", \n     host=\"{my.host.com}\", dbname=\"mapd\")\ncursor = connection.cursor()\ncreate = \"\"\"CREATE TABLE juneau_addresses ( \n  LON FLOAT, LAT FLOAT, \n  NUMBER VARCHAR(30),STREET VARCHAR(200) );\n\"\"\"\ncursor.execute(create)\ndf = pd.read_csv('city_of_juneau.csv')\ntable = pa.Table.from_pandas(df)\nprint(table)\nconnection.load_table_arrow(\"juneau_addresses\", table)\n```", "```py\nimport pymapd\nfrom pymapd import connect\nconnection = connect(user=\"mapd\", password= \"{password}\", \n     host=\"{my.host.com}\", dbname=\"mapd\")\nimport time\npoint = \"POINT(-80.896146 27.438610)\"\ncursor = connection.cursor()\nprint(time.time())\nsql_statement = \"\"\"SELECT name FROM county where ST_Contains(geom,'{0}');\"\"\".format(point)\ncursor.execute(sql_statement)\nprint(time.time())\nresult = list(cursor)\nprint(result)\nprint(time.time())\n```"]