- en: 6 Anonymizing and Pseudonymizing your Data in Power BI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6 在 Power BI 中匿名化和伪匿名化您的数据
- en: It happens very often to those who develop a specific software product for a
    client to want to *repackage* it and sell it to another client who is interested
    in similar features. However, if you want to show a few screenshots of the software
    in a demo to the new client, you should avoid showing any data that might be sensitive.
    Getting in there and trying to mask the data from a copy of the original software
    database by hand was definitely one of the tasks the poor hapless developer found
    themselves having to do in the past, maybe even a few days before the demo.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对于为特定客户开发软件产品的开发者来说，经常发生的情况是他们想要**重新包装**该软件并将其出售给对类似功能感兴趣的另一个客户。然而，如果您想向新客户展示一些软件的演示截图，您应该避免展示任何可能敏感的数据。手动进入原始软件数据库的副本并尝试屏蔽数据，无疑是那些可怜的开发者在过去不得不做的任务之一，也许甚至在演示前几天。
- en: The scenario described does not require data to be shared with a third-party
    recipient but aims to successfully demo a product to the customer by displaying
    like-real data. Therefore, there is no concern about a possible brute force attack
    by professional analysts with the goal of deriving the original data prior to
    the de-identification operation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 描述的场景不需要将数据与第三方接收者共享，而是旨在通过显示类似真实的数据来成功向客户演示产品。因此，没有必要担心专业分析师可能进行的暴力破解攻击，其目的是在去标识化操作之前推导出原始数据。
- en: Things definitely change when you need to share an entire dataset with a third-party
    recipient. The issue has become more sensitive since 2018, especially in Europe,
    where the need to give more attention to data privacy and **personally identifiable**
    **information** (**PII**) has become imperative for companies to comply with the
    requirements of the **General Data Protection Regulation** (**GDPR**).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当您需要与第三方接收者共享整个数据集时，情况肯定会发生变化。自 2018 年以来，这个问题变得更加敏感，尤其是在欧洲，因为公司必须更加关注数据隐私和**个人可识别信息**（PII），以符合**通用数据保护条例**（GDPR）的要求。
- en: The goal of this chapter is to introduce de-identification techniques using
    **Python** or **R** scripts that can help the **Power BI** developer prevent a
    person's identity from being linked to the information shown on the report.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是介绍使用 **Python** 或 **R** 脚本的去标识化技术，这些技术可以帮助 **Power BI** 开发者防止将个人的身份与报告上显示的信息联系起来。
- en: 'In this chapter, you will learn the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下内容：
- en: De-identifying data
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 去标识化数据
- en: Anonymizing data in Power BI
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Power BI 中匿名化数据
- en: Pseudonymizing data in Power BI
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Power BI 中伪匿名化数据
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter requires you to have a working Internet connection and **Power
    BI Desktop** already installed on your machine. You must have properly configured
    the R and Python engines and IDEs as outlined in *Chapter 2*, *Configuring R with
    Power BI*, and *Chapter 3*, *Configuring Python with Power BI*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您拥有一个有效的互联网连接，并且**Power BI Desktop**已经安装在本机上。您必须已按照第 2 章、*配置 Power BI 中的
    R* 和第 3 章、*配置 Power BI 中的 Python* 中概述的方式正确配置了 R 和 Python 引擎以及 IDE。
- en: De-identifying data
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 去标识化数据
- en: '**PII**, also called **personal information** or **personal data**, is any
    information relating to an identifiable person. There are two types of PII – *direct*
    and *indirect*. Examples of **direct identifiers** are your name, your address,
    a picture of you, or an RFID (Radio Frequency Identification) associated with
    you. **Indirect identifiers**, on the other hand, are all those pieces of information
    that don''t explicitly refer to you as a person, but somehow make it easier to
    identify you. Examples of indirect identifiers are your license plate number,
    your bank account number, the link to your profile on a social network, or your
    place of work.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**PII**（个人可识别信息），也称为**个人信息**或**个人数据**，是指与可识别个人相关的任何信息。PII 有两种类型——*直接*和*间接*。**直接标识符**的例子包括您的姓名、您的地址、您的照片或与您关联的
    RFID（无线电频率识别）。另一方面，**间接标识符**是所有那些不明确指明您作为个人的信息，但以某种方式使识别您变得更容易的信息。间接标识符的例子包括您的车牌号码、您的银行账户号码、您在社交网络上的个人资料链接或您的工作地点。'
- en: The practice of **de-identifying** data is to manipulate PPIs so that it is
    no longer possible to identify the person who generated them.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**去标识化**数据的做法是操纵 PPI（个人可识别信息）以便无法再识别生成它们的人。'
- en: There are two options for handling direct and indirect personal identifiers
    – either you decide to destroy them completely, or you decide to keep them separated
    from the rest of the data, implementing security measures to prevent anyone from
    re-identifying the data subject. But let's first explore what some of the most
    common de-identification techniques are.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 处理直接和间接个人标识符有两种选择——要么你决定完全销毁它们，要么你决定将它们与数据的其他部分分开，实施安全措施以防止任何人重新识别数据主体。但让我们首先探索一些最常见的去标识化技术。
- en: De-identification techniques
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 去标识化技术
- en: '**De-identification** is a process that is invisible to end users. After doing
    a careful study with a team of analysts, generally it is the data manager (or
    the person acting on their behalf) who decides what information should be de-identified.
    In the next sections, we will discuss the most commonly used de-identification
    techniques.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**去标识化**是一个对最终用户不可见的过程。经过与一组分析师的仔细研究后，通常是由数据管理员（或代表他们行事的人）决定哪些信息应该被去标识化。在接下来的章节中，我们将讨论最常用的去标识化技术。'
- en: Information removal
  id: totrans-17
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 信息删除
- en: 'The simplest form of de-identification is to remove sensitive information from
    the dataset:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的去标识化形式是从数据集中删除敏感信息：
- en: '![Figure 6.1 – Anonymization, information removal](img/file157.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1 – 匿名化，信息删除](img/file157.png)'
- en: Figure 6.1 – Anonymization, information removal
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – 匿名化，信息删除
- en: It is clear that one of the disadvantages of this simplistic approach could
    be that the final dataset no longer conforms to the schema expected by the application
    that must consume it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，这种简单方法的缺点之一可能是最终数据集不再符合必须消费它的应用程序预期的模式。
- en: Data masking
  id: totrans-22
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据掩码
- en: '**Data masking** hides information that users with specific roles shouldn''t
    see. It could consist of modifying data using word or character substitution.
    For example, you can replace a value character with a symbol, such as `*` or `x`.
    The following is a typical example of data masking:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据掩码**隐藏了特定角色的用户不应看到的信息。这可能包括使用单词或字符替换修改数据。例如，你可以用一个符号，如`*`或`x`来替换一个值字符。以下是一个典型的数据掩码示例：'
- en: '![Figure 6.2 – Anonymization, data masking](img/file158.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图6.2 – 匿名化，数据掩码](img/file158.png)'
- en: Figure 6.2 – Anonymization, data masking
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 – 匿名化，数据掩码
- en: Keep in mind that if the readable domain name in the email address is not public,
    but belongs to a recognizable legal entity, the data masking applied does not
    comply with the GDPR rules, as the workplace becomes recognizable.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果电子邮件地址中可读的域名不是公开的，而是属于一个可识别的法律实体，那么应用的数据掩码不符合GDPR规则，因为工作场所变得可识别。
- en: Some products include **dynamic data masking** solutions out of the box. These
    mask or block sensitive information to users based on their role, location, and
    privileges.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一些产品自带**动态数据掩码**解决方案。这些根据用户的角色、位置和权限屏蔽或阻止敏感信息。
- en: '**Note**'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**'
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For example, **Microsoft SQL Server** and **Azure SQL Database** provide dynamic
    data masking as a solution to avoid exposing sensitive data to unauthorized users.
    The data in the database is not changed, as masking rules are applied in the query
    results.
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 例如，**Microsoft SQL Server**和**Azure SQL Database**提供动态数据掩码作为避免向未经授权的用户暴露敏感数据的解决方案。数据库中的数据没有改变，因为掩码规则是在查询结果中应用的。
- en: Data swapping
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据交换
- en: '**Data swapping** consists of shuffling the values of a column containing sensitive
    data for the entire dataset. For example, if you have a column containing an individual''s
    date of birth, this can very well be anonymized using the swapping technique with
    very good results.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据交换**是指在整个数据集中对包含敏感数据的列的值进行洗牌。例如，如果你有一个包含个人出生日期的列，这完全可以使用交换技术匿名化，并取得非常好的效果。'
- en: Generalization
  id: totrans-33
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 泛化
- en: '**Generalization** consists of replacing point values with other values that
    indicate a broader category, to which the initial value belongs. For example:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**泛化**是指用表示更广泛类别的其他值替换点值，该类别包含初始值。例如：'
- en: An *age* of `25` can be transformed in the values `>=18`, or *between 18 and
    30*.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`25`岁的*年龄*可以转换为`>=18`，或*在18到30岁之间*。
- en: A *birth date*, like `04/11/1989`, can be replaced by the *year of birth* `1989`.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个像`04/11/1989`这样的*出生日期*可以被替换为*出生年份* `1989`。
- en: A *postal zip code* can be replaced by a broader *regional zip code*.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*邮政编码*可以被更广泛的*区域邮政编码*所替代。
- en: Data perturbation
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据扰动
- en: '**Data perturbation** is a technique that replaces original values by adding
    some random noise or creating synthetic data. This transformation results in a
    loss of information that can make the data itself useless.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据扰动**是一种技术，通过添加一些随机噪声或创建合成数据来替换原始值。这种转换导致信息丢失，使得数据本身变得无用。'
- en: Tokenization
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 令牌化
- en: '**Tokenization** is a technique that replaces original sensitive values with
    a randomly generated alphanumeric value, called a **token**. Completely random
    tokens offer the highest security, as the content cannot be re-engineered. There
    is no mathematical algorithm behind the scenes to get the original value back
    with an inverse transformation. Therefore, the association between the token and
    original value is generally maintained in a secured database, and tokens are usually
    generated by specific token servers. Only the token server talks to the token
    database.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**令牌化**是一种技术，用随机生成的字母数字值替换原始敏感值，称为**令牌**。完全随机的令牌提供最高的安全性，因为内容无法被重新工程。背后没有数学算法可以通过逆变换来获取原始值。因此，令牌与原始值之间的关联通常在安全的数据库中维护，并且令牌通常由特定的令牌服务器生成。只有令牌服务器与令牌数据库通信。'
- en: Hashing
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 哈希
- en: '**Hashing** is a technique similar to tokenization, with the difference that
    the resulting *token*, called a **hash value**, is generated by a mathematical
    algorithm, has a fixed length, and is almost impossible to transform back to the
    original value. If you use the same hashing function with the same input value,
    you’ll always have the same hash value as output. Often, additional text called
    *salt* is added to the input value to make it more complicated for a brute force
    attack to reverse engineer the hash value.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**哈希**是一种类似于令牌化的技术，区别在于生成的*令牌*，称为**哈希值**，是由数学算法生成的，具有固定长度，几乎不可能转换回原始值。如果你使用相同的哈希函数和相同的输入值，你总是会得到相同的哈希值作为输出。通常，还会添加一些额外的文本，称为*盐*，以使输入值更复杂，从而使得暴力攻击逆向工程哈希值更加困难。'
- en: Encryption
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 加密
- en: Like hashing, **encryption** uses a mathematical algorithm to transform sensitive
    data. As opposed to hashing, it is a two-way transformation that needs a decryption
    key to reverse engineer an encrypted value. Using an encrypted mapping table can
    boost performance when decrypting data.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 与哈希类似，**加密**使用数学算法来转换敏感数据。与哈希不同，它是一种双向转换，需要解密密钥来逆向工程加密值。使用加密映射表可以在解密数据时提高性能。
- en: Most productivity tools and database systems are now available with end-to-end
    encryption built-in.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数生产力工具和数据库系统现在都内置了端到端加密功能。
- en: '**Note**'
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**'
- en: ''
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Two examples are the Microsoft SQL Server or Azure SQL databases, which have
    the *Always Encrypted* feature out of the box. It works by encrypting the data
    on the client side and hiding the encryption keys from the server. Even database
    administrators cannot read information stored in an encrypted column without having
    explicit permission.
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 两个例子是Microsoft SQL Server或Azure SQL数据库，它们自带了*始终加密*功能。它通过在客户端加密数据并隐藏服务器上的加密密钥来实现。即使数据库管理员在没有明确权限的情况下也无法读取加密列中存储的信息。
- en: Now that you have an idea of the most common transformations used to de-identify
    sensitive information, you will see how they are used in anonymization and pseudonymization.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了用于去识别敏感信息最常见的转换方法，你将看到它们在匿名化和匿名化中的应用。
- en: Understanding pseudonymization
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解匿名化
- en: '**Pseudonymization** is a de-identification process that separates direct or
    indirect identifiers from the rest of the data, taking care to ensure the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**匿名化**是一种去识别过程，它将直接或间接的标识符与数据的其他部分分开，同时注意确保以下内容：'
- en: Replacing one or more PIIs with **pseudonyms** (a random actual name, but more
    often a random numeric or alphanumeric identifier), ensuring the non-identification
    of the subject. Analytical correlations are guaranteed thanks to the fact that
    the pseudonym is always the same for the same input. So, analysis of pseudonymized
    data doesn’t lose value.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用**假名**（一个随机真实姓名，但更常见的是随机数字或字母数字标识符）替换一个或多个PII，确保主体不被识别。由于假名对于相同的输入始终相同，因此保证了分析相关性。因此，对匿名化数据的分析不会失去价值。
- en: Not destroying the original PIIs, making sure that the entire dataset can be
    reconstructed (re-identification of the data) using, for example, lookup tables
    between PIIs and pseudonyms, or digital secret keys to pseudonymize inputs into
    the same output.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不销毁原始PII，确保整个数据集可以通过，例如，PII和化名之间的查找表或数字密钥来重建（数据重新识别）。
- en: Taking appropriate technical and organizational measures to make it difficult
    to trace the identity of an individual from the remaining data.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 采取适当的技术和组织措施，使从剩余数据中追踪个人的身份变得困难。
- en: During this process, some de-identification transformations can be made to some
    PIIs that you want to keep in the accessible data. For example, you could replace
    PII values with similar-looking pseudonyms, making sure to keep track of the replacement
    in order to guarantee the re-identification.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在此过程中，可以对一些你希望在可访问数据中保留的PII进行去标识化转换。例如，你可以用看起来相似的化名替换PII值，同时确保跟踪替换，以保证重新识别。
- en: 'An example of a pseudonymization process is shown in *Figure 6.2*, where a
    lookup table is used to guarantee the mapping for the inverse transformation:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名化过程的示例显示在*图6.2*中，其中使用查找表来保证逆转换的映射：
- en: '![Figure 6.3 – The process of pseudonymization](img/file159.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图6.3 – 匿名化过程](img/file159.png)'
- en: Figure 6.3 – The process of pseudonymization
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 – 匿名化过程
- en: 'An architecture of this type also guarantees the possibility of satisfying
    any requests for deletion of personal data by individuals (as required by GDPR)
    by meeting the following conditions:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的架构还保证了满足个人删除个人数据请求（如GDPR所要求的）的可能性，以下条件必须满足：
- en: It will be impossible to identify the subject from that moment on, just by removing
    the association related to it from the lookup table.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从那一刻起，仅通过从查找表中删除与它相关的关联，将无法识别该主体。
- en: The complete loss of statistical information useful for data analysis will be
    avoided, as it’s possible to use de-identification transformations that don’t
    erase analytical correlations.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将避免完全丢失对数据分析有用的统计信息，因为可以使用不消除分析相关性的去标识化转换。
- en: '**Important Note**'
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: ''
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Keep in mind that the moment you *permanently lose the link* between a row of
    accessible data and its respective PPIs, that row becomes *completely anonymized*,
    thus falling out of GDPR's control.
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请记住，当你**永久失去**一行可访问数据及其相应PPI之间的链接时，该行就变得**完全匿名化**，从而脱离GDPR的控制。
- en: So, we have introduced the concept of anonymization. Let's take a look at what
    this means.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们引入了匿名化的概念。让我们看看这意味着什么。
- en: What is anonymization?
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是匿名化？
- en: '**Anonymization** completely destroys direct and indirect identifiers, or destroys
    the link to their de-identified counterpart, so that there is no danger (or at
    least it is really very unlikely) that any attacker will be able to reconstruct
    the identity of the subjects to which the data refers. It has the *non-reversibility
    of the process* as its main goal. For this reason, the following applies:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**匿名化**完全销毁直接和间接标识符，或者销毁与去标识化对应方的链接，因此不存在任何危险（或者至少是非常不可能的）任何攻击者能够重建数据所涉及主体的身份。它以**过程的不可逆性**为主要目标。因此，以下适用：'
- en: '**Important Note**'
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: ''
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Anonymized data is outside the scope and control of the GDPR because anonymized
    data is no longer *personal data*.
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 匿名化数据超出了GDPR的范畴和控制，因为匿名化数据已不再是**个人数据**。
- en: The most obvious disadvantage of anonymization is that it removes significant
    value from the data involved. This is because, after the process is complete,
    it is impossible to trace the identities that generated that data. It is therefore
    advisable to assess all relevant risks before anonymizing any dataset.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名化的最明显缺点是它从涉及的数据中移除了显著的价值。这是因为，在过程完成后，无法追踪生成这些数据的人的身份。因此，在匿名化任何数据集之前评估所有相关风险是明智的。
- en: The second disadvantage of anonymization is that it usually uses randomly generated
    de-identified strings, so *some statistical information of the dataset is permanently
    lost*, making any work a data scientist would have to do futile.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名化的第二个缺点是它通常使用随机生成的去标识化字符串，因此**数据集的一些统计信息将永久丢失**，使得数据科学家所做的任何工作都变得徒劳。
- en: It may be that anonymized data can be vulnerable to **de-anonymization attacks**.
    They consist of enriching the anonymized dataset with available external information,
    thus imputing the anonymized items. These attacks are more likely to succeed,
    as the anonymized data is abundant, granular, and fairly stable over time and
    context.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名化数据可能容易受到**去匿名化攻击**的影响。这些攻击包括通过可用外部信息丰富匿名化数据集，从而推断匿名化项。由于匿名化数据丰富、粒度细、随时间和上下文相对稳定，因此这些攻击更有可能成功。
- en: 'Usually, the most adopted de-identification techniques for secure anonymization
    are as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，用于安全匿名化的最常用的去标识化技术如下：
- en: Tokenization
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 令牌化
- en: Encryption
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密
- en: Let's now see how to apply these concepts to a real case using Power BI.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何使用Power BI将这些概念应用于实际案例。
- en: Anonymizing data in Power BI
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Power BI中匿名化数据
- en: 'One of the possible scenarios that could happen to you during your career as
    a report developer in Power BI is the following. Imagine you are given an **Excel**
    dataset to import into Power BI in order to create a report to show to another
    department of your company. The Excel dataset contains sensitive personal data,
    such as names and email addresses of people who have made multiple attempts to
    pay for an order with a credit card. The following is an example of the contents
    of the Excel file:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在你作为Power BI报告开发者的职业生涯中可能会遇到以下一种可能的场景。想象一下，你被分配了一个**Excel**数据集，需要将其导入Power BI以创建一个报告展示给公司另一个部门。该Excel数据集包含敏感的个人数据，例如多次尝试用信用卡支付订单的人的姓名和电子邮件地址。以下是Excel文件内容的示例：
- en: '![Figure 6.4 – Excel data to be anonymized](img/file160.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图6.4 – 待匿名化的Excel数据](img/file160.png)'
- en: Figure 6.4 – Excel data to be anonymized
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 – 待匿名化的Excel数据
- en: You are asked to create the report while anonymizing the sensitive data.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在匿名化敏感数据的同时，你会被要求创建报告。
- en: The first thing that jumps out at you is that, not only do you have to anonymize
    the **Name** and **Email** columns, but some names or email addresses can be included
    in the text of some **Notes**. While locating email addresses is fairly easy using
    regular expressions, it is not as easy to locate person names in free text. For
    this purpose, it is necessary to adopt a technique of **natural language processing**
    (**NLP**) that goes under the name of **named entity recognition** (**NER**).
    Thanks to NER, it’s possible to identify and classify named entities (like people,
    places, and so on) in free text.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 第一眼就能注意到的是，你不仅需要匿名化**姓名**和**电子邮件**列，而且一些姓名或电子邮件地址可能包含在某些**备注**的文本中。虽然使用正则表达式定位电子邮件地址相对容易，但在自由文本中定位人名则不那么容易。为此，有必要采用一种名为**自然语言处理**（**NLP**）的技术，该技术被称为**命名实体识别**（**NER**）。多亏了NER，我们可以在自由文本中识别和分类命名实体（如人名、地点等）。
- en: The basic idea is to replace both full names and email addresses with random
    *tokens*. Depending on the analytical language used, there are different solutions
    driven by the different packages available that lead to the same result.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 基本思想是将全名和电子邮件地址都替换为随机**令牌**。根据所使用的分析语言，有不同解决方案，由不同包提供，但都导致相同的结果。
- en: Anonymizing data using Python
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Python匿名化数据
- en: Python is one of the most widely used languages for performing de-identification
    transformations in anonymization processes. There are a plethora of packages that
    implement such solutions. In particular, Microsoft released the open source package
    **Presidio** ([https://microsoft.github.io/presidio/](https://microsoft.github.io/presidio/)),
    which is to date one of the best solutions for data protection and anonymization.
    It provides quick identification and anonymization forms for entities found in
    free text and images, such as credit card numbers, names, locations, social security
    numbers, email addresses, financial data, and more. **PII recognizers** leverage
    NER, regular expressions, rule-based logic, and checksums by identifying the relevant
    context in multiple languages. Behind the scenes, Presidio adopts NLP engines
    to recognize the entities – it supports both **SpaCy** (the default one) and **Stanza**.
    One of the most interesting features of Presidio is its *extensibility*. In fact,
    it is possible to extend the Presidio Analyzer by adding *custom PII entities*
    very easily.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是在匿名化过程中执行去标识化转换最广泛使用的语言之一。有大量的包实现了这样的解决方案。特别是，微软发布了开源包 **Presidio**
    ([https://microsoft.github.io/presidio/](https://microsoft.github.io/presidio/))，迄今为止，它是数据保护和匿名化方面最好的解决方案之一。它为在自由文本和图像中发现的实体提供快速识别和匿名化形式，例如信用卡号码、姓名、位置、社会保险号码、电子邮件地址、财务数据等。**PII
    识别器** 通过在多种语言中识别相关上下文，利用 NER、正则表达式、基于规则的逻辑和校验和。幕后，Presidio 采用 NLP 引擎来识别实体——它支持
    **SpaCy**（默认）和 **Stanza**。Presidio 最有趣的功能之一是其 *可扩展性*。实际上，通过添加 *自定义 PII 实体* 可以非常容易地扩展
    Presidio 分析器。
- en: Once the sensitive entities are identified, you need to replace them with tokens.
    They are generated in Python using the `secrets` module.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦识别出敏感实体，您需要用令牌替换它们。这些令牌是在 Python 中使用 `secrets` 模块生成的。
- en: 'That said, you can find an implementation of this in the Python file, `01-anonymize-data-in-power-bi-python.py`,
    in the `Chapter06` folder of the GitHub repository that comes with this book.
    It performs the following operations:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，您可以在随书提供的 GitHub 仓库的 `Chapter06` 文件夹中的 Python 文件 `01-anonymize-data-in-power-bi-python.py`
    中找到这个实现的实现。它执行以下操作：
- en: Load the libraries needed to execute the code. You will use the `pandas` module,
    some functions from the `presidio_analyzer` and `presidio_anonymizer` modules,
    and the `secrets` module.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载执行代码所需的库。您将使用 `pandas` 模块，`presidio_analyzer` 和 `presidio_anonymizer` 模块的一些函数，以及
    `secrets` 模块。
- en: Define two custom functions, one to anonymize emails, the other to anonymize
    person names. Both use the `analyzer.analyze()` Presidio function to identify
    the entities to be anonymized and the `secrets` module to generate the tokens
    into the `anonymizer.anonymize()` function.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义两个自定义函数，一个用于匿名化电子邮件，另一个用于匿名化个人姓名。这两个函数都使用 `analyzer.analyze()` Presidio 函数来识别需要匿名化的实体，并使用
    `secrets` 模块生成令牌到 `anonymizer.anonymize()` 函数中。
- en: Initialize the main objects of the **Presidio Analyzer** and **Presidio Anonymizer**.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化 **Presidio 分析器** 和 **Presidio 匿名化器** 的主要对象。
- en: 'For each row of the dataset previously loaded in Power BI Desktop (or via the
    `pandas`’ `read_excel()` function if you want to test the code in **VSCode**),
    apply the `anonymizeEmail` function to the `Email` and `Notes` columns and apply
    the `anonymizeName` function to the `Name` and `Notes` columns. In order to apply
    a function to each individual value of a column, we adopted the `apply()` function
    followed by a construct that goes by the name of **lambda function** (introduced
    by the keyword `lambda`). It is a small function defined without a name (anonymous)
    to be used inline. Here is an example:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于之前在 Power BI Desktop 中加载的数据集的每一行（或者如果您想在 **VSCode** 中测试代码，则通过 `pandas` 的 `read_excel()`
    函数），将 `anonymizeEmail` 函数应用于 `Email` 和 `Notes` 列，并将 `anonymizeName` 函数应用于 `Name`
    和 `Notes` 列。为了将函数应用于列中的每个单独值，我们采用了 `apply()` 函数，后面跟着一个名为 **lambda 函数** 的结构（由关键字
    `lambda` 引入）。这是一个没有名称（匿名）的小函数，用于内联使用。以下是一个示例：
- en: '[PRE0]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In order to proceed, however, it is necessary to configure *a new Python Environment*.
    This is because, to date, Presidio is supported only for Python versions from
    3.6 to 3.8\. Your `pbi_powerquery_env` environment has a newer Python version
    installed, so you need to create a new environment with Python 3.8\. Once created,
    you have to install the necessary modules to run the code.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续进行，然而，有必要配置一个新的**Python 环境**。这是因为，截至目前，Presidio 仅支持 Python 3.6 到 3.8 版本。您的
    `pbi_powerquery_env` 环境安装了更新的 Python 版本，因此您需要创建一个新的环境，并使用 Python 3.8。一旦创建，您必须安装运行代码所需的模块。
- en: 'These are the steps needed to configure the new environment:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 配置新环境所需的步骤如下：
- en: Open your **Anaconda** **Prompt**.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的 **Anaconda Prompt**。
- en: 'Enter and run the following code to create the new `presidio_env` environment
    with Python 3.8:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以创建新的 `presidio_env` 环境并使用 Python 3.8：
- en: '[PRE1]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Enter and run the following code to switch to the newly created environment:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以切换到新创建的环境：
- en: '[PRE2]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Enter and run the following code to install the Presidio Analyzer:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以安装 Presidio 分析器：
- en: '[PRE3]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Enter and run the following code to install the Presidio Anonymizer:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以安装 Presidio 匿名化器：
- en: '[PRE4]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The Analyzer also installs SpaCy behind the scenes. So, you must also install
    the SpaCy’s *trained pipeline for written English text* (we choose the one for
    blogs, news, and comments) using this code:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分析器在幕后还安装了 SpaCy。因此，您还必须使用此代码安装 SpaCy 的 *训练有素的英文文本管道*（我们选择用于博客、新闻和评论的那个）：
- en: '[PRE5]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This is the largest pipeline used by SpaCy and takes up about 788 MB.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是 SpaCy 使用的最大管道，占用大约 788 MB。
- en: 'Enter and run the following code to install **pandas**:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以安装 **pandas**：
- en: '[PRE6]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you want to use pandas to directly load the Excel with Python and then test
    the code before entering it in Power BI, you’ll also need the `openpyxl` module:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想使用 pandas 直接用 Python 加载 Excel 并在将其输入 Power BI 之前测试代码，您还需要 `openpyxl` 模块：
- en: '[PRE7]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Enter and run the following code to install `matplotlib`, needed by the Power
    BI wrapper used with Python scripts:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以安装 `matplotlib`，这是与 Python 脚本一起使用的 Power BI 包装器所需的：
- en: '[PRE8]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You are now ready to apply anonymization in Power BI to the content of the `CustomersCreditCardAttempts.xlsx`
    Excel file you can find in the `Chapter06` folder.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好在 Power BI 中对 `Chapter06` 文件夹中找到的 `CustomersCreditCardAttempts.xlsx`
    Excel 文件的内容应用匿名化。
- en: 'So, let''s get started:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们开始吧：
- en: Open your Power BI Desktop. Make sure the referenced Python environment is `presidio_env`
    in the options (its home directory should be `C:\Users\<your-username>\miniconda3\envs\presidio_env`).
    Keep in mind that in case you can't find the path to a specific environment, activate
    it in the Anaconda Prompt (`conda activate <your-env>`) and then enter `where
    python`.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的 Power BI Desktop。确保引用的 Python 环境在选项中是 `presidio_env`（其主目录应为 `C:\Users\<your-username>\miniconda3\envs\presidio_env`）。请记住，如果您找不到特定环境的路径，请在
    Anaconda Prompt 中激活它（`conda activate <your-env>`），然后输入 `where python`。
- en: 'From the ribbon, click on the **Excel** icon to import data from Excel:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从功能区，点击 **Excel** 图标以从 Excel 导入数据：
- en: '![Figure 6.5 – Importing data from Excel](img/file161.png)'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 6.5 – 从 Excel 导入数据](img/file161.png)'
- en: Figure 6.5 – Importing data from Excel
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.5 – 从 Excel 导入数据
- en: From the **Open** dialog box, select the aforementioned `CustomersCreditCardAttempts.xlsx`
    file.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Open** 对话框，选择上述 `CustomersCreditCardAttempts.xlsx` 文件。
- en: 'From the **Navigator** window, select the `Customers` sheet and then click
    on **Transform Data**:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Navigator** 窗口，选择 `Customers` 工作表，然后点击 **Transform Data**：
- en: '![Figure 6.6 – Selecting the Customers sheet and clicking on Transform Data](img/file162.png)'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 6.6 – 选择 Customers 工作表并点击 Transform Data](img/file162.png)'
- en: Figure 6.6 – Selecting the Customers sheet and clicking on Transform Data
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.6 – 选择 Customers 工作表并点击 Transform Data
- en: Click on the **Transform** menu and then click on **Run Python Script**.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Transform** 菜单，然后点击 **Run Python Script**。
- en: Copy the script from the `01-anonymize-data-in-power-bi-python.py` file into
    the Python script editor and click **OK**.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `01-anonymize-data-in-power-bi-python.py` 文件中的脚本复制到 Python 脚本编辑器中，然后点击 **OK**。
- en: If Power BI needs you to provide it with data privacy information, you already
    know how to proceed based on what you've seen in *Chapter 5*, *Using Regular Expressions
    in Power BI*.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 Power BI 需要您提供数据隐私信息，您已经知道如何根据您在 *第 5 章* 中看到的，使用 Power BI 中的正则表达式来操作。
- en: 'We are only interested in the `df` dataset. So, click on its **Table** value:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只对 `df` 数据集感兴趣。因此，点击其 **Table** 值：
- en: '![Figure 6.7 – Selecting the dataset df as the result of the Python script
    transformation](img/file163.png)'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 6.7 – Python 脚本转换结果选择数据集 df](img/file163.png)'
- en: Figure 6.7 – Selecting the dataset df as the result of the Python script transformation
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.7 – Python 脚本转换结果选择数据集 df
- en: 'As you can see, person names in the `Name` and `Notes` columns and emails in
    the `Email` and `Notes` columns have been correctly anonymized:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如您所见，`Name` 和 `Notes` 列中的人名以及 `Email` 和 `Notes` 列中的电子邮件地址已经正确进行了匿名化：
- en: '![Figure 6.8 – The transformed dataset as the result of the Python script](img/file164.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.8 – Python 脚本转换结果的数据集](img/file164.png)'
- en: Figure 6.8 – The transformed dataset as the result of the Python script
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.8 – Python 脚本转换结果的数据集
- en: You can now click **Close & Apply** in the **Home** tab.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以点击 **主页** 选项卡中的 **关闭并应用**。
- en: Notice how the person name contained in the `Notes` column has also been anonymized.
    This is the result of applying NER algorithms used by the **SpaCy** engine, which
    works under the hood of Presidio.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到 `Notes` 列中包含的人名也已经进行了匿名化。这是应用 **SpaCy** 引擎使用的 NER 算法的结果，该引擎在 Presidio 的底层运行。
- en: Moreover, the de-identification technique used (tokenization) doesn’t preserve
    the statistical characteristics of the dataset, since applying the procedure to
    the same personal data does not return the same de-identified string.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，所使用的去标识化技术（分词）并不保留数据集的统计特性，因为将程序应用于相同的个人数据不会返回相同的去标识化字符串。
- en: '**Note**'
  id: totrans-137
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**'
- en: ''
  id: totrans-138
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When you publish the report for which you have anonymized the data, the corresponding
    dataset will also be published. Users who can only access the dataset (and not
    the source Excel file) *will only see the anonymized data*, without having the
    ability to learn about the associations with the original data that has been replaced.
  id: totrans-139
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当您发布已经对数据进行匿名化的报告时，相应的数据集也将被发布。只能访问数据集（而不能访问源 Excel 文件）的用户将只能看到匿名化数据，而没有能力了解被替换的原数据之间的关联。
- en: Thanks to anonymization, you can now develop your reports without having to
    worry about the danger of exposing sensitive data.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了匿名化，现在您可以在不担心暴露敏感数据风险的情况下开发您的报告。
- en: Let's see how it is possible to do the same thing in R.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在 R 中做同样的事情。
- en: Anonymizing data using R
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 R 匿名化数据
- en: You can implement a data anonymization process in R as well. As long as you
    are identifying strings using regular expressions in R, the processing is quite
    fast. However, when natural language processing techniques like NER need to be
    implemented, the most widely adopted R packages available often consist of wrappers
    of open source modules developed in other languages. For example, the **openNLP**
    R package is an interface to the **Apache OpenNLP** toolkit, based on machine
    learning algorithms written in **Java**. In order for the `openNLP` package to
    interface with **OpenNLP** software, its installation also requires as a dependency
    the `rJava` package, which enables the dialogue between the R and Java worlds.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您同样可以在 R 中实现数据匿名化过程。只要您在 R 中使用正则表达式识别字符串，处理速度就相当快。然而，当需要实现自然语言处理技术，如命名实体识别（NER）时，最广泛采用的
    R 包通常是由其他语言开发的开源模块的包装。例如，**openNLP** R 包是 **Apache OpenNLP** 工具包的接口，基于用 **Java**
    编写的机器学习算法。为了让 `openNLP` 包与 **OpenNLP** 软件接口，其安装还需要作为依赖项安装 `rJava` 包，该包使得 R 和 Java
    世界之间能够进行对话。
- en: In order to implement the same anonymization features developed in Python in
    the previous section in R, you will make use of another widely used R package
    for NLP operations called `spacyr`. This library provides a convenient R wrapper
    around the Python `spacy` module. In the previous section, you saw that the Python
    module called `presidio` installs behind the scenes the same `spacy` module used
    by `spacyr`. If you're wondering how to run Python code from an R module, remember
    that, in *Chapter 3*, *Configuring Python with Power BI*, you ran Python code
    through **RStudio** using the R package called `reticulate`. Just as `rJava` takes
    care of interfacing R with the Java VM, so `reticulate` allows R to interface
    with a Python environment and execute Python code. In a nutshell, the R code you
    are going to develop does nothing more than execute the functionality of the `spacy`
    Python module you used in the previous section.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在R中实现上一节中在Python中开发的相同匿名化功能，你将使用另一个广泛使用的R包，用于NLP操作，称为`spacyr`。这个库提供了一个方便的R包装器，围绕Python的`spacy`模块。在上一节中，你看到名为`presidio`的Python模块在幕后安装了与`spacyr`相同的`spacy`模块。如果你想知道如何从R模块中运行Python代码，请记住，在*第3章*，*配置Power
    BI中的Python*，你通过名为`reticulate`的R包使用**RStudio**运行了Python代码。正如`rJava`负责处理R与Java VM的接口一样，`reticulate`允许R与Python环境接口并执行Python代码。简而言之，你将要开发的R代码所做的不过是执行你在上一节中使用的`spacy`
    Python模块的功能。
- en: '**Note**'
  id: totrans-145
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**'
- en: ''
  id: totrans-146
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Remember that you could have used regular expressions to replace email addresses
    with dummy data. Instead, replacing person names within free text is only possible
    with an NLP function that recognizes named entities. Hence the need to use a package
    like `spacyr`.
  id: totrans-147
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 记住，你可以使用正则表达式将电子邮件地址替换为虚拟数据。相反，在自由文本中替换人名只能使用一个识别命名实体的NLP函数。因此，需要使用像`spacyr`这样的包。
- en: Just as you did in the previous section, here you will also anonymize the content
    of the Excel file, `CustomersCreditCardAttempts.xlsx`, through tokenization. Tokens
    in R will be generated using the `stringi` package.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在上一节中所做的那样，这里你也将通过分词来匿名化Excel文件`CustomersCreditCardAttempts.xlsx`的内容。在R中，将使用`stringi`包生成标记。
- en: 'That said, the R code in the `02-anonymize-data-in-power-bi-r.R` file you can
    find in the `Chapter06` folder performs the following operations:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，你可以在`Chapter06`文件夹中找到的`02-anonymize-data-in-power-bi-r.R`文件中的R代码执行以下操作：
- en: Load the libraries needed to execute the code. In particular, you will use `stringr`,
    `dplyr`, and `purrr` from the `Tidyverse` to operate data wrangling; `spacyr`
    and `stringi` are used for data anonymization.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载执行代码所需的库。特别是，你将使用`Tidyverse`中的`stringr`、`dplyr`和`purrr`进行数据处理；`spacyr`和`stringi`用于数据匿名化。
- en: Define the `anonymizeEmails` function, used to anonymize emails, to a free text.
    It uses the `spacyr` function’s `spacy_parse()` with the additional `like_email`
    attribute. As it can identify multiple email addresses into a single text, the
    `str_replace_all()` function is used to replace all the found occurrences with
    a token generated by the `stri_rand_strings` function of the `stringi` package.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义用于将电子邮件匿名化到自由文本的`anonymizeEmails`函数。它使用`spacyr`函数的`spacy_parse()`，并附加`like_email`属性。由于它可以识别单个文本中的多个电子邮件地址，因此使用`str_replace_all()`函数将所有找到的实例替换为`stringi`包的`stri_rand_strings`函数生成的标记。
- en: Define the `anonymizeNames` function, used to anonymize person names, to a free
    text. It contains more complex logic than the previous function because a person's
    name can consist of multiple tokens that are not always separated by a space (for
    example, the name `Roma Rodriguez-Bailey`). Therefore, in order to identify the
    set of all tokens referring to a single person, we must construct a regex that
    references the first and last tokens (from the previous example, `Roma.*?Bailey`),
    which is able to match the entire name. As you can see, there was no need to have
    to implement all of this logic in the previous section, because the Python Presidio
    module takes care of all of these cases.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义用于将人名匿名化到自由文本的`anonymizeNames`函数。它包含比上一个函数更复杂的逻辑，因为一个人的名字可以由多个标记组成，这些标记不一定总是由空格分隔（例如，名字`Roma
    Rodriguez-Bailey`）。因此，为了识别指向单个个人的所有标记的集合，我们必须构建一个引用第一个和最后一个标记的正则表达式（例如，`Roma.*?Bailey`），它能够匹配整个名字。正如你所看到的，在上一节中不需要实现所有这些逻辑，因为Python
    Presidio模块处理了所有这些情况。
- en: 'You must initialize `spacyr` so that it references a Python environment containing
    the `spacy` module installed. Generally, if you haven''t already installed `spacy`
    in an environment, you can use `spacyr`''s `spacy_install()` function, which sets
    up a new Python environment with everything you need to make it work properly.
    In our case, we''ve already created the Python environment, `presidio_env`, in
    the previous section, which contains both the `spacy` module and the trained `en_core_web_lg`
    model to extract language attributes using written English samples taken from
    the web. It is then enough to reference the environment `presidio_env` path in
    the `spacy_initialize()` function to correctly configure `spacyr`. Here is the
    code:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须初始化`spacyr`，使其引用一个包含已安装`spacy`模块的Python环境。通常，如果你还没有在一个环境中安装`spacy`，你可以使用`spacyr`的`spacy_install()`函数，该函数设置一个新的Python环境，包含使它正常工作的所有必需内容。在我们的案例中，我们已经在上一节中创建了Python环境`presidio_env`，其中包含`spacy`模块和用于从网络中提取语言属性的已训练的`en_core_web_lg`模型。然后，只需在`spacy_initialize()`函数中引用环境`presidio_env`的路径，就可以正确配置`spacyr`。以下是代码：
- en: '[PRE9]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you run it in RStudio, you’ll get something similar to the following message
    if all is working correctly:'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在RStudio中运行它，如果一切正常，你会得到以下类似的消息：
- en: '[PRE10]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: For each row of the dataset previously loaded in Power BI (or using the `readxl`
    package to test the code in RStudio), apply the `anonymizeEmail` function to the
    `Email` and `Notes` columns, and apply the `anonymizeName` function to the `Name`
    and `Notes` columns. In order to apply the two functions defined previously to
    each element of a column, we used the `map()` function of the `purrr` package.
    More specifically, `map_chr()` returns the outputs in a vector of strings so that
    it can replace the column content.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于之前在Power BI中加载的（或使用`readxl`包在RStudio中测试代码）数据集的每一行，将`anonymizeEmail`函数应用于`Email`和`Notes`列，将`anonymizeName`函数应用于`Name`和`Notes`列。为了将之前定义的两个函数应用于列中的每个元素，我们使用了`purrr`包的`map()`函数。更具体地说，`map_chr()`返回字符串向量的输出，以便它可以替换列内容。
- en: 'Having briefly explained what the R script does, let''s get down to business.
    In order to use the `spacyr` R package, it must be installed in the latest R engine
    (in our case, MRO 4.0.2). These are the necessary steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 简要解释了R脚本的用途后，让我们开始正事。为了使用`spacyr` R包，它必须在最新的R引擎（在我们的案例中是MRO 4.0.2）中安装。以下是必要的步骤：
- en: Open **Rstudio**, and be sure to select in the **Global Options** the most recent
    MRO engine you already installed, following the steps in *Chapter 2*, *Configuring
    R with Power BI*.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**Rstudio**，并确保在**全局选项**中按照*第2章*，*配置Power BI中的R*的步骤选择你已安装的最新MRO引擎。
- en: 'Since MRO by definition downloads new packages from a default **CRAN** (**Comprehensive
    R Archive Network**) snapshot back in time, in order to download the latest version
    of packages in `CRAN` you need to overwrite the referenced repository by running
    the following code:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于MRO按照定义会从默认的**CRAN（综合R档案网络）**快照中下载新包，为了下载`CRAN`中的最新版本包，你需要运行以下代码来覆盖引用的仓库：
- en: '[PRE11]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, install the `spacyr` package by running the following code in the console:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在控制台中运行以下代码来安装`spacyr`包：
- en: '[PRE12]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You are now ready to apply anonymization in Power BI to the content of the `CustomersCreditCardAttempts.xlsx`
    Excel file using R.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以使用R在Power BI中对`CustomersCreditCardAttempts.xlsx` Excel文件的内容进行匿名化。
- en: 'So, let’s get started:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们开始吧：
- en: Open your Power BI Desktop, and make sure the referenced R engine is your latest
    MRO version in the **Global Options**.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的Power BI桌面版，并确保在**全局选项**中引用的R引擎是最新版本的MRO。
- en: From the ribbon, click on the **Excel** icon to import data from Excel.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从功能区点击**Excel**图标以从Excel导入数据。
- en: From the **Open** dialog box, select the aforementioned `CustomersCreditCardAttempts.xlsx`
    file.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**打开**对话框中，选择上述的`CustomersCreditCardAttempts.xlsx`文件。
- en: 'From the **Navigator** window, select the **Customers** sheet and then click
    on **Transform Data**:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**导航器**窗口中，选择**客户**表，然后点击**转换数据**：
- en: '![Figure 6.9 – Selecting the Customers sheet and clicking on Transform Data](img/file165.png)'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图6.9 – 选择客户表并点击转换数据](img/file165.png)'
- en: Figure 6.9 – Selecting the Customers sheet and clicking on Transform Data
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.9 – 选择客户表并点击转换数据
- en: Click on the **Transform** menu and then click on **Run R Script**.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**转换**菜单，然后点击**运行R脚本**。
- en: Copy the script from the `02-anonymize-data-in-power-bi-r.R` file into the R
    script editor and click **OK**. Remember to change the environment path of your
    machine.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`02-anonymize-data-in-power-bi-r.R`文件中的脚本复制到R脚本编辑器中，并点击**确定**。请记住更改你机器的环境路径。
- en: If Power BI needs you to provide it with data privacy information, you already
    know how to proceed based on what you've seen in *Chapter 5*, *Using Regular Expressions
    in Power BI*.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Power BI需要你提供数据隐私信息，你根据在*第五章*中看到的，*在Power BI中使用正则表达式*，已经知道如何操作。
- en: 'We are only interested in the `df` dataset. So, click on its **Table** value:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只对`df`数据集感兴趣。因此，点击其**表**值：
- en: '![Figure 6.10 – Selecting the dataset df as a result of the R script transformation](img/file166.png)'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图6.10 – R脚本转换结果选择数据集df](img/file166.png)'
- en: Figure 6.10 – Selecting the dataset df as a result of the R script transformation
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.10 – R脚本转换结果选择数据集df
- en: 'As you can see, person names in the `Name` and `Notes` column and emails in
    the `Email` and `Notes` columns have been correctly anonymized:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如你所见，`Name`和`Notes`列中的人名以及`Email`和`Notes`列中的电子邮件已经正确匿名化：
- en: '![Figure 6.11 – The transformed dataset as the result of the R script](img/file167.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图6.11 – R脚本执行结果转换后的数据集](img/file167.png)'
- en: Figure 6.11 – The transformed dataset as the result of the R script
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 – R脚本执行结果转换后的数据集
- en: You can then click **Close & Apply** in the **Home** tab.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在**主页**选项卡中点击**关闭并应用**。
- en: As you could see, the execution of the R script took longer than that of the
    Python script. Clearly, the overhead of passing information through `reticulate`
    makes a difference.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，执行R脚本的时间比Python脚本长。显然，通过`reticulate`传递信息产生的开销造成了差异。
- en: '**Important Note**'
  id: totrans-183
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: ''
  id: totrans-184
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If you need to anonymize a not-so-small dataset, it is advisable to do it directly
    using a Python script for much better performance.
  id: totrans-185
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你需要匿名化一个不太大的数据集，建议直接使用Python脚本进行，以获得更好的性能。
- en: Again, the dataset resulting from the publication of this report will contain
    only the anonymized data, without giving Power BI users the ability to retrieve
    the original data.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，本报告发布的数据集将仅包含匿名化数据，不会赋予Power BI用户检索原始数据的能力。
- en: Let's see now how to pseudonymize the data in Power BI.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何在Power BI中实现数据的匿名化。
- en: Pseudonymizing data in Power BI
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Power BI中的数据匿名化
- en: Unlike anonymization, pseudonymization maintains the statistical characteristics
    of the dataset by transforming the same input string into the same output string,
    and keeps track of replacements that have occurred, allowing those with access
    to this mapping information to obtain the original dataset again.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 与匿名化不同，匿名化通过将相同的输入字符串转换为相同的输出字符串来保持数据集的统计特性，并跟踪发生的替换，允许那些有权访问此映射信息的人重新获得原始数据集。
- en: Moreover, pseudonymization replaces sensitive data with **fake strings** (**pseudonyms**),
    having the same *form* as the original one, making the de-identified data more
    realistic.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，匿名化通过将敏感数据替换为与原始数据具有相同**形式**的**虚假字符串**（**假名**），使得去标识化数据更加真实。
- en: Depending on the analytical language used, there are different solutions driven
    by the different packages available that lead to the same result. Let's see how
    to apply pseudonymization in Power BI to the contents of the same Excel file used
    in the previous sections with Python.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 根据所使用的分析语言，有不同解决方案，由不同包提供，但最终达到相同的结果。让我们看看如何将Power BI中的匿名化应用于之前章节中使用的Python的同一Excel文件内容。
- en: Pseudonymizing data using Python
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Python进行数据匿名化
- en: 'The modules and the code structure you will use are quite similar to those
    already used for anonymization. One difference is that, once the sensitive entities
    are identified, they are replaced by fake entities of the same type. The fake
    data generators par excellence in Python are two: **Faker** ([https://faker.readthedocs.io/](https://faker.readthedocs.io/))
    and **Mimesis** ([https://mimesis.readthedocs.io/](https://mimesis.readthedocs.io/)).
    In our example, we''ll use Faker, which is inspired by the library of the same
    name previously developed for **PHP**, **Perl**, and **Ruby**.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用的模块和代码结构与之前用于匿名化的那些非常相似。一个不同之处在于，一旦识别出敏感实体，它们就会被相同类型的虚假实体所替代。Python中出类拔萃的虚假数据生成器有两个：**Faker**
    ([https://faker.readthedocs.io/](https://faker.readthedocs.io/)) 和 **Mimesis**
    ([https://mimesis.readthedocs.io/](https://mimesis.readthedocs.io/))。在我们的例子中，我们将使用Faker，它受到了之前为
    **PHP**、**Perl** 和 **Ruby** 开发的同名库的启发。
- en: Moreover, what changes is the logic of the two custom functions used to de-identify
    entities and the addition of the management of two dictionaries (`emails_dict`
    and `names_dict`) to maintain the mapping between personal data and fake data.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，变化的是用于去识别实体的两个自定义函数的逻辑，以及添加了两个字典（`emails_dict` 和 `names_dict`）的管理，以维护个人数据与虚假数据之间的映射。
- en: We've also added a little more *salt* to the handling of the fake data – person
    names and email addresses are generated considering the country of each individual
    in the dataset, passing it as a parameter in custom functions. For example, if
    the individual is German, the generated person name will be a typical German name.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在处理虚假数据方面添加了一些“盐” – 考虑到数据集中每个个体的国家，生成人员姓名和电子邮件地址，将其作为自定义函数中的参数传递。例如，如果个人是德国人，生成的姓名将是典型的德国姓名。
- en: 'Let''s see in detail what this is all about. The referenced Python file is
    `03-pseudonymize-data-in-power-bi-python.py`, which you can find in the `Chapter06`
    folder:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细看看这是怎么回事。相关的 Python 文件是 `03-pseudonymize-data-in-power-bi-python.py`，您可以在
    `Chapter06` 文件夹中找到它：
- en: While, in the case of anonymization, the `anonymizer.anonymize()` function was
    used to replace all entities identified using the `analyzer.analyze()` function
    in one go, now, after the same entity identification, we must *first check if
    each identified single entity has already been mapped to a fake string*. If the
    entity is in its own specific dictionary, you retrieve the associated fake string
    and use that to pseudonymize the text. Otherwise, you generate a new fake string
    and add it to the dictionary, associating it with the entity in question.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在匿名化的情况下，使用了 `anonymizer.anonymize()` 函数一次性替换了使用 `analyzer.analyze()` 函数识别的所有实体。现在，在相同的实体识别之后，我们必须
    **首先检查每个已识别的单个实体是否已经映射到一个虚假字符串**。如果实体在其特定的字典中，您将检索相关的虚假字符串并使用它来匿名化文本。否则，您将生成一个新的虚假字符串并将其添加到字典中，将其与相关的实体关联。
- en: When the pseudonymization of all expected columns is complete, the mapping dictionaries
    (both for names and emails) are persisted to `pkl` files. These are unpickled
    and used as mapping dictionaries whenever new Excel data needs to be pseudonymized,
    and then at each refresh of the dataset. This ensures that the same pseudonyms
    are always used for the same personal data and also for new Excel rows.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当所有预期列的匿名化完成时，映射字典（包括名称和电子邮件）将持久化到 `pkl` 文件中。这些字典在需要匿名化新的 Excel 数据以及数据集每次刷新时都会被解包并用作映射字典。这确保了相同的化名始终用于相同的个人数据，以及新的
    Excel 行。
- en: 'In order to use the `faker` module as mentioned before, you need to install
    it in the `presidio_env` environment in the following way:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用之前提到的 `faker` 模块，您需要以下方式在 `presidio_env` 环境中安装它：
- en: Open your Anaconda Prompt.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的 Anaconda Prompt。
- en: 'Enter and run the following code to switch to the newly created environment:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以切换到新创建的环境：
- en: '[PRE13]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Enter and run the following code to install `Faker`:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入并运行以下代码以安装 `Faker`：
- en: '[PRE14]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Once this is done, you can start to implement pseudonymization in Power BI:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，您可以在 Power BI 中开始实施匿名化：
- en: Open your Power BI Desktop and make sure the referenced Python environment is
    `presidio_env` in **Options** (its home directory should be `C:\Users\<your-username>\miniconda3\envs\presidio_env`).
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的 Power BI Desktop，确保引用的 Python 环境是 `presidio_env` 在 **选项** 中（其主目录应为 `C:\Users\<your-username>\miniconda3\envs\presidio_env`）。
- en: From the Power BI ribbon, click on the **Excel** icon to import data from Excel.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Power BI 菜单栏中，点击 **Excel** 图标以从 Excel 导入数据。
- en: From the **Open** dialog box, select the aforementioned `CustomersCreditCardAttempts.xlsx`
    file.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **打开** 对话框中，选择上述 `CustomersCreditCardAttempts.xlsx` 文件。
- en: 'From the **Navigator** window, select the **Customers** sheet and then click
    on **Transform Data**:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **导航器** 窗口中，选择 **客户** 工作表，然后点击 **转换数据**：
- en: '![Figure 6.12 – Selecting the Customers sheet and clicking on Transform Data](img/file168.png)'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 6.12 – 选择客户工作表并点击转换数据](img/file168.png)'
- en: Figure 6.12 – Selecting the Customers sheet and clicking on Transform Data
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.12 – 选择客户工作表并点击转换数据
- en: Click on the **Transform** menu and then click on **Run Python Script**.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **转换** 菜单，然后点击 **运行 Python 脚本**。
- en: Copy the script from the `03-pseudonymize-data-in-power-bi-python.py` file into
    the Python script editor and click **OK**. Remember to change the environment
    path of your machine.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `03-pseudonymize-data-in-power-bi-python.py` 文件中的脚本复制到 Python 脚本编辑器中，然后点击
    **确定**。请记住更改您机器的环境路径。
- en: If Power BI needs you to provide it with data privacy information, you already
    know how to proceed based on what you've seen in *Chapter 5*, *Using Regular Expressions
    in Power BI*.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Power BI需要您提供数据隐私信息，您已经知道如何根据您在*第5章*，*在Power BI中使用正则表达式*中看到的内容进行操作。
- en: 'We are only interested in the `df` dataset. So, click on its **Table** value:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只对`df`数据集感兴趣。因此，点击其**表**值：
- en: '![Figure 6.13 – Selecting the dataset df as a result of the Python script transformation](img/file169.png)'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图6.13 – 选择Python脚本转换后的数据集df](img/file169.png)'
- en: Figure 6.13 – Selecting the dataset df as a result of the Python script transformation
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.13 – 选择Python脚本转换后的数据集df
- en: 'As you can see, person names in the `Name` and `Notes` column and emails in
    the `Email` and `Notes` columns have been correctly pseudonymized:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如您所见，`Name`和`Notes`列中的人名和`Email`和`Notes`列中的电子邮件已经被正确地匿名化：
- en: '![Figure 6.14 – The transformed dataset as the result of the Python script](img/file170.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![图6.14 – Python脚本转换后的数据集](img/file170.png)'
- en: Figure 6.14 – The transformed dataset as the result of the Python script
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 – Python脚本转换后的数据集
- en: You can then click **Close & Apply** in the **Home** tab.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以在**主页**选项卡中点击**关闭并应用**。
- en: 'Just as in the case of anonymization, the `Name`, `Email`, and `Notes` columns
    have been correctly de-identified. What we have in addition is the following:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 就像匿名化一样，`Name`、`Email`和`Notes`列已经被正确地去标识化。除此之外，我们还有以下内容：
- en: The consistency of the person names and emails with the individual's country,
    although `Faker` does not currently allow you to maintain consistency between
    generated names and their respective emails. For example, in *Figure 6.14*, you
    can see an Italian name and an email using a different Italian name at *row 11*
    (the name *Alfio Migliaccio* is not used in the email).
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人的名字和电子邮件与个人国家的相一致性，尽管`Faker`目前不允许您在生成的名字和相应的电子邮件之间保持一致性。例如，在*图6.14*中，您可以看到第11行（名字*Alfio
    Migliaccio*未用于电子邮件）使用了一个不同的意大利名字的意大利名字和电子邮件。
- en: The use of the `emails_dict` and `names_dict` mapping dictionaries to ensure
    that statistical analysis can be done on the pseudonymized dataset.
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`emails_dict`和`names_dict`映射字典确保可以对匿名化数据集进行统计分析。
- en: The fact that we can trace the original data back thanks to these mapping dictionaries
    that are persisted to disk.
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 之所以能够追踪原始数据，归功于这些持久化到磁盘的映射字典。
- en: 'In this case, when you publish the report to share it with Power BI users,
    you have the following:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，当您将报告发布以与Power BI用户共享时，您有以下内容：
- en: '**Note**'
  id: totrans-227
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**'
- en: ''
  id: totrans-228
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Power BI users who can only access the dataset will only see the de-identified
    data. By also providing mapping dictionaries to those with the right permissions,
    you ensure that they can trace the original data back for any legal needs.
  id: totrans-229
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 只能访问数据集的Power BI用户将只能看到去标识化的数据。通过向具有正确权限的人提供映射字典，您确保他们可以在任何法律需求下追踪原始数据。
- en: Did you notice that, thanks to the Python script, you were able to write to
    file information resulting from the data processing carried out in Power BI?
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你注意到吗，由于Python脚本，您能够将Power BI中执行的数据处理结果写入文件吗？
- en: '**Note**'
  id: totrans-231
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**'
- en: ''
  id: totrans-232
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Instead of using serialized dictionaries in PKL files, you could have, for example,
    written the information to **CSV** or Excel files.
  id: totrans-233
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 与在PKL文件中使用序列化字典不同，例如，您可以将信息写入**CSV**或Excel文件。
- en: Simply put, you have the ability to log information outside of Power BI. You'll
    learn more about this possibility in *Chapter 7*, *Logging Data from Power BI
    to External Repositories*.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，您有在Power BI之外记录信息的能力。您将在*第7章*，*从Power BI到外部存储库记录数据*中了解更多关于这种可能性。
- en: Let's now see how to implement pseudonymization, also in R.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何在R中实现匿名化。
- en: Pseudonymizing data using R
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用R进行数据匿名化
- en: 'The libraries we will use for data pseudonymization in R are much the same
    as those used for anonymization in R. To fully simulate the functionality of the
    Python script developed in the previous section, we also need an R package that
    generates *fake data* to replace *sensitive data*, such as person names and email
    addresses. In Python, we used the Faker module, one of the most widely used for
    that purpose. A package with the same functionality has been developed in R, also
    inspired by the same code used for Faker, and is called **charlatan** ([https://github.com/ropensci/charlatan](https://github.com/ropensci/charlatan)).
    Additionally, the R code for pseudonymization will follow the same logic already
    implemented in the Python script in the previous section, with minor differences
    being as follows:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在R中用于数据匿名化的库与用于R中匿名化的库非常相似。为了完全模拟前一小节中开发的Python脚本的功能，我们还需要一个R包来生成*假数据*以替换*敏感数据*，例如人名和电子邮件地址。在Python中，我们使用了Faker模块，这是该目的最广泛使用的模块之一。在R中，也开发了一个具有相同功能的包，它受到了与Faker相同的代码的启发，并被称为**charlatan**
    ([https://github.com/ropensci/charlatan](https://github.com/ropensci/charlatan))。此外，R中匿名化的代码将遵循前一小节中Python脚本中已实现的相同逻辑，以下是一些细微的差异：
- en: Instead of dictionaries, named lists are used for mapping pseudonyms to original
    entities.
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与字典不同，命名列表用于将化名映射到原始实体。
- en: Named lists are serialized and persisted in **RDS** files, instead of PKL files.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名列表被序列化和持久化在**RDS**文件中，而不是**PKL**文件中。
- en: 'In order to use the `charlatan` R package, it must be installed in the latest
    R engine (in our case, MRO 4.0.2). These are the necessary steps to follow:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用`charlatan` R包，它必须在最新的R引擎（在我们的案例中，MRO 4.0.2）中安装。以下是必须遵循的步骤：
- en: Open Rstudio, and be sure to select in the **Global Options** the most recent
    MRO engine you already installed following the steps in *Chapter 2*, *Configuring
    R with Power BI*.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Rstudio，并确保在**全局选项**中选择你按照*第2章*，*配置R与Power BI*中步骤安装的最新MRO引擎。
- en: 'Since MRO by definition downloads new packages from a default CRAN snapshot
    back in time, in order to download the latest version of packages in CRAN you
    need to overwrite the referenced repository by running the following code:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于MRO按照定义会从默认的CRAN快照中下载新包，为了下载CRAN中包的最新版本，你需要通过运行以下代码来覆盖引用的存储库：
- en: '[PRE15]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Then, install the `charlatan` package by running the following code in the
    console:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在控制台中运行以下代码来安装`charlatan`包：
- en: '[PRE16]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You are now ready to apply pseudonymization in Power BI to the content of the
    `CustomersCreditCardAttempts.xlsx` Excel file using R. So, let’s get started:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已准备好使用R在Power BI中对`CustomersCreditCardAttempts.xlsx` Excel文件的内容应用匿名化。让我们开始吧：
- en: Open your Power BI Desktop, and make sure the referenced R engine is your latest
    MRO version in the **Global Options**.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的Power BI桌面版，并确保在**全局选项**中引用的R引擎是你的最新MRO版本。
- en: From the ribbon, click on the **Excel** icon to import data from Excel.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从功能区点击**Excel**图标以从Excel导入数据。
- en: From the **Open** dialog box, select the aforementioned `CustomersCreditCardAttempts.xlsx`
    file.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**打开**对话框中，选择上述`CustomersCreditCardAttempts.xlsx`文件。
- en: 'From the **Navigator** window, select the **Customers** sheet and then click
    on **Transform Data**:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**导航器**窗口中，选择**客户**表，然后点击**转换数据**：
- en: '![Figure 6.15 – Selecting the Customers sheet and clicking on Transform Data](img/file171.png)'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图6.15 – 选择客户表并点击转换数据](img/file171.png)'
- en: Figure 6.15 – Selecting the Customers sheet and clicking on Transform Data
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.15 – 选择客户表并点击转换数据
- en: Click on the **Transform** menu and then click on **Run R Script**.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**转换**菜单，然后点击**运行R脚本**。
- en: Copy the script from the `04-pseudonymize-data-in-power-bi-r.R` file into the
    R script editor and click **OK**. Remember to change the needed paths in the code.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`04-pseudonymize-data-in-power-bi-r.R`文件中的脚本复制到R脚本编辑器中，并点击**确定**。请记住在代码中更改所需的路径。
- en: If Power BI needs you to provide it with data privacy information, you already
    know how to proceed based on what you've seen in *Chapter 5*, *Using Regular Expressions
    in Power BI*.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Power BI需要你提供数据隐私信息，你已经知道如何根据你在*第5章*，*在Power BI中使用正则表达式*中看到的进行操作。
- en: 'We are only interested in the `df` dataset. So, click on its **Table** value:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只对`df`数据集感兴趣。因此，点击其**表**值：
- en: '![Figure 6.16 – Selecting the dataset df as a result of the R script transformation](img/file172.png)'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图6.16 – 选择R脚本转换后的数据集df](img/file172.png)'
- en: Figure 6.16 – Selecting the dataset df as a result of the R script transformation
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.16 – R脚本转换的结果选择数据集df
- en: 'As you can see, person names in the `Name` and `Notes` column and emails in
    the `Email` and `Notes` columns have been correctly anonymized:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如你所见，`Name`和`Notes`列中的人名以及`Email`和`Notes`列中的电子邮件已经正确匿名化：
- en: '![Figure 6.17 – The transformed dataset as the result of the R script](img/file173.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![图6.17 – R脚本转换的结果转换后的数据集](img/file173.png)'
- en: Figure 6.17 – The transformed dataset as the result of the R script
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17 – R脚本转换的结果转换后的数据集
- en: You can then click **Close & Apply** in the **Home** tab.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以在**主页**选项卡中点击**关闭并应用**。
- en: Unfortunately, charlatan does not yet support the `it_IT` locale. But since
    it is an open source project, it is possible that it will be implemented by the
    community soon. This, however, does not prevent us from obtaining a very good
    pseudonymization of the dataset and of the report that will be published on the
    Power BI service, since, in the absence of a specific locale, the default one
    (`en_US`) is always used.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，charlatan目前还不支持`it_IT`区域设置。但是，由于它是一个开源项目，社区可能会很快实现它。然而，这并不会阻止我们获得非常好的数据集和将在Power
    BI服务上发布的报告的脱敏化，因为，在没有特定区域设置的情况下，始终使用默认的区域设置（`en_US`）。
- en: It has been said that the implementation of de-identification procedures in
    R is certainly less performant than in Python. However, the gap can be partially
    bridged by the introduction of parallelization of operations with multitasking.
    We'll look at this technique in detail in *Chapter 8*, *Calling External APIs
    To Enrich Your Data*.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 据说，在R中实现去标识化程序的性能肯定不如Python。然而，可以通过引入多任务操作的并行化来部分弥补这一差距。我们将在第8章中详细探讨这项技术，即*调用外部API以丰富您的数据*。
- en: Summary
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned the main differences between anonymization and
    pseudonymization. You also learned which techniques are most frequently used to
    adopt both of the de-identification processes.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了匿名化和脱敏化之间的主要区别。你还学习了哪些技术最常用于采用这两种去标识化过程。
- en: You have also applied the process of anonymization by tokenization and the process
    of pseudonymization by generating similar pseudonyms in Power BI with both Python
    and R.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 你还使用Python和R在Power BI中应用了通过标记化进行的匿名化过程，以及通过生成相似的假名进行的脱敏化过程。
- en: In the next chapter, you will learn how to log data derived from operations
    done with **Power Query** in Power BI to external repositories.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何将使用**Power Query**在Power BI中执行的操作生成的数据记录到外部存储库。
- en: References
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'For additional reading, check out the following books and articles:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于额外的阅读，请参阅以下书籍和文章：
- en: '*Pseudonymization, Anonymization and the GDPR* ([https://www.termsfeed.com/blog/gdpr-pseudonymization-anonymization/](https://www.termsfeed.com/blog/gdpr-pseudonymization-anonymization/))'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*脱敏化、匿名化和GDPR* ([https://www.termsfeed.com/blog/gdpr-pseudonymization-anonymization/](https://www.termsfeed.com/blog/gdpr-pseudonymization-anonymization/))'
- en: '*Symmetric and Asymmetric Encryption* ([https://medium.com/hackernoon/symmetric-and-asymmetric-encryption-5122f9ec65b1](https://medium.com/hackernoon/symmetric-and-asymmetric-encryption-5122f9ec65b1))'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*对称和不对称加密* ([https://medium.com/hackernoon/symmetric-and-asymmetric-encryption-5122f9ec65b1](https://medium.com/hackernoon/symmetric-and-asymmetric-encryption-5122f9ec65b1))'
- en: '*Cryptography with Python Tutorial* ([https://www.tutorialspoint.com/cryptography_with_python/](https://www.tutorialspoint.com/cryptography_with_python/))'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Python密码学教程* ([https://www.tutorialspoint.com/cryptography_with_python/](https://www.tutorialspoint.com/cryptography_with_python/))'
- en: '*Encryption in R with cyphr* ([https://docs.ropensci.org/cyphr/articles/cyphr.html](https://docs.ropensci.org/cyphr/articles/cyphr.html))'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*使用cyphr在R中进行加密* ([https://docs.ropensci.org/cyphr/articles/cyphr.html](https://docs.ropensci.org/cyphr/articles/cyphr.html))'
