- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: About the Book
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于本书
- en: While a huge amount of data is readily available to us, it is not useful in
    its raw form. For data to be meaningful, it must be curated and refined.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管大量数据对我们来说唾手可得，但它们在原始形式下并没有用处。为了使数据具有意义，必须对其进行整理和精炼。
- en: If you're a beginner, then *The Data Wrangling Workshop, Second Edition* will
    help to break down the process for you. You'll start with the basics and build
    your knowledge, progressing from the core aspects behind data wrangling, to using
    the most popular tools and techniques.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是初学者，那么*《数据整理工作坊，第二版》*将帮助您分解这个过程。您将从基础知识开始，逐步构建知识，从数据整理的核心方面到使用最流行的工具和技术。
- en: This book starts by showing you how to work with data structures using Python.
    Through examples and activities, you'll understand why you should stay away from
    traditional methods of data cleaning used in other languages and take advantage
    of the specialized pre-built routines in Python. Later, you'll learn how to use
    the same Python backend to extract and transform data from an array of sources,
    including the internet, large database vaults, and Excel financial tables. To
    help you prepare for more challenging scenarios, the book teaches you how to handle
    missing or incorrect data, and reformat it based on the requirements from your
    downstream analytics tool.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书首先向您展示如何使用Python处理数据结构。通过示例和活动，您将了解为什么应该避免使用其他语言中传统的数据清洗方法，并利用Python中专门的预构建例程。随后，您将学习如何使用相同的Python后端从包括互联网、大型数据库仓库和Excel财务表格在内的各种来源提取和转换数据。为了帮助您为更具挑战性的场景做准备，本书将教授您如何处理缺失或不正确的数据，并根据下游分析工具的要求对其进行重新格式化。
- en: By the end of this book, you will have developed a solid understanding of how
    to perform data wrangling with Python, and learned several techniques and best
    practices to extract, clean, transform, and format your data efficiently, from
    a diverse array of sources.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书结束时，您将对如何使用Python进行数据整理有一个坚实的理解，并学会了几种技术和最佳实践，以有效地从各种来源提取、清理、转换和格式化您的数据。
- en: Audience
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读者对象
- en: '*The Data Wrangling Workshop, Second Edition* is designed for developers, data
    analysts, and business analysts who are looking to pursue a career as a full-fledged
    data scientist or analytics expert. Although this book is for beginners who want
    to start data wrangling, prior working knowledge of the Python programming language
    is necessary to easily grasp the concepts covered here. It will also help to have
    rudimentary knowledge of relational databases and SQL.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*《数据整理工作坊，第二版》*是为那些希望成为全职数据科学家或分析专家的开发者、数据分析师和商业分析师设计的。尽管这本书是为想要开始数据整理的初学者而写的，但为了轻松掌握这里涵盖的概念，需要具备Python编程语言的工作知识。同时，对关系数据库和SQL有基本的了解也会有所帮助。'
- en: About the Chapters
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于章节
- en: '*Chapter 1*, *Introduction to Data Wrangling with Python*, describes the importance
    of data wrangling in data science and introduces the basic building blocks that
    are used in data wrangling.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*第一章*，*Python数据整理入门*，描述了数据整理在数据科学中的重要性，并介绍了数据整理中使用的基本构建块。'
- en: '*Chapter 2*, *Advanced Operations on Built-in Data Structures*, discusses advanced
    built-in data structures that can be used for complex data wrangling problems
    faced by data scientists. The chapter will also talk about working with files
    using standard Python libraries.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*第二章*，*内置数据结构的进阶操作*，讨论了可用于解决数据科学家面临的复杂数据整理问题的进阶内置数据结构。本章还将讨论使用标准Python库处理文件。'
- en: '*Chapter 3*, *Introduction to NumPy, Pandas, and Matplotlib*, will introduce
    you to the fundamentals of the NumPy, Pandas, and Matplotlib libraries. These
    are fundamental libraries for when you are performing data wrangling. This chapter
    will teach you how to calculate descriptive statistics of a one-dimensional/multi-dimensional
    DataFrame.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*第三章*，*NumPy、Pandas和Matplotlib简介*，将向您介绍NumPy、Pandas和Matplotlib库的基本原理。这些是进行数据整理时的基本库。本章将教授您如何计算一维/多维DataFrame的描述性统计。'
- en: '*Chapter 4*, *A Deep Dive into Data Wrangling with Python*, will introduce
    working with pandas DataFrames, including coverage of advanced concepts such as
    subsetting, filtering, grouping, and much more.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*第四章*，*深入Python数据整理*，将介绍如何使用pandas DataFrame，包括子集、过滤、分组等高级概念的覆盖。'
- en: '*Chapter 5*, *Getting Comfortable with Different Kinds of Data Sources*, introduces
    you to the several diverse data sources you might encounter as a data wrangler.
    This chapter will provide you with the knowledge to read CSV, Excel, and JSON
    files into pandas DataFrames.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 5 章*，*熟悉不同类型的数据源*，向您介绍您作为数据整理员可能会遇到的各种不同的数据源。本章将为您提供将 CSV、Excel 和 JSON 文件读取到
    pandas DataFrame 中的知识。'
- en: '*Chapter 6*, *Learning the Hidden Secrets of Data Wrangling*, discusses data
    problems that arise in business use cases and how to resolve them. This chapter
    will give you the knowledge needed to be able to clean and handle real-life messy
    data.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 6 章*，*学习数据整理的隐藏秘密*，讨论了在商业用例中出现的各种数据问题以及如何解决这些问题。本章将为您提供清理和处理现实生活中混乱数据所需的知识。'
- en: '*Chapter 7*, *Advanced Web Scraping and Data Gathering*, introduces you to
    the concepts of advanced web scraping and data gathering. It will enable you to
    use Python libraries such as requests and BeautifulSoup to read various web pages
    and gather data from them.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 7 章*，*高级网络爬取和数据收集*，向您介绍高级网络爬取和数据收集的概念。它将使您能够使用 Python 库，如 requests 和 BeautifulSoup，读取各种网页并从中收集数据。'
- en: '*Chapter 8*, *RDBMS and SQL*, will introduce you to the basics of using RDBMSes
    to query databases using Python and convert data from SQL and store it into a
    pandas DataFrame. A large part of the world''s data is stored in RDBMSes, so it
    is necessary to master this topic if you want to become a successful data-wrangling
    expert.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 8 章*，*关系型数据库管理系统和 SQL*，将向您介绍使用 Python 查询数据库和使用 RDBMS 的基础知识，并将数据从 SQL 转换并存储到
    pandas DataFrame 中。世界上大部分数据都存储在 RDBMS 中，因此如果您想成为一名成功的数据整理专家，掌握这个主题是必要的。'
- en: '*Chapter 9*, *Applications in Business Use Cases and Conclusion of the Course*,
    will enable you to utilize the skills you have learned through the course of the
    previous chapters. By the end of this chapter, you will be able to easily handle
    data wrangling tasks for business use cases.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 9 章*，*商业用例中的应用和课程总结*，将使您能够利用在前几章中学到的技能。到本章结束时，您将能够轻松处理商业用例的数据整理任务。'
- en: Conventions
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规范
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "This
    will return the value associated with it – `["list_element1", 34]`".'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL、用户输入和 Twitter 处理方式如下所示：“这将返回与之关联的值
    – `["list_element1", 34]`”。
- en: 'A block of code is set as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Words that you see on the screen, for example, in menus or dialog boxes, appear
    in the text like this: "Click `New` and choose `Python 3`."'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你在屏幕上看到的单词，例如在菜单或对话框中，在文本中显示如下：“点击`New`并选择`Python 3`。”
- en: Code Presentation
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码展示
- en: Lines of code that span multiple lines are split using a backslash ( `\` ).
    When the code is executed, Python will ignore the backslash, and treat the code
    on the next line as a direct continuation of the current line.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 涵盖多行的代码行使用反斜杠（`\`）进行分割。当代码执行时，Python 将忽略反斜杠，并将下一行的代码视为当前行的直接延续。
- en: 'For example:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Comments are added into code to help explain specific bits of logic. Single-line
    comments are denoted using the `#` symbol, as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注释被添加到代码中以帮助解释特定的逻辑部分。单行注释使用 `#` 符号表示，如下所示：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Multi-line comments are enclosed by triple quotes, as shown below:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 多行注释由三个引号包围，如下所示：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Setting up Your Environment
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置您的环境
- en: Before we explore the book in detail, we need to set up specific software and
    tools. In the following section, we shall see how to do that.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们详细探讨这本书之前，我们需要设置特定的软件和工具。在接下来的部分，我们将看到如何做到这一点。
- en: Installing Python
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Python
- en: Installing Python on Windows
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 Python
- en: 'To install Python on Windows, do the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Windows 上安装 Python，请按照以下步骤操作：
- en: Find your desired version of Python on the official installation page at [https://www.anaconda.com/distribution/#windows](https://www.anaconda.com/distribution/#windows).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在官方安装页面上找到您想要的 Python 版本，网址为 [https://www.anaconda.com/distribution/#windows](https://www.anaconda.com/distribution/#windows)。
- en: Ensure that you select Python 3.7 on the download page.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您在下载页面上选择 Python 3.7。
- en: Ensure that you install the correct architecture for your computer system, that
    is, either 32-bit or 64-bit. You can find out this information in the `System
    Properties` window of your OS.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您为您的计算机系统安装正确的架构，即 32 位或 64 位。您可以在操作系统的“系统属性”窗口中找到此信息。
- en: After you have downloaded the installer, simply double-click the file and follow
    the user-friendly prompts onscreen.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载安装程序后，只需双击文件并遵循屏幕上的用户友好提示。
- en: Installing Python on Linux
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Linux 上安装 Python
- en: 'To install Python on Linux, you have a couple of options. Here is one option:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Linux 上安装 Python，您有几个选择。这里是一个选项：
- en: Open the command line and verify that `Python 3` is not already installed by
    running `python3 --version`.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行并运行 `python3 --version` 以验证 `Python 3` 是否已经安装。
- en: 'To install Python 3, run this:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装 Python 3，请运行以下命令：
- en: '[PRE4]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you encounter problems, there are numerous sources online that can help you
    troubleshoot the issue.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果遇到问题，网上有众多资源可以帮助您解决问题。
- en: Alternatively, install Anaconda Linux by downloading the installer from [https://www.anaconda.com/distribution/#linux](https://www.anaconda.com/distribution/#linux)
    and following the instructions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，通过从 [https://www.anaconda.com/distribution/#linux](https://www.anaconda.com/distribution/#linux)
    下载安装程序并按照说明进行操作来安装 Anaconda Linux。
- en: Installing Python on MacOS
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 MacOS 上安装 Python
- en: 'Similar to the case with Linux, you have a couple of methods for installing
    Python on a Mac. To install Python on macOS X, do the following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Linux 的情况类似，您在 Mac 上安装 Python 也有几种方法。要在 macOS X 上安装 Python，请执行以下操作：
- en: Open the Terminal for Mac by pressing *CMD* + *Spacebar*, type `terminal` in
    the open search box, and hit *Enter*.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按 *CMD* + *空格键* 打开 Mac 的终端，在打开的搜索框中输入 `terminal`，然后按 *Enter*。
- en: Install Xcode through the command line by running `xcode-select –install`.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在命令行中运行 `xcode-select –install` 来安装 Xcode。
- en: The easiest way to install Python 3 is using Homebrew, which is installed through
    the command line by running `ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"`.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Python 3 最简单的方法是使用 Homebrew，它通过在命令行中运行 `ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"`
    来安装。
- en: Add Homebrew to your `$PATH` environment variable. Open your profile in the
    command line by running `sudo nano ~/.profile` and inserting `export PATH="/usr/local/opt/python/libexec/bin:$PATH"`
    at the bottom.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Homebrew 添加到您的 `$PATH` 环境变量中。通过在命令行中运行 `sudo nano ~/.profile` 并在底部插入 `export
    PATH="/usr/local/opt/python/libexec/bin:$PATH"` 来打开您的配置文件。
- en: The final step is to install Python. In the command line, run `brew install python`.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是安装 Python。在命令行中运行 `brew install python`。
- en: You can also install Python via the Anaconda installer available from [https://www.anaconda.com/distribution/#macos](https://www.anaconda.com/distribution/#macos).
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以通过从 [https://www.anaconda.com/distribution/#macos](https://www.anaconda.com/distribution/#macos)
    获取的 Anaconda 安装程序来安装 Python。
- en: Installing Libraries
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装库
- en: '`pip` comes pre-installed with Anaconda. Once Anaconda is installed on your
    machine, all the required libraries can be installed using `pip`, for example,
    `pip install numpy`. Alternatively, you can install all the required libraries
    using `pip install –r requirements.txt`. You can find the `requirements.txt` file
    at [https://packt.live/30UUshh](https://packt.live/30UUshh).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip` 预安装在 Anaconda 中。一旦 Anaconda 在您的机器上安装，所有必需的库都可以使用 `pip` 安装，例如，`pip install
    numpy`。或者，您可以使用 `pip install –r requirements.txt` 安装所有必需的库。您可以在 [https://packt.live/30UUshh](https://packt.live/30UUshh)
    找到 `requirements.txt` 文件。'
- en: The exercises and activities will be executed in Jupyter Notebooks. Jupyter
    is a Python library and can be installed in the same way as the other Python libraries
    – that is, with `pip install jupyter`, but fortunately, it comes pre-installed
    with Anaconda. To open a notebook, simply run the command `jupyter notebook` in
    the Terminal or Command Prompt.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 练习和活动将在 Jupyter Notebooks 中执行。Jupyter 是一个 Python 库，可以像其他 Python 库一样安装，即使用 `pip
    install jupyter`，但幸运的是，它已经预安装在 Anaconda 中。要打开笔记本，只需在终端或命令提示符中运行 `jupyter notebook`
    命令。
- en: Project Jupyter
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 Jupyter
- en: Project Jupyter is open source, free software that gives you the ability to
    run code written in Python and some other languages interactively from a special
    notebook, similar to a browser interface. It was born in 2014 from the IPython
    project and has since become the default choice for the entire data science workforce.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 项目 Jupyter 是一个开源的免费软件，它允许您从特殊的笔记本中交互式地运行用 Python 和其他一些语言编写的代码，类似于浏览器界面。它于 2014
    年从 IPython 项目中诞生，并已成为整个数据科学工作者的默认选择。
- en: 'Once you are running the Jupyter server, click `New` and choose `Python 3`.
    A new browser tab will open with a new and empty notebook. Rename the Jupyter
    file:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您运行了 Jupyter 服务器，点击 `New` 并选择 `Python 3`。一个新的浏览器标签将打开，并显示一个新且空的笔记本。重命名 Jupyter
    文件：
- en: '![Figure 0.1: Jupyter server interface](img/B15780_00_01.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图 0.1：Jupyter 服务器界面](img/B15780_00_01.jpg)'
- en: 'Figure 0.1: Jupyter server interface'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 0.1：Jupyter 服务器界面
- en: 'The main building blocks of Jupyter notebooks are cells. There are two types
    of cells: `In` (short for input) and `Out` (short for output). You can write code,
    normal text, and Markdown in `In` cells, press *Shift* + *Enter* (or *Shift* +
    *Return*), and the code written in that particular `In` cell will be executed.
    The result will be shown in an `Out` cell, and you will land in a new `In` cell,
    ready for the next block of code. Once you get used to this interface, you will
    slowly discover the power and flexibility it offers.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 笔记本的主要构建块是单元格。有两种类型的单元格：`In`（代表输入）和`Out`（代表输出）。您可以在 `In` 单元格中编写代码、普通文本和
    Markdown，然后按 *Shift* + *Enter*（或 *Shift* + *Return*），该特定 `In` 单元格中编写的代码将被执行。结果将在
    `Out` 单元格中显示，并且您将进入一个新的 `In` 单元格，准备编写下一块代码。一旦您习惯了这种界面，您将逐渐发现它提供的强大功能和灵活性。
- en: 'When you start a new cell, by default, it is assumed that you will write code
    in it. However, if you want to write text, then you have to change the type. You
    can do that using the following sequence of keys: *Escape* -> *m* -> *Enter*:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当您开始一个新的单元格时，默认情况下，它假定您将在其中编写代码。然而，如果您想写文本，那么您必须更改类型。您可以使用以下键序列来完成：*Escape*
    -> *m* -> *Enter*：
- en: '![Figure 0.2: Jupyter notebook](img/B15780_00_02.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 0.2：Jupyter 笔记本](img/B15780_00_02.jpg)'
- en: 'Figure 0.2: Jupyter notebook'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 0.2：Jupyter 笔记本
- en: When you are done with writing the text, execute it using *Shift* + *Enter*.
    Unlike the code cells, the result of the compiled Markdown will be shown in the
    same place as the `In` cell.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当您完成文本编写后，使用 *Shift* + *Enter* 执行它。与代码单元格不同，编译后的 Markdown 的结果将在与 `In` 单元格相同的位置显示。
- en: 'To have a *cheat sheet* of all the handy key shortcuts in Jupyter Notebook,
    you can bookmark this Gist: [https://gist.github.com/kidpixo/f4318f8c8143adee5b40](https://gist.github.com/kidpixo/f4318f8c8143adee5b40).
    With this basic introduction and the image ready to be used, we are ready to embark
    on the exciting and enlightening journey.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 Jupyter Notebook 中所有便捷的快捷键的“速查表”，您可以收藏此 Gist：[https://gist.github.com/kidpixo/f4318f8c8143adee5b40](https://gist.github.com/kidpixo/f4318f8c8143adee5b40)。有了这个基本的介绍和准备好的图像，我们就可以开始这段激动人心且富有启发的旅程了。
- en: Accessing the Code Files
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问代码文件
- en: You can find the complete code files of this book at [https://packt.live/2YenXcb](https://packt.live/2YenXcb).
    You can also run many activities and exercises directly in your web browser by
    using the interactive lab environment at [https://packt.live/2YKlrJQ](https://packt.live/2YKlrJQ).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://packt.live/2YenXcb](https://packt.live/2YenXcb) 找到本书的完整代码文件。您还可以通过使用
    [https://packt.live/2YKlrJQ](https://packt.live/2YKlrJQ) 上的交互式实验室环境，直接在您的网络浏览器中运行许多活动和练习。
- en: We've tried to support interactive versions of all activities and exercises,
    but we recommend a local installation as well for instances where this support
    isn't available.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尝试支持所有活动和练习的交互式版本，但对于不支持这种支持的情况，我们也推荐进行本地安装。
- en: If you have any issues or questions about installation, please email us at [workshops@packt.com](mailto:workshops%40packt.com?subject=).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在安装过程中遇到任何问题或疑问，请通过电子邮件发送给我们，邮箱地址是 [workshops@packt.com](mailto:workshops%40packt.com?subject=)。
