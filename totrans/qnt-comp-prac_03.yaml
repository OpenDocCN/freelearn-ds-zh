- en: '*Chapter 3*: IBM Quantum Experience® – Quantum Drag and Drop'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第3章*：IBM Quantum Experience® – 量子拖放'
- en: Something pretty amazing happened in the cloud in early 2016; a new type of
    computer opened its arms to the world—a programmable quantum computer.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在2016年初的云中发生了一件相当令人惊奇的事情；一种新型计算机向世界敞开了它的怀抱——一个可编程的量子计算机。
- en: In this chapter, we will talk briefly about the early history of IBM Quantum
    Experience®, how to get there, and how to open a user account. We will take a
    look at the drag-and-drop user interface for programming the IBM quantum computers
    (Circuit Composer).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将简要介绍IBM Quantum Experience®的早期历史、如何到达那里以及如何开设用户账户。我们将查看用于编程IBM量子计算机（电路作曲家）的拖放用户界面。
- en: Also, we will take a quick peek at how you can move back and forth between IBM
    Quantum Experience® and Qiskit® by using the underlying OpenQASM coding.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还将快速浏览一下如何通过使用底层的OpenQASM编码在IBM Quantum Experience®和Qiskit®之间来回移动。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下内容：
- en: Introducing IBM Quantum Experience®
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍IBM Quantum Experience®
- en: Building quantum scores with Circuit Composer
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用电路作曲家构建量子分数
- en: Tossing a quantum coin
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 投掷量子硬币
- en: Moving between worlds
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在世界之间穿梭
- en: We will not stay long here; just long enough to scratch the surface, present
    a quantum circuit we will play with later in [*Chapter 4*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081),
    *Starting at the Ground Level with Terra*, and get a feel for the plethora of
    gates that are available to use.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里不会停留太久；只需足够的时间来触及表面，展示我们将在[*第4章*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081)“从地面开始使用Terra”中使用的量子电路，并感受一下可用的各种门。
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The quantum programs that we will discuss in this chapter can be found here:
    [https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03](https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中我们将讨论的量子程序可以在这里找到：[https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03](https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03)。
- en: If you haven't already, get yourself an IBM Quantum Experience® account. For
    information, see *Creating your IBM Quantum Experience® account* in [*Chapter
    1*](B14436_01_Final_PG_ePub.xhtml#_idTextAnchor021), *Preparing Your Environment*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有，请为自己获取一个IBM Quantum Experience®账户。有关信息，请参阅[*第1章*](B14436_01_Final_PG_ePub.xhtml#_idTextAnchor021)“准备您的环境”中的*创建您的IBM
    Quantum Experience®账户*。
- en: Introducing IBM Quantum Experience®
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍IBM Quantum Experience®
- en: '**IBM Quantum Experience®** is an open platform available for someone to start
    their quantum computing journey. In it, you have free access to a number of IBM
    quantum computers, ranging in size from a single qubit to 15 qubits (at the time
    of writing), as well as a 32-qubit simulator that runs on IBM POWER9™ hardware.
    That''s a lot of power at your fingertips.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**IBM Quantum Experience®**是一个开放平台，供人们开始他们的量子计算之旅。在这里，您可以免费访问一系列IBM量子计算机，从单个量子位到15个量子位（截至写作时），以及一个在IBM
    POWER9™硬件上运行的32量子位模拟器。这将在您的指尖提供大量力量。'
- en: IBM Quantum Experience® opened its doors in May 2016, in a world-first announcement
    that the public would now have access to actual quantum computing hardware in
    the cloud. Since then, several other companies have announced similar initiatives
    and opened up for cloud quantum computing, initially on *simulators*. Notable
    among this crowd are Google, Microsoft, Rigetti, Qutech, and more. As of this
    book's writing, IBM gives free access to both hardware and software quantum computing
    through its IBM Quantum Experience®, we will focus on that platform.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: IBM Quantum Experience®于2016年5月开放，这是世界上首次宣布公众现在可以访问云中的实际量子计算硬件。从那时起，其他几家公司也宣布了类似的计划，并开放了云量子计算，最初是在*模拟器*上。在这一群人中，值得注意的是谷歌、微软、Rigetti、Qutech等。截至本书编写时，IBM通过其IBM
    Quantum Experience®免费提供硬件和软件量子计算，我们将专注于该平台。
- en: 'From your web browser, go to the following URL, and log in with your IBM Quantum
    Experience® account: [https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从您的网络浏览器中，访问以下URL，并使用您的IBM Quantum Experience®账户登录：[https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/)。
- en: You are now on the main IBM Quantum Experience® landing page from which you
    can access all the quantum experience tools.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在位于IBM Quantum Experience®的主着陆页，从这里您可以访问所有量子体验工具。
- en: 'From here, you will see the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，您将看到以下内容：
- en: In the right pane, we have backends that are available to you. Clicking on each
    brings up a data page with the access status, provider access, chip structure
    and error rate data, the number of qubits, a list of basis gates, and more.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在右侧面板中，我们有可供你使用的后端。点击每个后端都会弹出一个数据页面，显示访问状态、提供商访问、芯片结构、错误率数据、量子比特数量、基门列表等。
- en: In the center area, you find your workbench. There's a list of recent circuits,
    currently running experiments, and your previous experiment results; when you
    first drop in here, it will be quite empty. From this area, you can also manage
    your user profile, configure notifications, get your API key, and more.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中心区域，你找到你的工作台。这里有最近创建的电路列表、当前正在运行的实验以及你之前的实验结果；当你第一次进入这里时，它将非常空。从这个区域，你还可以管理你的用户资料、配置通知、获取你的API密钥等。
- en: To the left, we have the main tools and help resources. These are described
    in more detail in the next section's *How to do it…*.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在左侧，我们有主要工具和帮助资源。这些将在下一节的*如何做…*中更详细地描述。
- en: '![Figure 3.1 – The IBM Quantum Experience® home page'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.1 – IBM量子体验®首页](img/Figure_3.1_B14436.jpg)'
- en: '](img/Figure_3.1_B14436.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.1_B14436.jpg)'
- en: Figure 3.1 – The IBM Quantum Experience® home page
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – IBM量子体验®首页
- en: 'Now that we have successfully logged in and looked around, let''s take a look
    at the quantum computing programming tools at our disposal. From the main menu
    on the right, you can access the following pages:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经成功登录并环顾四周，让我们来看看我们可用的量子计算编程工具。从右侧的主菜单中，你可以访问以下页面：
- en: '**Results**'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结果**'
- en: '**Circuit Composer**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电路作曲家**'
- en: '**Quantum Lab**'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**量子实验室**'
- en: '![Figure 3.2 – The IBM Quantum Experience® programming tools](img/Figure_3.2_B14436.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2 – IBM量子体验®编程工具](img/Figure_3.2_B14436.jpg)'
- en: Figure 3.2 – The IBM Quantum Experience® programming tools
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 – IBM量子体验®编程工具
- en: Let's look at each of those pages now.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来逐一查看这些页面。
- en: Results
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结果
- en: 'The **Results** section of IBM Quantum Experience® is just a long list of your
    pending jobs and your previously run quantum computing programs. You can search,
    sort, and filter by variables such as execution time, services (backends), and
    more:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: IBM量子体验®的**结果**部分只是你挂起的作业和之前运行的量子计算程序的长列表。你可以通过执行时间、服务（后端）等变量进行搜索、排序和筛选：
- en: '![Figure 3.3 – The Results page](img/Figure_3.3_B14436.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图3.3 – 结果页面](img/Figure_3.3_B14436.jpg)'
- en: Figure 3.3 – The Results page
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 – 结果页面
- en: The **Results** pane in IBM Quantum Experience® includes not only the jobs that
    are run from the **Circuit Composer** but also all jobs that you run on IBM Quantum®
    backends from your local Qiskit® with the same ID.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: IBM量子体验®的**结果**面板不仅包括从**电路作曲家**运行的作业，还包括你使用具有相同ID的本地Qiskit®在IBM Quantum®后端运行的所有作业。
- en: Each job includes not only the results of your job but also other data such
    as how long the job stayed in each stage of processing, how long it took to run,
    the status of the job, the **transpiled** circuit diagram, and the OpenQASM code
    for the circuit.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每个作业不仅包括你的作业结果，还包括其他数据，例如作业在处理每个阶段的停留时间、运行时间、作业状态、**转换后的**电路图以及电路的OpenQASM代码。
- en: Circuit Composer
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电路作曲家
- en: 'The Circuit Composer is the main tool for working with your quantum scores
    (which is what IBM Quantum Experience® calls quantum programs built using the
    Circuit Composer tool). We will go through it in detail in the recipes in this
    chapter, but I will provide you with a quick overview of its components here:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 电路作曲家是处理你的量子分数（即IBM量子体验®所说的使用电路作曲家工具构建的量子程序）的主要工具。我们将在本章的食谱中详细介绍它，但在这里我会为你快速概述其组件：
- en: '![Figure 3.4 – The Circuit Composer files page](img/Figure_3.4_B14436.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图3.4 – 电路作曲家文件页面](img/Figure_3.4_B14436.jpg)'
- en: Figure 3.4 – The Circuit Composer files page
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 – 电路作曲家文件页面
- en: Just like the **Results** pane has a list of jobs, the **Circuit Composer files**
    pane has a list of your *circuits*. From here, you can open and run all circuits
    that you have created using the Circuit Composer.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 就像**结果**面板有一个作业列表一样，**电路作曲家文件**面板有一个你的**电路**列表。从这里，你可以打开和运行你使用电路作曲家创建的所有电路。
- en: 'You can also click **New Circuit** to start from scratch, which opens Circuit
    Composer on an untitled circuit:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以点击**新建电路**从头开始，这将在未命名的电路上打开电路作曲家：
- en: '![Figure 3.5 – A blank circuit in Circuit Composer](img/Figure_3.5_B14436.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图3.5 – 电路作曲家中的空白电路](img/Figure_3.5_B14436.jpg)'
- en: Figure 3.5 – A blank circuit in Circuit Composer
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5 – 电路作曲家中的空白电路
- en: No Qiskit® overlap
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 无Qiskit®重叠
- en: The Circuit Composer window does not (in contrast to the **Results** pane) contain
    any of the circuits that you have run from a local Qiskit® environment. Only the
    quantum scores that you have created in IBM Quantum Experience® are available
    here. If you want to see your Qiskit® circuits here, you must import them as OpenQASM
    code. See the *Moving between worlds* recipe at the end of this chapter.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 与 **结果** 窗格不同，Circuit Composer 窗格不包含您从本地 Qiskit® 环境运行的任何电路。这里只有您在 IBM Quantum
    Experience® 中创建的量子分数。如果您想在这里看到您的 Qiskit® 电路，必须将它们作为 OpenQASM 代码导入。请参阅本章末尾的 *在两个世界之间移动*
    食谱。
- en: Once you have opened or created a circuit, a set of new tools open up to help
    you build your quantum score. These are covered in the next recipe, *Building
    quantum scores with Circuit Composer*.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您打开或创建了一个电路，一系列新的工具将打开以帮助您构建您的量子分数。这些将在下一食谱 *使用 Circuit Composer 构建 quantum
    scores* 中介绍。
- en: Quantum Lab
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子实验室
- en: 'The third toolkit is a collection of Jupyter Notebook tutorials put together
    by the Qiskit® team. You can access them all from the **Qiskit tutorials** tile.
    You can also create your Jupyter Notebooks from this pane, and these will show
    up in this window much like the circuits in the previous one:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个工具包是由 Qiskit® 团队整理的 Jupyter Notebook 教程集合。您可以从 **Qiskit tutorials** 磁贴访问它们。您也可以从该面板创建您的
    Jupyter Notebooks，它们将像之前窗口中的电路一样显示在此窗口中：
- en: '![Figure 3.6 – Quantum Lab](img/Figure_3.6_B14436.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.6 – 量子实验室](img/Figure_3.6_B14436.jpg)'
- en: Figure 3.6 – Quantum Lab
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 量子实验室
- en: Running Python programs in notebooks
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在笔记本中运行 Python 程序
- en: You can also use the Jupyter Notebook environment to run the quantum computing
    Python sample scripts that we include in this book. Take a look at the *Downloading
    the code samples* recipe in [*Chapter 1*](B14436_01_Final_PG_ePub.xhtml#_idTextAnchor021),
    *Preparing Your Environment*, for a quick reminder.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 Jupyter Notebook 环境运行本书中包含的量子计算 Python 示例脚本。查看 [*第 1 章*](B14436_01_Final_PG_ePub.xhtml#_idTextAnchor021)
    中的 *下载代码示例* 食谱，*准备您的环境*，以快速回顾。
- en: 'In addition to the tools that you will use to code your quantum programs, IBM
    Quantum Experience® also includes some extended help in the form of two additional
    pages:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 除了您将用于编写量子程序的工具外，IBM Quantum Experience® 还包括一些扩展的帮助，形式为两个额外的页面：
- en: '**Docs**: This page includes a collection of getting started tutorials, a more
    extensive set of instructions for Circuit Composer, algorithms, and more. This
    is a good starting point to explore IBM Quantum Experience® when you are done
    working your way through this book.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：此页面包含了一系列入门教程，Circuit Composer、算法等更广泛的说明。这是在您完成本书的学习后探索 IBM Quantum
    Experience® 的一个好起点。'
- en: '`ibm-q-experience`) and Qiskit® (`qiskit`). These social environments are vibrant
    and responsive, and you can bounce around questions, ideas, and more in a give-and-take
    manner. Questions are not long left unanswered by knowledgeable members and moderators!'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ibm-q-experience`) 和 Qiskit® (`qiskit`)。这些社交环境充满活力且反应迅速，您可以以互动的方式提出问题、分享想法等。知识渊博的成员和版主不会长时间不回答问题！'
- en: Building quantum scores with Circuit Composer
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Circuit Composer 构建 quantum scores
- en: This recipe will walk you through the basic steps of creating a quantum score
    in IBM Quantum Experience®, to get a feel for how the composer works, how to build
    and modify a score, and finally how to analyze the score step by step using the
    **Inspect** feature.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱将指导您完成在 IBM Quantum Experience® 中创建量子分数的基本步骤，以了解作曲家的工作方式，如何构建和修改分数，以及最后如何使用
    **Inspect** 功能逐步分析分数。
- en: Drag-and-drop programming
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 拖放编程
- en: The recipes in this chapter will be run in the IBM Quantum Experience® web environment,
    using the drag-and-drop interface, which nicely visualizes what you are doing
    in an intuitive way.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的食谱将在 IBM Quantum Experience® 网络环境中运行，使用拖放界面，以直观的方式很好地可视化您正在做的事情。
- en: How to do it...
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s build ourselves a little quantum score:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建自己的一个小型量子分数：
- en: 'From your web browser (Chrome seems to work best), go to the following URL,
    and then log in with your IBM Quantum Experience® account: [https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/).'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的网络浏览器（Chrome似乎效果最好），访问以下 URL，然后使用您的 IBM Quantum Experience® 账户登录：[https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/)。
- en: In the left pane, select **Circuit Composer**.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板中，选择 **Circuit Composer**。
- en: This opens the composer to a blank **Untitled circuit**.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将打开作曲家到一个空白 **未命名电路**。
- en: 'Optional: Set the number of qubits to play with.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选：设置要操作的量子比特数量。
- en: In the default setting, you will see three lines, much like a music score (hence
    the term quantum score). Each line represents one of your qubits, and the basic
    score is designed for a 5-qubit machine. As you will see in the *Comparing backends*
    recipe in [*Chapter 5*](B14436_05_Final_PG_ePub.xhtml#_idTextAnchor128), *Touring
    the IBM Quantum® Hardware with Qiskit®,* this is currently the most common setup
    for the free IBM quantum machines.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在默认设置中，你会看到三行，就像乐谱一样（因此得名量子代码）。每一行代表一个量子比特，基本代码是为 5 量子比特机器设计的。如你将在[*第 5 章*](B14436_05_Final_PG_ePub.xhtml#_idTextAnchor128)中看到的“使用
    Qiskit® 遍历 IBM Quantum® 硬件”，“比较后端”食谱，这目前是免费 IBM 量子机器最常用的设置。
- en: For this example, we want to use only 1 qubit for clarity. If we use all five,
    the results that will be displayed will also include the results of the four we
    won't be using, which can be confusing.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于这个例子，我们只想使用 1 个量子比特以保持清晰。如果我们使用所有五个，显示的结果也将包括我们不会使用的四个的结果，这可能会造成混淆。
- en: So, in the **Untitled circuit** tab that you just opened, hover over a qubit
    label (**q****0**). The label shifts to a trash can icon. Use this icon to remove
    qubits until you have one left. Your quantum score now has only one line.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，在你刚刚打开的**未命名电路**选项卡中，将鼠标悬停在量子比特标签（**q0**）上。标签会变成一个垃圾桶图标。使用这个图标移除量子比特，直到只剩下一个为止。你的量子代码现在只有一行。
- en: 'Prepending that line is the label, **q****0**, which is the name of your qubit:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这一行前面是标签，**q0**，这是你的量子比特的名称：
- en: '![Figure 3.7 – A blank 1-qubit quantum score](img/Figure_3.7_B14436.jpg)'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.7 – 空的 1 量子比特量子代码](img/Figure_3.7_B14436.jpg)'
- en: Figure 3.7 – A blank 1-qubit quantum score
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.7 – 空的 1 量子比特量子代码
- en: Add a ![](img/Formula_03_001.png) gate to the score.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 ![](img/Formula_03_001.png) 门添加到代码中。
- en: Now select and drag the ![](img/Formula_03_001.png) gate to the **q****0** line
    of your score.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将 ![](img/Formula_03_001.png) 门拖到你的代码的**q0**行。
- en: Tip
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士
- en: As you will see further in [*Chapter 4*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081),
    *Starting at the Ground Level with Terra*, in Qiskit®, the NOT gate is represented
    by an **X**.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你将在[*第 4 章*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081)中进一步看到，“从 Terra
    的基础开始”，在 Qiskit® 中，NOT 门用 **X** 表示。
- en: 'You have now added an X, or NOT gate, which will flip the qubit from its initial
    set value 0 to 1:'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你现在添加了一个 X，或者 NOT 门，它将量子比特从其初始设置值 0 翻转到 1：
- en: '![Figure 3.8 – NOT gate added](img/Figure_3.8_B14436.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.8 – 添加了 NOT 门](img/Figure_3.8_B14436.jpg)'
- en: Figure 3.8 – NOT gate added
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.8 – 添加了 NOT 门
- en: A glossary of operations
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 操作术语表
- en: To get more information about the available instructions, click the (**i**)
    icon in the upper-right corner of Circuit Composer and select **Operations glossary**
    to open up an exhaustive guide to all instructions (gates, measurements, and more)
    that are available to you.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要获取有关可用指令的更多信息，请点击电路作曲家右上角的（**i**）图标，并选择**操作术语表**以打开对所有指令（门、测量等）的详尽指南。
- en: Now, add a measurement instruction to finish off your circuit.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，添加一个测量指令来完成你的电路。
- en: The measurement instruction is required if you want to run your score and get
    a result. It measures the state of the **q****0** qubit and writes the result
    (0 or 1) to the classical register (**c1**) so that you can see the outcome of
    your experiment.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想运行你的代码并获得结果，则需要测量指令。它测量**q0**量子比特的状态，并将结果（0 或 1）写入经典寄存器（**c1**），这样你就可以看到实验的结果。
- en: 'In multi-qubit circuits, there is no need to display all the classical registers
    as lines. Instead, they are represented by one line labeled with the number of
    classical registers that it represents; for example, **c5** for five classical
    registers:'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在多量子比特电路中，没有必要显示所有经典寄存器作为线条。相反，它们由一个带有代表其数量的经典寄存器标签的线条表示；例如，**c5**代表五个经典寄存器：
- en: '![Figure 3.9 – Measurement instruction added](img/Figure_3.9_B14436.jpg)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.9 – 添加了测量指令](img/Figure_3.9_B14436.jpg)'
- en: Figure 3.9 – Measurement instruction added
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.9 – 添加了测量指令
- en: You can now run your circuit.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以运行你的电路了。
- en: Optionally, save the circuit by first selecting **Untitled circuit** and giving
    the experiment a good name.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可选地，通过首先选择**未命名电路**并为实验起一个好名字来保存电路。
- en: Click the **Run on ibmq_qasm_simulator** button.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**在 ibmq_qasm_simulator 上运行**按钮。
- en: Take a look at the results.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看结果。
- en: 'To see the results of your job, click the **Jobs** icon right beneath the **Run**
    button. The results of your job are displayed:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看作业结果，请点击位于**运行**按钮正下方的**作业**图标。作业的结果将显示：
- en: '![Figure 3.10 – The job results box](img/Figure_3.10_B14436.jpg)'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.10 – 作业结果框](img/Figure_3.10_B14436.jpg)'
- en: Figure 3.10 – The job results box
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.10 – 作业结果框
- en: 'Clicking the job results box opens the **Result** page, and displays the final
    result of the job you just ran. In this case, we got a result of **1**, with **100%**
    certainty:'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击作业结果框会打开**结果**页面，并显示你刚刚运行的作业的最终结果。在这种情况下，我们得到了一个**1**的结果，**100%**确定：
- en: '![Figure 3.11 – Job result: 1 with 100% certainty](img/Figure_3.11_B14436.jpg)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.11 – 作业结果：1，100% 确定性](img/Figure_3.11_B14436.jpg)'
- en: 'Figure 3.11 – Job result: 1 with 100% certainty'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.11 – 作业结果：1，100% 确定性
- en: Now, go ahead and play a little.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们来玩一会儿。
- en: Drag some more quantum instructions into your score willy-nilly, and adjust
    the number of qubits up and down. You are now building complex quantum circuits,
    but not necessarily working quantum programs or algorithms. This would be like
    soldering on random gates to your classical computer or cooking by randomly adding
    ingredients to your pot. You would get some kind of result, but probably nothing
    useful or edible. But it is fun!
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随意将一些量子指令拖到你的分数中，上下调整量子比特的数量。你现在正在构建复杂的量子电路，但并不一定是工作量子程序或算法。这就像在你经典计算机上随机焊接门，或者随机往锅里加食材做饭。你可能会得到某种结果，但可能没有什么有用的或可食用的。但这是很有趣的！
- en: 'Here''s an example – see if you can recreate it and then inspect it to see
    what it does (if anything):'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里有一个例子——看看你是否能重新创建它，然后检查它看看它做了什么（如果有）：
- en: '![Figure 3.12 – Randomly dragged and dropped circuit](img/Figure_3.12_B14436.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.12 – 随机拖放电路](img/Figure_3.12_B14436.jpg)'
- en: Figure 3.12 – Randomly dragged and dropped circuit
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12 – 随机拖放电路
- en: 'Just look at the complex results of that circuit. I wonder what it does? And
    also, note the two graphical boxes at the bottom of the page: **Measurement Probabilities**
    and **Q-sphere**. I have ignored them until now, but let''s take a look and see
    what they are.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 只需看看那个电路的复杂结果。我想知道它是什么？此外，注意页面底部的两个图形框：**测量概率**和**Q-球体**。我之前一直忽略了它们，但现在让我们来看看它们是什么。
- en: There's more
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容
- en: 'The score is read, much like a music score, from left to right, in time. This
    means that the gates on the left side of the score execute before the ones more
    to the right. You can inspect how your circuit should behave by using the **Inspect**
    feature of the composer:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 分数就像音乐乐谱一样从左到右，按时间顺序读取。这意味着乐谱左侧的门先于右侧的门执行。你可以通过使用作曲家的**检查**功能来检查你的电路应该如何表现：
- en: In IBM Quantum Experience®, open the circuit that you just created, with a single
    qubit, a single NOT gate, and a measurement instruction.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 IBM Quantum Experience® 中，打开你刚刚创建的电路，该电路包含一个量子比特、一个 NOT 门和一个测量指令。
- en: From the top menu, select **Inspect**.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部菜单中选择**检查**。
- en: In the **Inspector** window that opens, you can now step your way through your
    score to see how the statevector that represents your qubit changes as you apply
    the gates by clicking **>**. You will also see the so-called Q-sphere, which is
    a graphical representation of the possible outcomes of your circuit. We first
    encountered the state vector in [*Chapter 2*](B14436_02_Final_PG_ePub.xhtml#_idTextAnchor045),
    *Quantum Computing and Qubits with Python*. More about the Q-sphere can be found
    in [*Chapter 6*](B14436_06_Final_PG_ePub.xhtml#_idTextAnchor156), *Understanding
    the Qiskit® Gate Library*.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在打开的**检查器**窗口中，你现在可以通过点击**>**来逐步查看你的分数，以了解代表你的量子比特的状态向量是如何随着你应用门而变化的。你还会看到所谓的
    Q-球体，它是电路可能结果的图形表示。我们第一次在[*第 2 章*](B14436_02_Final_PG_ePub.xhtml#_idTextAnchor045)中遇到了状态向量，*使用
    Python 进行量子计算和量子比特*。更多关于 Q-球体的信息可以在[*第 6 章*](B14436_06_Final_PG_ePub.xhtml#_idTextAnchor156)中找到，*理解
    Qiskit® 门库*。
- en: 'In our case, with just a single X gate, as we set up our qubit to start as
    0, we expect the statevector to start at ![](img/Formula_03_003.png) and then
    become ![](img/Formula_03_004.png) as we apply the first X gate:'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在我们的情况下，只有一个 X 门，因为我们把量子比特设置为从 0 开始，我们预计状态向量将从 ![图 3.11 – 作业结果：1，100% 确定性](img/Formula_03_003.png)
    开始，然后在我们应用第一个 X 门时变成 ![图 3.11 – 作业结果：1，100% 确定性](img/Formula_03_004.png)：
- en: '![Figure 3.13 – Visualizing the X gate action on our qubit as a statevector
    and as a Q-sphere'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.13 – 将 X 门的作用可视化为我们量子比特的状态向量以及 Q-球体](img/Figure_3.13_B14436.jpg)'
- en: '](img/Figure_3.13_B14436.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.13 – 将 X 门的作用可视化为我们量子比特的状态向量以及 Q-球体](img/Figure_3.13_B14436.jpg)'
- en: Figure 3.13 – Visualizing the X gate action on our qubit as a statevector and
    as a Q-sphere
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.13 – 将 X 门的作用可视化为我们量子比特的状态向量以及 Q-球体
- en: 'The Q-sphere indicates that we will get only one outcome and that this outcome
    will be ![](img/Formula_03_005.png). If you switch the **Statevector** display
    to the **Measurement Probabilities** option instead, you can verify my statement
    that the circuit should, indeed, produce the result 100% of the time:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Q-sphere 指示我们将只得到一个结果，并且这个结果将是 ![img/Formula_03_005.png](img/Formula_03_005.png)。如果你将
    **Statevector** 显示切换到 **Measurement Probabilities** 选项，你可以验证我的说法，即电路确实应该每次都产生100%的结果：
- en: '![Figure 3.14 – The result 1 with 100% certainty](img/Figure_3.14_B14436.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图3.14 – 以100%的确定性得到结果1](img/Figure_3.14_B14436.jpg)'
- en: Figure 3.14 – The result 1 with 100% certainty
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14 – 以100%的确定性得到结果1
- en: The **Inspect** tool lets you test your circuit at any gate. This is not possible
    when running on an actual quantum computer, as testing a qubit would be the same
    as measuring it, and then the qubit loses its quantumness and behaves like a classical
    bit. What is done here is a quick run of the circuit up to that point using a
    statevector simulator.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**Inspect** 工具允许你在任何门处测试你的电路。在实际量子计算机上运行时，这是不可能的，因为测试量子位就等同于测量它，然后量子位会失去其量子特性，表现得像经典比特。这里所做的是使用状态向量模拟器快速运行到那个点的电路。'
- en: 'If you want to include the initial ![](img/Formula_03_006.png) state in the
    inspection, then add a barrier instruction before the first gate of your circuit.
    The barrier doesn''t manipulate the qubit but will let the **Inspect** tool register
    the initial state of the qubit:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在检查中包含初始 ![img/Formula_03_006.png](img/Formula_03_006.png) 状态，那么在你的电路的第一个门之前添加一个障碍指令。障碍不会操作量子位，但会让
    **Inspect** 工具记录量子位的初始状态：
- en: '![Figure 3.15 – Adding a barrier gate before the first gate](img/Figure_3.15_B14436.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图3.15 – 在第一个门之前添加障碍门](img/Figure_3.15_B14436.jpg)'
- en: Figure 3.15 – Adding a barrier gate before the first gate
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 – 在第一个门之前添加障碍门
- en: In the chapters that follow, we will create a variation of this **Inspect**
    feature to look through our circuits before we run them. For more information,
    see the *Visualizing circuits and results* recipe in [*Chapter 4*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081),
    *Starting at the Ground Level with Terra*.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将创建一个 **Inspect** 功能的变体，在我们运行电路之前查看它们。更多信息，请参阅 [*第4章*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081)
    中的 *Visualizing circuits and results* 菜单，*从 Terra 的基础开始*。
- en: Tossing a quantum coin
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 抛量子硬币
- en: 'One of the examples I use is what is arguably the simplest useful quantum program
    that you can build: a simulated coin toss.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的例子之一可能是你可以构建的最简单有用的量子程序：模拟抛硬币。
- en: We will go into more detail about the quantum coin toss in [*Chapter 4*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081),
    *Starting at the Ground Level with Terra*, but I will use that program as an example
    here. It is very small, and not too complicated to understand.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第4章*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081) 的 *从 Terra 的基础开始*
    中更详细地介绍量子抛硬币，但我会在这里使用那个程序作为例子。它非常小，而且理解起来并不复杂。
- en: As we discussed briefly in [*Chapter 2*](B14436_02_Final_PG_ePub.xhtml#_idTextAnchor045),
    *Quantum Computing and Qubits with Python*, a quantum computer, in contrast to
    a classical computer, provides you with probabilistic, or randomized, computation.
    In this case, we set up our qubit as a superposition that results in probabilities
    to get an outcome of 0 or 1, or heads or tails in coin toss nomenclature, when
    we measure the qubit.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们简要讨论过的 [*第2章*](B14436_02_Final_PG_ePub.xhtml#_idTextAnchor045) ，*使用 Python
    进行量子计算和量子比特*，与经典计算机相比，量子计算机为你提供概率性或随机计算。在这种情况下，我们将我们的量子比特设置为一种叠加态，当我们测量量子比特时，它会产生得到0或1、或正面或反面的概率。
- en: How to do it...
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Build the quantum circuit and then run it. This is the circuit we will come
    back to later in the book, on the Qiskit® side of things:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 构建量子电路并运行它。这是我们将在本书的 Qiskit® 部分稍后回过头来讨论的电路：
- en: Log in to IBM Quantum Experience® at [https://quantum-computing.ibm.com/composer](https://quantum-computing.ibm.com/composer).
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 IBM Quantum Experience® [https://quantum-computing.ibm.com/composer](https://quantum-computing.ibm.com/composer)。
- en: From IBM Quantum Experience®, select **Circuit Composer** from the left pane.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 IBM Quantum Experience® 中，从左侧面板选择 **Circuit Composer**。
- en: Create a new circuit.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的电路。
- en: Find the gates that you need.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到你需要的大门。
- en: In this recipe, we will just use two quantum instructions, one of which we briefly
    discussed in *Chapter 2*, *Quantum Computing and Qubits with Python*, in the *Hadamard
    gate* recipe. Remember that the H gate takes the input qubit and creates a superposition.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将只使用两个量子指令，其中一个我们在**第二章**，*使用 Python 的量子计算和量子比特*中的*Hadamard 门*菜谱中简要讨论过。记住，H
    门将输入量子比特创建一个叠加态。
- en: We will also use a measurement instruction to measure the qubit and write the
    result to the classical bit line at the bottom of the score.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们还将使用测量指令来测量量子比特并将结果写入分数底部的经典比特行。
- en: Build the circuit by dragging the H gate from the **Gates** section of the composer
    to the first qubit line. And then drag the **Measurement** instruction to the
    same line, placing it to the right of the H gate. Your quantum score is now done.
    Your circuit should look something like this:![Figure 3.16 – Simple coin toss
    circuit](img/Figure_3.16_B14436.jpg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过从作曲家的**门**部分拖动 H 门到第一个量子比特行来构建电路。然后，将**测量**指令拖到同一行，放在 H 门右边。你的量子分数现在完成了。你的电路应该看起来像这样：![图
    3.16 – 简单的抛硬币电路](img/Figure_3.16_B14436.jpg)
- en: Figure 3.16 – Simple coin toss circuit
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.16 – 简单的抛硬币电路
- en: But why do I have so many qubits that I do not use?
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但为什么我有这么多我没有使用的量子比特？
- en: The default number of qubits set by the composer is **3**. You can place your
    H gate on any qubit you want as long as you place the **Measure** instruction
    on the same qubit.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作曲家默认设置的量子比特数量是**3**。只要你在同一个量子比特上放置**测量**指令，你就可以将你的 H 门放在任何你想要的量子比特上。
- en: There is also nothing stopping you from placing an H gate on each of the qubits
    followed by a **Measure** gate. What you are then building is a set of five simultaneous
    coin tosses.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 没有什么阻止你在每个量子比特上放置一个 H 门，然后跟一个**测量**门。你那时正在构建一组五个同时抛硬币。
- en: You can also change the number of qubits, by clicking on the **+** icon directly
    below the lowest qubit, or by hovering over a qubit and clicking the trashcan
    icon that appears.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以通过点击位于最低量子比特直接下方的**+**图标，或者将鼠标悬停在量子比特上并点击出现的垃圾桶图标来更改量子比特的数量。
- en: Save the circuit by first clicking **Untitled circuit** and giving the experiment
    a good name, then save it. Your circuit is now ready to run.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过首先点击**未命名电路**并给实验起一个好名字，然后保存电路来保存电路。现在你的电路已经准备好运行了。
- en: Click the **Run on ibmq_qasm_simulator** button.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**在 ibmq_qasm_simulator 上运行**按钮。
- en: Take a look at the results.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看结果。
- en: 'To see the results of your job, click the **Jobs** icon right beneath the **Run**
    button. Wait for the job to display the **Completed** result, then click the job
    results box to open the **Result** page. Your 1,024 runs of the same circuit have
    resulted in a statistical 50/50 spread of the two possible outcomes 0 and 1, as
    we expected in the *Quick introduction to quantum gates* recipe in [*Chapter 2*](B14436_02_Final_PG_ePub.xhtml#_idTextAnchor045),
    *Quantum Computing and Qubits with Python*. The results will look something like
    the following:'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看作业的结果，请点击位于**运行**按钮正下方的**作业**图标。等待作业显示**完成**结果，然后点击作业结果框以打开**结果**页面。你的 1,024
    次相同电路运行产生了两个可能结果 0 和 1 的统计 50/50 分布，正如我们在**第二章**，*使用 Python 的量子计算和量子比特*中的*快速介绍量子门*菜谱中预期的那样。结果看起来可能如下：
- en: '![Figure 3.17 – The 50/50 result of our quantum coin toss, half heads and half
    tails](img/Figure_3.17_B14436.jpg)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.17 – 我们量子抛硬币的 50/50 结果，一半正面和一半反面](img/Figure_3.17_B14436.jpg)'
- en: Figure 3.17 – The 50/50 result of our quantum coin toss, half heads and half
    tails
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.17 – 我们量子抛硬币的 50/50 结果，一半正面和一半反面
- en: Here, the output is a roughly equal probability of getting a 0 or a 1, just
    like a physical coin, where the probability of heads or tails is roughly equal.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，输出得到 0 或 1 的概率大致相等，就像一个物理硬币，正面和反面的概率大致相等。
- en: Run your score on a real quantum computer.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在真实的量子计算机上运行你的分数。
- en: But really, running your scores on a simulator is a little disappointing perhaps.
    That is not why you started down the quantum computing path. But fear not, we
    can do better.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但实际上，在模拟器上运行你的分数可能有些令人失望。这并不是你开始量子计算之路的原因。但不用担心，我们可以做得更好。
- en: We will run the score one more time but select a non-simulator backend. For
    this simple quantum score, the result will be the same for a 1-qubit coin toss
    unless the backend is really out of tune. For more complex quantum programs, however,
    the results will differ between the simulator and the real quantum computer.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将再次运行分数，但选择非模拟后端。对于这个简单的量子分数，如果后端真的没有调好，1量子比特抛硬币的结果将是相同的。然而，对于更复杂的量子程序，模拟器和真实量子计算机的结果可能会有所不同。
- en: Click the **Run settings** button, and then select a *backend* other than **ibmq_qasm_simulator**.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**运行设置**按钮，然后选择除**ibmq_qasm_simulator**之外的其他**后端**。
- en: To get a feel for how long your wait time might be for each backend, you can
    go to the main **IBM Quantum Experience** dashboard and look at the individual
    queues for the backends.
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要了解每个后端可能需要等待的时间，您可以访问主**IBM Quantum Experience**仪表板，查看后端的各个队列。
- en: Wait for the results.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待结果。
- en: To see the results of your job, click the **Jobs** icon right beneath the **Run**
    button. Wait for the job to display the **Completed** result, then click the job
    results box to open the **Results** page.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看作业结果，请点击位于**运行**按钮正下方的**作业**图标。等待作业显示**完成**结果，然后点击作业结果框以打开**结果**页面。
- en: Get in line
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 排队
- en: By default, your quantum score will run on the online IBM Quantum® simulator
    that simulates a universal 32-qubit quantum computer. The simulator is a great
    way to test and tweak your quantum scores to make sure they run the way that you
    expect them to. Running on the simulator is usually very quick. Running on an
    actual quantum computer can take longer though, as you will be sharing those with
    other users.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，您的量子分数将在模拟一个通用32量子比特量子计算机的在线IBM Quantum®模拟器上运行。模拟器是测试和调整您的量子分数以确保它们按预期运行的好方法。在模拟器上运行通常非常快。然而，在真实的量子计算机上运行可能需要更长的时间，因为您将与其他用户共享这些计算机。
- en: 'The results might look something like the following:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 结果可能看起来像以下这样：
- en: '![Figure 3.18 – The quantum coin toss results on a real quantum computer](img/Figure_3.18_B14436.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图3.18 – 在真实量子计算机上的量子抛硬币结果](img/Figure_3.18_B14436.jpg)'
- en: Figure 3.18 – The quantum coin toss results on a real quantum computer
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18 – 在真实量子计算机上的量子抛硬币结果
- en: Note how the result looks fairly similar to what you got on the simulator. This
    will generally be the case unless the physical quantum computer qubit on which
    you run your score is out of balance, and favors one outcome over the other. Remember,
    the actual qubits are physical things and not perfect mathematical abstracts.
    In [*Chapter 5*](B14436_05_Final_PG_ePub.xhtml#_idTextAnchor128), *Touring the
    IBM Quantum® Hardware with Qiskit®,* we will, among other things, take a look
    at how individual qubits behave, and what to expect when running your circuits
    on them.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 注意结果看起来与您在模拟器上得到的结果相当相似。这通常情况下是成立的，除非您运行分数的物理量子计算机量子比特不平衡，并且偏向于某一结果而不是另一个。记住，实际的量子比特是物理实体，而不是完美的数学抽象。在[*第五章*](B14436_05_Final_PG_ePub.xhtml#_idTextAnchor128)，“使用Qiskit®游览IBM
    Quantum®硬件”，我们将探讨其他事项，例如单个量子比特的行为，以及当在它们上运行电路时可以期待什么。
- en: There's more
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多
- en: A non-simulator backend can only inherently run a set of basis gates, from which
    all other gates are constructed. When you run your quantum program, it gets interpreted
    by the software, and the fairly complex high-level gate architecture gets `u1`,
    `u2`, `u3`, `id`, and `cx`. It turns out that all quantum programs that you write
    on Qiskit® can be expressed by using only these gates.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 非模拟后端只能固有地运行一组基门，所有其他门都是基于这些基门构建的。当您运行量子程序时，它会被软件解释，相当复杂的高级门架构会被转换为`u1`、`u2`、`u3`、`id`和`cx`。结果是，您在Qiskit®上编写的所有量子程序都可以仅使用这些门来表示。
- en: 'You can see the basis gates used by the quantum backend from the **Your backends**
    part of the IBM Quantum Experience® web console, by clicking the backend that
    you are interested in:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从IBM Quantum Experience®网页控制台的**您的后端**部分看到量子后端使用的基门，通过点击您感兴趣的后端：
- en: '![Figure 3.19 – The ibmq_santiago backend basis gates are u1, u2, u3, cx, and
    id'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.19 – ibmq_santiago后端基门为u1、u2、u3、cx和id](img/Figure_3.19_B14436.jpg)'
- en: '](img/Figure_3.19_B14436.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.19_B14436.jpg)'
- en: Figure 3.19 – The ibmq_santiago backend basis gates are u1, u2, u3, cx, and
    id
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.19 – ibmq_santiago后端基门为u1、u2、u3、cx和id
- en: Why is this important? Well, the translation of the gates (in your score) to
    the basis gates that can be run on a backend is called **transpiling** and is
    done before you run the program. The transpiler takes your input score and converts
    it to the basis gates, which are then run on the backend.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这为什么重要呢？嗯，将门（在您的分数中）转换为可以在后端运行的基门的过程称为 **转换**，并在运行程序之前完成。转换器将您的输入分数转换为基门，然后这些基门在后端运行。
- en: Now, it turns out that the regular gates that you are using are not always directly
    translatable to a single basis gate. Sometimes the transpiler has to do a bit
    of work, reworking your circuit by replacing your gates with clusters of other
    gates.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，结果是您所使用的常规门并不总是可以直接转换为单个基门。有时转换器必须做一些工作，通过用其他门的簇替换您的门来重构您的电路。
- en: 'For example, here are the original and transpiled versions of the simple quantum
    coin toss as run on one of IBM''s 5-qubit machines:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这里是在 IBM 的 5 量子比特机器上运行的简单量子抛硬币的原始和转换版本：
- en: '![Figure 3.20 – Original and transpiled quantum coin toss'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.20 – 原始和转换后的量子抛硬币'
- en: '](img/Figure_3.20_B14436.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.20_B14436.jpg)'
- en: Figure 3.20 – Original and transpiled quantum coin toss
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.20 – 原始和转换后的量子抛硬币
- en: As you can see, not many changes have occurred. The **H** gate is now a **U2**
    gate with 0 and ![](img/Formula_03_007.png) as input, and our simplified 3-qubit
    score is replaced by the actual five qubits of the backend. But the depth of the
    circuit stays the same – two gates long.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，变化不大。**H** 门现在是一个 **U2** 门，输入为 0 和 ![img/Formula_03_007.png](img/Formula_03_007.png)，我们的简化
    3 量子比特分数被后端实际五个量子比特所取代。但电路的深度保持不变 – 两个门长。
- en: 'For more complicated circuits, things get more complex mainly because there
    are other gates in it. In the example that follows, which is from [*Chapter 9*](B14436_09_Final_PG_ePub.xhtml#_idTextAnchor246),
    *Grover''s Search Algorithm*, in addition to X and H gates, there are more elaborate
    gates, such as the **controlled-controlled NOT** (**CCX**) gate with two inputs
    and one output. The original score has a depth of 22 gates:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更复杂的电路，事情变得更加复杂，主要是因为其中包含其他门。在下面的例子中，它来自 [*第 9 章*](B14436_09_Final_PG_ePub.xhtml#_idTextAnchor246)，*Grover
    搜索算法*，除了 X 和 H 门之外，还有更复杂的门，例如具有两个输入和一个输出的 **受控-受控非**（**CCX**）门。原始分数的深度为 22 门：
- en: '![Figure 3.21 – Original Grover search algorithm for three qubits](img/Figure_3.21_B14436.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.21 – 三量子比特的原始 Grover 搜索算法](img/Figure_3.21_B14436.jpg)'
- en: Figure 3.21 – Original Grover search algorithm for three qubits
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.21 – 三量子比特的原始 Grover 搜索算法
- en: 'Because the quantum computer backend cannot directly use the X, H, and CCX
    gates, these have to be transpiled into U and CX gates. The transpiled score is
    49 gates deep:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 因为量子计算机后端不能直接使用 X、H 和 CCX 门，所以这些门必须转换为 U 和 CX 门。转换后的分数深度为 49 门：
- en: '![Figure 3.22 – Transpiled Grover search algorithm for three qubits'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.22 – 转换后的三量子比特 Grover 搜索算法'
- en: '](img/Figure_3.22(a)_B14436-01.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.22(a)_B14436-01.jpg)'
- en: Figure 3.22 – Transpiled Grover search algorithm for three qubits
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.22 – 转换后的三量子比特 Grover 搜索算法
- en: The importance of the barrier
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 障碍的重要性
- en: If you take a closer look at the original Grover circuit, you will notice that
    in some locations, you see two of the same kind of gate immediately following
    each other. Remember from [*Chapter 2*](B14436_02_Final_PG_ePub.xhtml#_idTextAnchor045),
    *Quantum Computing and Qubits with Python*, that quantum gates are reversible,
    and that two identical gates following each other might simply cancel out. If
    we let the transpiler go to work, it would just remove the duplicated gates in
    order to simplify the circuit. This is usually not the best solution as the gates
    might be part of a bigger structure that needs to be kept intact.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您仔细观察原始的 Grover 电路，您会注意到在某些位置，您会看到两个相同类型的门紧挨着。记得从 [*第 2 章*](B14436_02_Final_PG_ePub.xhtml#_idTextAnchor045)，*使用
    Python 的量子计算和量子比特*，量子门是可逆的，并且两个连续的相同门可能会简单地相互抵消。如果我们让转换器工作，它就会移除重复的门以简化电路。这通常不是最好的解决方案，因为这些门可能是需要保持完整的大结构的一部分。
- en: This is where the barrier component and the vertical gray bar in the score comes
    in. A **barrier** tells the transpiler to not simplify across it; if two identical
    gates are separated by a barrier, the transpiler will not remove them but transpile
    each of them into the correct gate type. Take a look at the transpiler version
    of the Grover score and you will see what I mean.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是障碍组件和分数中的垂直灰色栏发挥作用的地方。一个**障碍**告诉编译器不要跨过它；如果两个相同的门由一个障碍隔开，编译器不会删除它们，而是将每个门转换为正确的门类型。看看Grover分数的编译器版本，你就会明白我的意思。
- en: Moving between worlds
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在世界之间移动
- en: Now you have seen how to create your quantum scores in Circuit Composer, and
    how to run them on a simulator, and on a real IBM quantum computer. But the rest
    of the book will be about working in Qiskit® with your programs. Do we just say
    farewell to IBM Quantum Experience® then?
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经看到了如何在电路作曲家中创建你的量子分数，以及如何在模拟器和真实的IBM量子计算机上运行它们。但本书的其余部分将关于如何在Qiskit®中使用你的程序进行工作。那么我们就此告别IBM
    Quantum Experience®吗？
- en: Not so fast. IBM Quantum Experience® is a great environment for learning how
    to build quantum scores, and you do not have to troubleshoot Python code or worry
    about your environment being up to date (IBM takes care of that for you), and
    it is actually pretty easy to take what you create in IBM Quantum Experience®
    and just move it over to Qiskit®.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 还不快呢。IBM Quantum Experience®是一个很好的环境，用于学习如何构建量子分数，你不必调试Python代码或担心你的环境是否更新（IBM为你处理这些），实际上，将你在IBM
    Quantum Experience®中创建的内容移动到Qiskit®非常简单。
- en: 'You have two options:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 你有两个选项：
- en: '**Qiskit®**: With Qiskit® code export, your quantum score is translated into
    Python code that you can paste directly into your Python interpreter and run.
    This is a one-way trip from IBM Quantum Experience® to Qiskit®.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Qiskit®**：使用Qiskit®代码导出，你的量子分数被转换为可以直接粘贴到Python解释器中并运行的Python代码。这是从IBM Quantum
    Experience®到Qiskit®的单程之旅。'
- en: '`QuantumCircuit.from_qasm_str()` method in Qiskit® to import that code. To
    go the other way, use `<circuit>.qasm()` to export your circuit from Qiskit® and
    then paste into **Code Editor** to go the other way.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Qiskit®中的`QuantumCircuit.from_qasm_str()`方法导入该代码。要反向操作，使用`<circuit>.qasm()`从Qiskit®导出你的电路，然后将其粘贴到**代码编辑器**中以进行反向操作。
- en: Getting ready
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The Python files for this recipe can be downloaded from here: [https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03](https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03).'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 该食谱的Python文件可以从这里下载：[https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03](https://github.com/PacktPublishing/Quantum-Computing-in-Practice-with-Qiskit-and-IBM-Quantum-Experience/tree/master/Chapter03)。
- en: How to do it...
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Let''s start by importing the QASM code from your coin toss experiment:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先从导入你的抛硬币实验的QASM代码开始：
- en: 'From your web browser, go to the following URL, and then log in with your IBM
    Quantum Experience® account: [https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/).'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的网络浏览器中，访问以下URL，然后使用你的IBM Quantum Experience®账户登录：[https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/)。
- en: Select **Circuit Composer**, and in the breadcrumb click **Circuits**.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**电路作曲家**，在导航栏中点击**电路**。
- en: On the **Circuit Composer** file page, click your **Coin toss** circuit.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**电路作曲家**文件页面上，点击你的**抛硬币**电路。
- en: In the **Circuit Composer** window, in the left pane, select the **<\> Code**
    editor.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**电路作曲家**窗口中，在左侧面板中选择**<\>代码**编辑器。
- en: To export your quantum score as Qiskit® code, in the dropdown select `print(circuit)`
    line and running the code. This will result in an output something like this:![Figure
    3.23 – The exported coin toss Python code and its output
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将你的量子分数导出为Qiskit®代码，在下拉菜单中选择`print(circuit)`行并运行代码。这将产生类似以下输出的结果：![图3.23 –
    导出的抛硬币Python代码及其输出
- en: '](img/Figure_3.23_B14436.jpg)'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.23_B14436.jpg)'
- en: Figure 3.23 – The exported coin toss Python code and its output
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.23 – 导出的抛硬币Python代码及其输出
- en: To export your quantum score as QASM code, in the dropdown, select `.qasm` file,
    and later import that file into Qiskit®.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将你的量子分数导出为QASM代码，在下拉菜单中选择`.qasm`文件，然后将其导入到Qiskit®中。
- en: Now, move over to your Qiskit® environment and run the `ch3_r1_import_qasm.py`
    file. If you have forgotten how to get there, take a look at the *Open a recipe
    file* recipe in *Chapter 1*, *Preparing Your Environment*.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，转到你的Qiskit®环境，并运行`ch3_r1_import_qasm.py`文件。如果你忘记了如何到达那里，请查看*第1章*，*准备你的环境*中的*打开配方文件*配方。
- en: 'For this simple recipe, we will only need the `QuantumCircuit` method, so we''ll
    add that:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个简单的食谱，我们只需要 `QuantumCircuit` 方法，所以我们将添加它：
- en: '[PRE0]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'First, we import the QASM string from IBM Quantum Experience®, either as a
    pasted string or as a saved file:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们从 IBM Quantum Experience® 导入 QASM 字符串，无论是作为粘贴的字符串还是作为保存的文件：
- en: '[PRE1]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you paste in the QASM code at the prompt, you will end up with something
    similar to the following example. If you enter a filename, the file will get imported,
    with much the same end result:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你将 QASM 代码粘贴到提示符中，你最终会得到以下示例类似的内容。如果你输入文件名，文件将被导入，结果大致相同：
- en: '[PRE2]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Paste in a QASM string from IBM Qx (or enter the full path and filename of
    a `.qasm` file to import):'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 IBM Qx 粘贴一个 QASM 字符串（或输入完整路径和文件名以导入 `.qasm` 文件）：
- en: '[PRE3]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Hit *Enter* and the circuit is imported to Qiskit®, and can now be used for
    quantum computations. The added print(circuit) at the end should display something
    like the following:![Figure 3.24 – The imported coin toss quantum circuit
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Enter* 键，电路将被导入到 Qiskit®，现在可以用于量子计算。最后的 print(circuit) 应该显示以下内容：![图 3.24
    – 导入的抛硬币量子电路
- en: '](img/Figure_3.24_B14436.jpg)'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_3.24_B14436.jpg)'
- en: Figure 3.24 – The imported coin toss quantum circuit
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.24 – 导入的抛硬币量子电路
- en: You have now imported your QASM code into Qiskit® and created a quantum circuit
    object named `circ`.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在已经将你的 QASM 代码导入到 Qiskit® 并创建了一个名为 `circ` 的量子电路对象。
- en: 'Now let''s try creating and exporting OpenQASM code from Qiskit®:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试从 Qiskit® 创建和导出 OpenQASM 代码：
- en: But I don't know how to code in Qiskit® yet
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 但我还没有学会如何用 Qiskit® 编码
- en: Up until this point, you have not yet created any quantum circuits in Qiskit®.
    Not to worry, we will use the `random_circuit()` method to create random circuits
    that you can export and then import into IBM Quantum Experience® to take a look
    at.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你还没有在 Qiskit® 中创建任何量子电路。不用担心，我们将使用 `random_circuit()` 方法创建随机电路，你可以导出并导入到
    IBM Quantum Experience® 中查看。
- en: In your Qiskit® environment, open the `ch3_r2_export_qasm.py` file.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 Qiskit® 环境中，打开 `ch3_r2_export_qasm.py` 文件。
- en: 'The random circuit method to import is this:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入的随机电路方法如下：
- en: '[PRE4]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'First, we create and print a random quantum circuit:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们创建并打印一个随机量子电路：
- en: '[PRE5]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The depth of the random circuit is set to `2` in this example, which means we
    will create a circuit with two gates maximum. The number of qubits is also set
    to `2`, with obvious results. You can tweak these numbers to see what shows up.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个例子中，随机电路的深度设置为 `2`，这意味着我们将创建一个最多包含两个门的电路。量子比特的数量也设置为 `2`，结果显而易见。你可以调整这些数字来查看会出现什么。
- en: 'The circuit might look something like this:'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 电路可能看起来像这样：
- en: '![Figure 3.25 – A randomly created circuit'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure 3.25 – 随机创建的电路'
- en: '](img/Figure_3.25_B14436.jpg)'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_3.25_B14436.jpg)'
- en: Figure 3.25 – A randomly created circuit
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.25 – 随机创建的电路
- en: 'Next, we export the circuit as QASM code:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将电路导出为 QASM 代码：
- en: '[PRE6]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The QASM code is displayed and is also saved to a file in your local environment
    with the filename specified:'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: QASM 代码被显示，并且也被保存到你的本地环境中，文件名由你指定：
- en: '[PRE7]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Back in IBM Quantum Experience®, you can now go to the circuit editor in the
    `Circuit.qasm` file that you just created.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到 IBM Quantum Experience®，你现在可以进入你刚刚创建的 `Circuit.qasm` 文件中的电路编辑器。
- en: Watch your circuit instantly appear in Circuit Composer:![Figure 3.26 – Imported,
    randomly generated circuit
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 观察你的电路立即出现在电路作曲家：![Figure 3.26 – 导入的随机生成电路
- en: '](img/Figure_3.26_B14436.jpg)'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_3.26_B14436.jpg)'
- en: Figure 3.26 – Imported, randomly generated circuit
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.26 – 导入的随机生成电路
- en: You can now run the circuit, drag and drop new gates into the circuit, or just
    move or tweak the existing gates to see how your changes cause the circuit to
    behave differently. Don't forget to use the **Inspect** feature, **Measurement
    probabilities**, and **Q-sphere** displays to step through your circuit and see
    what it does.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以运行电路，将新门拖放到电路中，或者只是移动或调整现有门以查看你的更改如何使电路表现不同。别忘了使用 **Inspect** 功能、**测量概率**
    和 **Q-sphere** 显示来逐步查看你的电路并了解其工作原理。
- en: How it works...
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you use the `circ=QuantumCircuit.from_qasm_file()` method to import your
    quantum score, the `circ` object that you assign it to is now a `QuantumCircuit()`
    object, much in the same way that you will be creating quantum circuits in the
    chapters that follow.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 `circ=QuantumCircuit.from_qasm_file()` 方法导入你的量子分数时，你分配给它的 `circ` 对象现在是一个
    `QuantumCircuit()` 对象，这与你在后续章节中创建量子电路的方式非常相似。
- en: Using Qiskit®, you can display the circuit, append gates to the circuit, and
    more.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Qiskit®，你可以显示电路，向电路中添加门，等等。
- en: We will not be doing anything elaborate with the circuit in this chapter, but
    put a bookmark here to return when you start creating your own circuits in [*Chapter
    4*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081), *Starting at the Ground Level
    with Terra*.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将不会对电路进行任何复杂的操作，但在此处做一个书签，以便你在开始创建自己的电路时回到[*第4章*](B14436_04_Final_PG_ePub.xhtml#_idTextAnchor081)，从“地面开始”使用Terra。
- en: There's more
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容
- en: As you work your way through this book, you will be running your experiments
    mainly in your Python Qiskit® environment. If you want to, you can pull the circuits
    that you build over from the IBM Quantum Experience® environment and run them
    here as well. Perhaps you like the graphical drag-and-drop environment better,
    and the option to edit your scores on the fly?
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 当你阅读这本书时，你将主要在你的Python Qiskit®环境中运行实验。如果你想，你可以将你在IBM Quantum Experience®环境中构建的电路拉过来，在这里也运行它们。也许你更喜欢图形拖放环境，并且可以实时编辑你的分数？
- en: In the Qiskit® Python examples that follow, we will be creating `QuantumCircuit`
    objects that we give names such as `qc`, `circ`, `circuit`, and so on. You can
    export these to QASM and then import them to IBM Quantum Experience® using the
    `circ.qasm(formatted=True, filename="Circuit.qasm")` command.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的Qiskit® Python示例中，我们将创建名为`qc`、`circ`、`circuit`等命名的`QuantumCircuit`对象。你可以将这些导出为QASM，然后使用`circ.qasm(formatted=True,
    filename="Circuit.qasm")`命令将它们导入到IBM Quantum Experience®。
- en: If you want, you can use the `print(circ)` or `circ.draw()` functions to print
    out the circuit, and then manually recreate it in the composer.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想，你可以使用`print(circ)`或`circ.draw()`函数来打印电路，然后在作曲家手动重新创建它。
- en: Our sample code from building quantum scores with IBM Quantum Experience®
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们从使用IBM Quantum Experience®构建量子分数的示例代码
- en: 'If you remember, we displayed a fairly complex but random circuit in the second
    recipe of this chapter. Here is the QASM code for that circuit. Go ahead and import
    it and see if you get the same results:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得，我们在本章第二个菜谱中展示了一个相当复杂但随机的电路。以下是该电路的QASM代码。你可以导入它并查看是否得到相同的结果：
- en: '[PRE8]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: See also
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考资料还有
- en: 'For much more information about OpenQASM, see the following publications:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 关于OpenQASM的更多信息，请参阅以下出版物：
- en: '*Open Quantum Assembly Language*, Andrew W. Cross, Lev S. Bishop, John A. Smolin,
    Jay M. Gambetta, [https://arxiv.org/abs/1707.03429](https://arxiv.org/abs/1707.03429).'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*开放量子汇编语言*，Andrew W. Cross，Lev S. Bishop，John A. Smolin，Jay M. Gambetta，[https://arxiv.org/abs/1707.03429](https://arxiv.org/abs/1707.03429)。'
- en: '*OpenQASM* GitHub project: [https://github.com/Qiskit/openqasm](https://github.com/Qiskit/openqasm).'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*OpenQASM* GitHub项目：[https://github.com/Qiskit/openqasm](https://github.com/Qiskit/openqasm)。'
