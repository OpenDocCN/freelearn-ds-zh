["```py\nIn[]: import nltk\n```", "```py\nIn[]: nltk.download(\"names\")\n```", "```py\nIn[]: from nltk.corpus import names\n```", "```py\nIn[]: print(\"Count of Words in male.txt:\", len(names.words('male.txt')))\nprint(\"Count of Words in female.txt:\", len(names.words('female.txt')))\n```", "```py\nIn[]: print(\"Sample list Male names:\", names.words('male.txt')[0:5])\nprint(\"Sample list Female names:\", names.words('female.txt')[0:5])\n```", "```py\nIn[]: def gender_features(word):       \n    return {'last_letter': word[-1]}\n```", "```py\nIn[]: gender_features('Debra')\n```", "```py\nIn[]: labeled_names = ([(name, 'male') for name in names.words('male.txt')] + [(name, 'female') for name in names.words('female.txt')])\nprint(labeled_names[0:5])\n```", "```py\nIn[]: import random\nrandom.shuffle(labeled_names)\nprint(labeled_names[0:5])\n```", "```py\nIn[]: featuresets = [(gender_features(n), gender) for (n, gender) in labeled_names]\nprint(featuresets[0:5])\n```", "```py\nIn[]: train_set, test_set = featuresets[500:], featuresets[:500]\nprint(\"Count of features in Training Set:\", len(train_set))\nprint(\"Count of features in Test Set:\", len(test_set))\n```", "```py\nIn[]: classifier = nltk.NaiveBayesClassifier.train(train_set)\n```", "```py\nIn[]: classifier.classify(gender_features('Aaron'))\nclassifier.classify(gender_features('Marc'))\nclassifier.classify(gender_features('Debra'))\nclassifier.classify(gender_features('Deb'))\nclassifier.classify(gender_features('Seth'))\n```", "```py\nIn[]: import nltk\nnltk.download('vader_lexicon')\n```", "```py\nIn[]:from nltk.sentiment.vader import SentimentIntensityAnalyzer\n```", "```py\nIn[]:my_analyzer = SentimentIntensityAnalyzer()\n```", "```py\nIn[]:my_input_sentence = \"I HATE my school!\"\nmy_analyzer.polarity_scores(my_input_sentence)\n```", "```py\nIn[]:import pandas as pd\nimport numpy as np\n%matplotlib inline\n```", "```py\nIn[]:!pip install twython\n```", "```py\nIn[]:import nltk\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\n```", "```py\nIn[]:analyzer = SentimentIntensityAnalyzer()\n```", "```py\nIn[]:nltk.download('vader_lexicon')\n```", "```py\nIn[]:sentences = pd.read_csv('social_media_sample_file.csv')\nlen(sentences)\n```", "```py\nIn[]:sentences.head()\n```", "```py\nIn[]:i=0 #reset counter for loop\n\n#initialize variables\nmy_vader_score_compound = [ ] \nmy_vader_score_positive = [ ] \nmy_vader_score_negative = [ ] \nmy_vader_score_neutral = [ ] \n\nwhile (i<len(sentences)):\n\n    my_analyzer = analyzer.polarity_scores(sentences.iloc[i]['text'])\n    my_vader_score_compound.append(my_analyzer['compound'])\n    my_vader_score_positive.append(my_analyzer['pos'])\n    my_vader_score_negative.append(my_analyzer['neg']) \n    my_vader_score_neutral.append(my_analyzer['neu']) \n\n    i = i+1\n\n#converting sentiment values to numpy for easier usage\nmy_vader_score_compound = np.array(my_vader_score_compound)\nmy_vader_score_positive = np.array(my_vader_score_positive)\nmy_vader_score_negative = np.array(my_vader_score_negative)\nmy_vader_score_neutral = np.array(my_vader_score_neutral)\n```", "```py\nIn[]:sentences['my VADER Score'] = my_vader_score_compound\nsentences['my VADER score - positive'] = my_vader_score_positive\nsentences['my VADER score - negative'] = my_vader_score_negative\nsentences['my VADER score - neutral'] = my_vader_score_neutral\n```", "```py\nIn[]:sentences.head(10)\n```", "```py\nIn[]:i=0 #reset counter for loop\n\n#initialize variables\nmy_prediction = [ ] \n\nwhile (i<len(sentences)):\n    if ((sentences.iloc[i]['my VADER Score'] >= 0.3)):\n        my_prediction.append('positive')\n    elif ((sentences.iloc[i]['my VADER Score'] >= 0) & (sentences.iloc[i]['my VADER Score'] < 0.3)):\n        my_prediction.append('neutral')\n    elif ((sentences.iloc[i]['my VADER Score'] < 0)):\n        my_prediction.append('negative') \n\n    i = i+1\n```", "```py\nIn[]:sentences['my predicted sentiment'] = my_prediction\n```", "```py\nIn[]:sentences.head(10)\n```", "```py\nIn[]:sentences.groupby('my predicted sentiment').size().plot(kind='barh');\n```"]