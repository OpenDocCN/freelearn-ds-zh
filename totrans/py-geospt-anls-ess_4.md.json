["```py\nimport mapnik\n\nmap = mapnik.Map(1200, 600)\nmap.background = mapnik.Color(\"#e0e0ff\")\n\nlayer = mapnik.Layer(\"countries\")\nlayer.datasource = mapnik.Shapefile(file=\"TM_WORLD_BORDERS-0.3.shp\")\nlayer.styles.append(\"country_style\")\nmap.layers.append(layer)\n\nfill_symbol = mapnik.PolygonSymbolizer(mapnik.Color(\"#60a060\"))\nline_symbol = mapnik.LineSymbolizer(mapnik.Color(\"black\"), 0.5)\n\nrule = mapnik.Rule()\nrule.symbols.append(fill_symbol)\nrule.symbols.append(line_symbol)\n\nstyle = mapnik.Style()\nstyle.rules.append(rule)\n\nmap.append_style(\"country_style\", style)\n\nmap.zoom_all()\nmapnik.render_to_file(map, \"map.png\", \"png\")\n```", "```py\nimport mapnik\n\nmap = mapnik.Map(1200, 600)\nmap.background = mapnik.Color(\"#e0e0ff\")\n```", "```py\nlayer = mapnik.Layer(\"countries\")\nlayer.datasource = mapnik.Shapefile(file=\"TM_WORLD_BORDERS-0.3.shp\")\nlayer.styles.append(\"country_style\")\nmap.layers.append(layer)\n```", "```py\nfill_symbol = mapnik.PolygonSymbolizer(mapnik.Color(\"#60a060\"))\nline_symbol = mapnik.LineSymbolizer(mapnik.Color(\"black\"), 0.5)\n```", "```py\nrule = mapnik.Rule()\nrule.symbols.append(fill_symbol)\nrule.symbols.append(line_symbol)\n```", "```py\nstyle = mapnik.Style()\nstyle.rules.append(rule)\n\nmap.append_style(\"country_style\", style)\n```", "```py\nmap.zoom_all()\nmapnik.render_to_file(map, \"map.png\", \"png\")\n```", "```py\nstyle = mapnik.Style()\n# ...setup style\nmap.append_style(\"style_name\", style)\n```", "```py\nlayer.styles.append(\"style_name\")\n```", "```py\nsymbol1 = ...\nsymbol2 = ...\nsymbol3 = ...\n\nrule1 = mapnik.Rule()\nrule1.filter = mapnik.Filter(\"[POPULATION] < 500000\")\nrule1.symbols.append(symbol1)\n\nrule2 = mapnik.Rule()\nrule.filter = mapnik.Filter(\"[POPULATION] < 1000000\")\nrule2.symbols.append(symbol2)\n\nrule3 = mapnik.Rule()\nrule3.set_else(True)\nrule3.symbols.append(symbol3)\n\nstyle.rules.append(rule1)\nstyle.rules.append(rule2)\nstyle.rules.append(rule3)\n```", "```py\nimport mapnik\nprint list(mapnik.DatasourceCache.plugin_names())\n\n```", "```py\npath = mapnik.PathExpression(\"/path/to/image.png\")\npoint_symbol = PointSymbolizer(path)\n```", "```py\nline_symbol = mapnik.LineSymbolizer(mapnik.Color(\"black\"), 0.5)\n```", "```py\nline_symbol.stroke.add_dash(5, 7)\n```", "```py\nmapnik.line_cap.BUTT_CAP\nmapnik.line_cap.ROUND_CAP\nmapnik.line_cap.SQUARE_CAP\n\n```", "```py\nmapnik.line_join.MITER_JOIN\nmapnik.line_join.ROUND_JOIN\nmapnik.line_join.BEVEL_JOIN\n\n```", "```py\nfill_symbol.fill_opacity = 0.8\n```", "```py\ntext_symbol = mapnik.TextSymbolizer(mapnik.Expresion(\"[label]\"), \"DejaVu Sans Book\", 10, mapnik.Color(\"black\"))\n```", "```py\n    import mapnik\n    for font in mapnik.FontEngine.face_names():\n        print font\n    ```", "```py\ntext_symbol.label_placement = mapnik.label_placement.LINE_PLACEMENT\n```", "```py\ntext_symbol.label_spacing = 30\n```", "```py\ntext_symbol.allow_overlap = True\n```", "```py\ntext_symbol.halo_fill = mapnik.Color(\"white\")\ntext_symbol.halo_radius = 1\n```", "```py\nraster_symbol = mapnik.RasterSymbolizer()\n```", "```py\nmap.zoomToBox(mapnik.Box2d(-124.5, 32.0, -114.0, 43.0))\n```", "```py\nimport mapnik\n\nLAYERS = [\n    {'shapefile'  : \"TM_WORLD_BORDERS-0.3.shp\",\n     'lineColor'  : \"black\",\n     'lineWidth'  : 0.4,\n     'fillColor'  : \"#709070\",\n     'labelField' : \"NAME\",\n     'labelSize'  : 12,\n     'labelColor' : \"black\"\n    }\n]\n\nBACKGROUND_COLOR = \"#a0c0ff\"\n\nBOUNDS_MIN_LAT  = 35.26\nBOUNDS_MAX_LAT  = 71.39\nBOUNDS_MIN_LONG = -10.90\nBOUNDS_MAX_LONG = 41.13\n\nMAX_WIDTH  = 1600\nMAX_HEIGHT = 800\n```", "```py\nextent = mapnik.Envelope(BOUNDS_MIN_LONG, BOUNDS_MIN_LAT,  BOUNDS_MAX_LONG, BOUNDS_MAX_LAT)\naspectRatio = extent.width() / extent.height()\n\nmapWidth = MAX_WIDTH\nmapHeight = int(mapWidth / aspectRatio)\n```", "```py\nif mapHeight > MAX_HEIGHT:\n    scaleFactor = float(MAX_HEIGHT) / float(mapHeight)\n    mapWidth = int(mapWidth * scaleFactor)\n    mapHeight = int(mapHeight * scaleFactor)\n```", "```py\nmap = mapnik.Map(mapWidth, mapHeight)\nmap.background = mapnik.Color(BACKGROUND_COLOR)\n```", "```py\nfor i,src in enumerate(LAYERS):\n    style = mapnik.Style()\n    rule = mapnik.Rule()\n\n    if src['fillColor'] != None:\n        symbol = mapnik.PolygonSymbolizer(\n                    mapnik.Color(src['fillColor']))\n        rule.symbols.append(symbol)\n    if src['lineColor'] != None:\n        symbol = mapnik.LineSymbolizer(\n                    mapnik.Color(src['lineColor']),\n                    src['lineWidth'])\n        rule.symbols.append(symbol)\n    if src['labelField'] != None:\n        symbol = mapnik.TextSymbolizer(\n                     mapnik.Expression(\n                            \"[\" + src['labelField'] + \"]\"),\n                            \"DejaVu Sans Bold\",\n                            src['labelSize'],\n                            mapnik.Color(src['labelColor']))\n        symbol.allow_overlap = True\n        rule.symbols.append(symbol)\n\n    style.rules.append(rule)\n\n    map.append_style(\"style-\"+str(i+1), style)\n```", "```py\nfor i,src in enumerate(LAYERS):\n    layer = mapnik.Layer(\"layer-\"+str(i+1))\n    layer.datasource = mapnik.Shapefile(file=src['shapefile'])\n    layer.styles.append(\"style-\"+str(i+1))\n    map.layers.append(layer)\n```", "```py\nmap.zoom_to_box(extent)\nmapnik.render_to_file(map, \"map.png\", \"png\")\n```", "```py\nLAYERS = [\n    {'shapeFile'  : \"TM_WORLD_BORDERS-0.3/TM_WORLD_BORDERS-0.3.shp\",\n     'lineColor'  : \"black\",\n     'lineWidth'  : 0.4,\n     'fillColor'  : \"#709070\",\n     'labelField' : None,\n     'labelSize'  : None,\n     'labelColor' : None,\n    },\t\n    {'shapeFile'  : \"TM_WORLD_BORDERS-0.3/TM_WORLD_BORDERS-0.3.shp\",\n     'lineColor'  : None,\n     'lineWidth'  : None,\n     'fillColor'  : None,\n     'labelField' : \"NAME\",\n     'labelSize'  : 12,\n     'labelColor' : \"black\"\n    }\n]\n```"]