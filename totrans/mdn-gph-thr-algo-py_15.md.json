["```py\n    #import needed packages\n    import pandas as pd\n    import numpy as np\n    #create conditional courses that relate to final exam passage #rates\n    #course 1, with low passage rates in general\n    course1=np.random.binomial(1,0.75,500)\n    #course 2, with low passage rates on the first attempt if course #1 was failed\n    course2a=np.random.binomial(1,0.95,500)\n    course2b=np.random.binomial(1,0.5,500)\n    course2=np.where(course1>0,course2a,course2b)\n    #course 3, with passage rates relative dependent on prior #performance\n    course3a=np.random.binomial(1,0.95,500)\n    course3b=np.random.binomial(1,0.65,500)\n    course3=np.where(course2+course1>1,course3a,course3b)\n    ```", "```py\n    #create two other courses that are not related to performance on #final exam\n    course4=np.random.binomial(1,0.8,200)\n    course5=np.random.binomial(1,0.85,200)\n    #create final exam passage rates\n    passa=np.random.binomial(1,0.95,200)\n    passb=np.random.binomial(1,0.75,200)\n    pass_final=np.where(course1+course2+course3>2,\n        course3a,course3b)\n    ```", "```py\n    Course_Data=pd.DataFrame([course1, course2, course3,\n        course4, course5, pass_final],\n        index=['Course_1', 'Course_2', 'Course_3',\n        'Course_4','Course_5',\n        'Pass_Final_Exam']).transpose()\n    ```", "```py\n    #install bnlearn package if not already in directory and import\n    !pip install pandas==1.5.3\n    !pip install bnlearn\n    import bnlearn as bn\n    ```", "```py\n    #fit Bayesian network\n    model = bn.structure_learning.fit(Course_Data)\n    ```", "```py\n    #print dependencies\n    print(model['adjmat'])\n    ```", "```py\n    #plot Bayesian network derived from dataset\n    bn.plot(model)\n    ```", "```py\n#fit Bayesian network\nmodel = bn.structure_learning.fit(Course_Data,methodtype='ex')\n```", "```py\n#print dependencies\nprint(model['adjmat'])\n```", "```py\n#plot Bayesian network derived from dataset\nbn.plot(model)\n```"]