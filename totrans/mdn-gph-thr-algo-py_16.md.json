["```py\n#load needed packages\nimport numpy as np\nimport networkx as nx\nimport matplotlib.pyplot as plt\n#create the Greenberg Nilo-Saharan language family network\nG = nx.Graph()\nG.add_nodes_from([1, 11])\nG.add_edges_from([(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(7,8),\n    (7,9),(7,10),(7,11)])\n#plot the Greenberg Nilo-Saharan language family  network\nimport matplotlib.pyplot as plt\nG.nodes[1]['subfamily'] = 'Nilo_Saharan'\nG.nodes[2]['subfamily'] = 'Koman'\nG.nodes[3]['subfamily'] = 'Saharan'\nG.nodes[4]['subfamily'] = 'Songhay'\nG.nodes[5]['subfamily'] = 'Fur'\nG.nodes[6]['subfamily'] = 'Maban'\nG.nodes[7]['subfamily'] = 'Chari_Nile'\nG.nodes[8]['subfamily'] = 'Central_Sudanic'\nG.nodes[9]['subfamily'] = 'Kunama'\nG.nodes[10]['subfamily'] = 'Berta'\nG.nodes[11]['subfamily'] = 'Eastern_Sudanic'\nlabels = nx.get_node_attributes(G, 'subfamily')\nnx.draw(G, labels=labels, font_weight='bold')\n```", "```py\n#create the Dimmendaal Nilo-Saharan language family network\nG2 = nx.Graph()\nG2.add_nodes_from([1, 9])\nG2.add_edges_from([(1,2),(1,3),(2,4),(2,5),(2,6),(5,6),(2,7),\n    (2,8),(7,8),(2,9)])\n#plot the Dimmendaal Nilo-Saharan language family  network\nG2.nodes[1]['subfamily'] = 'Nilo_Saharan'\nG2.nodes[2]['subfamily'] = 'Northeastern'\nG2.nodes[3]['subfamily'] = 'Central_Sudanic'\nG2.nodes[4]['subfamily'] = 'Maban'\nG2.nodes[5]['subfamily'] = 'Kunama'\nG2.nodes[6]['subfamily'] = 'Fur'\nG2.nodes[7]['subfamily'] = 'Saharan'\nG2.nodes[8]['subfamily'] = 'Eastern_Sudanic'\nG2.nodes[9]['subfamily'] = 'Kuliak'\nlabels2 = nx.get_node_attributes(G2, 'subfamily')\nnx.draw(G2, labels=labels2, font_weight='bold')\n```", "```py\n#compare betweenness centrality of language families\ngb=nx.betweenness_centrality(G)\nprint(np.mean(np.array(list(gb.values()))))\ngb2=nx.betweenness_centrality(G2)\nprint(np.mean(np.array(list(gb2.values()))))\n```", "```py\n#compare degree centrality of language families\ngd=nx.degree_centrality(G)\nprint(np.mean(np.array(list(gd.values()))))\ngd2=nx.degree_centrality(G2)\nprint(np.mean(np.array(list(gd2.values()))))\n```", "```py\n#compare subgraph centrality of language families\ngs=nx.subgraph_centrality(G)\nprint(np.mean(np.array(list(gs.values()))))\ngs2=nx.subgraph_centrality(G2)\nprint(np.mean(np.array(list(gs2.values()))))\n```"]