["```py\npip install numpy\npip install tensorflow\npip install scikit-learn\n```", "```py\n$ wget https://github.com/PacktPublishing/Mastering-spaCy/blob/main/Chapter10/data/restaurants.json\n```", "```py\n{\n  \"dialogue_id\": \"1_00000\",\n  \"turns\": [\n    {\n      \"speaker\": \"USER\",\n      \"utterance\": \"I am feeling hungry so I would like to find a place to eat.\",\n      \"slots\": [],\n      \"intent\": \"FindRestaurants\"\n     },\n     {\n       \"speaker\": \"SYSTEM\",\n       \"utterance\": \"Do you have a specific which you want the eating place to be located at?\",\n        \"slots\": []\n       }\n```", "```py\nHi. I'd like to find a place to eat.\nI want some ramen, I'm really craving it. Can you find me an afforadable place in Morgan Hill?\nI would like for it to be in San Jose.\nYes, please make a reservation for me.\nNo, Thanks\nHi i need a help, i am very hungry, I am looking for a restaurant\nYes, on the 7th for four people.\nNo. Can you change it to 1 pm on the 9th?\nYes. What is the phone number? Can I buy alcohol there? \n```", "```py\ncity\ncuisine\ndate\nphone_number\nrestaurant_name\nstreet_address\ntime\n```", "```py\nFind me Ethiopian/cuisine cuisine in Berkeley/city.\nThe phone number is 707-421-0835/phone_number. Your reservation is confirmed.\nNo, change the time to 7 pm/time and for one person only.\nNo, change it on next friday/date.\n```", "```py\n552 FindRestaurants\n625 ReserveRestaurant\n56  NONE\n```", "```py\nNo, Thanks  NONE\nNo, thank you very much. NONE\nNothing much. I'm good.  NONE\nI am feeling hungry so I would like to find a place to eat. FindRestaurants\nHi i need a help, i am very hungry, I am looking for a restaurant  FindRestaurants\nOk, What is the address? How pricey are they? FindRestaurants\nPlease can you make the reservation ReserveRestaurant\nThat's good. Do they serve liquor and what is there number? ReserveRestaurant\nThank you so much for setting that up. ReserveRestaurant\n```", "```py\ncity\ndate\ntime\nphone_number\ncuisine\nrestaurant_name\nstreet_address\n```", "```py\n    import spacy\n    nlp = spacy.load(\"en_core_web_md\")\n    spacy.explain(\"GPE\")\n    'Countries, cities, states'\n    ```", "```py\n    import spacy\n    nlp = spacy.load(\"en_core_web_md\")\n    doc = nlp(\"Can you please confirm that you want to book a table for 2 at 11:30 am at the Bird restaurant in Palo Alto for today\")\n    doc.ents\n    (2, 11:30 am, Bird, Palo Alto, today)\n    for ent in doc.ents:\n      print(ent.text, ent.label_) \n    2 CARDINAL\n    11:30 am TIME\n    Bird PRODUCT\n    Palo Alto GPE\n    today DATE\n    ```", "```py\nimport spacy\nnlp = spacy.load(\"en_core_web_md\")\nsentences = [\n   \"I will be eating there at 11:30 am so make it for then.\",\n   \"I'll reach there at 1:30 pm.\",\n   \"No, change it on next friday\",\n   \"Sure. Please confirm that the date is now next Friday and for 1 person.\",\n   \"I need to make it on Monday next week at half past 12 in the afternoon.\",\n   \"A quarter past 5 in the evening, please.\"\n]\n```", "```py\nfor sent in sentences:\n   doc = nlp(sent)\n   ents = doc.ents\n   print([(ent.text, ent.label_) for ent in ents])\n[('11:30 am', 'TIME')]\n[('1:30 pm', 'TIME')]\n[('next friday', 'DATE')]\n[('next Friday', 'DATE'), ('1', 'CARDINAL')]\n[('Monday next week', 'DATE'), ('half past 12', 'DATE')]\n[('A quarter past 5', 'DATE')]\n[('the evening', 'TIME'), ('4:45', 'TIME')]\n```", "```py\nsentences = [\n   \"Have a great day.\",\n   \"Have a nice day.\",\n   \"Have a good day\",\n   \"Have a wonderful day.\",\n   \"Have a sunny and nice day\"\n]\nfor sent in sentences:\n   doc = nlp(sent) \n   ents = doc.ents \n   print([(ent.text, ent.label_) for ent in ents])  \n[('a great day', 'DATE')]\n[('a nice day', 'DATE')]\n[]\n[]\n[]\n```", "```py\nsentence = 'Have a nice day.'\ndoc = nlp(sentence)\nwrong_matches = [\"a great day\", \"a nice day\"]\ndate_ents = [ent for ent in doc.ents if ent.label_ == \"DATE\"]\ndate_ents = list(filter(lambda e: e.text not in wrong_matches, date_ents))\ndate_ents\n[]\n```", "```py\nYou can call them at 415-775-1800\\. And they do not serve alcohol.\nTheir phone number is 408-374-3400 and they don't have live music.\nUnfortunately no, they do not have live music, however here is the number: 510-558-8367.\n```", "```py\ndoc= nlp(\"The phone number is 707-766-7600.\")\n[token for token in doc]\n[The, phone, number, is, 707, -, 766, -, 7600, .] \n```", "```py\n{\"SHAPE\": \"ddd\"}, {\"TEXT\": \"-\"}, {\"SHAPE\": \"ddd\"}, {\"TEXT\": \"-\"}, {\"SHAPE\": \"dddd\"}\n```", "```py\nfrom spacy.matcher import Matcher\nmatcher = Matcher(nlp.vocab)\npattern = [{\"SHAPE\": \"ddd\"}, {\"TEXT\": \"-\"}, {\"SHAPE\": \"ddd\"}, {\"TEXT\": \"-\"}, {\"SHAPE\": \"dddd\"}]\nmatcher.add(\"usPhoneNum\", [pattern])\ndoc= nlp(\"The phone number is 707-766-7600.\")\nmatches = matcher(doc)\nfor mid, start, end in matches:\n    print(doc[start:end])\n707-766-7600\n```", "```py\nspacy.explain(\"NORP\")\n'Nationalities or religious or political groups'\n```", "```py\nIs there a specific cuisine type you enjoy, such as Mexican, Italian or something else?\nI usually like eating the American type of food.\nFind me Ethiopian cuisine in Berkeley.\nI'm looking for a Filipino place to eat.\nI would like some Italian food.\nMalaysian sounds good right now.\n```", "```py\nfor sent in sentences:\n  doc = nlp(sent\n  [(ent.text, ent.label_) for ent in doc.ents] \n[('Mexican', 'NORP'), ('Italian', 'NORP')]\n[('American', 'NORP')]\n[('Ethiopian', 'NORP'), ('Berkeley', 'GPE')]\n[('Filipino', 'NORP')]\n[('Italian', 'NORP')]\n[('Malaysian', 'NORP')]\n```", "```py\nI'd like to reserve an Italian place for 4 people by tomorrow 19:00 in Berkeley.\n{\nentities: {\n   \"cuisine\": \"Italian\",\n   \"date\": \"tomorrow\",\n   \"time\": \"19:00\",\n   \"number_people\": 4,\n   \"city\": \"Berkeley\"\n}\n```", "```py\nNo, Thanks\nNo, thank you very much.\nThat is all thank you so much.\nNo, that is all.\nNope, that'll be all. Thanks!\nNo, that's okay.\nNo thanks. That's all I needed help with.\nNo. This should be enough for now.\nNo, thanks.\nNo, thanks a lot.\nNo, thats all thanks.\n```", "```py\n[{\"LOWER\": {\"IN\": [\"no\", \"nope\"]}}, {\"TEXT\": {\"IN\": [\",\", \".\"]}}]\n[{\"TEXT\": {\"REGEX\": \"[Tt]hanks?\"}}, {\"LOWER\": {\"IN\": [\"you\", \"a lot\"]}, \"OP\": \"*\"}]\n[{\"LOWER\": {\"IN\": [\"that\", \"that's\", \"thats\", \"that'll\",\n\"thatll\"]}}, {\"LOWER\": {\"IN\": [\"is\", \"will\"]}, \"OP\": \"*\"}, {\"LOWER\": \"all\"}]\n```", "```py\n    from tensorflow.keras.preprocessing.text import Tokenizer\n    tokenizer = Tokenizer(char_level=True, lower=True)\n    tokenizer.fit_on_texts(utterances)\n    ```", "```py\n    tokenizer.word_index\n    {' ': 1, 'e': 2, 'a': 3, 't': 4, 'o': 5, 'n': 6, 'i': 7, 'r': 8, 's': 9, 'h': 10}\n    ```", "```py\n    utterances = tokenizer.texts_to_sequences(utterances)\n    utterances[0]\n    [17, 2, 9, 25, 1, 7, 1, 22, 3, 6, 4, 1, 7, 4, 1, 5, 6, 1, 4, 10, 2, 1, 28, 28, 4, 10]\n    ```", "```py\n    MAX_LEN = 150\n    utterances =\\\n     pad_sequences(utterances, MAX_LEN, padding=\"post\")\n    ```", "```py\n    utt_in = Input(shape=(MAX_LEN,))\n    embedding_layer =  Embedding(input_dim = len(tokenizer.word_index)+1, output_dim = 100, input_length=MAX_LEN)\n    lstm =\\\n    Bidirectional(LSTM(units=100, return_sequences=False))\n    utt_embedding = embedding_layer(utt_in)\n    utt_encoded = lstm(utt_embedding)\n    output = Dense(1, activation='sigmoid')(utt_encoded)\n    model = Model(utt_in, output)\n    ```", "```py\n    model.compile(loss = 'binary_crossentropy', optimizer = \"adam\", metrics=[\"accuracy\"])\n    model.fit(utterances, labels, validation_split=0.1, epochs = 10, batch_size = 64)\n    ```", "```py\nMary picked up her brother.\nHe was a great performer.\nIt was rainy on Sunday.\nWho is responsible for this mess?\nThe cat is very cute.\nSeeing you makes me happy.\n```", "```py\nLauren lost her book.\nI gave her/direct object a book/indirect object.\n```", "```py\nWhere is this restaurant? \n```", "```py\nThe restaurant is located at the corner of 5th Avenue and 7th Avenue.\nThe Bird is located at the corner of 5Th Avenue and 7Th Avenue.\n```", "```py\nDo you know where this restaurant is?\nCan you tell me where this restaurant is?\n```", "```py\nI can give the address. Here it is: 5th Avenue, no:2\nYes, of course. Here's the address: 5th Avenue, no:2\nHere's the address: 5Th Avenue, no:2 \n```", "```py\n{\nutt: \"Where is this restaurant?\",\nintent: \"FindRestaurants\",\nentities: [],\nstructure: {\n    subjects: [\"this restaurant\"]\n  }\n}\n{\nutt: \"Do you know where is this restaurant is?\",\nintent: \"FindRestaurants\",\nentities: [],\nstructure: {\n    subjects: [\"you\"]\n  }\n}\n```", "```py\nDeclarative: John saw Mary.\nInterrogative: Can you go there?\nImperative: Go there immediately.\nExclamation: I'm excited too!\n```", "```py\nQuestion sentence\nImperative sentence\nWish sentence\n```", "```py\nHow did you go there?\nIs this the book that you recommended?\n```", "```py\nWhere is this restaurant?\n```", "```py\nWhich city is this restaurant located?\n```", "```py\nFind me Ethiopian cuisine in Berkeley.\nFind me a sushi place in Alameda.\nFind a place in Vallejo with live music.\nPlease reserve me at 6:15 in the evening.\nReserve for six in the evening.\nReserve it for half past 1 in the afternoon.\n```", "```py\n[{\"POS\": \"VERB, \"IS_SENT_START\": True}]\n[{\"LOWER\": \"please\", IS_SENT_START: True}, {\"POS\": \"VERB\"}]\n```", "```py\nI'd like to make a reservation.\nI would like to find somewhere to eat, preferably Asian food.\nI'd love some Izakaya type food.\nCan you find me somewhere to eat in Dublin?\nCan we make it three people at 5:15 pm?\nCan I make a reservation for 6 pm?\n```", "```py\n{\nutt: \"Where is this restaurant?\",\nintent: \"FindRestaurants\",\nentities: [],\nstructure: {\n    sentence_type: \"wh-question\",\n    subjects: [\"this restaurant\"]\n  }\n}\n```", "```py\nI didn't like this dress. Can I see another one\n```", "```py\nWhere are you going?\nTo my grandma's.\n```", "```py\nI'm going to my grandma's house. \n```", "```py\n- Do you want to make a reservation?\n- Yes, I want to make one.\n```", "```py\n- I've found 2 Malaysian restaurants in Cupertino. Merlion Restaurant & Bar is one.\n- What is the other one?\n```", "```py\n- There's another restaurant in San Francisco that's called Bourbon Steak Restaurant.\n- Yes, I'm interested in that one.\n```", "```py\n- Found 3 results, Asian pearl Seafood Restaurant is the best one in Fremont city, hope you like it.\n- Yes, I like the same.\n```", "```py\n- Do you have a specific which you want the eating place to be located at?\n- I would like for it to be in San Jose.\n```", "```py\n- Would you like a reservation?\n- Yes make it for March 10th.\n```", "```py\nDo you want to make a reservation?\nYes, I want to make one.\n```", "```py\n{\nutt: \"Where is this restaurant?\",\nintent: \"ReserveRestaurant\",\nentities: [],\nstructure: {\n    sentence_type: \"declarative\",\n    subjects: [\"one\"]\n    anaphoras: {\n       \"one\": \"a reservation\"\n       }\n  }\n}\n```"]