["```py\n    ../zookeeper/bin/./zkServer.sh start\n    ```", "```py\n    ../zookeeper/bin/./zkServer.sh status\n    ```", "```py\n    ../zookeeper/bin/./zkServer.sh stop\n    ```", "```py\nstorm.zookeeper.servers:\n - \"localhost\"\n\n# you must change 2181 to another value if zookeeper running on another port.\nstorm.zookeeper.port: 2181\n# In single machine mode nimbus run locally so we are keeping it localhost.\n# In distributed mode change localhost to machine name where nimbus daemon is running.\nnimbus.host: \"localhost\"\n# Here storm will generate logs of workers, nimbus and supervisor.\nstorm.local.dir: \"/var/stormtmp\"\njava.library.path: \"/usr/local/lib\"\n# Allocating 4 ports for workers. More numbers can also be added.\nsupervisor.slots.ports:\n - 6700\n - 6701\n - 6702\n - 6703\n# Memory is allocated to each worker. In below case we are allocating 768 mb per worker.worker.childopts: \"-Xmx768m\"\n# Memory to nimbus daemon- Here we are giving 512 mb to nimbus.\nnimbus.childopts: \"-Xmx512m\"\n# Memory to supervisor daemon- Here we are giving 256 mb to supervisor.\n```", "```py\nstorm.messaging.transport: \"backtype.storm.messaging.netty.Context\"\nstorm.messaging.netty.server_worker_threads: 1\nstorm.messaging.netty.client_worker_threads: 1\nstorm.messaging.netty.buffer_size: 5242880\nstorm.messaging.netty.max_retries: 100\nstorm.messaging.netty.max_wait_ms: 1000\nstorm.messaging.netty.min_wait_ms: 100\n```", "```py\n     ./storm nimbus\n     Alternatively, to run in the background, use the same command with nohup, like this:\n     Run in background\n     nohup ./storm nimbus &\n    ```", "```py\n     ./storm supervisor\n    ```", "```py\n     nohup ./storm  supervisor &\n    ```", "```py\n     ./storm ui\n    ```", "```py\n     nohup ./storm ui &\n    ```", "```py\n     ./storm logviewer\n    ```", "```py\n     nohup ./storm logviewer &\n    ```", "```py\n    <Machine name>:8000/log?file=worker-6700.log\n    ```", "```py\n./storm jar <path-to-topology-jar> <class-with-the-main> <arg1> â€¦ <argN>\n```"]