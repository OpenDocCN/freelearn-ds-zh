- en: Where to Go from Here
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从哪里开始
- en: This book has been a journey, much like a daring mountain hike… but now, at
    last, we have arrived at the end of our trek. We now stand upon the summit of
    mount introductory-GPU-programming, and we stand proud as we gaze back upon our
    native village of serial-programming-ville and smile as we think about the quaint
    naivity of our old one-dimensional programming traditions, where we considered
    *forking* a process in Unix to be our entire understanding of the notion of *parallel
    programming*. We have braved many pitfalls and dangers to arrive at this point,
    and we may have even made such mishaps as installing a broken NVIDIA driver module
    in Linux, or maybe downloading the wrong Visual Studio version over a slow 100k
    connection while visiting our parents for vacation. But these setbacks were only
    temporary, leaving wounds that developed into calluses that made us even stronger
    against the forces of (GPU) nature.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书就像一次大胆的山地徒步旅行一样，是一段旅程……但现在，我们终于到达了旅行的终点。我们现在站在入门级GPU编程的山顶上，我们自豪地回望我们的故乡——串行编程城，当我们想到我们旧的一维编程传统是多么的纯真时，我们会微笑。我们勇敢地克服了许多陷阱和危险才到达这个点，我们甚至可能犯了一些错误，比如在Linux中安装了损坏的NVIDIA驱动模块，或者在我们假期探望父母时，通过缓慢的100k连接下载了错误的Visual
    Studio版本。但这些挫折只是暂时的，留下的伤口变成了老茧，使我们更坚强地对抗（GPU）自然的力量。
- en: But, in the corner of our eye, we can see two wooden signs a few meters away
    from where we are standing; we avert our gaze from the little village of our past
    and now take a look at them. The first has an arrow pointing in the direction
    from which we are currently faced, with only one word on it—PAST. The other is
    pointing in the opposite direction, also with only one word—FUTURE. We turn around
    in the direction pointing to FUTURE, and we see a large glimmering metropolis
    strewn out before us to the horizon, beckoning us. Now that we have finally caught
    our breath, we can start walking into the future…
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在我们眼角的余光中，我们看到了两块木制标志，离我们站立的地方几米远；我们转移目光，从我们过去的那个小村庄转向它们。第一个标志上有一个箭头指向我们现在面对的方向，上面只有一个词——过去。另一个标志指向相反的方向，上面也只有一个词——未来。我们转身朝向“未来”的方向，我们看到一个巨大的闪耀着光芒的大都市在我们面前延伸到地平线，向我们招手。现在我们终于喘过气来，我们可以开始走向未来……
- en: In this chapter, we will go over some of the options that you now have so that
    you can continue your education and career in fields related to GPU programming.
    Whether you are trying to build a career, a hobbyist doing this for fun, an engineering
    student studying GPUs for a class, a programmer or engineer trying to enhance
    your technical background, or an academic scientist trying to apply GPUs to a
    research project, there are many, many options that you now have at this point.
    Much like our metaphorical metropolis, it is easy to get lost, and it is difficult
    to determine where we should go. We hope to provide something akin to a brief
    tour guide in this final chapter, providing you with some of the options for where
    you can go next.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾一些你现在可用的选项，以便你能够继续在GPU编程相关领域进行教育和职业发展。无论你是试图建立职业生涯，一个为了乐趣而从事这项工作的爱好者，一个为了课程学习GPU的工程学生，一个试图增强自己技术背景的程序员或工程师，或者一个试图将GPU应用于研究项目的学术科学家，你现在都有很多很多的选择。就像我们的比喻性大都市一样，很容易迷路，很难确定我们应该去哪里。我们希望在这一章中提供类似简短导游的东西，为你提供一些你可以继续前进的选项。
- en: 'We will now take a look at the following paths in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下路径：
- en: Advanced CUDA and GPGPU programming
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级CUDA和GPGPU编程
- en: Graphics
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形
- en: Machine learning and computer vision
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习和计算机视觉
- en: Blockchain technology
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区块链技术
- en: Furthering your knowledge of CUDA and GPGPU programming
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入了解CUDA和GPGPU编程
- en: The first option you have is, of course, to learn more about CUDA and **General-Purpose
    GPU** (**GPGPU**) programming in particular. In this case, you have probably already
    found a good application of this and want to write even more advanced or optimized
    CUDA code. You may find it interesting for its own sake, or perhaps you want to
    get a job as a CUDA/GPU programmer. With a strong GPU programming foundation in
    place (which was provided by this book), we will now look at some of the advanced
    topics in this field that we are now prepared to learn about.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你拥有的第一个选择当然是学习更多关于CUDA以及特别地**通用型GPU编程**（**GPGPU**）。在这种情况下，你可能已经找到了这个领域的良好应用，并希望编写更加高级或优化的CUDA代码。你可能仅仅因为兴趣而觉得这很有趣，或者你可能想要成为一名CUDA/GPU程序员。在有了这本书提供的强大的GPU编程基础之后，我们现在将探讨这个领域中的一些高级主题，这些主题我们现在已经准备好去学习了。
- en: Multi-GPU systems
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多GPU系统
- en: The first major topic that comes to mind would be to learn how to program systems
    with more than one GPU installed. Many professional workstations and servers contain
    several GPUs that have been installed with the intention of processing far more
    data that requires not one, but several top-of-the-line GPUs. To this end, there
    exists a subfield called Multi-GPU programming. Much of the work is focused on
    load balancing, which is the art of using each GPU at its peak capacity, ensuring
    that no GPU gets saturated with too much work while the other goes without being
    fully utilized. Another topic here is Inter-GPU Communication, which is generally
    concerned about the issue of one GPU directly copying memory arrays to or from
    another using CUDA's GPUDirect **peer-to-peer** (**P2P**) memory access.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个想到的主要话题可能是学习如何编程安装了多个GPU的系统。许多专业工作站和服务器都安装了多个GPU，目的是处理远超过单个顶级GPU所能处理的数据量。为此，存在一个被称为多GPU编程的子领域。大部分工作都集中在负载均衡上，这是一种使用每个GPU达到其峰值容量的艺术，确保没有GPU因为过多的工作而饱和，而其他GPU则没有得到充分利用。这里的另一个话题是GPU间通信，它通常关注的是使用CUDA的GPUDirect
    **对等**（**P2P**）内存访问，一个GPU直接将内存数组复制到或从另一个GPU的问题。
- en: 'NVIDIA provides a brief introduction to Multi-GPU programming here: [https://www.nvidia.com/docs/IO/116711/sc11-multi-gpu.pdf](https://www.nvidia.com/docs/IO/116711/sc11-multi-gpu.pdf).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: NVIDIA在这里提供了一个关于多GPU编程的简要介绍：[https://www.nvidia.com/docs/IO/116711/sc11-multi-gpu.pdf](https://www.nvidia.com/docs/IO/116711/sc11-multi-gpu.pdf)。
- en: Cluster computing and MPI
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集群计算和MPI
- en: Another topic is cluster computing, that is, writing programs that make collective
    use of a multitude of servers containing GPUs. These are the *server farms* that
    populate the data-processing facilities of well-known internet companies such
    as Facebook and Google, as well as the scientific supercomputing facilities used
    by governments and militaries. Clusters are generally programmed with a programming
    paradigm called **message-passing interface** (**MPI**), which is an interface
    used with languages such as C++ or Fortran that allows you to program many computers
    that are connected to the same network.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个话题是集群计算，即编写利用包含GPU的众多服务器集体使用的程序。这些是填充了知名互联网公司如Facebook和Google数据处理设施以及政府和军队使用的科学超级计算设施的**服务器农场**。集群通常使用一种称为**消息传递接口**（**MPI**）的编程范式进行编程，这是一个接口，用于与C++或Fortran等语言一起使用，允许你编程连接到同一网络的多台计算机。
- en: 'More information about using CUDA with MPI is available here: [https://devblogs.nvidia.com/introduction-cuda-aware-mpi/](https://devblogs.nvidia.com/introduction-cuda-aware-mpi/).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 关于使用CUDA与MPI的更多信息，请参阅此处：[https://devblogs.nvidia.com/introduction-cuda-aware-mpi/](https://devblogs.nvidia.com/introduction-cuda-aware-mpi/)。
- en: OpenCL and PyOpenCL
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenCL和PyOpenCL
- en: CUDA isn't the only language that can be used to program a GPU. CUDA's most
    major competitor is called Open Computing Language, or OpenCL. Where CUDA is a
    closed and proprietary system that will work exclusively on only NVIDIA hardware,
    OpenCL is an open standard that's developed and supported by the nonprofit Khronos
    Group. OpenCL can be used to program not only an NVIDIA GPU, but also AMD Radeon
    GPUs and even Intel HD GPUs—most major technology companies have committed to
    supporting OpenCL in their products. Additionally, the author of PyCUDA, Professor
    Andreas Kloeckner of UIUC, has written another excellent (and free) Python library
    called PyOpenCL, which provides an equally user-friendly interface to OpenCL,
    with nearly the same syntax and notions as PyCUDA.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: CUDA 不是唯一可以用来编程 GPU 的语言。CUDA 最主要的竞争对手被称为开放计算语言，或 OpenCL。CUDA 是一个封闭且专有的系统，仅能在
    NVIDIA 硬件上运行，而 OpenCL 是一个由非营利组织 Khronos Group 开发和支持的开放标准。OpenCL 可以用来编程不仅限于 NVIDIA
    GPU，还包括 AMD Radeon GPU 和英特尔 HD GPU——大多数主要科技公司都承诺在其产品中支持 OpenCL。此外，PyCUDA 的作者、UIUC
    的安德烈亚斯·克洛克纳教授还编写了另一个优秀的（且免费）Python 库，名为 PyOpenCL，它提供了与 PyCUDA 几乎相同的语法和概念，为 OpenCL
    提供了一个同样用户友好的接口。
- en: 'Information on OpenCL is provided by NVIDIA here: [https://developer.nvidia.com/opencl](https://developer.nvidia.com/opencl).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 OpenCL 的信息由 NVIDIA 提供：[https://developer.nvidia.com/opencl](https://developer.nvidia.com/opencl).
- en: 'Information on the free PyOpenCL library is available from Andreas Kloeckner’s
    website here:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 关于免费 PyOpenCL 库的信息可以从安德烈亚斯·克洛克纳的网站获取：
- en: '[https://mathema.tician.de/software/pyopencl/](https://mathema.tician.de/software/pyopencl/).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathema.tician.de/software/pyopencl/](https://mathema.tician.de/software/pyopencl/).'
- en: Graphics
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图形
- en: Obviously, the **G** in GPU stands for **graphics**, which we really haven't
    seen much of in this book. Even though machine learning applications are now NVIDIA's
    bread and butter, it all started with rendering nice-looking graphics. We will
    provide some resources to get you started here, whether you want to develop video
    game engines, render CGI movies, or develop CAD software. CUDA can actually be
    used hand in hand with graphics applications, and is actually used in professional
    software such as Adobe's Photoshop and After Effects, as well as in many recent
    video games such as the *Mafia* and *Just Cause* series. We will briefly cover
    some of the major APIs you might consider starting with here.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，GPU 中的 **G** 代表 **图形**，在这本书中我们并没有看到很多关于它的内容。尽管机器学习应用现在是 NVIDIA 的主要业务，但一切始于制作漂亮的图形。我们将在此提供一些资源，无论您是想开发视频游戏引擎、渲染
    CGI 电影，还是开发 CAD 软件，都可以从这里开始。CUDA 实际上可以与图形应用结合使用，实际上它被用于 Adobe 的 Photoshop 和 After
    Effects 等专业软件，以及许多最近的游戏，如 *Mafia* 和 *Just Cause* 系列。我们将简要介绍一些您可能考虑从这里开始的主要 API。
- en: OpenGL
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenGL
- en: The Open Graphics Language, or OpenGL, is an industry open standard that has
    existed since the early 90's. While in some ways it is showing its age, it is
    a stable API that enjoys widespread support, and if you write a program that makes
    use of this, it is pretty much guaranteed to work on any relatively modern GPU
    in existence. The CUDA samples folder actually contains many examples of how OpenGL
    can interface with CUDA (particularly in the `2_Graphics` subdirectory), so interested
    readers may consider going over these examples. (The default location is `C:\ProgramData\NVIDIA
    Corporation\CUDA Samples` in Windows, and `/usr/local/cuda/samples` in Linux.)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 开放图形语言，或 OpenGL，是一个自 90 年代初就存在的行业开放标准。虽然它在某些方面显示出其年代感，但它是一个稳定的 API，得到了广泛的支持，如果您编写了一个利用这个
    API 的程序，那么它在任何相对现代的 GPU 上都能保证运行。CUDA 样例文件夹实际上包含了大量 OpenGL 如何与 CUDA 交互的示例（特别是在
    `2_Graphics` 子目录中），感兴趣的读者可以考虑查看这些示例。（在 Windows 中的默认位置是 `C:\ProgramData\NVIDIA
    Corporation\CUDA Samples`，在 Linux 中的默认位置是 `/usr/local/cuda/samples`。）
- en: 'Information about OpenGL is available directly from NVIDIA here: [https://developer.nvidia.com/opengl](https://developer.nvidia.com/opengl).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 OpenGL 的信息可以直接从 NVIDIA 的网站获取：[https://developer.nvidia.com/opengl](https://developer.nvidia.com/opengl).
- en: 'PyCUDA also provides an interface for the NVIDIA OpenGL driver. Information
    is available here: [https://documen.tician.de/pycuda/gl.html](https://documen.tician.de/pycuda/gl.html).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: PyCUDA 还提供了一个用于 NVIDIA OpenGL 驱动程序的接口。相关信息请在此处查看：[https://documen.tician.de/pycuda/gl.html](https://documen.tician.de/pycuda/gl.html).
- en: DirectX 12
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DirectX 12
- en: DirectX 12 is the latest iteration of Microsoft's well-known and well-supported
    graphics API. While this is proprietary for Windows PCs and Microsoft Xbox game
    consoles, these systems obviously have a wide install base of hundreds of millions
    of users. Furthermore, a variety of GPUs are supported on Windows PCs besides
    NVIDIA cards, and the Visual Studio IDE provides a great ease of use. DirectX
    12 actually supports low-level GPGPU programming-type concepts and can utilize
    multiple GPUs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: DirectX 12 是微软知名且受支持的图形 API 的最新版本。虽然它是为 Windows PC 和微软 Xbox 游戏机开发的专有技术，但这些系统显然拥有数亿用户的广泛安装基础。此外，除了
    NVIDIA 显卡外，Windows PC 还支持各种 GPU，Visual Studio IDE 提供了极大的易用性。DirectX 12 实际上支持低级
    GPGPU 编程概念，并可以利用多个 GPU。
- en: 'Microsoft''s DirectX 12 Programming Guide is available here: [https://docs.microsoft.com/en-us/windows/desktop/direct3d12/directx-12-programming-guide](https://docs.microsoft.com/en-us/windows/desktop/direct3d12/directx-12-programming-guide).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 微软的 DirectX 12 编程指南可在以下链接获取：[https://docs.microsoft.com/en-us/windows/desktop/direct3d12/directx-12-programming-guide](https://docs.microsoft.com/en-us/windows/desktop/direct3d12/directx-12-programming-guide).
- en: Vulkan
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vulkan
- en: Vulkan can be thought of as the open equivalent of DirectX 12, which was developed
    by the Khronos Group as the *next-gen* successor of OpenGL. Along with Windows,
    Vulkan is also supported on macOS and Linux, as well as on the Sony PlayStation
    4, Nintendo Switch, and Xbox One consoles. Vulkan has many of the same features
    as DirectX 12, such as quasi-GPGPU programming. Vulkan is providing some serious
    competition to DirectX 12, with video games such as the 2016 *DOOM* remake.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Vulkan 可以被视为 Khronos Group 开发的 DirectX 12 的开放等效版本，它是 OpenGL 的下一代继任者。除了 Windows
    外，Vulkan 还支持 macOS、Linux，以及索尼 PlayStation 4、任天堂 Switch 和 Xbox One 游戏机。Vulkan 具有与
    DirectX 12 相似的功能，如准 GPGPU 编程。Vulkan 正在为 DirectX 12 提供一些严重的竞争，例如 2016 年的 *DOOM*
    重制游戏。
- en: 'The *Beginner''s Guide to Vulkan* is available from the Khronos Group here:
    [https://www.khronos.org/blog/beginners-guide-to-vulkan](https://www.khronos.org/blog/beginners-guide-to-vulkan).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 《*Vulkan 入门指南*》可在 Khronos Group 这里获取：[https://www.khronos.org/blog/beginners-guide-to-vulkan](https://www.khronos.org/blog/beginners-guide-to-vulkan).
- en: Machine learning and computer vision
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习和计算机视觉
- en: Of course, the elephant in the room of this chapter is machine learning and
    its fraternal twin computer vision. It goes without saying that machine learning
    (particularly the subfields of deep neural networks and convolutional neural networks)
    is what is keeping a roof over NVIDIA CEO Jensen Huang's head these days. (Okay,
    we admit that was the understatement of the decade...) If you need a reminder
    as to why GPUs are so applicable and useful in this field, please take another
    look at [Chapter 9](3562f1e0-a53d-470f-9b4d-94fa41b1b2fa.xhtml), *Implementation
    of a Deep Neural Network*. A large number of parallel computations and mathematical
    operations, as well as the user-friendly mathematical libraries, have made NVIDIA
    GPUs the hardware backbone of the machine learning industry.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，本章中不容忽视的是机器学习和其孪生兄弟计算机视觉。不言而喻，机器学习（尤其是深度神经网络和卷积神经网络等子领域）是如今支撑着 NVIDIA 首席执行官黄仁勋的屋顶的东西。（好吧，我们承认这是本世纪最夸张的夸张……）如果你需要提醒为什么
    GPU 在这个领域如此适用和有用，请再次查看第 9 章，*深度神经网络的实现*。大量的并行计算和数学运算，以及用户友好的数学库，使得 NVIDIA GPU
    成为机器学习行业的硬件支柱。
- en: The basics
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础知识
- en: While you now know many of the intricacies of low-level GPU programming, you
    won't be able to apply this knowledge to machine learning immediately. If you
    don't have the basic skills in this field, like how to do a basic statistical
    analysis of a dataset, you really should stop and familiarize yourself with them.
    Stanford Professor Andrew Ng, the founder of Google Brain, provides many materials
    that are available for free on the web and on YouTube. Professor Ng's work is
    generally considered to be the gold standard of educational material on machine
    learning.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你现在已经了解了底层 GPU 编程的许多复杂性，但你无法立即将这些知识应用到机器学习上。如果你在这个领域没有基本技能，比如如何对数据集进行基本的统计分析，你真的应该停下来熟悉它们。斯坦福大学教授、谷歌大脑的创始人
    Andrew Ng 提供了许多免费材料，这些材料可以在网上和 YouTube 上找到。Ng 教授的工作通常被认为是机器学习教育材料的黄金标准。
- en: 'Professor Ng provides a free introductory machine learning class on the web
    here: [http://www.ml-class.org](http://www.ml-class.org).'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Ng 教授在网上提供了一门免费的机器学习入门课程：[http://www.ml-class.org](http://www.ml-class.org).
- en: cuDNN
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: cuDNN
- en: NVIDIA provides an optimized GPU library for deep neural network primitives
    called cuDNN. These primitives include operations such as forward propagation,
    convolutions, back propagation, activation functions (such as sigmoid, ReLU, and
    tanh), and gradient descent. cuDNN is what most of the mainstream deep neural
    network frameworks such as Tensorflow use as a backend for NVIDIA GPUs. This is
    provided for free by NVIDIA , but has to be downloaded separately from the CUDA
    Toolkit.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: NVIDIA 为深度神经网络原语提供了一个优化的 GPU 库，称为 cuDNN。这些原语包括前向传播、卷积、反向传播、激活函数（如 sigmoid、ReLU
    和 tanh）和梯度下降等操作。cuDNN 是大多数主流深度神经网络框架（如 Tensorflow）用作 NVIDIA GPU 后端的东西。这是由 NVIDIA
    免费提供的，但必须从 CUDA 工具包中单独下载。
- en: 'More information on cuDNN is available here: [https://developer.nvidia.com/cudnn](https://developer.nvidia.com/cudnn).'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 cuDNN 的更多信息在这里：[https://developer.nvidia.com/cudnn](https://developer.nvidia.com/cudnn)。
- en: Tensorflow and Keras
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Tensorflow 和 Keras
- en: Tensorflow is, of course, Google's well-known neural network framework. This
    is a free and open source framework that is usable with Python and C++, and has
    been available to the general public since 2015.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Tensorflow 当然是谷歌知名的神经网络框架。这是一个免费且开源的框架，可以用 Python 和 C++ 使用，自 2015 年以来对公众开放。
- en: 'Tutorials on Tensorflow are available from Google here: [https://www.tensorflow.org/tutorials/](https://www.tensorflow.org/tutorials/).'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里可以找到 Tensorflow 的教程：[https://www.tensorflow.org/tutorials/](https://www.tensorflow.org/tutorials/)。
- en: Keras is a higher level library that provides a more *user-friendly* interface
    to Tensorflow, which was originally written by Google Brain's Francois Chollet.
    Readers may actually consider starting with Keras before moving on to Tensorflow.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Keras 是一个更高级的库，它为 Tensorflow 提供了一个更*用户友好*的接口，最初由 Google Brain 的 Francois Chollet
    编写。读者实际上可以考虑先从 Keras 开始，然后再转向 Tensorflow。
- en: 'Information on Keras is available here: [https://keras.io/](https://keras.io/).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Keras 的信息在这里：[https://keras.io/](https://keras.io/)。
- en: Chainer
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chainer
- en: Chainer is another neural network API that was developed by Seiya Tokui, who
    is currently a PhD student at the University of Tokyo in Japan. While it is less
    mainstream than Tensorflow, it is very well-respected due to its incredible speed
    and efficiency. Moreover, readers may find Chainer of particular interest, since
    this was originally developed using PyCUDA. (This was later switched to CuPy,
    which is a PyCUDA branch that was developed to provide an interface that is more
    similar to NumPy.)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Chainer 是由日本东京大学的博士生 Seiya Tokui 开发的另一个神经网络 API。虽然它的主流程度不如 Tensorflow，但由于其惊人的速度和效率，它非常受尊重。此外，读者可能会对
    Chainer 特别感兴趣，因为它是最初使用 PyCUDA 开发的。（后来改为使用 CuPy，这是 PyCUDA 的一个分支，旨在提供一个与 NumPy 更相似的接口。）
- en: 'Information on Chainer is available here: [https://chainer.org/](https://chainer.org/).'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Chainer 的信息在这里：[https://chainer.org/](https://chainer.org/)。
- en: OpenCV
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenCV
- en: The Open Source computer vision Library (OpenCV) has been around since 2001\.
    This library provides many of the tools from classical computer vision and image
    processing, which are still extremely useful in this age of the deep neural network.
    Most of the algorithms in OpenCV have been ported to CUDA in recent years, and
    it interfaces very easily with PyCUDA.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 自 2001 年以来，开源计算机视觉库（OpenCV）一直存在。这个库提供了许多来自经典计算机视觉和图像处理工具，在深度神经网络时代仍然非常有用。近年来，OpenCV
    中的大多数算法都已移植到 CUDA，并且它与 PyCUDA 非常容易接口。
- en: 'Information on OpenCV is here: [https://opencv.org/](https://opencv.org/).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 OpenCV 的信息在这里：[https://opencv.org/](https://opencv.org/)。
- en: Blockchain technology
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区块链技术
- en: Last, but certainly not least, is **blockchain technology**. This is the underlying
    cryptographic technology that powers cryptocurrencies such as Bitcoin and Ethereum.
    This is, of course, a very new field, which was first described by Bitcoin's mysterious
    creator, Satoshi Nakamoto, in a white paper published in 2008\. GPUs were applied
    to this field almost immediately after its invention—generating a unit of currency
    comes down to brute-force cracking a cryptographic puzzle, and a GPU can attempt
    to brute-force crack more combinations in parallel than any other piece of hardware
    available to the general public today. This process is known as **mining**.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，但同样重要的是，是**区块链技术**。这是支撑比特币和以太坊等加密货币的底层加密技术。当然，这是一个非常新的领域，最初由比特币神秘的创造者中本聪在2008年发表的白皮书中描述。GPU在发明后几乎立即被应用于这个领域——生成货币单位的过程归结为破解加密难题的暴力破解，而GPU可以并行尝试破解比今天公众可用的任何其他硬件更多的组合。这个过程被称为**挖矿**。
- en: 'Those who are interested in blockchain technology are suggested to read Satoshi
    Nakamoto''s original white paper on Bitcoin, which is available here: [https://bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf).'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对区块链技术感兴趣的人建议阅读中本聪关于比特币的原始白皮书，可在以下链接找到：[https://bitcoin.org/bitcoin.pdf](https://bitcoin.org/bitcoin.pdf)。
- en: 'GUIMiner, an open source, CUDA-based Bitcoin miner, is available here: [https://guiminer.org/](https://guiminer.org/).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: GUIMiner，一个基于CUDA的开源比特币矿工，可在以下链接找到：[https://guiminer.org/](https://guiminer.org/)。
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we went over some of the options and paths for those that are
    interested in furthering their background in GPU programming, which is beyond
    the scope of this book. The first path we covered was expanding your background
    in pure CUDA and GPGPU programming—some of the things you can learn about that
    weren't covered in this book include programming systems with multiple GPUs and
    networked clusters. We also looked at some of the parallel programming languages/APIs
    besides CUDA, such as MPI and OpenCL. Next, we discussed some of the well-known
    APIs available to those who are interested in applying GPUs to rendering graphics,
    such as Vulkan and DirectX 12\. We then looked at machine learning and went into
    some of the basic backgrounds that you should have as well as some of the major
    frameworks available for developing deep neural networks. Finally, we ended by
    taking a brief look at blockchain technology and GPU-based cryptocurrency mining.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了那些对进一步学习GPU编程感兴趣的人的一些选项和路径，这些内容超出了本书的范围。我们首先讨论了扩展你在纯CUDA和GPGPU编程方面的背景——本书未涉及的一些你可以学习的内容包括编程具有多个GPU和网络集群的系统。我们还探讨了除CUDA之外的一些并行编程语言/API，例如MPI和OpenCL。接下来，我们讨论了一些对那些有兴趣将GPU应用于图形渲染的人可用的知名API，例如Vulkan和DirectX
    12。然后，我们探讨了机器学习，并介绍了一些你应该具备的基本背景以及一些用于开发深度神经网络的框架。最后，我们简要地看了看区块链技术以及基于GPU的加密货币挖矿。
- en: As the author, I would like to say *thank you* to everyone who has pushed through
    this book and made it here, to the end. GPU programming is one of the trickiest
    subfields of programming that I have encountered, and I hope my text has helped
    you come to grips with the essentials. As the reader, you should now feel free
    to indulge in a slice of the richest, most calorie-laden slice of chocolate cake
    you can find—just know that you've *earned* it. (But only one slice!)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 作为作者，我想对推动这本书完成并到达这里的每一个人说**谢谢**，感谢你们的支持。GPU编程是我遇到的最棘手的编程子领域之一，我希望我的文字能帮助你掌握基本知识。作为读者，你现在可以尽情享受你所能找到的最丰富、热量最高的巧克力蛋糕的一小块——只要知道你已经**赚到了**。
    (但只能吃一小块！)
- en: Questions
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Use Google or some other search engine to find at least one application of GPU
    programming that is not featured in this chapter.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用谷歌或其他搜索引擎查找本章未提及的至少一种GPU编程应用。
- en: Try to find at least one programming language or API that can be used to program
    a GPU that is not featured in this chapter.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试找到至少一种可以用来编程本章未提及的GPU的编程语言或API。
- en: Look up Google's new Tensor Processing Unit (TPU) chips. How do these differ
    from GPUs?
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找谷歌的新Tensor Processing Unit (TPU)芯片。这些芯片与GPU有何不同？
- en: Do you think it is a better idea to connect computers together into a cluster
    using Wi-Fi or wired Ethernet cables?
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你认为使用Wi-Fi还是有线以太网电缆将计算机连接成集群更好？
