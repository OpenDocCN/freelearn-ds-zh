- en: Chapter 2. GIS Analysis – Mapping Climate Change
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：GIS分析 – 气候变化制图
- en: One area of data analysis that's gotten a lot of attention is **Geographic Information
    Systems** (**GIS**). GIS is a system that is designed to store, manage, manipulate,
    and analyze geographic data. As such, GIS sits at the intersection of cartography,
    computers, statistics, and information science.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析的一个领域受到了很多关注，那就是**地理信息系统**（**GIS**）。GIS是一个旨在存储、管理、操作和分析地理数据的系统。因此，GIS位于制图学、计算机科学、统计学和信息科学的交汇点。
- en: GIS is applied to fields as diverse as military planning, epidemiology, architecture,
    urban planning, archaeology, and many other fields. Basically, any domain or problem
    that involves location or topology can use GIS techniques or methods.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: GIS应用于军事规划、流行病学、建筑、城市规划、考古学和其他许多领域。基本上，任何涉及位置或拓扑的领域或问题都可以使用GIS技术或方法。
- en: As you can imagine from this very brief description, we won't even scratch the
    surface of GIS in this chapter. However, we'll apply it to a small problem to
    see how it can help us understand the way climate change affects the continental
    **United States** in a better manner.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从这非常简短的描述中可以想象到的，我们在这章中甚至不会触及GIS的表面。然而，我们将将其应用于一个小问题，以了解它如何帮助我们更好地理解气候变化对大陆**美国**的影响。
- en: Understanding GIS
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解GIS
- en: While the preceding description is accurate, it doesn't really help us much.
    As befits a field concerned with the lay of the land, GIS really begins in the
    field. Data is gathered using aerial and satellite photography, and it is also
    gathered from people on the ground using GPS, laser range finders, and surveying
    tools. GIS can also make use of existing maps, especially for historical research
    and to compare time periods. For example, this may involve studying how a city
    has evolved over time or national boundaries have changed. A lot of time and energy
    in GIS goes into gathering this data and entering it into the computer.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管前面的描述是准确的，但它并没有真正帮助我们多少。作为一个关注地形布局的领域，GIS实际上是从野外开始的。数据是通过航空和卫星摄影收集的，也是通过地面人员使用GPS、激光测距仪和测量工具收集的。GIS还可以利用现有的地图，特别是用于历史研究和比较时期。例如，这可能涉及研究一个城市如何随着时间的推移而演变，或者国家边界如何发生变化。GIS在收集这些数据并将其输入计算机方面投入了大量的时间和精力。
- en: 'Once the data is in the computer, GIS can perform a wide range and variety
    of analyses on the data, depending on the questions being asked and the task at
    hand. For example, the following are some of the many things you can do with GIS:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据进入计算机，GIS就可以根据提出的问题和手头的任务，对数据进行广泛和多样的分析。例如，以下是一些你可以用GIS做的许多事情之一：
- en: '**View-shed analysis**: This attempts to answer the question, "What can someone
    standing right here at this elevation (and perhaps at a second story window) see?".
    This takes into account the elevation and slope of the terrain around the viewer.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视域分析**：这试图回答问题：“站在这里这个高度（也许是在二楼窗户）的人能看到什么？”这考虑了观众周围地形的高度和坡度。'
- en: '**Topological modeling**: This combines the GIS data with other data in the
    data mining and modeling to add a geospatial component to more mainstream data
    mining and modeling. This allows the models to account for the geographical proximity.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拓扑建模**：这结合了GIS数据与数据挖掘和建模中的其他数据，为更主流的数据挖掘和建模添加了地理空间组件。这使得模型能够考虑地理邻近性。'
- en: '**Hydrological modeling**: This models the way in which water interacts with
    the environment through rainfall, watershed, runoff, and catchment.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**水文建模**：这模拟了水通过降雨、流域、径流和集水区与环境的相互作用方式。'
- en: '**Geocoding**: This involves associating human-readable addresses with their
    geospatial coordinates. When you click on a **Google Map** or **Bing Map** and
    get the business or address of a location, it''s because it''s been geocoded for
    the coordinates you tapped on.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地理编码**：这涉及将可读地址与其地理坐标关联起来。当你点击**谷歌地图**或**必应地图**并获取某个地点的业务或地址时，那是因为它已经为你的点击坐标进行了地理编码。'
- en: The primary tool for most GIS specialists is **ArcGIS** by **ESRI** ([http://www.esri.com/](http://www.esri.com/)).
    This is a powerful, full-featured GIS workbench. It interoperates with most data
    sources and performs most of the analyses. It also has an **API** for **Python**
    and APIs in **Java** and **.NET** to interact with ArcGIS servers. We'll use ArcGIS
    at the end of this chapter to generate the visualization.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数GIS专家来说，主要的工具是 **ESRI** 的 **ArcGIS** ([http://www.esri.com/](http://www.esri.com/))。这是一个功能强大、全面集成的GIS工作台。它与大多数数据源兼容，并执行大多数分析。它还提供了
    **Python** 的 **API** 以及 **Java** 和 **.NET** 的 API，用于与 ArcGIS 服务器交互。我们将在本章的末尾使用
    ArcGIS 来生成可视化。
- en: However, there are other options as well. Most databases have some GIS capabilities,
    and **Quantum GIS** ([http://www.qgis.org/](http://www.qgis.org/)) is an open
    source alternative to ArcGIS. It isn't as polished or as fully featured, but it's
    still powerful in its own right and is freely available. **GeoServer** ([http://geoserver.org/](http://geoserver.org/))
    is an enterprise-level server and management system for the GIS data. There are
    also libraries in a number of programming languages; **Geospatial Data Abstraction
    Layer**, also known as **GDAL**, ([http://www.gdal.org/](http://www.gdal.org/))
    deserves special mention here, both in its own right and because it serves as
    the foundation for libraries in a number of other programming languages. One of
    the libraries for Java is **GeoTools** ([http://www.geotools.org/](http://www.geotools.org/)),
    and part of it calls GDAL under the table.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有其他选择。大多数数据库都具备一些GIS功能，**Quantum GIS** ([http://www.qgis.org/](http://www.qgis.org/))
    是 ArcGIS 的开源替代品。它可能没有那么精致，也没有那么全面的功能，但它在自己的领域内仍然非常强大，并且是免费提供的。**GeoServer** ([http://geoserver.org/](http://geoserver.org/))
    是一个面向企业级的服务器和GIS数据管理系统。还有多种编程语言的库；**地理空间数据抽象层**，也称为 **GDAL** ([http://www.gdal.org/](http://www.gdal.org/))
    值得特别提及，不仅因为它本身很重要，还因为它为许多其他编程语言的库提供了基础。Java 的一个库是 **GeoTools** ([http://www.geotools.org/](http://www.geotools.org/))，其中一部分在幕后调用
    GDAL。
- en: Mapping the climate change
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 映射气候变化
- en: So, let's roll up our sleeves and perform some geospatially informed data analysis.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们卷起袖子，进行一些基于地理空间的数据分析。
- en: For our problem, we'll look at how the climate change affects the continental
    United States over the last century or so. Specifically, we'll look at how the
    average maximum temperature for July has changed. For North America, this should
    give us a good snapshot of the hottest temperatures.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的问题，我们将研究气候变化在过去一个世纪左右对北美大陆的影响。具体来说，我们将研究七月平均最高温度的变化。对于北美来说，这将为我们提供一个关于最热温度的良好快照。
- en: One nice thing about working with the weather data is that there's a lot of
    it, and it's easily available. **US National Oceanic and Atmospheric Administration**
    (**NOAA**) collects it and maintains archives of it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 与天气数据一起工作的一个好处是，数据量很大，而且很容易获得。**美国国家海洋和大气管理局** (**NOAA**) 收集并维护这些数据档案。
- en: For this project, we'll use the **Global Summary of the Day** ([http://www.ncdc.noaa.gov/cgi-bin/res40.pl](http://www.ncdc.noaa.gov/cgi-bin/res40.pl)).
    This includes daily summaries from each active weather station. We'll filter out
    any weather stations that aren't in the US, and we'll filter out any data that
    is not in use for the month of July.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我们将使用 **全球每日概览** ([http://www.ncdc.noaa.gov/cgi-bin/res40.pl](http://www.ncdc.noaa.gov/cgi-bin/res40.pl))。这包括每个活跃气象站的每日概览。我们将过滤掉任何不在美国境内的气象站，以及七月份未使用的任何数据。
- en: Climate is typically defined on thirty-year periods. For example, the climate
    for a location would be the average temperature of thirty years, not the temperature
    for the year. However, there won't be that many thirty-year periods for the time
    span that we're covering, so instead, we'll look at the maximum temperature for
    July from each weather station in ten-year rolling averages.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 气候通常在三十年期进行定义。例如，一个地点的气候将是三十年平均温度，而不是一年的温度。然而，在我们覆盖的时间跨度内，三十年期可能不会那么多，因此，我们将查看每个气象站七月最大温度的十年滚动平均值。
- en: To find out how much the maximum temperature has changed, we'll find the rolling
    average for these ten-year periods. Then, for each station, we'll find the difference
    between the first ten year period's average and the last one's.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找出最大温度的变化量，我们将计算这些十年期的滚动平均值。然后，对于每个气象站，我们将找出第一个十年期平均温度与最后一个十年期平均温度之间的差异。
- en: Unfortunately, the stations aren't evenly or closely spaced; as we'll see, they
    also open and close over the years. So we'll do the best we can with this data,
    and we'll fill in the geospatial gaps in the data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，站点分布并不均匀或紧密；正如我们将看到的，它们在多年间也会开放和关闭。因此，我们将尽力使用这些数据，并填补数据中的地理空间空白。
- en: 'Finally, we''ll graph this data over a map of the US. This will make it easy
    to see how temperatures have changed in different places. What will this process
    look like? Let''s outline the steps for the rest of this chapter:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将把这个数据绘制在美国地图上。这样就可以很容易地看到不同地方的温度变化情况。这个过程会是什么样的呢？让我们概述本章剩余部分的步骤：
- en: Download the data from NOAA's FTP servers. Extract it from the files.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从NOAA的FTP服务器下载数据。从文件中提取它。
- en: Filter out the data that we won't need for this analysis. We'll only hang onto
    places and the month that we're interested in (the US for July).
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过滤掉我们不需要用于此分析的数据。我们只会保留我们感兴趣的地方和月份（美国的七月）。
- en: Average the maximum temperatures for each month.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每个月的最高温度平均值。
- en: Calculate the ten-year rolling averages of the averages from step three.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算第三步中平均值的十年滚动平均值。
- en: Get the difference between the first and last ten-year averages for each weather
    station.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取每个气象站第一个和最后一个十年平均值的差异。
- en: Interpolate the temperature differences for the areas between the stations.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插值计算站点之间的温度差异。
- en: Create a heat map of the differences.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建差异的热力图。
- en: Review the results.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查结果。
- en: Downloading and extracting the data
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载和解压缩数据
- en: As mentioned above, NOAA maintains an archive of GSOD. For each weather station
    around the world, these daily summaries track a wide variety of weather data for
    all active weather stations around the globe. We'll use the data from here as
    the basis of our analysis.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，NOAA维护了一个GSOD的存档。对于世界上每个气象站，这些每日总结跟踪了全球所有活跃气象站的各种天气数据。我们将使用这里的数据作为我们分析的基础。
- en: 'The data is available at [ftp://ftp.ncdc.noaa.gov/pub/data/gsod/](ftp://ftp.ncdc.noaa.gov/pub/data/gsod/).
    Let''s look at how this data is stored and structured:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可在[ftp://ftp.ncdc.noaa.gov/pub/data/gsod/](ftp://ftp.ncdc.noaa.gov/pub/data/gsod/)获取。让我们看看这些数据是如何存储和组织的：
- en: '![Downloading and extracting the data](img/4139OS_02_01.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![下载和解压缩数据](img/4139OS_02_01.jpg)'
- en: So, the main directory on the FTP site (`/pub/data/gsod/`) has a directory for
    each year that has the weather data. There's also a file called `ish-history.csv`.
    This contains information about the weather stations, when they were operational,
    and where they were located. (Also, the text files and `README` files are always
    important for more specific, detailed information about what's in each file.)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，FTP站点上的主目录（`/pub/data/gsod/`）为有天气数据的每个年份都有一个目录。还有一个名为`ish-history.csv`的文件。它包含有关气象站的信息，它们何时运行，以及它们的位置。（此外，文本文件和`README`文件对于获取每个文件中更具体、更详细的信息总是很重要的。）
- en: Now let's check out one of the data directories; this is for 2013.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们查看一个数据目录；这是2013年的。
- en: The data directories contain a large number of data files. Each of the files
    that ends in `.op.gz` has three components for its file name. The first two parts
    are identifiers for the weather station and the third is the year.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 数据目录包含大量的数据文件。每个以`.op.gz`结尾的文件在其文件名中有三个组成部分。前两部分是气象站的标识符，第三部分是年份。
- en: Each data directory also has a tarball that contains all of the `*.op.gz` data
    files. That file will be the easiest to download, and then we can extract the
    `*.op.gz` files from it. Afterwards, we'll need to decompress these files to get
    the `*.op` data files. Let's do that, and then we can look at the data that we
    have.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据目录都有一个包含所有`*.op.gz`数据文件的tarball。这个文件将是最容易下载的，然后我们可以从中提取`*.op.gz`文件。之后，我们需要解压缩这些文件以获取`*.op`数据文件。让我们这样做，然后我们可以查看我们拥有的数据。
- en: Downloading the files
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载文件
- en: Before we actually get into any of the code to do this, let's take a look at
    the dependencies that we'll need.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们实际编写任何代码来完成这个任务之前，让我们看看我们需要依赖的库。
- en: 'Before we get started, let''s set up our project. For this chapter, our Leiningen
    2 ([http://leiningen.org/](http://leiningen.org/)) `project.clj` file should look
    something like the following code:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，让我们设置我们的项目。对于本章，我们的Leiningen 2（[http://leiningen.org/](http://leiningen.org/)）`project.clj`文件应该看起来像以下代码：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now for this section of code, let''s open the `src/clj_gis/download.clj` file.
    We''ll use this namespace declaration for this code as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们打开这段代码的`src/clj_gis/download.clj`文件。我们将为这段代码使用以下命名空间声明：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, the next two functions together download the GSOD data files. The main
    function is `download-data`. It walks the directory tree on the FTP server, and
    whenever it identifies a file to be downloaded, it hands it off to `download-file`.
    This function figures out where to put the file and downloads it to that location.
    I''ve left out the source code for some of the utilities and secondary functions
    listed here, such as `download-src`, so that we can focus on the larger issues.
    You can find these functions in the file in this chapter''s code download. The
    following code snippet is part of the code that is available for download:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，接下来的两个函数一起下载GSOD数据文件。主函数是`download-data`。它遍历FTP服务器上的目录树，每当它识别出要下载的文件时，它就会将其交给`download-file`函数。这个函数确定文件存放的位置，并将其下载到该位置。我已省略了一些工具和辅助函数的源代码，例如`download-src`，以便我们可以关注更大的问题。您可以在本章代码下载的文件中找到这些函数。以下代码片段是可下载代码的一部分：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Extracting the files
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提取文件
- en: Now, we've downloaded the files from the NOAA FTP server onto the local hard
    drive. However, we still need to use the `tar` utility to extract the files we've
    downloaded and then decompress them.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经从NOAA FTP服务器上下载了文件到本地硬盘。然而，我们仍然需要使用`tar`实用程序来提取我们下载的文件，然后解压缩它们。
- en: 'We''ll use the **FS** library to extract the downloaded files. Currently, the
    individual data files are in a common Unix file format called `tar`, which collects
    multiple files into one larger file. These files are also compressed using the
    utility **gzip**. We''ll use Java''s `GZIPOutputStream` to decompress `gz`. Let''s
    see how this works:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用**FS**库来提取下载的文件。目前，单个数据文件是以名为`tar`的通用Unix文件格式存储的，它将多个文件收集到一个更大的文件中。这些文件也使用**gzip**实用程序进行压缩。我们将使用Java的`GZIPOutputStream`来解压缩`gz`文件。让我们看看这是如何工作的：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can put these functions together with the download functions that we just
    looked at. This function, `download-all`, will download all the data and then
    decompress all of the data files into a directory specified by `clj-gis.locations/*data-dir*`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这些函数与刚才查看的下载函数结合起来。这个函数`download-all`将下载所有数据，然后将所有数据文件解压缩到由`clj-gis.locations/*data-dir*`指定的目录中：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, what do these files look like? The header line of one of them is as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这些文件看起来是什么样子？其中一个文件的标题行如下：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following is one of the data rows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一行数据：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: So, there are some identification fields, some for temperature, dew point, wind,
    and other weather data. Next, let's see how to winnow the data down to just the
    information that we plan to use.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，有一些标识字段，一些用于温度、露点、风速和其他天气数据。接下来，让我们看看如何筛选数据，只保留我们计划使用的信息。
- en: Transforming the data – filtering
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据转换 – 过滤
- en: 'As we just noticed, there''s a lot of data in the GSOD files that we don''t
    plan to use. This includes the following:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们刚才注意到的，GSOD文件中有大量我们不打算使用的数据。这包括以下内容：
- en: Too many files with data for places that we aren't interested in
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有太多我们不感兴趣的地点数据文件
- en: Too many rows with data for months that we aren't interested in
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有太多我们不感兴趣的月份数据行
- en: Too many columns with weather data that we aren't interested in (dew points,
    for instance)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有太多我们不感兴趣的天气数据列（例如露点）
- en: At this point, we'll only worry about the first problem. Just filtering out
    the places we're not looking at will dramatically reduce the amount of data that
    we're dealing with from approximately 20 GB of data to just 3 GB.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只关注第一个问题。只需过滤掉我们不关注的地点，就可以显著减少我们处理的数据量，从大约20 GB的数据减少到仅仅3 GB。
- en: 'The code for this section will be in the `src/clj_gis/filter_data.clj` file.
    Give it the following namespace declaration:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分代码将在`src/clj_gis/filter_data.clj`文件中。给它以下命名空间声明：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now it's time for the code that is to be put in the rest of the file.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候将代码放入文件的其余部分了。
- en: 'To filter out the data that we won''t use, we''ll copy files for stations in
    the United States into their own directory. We can create a set of these stations
    from the `ish-history.csv` file that we noticed earlier, so our first task will
    be parsing that file. This code will read the CSV file and put the data from each
    line into a new data record, `IshHistory`. Having its own data type for this information
    isn''t necessary, but it makes the rest of the code much more readable. For example,
    we can reference the country field using `(:country h)` instead of `(nth h 3)`
    later. This type can also reflect the column order from the input file, which
    makes reading the data easier:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了过滤掉我们不会使用的数据，我们将美国站点的文件复制到它们自己的目录中。我们可以从之前注意到的`ish-history.csv`文件中创建这些站点的集合，因此我们的第一个任务将是解析该文件。此代码将读取CSV文件并将每行的数据放入一个新的数据记录中，`IshHistory`。为这些信息创建自己的数据类型不是必需的，但它使其余的代码更容易阅读。例如，我们可以使用`(:country
    h)`而不是`(nth h 3)`来引用国家字段，稍后。这种类型还可以反映输入文件的列顺序，这使得读取数据更容易：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The stations are identified by the combination of the USAF and WBAN fields.
    Some stations use USAF, some use WBAN, and some use both. So we''ll need to track
    both to uniquely identify the stations. This function will create a set of the
    stations in a given country:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 站点通过USAF和WBAN字段的组合来识别。一些站点使用USAF，一些使用WBAN，还有一些两者都使用。因此，我们需要跟踪两者以唯一识别站点。这个函数将创建给定国家的站点集合：
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, we need to tie these functions together. This function, `filter-data-files`,
    reads the history and creates the set of stations that we want to keep. Then,
    it walks through the data directory and parses the file names to get the station
    identifiers for each file. Files from the stations in the set are then copied
    to a directory with the same name as the country code, as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要将这些函数组合在一起。这个函数`filter-data-files`读取历史数据并创建我们想要保留的站点集合。然后，它遍历数据目录并解析文件名以获取每个文件的站点标识符。然后，来自集合中站点的文件将被复制到与国家代码相同的目录中，如下所示：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This set of functions will filter out most of the data and leave us with only
    the observations from the stations we're interested in.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数集将过滤掉大部分数据，只留下我们感兴趣的站点的观测数据。
- en: Rolling averages
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 滚动平均值
- en: 'We aren''t plotting the raw data. Instead, we want to filter it further and
    summarize it. This transformation can be described in the following steps:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不是在绘制原始数据。相反，我们想要进一步过滤并总结它。这种转换可以描述为以下步骤：
- en: Process only the observations for the month of July.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅处理7月份的观测数据。
- en: Find the mean temperature for the observations for the month of July for each
    year, so we'll have an average for July 2013, July 2012, July 2011, and so on.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出每年7月份观测的平均温度，这样我们就会有2013年7月、2012年7月、2011年7月等的平均值。
- en: Group these monthly averages into rolling ten-year windows. For example, one
    window will have the observations for 1950 to 1960, another window will have observations
    for 1951 to 1961, and so on.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这些月度平均值分组到滚动十年窗口中。例如，一个窗口将包含1950年到1960年的观测数据，另一个窗口将包含1951年到1961年的观测数据，依此类推。
- en: Find the mean temperature for each of these windows for a climatic average temperature
    for July for that period.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出这些窗口中每个窗口的平均温度，以获得该时期的7月份气候平均温度。
- en: Calculate the change in the maximum temperature by subtracting the climatic
    average for the last window for a station from the average of its first window.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过从最后一个窗口的气候平均温度中减去一个站点的第一个窗口的平均值来计算最大温度的变化。
- en: This breaks down the rest of the transformation process pretty well. We can
    use this to help us structure and write the functions that we'll need to implement
    the process. However, before we can get into that, we need to read the data.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好地分解了其余的转换过程。我们可以使用它来帮助我们构建和编写我们需要实现该过程的函数。然而，在我们能够进行之前，我们需要读取数据。
- en: Reading the data
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读取数据
- en: 'We''ll read the data from the space-delimited data files and store the rows
    in a new record type. For this section, let''s create the `src/clj_gis/rolling_avg.clj`
    file. It will begin with the following namespace declaration:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从空格分隔的数据文件中读取数据，并将行存储在新记录类型中。对于本节，让我们创建`src/clj_gis/rolling_avg.clj`文件。它将以以下命名空间声明开始：
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, we can define a data type for the weather data. We''ll read the data into
    an instance of `WeatherRow`, and then we''ll need to normalize the data to make
    sure that the values are ones that we can use. This will involve converting strings
    to numbers and dates, for instance:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以为天气数据定义一个数据类型。我们将数据读入`WeatherRow`的一个实例中，然后我们需要对数据进行归一化，以确保值是我们能使用的。这涉及到将字符串转换为数字和日期等：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Now that we have the weather data, we can work it through the pipeline as outlined
    in the preceding code snippet. This series of functions will construct a sequence
    of reducers.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了天气数据，我们可以按照前面代码片段中概述的流程进行处理。这一系列函数将构建一个Reducer序列。
- en: '**Reducers**, introduced in Clojure 1.5, are a relatively new addition to the
    language. They refine traditional functional-style programming. Instead of `map`
    taking a function and a sequence and constructing a new sequence, the reducers''
    version of `map` takes a function and a sequence or folder (the core reducer data
    type) and constructs a new folder that will apply the function to the elements
    of the input when required. So, instead of constructing a series of sequences,
    it composes the functions into a larger function that performs the same processing,
    but only produces the final output. This saves on allocating the memory, and if
    the input data types are structured correctly, the processing can also be automatically
    parallelized as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**Reducer**，在Clojure 1.5中引入，是语言中相对较新的功能。它们对传统的函数式编程风格进行了改进。与`map`函数接收一个函数和一个序列并构建一个新的序列不同，`Reducer`版本的`map`函数接收一个函数和一个序列或文件夹（核心Reducer数据类型）并构建一个新的文件夹，该文件夹将在需要时将函数应用于输入元素。因此，它不是构建一系列序列，而是将函数组合成一个更大的函数，执行相同的处理，但只产生最终输出。这节省了内存分配，并且如果输入数据类型结构正确，处理也可以自动并行化如下：'
- en: 'For the first step, we want to return only the rows that fall in the month
    we''re interested in. This looks almost exactly like a regular call to `filter`,
    but instead of returning a new, lazy sequence, it returns a folder that has the
    same effect; it produces a sequence with only the data rows we want. Or, we can
    compose this with other folders to further modify the output. This is what we
    will do in the next few steps:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于第一步，我们只想返回落在我们感兴趣的月份中的行。这几乎与`filter`的常规调用完全一样，但它返回一个具有相同效果的文件夹；它产生一个只包含我们想要的数据行的序列。或者，我们可以将这个文件夹与其他文件夹组合起来以进一步修改输出。这就是我们在接下来的几个步骤中将要做的：
- en: '[PRE13]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This function takes the reducer from the first step and passes it through a
    few more steps. The `group-by` function finally reifies the sequence into a hash
    map. However, it''s immediately fed into another reducer chain that averages the
    accumulated temperatures for each month:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此函数将第一步中的Reducer传递通过几个更多步骤。`group-by`函数最终将序列实体化为一个哈希表。然而，它立即被送入另一个Reducer链，该链平均每个月累积的温度：
- en: '[PRE14]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'For step three, we create a series of moving windows across the monthly averages.
    If there aren''t enough averages to create a full window, or if there are only
    enough to create one window, then we throw those extra observations out:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于第三步，我们创建一系列移动窗口，跨越月度平均值。如果没有足够的平均值来创建一个完整的窗口，或者如果只有足够的平均值来创建一个窗口，那么我们将这些额外的观测值丢弃：
- en: '[PRE15]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This step uses a utility function, `mean`, to get the average temperature for
    each window. We saw this defined in step two. This keeps hold of the starting
    year for that window so they can be properly ordered:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此步骤使用一个实用函数`mean`来获取每个窗口的平均温度。我们在第二步中看到了它的定义。这个函数保留了该窗口的起始年份，以便它们可以正确排序：
- en: '[PRE16]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'After this, we do a little more filtering to only pass the averages through,and
    then we replace the list of averages with the difference between the initial and
    the final averages:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此之后，我们进行一些额外的过滤，只传递平均值，然后我们将平均值列表替换为初始平均值和最终平均值之间的差值：
- en: '[PRE17]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: There's more to this, of course. We have to get a list of the files to be processed,
    and we need to do something with the output; either send it to a vector or to
    a file.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这里还有更多内容。我们需要获取要处理的文件列表，并且需要对输出进行处理；要么将其发送到向量中，要么发送到文件中。
- en: Now that we've made it this far, we're done transforming our data, and we're
    ready to start our analysis.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经走到这一步，我们已经完成了数据的转换，我们准备开始我们的分析。
- en: Interpolating sample points and generating heat maps using inverse distance
    weighting (IDW)
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用反距离加权（IDW）插值样本点并生成热图
- en: In the end, we're going to feed the data we've just created to ArcGIS in order
    to create the heat map, but before we do that, let's try to understand what will
    happen under the covers.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将刚刚创建的数据输入到ArcGIS中，以创建热图，但在我们这样做之前，让我们尝试理解在幕后会发生什么。
- en: 'For this code, let''s open up the `src/clj_gis/idw.clj` file. The namespace
    for this should be like the following code:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这段代码，让我们打开`src/clj_gis/idw.clj`文件。这个命名空间应该像以下代码那样：
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: To generate a **heat map**, we first start with a sample of points for the space
    we're looking at. Often, this space is geographical, but it doesn't have to be.
    Values for a complex, computationally-expensive, two-dimensional function are
    another example where a heat map would be useful. It would take too long to completely
    cover the input domain, and inverse distance weighting could be used to fill in
    the gaps.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成**热图**，我们首先从我们要观察的空间中选取一组样本点。通常，这个空间是地理性的，但不必是。对于复杂且计算量大的二维函数，其值也是一个使用热图的有用例子。完全覆盖输入域需要太长时间，可以使用逆距离加权来填补空白。
- en: The sample data points each have a value, often labeled *z* to imply a third
    dimension. We want a way to interpolate the *z* value from the sample points onto
    the spaces between them. The heat map visualization is just the result of assigning
    colors to ranges of *z* and plotting these values.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 每个样本数据点都有一个值，通常标记为`z`以暗示第三维度。我们希望有一种方法可以将样本点的`z`值插值到它们之间的空间。热图可视化只是将颜色分配给`z`值的范围，并绘制这些值的结果。
- en: One common technique to interpolate the value of *z* to points between the sample
    points is called **inverse distance weighting (IDW)**. To find the interpolated
    value of *z* for a point *x, y*, IDW sees how much the value of each sample point
    influences that location, given each sample's distance away and a value *p* that
    determines how far each sample point's influence carries. Low values of *p* don't
    project much beyond their immediate vicinity. High values of *p* can be projected
    too far. We'll see some examples of this in a minute.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 一种常见的将值`z`插值到样本点之间的技术称为**逆距离加权（IDW）**。为了找到点`x, y`的插值值`z`，IDW会根据每个样本的距离和值`p`来确定每个样本点对那个位置的影响，其中`p`决定了每个样本点的影响范围。低值`p`不会投射到其邻近区域之外。高值`p`可能会投射得太远。我们将在稍后看到一些例子。
- en: There are a variety of ways to calculate the IDW. One general form is to sum
    the weighted difference between the data point in question and all others, and
    divide it by the non-weighted sum.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 计算IDW（Inverse Distance Weighting）的方法有很多种。一种通用形式是将问题数据点与所有其他数据点之间的加权差值相加，然后除以非加权总和。
- en: '![Interpolating sample points and generating heat maps using inverse distance
    weighting (IDW)](img/4139OS_02_02.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![使用逆距离加权（IDW）插值样本点并生成热图](img/4139OS_02_02.jpg)'
- en: 'There are several variations of IDW, but here, we''ll just describe the base
    version, as outlined by Donald Shepard in 1968\. First, we have to determine the
    inverse distance function. It''s given here as `w`. Also, `x_i` is the sample
    point, and `x` is the point to estimate the interpolation for, just as given in
    the preceding formula:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: IDW有多种变体，但在这里，我们将只描述由Donald Shepard在1968年概述的基础版本。首先，我们必须确定逆距离函数。这里给出的是`w`。此外，`x_i`是样本点，`x`是要估计插值的点，正如前面公式中给出的那样：
- en: '[PRE19]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'With this in place, IDW is the sum of `w` for each point in the sample, multiplied
    by that sample point''s value and divided by the sum of `w` for all the samples.
    It''s probably easier to parse the code than it is to describe it verbosely:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，IDW是样本中每个点的`w`的总和，乘以该样本点的值，然后除以所有样本的`w`的总和。可能解析代码比详细描述它更容易：
- en: '[PRE20]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The highlighted part of the function is the part to pay attention to. The rest
    makes it easier to call `idw` in different contexts. I precompute the denominator
    in the `let` form, as it won't change for each sample point that is considered.
    Then, the distances of each sample point and the target point are multiplied by
    the value of each sample point and divided by the denominator, and this is summed
    together.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 函数中突出显示的部分是需要注意的部分。其余部分使得在不同的上下文中调用`idw`变得更容易。我在`let`形式中预先计算了分母，因为它对于每个考虑的样本点都不会改变。然后，每个样本点和目标点的距离乘以每个样本点的值，然后除以分母，并将这些值相加。
- en: 'This function is easy to call with the charting library that **Incanter** provides,
    which has a very nice heat map function. Incanter is a library used to perform
    data analysis and visualization in Clojure by interfacing with high-performance
    Java libraries. This function first gets the bounding box around the data and
    pads it a little. It then uses Incanter''s `heat-map` function to generate the
    heat map. To make it more useful, however, we then make the heat map transparent
    and plot the points from the sample onto the chart. This is found in `src/clj_gis/heatmap.clj`:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数很容易用**Incanter**提供的图表库来调用，它有一个非常棒的热图功能。Incanter是一个库，通过接口与高性能Java库进行交互，用于在Clojure中执行数据分析和可视化。这个函数首先获取数据周围的边界框并稍微填充一下。然后它使用Incanter的`heat-map`函数生成热图。然而，为了使其更有用，我们接着使热图透明，并将样本点绘制到图表上。这可以在`src/clj_gis/heatmap.clj`中找到：
- en: '[PRE21]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Let's take a random data sample and use it to see what different values of `p`
    do.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们随机抽取一个数据样本，并使用它来观察不同*p*值会产生什么效果。
- en: 'For the first experiment, let''s look at *p=1*:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一个实验，让我们看看*p=1*：
- en: '[PRE22]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The graph it produces looks like the following figure:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图表看起来像以下图：
- en: '![Interpolating sample points and generating heat maps using inverse distance
    weighting (IDW)](img/4139OS_02_03.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![使用反距离加权（IDW）插值样本点和生成热图](img/4139OS_02_03.jpg)'
- en: We can see that the influence for each sample point is tightly bound to its
    immediate neighborhood. More moderate values, around 4 and 5, dominate.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，每个样本点的影响与其邻近区域紧密相关。大约4和5的适度值占主导地位。
- en: 'For *p=8*, the picture is a bit different, as shown in the following screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 对于*p=8*，情况略有不同，如下面的截图所示：
- en: '![Interpolating sample points and generating heat maps using inverse distance
    weighting (IDW)](img/4139OS_02_04.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![使用反距离加权（IDW）插值样本点和生成热图](img/4139OS_02_04.jpg)'
- en: In the preceding figure, each interpolated point is more heavily influenced
    by the data points closest to it, and further points are less influential. More
    extreme regions have great influence over larger distances, except around sample
    points with moderate values.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，每个插值点受到其附近数据点的强烈影响，而较远点的影響较小。极端区域对较大距离的影响很大，除了具有适度值的样本点周围。
- en: 'Finally, we''ll look at an interpolated point that''s more balanced. The following
    is the chart for when *p=3*:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将看看一个更平衡的插值点。以下是在*p=3*时的图表：
- en: '![Interpolating sample points and generating heat maps using inverse distance
    weighting (IDW)](img/4139OS_02_05.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![使用反距离加权（IDW）插值样本点和生成热图](img/4139OS_02_05.jpg)'
- en: This seems much more balanced. Each sample point clearly exerts its influence
    across its own neighborhood. However, no point, and no range of values, appears
    to dominate. A more meaningful graph with real data would probably look quite
    good.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎更加平衡。每个样本点显然在其自己的邻域内施加其影响。然而，没有点，也没有值域，似乎占主导地位。一个包含真实数据的更有意义的图表可能看起来相当不错。
- en: So far, we've been playing with the toy data. Before we can apply this to the
    climate data that we prepared earlier, there are several things we need to take
    into consideration.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在玩玩具数据。在我们可以将这些应用到我们之前准备好的气候数据之前，我们需要考虑几个因素。
- en: Working with map projections
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与地图投影一起工作
- en: Have you looked at a world wall map and noticed how big Greenland is? It's huge.
    It's larger than China, the United States, and Australia, and is about as big
    as Africa. Too bad it's so cold, or we could fit a lot of people up there. Or
    could we?
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你看过世界地图墙，注意到格陵兰有多大吗？它非常大。它比中国、美国和澳大利亚都要大，几乎和非洲一样大。真遗憾它那么冷，否则我们可以在那里安置很多人。或者我们可以吗？
- en: Actually, Australia is about three and a half times as big as Greenland, China
    is almost four and a half times as big, and Africa is almost fourteen times as
    large!
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，澳大利亚大约是格陵兰的三倍半大，中国几乎是四倍半大，而非洲几乎是十四倍大！
- en: What's going on? The **Mercator projection** is what's going on. It was developed
    by the Flemish cartographer Gerardus Mercator in 1569\. Over time, it's become
    very popular, at least partially so because it fits nicely onto a rectangular
    page without wasting a lot of space around the edges, the way some projections
    do.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 发生了什么？这是**墨卡托投影**的作用。它是由佛兰德地图学家杰拉鲁斯·墨卡托在1569年开发的。随着时间的推移，它变得非常流行，至少部分原因是它非常适合矩形页面，不会像某些投影那样在边缘浪费很多空间。
- en: A map projection is a transformation of locations on a sphere or ellipsoid onto
    locations on a plane. You can think of it as a function that transforms latitudes
    and longitudes of the earth into the x and y coordinates on a sheet of paper.
    This allows us to take a point on a map and find it on the earth, take a point
    on the earth and find it on the map, or take a point on one map and find it on
    another.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 地图投影是将球体或椭球体上的位置转换到平面上的变换。你可以将其视为一个函数，将地球的纬度和经度转换为纸张上的x和y坐标。这使得我们能够在地图上取一个点并找到它在地球上的位置，或者在地球上取一个点并找到它在地图上的位置，或者在一个地图上取一个点并找到它在另一个地图上的位置。
- en: Mercator is a common projection. It's created by wrapping a cylindrical sheet
    of paper around the globe, only touching along the equator. Then, the shapes on
    the globe are cast out onto the paper roll like beams of light spreading out.
    This was developed for navigation, and if you chart a course with a constant bearing,
    it plots on a Mercator map as a straight line. However, its major problem is that
    it distorts shapes around the edges, for example, Greenland or Antarctica.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 梦卡托投影是一种常见的投影。它是通过将一张圆柱形的纸张包裹在地球上，仅在赤道上接触来创建的。然后，地球上的形状就像光线一样投射到纸张卷上。这是为了导航而开发的，如果你用恒定的航向绘制航线，它会在梦卡托地图上显示为一条直线。然而，它的主要问题是它扭曲了边缘附近的形状，例如格陵兰或南极洲。
- en: 'There are a number of other common projections, such as the following:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他一些常见的投影，如下所示：
- en: The **Gall-Peters** projection accurately shows the area but distorts the shape.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加尔-彼得斯**投影准确地显示了面积，但扭曲了形状。'
- en: The **Eckert IV** projection distorts the outer shape of the map onto an ovoid
    to minimize the area distortions of the Mercator projection, although it still
    distorts the shapes of things near the poles.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**埃克特IV**投影将地图的外形扭曲成一个椭圆形，以最大限度地减少梦卡托投影的面积扭曲，尽管它仍然扭曲了极地附近的形状。'
- en: The **Goode homolosine** projection attempts to accurately portray both the
    area and shape by cutting the *skin* off the globe into some awkward shapes. It's
    sometimes called the *orange peel map* because the outlines of the map look like
    you peeled an orange by hand and flattened it on the table top.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**古德同形**投影试图通过将地球的“皮肤”切割成一些不规则的形状来准确地描绘面积和形状。它有时被称为“橙皮地图”，因为地图的轮廓看起来就像你用手剥橙子并将其平铺在桌面上一样。'
- en: So how does this apply to our project?
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这如何应用到我们的项目中呢？
- en: On the one hand, we need some way to accurately measure the distances between
    points in the real world. For example, as we're working in the northern hemisphere,
    the points near the top of the map, to the north, will be closer together than
    the points near the bottom. We need to know the projection in order to measure
    these distances correctly and correctly calculate the interpolations.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 一方面，我们需要一种方法来准确测量现实世界中点之间的距离。例如，当我们工作在北半球时，地图顶部的点，即北部的点，会比底部的点更靠近。我们需要知道投影，以便正确测量这些距离并正确计算插值。
- en: To put it another way, the distance between two points that are a degree of
    longitude apart would be different, depending on their latitude. In Grand Forks,
    North Dakota, the distance between longitude -97 and -96 is approximately 46 miles
    (74.5 km). On the other hand, the distance between longitudes -97 and -96, just
    west of Houston, Texas, is almost 60 miles (96.52 km). Think of the way in which
    two lines that are parallel on the equator have to curve towards each other as
    they converge at the poles.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种说法是，两个经度相差一度点的距离会因纬度不同而不同。在北达科他州的格兰 Forks，经度-97和-96之间的距离大约是46英里（74.5公里）。另一方面，在德克萨斯州休斯顿西部的经度-97和-96之间的距离几乎是60英里（96.52公里）。想象一下，在赤道上平行的两条线在汇聚到极点时必须向彼此弯曲的方式。
- en: On the other hand, we also need to then be able to know which pixel a set of
    latitude and longitude correspond to. In order to actually plot the heat map on
    the screen, we have to be able to determine which pixel gets which color, depending
    on the interpolated points on the map.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，我们还需要知道一组纬度和经度对应哪个像素。为了实际上在屏幕上绘制热图，我们必须能够确定哪个像素对应哪种颜色，这取决于地图上的插值点。
- en: Finding a base map
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 寻找基础地图
- en: Related to the projections, we also need to have a base layer to display the
    heat map on top of it. Without being able to see the context of the underlying
    geography, a heat map is more confusing than it is illuminating.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 与投影相关，我们还需要一个基础层来在上面显示热图。如果不能看到底层地理的上下文，热图比它所揭示的更令人困惑。
- en: There are maps available that have their locations encoded in their metadata.
    **GeoTIFF** is one such format. GIS packages can layer the data and information
    on top of these base maps to provide more complex, interesting, and useful visualizations
    and analyses.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些地图在它们的元数据中编码了位置。**GeoTIFF**就是这样一种格式。GIS软件可以在这些基础地图上叠加数据和信息，以提供更复杂、更有趣和更有用的可视化和分析。
- en: Working with ArcGIS
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ArcGIS
- en: Working with projections and base maps can be fiddly and prone to errors. While
    there are Java libraries that can help us with this, let's use the major software
    package in this domain, **ArcGIS**, for the purposes of this demonstration. While
    it's awesome to be able to program solutions in a powerful, flexible language
    like Clojure, sometimes, it's nicer to get pretty pictures quickly.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 使用投影和基础地图可能会很麻烦且容易出错。虽然有一些Java库可以帮助我们处理这个问题，但为了演示的目的，我们将使用该领域的重大软件包**ArcGIS**。虽然能够在像Clojure这样的强大、灵活的语言中编程解决方案很酷，但有时快速得到漂亮的图片会更好。
- en: 'We''re going to start this by getting the base layer. ESRI maintains a set
    of topological maps, and this map of the United States is perfect for this:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从获取基础图层开始。ESRI维护了一套拓扑地图，这张美国地图非常适合这个用途：
- en: Navigate to [http://www.arcgis.com/home/item.html?id=99cd5fbd98934028802b4f797c4b1732](http://www.arcgis.com/home/item.html?id=99cd5fbd98934028802b4f797c4b1732)
    to view ESRI's page on the **US Topo Maps**.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到[http://www.arcgis.com/home/item.html?id=99cd5fbd98934028802b4f797c4b1732](http://www.arcgis.com/home/item.html?id=99cd5fbd98934028802b4f797c4b1732)以查看ESRI关于**美国地形图**的页面。
- en: Click on the **Open** dropdown.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**打开**下拉菜单。
- en: Select the option that allows you to get **ArcGIS Desktop** to open the layer.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择允许**ArcGIS桌面**打开图层的选项。
- en: '![Working with ArcGIS](img/4139OS_02_07.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![使用ArcGIS](img/4139OS_02_07.jpg)'
- en: 'Now we''ll add our data. This was created using the functions that we defined
    earlier as well as a few more that are available in this chapter''s code download:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将添加我们的数据。这是使用我们之前定义的函数以及本章代码下载中可用的几个更多函数创建的：
- en: The data is available at [http://www.ericrochester.com/clj-data-master/temp-diffs.csv](http://www.ericrochester.com/clj-data-master/temp-diffs.csv).
    Point your web browser there and download the file. Don't forget where you put
    it!
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据可在[http://www.ericrochester.com/clj-data-master/temp-diffs.csv](http://www.ericrochester.com/clj-data-master/temp-diffs.csv)找到。将您的网络浏览器指向那里并下载文件。别忘了你把它放在哪里了！
- en: In ArcGIS, navigate to **File** | **Add Data** | **Add XY Data**.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ArcGIS中，导航到**文件** | **添加数据** | **添加XY数据**。
- en: Select the `temp-diffs.csv` file, and specify `z` for the **z** field.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`temp-diffs.csv`文件，并指定`z`字段为**z**。
- en: We'll also need to change the projection of the input data. To do this, click
    on **Edit...** to edit the projection.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要更改输入数据的投影。为此，点击**编辑...**来编辑投影。
- en: In the new dialog box, **Select** a predefined coordinate system. Navigate to
    **Coordinate Systems** | **Geographic Coordinate Systems** | **North America**
    | **NAD 1983**.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新的对话框中，**选择**一个预定义的坐标系。导航到**坐标系** | **地理坐标系** | **北美洲** | **NAD 1983**。
- en: When the file is ready to load, the dialog should look like what is shown in
    the following screenshot:![Working with ArcGIS](img/4139OS_02_08.jpg)
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当文件准备加载时，对话框应该看起来像下面这张截图所示：![使用ArcGIS](img/4139OS_02_08.jpg)
- en: Once the data is in place, we need to set the color scheme for the **z** field.
    Right-click on the new layer and select **Properties**. Select the **Symbology**
    tab and get the graduated colors the way you like them.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦数据就位，我们需要为**z**字段设置颜色方案。在新图层上右键单击并选择**属性**。选择**符号**选项卡，并获取您喜欢的渐变色。
- en: After I was done playing, the dialog box looked like what is shown in the following
    screenshot:![Working with ArcGIS](img/4139OS_02_09.jpg)
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我玩完之后，对话框看起来像下面这张截图所示：![使用ArcGIS](img/4139OS_02_09.jpg)
- en: Now we get to the good part. Open up **Catalog** and select **IDW tool**. It
    is done by navigating to **System Toolboxes** | **Geostatistical Analyst Tools**
    | **Interpolation**. Generate the heat map into a new layer.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们来到了好戏的部分。打开**目录**并选择**IDW工具**。这是通过导航到**系统工具箱** | **地理统计分析师工具** | **插值**来完成的。将热图生成到一个新的图层中。
- en: Once ArcGIS is done, the heat map will be too opaque to see the underlying geography.
    Right-click on the heat map layer and select **Properties**. In the **Display**
    tab, change the opacity to something reasonable. I used `0.40`.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦ArcGIS处理完毕，热图将过于不透明，无法看到下层的地理信息。在热图图层上右键单击并选择**属性**。在**显示**选项卡中，将不透明度更改为合理的值。我使用了`0.40`。
- en: 'The final results are shown as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果如下所示：
- en: '![Working with ArcGIS](img/4139OS_02_10.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![使用 ArcGIS](img/4139OS_02_10.jpg)'
- en: We can see that for a large part of the nation, things have heated up. The west
    part of the great lakes have cooled a bit, but the Rocky Mountains have especially
    gotten warmer.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在全国的大部分地区，情况已经变得很热。五大湖的西部有所降温，但落基山脉特别变暖了。
- en: Summary
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This has been a fun little experiment. Looking at the data, however, suggests
    caution. Some of the stations have been in operation long enough to have only
    a few of the sliding windows defined. Others have been operational for much longer.
    This makes it difficult to compare the aggregated numbers from the different different
    stations, which is what we're doing by creating the heat map.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一次有趣的实验。然而，观察数据时却需要谨慎。一些站点运行时间足够长，以至于只有少数滑动窗口被定义。其他站点则运行了更长的时间。这使得比较不同站点的汇总数据变得困难，这正是我们通过创建热图所做的事情。
- en: Nevertheless, this does point to some interesting areas of future enquiry, and
    it provides a brief glimpse of what geographical information systems can provide
    and how to use them. They can add a geospatially informed edge to the modeling
    and analysis, which isn't possible with the data, tools, and techniques they bring
    to the table.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，这确实指向了一些有趣的未来研究方向，并简要展示了地理信息系统可以提供什么以及如何使用它们。它们可以为建模和分析增添地理空间信息的有益视角，这是他们带来的数据、工具和技术所无法实现的。
- en: In this next chapter, we'll turn our attention to sifting through free-form
    textual data using topic modeling.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将把注意力转向使用主题模型筛选自由形式的文本数据。
