- en: Designing Data Visualization Solutions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计数据可视化解决方案
- en: Once we have the data living in the Hadoop ecosystem and it's been processed,
    the next logical step is to build the analytics that drive the business decisions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据生活在Hadoop生态系统中，并且已经经过处理，下一步的逻辑步骤就是构建驱动业务决策的分析。
- en: 'In this chapter, we will learn the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Data visualization
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可视化
- en: Apache Druid
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Druid
- en: Apache Superset
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Superset
- en: Data visualization
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可视化
- en: Data visualization is the process of understanding the relationships between
    various entities in the raw data via graphical means. This is a very powerful
    technique because it enables end users to get the message in a very easy form
    without even knowing anything about the underlying data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化是通过图形手段理解原始数据中各种实体之间关系的过程。这是一个非常强大的技术，因为它使最终用户能够以非常简单的方式获取信息，即使他们根本不了解底层数据。
- en: Data visualization plays a very important role in visual communication of insights
    from big data. Its both an art and a science, and requires some effort in terms
    of understanding the data; at the same time we need some understanding of the
    target audience as well.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化在从大数据中洞察的视觉沟通中扮演着非常重要的角色。它既是艺术也是科学，需要投入一些努力来理解数据；同时，我们还需要对目标受众有一定的了解。
- en: So far, we have seen that any type of data can be stored in the **Hadoop filesystem**
    (**HDFS**). In order to convert complex data structures into a visual form, we
    need to understand the standard techniques that are used to represent the data.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到任何类型的数据都可以存储在**Hadoop文件系统**（**HDFS**）中。为了将复杂的数据结构转换为视觉形式，我们需要了解用于表示数据的标准技术。
- en: In data visualization, the message is conveyed to the end users in the form
    of graphics which can be in 1D, 2D, 3D, or even higher dimensions. This purely
    depends on the meaning we are trying to convey.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据可视化中，信息以图形的形式传达给最终用户，这些图形可以是1D、2D、3D，甚至更高维度。这完全取决于我们试图传达的意义。
- en: 'Let''s take a look at the standard graphics that are used to convey visual
    messages to users:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看用于向用户传达视觉信息的标准图形：
- en: Bar/column chart
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 柱状图/条形图
- en: Line/area chart
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线形/面积图
- en: Pie chart
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 饼图
- en: Radar chart
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雷达图
- en: Scatter/bubble chart
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 散点/气泡图
- en: Tag Cloud
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签云
- en: Bubble chart
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 气泡图
- en: Bar/column chart
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 柱状图/条形图
- en: This is a 2D graphical representation of data where the data points are shown
    as vertical/horizontal bars. Each bar represents one data point. When there is
    no time dimension involved with reference to the data points, the order in which
    these points are shown might not make any difference. When we deal with time series
    data for representing bar charts, we generally follow the chronological order
    of display along the X (horizontal) axis.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个二维数据图形表示，其中数据点以垂直/水平条的形式显示。每个条代表一个数据点。当没有时间维度与数据点相关时，这些点显示的顺序可能没有差别。当我们处理用于表示条形图的时间序列数据时，我们通常遵循X（水平）轴上的显示时间顺序。
- en: 'Let''s take a look at a sample chart that is generated with four data points.
    The data represents the amount each user has:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个由四个数据点生成的示例图表。这些数据代表每个用户的金额：
- en: '![](img/9a5e0f63-0700-430c-873e-dbeeb2c09d0b.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9a5e0f63-0700-430c-873e-dbeeb2c09d0b.png)'
- en: '**Interpretation**: The graph has both text data in rows and columns, and also
    visuals. If you observe carefully, the textual data is smaller in size and has
    only four records. But the visual graphic conveys the message straightaway without
    knowing anything about the data.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**解释**：图表既有行和列中的文本数据，也有视觉元素。如果你仔细观察，文本数据的大小较小，只有四条记录。但视觉图形直接传达信息，而不需要了解任何关于数据的信息。'
- en: 'The message the graph conveys is that:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图表传达的信息是：
- en: Sita has more money than everyone
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 西塔的钱比所有人都要多
- en: Gita has the least money
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 吉塔的钱最少
- en: Other interpretations are also possible. They are left to the reader.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 其他解释也是可能的。它们留给读者去思考。
- en: Line/area chart
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线形/面积图
- en: This is also typically a 2D chart where each data point is represented as a
    point on canvas and all these points belonging to the same dataset are connected
    using a line. This chart becomes an area chart when the region from the horizontal/vertical
    axis is completely covered up to the line.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常也是一个二维图表，其中每个数据点都表示为画布上的一个点，所有属于同一数据集的点都通过线条连接。当水平/垂直轴的区域完全覆盖到线条时，此图表就变成了面积图。
- en: There can be more than one line in the same graph, which indicates multiple
    series of data for the same entities.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个图表中可以有不止一条线，这表示同一实体的多个数据系列。
- en: 'Let''s take a look at the sample of this area chart based on the same data
    as before:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看基于之前相同数据的这个面积图的样本：
- en: '![](img/b9849529-fcc2-488a-8c2d-02fadaba8876.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![数据图](img/b9849529-fcc2-488a-8c2d-02fadaba8876.png)'
- en: 'These are the properties of the chart:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是图表的特性：
- en: The *x* axis has the list of all the people
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*x* 轴上有所有人的名单'
- en: The *y* axis indicates the amount from **0** to **100**
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*y* 轴表示从**0**到**100**的金额'
- en: Points are drawn on the graph at four places, corresponding to the values in
    tabular form
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表上有四个点，对应于表格形式的值
- en: Points are connected with straight lines
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点用直线连接
- en: The area is filled below the line to make it an area chart
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线条下方填充的区域使其成为一个面积图
- en: Pie chart
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 饼图
- en: This is also a 2D chart drawn as multiple sectors in a circle. This chart is
    useful when we want to highlight the relative importance of all the data points.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是一个以圆形中的多个扇区形式绘制的二维图表。当我们要强调所有数据点的相对重要性时，这种图表很有用。
- en: 'Let''s take a look at the example chart that is drawn with the same dataset
    as before to understand it better:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看之前相同数据集绘制的示例图表，以更好地理解它：
- en: '![](img/ffa15300-a402-41d1-9baf-d4caae0188a9.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图表](img/ffa15300-a402-41d1-9baf-d4caae0188a9.png)'
- en: As you can see, it's easy to understand the relative importance of the amounts
    owned by each of the persons using this chart.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，使用这个图表很容易理解每个人拥有的金额的相对重要性。
- en: The conclusions that are drawn are similar to the previous charts. But the graph
    is a simple circle and there are no multiple dimensions here to burden the user.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 得出的结论与之前的图表相似。但图表是一个简单的圆圈，这里没有多个维度来增加用户的负担。
- en: Radar chart
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 雷达图
- en: This is also a 2D graphic where the data axes are the edges of equidistant sectors
    (like a pie chart's edges). This graph is useful when there are multiple dimensions
    in which we want to understand the relative significance of each data point.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是一个二维图形，其中数据轴是等距扇形的边缘（就像饼图的边缘）。当有多个维度，我们想要理解每个数据点的相对重要性时，这种图表很有用。
- en: 'To understand this graph better, let''s take a look at this sample data and
    the graphic:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解这个图表，让我们看看这个样本数据和图形：
- en: '![](img/436900d2-ca59-4ff0-a579-c8a69ab9b5a6.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图表](img/436900d2-ca59-4ff0-a579-c8a69ab9b5a6.png)'
- en: 'The data consists of eight columns:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 数据由八列组成：
- en: '**First column**: List of all users'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第一列**：所有用户的名单'
- en: '**Second to Eighth column**: Days in a week and the dollars owned by each person
    on that day'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第二至第八列**：一周中的天数和每个人那天拥有的美元数'
- en: 'We want to draw a graph that shows us the following things:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要绘制一个图表，显示以下内容：
- en: Total dollars per day
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每天的总美元数
- en: Dollars owned by every person every day
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个人每天拥有的美元数
- en: We have drawn all this information in the radar chart, where the axes are the
    sectors (days) and are capped at a maximum value of **400**. Each user's worth
    is drawn one on top of another so that we will know the total worth instead of
    relative worth (this is similar to area stacking).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经将所有这些信息绘制在雷达图中，其中轴是扇区（天数），最大值为**400**。每个用户的值都是叠加绘制的，这样我们就可以知道总价值而不是相对价值（这与面积堆叠类似）。
- en: Scatter/bubble chart
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 散点/气泡图
- en: A scatter chart can be a multi-dimensional graphic. This is one of the simpler
    graphics to understand as we render each data point on the canvas corresponding
    to the numeric value along the axis. This graph is useful to understand the relative
    importance of each point along the axes.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 散点图可以是一个多维图形。这是我们理解起来比较简单的一种图形，因为我们将在画布上渲染每个数据点，对应于轴上的数值。这种图表有助于理解轴上每个点的相对重要性。
- en: A bubble chart is a variant of a scatter chart, where the points on the canvas
    show the values as big bubbles (to signify their importance).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 气泡图是散点图的一种变体，画布上的点以大泡泡的形式显示值（以表示其重要性）。
- en: 'Let''s take a look at both these graphics with this example:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用这个例子来看看这两种图形：
- en: '![](img/15f06c51-ebce-4863-935b-8485c89f33e4.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![扇形图](img/15f06c51-ebce-4863-935b-8485c89f33e4.png)'
- en: The graphic on the left-hand side is a bubble chart and the right one is a scatter
    plot.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧的图形是气泡图，右侧的是散点图。
- en: Let's take a look at the data and the charts that are generated.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看数据和生成的图表。
- en: 'The input data:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数据：
- en: Consists of five rows, whereas we have **Sales** and **Number of Products**
    in columns
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由五行组成，而我们在列中有**销售**和**产品数量**
- en: 'With a bubble chart:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 使用气泡图：
- en: The *y* axis shows the number of products
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*y* 轴显示产品的数量'
- en: The *x* axis is just positional and doesn't reflect the value from the input
    data
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*x* 轴仅表示位置，并不反映输入数据的值'
- en: Each point on the canvas shows the sales corresponding to the number of products
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 画布上的每个点表示对应产品数量的销售
- en: 'With the scatter chart:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用散点图：
- en: The *y* axis shows the sales done
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*y* 轴显示完成的销售'
- en: The *x* axis shows the products sold
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*x* 轴显示销售的产品'
- en: Each point on the canvas shows each row in the input
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 画布上的每个点表示输入中的每一行
- en: Other charts
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他图表
- en: There are many other types of graphics possible that are not covered in this
    section but are worth exploring on the [https://d3js.org](https://d3js.org) website.
    This will give you an understanding of how data can be represented to convey a
    very good message to the users.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中未涵盖但值得在 [https://d3js.org](https://d3js.org) 网站上探索的其他许多图形类型。这将帮助您了解数据如何表示，以便向用户传达非常好的信息。
- en: Practical data visualization in Hadoop
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hadoop 中的实用数据可视化
- en: 'Hadoop has a rich ecosystem of data sources and applications that help us build
    rich visualizations. In the coming sections, we will understand two such applications:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Hadoop 拥有丰富的数据源和应用生态系统，帮助我们构建丰富的可视化。在接下来的章节中，我们将了解两个这样的应用：
- en: Apache Druid
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Druid
- en: Apache Superset
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Superset
- en: We will also learn how to use Apache Superset with data in RDBMSes such as MySQL.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将学习如何使用 Apache Superset 与 RDBMS（如 MySQL）中的数据一起使用。
- en: Apache Druid
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache Druid
- en: Apache Druid is a distributed, high-performance columnar store. Its official
    website is [https://druid.io](https://druid.io).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Druid 是一个分布式、高性能的列式存储。其官方网站是 [https://druid.io](https://druid.io)。
- en: Druid allows us to store both real-time and historical data that is time series
    in nature. It also provides fast data aggregation and flexible data exploration.
    The architecture supports storing trillions of data points on petabyte sizes.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Druid 允许我们存储实时和历史数据，这些数据本质上是时间序列的。它还提供了快速的数据聚合和灵活的数据探索。该架构支持在千兆字节大小上存储万亿数据点。
- en: In order to understand more about the Druid architecture, please refer to this
    white paper at [http://static.druid.io/docs/druid.pdf](http://static.druid.io/docs/druid.pdf).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更了解 Druid 架构，请参阅此白皮书 [http://static.druid.io/docs/druid.pdf](http://static.druid.io/docs/druid.pdf)。
- en: Druid components
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 德鲁伊组件
- en: 'Let''s take a quick look at the different components of the Druid cluster:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速了解一下 Druid 集群的不同组件：
- en: '| **Component** | **Description** |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| **组件** | **描述** |'
- en: '| Druid Broker | These are the nodes that are aware of where the data lies
    in the cluster. These nodes are contacted by the applications/clients to get the
    data within Druid. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 德鲁伊代理 | 这些节点知道数据在集群中的位置。这些节点被应用程序/客户端联系以获取 Druid 中的数据。 |'
- en: '| Druid Coordinator | These nodes manage the data (they load, drop, and load-balance
    it) on the historical nodes. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 德鲁伊协调器 | 这些节点管理历史节点上的数据（它们加载、删除和负载均衡数据）。 |'
- en: '| Druid Overlord | This component is responsible for accepting tasks and returning
    the statuses of the tasks. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 德鲁伊统治者 | 此组件负责接受任务并返回任务的状态。 |'
- en: '| Druid Router | These nodes are needed when the data volume is in terabytes
    or higher range. These nodes route the requests to the brokers. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 德鲁伊路由器 | 当数据量达到或超过太字节级别时，需要这些节点。这些节点将请求路由到代理。 |'
- en: '| Druid Historical | These nodes store immutable segments and are the backbone
    of the Druid cluster. They serve load segments, drop segments, and serve queries
    on segments'' requests. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 德鲁伊历史 | 这些节点存储不可变段，是 Druid 集群的骨干。它们提供加载段、删除段，并在段请求上提供查询服务。 |'
- en: Other required components
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他所需组件
- en: 'The following table presents a couple of other required components:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 下表展示了其他一些所需的组件：
- en: '| **Component**  | **Description** |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| **组件**  | **描述** |'
- en: '| Zookeeper | Apache Zookeeper is a highly reliable distributed coordination
    service |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| Zookeeper | Apache Zookeeper 是一个高度可靠的分布式协调服务 |'
- en: '| Metadata Storage | MySQL and PostgreSQL are the popular RDBMSes used to keep
    track of all segments, supervisors, tasks, and configurations |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| **组件** | **描述** |'
- en: Apache Druid installation
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache Druid 安装
- en: Apache Druid can be installed either in standalone mode or as part of a Hadoop
    cluster. In this section, we will see how to install Druid via Apache Ambari.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Druid 可以以独立模式或作为 Hadoop 集群的一部分进行安装。在本节中，我们将了解如何通过 Apache Ambari 安装 Druid。
- en: Add service
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加服务
- en: First, we invoke the Actions drop-down below the list of services in the Hadoop
    cluster.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在Hadoop集群中服务列表下方调用操作下拉菜单。
- en: 'The screen looks like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕看起来像这样：
- en: '![](img/56f10c5f-97bf-40c1-b098-83a1f671e5ee.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/56f10c5f-97bf-40c1-b098-83a1f671e5ee.png)'
- en: Select Druid and Superset
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择Druid和Superset
- en: In this setup, we will install both Druid and Superset at the same time. Superset
    is the visualization application that we will learn about in the next step.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个设置中，我们将同时安装Druid和Superset。Superset是我们将在下一步学习的数据可视化应用程序。
- en: 'The selection screen looks like this:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 选择屏幕看起来像这样：
- en: '![](img/f0086078-bf64-45a7-af90-00f00093b19f.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0086078-bf64-45a7-af90-00f00093b19f.png)'
- en: Click on Next when both the services are selected.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个服务都选择完毕后，点击下一步。
- en: Service placement on servers
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器上的服务放置
- en: In this step, we will be given a choice to select the servers on which the application
    has to be installed. I have selected node 3 for this purpose. You can select any
    node you wish.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，我们将有一个选择，可以选择应用程序需要安装的服务器。我已经选择了节点3来完成这个任务。你可以选择任何你希望的服务器。
- en: 'The screen looks something like this:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕看起来像这样：
- en: '![](img/e573a6f3-105c-45a7-a56b-b903cd89c4a9.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e573a6f3-105c-45a7-a56b-b903cd89c4a9.png)'
- en: Click on Next when when the changes are done.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当更改完成后，点击下一步。
- en: Choose Slaves and Clients
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择从属节点和客户端
- en: 'Here, we are given a choice to select the nodes on which we need the Slaves
    and Clients for the installed components. I have left the options that are already
    selected for me:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有一个选择，可以选择安装组件所需的从属节点和客户端节点。我已经保留了为我预先选定的选项：
- en: '![](img/23b2b7f5-6540-421e-8a95-2a3a0a3dcf83.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23b2b7f5-6540-421e-8a95-2a3a0a3dcf83.png)'
- en: Service configurations
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务配置
- en: In this step, we need to select the databases, usernames, and passwords for
    the metadata store used by the Druid and Superset applications. Feel free to choose
    the default ones. I have given MySQL as the backend store for both of them.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，我们需要选择Druid和Superset应用程序使用的元数据存储的数据库、用户名和密码。请随意选择默认值。我已经为它们两个选择了MySQL作为后端存储。
- en: 'The screen looks like this:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕看起来像这样：
- en: '![](img/72b59851-5564-4c73-8143-b34a002282ee.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72b59851-5564-4c73-8143-b34a002282ee.png)'
- en: Once the changes look good, click on the Next button at the bottom of the screen.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦更改看起来不错，点击屏幕底部的下一步按钮。
- en: Service installation
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务安装
- en: In this step, the applications will be installed automatically and the status
    will be shown at the end of the plan.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，应用程序将自动安装，并在计划的末尾显示状态。
- en: 'Click on Next once the installation is complete. Changes to the current screen
    look like this:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，点击下一步。当前屏幕的更改看起来像这样：
- en: '![](img/1d03751d-b4f0-4879-bbc8-ef7ba50c9a27.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1d03751d-b4f0-4879-bbc8-ef7ba50c9a27.png)'
- en: Installation summary
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装摘要
- en: 'Once everything is successfully completed, we are shown a summary of what has
    been done. Click on Complete when done:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 一切成功完成后，我们会看到所做工作的摘要。完成时点击完成：
- en: '![](img/02790068-b2da-4efd-a4b5-2afc1dfdb055.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/02790068-b2da-4efd-a4b5-2afc1dfdb055.png)'
- en: Sample data ingestion into Druid
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将样本数据导入Druid
- en: Once we have all the Druid-related applications running in our Hadoop cluster,
    we need a sample dataset that we must load in order to run some analytics tasks.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们所有的Druid相关应用程序都在我们的Hadoop集群中运行，我们需要一个样本数据集，以便运行一些分析任务。
- en: 'Let''s see how to load sample data. Download the Druid archive from the internet:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何加载数据。从互联网下载Druid存档：
- en: '[PRE0]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Extract the archive:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 解压存档：
- en: '[PRE1]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Copy the sample Wikipedia data to Hadoop:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 将样本维基百科数据复制到Hadoop：
- en: '[PRE2]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Submit the import request:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 提交导入请求：
- en: '[PRE3]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After this step, Druid will automatically import the data into the Druid cluster
    and the progress can be seen in the overlord console.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步之后，Druid将自动将数据导入Druid集群，进度可以在Overlord控制台中查看。
- en: 'The interface is accessible via `http://<overlord-ip>:8090/console.html`. The
    screen looks like this:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 该界面可通过`http://<overlord-ip>:8090/console.html`访问。屏幕看起来像这样：
- en: '![](img/8df1b469-ba70-4646-a81f-bfe2cce4267c.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8df1b469-ba70-4646-a81f-bfe2cce4267c.png)'
- en: Once the ingestion is complete, we will see the status of the job as SUCCESS.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦导入完成，我们将看到作业状态为成功。
- en: In case of `FAILED` imports, please make sure that the backend that is configured
    to store the Metadata for the Druid cluster is up and running.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生`FAILED`导入，请确保配置为存储Druid集群元数据的后端正在运行。
- en: Even though Druid works well with the OpenJDK installation, I have faced a problem
    with a few classes not being available at runtime. In order to overcome this,
    I have had to use Oracle Java version 1.8 to run all Druid applications.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Druid 与 OpenJDK 安装配合良好，但我遇到了一些类在运行时不可用的问题。为了克服这个问题，我不得不使用 Oracle Java 版本
    1.8 来运行所有 Druid 应用程序。
- en: Now we are ready to start using Druid for our visualization tasks.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好开始使用 Druid 来进行我们的可视化任务。
- en: MySQL database
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 数据库
- en: Apache Superset also allows us to read the data present in an RDBMS system such
    as MySQL. We will also create a sample database in this section, which we can
    use later with Superset to create visualizations.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Superset 还允许我们读取 RDBMS 系统中如 MySQL 存在的数据。我们将在本节中创建一个示例数据库，稍后我们可以使用 Superset
    来创建可视化。
- en: Sample database
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例数据库
- en: The employees database is a standard dataset that has a sample organization
    and their employee, salary, and department data. We will see how to set it up
    for our tasks.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 员工数据库是一个标准数据集，包含一个示例组织和他们的员工、薪资和部门数据。我们将看到如何为我们的任务设置它。
- en: This section assumes that the MySQL database is already configured and running.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 本节假设 MySQL 数据库已经配置并正在运行。
- en: Download the sample dataset
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例数据集
- en: 'Download the sample dataset from GitHub with the following command on any server
    that has access to the MySQL database:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何可以访问 MySQL 数据库的服务器上，使用以下命令从 GitHub 下载示例数据集：
- en: '[PRE4]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Copy the data to MySQL
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据复制到 MySQL
- en: 'In this step, we will import the contents of the data in the files to the MySQL
    database:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，我们将导入文件中的数据内容到 MySQL 数据库中：
- en: '[PRE5]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Verify integrity of the tables
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证表的一致性
- en: 'This is an important step, just to make sure that all of the data we have imported
    is correctly stored in the database. The summary of the integrity check is shown
    as the verification happens:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个重要的步骤，只是为了确保我们导入的所有数据都正确存储在数据库中。一致性检查的摘要如下所示，验证过程中会显示：
- en: '[PRE6]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now the data is correctly loaded in the MySQL database called **employees**.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在数据已经正确加载到名为 **employees** 的 MySQL 数据库中。
- en: Single Normalized Table
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单个标准化表
- en: In data warehouses, its a standard practice to have normalized tables when compared
    to many small related tables. Lets create a single normalized table that contains
    details of employees, salaries, departments
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据仓库中，与许多小相关表相比，拥有标准化表是一种标准做法。让我们创建一个包含员工、薪资和部门详情的单个标准化表。
- en: '[PRE7]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Once we have normalized data, we will see how to use the data from this table
    to generate rich visualisations.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们标准化了数据，我们将展示如何使用此表中的数据来生成丰富的可视化。
- en: Apache Superset
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache Superset
- en: Superset is a modern, enterprise-grade business intelligence application. The
    important feature of this application is that we can run all analyses directly
    from the browser. There is no need to install any special software for this.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Superset 是一个现代的企业级商业智能应用程序。这个应用程序的重要特性是我们可以直接从浏览器运行所有分析。为此不需要安装任何特殊软件。
- en: If you remember, we have already installed Superset along with Druid in the
    previous sections. Now we need to learn how to use Superset to build rich visualizations.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还记得，我们在前面的章节中已经安装了 Superset 和 Druid。现在我们需要学习如何使用 Superset 来构建丰富的可视化。
- en: Accessing the Superset application
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问 Superset 应用程序
- en: 'Open `http://<SERVER-IP>:9088/` in your web browser. If everything is running
    fine, we will see a login screen like this:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的网络浏览器中打开 `http://<SERVER-IP>:9088/`。如果一切运行正常，我们将看到一个登录界面，如下所示：
- en: '![](img/cb4e68e7-e99a-4f3d-956f-ac74a506fe67.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cb4e68e7-e99a-4f3d-956f-ac74a506fe67.png)'
- en: Enter `admin` as the username and the password as chosen during the installation.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 将用户名输入为 `admin`，密码为安装过程中选择的密码。
- en: Superset dashboards
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Superset 仪表板
- en: Dashboards are important pieces of the Superset application. They let us showcase
    the results of the analytics computation in a graphical form. Dashboards are created
    from Slices, which in turn are built from the various data sources configured
    in the Superset application.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表板是 Superset 应用程序中的重要组成部分。它们让我们以图形形式展示分析计算的成果。仪表板是由切片创建的，而切片又是从 Superset 应用程序中配置的各种数据源构建的。
- en: 'After successful login, there won’t be any dashboards created automatically
    for us. We will see a blank list of dashboards, like this:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 登录成功后，系统不会自动为我们创建任何仪表板。我们将看到一个空白的仪表板列表，如下所示：
- en: '![](img/1cfcf69f-da70-4dc1-a4ff-b74154a0cfdc.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1cfcf69f-da70-4dc1-a4ff-b74154a0cfdc.png)'
- en: 'In order to build dashboards, we first need to configure the data sources.
    So, let''s click on the Sources menu from the top navigation and click on Refresh
    Druid Metadata:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建仪表板，我们首先需要配置数据源。因此，让我们点击顶部导航中的“源”菜单，然后点击“刷新Druid元数据”：
- en: '![](img/2ca5bc92-fdeb-48ec-90cb-1e1b41350655.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2ca5bc92-fdeb-48ec-90cb-1e1b41350655.png)'
- en: After this step, we are taken to the data sources page and a new data source
    automatically appears here. Remember we uploaded this dataset to Druid before?
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤之后，我们将被带到数据源页面，并自动在此处出现一个新的数据源。记得我们之前已经将此数据集上传到Druid了吗？
- en: '![](img/186e1e1f-b1d8-4348-9b89-d65bc8e27621.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/186e1e1f-b1d8-4348-9b89-d65bc8e27621.png)'
- en: 'Now we can click on the data source name (in green), which will take us to
    the data source exploration page:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以点击数据源名称（绿色），这将带我们到数据源探索页面：
- en: '![](img/721f4f3e-09d5-4153-aa95-0e04aec73401.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/721f4f3e-09d5-4153-aa95-0e04aec73401.png)'
- en: As we can see, this page is divided into multiple sections.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，此页面被分为多个部分。
- en: '**Left Side UI**:'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**左侧UI**：'
- en: '**Datasource and Chart Type**: In this column, we can select the data source
    that we need to use and also the type of graphic we want to see on the right.'
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据源和图表类型**：在此列中，我们可以选择我们需要使用的数据源，以及我们希望在右侧看到的图形类型。'
- en: '**Time**: This is the column where we can restrict the data from the data source
    to a given time range. Beginners tend to make a mistake with this column as they
    won’t see any data on the right side. So, choose a start time value (a relative
    value like 100 years ago is recommended for better results).'
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间**：这是我们可以将数据源的数据限制在给定时间范围内的列。初学者往往会在这个列上犯错误，因为他们不会在右侧看到任何数据。所以，选择一个起始时间值（建议使用100年前这样的相对值以获得更好的结果）。'
- en: '**Group By**: This column is used to group data based on the dimensions of
    the input data.'
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按组分组**：此列用于根据输入数据的维度对数据进行分组。'
- en: '**Other Options**: There are other options that are available below Group By,
    which we will explore in the coming steps.'
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他选项**：在“按组分组”下方还有其他选项，我们将在接下来的步骤中探讨。'
- en: '**Right Side UI**:'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**右侧UI**：'
- en: This UI contains the results of the options that we have selected on the left-hand
    side.
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此UI包含我们在左侧选择的选项的结果。
- en: Understanding Wikipedia edits data
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解维基百科编辑数据
- en: 'Before we jump into building visualizations. Let''s take a closer look at the
    data we have ingested into Druid and what types of graphics we can render from
    that data:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始构建可视化之前。让我们更仔细地看看我们已导入Druid的数据以及我们可以从这些数据中渲染哪些类型的图形：
- en: '| **Metric/Dimension** | **Datatype** | **Description** |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| **度量/维度** | **数据类型** | **描述** |'
- en: '| `delta` | `LONG` | Change represented in numeric form |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| `delta` | `LONG` | 以数值形式表示的更改 |'
- en: '| `deleted` | `LONG` | Deleted data from the article in numeric form |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| `deleted` | `LONG` | 文章中删除的数据，以数值形式表示 |'
- en: '| `added` | `LONG` | Added data, measured in numeric form |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| `added` | `LONG` | 添加的数据，以数值形式表示 |'
- en: '| `isMinor` | `STRING` | Boolean, indicating whether this is a minor edit or
    not |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| `isMinor` | `STRING` | 布尔值，表示这是否是一个小编辑 |'
- en: '| `page` | `STRING` | The page where the change has happened in Wikipedia |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| `page` | `STRING` | 发生更改的维基百科页面 |'
- en: '| `isRobot` | `STRING` | Is the change done by a robot (not a human but some
    form of program) |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| `isRobot` | `STRING` | 更改是否由机器人（不是人类但某种形式的程序）进行的 |'
- en: '| `channel` | `STRING` | Wikipedia channel where the change has happened |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `channel` | `STRING` | 发生更改的维基百科频道 |'
- en: '| `regionName` | `STRING` | Geographical region name from which the change
    has been done |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `regionName` | `STRING` | 进行更改的地理区域名称 |'
- en: '| `cityName` | `STRING` | City name from which the change has been done |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| `cityName` | `STRING` | 进行更改的城市名称 |'
- en: '| `countryIsoCode` | `STRING` | ISO code of the country from which the change
    has been done |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| `countryIsoCode` | `STRING` | 进行更改的国家的ISO代码 |'
- en: '| `user` | `STRING` | Wikipedia user or IP address that has made the change
    |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| `user` | `STRING` | 进行更改的维基百科用户或IP地址 |'
- en: '| `countryName` | `STRING` | Name of the country from which the change has
    been made |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| `countryName` | `STRING` | 进行更改的国家名称 |'
- en: '| `isAnonymous` | `STRING` | Has the change been done by a anonymous user (not
    logged-in state)? |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| `isAnonymous` | `STRING` | 更改是否由匿名用户（未登录状态）进行的 |'
- en: '| `regionIsoCode` | `STRING` | ISO code of the geographical region from which
    the change has been done |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| `regionIsoCode` | `STRING` | 进行更改的地理区域的ISO代码 |'
- en: '| `metroCode` | `STRING` | This is similar to ZIP code in the United States
    (see [http://www.nlsinfo.org/usersvc/NLSY97/NLSY97Rnd9geocodeCodebookSupplement/gatt101.html](http://www.nlsinfo.org/usersvc/NLSY97/NLSY97Rnd9geocodeCodebookSupplement/gatt101.html))
    |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| `metroCode` | `STRING` | 这与美国邮政编码类似（见[http://www.nlsinfo.org/usersvc/NLSY97/NLSY97Rnd9geocodeCodebookSupplement/gatt101.html](http://www.nlsinfo.org/usersvc/NLSY97/NLSY97Rnd9geocodeCodebookSupplement/gatt101.html)）|'
- en: '| `namespace` | `STRING` | Wikipedia article/page namespace |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| `namespace` | `STRING` | 维基百科文章/页面命名空间 |'
- en: '| `comment` | `STRING` | Comment that was added for this change |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| `comment` | `STRING` | 为这次修改添加的注释 |'
- en: '| `isNew` | `STRING` | `true` if this is a new page (see [https://en.wikipedia.org/wiki/Wikipedia:Glossary#N](https://en.wikipedia.org/wiki/Wikipedia:Glossary#N))
    |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| `isNew` | `STRING` | 如果这是一个新页面则为`true`（见[https://en.wikipedia.org/wiki/Wikipedia:Glossary#N](https://en.wikipedia.org/wiki/Wikipedia:Glossary#N)）|'
- en: '| `isUnpatrolled` | `STRING` | `true` if the change is not a patrolled one
    (see [https://en.wikipedia.org/wiki/Wikipedia:New_pages_patrol](https://en.wikipedia.org/wiki/Wikipedia:New_pages_patrol))
    |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| `isUnpatrolled` | `STRING` | 如果修改不是受监控的，则为`true`（见[https://en.wikipedia.org/wiki/Wikipedia:New_pages_patrol](https://en.wikipedia.org/wiki/Wikipedia:New_pages_patrol)）|'
- en: 'So, we have listed all the attributes of the data. Let''s take a look at the
    sample one to get a better understanding of what we are talking about:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经列出了数据的所有属性。让我们看看样本之一，以便更好地理解我们在谈论什么：
- en: '[PRE8]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Once we have some understanding of the data dimensions, we need to see what
    types of questions we can answer from this data. These questions are the insights
    that are readily available to us. Later, we can represent these in the graphical
    form that best suits us.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对数据维度有了了解，我们需要看看我们可以从这些数据中回答哪些类型的问题。这些问题是我们可以轻松获得的见解。稍后，我们可以用最适合我们的图形形式来表示这些见解。
- en: So let's see some of the questions we can answer from this data.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们可以从这些数据中回答的一些问题。
- en: '**Uni-dimensional insights**:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**一维见解**：'
- en: Which are the cities from which changes were made?
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些城市进行了修改？
- en: Which pages were changed?
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些页面被修改了？
- en: Which are the countries from which changes were made?
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些国家进行了修改？
- en: How many new pages were created?
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了多少个新页面？
- en: '**Counts along the dimension**:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '**维度上的计数**：'
- en: How many changes were made from each city?
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从每个城市进行了多少次修改？
- en: Which are the top cities from which changes were made?
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些是进行修改的前十大城市？
- en: Which are the top users who have contributed to the changes?
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些是贡献修改的前十大用户？
- en: What are the namespaces that were changed frequently?
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些命名空间被频繁修改？
- en: '**Multi-dimensional insights**:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '**多维见解**：'
- en: How many changes were made between 9.00 am to 10.00 am across all countries?
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在所有国家，上午9:00到10:00之间有多少次修改？
- en: What are the wall clock hours when the edits are made by robots?
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人在何时进行编辑？
- en: Which country has the most origin of changes that are targeted by robots and
    at what times?
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪个国家有最多的机器人目标修改来源，以及何时？
- en: Looks interesting, right? Why don't we try to use Apache Superset to create
    a dashboard with some of these insights?
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来很有趣，对吧？我们为什么不尝试使用Apache Superset创建一个包含这些见解的仪表板呢？
- en: 'In order to do this we need to follow this simple workflow in the Superset
    application:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们需要在Superset应用程序中遵循这个简单的流程：
- en: 'Data sources:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据源：
- en: Define new data sources from supported databases
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从支持的数据库中定义新的数据源
- en: Refresh the Apache Druid data sources
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 刷新Apache Druid数据源
- en: Create Slices
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建切片
- en: Use the Slices to make a dashboard
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用切片制作仪表板
- en: If we recollect, we have already done *Step 1* in previous sections. So, we
    can go right away to the second and third steps.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回想一下，我们已经在之前的章节中完成了*步骤1*。因此，我们可以直接进行第二步和第三步。
- en: Create Superset Slices using Wikipedia data
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用维基百科数据创建Superset切片
- en: Let's see what types of graphics we can generate using the Slices feature in
    the Superset application.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们可以使用Superset应用程序中的切片功能生成哪些类型的图形。
- en: Unique users count
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 唯一用户计数
- en: In this Slice, we see how to generate a graphic to find unique users who have
    contributed to the edits in the dataset.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个切片中，我们看到如何生成图形以找到对数据集中的编辑做出贡献的唯一用户。
- en: 'First, we need to go to the Slices page from the top navigation. After this,
    the screen looks like this:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要从顶部导航转到切片页面。之后，屏幕看起来像这样：
- en: '![](img/178cfd0e-a1c9-4260-80b8-b8e5e6b76a58.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/178cfd0e-a1c9-4260-80b8-b8e5e6b76a58.png)'
- en: 'From this page, click on the plus icon (+) to add a new slice:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个页面，点击加号图标（+）添加一个新的切片：
- en: '![](img/35366e2f-997f-4366-84b8-3755677d28fc.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35366e2f-997f-4366-84b8-3755677d28fc.png)'
- en: 'After this, we see a list of data sources that are configured in the system.
    We have to click on the data source name:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们看到系统配置的数据源列表。我们必须点击数据源名称：
- en: '![](img/9667e719-7831-48fc-9d87-4667320f76de.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9667e719-7831-48fc-9d87-4667320f76de.png)'
- en: After we click on wikiticker, we are taken to the visualization page, where
    we define the dimensions that we want to render as a graphic.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 点击wikiticker后，我们将被带到可视化页面，在那里我们定义想要渲染为图形的维度。
- en: 'For the current use case, let''s choose the following options from the UI:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 对于当前的使用场景，让我们从UI中选择以下选项：
- en: '| **UI Location** | **Graphic** | **Explanation** |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **说明** |'
- en: '| Sidebar | ![](img/dfd162c5-4692-4ee4-865a-b17419505a33.png) | Choose the
    **Datasource** as [druid-ambari].[wikiticker] and the graphic type as Big Number*. *In
    the Time section, choose the value for since as 5 years ago and leave the rest
    of the values to their defaults. In the Metric section. Choose COUNT(DISTINCT
    user_unique) from the autocomplete. In the Subheader Section, add Unique User
    Count, which is displayed on the screen. After this, click on the Query button
    at the top. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![图片](img/dfd162c5-4692-4ee4-865a-b17419505a33.png) | 将**数据源**选择为[druid-ambari].[wikiticker]，并将图形类型选择为“Big
    Number*”。在时间部分，选择“since”为5年前，并将其余值保留为默认值。在度量部分，从自动完成中选择COUNT(DISTINCT user_unique)。在子标题部分，添加“Unique
    User Count”，这是在屏幕上显示的。之后，点击顶部的查询按钮。|'
- en: '| Graphic Output | ![](img/800cad03-8066-4307-9252-a685b878591e.png) | We see
    the result of the query in this graphic. |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| 图形输出 | ![图片](img/800cad03-8066-4307-9252-a685b878591e.png) | 我们在这个图形中看到查询的结果。|'
- en: '| Save Slice | ![](img/798a6ed3-139e-4199-9f06-951316752e77.png) | Clicking
    on the Save As button on top will show a pop-up window like this, where we need
    to add the corresponding values. Save the slice as `Unique Users` and add it to
    a new dashboard with the name `My Dashboard 1`. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| 保存切片 | ![图片](img/798a6ed3-139e-4199-9f06-951316752e77.png) | 点击顶部的“另存为”按钮将显示一个弹出窗口，如上图所示，我们需要添加相应的值。将切片保存为“Unique
    Users”并将其添加到名为“我的仪表板1”的新仪表板中。|'
- en: Sounds so simple, right? Let's not hurry to see the dashboard yet. Let's create
    some more analytics from the data in the coming sections.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很简单，对吧？让我们不要急于查看仪表板。让我们在接下来的几节中创建更多来自数据的分析。
- en: Word Cloud for top US regions
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 美国主要地区的词云
- en: In this section, we will learn how to build a word cloud for the top US regions
    that have contributed to the Wikipedia edits in the datasource we have in Druid.
    We can continue editing the same Slice from the previous section or go to a blank
    Slice, as mentioned in the previous section.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何为在Druid数据源中为Wikipedia编辑做出贡献的美国主要地区构建词云。我们可以继续编辑上一节中的相同切片，或者像上一节中提到的，进入一个空白切片。
- en: 'Let''s concentrate on the values that we need to select for generating a word
    cloud:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们集中选择生成词云所需的价值：
- en: '| **UI Location** | **Graphic** | **Explanation** |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **说明** |'
- en: '| Sidebar | ![](img/0ad3f384-ff61-47a6-aa8e-db2a4eae0ef6.png) | Choose the
    Datasource as [druid-ambari].[wikiticker] and the graphic type as Word Cloud. In
    the Time section, choose the value for Since as 5 years ago and leave the rest
    of the values to their defaults. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![图片](img/0ad3f384-ff61-47a6-aa8e-db2a4eae0ef6.png) | 将数据源选择为[druid-ambari].[wikiticker]，并将图形类型选择为“Word
    Cloud”。在时间部分，选择“Since”为5年前，并将其余值保留为默认值。|'
- en: '|  | ![](img/4c1ceee1-5973-450a-972b-4988d1920fc8.png) | In the Series section.
    Choose the regionName from the dropdown. In Metric, choose COUNT(*), which is
    the total edit count. |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '|  | ![图片](img/4c1ceee1-5973-450a-972b-4988d1920fc8.png) | 在系列部分，从下拉菜单中选择regionName。在度量中，选择COUNT(*)，这是总编辑数。|'
- en: '|  | ![](img/c8882e1f-fd08-4647-b59d-91b4b4463747.png) | In the Filters section,
    choose countryIsoCode; it should be in US. Add another filter to select only valid
    regions (skip null codes). Add the values as shown here in the graphic. |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '|  | ![图片](img/c8882e1f-fd08-4647-b59d-91b4b4463747.png) | 在过滤器部分，选择countryIsoCode；它应该是US。添加另一个过滤器以仅选择有效区域（跳过null代码）。将值添加到图形中所示的位置。|'
- en: '| Graphic Output | ![](img/92a36d97-f891-40f6-b609-7846c7ede83b.png) | After
    clicking on Query, we see this beautiful word cloud. |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| 图形输出 | ![图片](img/92a36d97-f891-40f6-b609-7846c7ede83b.png) | 点击查询后，我们看到这个漂亮的词云。|'
- en: '| Save Slice | ![](img/690e8348-71ec-4532-9bf3-586060cd9bbf.png) | Clicking
    on the Save As button at the top will show a pop-up window like this, where we
    need to add the corresponding values. Save the Slice as `Word Cloud - Top US Regions` and
    add it to a new dashboard named `My Dashboard 1`*.* |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| 保存切片 | ![](img/690e8348-71ec-4532-9bf3-586060cd9bbf.png) | 点击顶部的“另存为”按钮将显示一个类似这样的弹出窗口，其中我们需要添加相应的值。将切片保存为“Word
    Cloud - Top US Regions”并将其添加到名为“我的仪表板1”的新仪表板中*。* |'
- en: The significance of the word cloud is that we can see the top words according
    to their relative sizes. This type of visualization is helpful when there are
    fewer words for which we want to see the relative significance.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 词云的重要性在于我们可以根据它们的相对大小看到顶级单词。这种类型的可视化在想要看到相对重要性的单词较少时非常有帮助。
- en: Let's try to generate another graphic from the data.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试从数据中生成另一个图形。
- en: Sunburst chart – top 10 cities
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 太阳花图 – 前10个城市
- en: In this section, we will learn about a different type of chart that we have
    not seen so far in this chapter. But first, let's put forward the use case.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解本章中尚未见过的另一种类型的图表。但首先，让我们提出用例。
- en: 'We want to find the unique users per channel, city name, and namespace at all
    three levels; that is, the graphic should be able to show us the:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要找到每个渠道、城市名称和namespaces的所有三个级别的唯一用户；也就是说，图形应该能够显示给我们：
- en: Unique users per channel
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个渠道的唯一用户
- en: Unique users per channel/city name
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个渠道/城市名称的唯一用户
- en: Unique users per channel/city name/namespace
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个渠道/城市名称/namespace的唯一用户
- en: In order to show this kind of hierarchical data, we can use a sunburst chart.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 为了显示这种层次结构数据，我们可以使用太阳花图。
- en: 'Let''s check out what type of values we need to select to render this type
    of chart:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下我们需要选择什么类型的值来渲染这种图表：
- en: '| **UI Location** | **Graphic** | **Explanation** |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **说明** |'
- en: '| Sidebar | ![](img/0329cb06-5945-445b-8893-b5e9f2f69255.png) | Choose the
    Datasource as [druid-ambari].[wikiticker] and the graphic type as Sunburst. In
    the Time section, choose the value for Since as 5 years ago and leave the rest
    of the values to their defaults. |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![](img/0329cb06-5945-445b-8893-b5e9f2f69255.png) | 将数据源选择为[druid-ambari].[wikiticker]，图形类型选择为Sunburst。在时间部分，选择“自5年前”的值，并将其余值保留为默认值。|'
- en: '|  | ![](img/c4970db4-b189-470b-9e03-fa0488452a60.png) | In the Hierarchy section,
    choose the `channel`, `cityName`, and `namespace` from the dropdown. In the Primary
    Metric and Secondary Metric, choose COUNT(DISTINCT user_unique), which is the
    total user count. |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/c4970db4-b189-470b-9e03-fa0488452a60.png) | 在层次结构部分，从下拉菜单中选择`channel`、`cityName`和`namespace`。在主要指标和次要指标中，选择COUNT(DISTINCT
    user_unique)，这是总用户数。|'
- en: '|  | ![](img/11a6a4bc-0a09-4e22-b301-2d32bab56027.png) | In the **Filters**
    section, choose cityName and add the not null condition using regex matching |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/11a6a4bc-0a09-4e22-b301-2d32bab56027.png) | 在**过滤器**部分，选择`cityName`并使用正则表达式添加非空条件
    |'
- en: '|  | ![](img/e6b4b21e-6e88-43fa-a7b8-d49c731e309e.png) | Clicking on the Save
    As button at the top will show a pop-up window like this. We need to add the corresponding
    values here. Save the Slice as `Sunburst - Top 10 Cities` and add it to a new
    dashboard named `My Dashboard 1`*.* |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/e6b4b21e-6e88-43fa-a7b8-d49c731e309e.png) | 点击顶部的“另存为”按钮将显示一个类似这样的弹出窗口。我们需要在这里添加相应的值。将切片保存为“Sunburst
    - Top 10 Cities”并将其添加到名为“我的仪表板1”的新仪表板中*。* |'
- en: '| Graphic Output | ![](img/fa393586-c43c-442b-8b17-0a69a61a1835.png) | After
    clicking on Query, we see this beautiful graphic. |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| 图形输出 | ![](img/fa393586-c43c-442b-8b17-0a69a61a1835.png) | 点击查询后，我们看到这个漂亮的图形。|'
- en: 'As we can see there are three concentric rings in the graphic:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，图形中有三个同心环：
- en: The innermost ring is the `channel` dimension
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最内层环是`channel`维度
- en: The middle ring shows the `cityName` dimension
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中间环显示`cityName`维度
- en: The outermost ring is the `namespace` dimension
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最外层环是`namespace`维度
- en: When we hover over the innermost ring, we can see how it spreads out into the
    outermost circles. The same thing happens with the other rings as well.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们悬停在最内层环上时，我们可以看到它如何向外扩展到最外层圆圈。其他环也会发生同样的事情。
- en: This type of graphic is very helpful when we want to do funnel analysis on our
    data. Let's take a look at another type of analysis in the next section.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的图形在我们想要对我们的数据进行漏斗分析时非常有帮助。让我们在下一节中看看另一种分析类型。
- en: Top 50 channels and namespaces via directed force layout
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过有向力布局显示前50个渠道和namespaces
- en: '**Directed force layout** (**DFL**) is a network layout with points that are
    interconnected to each other. Since it''s a force layout, we can see the points
    moving on the screen as `d3.js` applies the physics engine.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '**定向力布局**（**DFL**）是一种点与点相互连接的网络布局。由于它是一种力布局，我们可以看到点在屏幕上移动，因为`d3.js`应用了物理引擎。'
- en: In this network graph, we want to understand the connectivity between the namespace
    and channel over the unique users count metric. Since this is a network graph,
    we will see the nodes getting repeated in different paths.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个网络图中，我们想了解在唯一用户度量指标下，命名空间和频道之间的连接性。由于这是一个网络图，我们将看到节点在不同的路径中重复。
- en: 'Let''s see how we can arrive at this graph:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们如何到达这个图：
- en: '| **UI Location** | **Graphic** | **Explanation** |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **说明** |'
- en: '| Sidebar | ![](img/d0bacbf9-fbe8-4b9a-868d-afb3fead3ed0.png) | Choose the
    Datasource as [druid-ambari].[wikiticker] and the Graphic type as Directed Force
    Layout*. *In the Time section, choose the value for since as 5 years ago and leave
    the rest of the values to their defaults. |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![](img/d0bacbf9-fbe8-4b9a-868d-afb3fead3ed0.png) | 选择数据源为[druid-ambari].[wikiticker]，图形类型为定向力布局*. *在时间部分，选择since的值为5年前，并将其余值保留为默认值。
    |'
- en: '|  | ![](img/e5b3cdcf-eebf-45d9-a9b0-89d3ed63f1e8.png) | In the Source / Target
    section, choose the `channel` and `namespace` from the dropdown. In the Metric
    section, choose COUNT(DISTINCT user_unique) which is the total user count. We
    keep the Row limit at 50 so that we will see only the top 50*.* |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/e5b3cdcf-eebf-45d9-a9b0-89d3ed63f1e8.png) | 在源/目标部分，从下拉菜单中选择`channel`和`namespace`。在度量部分，选择COUNT(DISTINCT
    user_unique)，这是总用户数。我们将行限制设置为50，这样我们只会看到前50项。*.* |'
- en: '|  | ![](img/540474de-0c35-4f68-b0f7-3004dfc034c1.png) | Clicking on the Save
    As button at the top will show a pop up window like this, where we need to add
    the corresponding values. Save the Slice as `DFL - Top 50 Channels & Namespaces`.
    Add it to a new dashboard with the name `My Dashboard 1`. |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/540474de-0c35-4f68-b0f7-3004dfc034c1.png) | 点击顶部的“另存为”按钮将显示一个类似这样的弹出窗口，其中我们需要添加相应的值。将切片保存为`DFL
    - Top 50 Channels & Namespaces`。将其添加到名为`My Dashboard 1`的新仪表板中。 |'
- en: '| Graphic Output | ![](img/a2c1210d-ffd7-48ac-896f-a7f1ed5dc218.png) | After
    clicking on Query, we see this beautiful graphic. |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| 图形输出 | ![](img/a2c1210d-ffd7-48ac-896f-a7f1ed5dc218.png) | 点击查询后，我们看到这个漂亮的图形。
    |'
- en: Feel free to drag the nodes in the graphic to learn more about how they are
    interconnected to each other. The size of the nodes indicates the unique user
    count and its breakdown (similar to a sunburst chart).
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 随意拖动图形中的节点，以了解更多它们之间是如何相互连接的。节点的大小表示唯一用户数及其分解（类似于太阳风图）。
- en: Let's spend some time learning another visualization and business use case in
    the next section.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在下一节花些时间学习另一个可视化和业务用例。
- en: Top 25 countries/channels distribution
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前25个国家/频道分布
- en: 'Now we will learn the Sankey chart, a waterfall-like way of representing of
    breakdown and interconnectivity between data. In this case, we want to find out
    how the channelName and countryName dimensions are related when it comes to the
    unique users metric:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将学习桑基图，这是一种类似于瀑布的方式，用于表示数据之间的分解和互联性。在这种情况下，我们想找出当涉及到唯一用户度量时，channelName和countryName维度是如何相关的：
- en: '| **UI Location** | **Graphic** | **Explanation** |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **说明** |'
- en: '| Sidebar | ![](img/b7bc7cbf-4167-49e8-b6e4-758a9813b6e1.png) | Choose the
    **Datasource** as [druid-ambari].[wikiticker] and the **Graphic Type** as Sankey.In
    the **Time** section, choose the value for Since as 5 years ago and leave the
    rest as default. |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![](img/b7bc7cbf-4167-49e8-b6e4-758a9813b6e1.png) | 选择**数据源**为[druid-ambari].[wikiticker]，**图形类型**为桑基图。在**时间**部分，选择Since的值为5年前，并将其余值保留为默认值。
    |'
- en: '|  | ![](img/c11d0b06-6547-4392-b8d3-a1aa54e98eb0.png) | In the **Source /
    Target** section, choose `channel` and `countryName` from the drop-down. In the
    Metric, choose COUNT(*), which is the total edit count. Keep the row limit at
    25; so we will see only the top 25 items*.* |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/c11d0b06-6547-4392-b8d3-a1aa54e98eb0.png) | 在**源/目标**部分，从下拉菜单中选择`channel`和`countryName`。在度量中，选择COUNT(*)，这是总编辑数。将行限制保持在25；这样我们只会看到前25项。*.*
    |'
- en: '|  | ![](img/1eaf35b3-357d-4876-a6b9-cb61601ac660.png) | In the **Filters**
    section, choose countryName and enable the regex filter so as to choose only those
    records that have a valid country name. |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/1eaf35b3-357d-4876-a6b9-cb61601ac660.png) | 在**过滤器**部分，选择countryName并启用正则表达式过滤器，以便只选择具有有效国家名称的记录。
    |'
- en: '|  | ![](img/42a3d617-7a02-4545-8ef9-674f23fce62b.png) | Clicking on the **Save
    As** button at the top will show a pop-up window. We need to add the corresponding
    values here. Save the Slice as `Top 25 Countries/Channels Distribution` and add
    it to a new dashboard with the name `My Dashboard 1`. |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '|  | ![图片](img/42a3d617-7a02-4545-8ef9-674f23fce62b.png) | 点击顶部的“另存为”按钮将显示一个弹出窗口。我们需要在这里添加相应的值。将切片保存为“前25个国家/频道分布”并将其添加到名为“我的仪表板1”的新仪表板中。
    |'
- en: '| Graphic Output | ![](img/0efcc190-641e-49dc-946c-0bddf1cba3fe.png) | After
    clicking on Query, we see this beautiful graphic. |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| 图形输出 | ![图片](img/0efcc190-641e-49dc-946c-0bddf1cba3fe.png) | 点击查询后，我们看到这个漂亮的图形。
    |'
- en: This completes the list of all the analytics that we can generate so far. Now
    in the next section, we will see how to use this in the dashboard (which was our
    original goal anyway).
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了到目前为止我们可以生成的所有分析列表。现在在下一节中，我们将看到如何在仪表板中使用这些信息（这本来就是我们的目标）。
- en: Creating wikipedia edits dashboard from Slices
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从切片创建维基百科编辑仪表板
- en: So far we have seen how to create slices in the Apache Superset application
    for the wikipedia edits data, that is stored in the Apache Druid database. Its
    now time for us to see how to create a dashboard so that we can share it with
    the Business Teams or any other teams for which we want to share the insights.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到了如何在Apache Superset应用程序中创建存储在Apache Druid数据库中的维基百科编辑数据的切片。现在是时候看看如何创建一个仪表板，这样我们就可以与业务团队或任何其他我们希望分享洞察力的团队共享它。
- en: In this process, the first step would be to click on the Dashboard menu on the
    top navigation bar. Which will take us to Add New Dashboard Page, where we need
    to fill the following details.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，第一步是点击顶部导航栏上的仪表板菜单。这将带我们到“添加新仪表板”页面，在那里我们需要填写以下详细信息。
- en: '| **Element** | **Description** | **Value** |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** | **值** |'
- en: '| Title | This is the name of the dashboard that we want to create | My Dashboard
    1 |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| 标题 | 我们想要创建的仪表板名称 | 我的仪表板1 |'
- en: '| Slug | Short alias for the dashboard | dash1 |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| 别名 | 仪表板的简短别名 | dash1 |'
- en: '| Slices | List of Slices that we want to add to the dashboard. |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| 切片 | 我们想要添加到仪表板中的切片列表。 |'
- en: Sunburst - Top 10 Cities
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 太阳花图 - 前10大城市
- en: DFL - Top 50 Channels & Namespaces
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DFL - 前50个频道与命名空间
- en: Top 25 Countries / Channels Contribution
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前25个国家/频道贡献
- en: Word Cloud - Top US Regions
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 词云 - 前25个美国地区
- en: Unique Users
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 独立用户
- en: '|'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Other Fields | We can leave the other fields as empty as they are not mandatory
    to create the dashboard |  |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| 其他字段 | 我们可以留其他字段为空，因为它们不是创建仪表板的必需项 |  |'
- en: 'Here is the graphic for this page:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本页的图形：
- en: '![](img/91059ba0-71e3-47ab-adf9-6752f0d7b4a4.png)'
  id: totrans-320
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/91059ba0-71e3-47ab-adf9-6752f0d7b4a4.png)'
- en: Click on Save button at the bottom of the screen once the changes look good.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 当屏幕底部的更改看起来不错时，点击保存按钮。
- en: 'This will take us to the next step where we can see that the dashboard is successfully
    created:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带我们到下一步，我们可以看到仪表板已成功创建：
- en: '![](img/33f7bb5a-fc17-4a85-977e-bc84f3c69250.png)'
  id: totrans-323
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/33f7bb5a-fc17-4a85-977e-bc84f3c69250.png)'
- en: 'We can see the My Dashboard 1 in the list of dashboards. In order to access
    this dashboard click on it, Where we are taken to the dashboard screen:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在仪表板列表中看到“我的仪表板1”。为了访问此仪表板，点击它，我们将被带到仪表板屏幕：
- en: '![](img/4f258abd-6893-4f4d-9e83-bfa0e4cab0eb.png)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4f258abd-6893-4f4d-9e83-bfa0e4cab0eb.png)'
- en: As we can see we have a very powerful way of representing all the raw data.
    This will definitely have an impact on the end users in making sure that the message
    is conveyed.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们有一种非常强大的方式来表示所有原始数据。这肯定会对最终用户产生影响，确保信息得到传达。
- en: So far we have learned how to create slices and Dashboards from the data that
    is stored in the Apache Druid Columnar Database. In the next section we will see
    how to connect to RDBMS and generate slices and dashboards from that data.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经学习了如何从存储在Apache Druid列式数据库中的数据创建切片和仪表板。在下一节中，我们将看到如何连接到RDBMS并从该数据生成切片和仪表板。
- en: Apache Superset with RDBMS
  id: totrans-328
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache Superset与RDBMS
- en: Apache Superset is built using Python programming language and supports many
    relational databases as it uses SQLAlchemy as the database driver. The installation
    of these drivers are out of scope in this section. But, it should be very easy
    to install those. Most of the time the Operating system vendors package them for
    us. So, we need not worry about the manual installation of these.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Superset使用Python编程语言构建，并支持许多关系型数据库，因为它使用SQLAlchemy作为数据库驱动程序。这些驱动程序的安装超出了本节的范围。但是，安装它们应该非常简单。大多数情况下，操作系统供应商为我们打包它们。因此，我们不需要担心这些驱动程序的手动安装。
- en: Supported databases
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持的数据库
- en: 'Here are some of the database that are supported by Apache Superset:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 这里列出了 Apache Superset 支持的一些数据库：
- en: '| **Database Name** | **Python Package Name** | **Driver URI Prefix** | **Details**
    |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| **数据库名称** | **Python 包名称** | **驱动程序 URI 前缀** | **详细信息** |'
- en: '| MySQL | `mysqlclient` | `mysql://` | Oracle MySQL Database |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| MySQL | `mysqlclient` | `mysql://` | Oracle MySQL 数据库 |'
- en: '| PostgreSQL | `psycopg2` | `postgresql+psycopg2://` | The worlds most advanced
    opensource database |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| PostgreSQL | `psycopg2` | `postgresql+psycopg2://` | 世界上最先进的开源数据库 |'
- en: '| Presto | `pyhive` | `presto://` | Opensource distributed query Engine |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| Presto | `pyhive` | `presto://` | 开源分布式查询引擎 |'
- en: '| Oracle | `cx_Oracle` | `oracle://` | Multi-model Database management system
    created by Oracle Corporation. |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| Oracle | `cx_Oracle` | `oracle://` | Oracle 公司创建的多模型数据库管理系统 |'
- en: '| Sqlite |  | `sqlite://` | Fast, Scalable Embedded Database Library |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| Sqlite |  | `sqlite://` | 快速、可扩展的嵌入式数据库库 |'
- en: '| Redshift | `sqlalchemy-redshift` | `postgresql+psycopg2://` | Amazon Redshift
    is Columnar database built on PostgreSQL |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| Redshift | `sqlalchemy-redshift` | `postgresql+psycopg2://` | 基于 PostgreSQL
    构建的 Amazon Redshift 列式数据库 |'
- en: '| MSSQL | `pymssql` | `mssql://` | Microsoft SQL Server |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| MSSQL | `pymssql` | `mssql://` | Microsoft SQL Server |'
- en: '| Impala | `impyla` | `impala://` | Apache Impala is Massively Parallel Processing
    SQL Engine that runs on Hadoop |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| Impala | `impyla` | `impala://` | 在 Hadoop 上运行的 Apache Impala 大规模并行处理 SQL
    引擎 |'
- en: '| SparkSQL | `pyhive` | `jdbc+hive://` | Apache Spark Module for writing SQL
    in Spark Programs. |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| SparkSQL | `pyhive` | `jdbc+hive://` | Apache Spark 中的 SQL 编写模块 |'
- en: '| Greenplum | `psycopg2` | `postgresql+psycopg2://` | Greenplum is advanced
    , fully featured opensource data platform |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| Greenplum | `psycopg2` | `postgresql+psycopg2://` | 高级、功能齐全的开源数据平台 Greenplum
    |'
- en: '| Athena | `PyAthenaJDBC` | `awsathena+jdbc://` | Amazon Athena is Serverless
    Interactive Query Service |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| Athena | `PyAthenaJDBC` | `awsathena+jdbc://` | Amazon Athena 是无服务器交互式查询服务
    |'
- en: '| Vertica | `sqlalchemy-vertica-python` | `vertica+vertica_python://` | Vertica
    is Bigdata analytics software |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| Vertica | `sqlalchemy-vertica-python` | `vertica+vertica_python://` | Vertica
    是大数据分析软件 |'
- en: '| ClickHouse | `sqlalchemy-clickhouse` | `clickhouse://` | Opensource distributed,
    columnar datastore |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| ClickHouse | `sqlalchemy-clickhouse` | `clickhouse://` | 开源分布式、列式数据存储 |'
- en: Portions of the above table is extracted from the official documentation of
    Apache Superset ([https://superset.incubator.apache.org/installation.html#database-dependencies](https://superset.incubator.apache.org/installation.html#database-dependencies))
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 上表的部分内容摘自 Apache Superset 的官方文档（[https://superset.incubator.apache.org/installation.html#database-dependencies](https://superset.incubator.apache.org/installation.html#database-dependencies)）
- en: Understanding employee database
  id: totrans-347
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解员工数据库
- en: If you remember, in the previous sections we have imported a sample database
    called Employees and loaded it into the MySQL Database. We will dig further into
    this sample datastore so that we will learn what types of analytics we can generate
    from this.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还记得，在前面的章节中，我们已经导入了一个名为 Employees 的示例数据库，并将其加载到 MySQL 数据库中。我们将进一步深入研究这个示例数据存储，以便了解我们可以从这个数据存储中生成哪些类型的分析。
- en: Employees table
  id: totrans-349
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 员工表
- en: The `employees` table contains details of Employees (randomly generated data)
    with the following properties
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '`employees` 表包含员工的详细信息（随机生成数据），以下属性如下：'
- en: '| **Column** | **Datatype** | **Description** |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| **列** | **数据类型** | **描述** |'
- en: '| `emp_no` | `INTEGER` | Employee Number |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| `emp_no` | `INTEGER` | 员工编号 |'
- en: '| `birth_date` | `DATE` | Employee Date Of Birth |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| `birth_date` | `DATE` | 员工出生日期 |'
- en: '| `first_name` | `STRING` | First Name of Employee |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| `first_name` | `STRING` | 员工名字 |'
- en: '| `last_name` | `STRING` | Last Name of Employee |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| `last_name` | `STRING` | 员工姓氏 |'
- en: '| `gender` | `STRING` | Gender of Employee, M if Male, F if Female |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| `gender` | `STRING` | 员工性别，男性为 M，女性为 F |'
- en: '| `hire_date` | `STRING` | Latest Joining date of Employee |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| `hire_date` | `STRING` | 员工最新加入日期 |'
- en: Departments table
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部门表
- en: 'The `departments` table consists of basic details of every department in the
    organisation. This is further understood with this table:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '`departments` 表包含组织中每个部门的基本详细信息。以下表格进一步解释了这一点：'
- en: '| **Table Column** | **Datatype** | **Description** |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| **表列** | **数据类型** | **描述** |'
- en: '| `dept_no` | `STRING` | Department Number |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| `dept_no` | `STRING` | 部门编号 |'
- en: '| `dept_name` | `STRING` | Department Name |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| `dept_name` | `STRING` | 部门名称 |'
- en: Department manager table
  id: totrans-363
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部门经理表
- en: 'The `dept_manager` table has records about Employee acting as manager for a
    given department. More details are in this table:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '`dept_manager` 表记录了担任特定部门经理的员工记录。更多详细信息请参阅此表：'
- en: '| **Table Column** | **Dataype** | **Description** |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| **表列** | **数据类型** | **描述** |'
- en: '| `emp_no` | `INT` | Employee ID who is acting as manager for this department
    |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| `emp_no` | `INT` | 担任此部门经理的员工ID |'
- en: '| `dept_no` | `STRING` | Department ID |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| `dept_no` | `STRING` | 部门ID |'
- en: '| `from_date` | `DATE` | Starting date from which Employee is acting as Manager
    for this department. |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| `from_date` | `DATE` | 员工担任该部门经理的起始日期 |'
- en: '| `to_date` | `DATE` | Ending date till where the Employee has acted as Manager
    for this department. |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| `to_date` | `DATE` | 员工担任该部门经理的结束日期 |'
- en: Department Employees Table
  id: totrans-370
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部门员工表
- en: The `dept_emp` table consists of all the records which show how long each employee
    belonged to a department.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '`dept_emp` 表包含所有记录，显示每位员工属于一个部门的时间长度。'
- en: '| **Table Column** | **Datatype** | **Description** |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '| **表列** | **数据类型** | **描述** |'
- en: '| `emp_no` | `INT` | Employee ID |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
  zh: '| `emp_no` | `INT` | 员工ID |'
- en: '| `dept_no` | `STRING` | Department ID |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| `dept_no` | `STRING` | 部门ID |'
- en: '| `from_date` | `DATE` | Starting date from which employee belongs to this
    department |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| `from_date` | `DATE` | 员工属于该部门的起始日期 |'
- en: '| `to_date` | `DATE` | Last date of employee in this department |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
  zh: '| `to_date` | `DATE` | 员工在该部门的最后日期 |'
- en: Titles table
  id: totrans-377
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 职位表
- en: 'The **titles** table consists of all the roles of employees from a given date
    to end date. More details are shown as follows:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '`titles` 表包含从给定日期到结束日期的所有员工角色。更多详细信息如下所示：'
- en: '| **Table Column** | **Datatype** | **Description** |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| **表列** | **数据类型** | **描述** |'
- en: '| `emp_no` | `INT` | Employee Id |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| `emp_no` | `INT` | 员工ID |'
- en: '| `title` | `STRING` | Designation of the employee |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| `title` | `STRING` | 员工的职位 |'
- en: '| `from_date` | `DATE` | Starting date from which employee has assumed this
    role |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
  zh: '| `from_date` | `DATE` | 员工担任此角色的起始日期 |'
- en: '| `to_date` | `DATE` | Last date where the employee has performed this role
    |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| `to_date` | `DATE` | 员工扮演此角色的最后日期 |'
- en: Salaries table
  id: totrans-384
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 薪资表
- en: 'The `salaries` table consists of salary history of a given employee. More details
    are explained in the following table:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '`salaries` 表包含特定员工的薪资历史。更多详细信息如下表所示：'
- en: '| **Table Column** | **Datatype** | **Description** |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| **表列** | **数据类型** | **描述** |'
- en: '| `emp_no` | `INT` | Employee Id |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| `emp_no` | `INT` | 员工ID |'
- en: '| `salary` | `INT` | Salary of Employee |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| `salary` | `INT` | 员工薪资 |'
- en: '| `from_date` | `DATE` | Starting day for which salary is calculated |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| `from_date` | `DATE` | 计算薪资的起始日 |'
- en: '| `to_date` | `DATE` | Last day for which salary is calculated. |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| `to_date` | `DATE` | 计算薪资的最后日期 |'
- en: Normalized employees table
  id: totrans-391
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标准化员工表
- en: 'The `employee_norm` table consists of data from employees, salaries, departments,
    `dept_emp` and titles table. Lets look at this table in detail:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '`employee_norm` 表包含来自员工、薪资、部门、`dept_emp` 和职位表的资料。让我们详细查看此表：'
- en: '| **Table Column** | **Datatype** | **Description** |'
  id: totrans-393
  prefs: []
  type: TYPE_TB
  zh: '| **表列** | **数据类型** | **描述** |'
- en: '| `emp_no` | `INT` | Employee ID |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '| `emp_no` | `INT` | 员工ID |'
- en: '| `birth_date` | `DATE` | Date of Birth of Employee |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| `birth_date` | `DATE` | 员工出生日期 |'
- en: '| `full_name` | `STRING` | Employee Full Name |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| `full_name` | `STRING` | 员工全名 |'
- en: '| `gender` | `STRING` | Gender of Employee |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '| `gender` | `STRING` | 员工性别 |'
- en: '| `hire_date` | `DATE` | Joining date of Employee |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| `hire_date` | `DATE` | 员工加入日期 |'
- en: '| `salary` | `INT` | Salary of Employee for the period |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| `salary` | `INT` | 员工在该期间的薪资 |'
- en: '| `from_date` | `DATE` | Salary period start |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '| `from_date` | `DATE` | 薪资周期开始 |'
- en: '| `to_date` | `DATE` | Salary period end |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| `to_date` | `DATE` | 薪资周期结束日期 |'
- en: '| `dept_name` | `STRING` | Department where the employee is working during
    this salary period |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '| `dept_name` | `STRING` | 员工在薪资周期内工作的部门 |'
- en: '| `title` | `STRING` | Designation of the employee during this time period
    |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| `title` | `STRING` | 此时间段内员工的职位 |'
- en: With this knowledge of various tables in the Employee database we now have some
    understanding of the data we have so far. Now, the next task is to find out what
    types of analytics we can generate from this data. We will learn this in the next
    section.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了员工数据库中各种表的知识后，我们现在对已有的数据有了些了解。接下来的任务是找出我们可以从这些数据中生成哪些类型的分析。我们将在下一节中学习这一点。
- en: Superset Slices for employees database
  id: totrans-405
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 员工数据库的Superset切片
- en: Once we have some basic understanding of the type of data that is stored in
    the MySQL database. We will now see what types of we can answer from this data.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对存储在MySQL数据库中的数据类型有了基本的了解，我们现在将看到我们可以从这些数据中回答哪些类型的问题。
- en: '**Uni-dimensional insights:**'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '**一维洞察：**'
- en: How many employees are there in the organisation?
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织中有多少名员工？
- en: What is the total salary paid for all employees in the organisation?
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织中为所有员工支付的总薪资是多少？
- en: How many departments are there?
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有多少个部门？
- en: '**Multi dimensional insights**'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '**多维洞察**'
- en: What is the total salary paid for every year?
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每年支付的总薪酬是多少？
- en: What is the total salary per department?
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个部门的总薪酬是多少？
- en: Who is the top paid employee for every year?
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每年谁是最高薪酬的员工？
- en: If we think along these lines we should be able to answer very important questions
    regarding the data and should be able generate nice graphics.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们沿着这些思路思考，我们应该能够回答关于数据的一些非常重要的问题，并生成漂亮的图形。
- en: Lets take few examples of what types of visualisations we can generate in the
    coming sections.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看在接下来的章节中我们可以生成哪些类型的可视化示例。
- en: Register MySQL database/table
  id: totrans-417
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册 MySQL 数据库/表格
- en: Before we start generating Slices for the employee tables, We should first register
    it. The registration process includes the following steps.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始为员工表生成切片之前，我们首先应该注册它。注册过程包括以下步骤。
- en: 'Open the Databases by clicking on the Databases dropdown from the Sources menu
    in the top navigation bar as shown here:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击顶部导航栏中的“来源”菜单下的“数据库”下拉菜单来打开数据库，如下所示：
- en: '![](img/3ddfbcc9-a012-48e3-b287-5ba19ec18e8c.png)'
  id: totrans-420
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3ddfbcc9-a012-48e3-b287-5ba19ec18e8c.png)'
- en: 'After this we need to click on the plus (+) icon from the page:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，我们需要点击页面上的加号（+）图标：
- en: '![](img/cac387f0-9a8d-4256-ac05-21b6ec2616b1.png)'
  id: totrans-422
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cac387f0-9a8d-4256-ac05-21b6ec2616b1.png)'
- en: 'This will take us to a page where we can register the new database. The screen
    looks like this:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带我们到一个可以注册新数据库的页面。屏幕看起来如下所示：
- en: '![](img/32fa6696-267f-43c4-af46-86e6b86b2745.png)'
  id: totrans-424
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/32fa6696-267f-43c4-af46-86e6b86b2745.png)'
- en: We will fill the following details as shown here.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将填写以下详细信息，如下所示。
- en: '| **Field Name** | **Value** | **Description** |  |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| **字段名** | **值** | **描述** |  |'
- en: '| Database | `employees` | Name of the database that we want to register. (Enter
    the same name as its in the MySQL Database) |  |'
  id: totrans-427
  prefs: []
  type: TYPE_TB
  zh: '| 数据库 | `employees` | 我们想要注册的数据库名称。（输入与 MySQL 数据库中相同的名称） |  |'
- en: '| SQLAlchemy URI | `mysql+pymysql://superset:superset@master:3306/employees`
    | URI to access this database programatically. This will include the protocol/driver,
    username, password, hostname & dbname |  |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| SQLAlchemy URI | `mysql+pymysql://superset:superset@master:3306/employees`
    | 以编程方式访问此数据库的 URI。这将包括协议/驱动程序、用户名、密码、主机名和数据库名 |  |'
- en: '| Other Fields |  | Keep them as default |  |'
  id: totrans-429
  prefs: []
  type: TYPE_TB
  zh: '| 其他字段 |  | 保持默认设置 |  |'
- en: 'After this click on Save Button, which will save the database details with
    Apache Superset. We are taken to the list of tables page which looks like this:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，点击“保存”按钮，这将使用 Apache Superset 保存数据库详细信息。我们将被带到表格列表页面，如下所示：
- en: '![](img/96399df1-4b77-4313-84ed-669d011ddb85.png)'
  id: totrans-431
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/96399df1-4b77-4313-84ed-669d011ddb85.png)'
- en: As we can see, we have the employees database registered with MySQL backend.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们已将 MySQL 后端注册的员工数据库。
- en: 'In the next step we need to chose the tables from the top menu:'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们需要从顶部菜单中选择表格：
- en: '![](img/d624d6e5-a390-494e-9a63-9213dff650b5.png)'
  id: totrans-434
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d624d6e5-a390-494e-9a63-9213dff650b5.png)'
- en: 'Since we do not have any tables registered, we will see a empty page like this:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们没有注册任何表格，我们将看到一个空页，如下所示：
- en: '![](img/55176447-b183-47af-b93c-c208d6ed065f.png)'
  id: totrans-436
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/55176447-b183-47af-b93c-c208d6ed065f.png)'
- en: 'In order to register a new table we have to click on the plus (icon) in the
    UI, Which takes us to the following page:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 为了注册一个新的表格，我们必须点击 UI 中的加号（图标），这将带我们到以下页面：
- en: '![](img/a54b67c3-3d25-4ca9-8727-71335bf1a2d2.png)'
  id: totrans-438
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a54b67c3-3d25-4ca9-8727-71335bf1a2d2.png)'
- en: 'Enter the values for the fields as shown below and click Save once done:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下所示输入字段的值，完成后点击保存：
- en: '| **Field Name** | **Value** | **Description** |'
  id: totrans-440
  prefs: []
  type: TYPE_TB
  zh: '| **字段名** | **值** | **描述** |'
- en: '| Table name | `employee_norm` | Name of the table that we want to register.
    |'
  id: totrans-441
  prefs: []
  type: TYPE_TB
  zh: '| 表名 | `employee_norm` | 我们想要注册的表格名称。 |'
- en: '| Database | `employees` | Select the database that is already registered with
    Superset. |'
  id: totrans-442
  prefs: []
  type: TYPE_TB
  zh: '| 数据库 | `employees` | 选择已与 Superset 注册的数据库。 |'
- en: 'Now we can see that the table is successfully registered as shown in the screen
    in the following screenshot:'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以看到表格已成功注册，如下面的屏幕截图所示：
- en: '![](img/81790eb0-b29e-4aa1-9927-35e994db7b02.png)'
  id: totrans-444
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/81790eb0-b29e-4aa1-9927-35e994db7b02.png)'
- en: One of the important features of Superset is that it will automatically select
    the different types of operations that we can perform on the columns of the table
    according to the datatype. This drives what types of dimensions, metrics we are
    shown in the rest of the UI.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: Superset 的重要特性之一是它会根据数据类型自动选择我们可以在表格列上执行的不同类型操作。这决定了我们在 UI 的其余部分显示哪些维度和度量。
- en: 'In order to select these options, we need to edit the table by clicking on
    the edit icon and we are shown this page:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 为了选择这些选项，我们需要通过点击编辑图标来编辑表格，然后我们就会看到这个页面：
- en: '![](img/793aa239-22f3-4b32-8810-9b5bd6c9e791.png)'
  id: totrans-447
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/793aa239-22f3-4b32-8810-9b5bd6c9e791.png)'
- en: 'As we can see, Apache Superset has automatically recognized the datatype of
    each and every field and it also provided us with an option to chose these dimensions
    for various activities. These activities are listed in the following table:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，Apache Superset 自动识别了每个字段的数据类型，并且还为我们提供了选择这些维度用于各种活动的选项。这些活动在以下表格中列出：
- en: '| **Activity** | **Description** |'
  id: totrans-449
  prefs: []
  type: TYPE_TB
  zh: '| **活动** | **描述** |'
- en: '| Groupable | If the checkbox is selected, then the field can be used as part
    of Grouping operations (`GROUP BY` in SQL). |'
  id: totrans-450
  prefs: []
  type: TYPE_TB
  zh: '| 可分组 | 如果复选框被选中，则该字段可以用作分组操作 (`GROUP BY` 在 SQL 中) 的一部分。 |'
- en: '| Filterable | If the checkbox is selected, then the field can be used as part
    of Conditional operations (`WHERE` clause). |'
  id: totrans-451
  prefs: []
  type: TYPE_TB
  zh: '| 可筛选 | 如果复选框被选中，则该字段可以用作条件操作 (`WHERE` 子句) 的一部分。 |'
- en: '| Count Distinct | If the checkbox is selected, then the field can be used
    as part of count (`DISTINCT`) operation on the field. |'
  id: totrans-452
  prefs: []
  type: TYPE_TB
  zh: '| 计数唯一 | 如果复选框被选中，则该字段可以用作对字段进行计数 (`DISTINCT`) 操作的一部分。 |'
- en: '| Sum | If the checkbox is selected, then the field can be used as part of
    `SUM()` function. |'
  id: totrans-453
  prefs: []
  type: TYPE_TB
  zh: '| 总计 | 如果复选框被选中，则该字段可以用作 `SUM()` 函数的一部分。 |'
- en: '| Min/Max | Indicates that the field can be used as part of finding minimum
    and maximum value. |'
  id: totrans-454
  prefs: []
  type: TYPE_TB
  zh: '| 最小/最大 | 表示该字段可以用作查找最小和最大值的操作的一部分。 |'
- en: '| Is Temporal | Indicates the field is a time dimension. |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| 是否时间维度 | 表示该字段是时间维度。 |'
- en: Make changes as shown above and click on Save button.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 按照上述方式修改，然后点击保存按钮。
- en: Now we are ready to start creating slices and dashboard in the next steps.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好在接下来的步骤中开始创建切片和仪表板。
- en: Slices and Dashboard creation
  id: totrans-458
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 切片和仪表板创建
- en: As we have seen in the previous sections, In order to create Dashboards we first
    need to create slices. In this section we will learn to create few slices.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的章节中看到的，为了创建仪表板，我们首先需要创建切片。在本节中，我们将学习如何创建一些切片。
- en: Department salary breakup
  id: totrans-460
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部门薪酬细分
- en: 'In this slice we will learn how to create a visualization that will show the
    percentage of salary breakdown per department:'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个切片中，我们将学习如何创建一个可视化，它将显示每个部门的薪酬细分百分比：
- en: '| **UI Location** | **Graphic ** | **Description** |'
  id: totrans-462
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **描述** |'
- en: '| Sidebar | ![](img/767c4c8e-67d2-4cb9-a705-2d344b10d236.png) | **Datasource
    & Chart Type**: select [employees].[employee_norm] as the **datasource** and Distribution
    - NVD3 - Pie Chart as chart typeIn the **Time** section, select birth_date as
    Time Column and 100 years ago as **Since** column.In the **Metrics** section,
    select sum_salary as the value from dropdown and dept_name as **Group By.** |'
  id: totrans-463
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![图片](img/767c4c8e-67d2-4cb9-a705-2d344b10d236.png) | **数据源与图表类型**：选择
    [employees].[employee_norm] 作为 **数据源**，分布 - NVD3 - 饼图作为图表类型。在 **时间** 部分，选择 birth_date
    作为时间列，并选择 100 年前作为 **起始** 列。在 **度量** 部分，从下拉菜单中选择 sum_salary 作为值，并选择 dept_name
    作为 **分组依据**。 |'
- en: '| Graphic Output | ![](img/665462dd-38a7-469b-a8bd-ecfb036cec2e.png) | Clicking
    on Query button will render this good liking chart. Save it with the name Department
    Salary Breakup. |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
  zh: '| 图形输出 | ![图片](img/665462dd-38a7-469b-a8bd-ecfb036cec2e.png) | 点击查询按钮将渲染这个令人满意的图表。将其保存为“部门薪酬细分”。
    |'
- en: Just like in the previous section, See how easy it is to create good looking
    graphic without any programming knowledge.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在前面的章节中一样，看看创建一个看起来好的图形是多么容易，而且不需要任何编程知识。
- en: In the next section we will learn about another type of graphic from the same
    employees database.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习关于来自同一员工数据库的另一种类型的图形。
- en: Salary Diversity
  id: totrans-467
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 薪酬多样性
- en: This is a important graphic, where we identify how the salary diversity is between
    genders across the history of organisation. Here we use average salary as a basis
    for the analysis.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个重要的图形，其中我们确定了组织历史中性别之间的薪酬多样性。在这里，我们以平均薪酬为基础进行分析。
- en: '| **UI Location** | **Graphic** | **Description** |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **描述** |'
- en: '| Sidebar | ![](img/87174669-baa2-45d8-8df5-c407e6a5d63e.png) | **Datasource
    & Chart Type**: select [employees].[employee_norm] as the datasource and Time
    Series - line chart as chart typeIn the Time section, select birth_date as Time
    Column & 100 years ago as since column.In the Metrics section, select avg_salary
    as the Metric and gender as `Group By`. |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![图片](img/87174669-baa2-45d8-8df5-c407e6a5d63e.png) | **数据源与图表类型**：选择
    [employees].[employee_norm] 作为数据源，时间序列 - 折线图作为图表类型。在时间部分，选择 birth_date 作为时间列，并选择
    100 年前作为起始列。在度量部分，选择 avg_salary 作为度量，并选择 gender 作为 `分组依据`。 |'
- en: '| Output | ![](img/c15c7256-324e-4b28-aea1-0c5935ffec73.png) | Graphic showing
    the average salary per Gender for every Year. Save this with the title **Salary
    Diversity** |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
  zh: '| 输出 | ![](img/c15c7256-324e-4b28-aea1-0c5935ffec73.png) | 展示每年按性别平均薪资的图形。以**薪资多样性**为标题保存此图形。
    |'
- en: As we can see from the graphic, the salary breakup is even between genders and
    are very close. There is also a similar increase in the average salary over the
    period.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们从图形中看到的，薪资在性别之间分配均匀，并且非常接近。在此期间，平均薪资也有类似的增长。
- en: In the next section we will learn to generate another type of graphic that will
    give us different insight into the data.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习生成另一种类型的图形，它将为我们提供对数据的不同见解。
- en: Salary Change Per Role Per Year
  id: totrans-474
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 每年每个角色的薪资变化
- en: This is a important statistic where we want to find out how much salary change
    is there for different Titles in the organisation across years.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个重要的统计数据，我们想要找出在组织内部不同职位随年份变化的薪资变化情况。
- en: '| **UI Location** | **Graphic** | **Description** |'
  id: totrans-476
  prefs: []
  type: TYPE_TB
  zh: '| **UI位置** | **图形** | **描述** |'
- en: '| Sidebar | ![](img/77e45d70-7738-40c3-9598-52ab46387de3.png) | Datasource
    & Chart Type: select [employees].[employee_norm] as the datasource and Time Series
    - Percentage Change as chart type In the Time section, Select from_date as **Time**
    column , Year as **Time Granularity** & 100 years ago as **Since** column.In the
    **Metrics** Section, select sum_salary as the **Metric** and title as **Group**
    By. |'
  id: totrans-477
  prefs: []
  type: TYPE_TB
  zh: '| 侧边栏 | ![](img/77e45d70-7738-40c3-9598-52ab46387de3.png) | 数据源与图表类型：选择[employees].[employee_norm]作为数据源，时间序列
    - 百分比变化作为图表类型。在时间部分，选择from_date作为**时间**列，Year作为**时间粒度**，100 years ago作为**自**列。在**度量**部分，选择sum_salary作为**度量**，title作为**分组**。
    |'
- en: '| Output | ![](img/e78d9c2b-5723-4430-9238-abfc62336bc1.png) | Clicking on
    Query, yields us the following graphic. Save this with the name **Salary Change
    Per Role Per Year**. |'
  id: totrans-478
  prefs: []
  type: TYPE_TB
  zh: '| 输出 | ![](img/e78d9c2b-5723-4430-9238-abfc62336bc1.png) | 点击查询，得到以下图形。以**每年每个角色的薪资变化**为名保存此图形。
    |'
- en: From this graphic we can find out that few roles have very large difference
    in the total salary within the organisation.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个图形中，我们可以发现组织内部少数角色在总薪资方面存在很大的差异。
- en: So far we have created three slices, we will create a new dashboard with the
    slices created so far.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经创建了三个切片，我们将使用迄今为止创建的切片创建一个新的仪表板。
- en: Dashboard creation
  id: totrans-481
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仪表板创建
- en: In this step we will create a new dashboard by going to the dashboards page
    and clicking on the Add Dashboard icon (as shown in previous sections).
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，我们将通过转到仪表板页面并点击添加仪表板图标（如前几节所示）来创建一个新的仪表板。
- en: 'We are presented with the following screen where we select the three slices
    we have created so far and click Save:'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到以下屏幕，其中我们选择我们迄今为止创建的三个切片并点击保存：
- en: '![](img/66ae3349-1abb-46f8-a9c4-81e993e1b2ef.png)'
  id: totrans-484
  prefs: []
  type: TYPE_IMG
  zh: '![](img/66ae3349-1abb-46f8-a9c4-81e993e1b2ef.png)'
- en: 'Once the dashboard is saved successfully we can see it like this:'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦仪表板成功保存，我们可以看到如下所示：
- en: '![](img/b410d0cb-ad1e-4d4b-a76e-f519e88db039.png)'
  id: totrans-486
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b410d0cb-ad1e-4d4b-a76e-f519e88db039.png)'
- en: As we can see, Dashboards are very powerful way to express large amounts of
    data in a simple fashion.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，仪表板是一种非常强大的方式，可以以简单的方式表达大量数据。
- en: Summary
  id: totrans-488
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about data visualization and how it helps the users
    to receive the required message without any knowledge of the underlying data.
    We then saw the different ways to visualize our data graphically.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了数据可视化的概念以及它是如何帮助用户在没有任何底层数据知识的情况下接收所需信息的。然后，我们看到了不同的数据图形化展示方式。
- en: We walked through Hadoop applications such as Apache Druid and Apache Superset
    that are used to visualize data and learned how to use them with RDBMses such
    as MySQL. We also saw a sample database to help us understand the application
    better.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 我们了解了Hadoop应用，如Apache Druid和Apache Superset，它们用于数据可视化，并学习了如何使用它们与如MySQL这样的关系数据库管理系统（RDBMS）。我们还看到了一个示例数据库，以帮助我们更好地理解应用。
- en: In the next chapter, we will learn how to build our Hadoop cluster on the cloud.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何在云上构建我们的Hadoop集群。
