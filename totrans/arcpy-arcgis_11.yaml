- en: Chapter 11. Network Analyst and Spatial Analyst with ArcPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章：使用ArcPy的网络分析师和空间分析师
- en: Use of the ArcGIS for Desktop extensions also benefits from the power of Python
    and ArcPy. The ability to model routes using a streets dataset or a bus routes
    dataset using ArcPy will help us convert entire workflows into script tools. Both
    Network Analysts and Spatial Analysts have access modules built into ArcPy for
    improved control of their available tools, methods, and properties.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ArcGIS for Desktop扩展也受益于Python和ArcPy的强大功能。使用街道数据集或公交车路线数据集通过ArcPy建模路线的能力将帮助我们把整个工作流程转换为脚本工具。网络分析师和空间分析师都内置了ArcPy的访问模块，以增强对可用工具、方法和属性的掌控。
- en: 'This chapter will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Creating a simple network dataset
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建简单的网络数据集
- en: Checking out the extensions
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查扩展
- en: The ArcPy Network Analyst module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ArcPy网络分析师模块
- en: The ArcPy Spatial Analyst module
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ArcPy空间分析师模块
- en: The Network Analyst extension
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络分析师扩展
- en: The ESRI's Network Analyst extension is a powerful tool to enable routing and
    network connectivity functionality within ArcGIS. The extension, when used for
    street routing, allows users to find the quickest path between two points along
    a road network. The route can be constrained by a number of factors, such as traffic
    or left turns, to better model road travel. Similar analysis can be run using
    other types of networks, such as water pipe networks or electrical networks.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ESRI的网络分析师扩展是一个强大的工具，可以在ArcGIS中启用路由和网络连接功能。当用于街道路由时，该扩展允许用户在道路网络中找到两点之间的最短路径。路线可以由多个因素限制，例如交通或左转，以更好地模拟道路旅行。使用其他类型的网络，如水管网络或电网，也可以运行类似的分析。
- en: Using Network Analyst
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用网络分析师
- en: To use the Network Analyst extension, the ArcGIS for Desktop Advanced license
    is required. In ArcCatalog or ArcMap, click on the **Customize** menu and select
    **Extensions**. Once the Extensions menu is open, click on the checkbox next to
    turn on the **Network Analyst Extension.**
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用网络分析师扩展，需要ArcGIS for Desktop高级许可证。在ArcCatalog或ArcMap中，点击**自定义**菜单并选择**扩展**。一旦扩展菜单打开，点击旁边的复选框以启用**网络分析师扩展**。
- en: Creating a Feature Dataset
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建要素数据集
- en: The first step to using a network dataset is to create one within a feature
    dataset. To do so, we will generate a feature dataset to hold the data of interest.
    Right-click on the **File** geodatabase that houses the **Bus Stop** data and
    select **New**, and then select **Feature Dataset** from the **New** menu. Name
    it `Chapter11Results` and click on **Next**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用网络数据集的第一步是在要素数据集中创建一个。为此，我们将生成一个要素数据集来保存感兴趣的数据。在包含**公交站**数据的**文件**地理数据库上右键单击，然后从**新建**菜单中选择**要素数据集**。将其命名为`Chapter11Results`并点击**下一步**。
- en: '![Creating a Feature Dataset](img/8662OS_11_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![创建要素数据集](img/8662OS_11_01.jpg)'
- en: Next, select the **Spatial Reference System** (**SRS**). In this case, we will
    be using the SRS of the local State Plane zone for San Francisco. It is a projected
    coordinate system, so select that folder, and then click on the `State Plane`
    folder. Once it is opened, select the folder called **NAD 1983(US Feet)**. From
    the available reference systems, select the one called **NAD 1983 StatePlane California
    III FIPS 0403 (US Feet)**. Click on **Next** to go to the next menu.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，选择**空间参考系统**（**SRS**）。在这种情况下，我们将使用旧金山的本地州平面区域的空间参考系统。它是一个投影坐标系统，因此选择该文件夹，然后点击`State
    Plane`文件夹。一旦打开，选择名为**NAD 1983(US Feet)**的文件夹。从可用的参考系统中，选择名为**NAD 1983 StatePlane
    California III FIPS 0403 (US Feet)**的选项。点击**下一步**进入下一个菜单。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This system is also known as 2227 in **Well Known ID** (**WKID**) or **European
    Petroleum Survey Group** (**EPSG**) systems. More information about these codes
    is available at [http://spatialreference.org](http://spatialreference.org), a
    website used to find the thousands of spatial reference systems used throughout
    the world.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 该系统也被称为2227，在**已知ID**（**WKID**）或**欧洲石油调查组**（**EPSG**）系统中。有关这些代码的更多信息可在[http://spatialreference.org](http://spatialreference.org)网站找到，该网站用于查找全球使用的数千个空间参考系统。
- en: Click on the **Vertical Coordinate Systems** folder and then select the **North
    America** folder. Select the **North American Vertical Datum of 1988 in feet**
    (**NAVD 1988 US survey feet**). This will make it possible to have the vertical
    and horizontal linear units in the same measurement system. Click on **Next**
    to go to the next menu.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**垂直坐标系统**文件夹，然后选择**北美洲**文件夹。选择**北美洲1988年垂直基准（英尺）**（**NAVD 1988 US survey
    feet**）。这将使得垂直和水平线性单位处于相同的测量系统。点击**下一步**进入下一个菜单。
- en: The tolerances on the next page are also very important, but we will not cover
    them in detail here. Accept the defaults and click on **Finish** to finalize the
    **Feature Dataset**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下一页上的容限也非常重要，但在此处我们不会详细说明。接受默认设置并点击**完成**以最终确定**要素数据集**。
- en: Importing the datasets
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入数据集
- en: Import the bus stops, streets, and bus routes feature classes into the `Chapter
    11 Results Feature Dataset`. Right-click on the dataset and select **Import**,
    and then **Feature Class (Single)**. Add the feature classes one by one to give
    them a new name that will keep them separated from the versions contained within
    the **SanFrancisco Feature Dataset**. Importing them will make sure that they
    are in the correct SRS and that a network dataset can be created.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将公交车站、街道和公交路线要素类导入到`Chapter 11 Results Feature Dataset`中。右键单击数据集并选择**导入**，然后**要素类（单个**）。逐个添加要素类，并给它们一个新名字，以保持它们与**SanFrancisco
    Feature Dataset**中包含的版本分开。导入它们将确保它们位于正确的SRS中，并且可以创建网络数据集。
- en: Creating the Network Dataset
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建网络数据集
- en: Now that we have a data container, we can create a network dataset from the
    streets feature class. Right-click on the **Chapter11Results** feature dataset
    and select **New**, and then choose **Network Dataset**.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了数据容器，我们可以从街道要素类创建一个网络数据集。右键单击**Chapter11Results**要素数据集并选择**新建**，然后选择**网络数据集**。
- en: '![Creating the Network Dataset](img/8662OS_11_02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![创建网络数据集](img/8662OS_11_02.jpg)'
- en: Call the **Network Dataset** `Street_Network` and click on **Next**. Select
    the **Streets feature class** as the class that will participate in the network
    dataset and click on **Next** to move to the next menu. Select **Global Turns**
    to model turns within the network. In the next menu, use the default connectivity
    settings. Then, accept the **Using Z Coordinate Values from Geometry** setting.
    Accept the default cost restriction and driving directions settings, and finally
    click on **Finish** to generate the network dataset. Then, build the network dataset
    using the final menu. The network dataset is ready to be used.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 将**网络数据集**命名为`Street_Network`并点击**下一步**。选择**街道要素类**作为将参与网络数据集的类，并点击**下一步**进入下一个菜单。选择**全局转弯**来模拟网络内的转弯。在下一个菜单中，使用默认的连通性设置。然后，接受**使用几何中的Z坐标值**设置。接受默认的成本限制和驾驶方向设置，最后点击**完成**以生成网络数据集。然后，使用最终菜单构建网络数据集。网络数据集已准备好使用。
- en: Accessing the Network Dataset using ArcPy
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ArcPy 访问网络数据集
- en: 'Now that the necessary setup has been completed, the street_network network
    dataset can be added to a script for use in generating routes. Because this is
    a simple analysis, the only impedance value to be used will be the length of the
    street segments. Through the use of a `SearchCursor`, `PointGeometry` objects
    from the bus stops can be accessed and added as locations to be searched:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在必要的设置已经完成，可以将street_network网络数据集添加到脚本中以生成路线。因为这是一个简单的分析，将使用的唯一阻抗值将是街道段落的长度。通过使用`SearchCursor`，可以访问并添加来自公交车站的`PointGeometry`对象作为要搜索的位置：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Breaking down the script
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 脚本分解
- en: Let's dissect the script, which once finished, will generate a layer file containing
    the added Stops, and the Routes along streets to best get from the origin stop
    to the destination stop.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们剖析这个脚本，一旦完成，它将生成一个包含添加的停靠点和街道上的路线的图层文件，以最佳方式从起点停靠站到达目的地停靠站。
- en: 'The script begins by importing the arcPy module. The next line allows us to
    use the Network Analyst extension:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本首先导入arcPy模块。下一行允许我们使用网络分析扩展：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using the `arcpy.CheckOutExtension()` method to invoke the Network Analyst extension
    involves passing the correct keyword to the method as a parameter. Once it has
    been invoked, the tools of the extension can be called and executed in the script.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`arcpy.CheckOutExtension()`方法调用网络分析扩展时，需要将正确的关键字作为参数传递给方法。一旦调用，扩展的工具就可以在脚本中调用和执行。
- en: 'Assigning the bus stops feature class and the street_network network dataset
    to variables, they can then be passed to ArcPy''s `MakeRouteLayer_na()` method,
    along with a variable representing the impedance value:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将公交车站要素类和街道网络网络数据集分配给变量后，它们可以传递给 ArcPy 的 `MakeRouteLayer_na()` 方法，以及一个表示阻抗值的变量：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `MakeRouteLayer_na` tool produces a `RouteLayer` in memory. This blank
    layer needs to be populated with stops to produce the route(s) between them. For
    this purpose, we need a `SearchCursor` to access the `PointGeometry` objects and
    a SQL statement that will limit the returned results to the line of interest:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`MakeRouteLayer_na` 工具在内存中生成一个 `RouteLayer`。这个空白层需要填充停靠点以生成它们之间的路线（s）。为此，我们需要一个
    `SearchCursor` 来访问 `PointGeometry` 对象，以及一个 SQL 语句，该语句将返回的结果限制在感兴趣的线上：'
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The Search Cursor will allow the **Stops** sublayer of the layer produced by
    the MakeRouteLayer tool to be populated when used in conjunction with the `AddLocations`
    tool. Once populated, the `RouteLayer` can be passed to the **Solve** tool to
    find the routes between the points of interest. Again, the routes are solved based
    on finding the lowest **impedance** between the two points. In this example, the
    only impedance is the segment length, but it could be traffic or elevation or
    other restriction types, if that data is available:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索游标将允许当与 `AddLocations` 工具结合使用时，填充由 MakeRouteLayer 工具生成的层的 **Stops** 子层。一旦填充，`RouteLayer`
    可以传递给 **Solve** 工具以找到感兴趣点之间的路线。再次强调，路线是通过在两点之间找到最低的 **阻抗** 来解决的。在这个例子中，唯一的阻抗是段长度，但如果有数据可用，它可能是交通、海拔或其他限制类型：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The final result is a layer file that is written to disk using the `SaveToLayerFile`
    tool.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果是使用 `SaveToLayerFile` 工具写入磁盘的图层文件。
- en: '![Breaking down the script](img/8662OS_11_03.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![分解脚本](img/8662OS_11_03.jpg)'
- en: The Network Analyst module
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络分析模块
- en: 'In an effort to make the use of the Network Analyst extension more **Pythonic**,
    the newer Network Analyst (`na`) module adjusts how the methods that correspond
    to the ArcToolbox Network Analyst tools are accessed. Instead of calling the tools
    directly from ArcPy, the tools are now methods of the `na` module. Removing the
    initials of the Network Analyst toolset also reduces confusion and makes it easier
    to remember the name of the method. See the difference as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使网络分析扩展的使用更加 **Pythonic**，较新的网络分析器 (`na`) 模块调整了访问与 ArcToolbox 网络分析工具相对应的方法的方式。现在，不是直接从
    ArcPy 调用工具，而是将工具作为 `na` 模块的方法。移除网络分析工具集的首字母缩写词也减少了混淆，并使得记住方法名称更容易。如下所示，可以看到差异：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The tool will produce the same layer output as the original script, but the
    reorganization of the Network Analyst tools into the `na` module has made the
    code more logical. For instance, it makes more sense to call `Solve` using `arcpy.na.Solve()`,
    instead of `arcpy.Solve_na()`, as it reinforces that `Solve` is a method of the
    Network Analyst (`na`) module. As ArcPy continues to be developed, I expect more
    **Pythonic** code reorganization to occur.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 工具将产生与原始脚本相同的层输出，但将网络分析工具重新组织到 `na` 模块中使得代码更加逻辑。例如，使用 `arcpy.na.Solve()` 调用
    `Solve` 比使用 `arcpy.Solve_na()` 更有意义，因为这强调了 `Solve` 是网络分析器 (`na`) 模块的方法。随着 ArcPy
    的不断发展，我预计将发生更多的 **Pythonic** 代码重组。
- en: Accessing the Spatial Analyst Extension
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问空间分析扩展
- en: The Spatial Analyst Extension is very important to perform analysis on both
    raster and vector datasets, but it is generally used to perform surface analysis
    and raster math. These operations are made even easier by the use of ArcPy, as
    all of the tools available in the Spatial Analyst Toolbox are exposed with the
    Spatial Analyst access module. This includes the Raster Calculator tools, making
    map algebra easy by using the tools and operators in simple expressions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 空间分析扩展对于对栅格和矢量数据集进行分析非常重要，但它通常用于执行地表分析和栅格数学。通过使用 ArcPy，这些操作变得更加容易，因为空间分析工具箱中所有可用的工具都通过空间分析访问模块公开。这包括栅格计算器工具，通过使用简单表达式中的工具和运算符，使得地图代数变得简单。
- en: Adding elevation to the bus stops
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将海拔添加到公交车站
- en: 'The elevation raster "sf_elevation" has been downloaded from NOAA and added
    to the File Geodatabase. However, it covers the entire Bay Area, and we should
    write a script to only extract an area of the city of San Francisco as it will
    reduce the time needed to run our scripts. We''ll use a SQL statement as the `where`
    clause to limit the results to the South of Market (SoMa) neighborhood. To do
    so, let''s take advantage of a Search Cursor and the Spatial Analyst access module''s
    Extract by Polygon property:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 高程栅格 "sf_elevation" 已从NOAA下载并添加到文件地理数据库中。然而，它覆盖了整个湾区，我们应该编写一个脚本来仅提取旧金山城市的某个区域，这将减少我们脚本运行所需的时间。我们将使用SQL语句作为
    `where` 子句来限制结果仅限于南市场（SoMa）街区。为此，让我们利用搜索游标和空间分析访问模块的 Extract by Polygon 属性：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `ExtractByPolygon()` method is a bit misleading, as it does not accept a
    `Polygon` object as a parameter. Instead, it requires a list of `Point` objects
    that represent the vertices of the area that we want to extract. As the `SearchCursor`
    is iterating through the neighborhoods dataset, a `Polygon` object is returned
    by the cursor. Fortunately, the `SearchCursor` has a final parameter, which we
    have not yet explored, that allows us to extract the individual points or vertices
    that make up the `Soma` neighborhood polygon. By setting the Search Cursor's optional
    Explode to Points parameter (which converts Polygon objects into coordinate pairs
    for each vertex) to `True`, Point objects can be generated by passing the `XY`
    values of each returned vertex to the `arcpy.Point` method. These `Point()` objects
    are appended to the `somaGeometry` list and then passed to the Spatial Analyst
    access module's `ExtractByPolygon` method.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`ExtractByPolygon()` 方法有些误导，因为它不接受 `Polygon` 对象作为参数。相反，它需要一个表示我们想要提取的区域顶点的
    `Point` 对象列表。当 `SearchCursor` 遍历街区数据集时，游标会返回一个 `Polygon` 对象。幸运的是，`SearchCursor`
    有一个我们尚未探索的最终参数，允许我们提取构成 `Soma` 街区多边形的单个点或顶点。通过将搜索游标的可选 Explode to Points 参数（它将多边形对象转换为每个顶点的坐标对）设置为
    `True`，可以通过将每个返回顶点的 `XY` 值传递给 `arcpy.Point` 方法来生成点对象。这些 `Point()` 对象被追加到 `somaGeometry`
    列表中，然后传递给空间分析访问模块的 `ExtractByPolygon` 方法。'
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Passing a Polygon Object instead of Point Objects will return an error.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多边形对象而不是点对象将返回一个错误。
- en: Using Map Algebra to generate elevation in feet
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用地图代数生成英尺高程
- en: 'We now have a raster to use to extract elevation values. However, both the
    original raster and the generated SoMa neighborhood raster contain elevation values
    in meters, and it would be better to convert them to feet to keep them consistent
    with the projection of the bus stops. Let''s use raster math and the `Times()`
    method to convert the values from meters to feet:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有一个栅格可以用来提取高程值。然而，原始栅格和生成的 SoMa 街区栅格都包含以米为单位的高程值，最好将它们转换为英尺，以保持与公交车站投影的一致性。让我们使用栅格数学和
    `Times()` 方法将值从米转换为英尺：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `Times()` method generates a new raster to glean the elevation values we
    need for the bus stops of interest.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`Times()` 方法生成一个新的栅格，以获取我们需要的感兴趣公交车站的地面高程值。'
- en: Adding in the bus stops and getting elevation values
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加公交车站和获取高程值
- en: 'Now that we have generated a raster that we can use to find elevation values
    in feet, we need to add a new `arcpy.sa()` method to generate the points. The
    `ExtractValuesToPoints()` method will generate a new bus stops feature class with
    a new field that holds the elevation values:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经生成了一个可以用来查找英尺高程值的栅格，我们需要添加一个新的 `arcpy.sa()` 方法来生成点。`ExtractValuesToPoints()`
    方法将生成一个新的公交车站要素类，其中包含一个新的字段，用于存储高程值：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The final result
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终结果
- en: 'We produced a subset feature class of the bus stops that has the elevation
    values added as a field. This process could be repeated for the entire city, one
    neighborhood at a time, or it could be performed with the original elevation raster
    on the entire bus stops feature class to generate a value for each stop:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生成了一个包含高程值字段的公交车站子要素类。这个过程可以重复应用于整个城市，一次一个街区，或者可以在原始高程栅格的整个公交车站要素类上执行，为每个车站生成一个值：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This script demonstrates well the value of accessing the advanced extensions
    in ArcPy and combining them with `SearchCursors` and `Geometry` objects. The script
    could be taken even further by adding a `SearchCursor` to look through the `outstops`
    dataset and exporting the results to a spreadsheet, or even adding a new field
    to the original bus stops dataset to populate with the elevation values. It could
    even be used as impedance values to be entered into a Network Analyst extension
    analysis—a fun coding task that I hope you will attempt.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本很好地展示了访问 ArcPy 中高级扩展的价值，并将它们与 `SearchCursors` 和 `Geometry` 对象结合使用。该脚本可以通过添加一个
    `SearchCursor` 来进一步扩展，以遍历 `outstops` 数据集并导出结果到电子表格，或者甚至向原始公交车站数据集添加一个新字段以填充海拔值。它甚至可以用作阻抗值输入到网络分析师扩展分析中——这是一个有趣的编码任务，我希望你们会尝试。
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered the basics of using common ArcGIS for Desktop Advanced
    extensions within ArcPy, with a focus on the Network Analyst access module and
    the Spatial Analyst access module. We explored how to generate a network and how
    to create network paths using ArcPy. We also explored how to access Spatial Analyst
    tools and use them in conjunction with `SearchCursors` to work with rasters and
    vectors for spatial analysis.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了在 ArcPy 中使用常见的 ArcGIS for Desktop Advanced 扩展的基础知识，重点关注网络分析师访问模块和空间分析师访问模块。我们探讨了如何生成网络以及如何使用
    ArcPy 创建网络路径。我们还探讨了如何访问空间分析师工具，并使用它们与 `SearchCursors` 结合来处理栅格和矢量数据以进行空间分析。
- en: In the next chapter, we will explore some final pieces to the ArcPy puzzle that
    will allow the creation of advanced scripts and script tools.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨 ArcPy 的一些最终拼图，这将允许创建高级脚本和脚本工具。
