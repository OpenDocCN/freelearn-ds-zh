- en: Expanding QGIS 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展 QGIS 3
- en: In this final chapter, we will look at expanding QGIS. We will look at combining
    tools into a model using the model builder. This effectively allows us to build
    our own reusable model, using parameters we either hardcode in or leave to the
    user to adjust. We will look at the ever-increasing range of plugins, before finally
    taking a brief look at the Python command line, where we can create scripts in
    the future as confidence grows with QGIS.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后一章中，我们将探讨扩展 QGIS。我们将通过模型构建器将工具组合成一个模型。这有效地使我们能够构建自己的可重用模型，使用参数我们要么硬编码在模型中，要么留给用户调整。在最后，我们将简要查看插件的范围，以及随着
    QGIS 熟练程度的提高，我们可以创建脚本的 Python 命令行。
- en: 'These are the topics covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是本章涵盖的主题：
- en: Model builder
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型构建器
- en: Plugins
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件
- en: Python command line
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 命令行
- en: Model builder
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型构建器
- en: You may recall that in the [Chapter 6](6cd8f808-67bd-4788-8e7a-ccd3ce12a11d.xhtml),
    *Spatial Processing* we ran several tools to utilize the zonal histogram answer
    to the distribution of terrains (`Landcover`) in a buffered pipeline corridor.
    Open a new QGIS project and load in the `Pipeline` layer and the `Landcover`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还记得在[第 6 章](6cd8f808-67bd-4788-8e7a-ccd3ce12a11d.xhtml)“空间处理”中，我们运行了几个工具来利用区域直方图的答案来分析缓冲管线走廊中地形（`Landcover`）的分布。打开一个新的
    QGIS 项目并加载“Pipeline”图层和“Landcover”。
- en: 'To create a model, go to Processing | Graphical Modeler to open the modeler,
    where we can select from different Inputs and Algorithms for our model. Graphical
    Modeler is shown in the following screenshot:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个模型，请转到处理 | 图形模型器以打开模型构建器，在那里我们可以从不同的输入和算法中选择我们的模型。图形模型器在以下屏幕截图中显示：
- en: '![](img/5cc0a689-e513-4988-9565-9f11659ea914.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5cc0a689-e513-4988-9565-9f11659ea914.png)'
- en: The Graphical Modeler
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图形模型器
- en: 'Select the Inputs tab and choose Vector Layer. Add a new parameter called `Pipeline`
    and set Geometry type to Line; this is shown in the following screenshot:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 选择输入选项卡并选择矢量图层。添加一个名为“Pipeline”的新参数并将几何类型设置为线；这在上面的屏幕截图中显示：
- en: '![](img/6bd57ef8-e2be-480f-abeb-ed1858b71cf8.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6bd57ef8-e2be-480f-abeb-ed1858b71cf8.png)'
- en: Creating a Pipeline attribute as a Geometry type—Line
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个作为几何类型的管线属性—线
- en: Click on OK. Now, add Raster Layer and call it `Landcover`. In the Algorithms
    tab, we can use the filter at the top to narrow down our search for the correct
    algorithm. Search for `buffer` and double-click to open the algorithm. Fill in
    Distance as `15000` and check the box to make sure the layer is dissolved.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“确定”。现在，添加栅格图层并命名为“Landcover”。在算法选项卡中，我们可以使用顶部的过滤器来缩小我们搜索正确算法的范围。搜索“buffer”并双击以打开算法。将距离填写为“15000”并勾选复选框以确保图层被溶解。
- en: 'Now, search for and open the Zonal histogram tool and change the prefix to
    `Terrain_`. This is our final output so tell the model it is the final result.
    The final output is what is returned to the user once the model has been successfully
    run. The inputs should look like the following dialog box:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，搜索并打开区域直方图工具，将前缀更改为“Terrain_”。这是我们最终的输出，所以告诉模型它是最终结果。最终输出是模型成功运行后返回给用户的内容。输入应类似于以下对话框：
- en: '![](img/6d2a6fa6-7ea6-4bca-b182-d24ffc0b69ff.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6d2a6fa6-7ea6-4bca-b182-d24ffc0b69ff.png)'
- en: Zonal histogram tool
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 区域直方图工具
- en: 'Click on OK. To finish the model, we need to enter a model Name (`Pipeline_impact_terrain`)
    and a Group name (`QuickStart_QGIS`). Processing will use the Group name to organize
    all the models that we create into different toolbox groups. The model is now
    complete. The finished model will look like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“确定”。为了完成模型，我们需要输入模型名称（`Pipeline_impact_terrain`）和组名称（`QuickStart_QGIS`）。处理将使用组名称来组织我们创建的所有模型到不同的工具箱组中。模型现在已完成。完成的模型将如下所示：
- en: '![](img/80bf9e3a-9161-49d0-ad73-c56161178457.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/80bf9e3a-9161-49d0-ad73-c56161178457.png)'
- en: The Graphical Modeler with the model displayed
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 显示模型的图形模型器
- en: 'Click the save icon and save as `terrain_stats.model3`. Click on the green
    triangle or press *F5* to run the model. A dialog box should appear as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 点击保存图标并将其保存为“terrain_stats.model3”。点击绿色三角形或按 *F5* 运行模型。应该会出现如下对话框：
- en: '![](img/45aceba5-6655-4259-b05f-d6d4643e95cf.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/45aceba5-6655-4259-b05f-d6d4643e95cf.png)'
- en: The model represented as a tool
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作为工具表示的模型
- en: 'Click on Run to execute the model. The pipeline output will appear in the QGIS
    map window. After closing the modeler, we can run the saved models from the toolbox
    like any other tool. Look in Processing Toolbox under Models. This newly created
    model will appear there, as shown in the following screenshot. It is even possible
    to use one model as a building block for another model:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 点击运行以执行模型。管道输出将出现在QGIS地图窗口中。关闭模型器后，我们可以像使用任何其他工具一样运行保存的模型。在处理工具箱下的模型中查找。这个新创建的模型将出现在那里，如下面的截图所示。甚至可以使用一个模型作为另一个模型的构建块：
- en: '![](img/c14ff5a8-243f-49e0-b087-51465a8b43c4.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c14ff5a8-243f-49e0-b087-51465a8b43c4.png)'
- en: Model appears in the Processing Toolbox under Models
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 模型出现在处理工具箱下的模型中
- en: Another useful feature is that we can specify a layer style that needs to be
    automatically applied to the processing results. This default style can be set
    by right-clicking and selecting Edit, rendering styles for outputs in the context
    menu of the created model in the toolbox. This means that you can automate building
    maps if you wish.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的功能是，我们可以指定需要自动应用于处理结果的图层样式。此默认样式可以通过在创建的模型工具箱的上下文菜单中右键单击并选择编辑、渲染样式来设置输出。这意味着如果您愿意，您可以自动化地图的构建。
- en: You can share your models by giving the `.model3` file to others. This is the
    first step in expanding the use of QGIS. Save your project.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将`.model3`文件提供给他人来共享您的模型。这是扩大QGIS使用范围的第一步。保存您的项目。
- en: Plugins in QGIS
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QGIS插件
- en: 'We briefly touched on plugins in [Chapter 5](2481b8d1-b60c-4839-bb1c-c8654cd792b2.xhtml),
    *Creating Maps*. We used qgis2web to convert our Alaska map into a web map. The
    top plugins by download are listed here: [https://plugins.qgis.org/plugins/popular/](https://plugins.qgis.org/plugins/popular/).
    You can use this page to search for plugins or look at tags to view the different
    plugins and their capabilities.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第5章](2481b8d1-b60c-4839-bb1c-c8654cd792b2.xhtml)“创建地图”中简要介绍了插件。我们使用qgis2web将我们的阿拉斯加地图转换为网络地图。以下是按下载量排名的顶级插件列表：[https://plugins.qgis.org/plugins/popular/](https://plugins.qgis.org/plugins/popular/)。您可以使用此页面搜索插件或查看标签以查看不同的插件及其功能。
- en: 'Plugins are accessed via the Plugins menu. Some plugins are experimental. By
    experimental, we mean they could be unstable or in the early stages of development,
    but it is worth turning these on in case a plugin is available that might help
    your workflows; just use them with caution. From the Plugins dialog, choose Settings
    and check the box next to Show also experimental plugins:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 插件通过插件菜单访问。一些插件是实验性的。所谓实验性，意味着它们可能不稳定或在开发初期，但如果有插件可能有助于您的流程，打开这些插件是值得的；只是要小心使用。从插件对话框中，选择设置并勾选“显示实验性插件”旁边的框：
- en: '![](img/c1d4dcd8-92cb-4d88-89b1-15ad4e24a450.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c1d4dcd8-92cb-4d88-89b1-15ad4e24a450.png)'
- en: Plugin settings
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 插件设置
- en: Semi-Automatic Classification Plugin
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 半自动分类插件
- en: The **Semi-Automatic Classification Plugin** (**SCP**) for QGIS allows for the
    supervised classification of remote sensing images, providing tools for the downloading,
    preprocessing, and postprocessing of satellite images ([https://plugins.qgis.org/plugins/SemiAutomaticClassificationPlugin/)](https://plugins.qgis.org/plugins/SemiAutomaticClassificationPlugin/).
    It is an amazingly powerful tool that significantly extends Remote Sensing functionality
    into QGIS.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**Semi-Automatic Classification Plugin**（SCP）为QGIS提供了对遥感图像的监督分类功能，提供了卫星图像下载、预处理和后处理的工具（[https://plugins.qgis.org/plugins/SemiAutomaticClassificationPlugin/](https://plugins.qgis.org/plugins/SemiAutomaticClassificationPlugin/)）。这是一个功能强大的工具，显著扩展了QGIS的遥感功能。'
- en: 'In this example, we will use the SCP to download a `Sentinel-2` image that
    covers the part of Alaska that we digitized: Fire Island. At this point, please
    make sure you have an account with the **Copernicus Open Data Hub**. You can do
    this at: [https://scihub.copernicus.eu/dhus/#/self-registration](https://scihub.copernicus.eu/dhus/#/self-registration).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用SCP下载覆盖我们数字化部分阿拉斯加的`Sentinel-2`图像：火岛。在此阶段，请确保您在**Copernicus Open Data
    Hub**上有账户。您可以在：[https://scihub.copernicus.eu/dhus/#/self-registration](https://scihub.copernicus.eu/dhus/#/self-registration)进行注册。
- en: Open a new QGIS project and add the `OpenStreeMap` data from `XYZ Tiles` in
    the Browser panel, and then add the `Island_Outline` layer from the `Fire_Island`
    GeoPackage that we created in [Chapter 3](0e2ba9ae-3346-4444-b28a-389d22737646.xhtml),
    *Creating Data*. Make sure that the map project in the status bar is set to EPSG
    3857.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的 QGIS 项目，并在浏览器面板中添加来自 `XYZ Tiles` 的 `OpenStreeMap` 数据，然后添加我们从 [第 3 章](0e2ba9ae-3346-4444-b28a-389d22737646.xhtml)
    “创建数据” 中创建的 `Fire_Island` GeoPackage 中的 `Island_Outline` 图层。确保状态栏中的地图项目设置为 EPSG
    3857。
- en: 'To install the SCP, select Plugins | Manage and Install Plugins. Click on the
    All tab, search for SCP, and click on Install plugin. Two new toolbars and one
    new panel will appear. In this example, we will look only at the SCP working toolbar,
    as shown as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 SCP，选择插件 | 管理和安装插件。点击“全部”标签页，搜索 SCP，然后点击“安装插件”。将出现两个新的工具栏和一个新的面板。在这个例子中，我们将只查看
    SCP 工作工具栏，如下所示：
- en: '![](img/e824f2a9-8f5c-439e-ac9c-d3160e0b2ddf.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e824f2a9-8f5c-439e-ac9c-d3160e0b2ddf.png)'
- en: SCP Working Toolbar
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: SCP 工作工具栏
- en: 'Click on the button on the far left of this toolbar; this will open a dialog
    box, shown in the following screenshot:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 点击工具栏最左边的按钮；这将打开一个对话框，如下面的截图所示：
- en: '![](img/1312f6e9-1cae-42a0-ba8b-1819896cd3e8.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1312f6e9-1cae-42a0-ba8b-1819896cd3e8.png)'
- en: Semi-Automatic Classification Plugin dialog box
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 半自动分类插件对话框
- en: 'Assuming that you have an account set up with the Copernicus Open Data Hub,
    then click on the Download products menu and select the Login data tab. Here,
    enter your username and password. Next, select the Search tab and select `Sentinel-2`
    from Products list, set the date range to November 01, 2018, to December 01, 2018,
    and the cloud cover to 25%, as shown in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经在 Copernicus Open Data Hub 上设置了账户，然后点击“下载产品”菜单并选择“登录数据”标签页。在此，输入您的用户名和密码。接下来，选择“搜索”标签页，从产品列表中选择“Sentinel-2”，将日期范围设置为
    2018 年 11 月 01 日至 2018 年 12 月 01 日，并将云量设置为 25%，如下面的截图所示：
- en: '![](img/890cd41c-c821-4c9e-9ecc-2e8f6f68bc53.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/890cd41c-c821-4c9e-9ecc-2e8f6f68bc53.png)'
- en: Setting the Search parameters
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 设置搜索参数
- en: 'To define the area we are searching, click on the button with plus sign with
    an orange background, minimize the window, and return to the main QGIS screen.
    Left-click to get the **Upper Left** (**UL**) and right-click to get the **Lower
    Right** (**LR**). You should get a box drawn on your map as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义我们正在搜索的区域，点击带有橙色背景加号的按钮，最小化窗口，然后返回到主 QGIS 屏幕。左键单击以获取 **左上角**（**UL**），右键单击以获取
    **右下角**（**LR**）。你应该会在地图上画出一个如下所示的框：
- en: '![](img/a5a67d9c-ea0c-4cee-acb3-eb8ffda41f93.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a5a67d9c-ea0c-4cee-acb3-eb8ffda41f93.png)'
- en: An overview of defining the search area
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 定义搜索区域的概述
- en: 'Go to the plugin (you can click the plugin button as before, or just maximize
    the SCP plugin window). If you are happy with Search parameters, click on the
    button next to Find. The results will be returned in Product list. You can click
    each one to find the best image. This is shown in the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前往插件（您之前可以点击插件按钮，或者只需最大化 SCP 插件窗口）。如果您对搜索参数满意，点击“查找”旁边的按钮。结果将在产品列表中返回。您可以点击每个选项以找到最佳图像。这如下面的截图所示：
- en: '![](img/1711546a-fb37-4952-ae38-94d5adadeec1.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1711546a-fb37-4952-ae38-94d5adadeec1.png)'
- en: Selecting an image
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 选择图像
- en: 'If you uncheck the Only if preview in Layers option, at this point you could
    click on Run (bottom-right-hand corner). That will go ahead and download a large
    amount of data and preprocess it (correct for atmospheric effects). In this example,
    to save on download size, select Download options and choose only band 2, 3, and
    4 and the ancillary data. This will allow us to create a true color satellite
    image. I have also turned off the Preprocess images options to simplify this walk-through.
    These options are shown in the following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您取消选中“仅在图层预览中”选项，此时您可以点击“运行”（右下角）。这将下载大量数据并对其进行预处理（校正大气效应）。在这个例子中，为了节省下载大小，选择下载选项并仅选择波段
    2、3 和 4 以及辅助数据。这将使我们能够创建真彩色卫星图像。我还已关闭“预处理图像”选项以简化此说明。这些选项如下面的截图所示：
- en: '![](img/e0d48a71-2883-4161-9490-12887d4cb166.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e0d48a71-2883-4161-9490-12887d4cb166.png)'
- en: Specify the download options
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 指定下载选项
- en: 'Back in the Search tab, I have turned on the Only if preview in Layers option
    and clicked on the Display preview of highlighted images in map button. This has
    added my selected product to my map. This is shown in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在“搜索”标签页中，我已启用“仅在图层预览中”选项并点击了“在地图中显示突出显示图像预览”按钮。这已将我选择的产品添加到我的地图中。这如下面的截图所示：
- en: '![](img/aa2d92ca-eaad-48b9-8f33-ecd6fb7b4e9e.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa2d92ca-eaad-48b9-8f33-ecd6fb7b4e9e.png)'
- en: Displaying a preview in the layers via the dialog box
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对话框显示层的预览
- en: Finally, click on the RUN button, select the folder you wish to save the data
    in, and let the data download. When finished, you should have your `Sentinel-2`
    images loaded as layers in QGIS. There is significantly more functionality in
    this plugin than covered here. If you are interested in exploring the available
    functionality further, including classification of satellite data with QGIS, then
    please visit [https://fromgistors.blogspot.com/p/semi-automatic-classification-plugin.html](https://fromgistors.blogspot.com/p/semi-automatic-classification-plugin.html)
    for extensive documentation, videos, and guides.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，点击 RUN 按钮，选择你希望保存数据的文件夹，并让数据下载。完成后，你应该会在 QGIS 中以层的形式加载你的 `Sentinel-2` 图像。这个插件的功能远不止这里所涵盖的。如果你有兴趣进一步探索可用的功能，包括使用
    QGIS 对卫星数据进行分类，请访问 [https://fromgistors.blogspot.com/p/semi-automatic-classification-plugin.html](https://fromgistors.blogspot.com/p/semi-automatic-classification-plugin.html)
    以获取详细的文档、视频和指南。
- en: 'The satellite data should be loaded into QGIS. Using Raster Toolbar, stretch
    one of the bands until you can see it (sometimes images are loaded dark, especially
    if there is a large amount of sea in them). Your screen should look as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 应该将卫星数据加载到 QGIS 中。使用栅格工具栏，拉伸其中一个波段直到你可以看到它（有时图像加载得很暗，特别是如果其中包含大量的海洋）。你的屏幕应该看起来如下：
- en: '![](img/d6f51586-4bd3-4e7b-9727-51c23a2b05b7.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6f51586-4bd3-4e7b-9727-51c23a2b05b7.png)'
- en: Downloaded satellite image appears in QGIS
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 下载的卫星图像出现在 QGIS 中
- en: There are many more plugins available; use Plugin Manager to search for and
    explore new tools to work with.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他插件可用；使用插件管理器搜索并探索新的工具以进行工作。
- en: Using the Python command line
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 命令行
- en: From the Plugins toolbar, select the Python Console button, or press *Ctrl*
    + *Alt* + *P*, or select Python Console from the Plugins menu.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 从插件工具栏中选择 Python 控制台按钮，或按 *Ctrl* + *Alt* + *P*，或从插件菜单中选择 Python 控制台。
- en: Python has become the programming language of choice for GIS. In this book,
    we will just look at the basics of the QGIS API. As you become more advanced,
    you can use Python to develop your own plugins and custom scripts. Eventually,
    you could use the QGIS Python library (PyQGIS), external to QGIS, to build applications.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Python 已经成为 GIS 的首选编程语言。在这本书中，我们将只查看 QGIS API 的基础知识。随着你变得更加高级，你可以使用 Python 开发自己的插件和自定义脚本。最终，你可以使用
    QGIS Python 库（PyQGIS），在 QGIS 之外构建应用程序。
- en: Open a new empty QGIS project.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的空 QGIS 项目。
- en: Loading a layer
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载层
- en: 'To load a vector layer, we use the `addVectorLayer()` function of `iface`.
    The `iface` class is used to access the graphical part of the QGIS interface.
    In the following example, I am adding `airport.shp` to the map. This is shown
    in one line of code, as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要加载一个矢量层，我们使用 `iface` 的 `addVectorLayer()` 函数。`iface` 类用于访问 QGIS 界面的图形部分。在以下示例中，我将
    `airport.shp` 添加到地图中。这在一行代码中显示，如下所示：
- en: '[PRE0]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Press the *Enter* key and the `airports` layer is now loaded (change the path
    to your Shapefile):'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 按下 *Enter* 键，`airports` 层现在已加载（更改到你的 Shapefile 路径）：
- en: '![](img/416c361d-04a1-4981-8718-709c6bd74a55.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/416c361d-04a1-4981-8718-709c6bd74a55.png)'
- en: The airports Shapefile loaded into the QGIS map
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 加载到 QGIS 地图中的机场 Shapefile
- en: 'Add another layer:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 添加另一个层：
- en: '[PRE1]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We now have the `alaska` boundary and the `airports` layer added to the map.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将 `alaska` 边界和 `airports` 层添加到了地图中。
- en: Inspecting the layer
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查层
- en: 'We can look at each layer by accessing some of the properties. To get the name
    of the layer, use the `.name()` function:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过访问一些属性来查看每一层。要获取层的名称，请使用 `.name()` 函数：
- en: '[PRE2]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output is as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE3]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To count the number of records in the layer, use the `featureCount()` function:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算层中的记录数，请使用 `featureCount()` 函数：
- en: '[PRE4]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output is as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To print the attributes for all these `76` layers, use a `for` loop:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要打印所有这些 `76` 层的属性，请使用 `for` 循环：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Remember to use the indentation. The result will look similar to this:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 记得使用缩进。结果看起来会像这样：
- en: '![](img/b52990bf-9ff0-40da-bb5e-400304fc916c.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b52990bf-9ff0-40da-bb5e-400304fc916c.png)'
- en: The QGIS Python Console printing out the attribute table
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: QGIS Python 控制台打印出属性表
- en: Scripts
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 脚本
- en: The command line can get confusing. It is better to build scripts and test on
    the command line. Let's convert these command-line calls into a Python script.
    Close this project and open a new QGIS project. Open the Python Console.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行可能会让人困惑。最好是构建脚本并在命令行上进行测试。让我们将这些命令行调用转换为Python脚本。关闭此项目并打开一个新的QGIS项目。打开Python控制台。
- en: 'Click on the Show Editor button to open a scripting window. This is shown in
    the following screenshot:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“显示编辑器”按钮以打开脚本窗口。如下截图所示：
- en: '![](img/589671a7-84fe-4b2b-87db-01b5637c6820.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/589671a7-84fe-4b2b-87db-01b5637c6820.png)'
- en: The Python Console
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Python控制台
- en: 'Copy the following code into the script editor:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码复制到脚本编辑器中：
- en: '[PRE7]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Or, alternatively, you can download data from [https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter07/01_Loading_Data.py](https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter_07/01_Loading_Data.py).
    Be sure to re point to your data location. Click on the Save As button in the
    editor to save the file to your project as `01_Loading_data.py`. Then, click Run
    (the green triangle). The result should look like the following screenshot:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你也可以从[https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter07/01_Loading_Data.py](https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter_07/01_Loading_Data.py)下载数据。请确保重新指定你的数据位置。在编辑器中点击“另存为”按钮，将文件保存到你的项目中，文件名为`01_Loading_data.py`。然后，点击运行（绿色三角形）。结果应该看起来像下面的截图：
- en: '![](img/b8402042-f526-459c-a64a-da0e82e9bef0.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b8402042-f526-459c-a64a-da0e82e9bef0.png)'
- en: The script in the Python Console
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Python控制台中的脚本
- en: 'To learn more about the vector class, have a look at the documentation here:
    [https://qgis.org/api/classQgsVectorLayer.html](https://qgis.org/api/classQgsVectorLayer.html).'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于矢量类的信息，请查看以下文档：[https://qgis.org/api/classQgsVectorLayer.html](https://qgis.org/api/classQgsVectorLayer.html)。
- en: Loading raster data
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载栅格数据
- en: 'Let''s build another script to load raster data. Copy the following code:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再编写一个脚本以加载栅格数据。复制以下代码：
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The code in this script is loading in two layers, `Hillshade` and `Landcover`,
    printing the names to the console, and printing the image dimensions.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本中的代码在两个图层`Hillshade`和`Landcover`中加载，将名称打印到控制台，并打印图像尺寸。
- en: 'You can download data from here: [https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter07/02_Loading_data_raster.py](https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter_07/02_Loading_data_raster.py).
    Be sure to repoint to your data location if different to the script. Click on
    the Save As button in the editor to save the file to your project as `02_Loading_data_raster.py`.
    Then, click Run (the green triangle). The result should look like the following
    screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从这里下载数据：[https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter07/02_Loading_data_raster.py](https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter_07/02_Loading_data_raster.py)。如果数据位置与脚本不同，请确保重新指定。在编辑器中点击“另存为”按钮，将文件保存到你的项目中，文件名为`02_Loading_data_raster.py`。然后，点击运行（绿色三角形）。结果应该看起来像下面的截图：
- en: '![](img/611d78a4-b338-4d5e-907d-c65daf4e1633.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/611d78a4-b338-4d5e-907d-c65daf4e1633.png)'
- en: The script in the Python Console
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Python控制台中的脚本
- en: 'To explore more about the `Raster` class, have a look at the documentation
    here: [https://qgis.org/api/classQgsRasterLayer.html](https://qgis.org/api/classQgsRasterLayer.html).'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于`Raster`类的信息，请查看以下文档：[https://qgis.org/api/classQgsRasterLayer.html](https://qgis.org/api/classQgsRasterLayer.html)。
- en: We can write scripts to automate many processes in QGIS from rendering, map
    creation, and processing. In fact, all parts of this book could be automated.
    Let's finish this section on Python and scripting with one last spatial processing
    script. This time, we will buffer the `airports` layers.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以编写脚本来自动化QGIS中的许多过程，包括渲染、地图创建和处理。实际上，这本书的所有部分都可以自动化。让我们用最后一个空间处理脚本来结束Python和脚本编写这一节。这次，我们将对`airports`图层进行缓冲。
- en: Buffer script
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缓冲脚本
- en: 'Open a new project in QGIS. Copy the following code to the editor:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在QGIS中打开一个新的项目。将以下代码复制到编辑器中：
- en: '[PRE9]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The code in this script loads the `airports` layer, sets the buffering parameters
    (`param`), calls the `qgis` buffer with the `processing.run` command, and then
    adds a layer called `OUTPUT` to the map.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本中的代码加载了`airports`图层，设置了缓冲参数（`param`），使用`processing.run`命令调用`qgis`缓冲，然后将名为`OUTPUT`的图层添加到地图中。
- en: 'You can download data from here: [https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter07/03_Buffer_Airport.py](https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter_07/03_Buffer_Airport.py).
    Be sure to repoint to your data location. Save the file to your project as `03_Buffer_airport.py`.
    Then, click Run (the green triangle). The result should look like the following
    screenshot:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从这里下载数据：[https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter07/03_Buffer_Airport.py](https://github.com/PacktPublishing/QGIS-Quick-Start-Guide/blob/master/Chapter_07/03_Buffer_Airport.py)。请确保将数据位置重定向。将文件保存到您的项目中为`03_Buffer_airport.py`。然后，点击运行（绿色三角形）。结果应该看起来像以下截图：
- en: '![](img/11ff0a02-32cc-44f4-b318-dac8a92db02b.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/11ff0a02-32cc-44f4-b318-dac8a92db02b.png)'
- en: The script in the Python Console
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Python控制台中的脚本
- en: 'If you wish to learn more about programming with Python in QGIS, this is a
    good resource with plenty of script examples: [https://docs.qgis.org/testing/pdf/en/QGIS-testing-PyQGISDeveloperCookbook-en.pdf](https://docs.qgis.org/testing/pdf/en/QGIS-testing-PyQGISDeveloperCookbook-en.pdf).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于在QGIS中使用Python编程的信息，这是一个很好的资源，其中包含大量的脚本示例：[https://docs.qgis.org/testing/pdf/en/QGIS-testing-PyQGISDeveloperCookbook-en.pdf](https://docs.qgis.org/testing/pdf/en/QGIS-testing-PyQGISDeveloperCookbook-en.pdf)。
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this final chapter, we have looked at extending QGIS. We looked at three
    options: building models using the model builder, accessing plugins, and the Python
    Console. The ability to extend QGIS is perhaps the most convincing reason to use
    the software. You can customize it to your needs, you can download plugins that
    others have written, and you can automate the boring repetitive stuff. Models,
    scripts, and Plugins are all shareable.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后，我们探讨了扩展QGIS。我们探讨了三个选项：使用模型构建器构建模型、访问插件和Python控制台。扩展QGIS的能力可能是使用该软件的最有说服力的理由。您可以按需定制它，可以下载他人编写的插件，并且可以自动化无聊的重复性工作。模型、脚本和插件都是可共享的。
