- en: Overview of Python and Installing Jupyter Notebook
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: Python和安装Jupyter Notebook概述
- en: Now that you have a better understanding of concepts behind data literacy and
    the evolution of data analysis, let's set up our own environment to allow you
    to work with data. In this chapter, we are going to provide an introduction to
    the Python programming language along with a popular tool called Jupyter Notebook
    that's used to run commands for data analysis. We will walk through the installation
    process step by step and discuss key concepts to understand why they are required
    for data analysis. By the end of this chapter, you will have a workstation available
    to run a `hello world` program that will help in building your confidence to move
    forward into deeper concepts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你对数据素养背后的概念和数据分析的演变有了更好的理解，让我们设置自己的环境，以便你可以处理数据。在本章中，我们将介绍Python编程语言，以及一个流行的工具Jupyter
    Notebook，它用于运行数据分析的命令。我们将逐步讲解安装过程，并讨论关键概念，以了解为什么它们对于数据分析是必需的。到本章结束时，你将拥有一个工作站，可以运行一个`hello
    world`程序，这将有助于增强你进一步学习更深入概念的信心。
- en: 'In this chapter, we will cover the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Installing Python and using Jupyter Notebook
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Python和使用Jupyter Notebook
- en: Storing and retrieving data files
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储和检索数据文件
- en: Hello World! – running your first Python code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hello World！——运行你的第一个Python代码
- en: Exploring Python packages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Python包
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Here's the GitHub repository of this book: [https://github.com/PacktPublishing/Practical-Data-Analysis-using-Jupyter-Notebook/tree/master/Chapter02](https://github.com/PacktPublishing/Practical-Data-Analysis-using-Jupyter-Notebook/tree/master/Chapter02).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书的GitHub仓库链接：[https://github.com/PacktPublishing/Practical-Data-Analysis-using-Jupyter-Notebook/tree/master/Chapter02](https://github.com/PacktPublishing/Practical-Data-Analysis-using-Jupyter-Notebook/tree/master/Chapter02).
- en: Further, you can download and install the required software from the following link: [https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你可以从以下链接下载并安装所需的软件：[https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)。
- en: Installing Python and using Jupyter Notebook
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Python和使用Jupyter Notebook
- en: I'm going to start by admitting this chapter may become obsolete in the future
    because installing open source software on your workstation can be a painful process
    and, in some cases, is being replaced by preinstalled virtual machines or cloud
    versions. For example, Microsoft offers a free Azure subscription option for a
    cloud-hosted Jupyter Notebook.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我首先要承认，这个章节在未来可能会变得过时，因为在你工作站上安装开源软件可能是一个痛苦的过程，在某些情况下，它正被预装虚拟机或云版本所取代。例如，微软提供免费Azure订阅选项，用于云托管的Jupyter
    Notebook。
- en: Understanding all of the dependencies of software versions, hardware, **Operating
    System** (**OS**) differences, and library dependencies can be complex. Further,
    your IT department rules on software installations in enterprise environments
    may have security restrictions that prohibit access to your workstation filesystem.
    In all likelihood, with more innovation in cloud computing, most of the steps
    will already be done ahead of time, eliminating the need to install software altogether.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 理解软件版本、硬件、**操作系统**（**OS**）差异和库依赖的所有依赖项可能很复杂。此外，你的IT部门在企业环境中对软件安装的规定可能有安全限制，禁止访问你的工作站文件系统。很可能会随着云计算的更多创新，大多数步骤已经在事先完成，从而消除了安装软件的需要。
- en: With that said, I'm going to walk you through the process of installing Python
    and Jupyter Notebook, pointing out tips and pitfalls to educate you on key concepts
    along the way. I would compare using these technology tools to work with data to
    driving a car. The ability to drive should not be dependent on your ability to
    repair the car engine! Just knowing that you need an engine should be sufficient
    to drive and move forward. So, my focus is on setting up your workstation for
    data analysis quickly without focusing on the layers of details behind these powerful
    technologies.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，我将带你通过安装Python和Jupyter Notebook的过程，沿途指出提示和陷阱，以教育你关键概念。我会将使用这些技术工具处理数据比作开车。驾驶的能力不应该依赖于你修理汽车引擎的能力！仅仅知道你需要一个引擎就足够你驾驶并前进。所以，我的重点是快速设置你的工作站以进行数据分析，而不关注这些强大技术背后的细节层次。
- en: The open source project that created the Jupyter Notebook app evolved from iPython
    back in 2014\. Many of the features that existed in iPython still exist today
    in Jupyter, for example, the interactive GUI to run Python commands and parallel
    processing. There is a kernel to control the input/output between your computer's
    CPU, memory, and filesystem. Finally, there's also the feature of a notebook that
    collects all of the commands, code, charts, and comments in a single shareable
    file with the `.ipynb` extension.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 创建Jupyter笔记本应用程序的开源项目始于2014年的iPython。iPython中存在的许多功能今天仍然存在于Jupyter中，例如，用于运行Python命令的交互式GUI和并行处理。有一个内核来控制你的计算机CPU、内存和文件系统之间的输入/输出。最后，笔记本还有一个功能，可以将所有命令、代码、图表和注释收集到一个单一的、带有`.ipynb`扩展名的可共享文件中。
- en: Just to give some context of how popular Jupyter notebooks have become for data
    analysis, I discovered a public GitHub repository by Peter Parente that collects
    a daily count of the number of public `.pynb` files found in GitHub since 2014\.
    The growth is exponential, as the number grew from just over 65,000 to 5.7 million
    by November 2019, which means it has been doubling every year for the last five
    years!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供一些关于Jupyter笔记本在数据分析中如何变得流行的背景信息，我发现了一个由Peter Parente创建的公共GitHub仓库，该仓库收集了自2014年以来在GitHub上找到的每日`.pynb`文件数量。增长是指数级的，因为到2019年11月，数量从65,000多增长到570万，这意味着在过去五年中每年都在翻倍！
- en: 'The first prerequisite to using a Jupyter notebook is installing Python. We
    are going to use Python version 3.3 or greater and there are two methods you can
    use to install the software: a direct download or a package manager. A direct
    download will have more control over the installation on your workstation but
    then it requires additional time to manage dependent libraries. That said, using
    a package manager to install Python has become preferred method, hence, I cover
    this method in this chapter.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Jupyter笔记本的第一个先决条件是安装Python。我们将使用3.3或更高版本的Python，并且有两种方法可以用来安装软件：直接下载或包管理器。直接下载将使你在工作站上的安装有更多的控制权，但这也需要额外的时间来管理依赖库。话虽如此，使用包管理器安装Python已经成为首选方法，因此，我在本章中介绍了这种方法。
- en: Python is a powerful coding language with support on multiple OS platforms,
    including Windows, macOS, and Linux. I encourage you to read more about the history
    of this powerful software language and the creator, Guido van Rossum.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Python是一种功能强大的编程语言，支持多个操作系统平台，包括Windows、macOS和Linux。我鼓励你阅读更多关于这种强大软件语言的历史以及其创造者Guido
    van Rossum的信息。
- en: 'Python, at its core, is a command-line programming language, so you must be
    comfortable with running some commands from a prompt. When we have finished installation,
    you will have a Python command-line window, which will look like the following
    screenshot if your workstation has Windows OS:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Python在本质上是一种命令行编程语言，因此你必须习惯于从提示符运行一些命令。当我们完成安装后，你将拥有一个Python命令行窗口，如果你的工作站运行Windows操作系统，它将看起来如下截图所示：
- en: '![](img/fa36b410-bffb-450e-a3bd-5644cafed652.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fa36b410-bffb-450e-a3bd-5644cafed652.png)'
- en: Think of the Python installation as a means to an end because what we really
    want to use as data analysts is a Jupyter notebook, which is also known as an
    **Integrated Development Environment** (**IDE**) used to run code and call libraries
    in a self-contained **Graphical User Interface** (**GUI**).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将Python安装视为达到目的的手段，因为我们真正想要用作数据分析师的是Jupyter笔记本，它也被称为用于运行代码和调用库的**集成开发环境**（**IDE**），它是一个自包含的**图形用户界面**（**GUI**）。
- en: Since I recommend using a package manager for installation, the first decision
    you must make is which package manager to use for the installation on your computer.
    A package manager is designed to streamline the versions and layers of dependencies
    between the open source libraries, your OS, and software. The most common ones
    are `conda`, `pip`, or `docker`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我推荐使用包管理器进行安装，你必须做出的第一个决定是选择哪个包管理器来在你的计算机上安装。包管理器旨在简化开源库、你的操作系统和软件之间的版本和依赖层。最常见的是`conda`、`pip`或`docker`。
- en: From researching the differences, I prefer `conda` over `pip` for someone just
    getting started, especially if you are unfamiliar with running command-line commands
    and managing software installs directly on your PC. For an app-store-like experience,
    where all you have to do is download, install with a few prompts, and then launch
    the software, I would recommend Anaconda especially since it includes Python,
    several popular libraries required for data analysis, and Jupyter all as part
    of the download package.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Remember, the goal is to get Jupyter Notebook up and running on your workstation,
    so feel free to choose installation alternatives, especially if you prefer a **Command-Line
    Interface** (**CLI**).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Installing Anaconda
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to install Anaconda. For this walkthrough, I have selected
    a Windows OS installer but the screenshots of installation will be similar regardless
    of which one is selected:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: 'Download the software by choosing which installer is required based on your
    workstation''s OS. To do this, navigate to the Anaconda Distribution page, which
    should look similar to the following screenshot and is found on [https://www.anaconda.com/](https://www.anaconda.com/):'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/10ad98c5-b081-4d46-abb2-fedd0f5009cc.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
- en: 'You should see the Setup wizard as shown inthe following screenshot after you
    download the software and launch the installer on your PC:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f03f00bf-ce2c-4981-a1b0-e88013a970b3.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: 'Select the default options in the install wizard and you should see a message
    similar to the following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/17b9dc57-440a-480f-a62b-1056333b715b.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
- en: 'Now that Anaconda has completed the installation, you must launch the Anaconda
    Navigator application from your PC, which is shown in the following screenshot using
    a Windows OS. Since there are multiple OS options available such as Windows, macOS,
    or Ubuntu, your screen will vary from the following screenshot:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9695d77c-a300-48bb-aa80-3c755ea6a732.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
- en: I think of the installation process as similar to why an artist would need to
    buy a canvas, easel, and supplies to begin painting. Now that we have a working
    Python environment installed and available to use called Anaconda, you are ready
    to launch Jupyter and create your first notebook.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Running Jupyter and installing Python packages for data analysis
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once the software is installed on your PC, launching your Jupyter notebook
    can be done in either of two ways. The first is via a command-line prompt with
    the `jupyter notebook` command from Anaconda Prompt, which will look similar to
    the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5c46c68a-fbd6-4901-967b-dcd8890b91c6.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: 'You can also use the Anaconda Navigator software and click the Launch button
    from My Applications in Jupyter Notebook, which is shown in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b5a6c3de-96f5-4ec5-b010-f71702061099.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
- en: 'Either option will launch a new web browser session with the `http://localhost:8888/tree` URL, which
    is known as the Jupyter dashboard. If you do not see something similar to the
    following screenshot**,** you may need to reinstall the Anaconda software or check
    whether firewall ports are blocking commands or dependencies. In an enterprise
    setting, you may have to review your corporate policies or request IT support:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8d3cb440-3ca7-4e07-a425-726613ec9423.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: If you would like to try JupyterLab instead of Jupyter Notebook, either solution
    will work. JupyterLab uses the exact same Notebook server and file format as the
    classic Jupyter Notebook so that it is fully compatible with the existing notebooks
    and kernels. The classic Notebook and JupyterLab can run side to side on the same
    computer. You can easily switch between the two interfaces.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Notice that Jupyter defaults with access to your workstation's filesystem based
    on how it was installed. This should be sufficient in most cases but if you would
    like to change the default project `home`/`root` folder, you can easily change
    it using Anaconda Prompt.Just run the `cd` command to change directory before
    you type the `jupyter notebook` command.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, I created a `project` folder on my local `c:\` drive path on my
    Windows PC first and then ran the Anaconda Prompt window with the following commands:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you walk through this example, your Command Prompt window should look like
    the following screenshot if you''re using Windows OS:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6b16a838-8be3-4f93-a346-96012c3003da.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
- en: 'Once complete, the list of files and folders displayed in the Jupyter session
    will be blank and your session will look similar to the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/614d30e9-6514-40ce-85e7-8998e9f2aa45.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: You should now have the Jupyter software actively running on your workstation,
    ready to walk through all of the features available, which we will cover next.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Storing and retrieving data files
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What I like about using Jupyter is that it is a self-contained solution for
    data analysis. What I mean by that statement is you can interact with the filesystem
    to add, update, and delete folders and files plus run Python commands all in one
    place. As you continue using this tool, I think you will find it much easier to
    navigate by staying in one ecosystem compared to hopping between multiple windows,
    apps, or systems on your workstation.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s begin with getting comfortable navigating the menu options to add, edit,
    or delete files. Jupyter defaults the dashboard by listing all files and folders
    that are accessible on your workstation from the directory paths it was installed.
    This is can be configured to change the starting folder but we will use the Windows
    default. In the following screenshot, I have highlighted the important sections
    of the Jupyter dashboard with letters for easy reference:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4a735e04-42f9-4dff-829b-9bfb213c3ad8.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: In the **A** section, the URL defaults to `http://localhost:888/tree` when running
    on your personal workstation. This URL will change if the notebook is hosted on
    a server or cloud. Notice, as you make selections to folders or files in the **B** section,
    the URL address will change to follow the location and path of your selections.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在**A**节中，当在个人工作站上运行时，URL默认为`http://localhost:888/tree`。如果笔记本托管在服务器或云上，此URL将更改。注意，当您在**B**节中选择文件夹或文件时，URL地址将更改为跟随您选择的位置和路径。
- en: In the **B** section, you will find a hierarchy of accessible folders or files
    that are visible to the dashboard. If you click on any file, it will attempt to
    open it in the editor, whether or not the file is usable by Jupyter. Readable
    file extensions by the editor include images in formats such as `.jpeg`, `.png`,
    and `.svg`; semi-structured data files such as `.json`, `.csv`, and `.xml`; and
    code such as `.html`, `.py` (Python), and `.js` (JavaScript). Note that the URL
    path will change from the `tree` parameter word to `edit` as it opens the file.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在**B**节中，您将找到仪表板可见的文件夹或文件的层次结构。如果您点击任何文件，它将尝试在编辑器中打开它，无论该文件是否可由Jupyter使用。编辑器可读取的文件扩展名包括`.jpeg`、`.png`和`.svg`格式的图像；半结构化数据文件，如`.json`、`.csv`和`.xml`；以及代码，如`.html`、`.py`（Python）和`.js`（JavaScript）。请注意，当打开文件时，URL路径将从`tree`参数词更改为`edit`。
- en: 'If the editor does not recognize a file, it will provide an error in the first
    line and tell you why, similar to the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果编辑器无法识别文件，它将在第一行提供错误信息，并告诉您原因，类似于以下截图：
- en: '![](img/4eca4ee4-8e01-4f62-9e8d-4ecc13d9aaed.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4eca4ee4-8e01-4f62-9e8d-4ecc13d9aaed.png)'
- en: 'In the **C** section, you can select and filter one or more files or folders
    displayed on the dashboard. This can be used to organize your project workspace
    when creating multiple notebooks and organizing data files for analysis. Once
    any file or folder is selected, the title Select items to perform actions on them
    will change to the action buttons **Rename** and **Duplicate** and a red trashcan
    icon, which deletes the files or folder, as shown in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在**C**节中，您可以选择和过滤仪表板上显示的一个或多个文件或文件夹。这可以在创建多个笔记本和组织用于分析的数据文件时用于组织项目工作空间。一旦选择了任何文件或文件夹，标题“选择项目以执行操作”将更改为操作按钮**重命名**、**复制**和一个红色垃圾桶图标，它将删除文件或文件夹，如以下截图所示：
- en: '![](img/1ac2ee11-4b4e-486d-8afe-8081180cfd7b.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1ac2ee11-4b4e-486d-8afe-8081180cfd7b.png)'
- en: In the dashboard, you will also notice the tabs labeled Files, Running, and
    Clusters. These are used by the Jupyter app to keep you oriented and track processes
    that are actively running. Clusters is an advanced feature and beyond the scope
    of this book. We have already covered the Files tab from section **B**.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在仪表板上，您还会注意到标记为“文件”、“运行”和“集群”的标签页。这些标签页由Jupyter应用程序使用，以帮助您保持方向并跟踪正在积极运行的过程。集群是一个高级功能，超出了本书的范围。我们已经在**B**节中介绍了“文件”标签页。
- en: 'Let''s discuss the Running tab. It has two sections: Terminals, which would
    be system shell commands such as Powershell in the Windows OS, and Notebooks,
    which will show you all active notebooks that are in use. Once we create a few
    notebooks, I encourage you to refresh the browser to see which notebook files
    are active to better understand this feature. Use the Shutdown button if it becomes
    necessary to kill an active notebook that is unresponsive or taking up too much
    of your computer resources (CPU/RAM).'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一下“运行”标签页。它有两个部分：终端，它将包含Windows操作系统中的Powershell等系统shell命令；以及笔记本，它将显示所有正在使用的活动笔记本。一旦我们创建了一些笔记本，我鼓励您刷新浏览器以查看哪些笔记本文件是活动的，以便更好地理解这一功能。如果需要终止一个无响应或占用过多计算机资源（CPU/RAM）的活动笔记本，请使用“关闭”按钮。
- en: In the **D** section, you will see an Upload button that allows you to add files
    to the dashboard in any folder you have navigated. The New button includes a submenu
    to create a Text File, Folder, or Python 3 Notebook.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在**D**节中，您将看到一个“上传”按钮，允许您将文件添加到仪表板中的任何已导航文件夹。新按钮包含一个子菜单，可以创建文本文件、文件夹或Python
    3笔记本。
- en: Hello World! – running your first Python code
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hello World！– 运行您的第一个Python代码
- en: 'Now that we have a better understanding of the dashboard and its navigation,
    let''s create our first notebook and run some Python code. The easiest method
    is to click on the New button and select Python 3 in the submenu. This will open
    a new tab or window in your browser that looks similar to the following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/24497712-89c5-4d68-bbe5-f734efb41129.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: 'I recommend renaming the Untitled files of any notebook to make it easier to
    find them later. To do this, select Rename from the File menu, as shown in the
    following screenshot, and rename it `hello_world` or a relevant project name.
    Once you click on the OK button, the title bar at the top of the page will display
    the new name:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b6637b32-60cb-4a5a-8178-376e9c37e9f8.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: By renaming the notebook, a new file with the `.ipynb` extension will be created,
    which contains all of the contents in JSON format. This helps make the notebook
    file shareable to others and helps with version control, which is an audit trail
    of changes made in the file.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 'You can view the actual JSON metadata contents by selecting Edit Notebook Metadata from
    the Edit menu. The results will look similar to the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8ed1d340-88bd-40da-8de1-1be467390a5b.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: 'The UI for the notebook looks very similar to other modern web software used
    today as it was designed for easy navigation. The following menu options are easy
    to use icons that are collectively called the Notebook Toolbar, which supports
    keyboard shortcuts for optimal workflow as you get more comfortable using the
    tool. You can find the User Interface Tour and Keyboard Shortcuts in the Help menu,
    as shown in the following screenshot. I recommend going through them to take a
    look at all of the features available:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd688ac9-0ccf-4829-a7f2-0f25a158fed2.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: Once you feel comfortable with the Help menu options, let's write your first
    code by typing in the `print("hello world")` command in the notebook cell, which
    has a default of `In []:`. Remember, if you are using a mouse to navigate the
    notebook, you must click on the cell to select it and have a cursor appear.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Pressing the *Enter* key after a command will only create a second line for
    more input. You must either use a keyboard shortcut, the Cell menu, or a Toolbar
    icon to execute any command.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have entered the `print("hello world")` command in the cell and clicked
    on any one of the following options. The options to run the command in any cell
    are as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Click the [![](img/2624475e-01cc-4beb-9fc0-6c57639db0f6.png)] button from the
    toolbar.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select Run Cells from the Cell menu.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press the *Shift *+ *Enter* or *Ctrl *+ *Enter* keys.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The screen should look similar to the following screenshot:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/84fcd699-effb-48a3-893e-6c03deaf6f14.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: Congratulations, you have created your first Jupyter notebook and run your first
    command! Click on the Close and Halt option from the File menu to return to the
    dashboard.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Creating a project folder hierarchy
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have covered the basics, let''s walk through a directory to find
    a particular file and create a project folder hierarchy to prepare for future
    data analysis learning modules. I recommend creating a starting `projects` folder
    on your workstation to keep all of your notebooks and data organized. A standard
    enterprise directory structure will vary by company but setting up a basic structure
    with subfolders makes the process portable and helps with sharing work with others.
    An example project folder template is shown in the following screenshot:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经覆盖了基础知识，让我们遍历一个目录以找到特定的文件，并创建一个项目文件夹层次结构，为未来的数据分析学习模块做准备。我建议在你的工作站上创建一个起始的`projects`文件夹，以保持所有笔记本和数据井然有序。标准的企业目录结构因公司而异，但设置一个带有子文件夹的基本结构使过程可移植，并有助于与他人共享工作。以下截图显示了项目文件夹模板示例：
- en: '![](img/459e5358-387b-49b4-963c-bf108290fff2.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/459e5358-387b-49b4-963c-bf108290fff2.png)'
- en: Throughout this book, I will use chapter numbers as `projectname` to make each
    directory subfolder, such as `data` and `notebooks`, modular, independent, and
    easy to follow. Your workstation directory structure and tree should match with
    this book's GitHub repository to make it easier to synchronize your files and
    folders.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我将使用章节编号作为`projectname`来使每个目录子文件夹，如`data`和`notebooks`，模块化、独立且易于跟踪。你的工作站目录结构和树应该与本书的GitHub仓库相匹配，以便更容易同步你的文件和文件夹。
- en: 'In the classic *do as I say, not as I do* fashion and because of limitations
    with relative paths across different OS versions, the examples use the same folder
    to prevent errors throughout this book. To proceed, you can either clone or download
    all of the files and subfolders from this book''s GitHub repository, create all
    of the folders and files in the Jupyter dashboard, or create them on your workstation.
    Once completed, your project folder for this chapter should look like the following
    screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照“照我说的做，别照我做的做”的经典方式，以及由于不同操作系统版本之间相对路径的限制，示例使用相同的文件夹以防止本书中出错。要继续，你可以克隆或下载本书GitHub仓库中的所有文件和子文件夹，在Jupyter仪表板上创建所有文件夹和文件，或者在您的工作站上创建它们。完成后，本章的项目文件夹应该看起来如下面的截图所示：
- en: '![](img/c916a856-888e-4cc4-bdf4-4342f3543fca.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c916a856-888e-4cc4-bdf4-4342f3543fca.png)'
- en: Uploading a file
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上传文件
- en: 'Now that we have a project folder, let''s walk through the following steps
    to upload a file for analysis. You must download the file ahead of time from the
    GitHub repository URL found in the *Technical requirements* section:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了项目文件夹，让我们遍历以下步骤来上传一个用于分析的文件。你必须提前从*技术要求*部分找到的GitHub仓库URL下载文件：
- en: Click on the `data` folder name.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`data`文件夹名称。
- en: Click on the `source` subfolder name.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`source`子文件夹名称。
- en: Click the Upload button at the top-right side of the screen.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右上角的“上传”按钮。
- en: Select `evolution_of_data_analysis.csv`.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`evolution_of_data_analysis.csv`。
- en: 'Click the blue Upload button to proceed. Once done, you''ll see a file in the
    dashboard, as shown in the following screenshot:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击蓝色的“上传”按钮继续。完成后，你将在仪表板上看到一个文件，如下面的截图所示：
- en: '![](img/b472628b-fd01-469d-a9e8-ba5bee2e5c54.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b472628b-fd01-469d-a9e8-ba5bee2e5c54.png)'
- en: Navigate back to the `notebooks` folder and create a new notebook file by clicking
    on the New menu. Similar to the `hello_world` example, select Python 3 in the
    submenu to create a default `Untitled` notebook.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到`notebooks`文件夹，通过点击“新建”菜单创建一个新的笔记本文件。类似于`hello_world`示例，在子菜单中选择Python 3以创建默认的`未命名`笔记本。
- en: As mentioned earlier, I always rename the `Untitled` notebook before moving
    forward, so rename the notebook `evolution_of_data_analysis`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我总是在移动之前重命名`未命名`笔记本，所以将笔记本重命名为`evolution_of_data_analysis`。
- en: 'To read data from a file in the notebook, you must run a few Python commands.
    These can be run all in one cell or as three separate cell entries. The commands
    to open the CSV file we uploaded earlier are as follows:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从笔记本中读取文件中的数据，你必须运行几个Python命令。这些命令可以全部在一个单元中运行，也可以作为三个单独的单元条目运行。打开我们之前上传的CSV文件的命令如下：
- en: '[PRE1]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Let's walk through the commands line by line. First, we assigned an open command
    value of the file to the `f` variable to shorten the length of additional commands
    in the next few lines. Notice the `evolution_of_data_analysis.csv` file includes
    the directory path of `"../data/source/"`, which is required because the location
    of the active notebook, `evolution_of_data_analysis`, is in a different folder.
    The open command also includes a parameter of `r`, which means we only want to
    read the file and not edit the content.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐行查看命令。首先，我们将文件打开命令的值赋给`f`变量，以缩短下一行中附加命令的长度。注意`evolution_of_data_analysis.csv`文件包含了目录路径`"../data/source/"`，这是必需的，因为活动笔记本`evolution_of_data_analysis`位于不同的文件夹中。打开命令还包括一个参数`r`，这意味着我们只想读取文件，而不编辑内容。
- en: 'The second line is to print the contents of the file by passing the `f` variable along
    with the `read()` function. This will display the results in the output cell,
    which will be similar to the following screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行是通过传递`f`变量和`read()`函数来打印文件内容。这将结果显示在输出单元格中，类似于以下截图：
- en: '![](img/a6680d18-35ac-4ad2-a65f-1ed2ce1a3434.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a6680d18-35ac-4ad2-a65f-1ed2ce1a3434.png)'
- en: The last line is a best practice to close the file to avoid any conflicts using
    the file later or in the filesystem of your OS. Once you verify that you can see
    the contents of the CSV file in your notebook, click on the Close and Halt option
    from the File menu to return to the dashboard.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一行是一个最佳实践，用于关闭文件，以避免在以后使用文件或在操作系统文件系统中出现冲突。一旦你验证可以在笔记本中看到CSV文件的内容，请从文件菜单中选择关闭和停止选项，返回到仪表板。
- en: Exploring Python packages
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Python包
- en: Before wrapping up this chapter, let's explore the different Python packages
    required with data analysis and validate they are available to use in the Jupyter
    Notebook app. These packages have evolved over time and are open source so programmers
    can contribute and improve the source code.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在结束本章之前，让我们探索与数据分析相关的不同Python包，并验证它们是否可在Jupyter笔记本应用程序中使用。这些包随着时间的推移而发展，并且是开源的，因此程序员可以贡献并改进源代码。
- en: The version of the Python packages will increment over time depending on when
    you install `conda` or `pip` (package manager) on your machine. If you receive
    errors running commands, validate they match the versions used in this book.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Python包的版本将随着时间的推移而增加，具体取决于你在机器上安装`conda`或`pip`（包管理器）的时间。如果你在运行命令时收到错误，请验证它们是否与本书中使用的版本匹配。
- en: We will go into more depth about each individual package as we use their awesome
    features in future chapters. The focus in this chapter is to verify the specific
    libraries are available, and there are a few different approaches to use such
    as inspecting the installation folder for specific files on your workstation or
    running commands from a Python command line. I find the easiest method is to run
    a few simple commands in a new notebook.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在未来的章节中使用它们的出色功能时，我们将更深入地介绍每个单独的包。本章的重点是验证特定的库是否可用，并且有几种不同的方法可以使用，例如检查工作站上的特定文件安装文件夹或从Python命令行运行命令。我发现最简单的方法是在新笔记本中运行几个简单的命令。
- en: Navigate back to the `notebooks` folder and create a new notebook file by clicking
    on the New menu and select Python 3 in the submenu to create a default `Untitled` notebook.
    To stay consistent with best practices, be sure to rename the notebook `verify_python_packages` before
    moving forward.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 导航回`notebooks`文件夹，通过点击菜单中的新建并从子菜单中选择Python 3来创建一个新的笔记本文件，以创建默认的`Untitled`笔记本。为了保持最佳实践的连贯性，在继续之前，请确保将笔记本重命名为`verify_python_packages`。
- en: Checking for pandas
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查pandas
- en: The steps to verify whether each Python package is available are similar with
    slight variations to the code. The first one will be `pandas`, which will make
    it easier to complete common data analysis techniques such as pivoting, cleaning,
    merging and grouping datasets all in one place without going back to the source
    of record.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 验证每个Python包是否可用的步骤与代码略有不同。第一个将是`pandas`，这将使完成常见的数据分析技术（如数据透视、清理、合并和分组数据集）变得更加容易，而无需返回到原始记录。
- en: 'To verify whether the `pandas` library is available in Jupyter, follow these
    steps:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证`pandas`库是否在Jupyter中可用，请按照以下步骤操作：
- en: Type in `import pandas as pd` in the `In []:` cell.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`In []:`单元格中输入`import pandas as pd`。
- en: 'Run the cell using the preferred method discussed earlier in the *Installing
    Python and using Jupyter Notebook* section:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用在*安装Python和使用Jupyter Notebook*部分中讨论的先前方法运行单元格：
- en: Click the button from the toolbar.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select Run Cells from the Cell menu.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press the *Shift *+ *Enter* or *Ctrl *+ *Enter* keys.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type in the `np.__version__` command in the next `In []:` cell.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the cell using the preferred method from *step 2*.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify the output cell displayed as `Out []`.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The version of `pandas` should be **0.18.0** or greater.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: 'Now you will repeat these steps for each of the following required packages
    used in this book: `numpy`, `sklearn`, `matplotlib`, and `scipy`. Note that I
    have used the commonly known shortcut names for each library to make it consistent
    with best practices found in the industry.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: For example, `pandas` has been shortened to `pd`, so as you call features from
    each library, you can just use the shortcut name.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: Additional packages can and should be used depending on the type of analysis
    required, variations of the data input, and advancement of the Python ecosystem.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Checking for NumPy
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**NumPy** is a powerful and common mathematical extension of Python created
    to perform fast numeric calculations against a list of values that is known as
    an array. We will learn more about the power of NumPy features in [Chapter 3](dd40977f-7c89-4933-944f-d9760d3ca217.xhtml), *Getting
    Started with NumPy*.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: 'To verify whether the `numpy` library is available in Jupyter, follow these
    steps:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Type in `import numpy as np` in the `In []:` cell.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the cell using the preferred method discussed earlier in the *Installing
    Python and using Jupyter Notebook* section:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the button from the toolbar.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select Run Cells from the Cell menu.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press the *Shift *+ *Enter* or *Ctrl *+ *Enter* keys.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type in the `np.__version__` command in the next `In []:` cell.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the cell using the preferred method from *step 2*.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify the output cell displayed as `Out []`.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The version of NumPy should be **1.10.4** or greater.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Checking for sklearn
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`sklearn` is an advanced open source data science library used for clustering
    and regression analysis. While we will not leverage all of the advanced capabilities
    of this library, having it installed will make it easier for future lessons.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: 'To verify if the `sklearn` library is available in Jupyter, follow these steps:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Type in `import sklearn as sk` in the `In []:` cell.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the cell using the preferred method discussed earlier in the *Installing
    Python and using Jupyter Notebook* section:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the button from the toolbar.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select Run Cells from the Cell menu.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press the *Shift *+ *Enter* or *Ctrl *+ *Enter* keys.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type in the `sk.__version__` command in the next `In []:` cell.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the cell using the preferred method from *step 2*.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify the output cell displayed as `Out []`.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The version of `sklearn` should be **0.17.1** or greater.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Checking for Matplotlib
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Matplotlib** Python library package is used for data visualization and
    plotting charts using Python.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: 'To verify whether the `matplotlib` library is available in Jupyter, follow
    these steps:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: Type in `import matplotlib as mp` in the `In []:` cell.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the cell using the preferred method discussed earlier in the *Installing
    Python and using Jupyter Notebook* section:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the button from the toolbar.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select Run Cells from the Cell menu.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press the *Shift *+ *Enter* or *Ctrl *+ *Enter* keys.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type in the `mp.__version__` command in the next `In []:` cell.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the cell using the preferred method from *step 2*.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify the output cell displayed as `Out []`.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The version of `matplotlib` should be **1.5.1** or greater.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: Checking for SciPy
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**SciPy** is a library that''s dependent on NumPy and includes additional mathematical
    functions used for the analysis of data.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'To verify whether the `scipy` library is available in Jupyter, follow these
    steps:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Type `in import scipy as sc` in the `In []:` cell.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the cell using the preferred method discussed earlier in the *Installing
    Python and using Jupyter Notebook* section:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the button from the toolbar.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select Run Cells from the Cell menu.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Press the *Shift *+ *Enter* or *Ctrl *+ *Enter* keys.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type in the `sc.__version__` command in the next `In []:` cell.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the cell using the preferred method from *step 2*.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify the output cell displayed as `Out []`.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The version of `scipy` should be **0.17.0** or greater.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have completed all of the steps, your notebook should look similar
    to the following screenshot:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f32216ab-105d-4160-8239-345deeb542c2.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations, we have now set up an environment that's ready to work with
    data. We started by installing Python and the Jupyter Notebook app by using the
    `conda` package installer called Anaconda. Next, we launched the Jupyter app and
    discussed how to navigate all of the features of both the dashboard and a notebook.
    We created a working directory that can be used as a template for all data analysis
    projects.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: We ran our first Python code by creating a `hello_world` notebook and walk through
    the core features available in Jupyter. Finally, we verified and explored different
    Python packages (NumPy, pandas, sklearn, Matplotlib, and SciPy) and their purposes
    in data analysis. You should now be comfortable and ready to run additional Python
    code commands in Jupyter Notebook.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will expand your data literacy skills with some hands-on
    lessons. We will discuss the foundational library of NumPy, which is used for
    the analysis of data structures called arrays.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: Future reading
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are some links that you can refer to gain more information about the topics
    related to this chapter:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: 'History of Python: [https://docs.python.org/3/license.html](https://docs.python.org/3/license.html)'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Differences between the `pip` and `conda` Python package managers: [https://stackoverflow.com/questions/20994716/what-is-the-difference-between-pip-and-conda](https://stackoverflow.com/questions/20994716/what-is-the-difference-between-pip-and-conda)'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Understanding `conda` and `pip`: [https://www.anaconda.com/understanding-conda-and-pip/](https://www.anaconda.com/understanding-conda-and-pip/)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Jupyter Notebook tutorial: [https://www.dataquest.io/blog/jupyter-notebook-tutorial/](https://www.dataquest.io/blog/jupyter-notebook-tutorial/)'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter Notebook 教程：[https://www.dataquest.io/blog/jupyter-notebook-tutorial/](https://www.dataquest.io/blog/jupyter-notebook-tutorial/)
- en: 'Comparison of cloud-based Jupyter Notebook services: [https://discourse.jupyter.org/t/in-depth-comparison-of-cloud-based-services-that-run-jupyter-notebook/460/7](https://discourse.jupyter.org/t/in-depth-comparison-of-cloud-based-services-that-run-jupyter-notebook/460/7)'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云端 Jupyter Notebook 服务的比较：[https://discourse.jupyter.org/t/in-depth-comparison-of-cloud-based-services-that-run-jupyter-notebook/460/7](https://discourse.jupyter.org/t/in-depth-comparison-of-cloud-based-services-that-run-jupyter-notebook/460/7)
- en: Introduction to JupyterLab**: **[https://ipython-books.github.io/36-introducing-jupyterlab/](https://ipython-books.github.io/36-introducing-jupyterlab/)
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'JupyterLab 简介：**[https://ipython-books.github.io/36-introducing-jupyterlab/](https://ipython-books.github.io/36-introducing-jupyterlab/**) '
- en: 'Reference information to change the starting folder in Jupyter: [https://stackoverflow.com/questions/35254852/how-to-change-the-jupyter-start-up-folder](https://stackoverflow.com/questions/35254852/how-to-change-the-jupyter-start-up-folder)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改 Jupyter 启动文件夹的参考信息：[https://stackoverflow.com/questions/35254852/how-to-change-the-jupyter-start-up-folder](https://stackoverflow.com/questions/35254852/how-to-change-the-jupyter-start-up-folder)
- en: 'History of the Jupyter project: [https://github.com/jupyter/design/wiki/Jupyter-Logo](https://github.com/jupyter/design/wiki/Jupyter-Logo)'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 项目的历史：[https://github.com/jupyter/design/wiki/Jupyter-Logo](https://github.com/jupyter/design/wiki/Jupyter-Logo)
- en: 'Reference information about the location of files and directories after installing
    Jupyter: [https://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html](https://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Jupyter 后文件和目录位置的参考信息：[https://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html](https://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html)
- en: 'Handling different file types in Jupyter: [https://jupyterlab.readthedocs.io/en/stable/user/file_formats.html](https://jupyterlab.readthedocs.io/en/stable/user/file_formats.html)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Jupyter 中处理不同文件类型：[https://jupyterlab.readthedocs.io/en/stable/user/file_formats.html](https://jupyterlab.readthedocs.io/en/stable/user/file_formats.html)
- en: 'Microsoft-hosted Jupyter Notebook site: [https://notebooks.azure.com/](https://notebooks.azure.com/)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软托管 Jupyter Notebook 网站：[https://notebooks.azure.com/](https://notebooks.azure.com/)
- en: 'Count of public Jupyter notebooks on GitHub: [https://github.com/parente/nbestimate](https://github.com/parente/nbestimate)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub 上公共 Jupyter Notebook 的数量：[https://github.com/parente/nbestimate](https://github.com/parente/nbestimate)
