- en: '*Chapter 3*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第三章*'
- en: Introduction to NumPy, Pandas,and Matplotlib
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NumPy、Pandas和Matplotlib简介
- en: Learning Objectives
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习目标
- en: 'By the end of the chapter, you will be able to:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将能够：
- en: Create and manipulate one-dimensional and multi-dimensional arrays
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并操作一维和多维数组
- en: Create and manipulate pandas DataFrames and series objects
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并操作pandas DataFrame和序列对象
- en: Plot and visualize numerical data using the Matplotlib library
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Matplotlib库绘制和可视化数值数据
- en: Apply matplotlib, NumPy, and pandas to calculate descriptive statistics from
    a DataFrame/matrix
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将matplotlib、NumPy和pandas应用于从DataFrame/矩阵中计算描述性统计量
- en: In this chapter, you will learn about the fundamentals of the NumPy, pandas,
    and matplotlib libraries.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解NumPy、pandas和matplotlib库的基础知识。
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简介
- en: In the preceding chapters, we have covered some advanced data structures, such
    as stack, queue, iterator, and file operations in Python. In this section, we
    will cover three essential libraries, namely NumPy, pandas, and matplotlib.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们已经介绍了Python中的一些高级数据结构，例如栈、队列、迭代器和文件操作。在本节中，我们将介绍三个基本库，即NumPy、pandas和matplotlib。
- en: NumPy Arrays
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy数组
- en: In the life of a data scientist, reading and manipulating arrays is of prime
    importance, and it is also the most frequently encountered task. These arrays
    could be a one-dimensional list or a multi-dimensional table or a matrix full
    of numbers.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学家的生活中，读取和操作数组是至关重要的，这也是最常遇到的任务。这些数组可能是一个一维列表、一个多维表格或一个充满数字的矩阵。
- en: The array could be filled with integers, floating-point numbers, Booleans, strings,
    or even mixed types. However, in the majority of cases, numeric data types are
    predominant.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数组可以填充整数、浮点数、布尔值、字符串，甚至混合类型。然而，在大多数情况下，数值数据类型占主导地位。
- en: 'Some example scenarios where you will need to handle numeric arrays are as
    follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一些需要处理数字数组的示例场景如下：
- en: To read a list of phone numbers and postal codes and extract a certain pattern
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取电话号码和邮政编码列表并提取特定模式
- en: To create a matrix with random numbers to run a Monte Carlo simulation on some
    statistical process
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个随机数字矩阵以运行某些统计过程的蒙特卡洛模拟
- en: To scale and normalize a sales figure table, with lots of financial and transactional
    data
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放和归一化销售数据表，包含大量财务和交易数据
- en: To create a smaller table of key descriptive statistics (for example, mean,
    median, min/max range, variance, inter-quartile ranges) from a large raw data
    table
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从大型原始数据表中创建一个包含关键描述性统计量（例如，平均值、中位数、最小/最大范围、方差、四分位数范围）的小型表格
- en: To read in and analyze time series data in a one-dimensional array daily, such
    as the stock price of an organization over a year or daily temperature data from
    a weather station
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取并分析一维数组中的时间序列数据，例如一个组织一年内的股价或气象站每日温度数据
- en: In short, arrays and numeric data tables are everywhere. As a data wrangling
    professional, the importance of the ability to read and process numeric arrays
    cannot be overstated. In this regard, NumPy arrays will be the most important
    object in Python that you need to know about.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，数组和数值数据表无处不在。作为一名数据整理专业人士，能够读取和处理数值数组的能力的重要性不容小觑。在这方面，NumPy数组将是您在Python中需要了解的最重要对象。
- en: NumPy Array and Features
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NumPy数组和功能
- en: '**NumPy** and **SciPy** are open source add-on modules for Python that provide
    common mathematical and numerical routines in pre-compiled, fast functions. These
    have grown into highly mature libraries that provide functionality that meets,
    or perhaps exceeds, what is associated with common commercial software such as
    **MATLAB** or **Mathematica**.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**NumPy**和**SciPy**是Python的开源附加模块，它们提供了预编译的快速函数，以提供常见的数学和数值例程。这些库已经发展成为高度成熟的库，它们提供的功能满足或可能超过与常见商业软件（如**MATLAB**或**Mathematica**）相关联的功能。'
- en: One of the main advantages of the NumPy module is to handle or create one-dimensional
    or multi-dimensional arrays. This advanced data structure/class is at the heart
    of the NumPy package and it serves as the fundamental building block of more advanced
    classes such as **pandas** and **DataFrame**, which we will cover shortly in this
    chapter.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy模块的主要优势是处理或创建一维或多维数组。这种高级数据结构/类是NumPy包的核心，它作为更高级类（如**pandas**和**DataFrame**）的基本构建块，我们将在本章稍后介绍。
- en: NumPy arrays are different than common Python lists, since Python lists can
    be thought as simple array. NumPy arrays are built for **vectorized** operations
    that process a lot of numerical data with just a single line of code. Many built-in
    mathematical functions in NumPy arrays are written in low-level languages such
    as C or Fortran and pre-compiled for real, fast execution.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy数组与常见的Python列表不同，因为Python列表可以被视为简单的数组。NumPy数组是为**向量化**操作而构建的，这些操作只需一行代码就能处理大量的数值数据。NumPy数组中的许多内置数学函数是用C或Fortran等低级语言编写的，并预先编译以实现真正的快速执行。
- en: Note
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: NumPy arrays are optimized data structures for numerical analysis, and that's
    why they are so important to data scientists.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy数组是针对数值分析优化的数据结构，这就是为什么它们对数据科学家来说如此重要的原因。
- en: 'Exercise 26: Creating a NumPy Array (from a List)'
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习26：从列表创建NumPy数组
- en: 'In this exercise, we will create a NumPy array from a list:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将从列表创建一个NumPy数组：
- en: 'To work with NumPy, we must import it. By convention, we give it a short name,
    `np`, while importing:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用NumPy，我们必须导入它。按照惯例，我们在导入时给它一个简短的名字，`np`：
- en: '[PRE0]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a list with three elements, 1, 2, and 3:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含三个元素1、2和3的列表：
- en: '[PRE1]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Use the `array` function to convert it into an array:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`array`函数将其转换为数组：
- en: '[PRE2]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We just created a NumPy array object called `array_1` from the regular Python
    list object, `list_1`.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们刚刚从常规Python列表对象`list_1`创建了一个名为`array_1`的NumPy数组对象。
- en: 'Create an array of floating type elements 1.2, 3.4, and 5.6:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含浮点类型元素1.2、3.4和5.6的数组：
- en: '[PRE3]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output is as follows:'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE4]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s check the type of the newly created object by using the `type` function:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用`type`函数检查新创建的对象的类型：
- en: '[PRE5]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output is as follows:'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE6]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use `type` on `list_1`:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`list_1`上使用`type`：
- en: '[PRE7]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output is as follows:'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE8]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: So, this is indeed different from the regular `list` object.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这确实与常规的`list`对象不同。
- en: 'Exercise 27: Adding Two NumPy Arrays'
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习27：添加两个NumPy数组
- en: 'This simple exercise will demonstrate the addition of two NumPy arrays, and
    thereby show the key difference between a regular Python list/array and a NumPy
    array:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的练习将演示两个NumPy数组的相加，并因此展示常规Python列表/数组与NumPy数组之间的关键区别：
- en: Consider `list_1` and `array_1` from the preceding exercise. If you have changed
    the Jupyter notebook, you will have to declare them again.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑前一个练习中的`list_1`和`array_1`。如果你已经更改了Jupyter笔记本，你将需要再次声明它们。
- en: 'Use the `+` notation to add two `list_1` object and save the results in `list_2`:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`+`符号将两个`list_1`对象相加，并将结果保存到`list_2`中：
- en: '[PRE9]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output is as follows:'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE10]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Use the same `+` notation to add two `array_1` objects and save the result
    in `array_2`:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用相同的`+`符号将两个`array_1`对象相加，并将结果保存到`array_2`中：
- en: '[PRE11]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output is as follows:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE12]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Did you notice the difference? The first print shows a list with 6 elements
    [1, 2, 3, 1, 2, 3]. But the second print shows another NumPy array (or vector)
    with the elements [2, 4, 6], which are just the sum of the individual elements
    of `array_1`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你注意到区别了吗？第一个打印显示了一个包含6个元素的列表[1, 2, 3, 1, 2, 3]。但第二个打印显示了一个包含元素[2, 4, 6]的另一个NumPy数组（或向量），这些元素只是`array_1`各个元素的求和。
- en: 'NumPy arrays are like mathematical objects – **vectors**. They are built for
    element-wise operations, that is, when we add two NumPy arrays, we add the first
    element of the first array to the first element of the second array – there is
    an element-to-element correspondence in this operation. This is in contrast to
    Python lists, where the elements are simply appended and there is no element-to-element
    relation. This is the real power of a NumPy array: they can be treated just like
    mathematical vectors.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy数组类似于数学对象——**向量**。它们是为元素级操作而构建的，也就是说，当我们添加两个NumPy数组时，我们将第一个数组的第一个元素添加到第二个数组的第一个元素——在这个操作中有元素到元素的对应关系。这与Python列表形成对比，在Python列表中，元素只是简单追加，没有元素到元素的关系。这正是NumPy数组的真正力量：它们可以被当作数学向量来处理。
- en: A vector is a collection of numbers that can represent, for example, the coordinates
    of points in a three-dimensional space or the color of numbers (RGB) in a picture.
    Naturally, relative order is important for such a collection and as we discussed
    previously, a NumPy array can maintain such order relationships. That's why they
    are perfectly suitable to use in numerical computations.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 向量是一组数字，可以表示，例如，三维空间中点的坐标或图片中数字的颜色（RGB）。自然地，相对顺序对这样的集合很重要，正如我们之前讨论的，NumPy数组可以保持这种顺序关系。这就是为什么它们非常适合用于数值计算。
- en: 'Exercise 28: Mathematical Operations on NumPy Arrays'
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习28：NumPy数组上的数学运算
- en: Now that you know that these arrays are like vectors, we will try some mathematical
    operations on arrays.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道这些数组就像向量一样，我们将尝试在数组上进行一些数学运算。
- en: 'NumPy arrays even support element-wise exponentiation. For example, suppose
    there are two arrays – the elements of the first array will be raised to the power
    of the elements in the second array:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy数组甚至支持逐元素指数运算。例如，假设有两个数组——第一个数组的元素将被提升到第二个数组元素的幂：
- en: 'Multiply two arrays using the following command:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令乘以两个数组：
- en: '[PRE13]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output is as follows:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE14]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Divide two arrays using the following command:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令除以两个数组：
- en: '[PRE15]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output is as follows:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE16]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Raise one array to the second arrays power using the following command:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将一个数组提升到第二个数组的幂：
- en: '[PRE17]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The output is as follows:'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE18]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Exercise 29: Advanced Mathematical Operations on NumPy Arrays'
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习29：NumPy数组的高级数学运算
- en: NumPy has all the built-in mathematical functions that you can think of. Here,
    we are going to be creating a list and converting it into a NumPy array. Then,
    we will perform some advanced mathematical operations on that array.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy拥有你所能想到的所有内置数学函数。在这里，我们将创建一个列表并将其转换为NumPy数组。然后，我们将对该数组执行一些高级数学运算。
- en: 'Here, we are creating a list and then converting that into a NumPy array. We
    will then show you how to perform some advanced mathematical operations on that
    array:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在创建一个列表并将其转换为NumPy数组。然后，我们将展示如何在该数组上执行一些高级数学运算：
- en: 'Create a list with five elements:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含五个元素的列表：
- en: '[PRE19]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output is as follows:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE20]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Convert the list into a NumPy array by using the following command:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将列表转换为NumPy数组：
- en: '[PRE21]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output is as follows:'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE22]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Find the `sine` value of the array by using the following command:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算数组的正弦值：
- en: '[PRE23]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The output is as follows:'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE24]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Find the logarithmic value of the array by using the following command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算数组的对数值：
- en: '[PRE25]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The output is as follows:'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE26]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Find the exponential value of the array by using the following command:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算数组的指数值：
- en: '[PRE27]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The output is as follows:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE28]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Exercise 30: Generating Arrays Using arange and linspace'
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习30：使用arange和linspace生成数组
- en: Generation of numerical arrays is a fairly common task. So far, we have been
    doing this by creating a Python list object and then converting that into a NumPy
    array. However, we can bypass that and work directly with native NumPy methods.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 数值数组的生成是一个相当常见的任务。到目前为止，我们一直是通过创建Python列表对象并将其转换为NumPy数组来做到这一点。然而，我们可以绕过这一步，直接使用原生NumPy方法进行操作。
- en: 'The `arange` function creates a series of numbers based on the minimum and
    maximum bounds you give and the step size you specify. Another function, `linspace`,
    creates a series of the fixed numbers of intermediate points between two extremes:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`arange`函数根据你给出的最小和最大界限以及指定的步长创建一系列数字。另一个函数`linspace`在两个极端之间创建一系列固定数量的中间点：'
- en: 'Create a series of numbers using the `arange` method, by using the following
    command:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建一系列数字，使用`arange`方法：
- en: '[PRE29]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output is as follows:'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE30]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Print numbers using the `arange` function by using the following command:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`arange`函数打印数字，使用以下命令：
- en: '[PRE31]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The output is as follows:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE32]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'For linearly spaced numbers, we can use the `linspace` method, as follows:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于线性间隔的数字，我们可以使用`linspace`方法，如下所示：
- en: '[PRE33]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The output is as follows:'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE34]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Exercise 31: Creating Multi-Dimensional Arrays'
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习31：创建多维数组
- en: 'So far, we have created only one-dimensional arrays. Now, let''s create some
    multi-dimensional arrays (such as a matrix in linear algebra). Just like we created
    the one-dimensional array from a simple flat list, we can create a two-dimensional
    array from a list of lists:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只创建了单维数组。现在，让我们创建一些多维数组（例如线性代数中的矩阵）。就像我们从简单的扁平列表创建一维数组一样，我们可以从列表的列表中创建一个二维数组：
- en: 'Create a list of lists and convert it into a two-dimensional NumPy array by
    using the following command:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建一个列表的列表并将其转换为二维NumPy数组：
- en: '[PRE35]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The output is as follows:'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE36]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Tuples can be converted into multi-dimensional arrays by using the following
    code:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用以下代码将元组转换为多维数组：
- en: '[PRE37]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output is as follows:'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE38]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Thus, we have created multi-dimensional arrays using Python lists and tuples.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经使用Python列表和元组创建了多维数组。
- en: 'Exercise 32: The Dimension, Shape, Size, and Data Type of the Two-dimensional
    Array'
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习32：二维数组的维度、形状、大小和数据类型
- en: 'The following methods let you check the dimension, shape, and size of the array.
    Note that if it''s a 3x2 matrix, that is, it has 3 rows and 2 columns, then the
    shape will be (3,2), but the size will be 6, as 6 = 3x2:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 以下方法可让您检查数组的维度、形状和大小。注意，如果它是一个3x2矩阵，即它有3行和2列，那么形状将是(3,2)，但大小将是6，因为6 = 3x2：
- en: 'Print the dimension of the matrix using `ndim` by using the following command:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`ndim`通过以下命令打印矩阵的维度：
- en: '[PRE39]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The output is as follows:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE40]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Print the size using `size`:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`size`打印大小：
- en: '[PRE41]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output is as follows:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE42]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Print the shape of the matrix using `shape`:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`shape`打印矩阵的形状：
- en: '[PRE43]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The output is as follows:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE44]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Print the dimension type using `dtype`:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`dtype`打印维度类型：
- en: '[PRE45]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The output is as follows:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE46]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Exercise 33: Zeros, Ones, Random, Identity Matrices, and Vectors'
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习33：零矩阵、单位矩阵、随机矩阵和向量
- en: 'Now that we are familiar with basic vector (one-dimensional) and matrix data
    structures in NumPy, we will take a look how to create special matrices easily.
    Often, you may have to create matrices filled with zeros, ones, random numbers,
    or ones in the diagonal:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了NumPy中的基本向量（一维）和矩阵数据结构，我们将看看如何轻松创建特殊矩阵。通常，您可能需要创建填充有零、一、随机数或对角线上的单位矩阵的矩阵：
- en: 'Print the vector of zeros by using the following command:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印零向量：
- en: '[PRE47]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The output is as follows:'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE48]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Print the matrix of zeros by using the following command:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印零矩阵：
- en: '[PRE49]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The output is as follows:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE50]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Print the matrix of fives by using the following command:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印五矩阵：
- en: '[PRE51]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The output is as follows:'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE52]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Print an identity matrix by using the following command:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印单位矩阵：
- en: '[PRE53]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The output is as follows:'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE54]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Print an identity matrix with a dimension of 4x4 by using the following command:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印4x4的单位矩阵：
- en: '[PRE55]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The output is as follows:'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE56]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Print a matrix of random shape using the `randint` function:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`randint`函数打印具有随机形状的矩阵：
- en: '[PRE57]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The sample output is as follows:'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE58]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Note
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: When creating matrices, you need to pass on tuples of integers as arguments.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建矩阵时，您需要传递整数元组作为参数。
- en: Random number generation is a very useful utility and needs to be mastered for
    data science/data wrangling tasks. We will look at the topic of random variables
    and distributions again in the section on statistics and see how NumPy and pandas
    have built-in random number and series generation, as well as manipulation functions.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 随机数生成是一个非常有用的工具，需要在数据科学/数据处理任务中掌握。我们将在统计部分再次探讨随机变量和分布的主题，并了解NumPy和pandas如何内置随机数和序列生成，以及操作函数。
- en: 'Exercise 34: Reshaping, Ravel, Min, Max, and Sorting'
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习34：重塑、展平、最小值、最大值和排序
- en: '`reshape` is the `ravel` function, which flattens any given array into a one-dimensional
    array. It is a very useful action in many machine learning and data analytics
    tasks.'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`reshape`是`ravel`函数，它将任何给定的数组展平为一维数组。这在许多机器学习和数据分析任务中是一个非常有用的操作。'
- en: 'The following functions reshape the function. We will first generate a random
    one-dimensional vector of 2-digit numbers and then reshape the vector into multi-dimensional
    vectors:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数可以重塑函数。我们首先生成一个两位数的随机一维向量，然后将向量重塑为多维向量：
- en: 'Create an array of 30 random integers (sampled from 1 to 99) and reshape it
    into two different forms using the following code:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码创建一个包含30个随机整数（从1到99中采样）的数组，并将其重塑成两种不同的形式：
- en: '[PRE59]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Print the shape using the `shape` function by using the following code:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码通过`shape`函数打印形状：
- en: '[PRE60]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The output is as follows:'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE61]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Print the arrays a, b, and c using the following code:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码打印数组a、b和c：
- en: '[PRE62]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The sample output is as follows:'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE63]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Note
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: '"b" is a three-dimensional array – a kind of list of a list of a list.'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"b"是一个三维数组——一种列表的列表的列表。'
- en: 'Ravel file b using the following code:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将文件b展平：
- en: '[PRE64]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The sample output is as follows:'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE65]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Exercise 35: Indexing and Slicing'
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习35：索引和切片
- en: '**Indexing** and **slicing** of NumPy arrays is very similar to regular list
    indexing. We can even step through a vector of elements with a definite step size
    by providing it as an additional argument in the format (start, step, end). Furthermore,
    we can pass a list as the argument to select specific elements.'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '**索引**和**切片**的NumPy数组与常规列表索引非常相似。我们甚至可以通过提供一个格式为（开始，步长，结束）的额外参数来以确定的步长遍历元素向量。此外，我们可以传递一个列表作为参数来选择特定元素。'
- en: 'In this exercise, we will learn about indexing and slicing on one-dimensional
    and multi-dimensional arrays:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将学习一维和多维数组上的索引和切片操作：
- en: Note
  id: totrans-196
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: In multi-dimensional arrays, you can use two numbers to denote the position
    of an element. For example, if the element is in the third row and second column,
    its indices are 2 and 1 (because of Python's zero-based indexing).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在多维数组中，你可以使用两个数字来表示一个元素的位置。例如，如果元素位于第三行第二列，其索引为2和1（因为Python的零基索引）。
- en: 'Create an array of 10 elements and examine its various elements by slicing
    and indexing the array with slightly different syntaxes. Do this by using the
    following command:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含10个元素的数组，并通过使用不同的语法进行切片和索引来检查其各种元素。使用以下命令完成此操作：
- en: '[PRE66]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The output is as follows:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE67]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Print the element in the seventh position by using the following command:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印第七位置的元素：
- en: '[PRE68]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The output is as follows:'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE69]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Print the elements between the third and sixth positions by using the following
    command:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印第三和第六位置之间的元素：
- en: '[PRE70]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'The output is as follows:'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE71]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Print the elements until the fourth position by using the following command:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印直到第四个位置的元素：
- en: '[PRE72]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The output is as follows:'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE73]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Print the elements backwards by using the following command:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令反向打印元素：
- en: '[PRE74]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'The output is as follows:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE75]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Print the elements using their backward index, skipping three values, by using
    the following command:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令按反向索引打印元素，跳过三个值：
- en: '[PRE76]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The output is as follows:'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE77]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Create a new array called `array_2` by using the following command:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建一个名为`array_2`的新数组：
- en: '[PRE78]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'The output is as follows:'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE79]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Print the second, fourth, and ninth elements of the array:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印数组的第二个、第四个和第九个元素：
- en: '[PRE80]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'The output is as follows:'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE81]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Create a multi-dimensional array by using the following command:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建一个多维数组：
- en: '[PRE82]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'The sample output is as follows:'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE83]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Access the values using double bracket indexing by using the following command:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用双括号索引访问值，使用以下命令：
- en: '[PRE84]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'The sample output is as follows:'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE85]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Access the values using single bracket indexing by using the following command:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用单括号索引访问值，使用以下命令：
- en: '[PRE86]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'The sample output is as follows:'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE87]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Access the values in a multi-dimensional array using a row or column by using
    the following command:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过行或列访问多维数组中的值：
- en: '[PRE88]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'The sample output is as follows:'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE89]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Print the matrix with the specified row and column indices by using the following
    command:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令按指定的行和列索引打印矩阵：
- en: '[PRE90]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The sample output is as follows:'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE91]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Print the matrix with the specified row and column indices by using the following
    command:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令按指定的行和列索引打印矩阵：
- en: '[PRE92]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'The sample output is as follows:'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE93]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Conditional Subsetting
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 条件子集
- en: '**Conditional subsetting** is a way to select specific elements based on some
    numeric condition. It is almost like a shortened version of a SQL query to subset
    elements. See the following example:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '**条件子集**是一种根据某些数值条件选择特定元素的方法。它几乎就像是一个简化的SQL查询，用于子集元素。请看以下示例：'
- en: '[PRE94]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'The sample output is as follows (note that the exact output will be different
    for you as it is random):'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 样本输出如下（请注意，由于是随机的，您的确切输出将不同）：
- en: '[PRE95]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'Exercise 36: Array Operations (array-array, array-scalar, and universal functions)'
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习36：数组操作（数组-数组、数组-标量和通用函数）
- en: NumPy arrays operate just like mathematical matrices, and the operations are
    performed element-wise.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy数组操作就像数学矩阵一样，操作是逐元素进行的。
- en: 'Create two matrices (multi-dimensional arrays) with random integers and demonstrate
    element-wise mathematical operations such as addition, subtraction, multiplication,
    and division. Show the exponentiation (raising a number to a certain power) operation,
    as follows:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 创建两个矩阵（多维数组）并使用随机整数，演示逐元素数学运算，如加法、减法、乘法和除法。展示指数运算（将一个数提高到某个幂）如下：
- en: Note
  id: totrans-262
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Due to random number generation, your specific output could be different to
    what is shown here.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 由于随机数生成，您的具体输出可能与这里显示的不同。
- en: 'Create two matrices:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建两个矩阵：
- en: '[PRE96]'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'The sample output is as follows (note that the exact output will be different
    for you as it is random):'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（请注意，由于是随机的，所以您的确切输出将与您不同）：
- en: '[PRE97]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'Perform addition, subtraction, division, and linear combination on the matrices:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在矩阵上执行加法、减法、除法和线性组合：
- en: '[PRE98]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'The sample output is as follows (note that the exact output will be different
    for you as it is random):'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（请注意，由于是随机的，所以您的确切输出将与您不同）：
- en: '[PRE99]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'Perform the addition of a scalar, exponential matrix cube, and exponential
    square root:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行标量、指数矩阵立方和指数平方根的加法：
- en: '[PRE100]'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'The sample output is as follows (note that the exact output will be different
    for you as it is random):'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（请注意，由于是随机的，所以您的确切输出将与您不同）：
- en: '[PRE101]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Stacking Arrays
  id: totrans-276
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数组堆叠
- en: '**Stacking arrays** on top of each other (or side by side) is a useful operation
    for data wrangling. Here is the code:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '**在数组上方（或旁边）堆叠**是一个有用的数据整理操作。以下是代码：'
- en: '[PRE102]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'The output is as follows:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE103]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: NumPy has many other advanced features, mainly related to statistics and linear
    algebra functions, which are used extensively in machine learning and data science
    tasks. However, not all of that is directly useful for beginner level data wrangling,
    so we won't cover it here.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 有许多其他高级功能，主要与统计和线性代数函数相关，这些函数在机器学习和数据科学任务中得到了广泛的应用。然而，并非所有这些对初学者级别的数据处理直接有用，所以我们在这里不会涵盖它。
- en: Pandas DataFrames
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pandas 数据框
- en: The pandas library is a Python package that provides fast, flexible, and expressive
    data structures that are designed to make working with relational or labeled data
    both easy and intuitive. It aims to be the fundamental high-level building block
    for doing practical, real-world data analysis in Python. Additionally, it has
    the broader goal of becoming the most powerful and flexible open source data analysis/manipulation
    tool that's available in any language.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 库是一个 Python 包，它提供了快速、灵活且表达性强的数据结构，旨在使处理关系型或标记数据变得既简单又直观。它的目标是成为在 Python
    中进行实际、现实世界数据分析的基本高级构建块。此外，它还有更广泛的目标，即成为任何语言中最强大和最灵活的开源数据分析/操作工具。
- en: The two primary data structures of pandas, `Series` (one-dimensional) and `DataFrame`
    (two-dimensional), handle the vast majority of typical use cases. Pandas is built
    on top of NumPy and is intended to integrate well within a scientific computing
    environment with many other third-party libraries.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 的两种主要数据结构，`Series`（一维）和`DataFrame`（二维），可以处理绝大多数典型用例。Pandas 是建立在 NumPy
    之上的，旨在与许多第三方库很好地集成到一个科学计算环境中。
- en: 'Exercise 37: Creating a Pandas Series'
  id: totrans-285
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 37：创建 Pandas 序列
- en: 'In this exercise, we will learn about how to create a pandas series object
    from the data structures that we created previously. If you have imported pandas
    as `pd`, then the function to create a series is simply `pd.Series`:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将学习如何从我们之前创建的数据结构中创建 pandas 序列对象。如果您已将 pandas 导入为 `pd`，则创建序列的函数简单为
    `pd.Series`：
- en: 'Initialize labels, lists, and a dictionary:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化标签、列表和字典：
- en: '[PRE104]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'The output is as follows:'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE105]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'Import pandas as `pd` by using the following command:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将 pandas 导入为 `pd`：
- en: '[PRE106]'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'Create a series from the `my_data` list by using the following command:'
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令从`my_data`列表创建一个序列：
- en: '[PRE107]'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'The output is as follows:'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE108]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Create a series from the `my_data` list along with the `labels` as follows:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`my_data`列表创建一个序列，并使用以下命令添加`labels`：
- en: '[PRE109]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'The output is as follows:'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE110]'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'Then, create a series from the NumPy array, as follows:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从 NumPy 数组创建一个序列，如下所示：
- en: '[PRE111]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'The output is as follows:'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE112]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'Create a series from the dictionary, as follows:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从字典创建一个序列，如下所示：
- en: '[PRE113]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'The output is as follows:'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE114]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'Exercise 38: Pandas Series and Data Handling'
  id: totrans-309
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 38：Pandas 序列和数据处理
- en: 'The pandas series object can hold many types of data. This is the key to constructing
    a bigger table where multiple series objects are stacked together to create a
    database-like entity:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 系列对象可以存储多种类型的数据。这是构建更大表格的关键，其中多个系列对象堆叠在一起以创建类似数据库的实体：
- en: 'Create a pandas series with numerical data by using the following command:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令使用数值数据创建 pandas 系列：
- en: '[PRE115]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'The output is as follows:'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE116]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'Create a pandas series with labels by using the following command:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令使用标签创建 pandas 系列：
- en: '[PRE117]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'The output is as follows:'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE118]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'Create a pandas series with functions by using the following command:'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建一个带有函数的 pandas 系列：
- en: '[PRE119]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'The output is as follows:'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE120]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'Create a pandas series with a dictionary by using the following command:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令使用字典创建 pandas 系列：
- en: '[PRE121]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'The output is as follows:'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE122]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'Exercise 39: Creating Pandas DataFrames'
  id: totrans-327
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 39：创建 Pandas DataFrame
- en: 'The pandas DataFrame is similar to an Excel table or relational database (SQL)
    table that consists of three main components: the data, the index (or rows), and
    the columns. Under the hood, it is a stack of pandas series objects, which are
    themselves built on top of NumPy arrays. So, all of our previous knowledge of
    NumPy array applies here:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: pandas DataFrame 类似于 Excel 表格或关系数据库（SQL）表，它由三个主要组件组成：数据、索引（或行）和列。在底层，它是一堆 pandas
    系列，这些系列本身又建立在 NumPy 数组之上。因此，我们之前关于 NumPy 数组的所有知识都适用于这里：
- en: 'Create a simple DataFrame from a two-dimensional matrix of numbers. First,
    the code draws 20 random integers from the uniform distribution. Then, we need
    to reshape it into a (5,4) NumPy array – 5 rows and 4 columns:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从一个二维数字矩阵创建一个简单的 DataFrame。首先，代码从均匀分布中抽取 20 个随机整数。然后，我们需要将其重塑为 (5,4) 的 NumPy
    数组——5 行和 4 列：
- en: '[PRE123]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'Define the rows labels as `(''A'',''B'',''C'',''D'',''E'')` and column labels
    as `(''W'',''X'',''Y'',''Z'')`:'
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将行标签定义为 `('A','B','C','D','E')`，列标签定义为 `('W','X','Y','Z')`：
- en: '[PRE124]'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'The function to create a DataFrame is `pd.DataFrame` and it is called in next:'
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 DataFrame 的函数是 `pd.DataFrame`，它将在下面调用：
- en: '[PRE125]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'The sample output is as follows:'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE126]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Create a DataFrame from a Python dictionary of some lists of integers by using
    the following command:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过一些整数列表的 Python 字典创建 DataFrame：
- en: '[PRE127]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'Pass this dictionary as the data argument to the `pd.DataFrame` function. Pass
    on a list of rows or indices. Notice how the dictionary keys became the column
    names and that the values were distributed among multiple rows:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此字典作为数据参数传递给 `pd.DataFrame` 函数。传递一个行或索引列表。注意字典键变成了列名，而值被分配到多行中：
- en: '[PRE128]'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'The output is as follows:'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE129]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Note
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The most common way that you will encounter to create a pandas DataFrame will
    be to read tabular data from a file on your local disk or over the internet –
    CSV, text, JSON, HTML, Excel, and so on. We will cover some of these in the next
    chapter.
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你最常遇到创建 pandas DataFrame 的方式是从本地磁盘或互联网上的文件中读取表格数据——CSV、文本、JSON、HTML、Excel 等等。我们将在下一章中介绍其中的一些。
- en: 'Exercise 40: Viewing a DataFrame Partially'
  id: totrans-345
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 40：部分查看 DataFrame
- en: 'In the previous section, we used `print(df)` to print the whole DataFrame.
    For a large dataset, we would like to print only sections of data. In this exercise,
    we will read a part of the DataFrame:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们使用 `print(df)` 来打印整个 DataFrame。对于大型数据集，我们只想打印数据的一部分。在这个练习中，我们将读取 DataFrame
    的一部分：
- en: 'Execute the following code to create a DataFrame with 25 rows and fill it with
    random numbers:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下代码以创建一个包含 25 行并填充随机数的 DataFrame：
- en: '[PRE130]'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'Run the following code to view only the first five rows of the DataFrame:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码以仅查看 DataFrame 的前五行：
- en: '[PRE131]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 'The sample output is as follows (note that your output could be different due
    to randomness):'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（请注意，由于随机性，你的输出可能不同）：
- en: '![Figure 3.1: First five rows of the DataFrame](img/C11065_03_01.jpg)'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.1：DataFrame 的前五行](img/C11065_03_01.jpg)'
- en: 'Figure 3.1: First five rows of the DataFrame'
  id: totrans-353
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.1：DataFrame 的前五行
- en: By default, `head` shows only five rows. If you want to see any specific number
    of rows just pass that as an argument.
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，`head` 只显示五行。如果你想看到任何特定数量的行，只需将其作为参数传递。
- en: 'Print the first eight rows by using the following command:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印前八行：
- en: '[PRE132]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'The sample output is as follows:'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 3.2: First eight rows of the DataFrame](img/C11065_03_02.jpg)'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.2：DataFrame 的前八行](img/C11065_03_02.jpg)'
- en: 'Figure 3.2: First eight rows of the DataFrame'
  id: totrans-359
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.2：DataFrame 的前八行
- en: Just like `head` shows the first few rows, `tail` shows the last few rows.
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 就像 `head` 显示前几行一样，`tail` 显示最后几行。
- en: 'Print the DataFrame using the `tail` command, as follows:'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `tail` 命令打印 DataFrame，如下所示：
- en: '[PRE133]'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 'The sample output is as follows:'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 3.3: Last ten rows of the DataFrame](img/C11065_03_03.jpg)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3：DataFrame 的最后十行](img/C11065_03_03.jpg)'
- en: 'Figure 3.3: Last ten rows of the DataFrame'
  id: totrans-365
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.3：DataFrame 的最后十行
- en: Indexing and Slicing Columns
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引和切片列
- en: 'There are two methods for indexing and slicing columns from a DataFrame. They
    are as follows:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 从 DataFrame 中索引和切片列有两种方法。如下所示：
- en: '**DOT method**'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DOT 方法**'
- en: '**Bracket method**'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**括号方法**'
- en: The DOT method is good to find specific element. The bracket method is intuitive
    and easy to follow. In this method, you can access the data by the generic name/header
    of the column.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: DOT 方法适用于查找特定元素。括号方法直观且易于理解。在此方法中，您可以通过列的通用名称/标题访问数据。
- en: 'The following code illustrates these concepts. Execute them in your Jupyter
    notebook:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码说明了这些概念。在您的 Jupyter 笔记本中执行它们：
- en: '[PRE134]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: 'The output is as follows (a screenshot is shown here because the actual column
    is long):'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下（此处显示截图，因为实际列很长）：
- en: '![](img/C11065_03_04.jpg)'
  id: totrans-374
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C11065_03_04.jpg)'
- en: 'Figure 3.4: Rows of the ''X'' columns'
  id: totrans-375
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.4：'X' 列的行
- en: 'This is the output showing the type of column:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 这是显示列类型的输出：
- en: '![Figure 3.5: Type of ‘X’ column](img/C11065_03_05.jpg)'
  id: totrans-377
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.5：''X'' 列的类型](img/C11065_03_05.jpg)'
- en: 'Figure 3.5: Type of ''X'' column'
  id: totrans-378
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.5：'X' 列的类型
- en: 'This is the output showing the X and Z column indexed by passing a list:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过传递列表索引 X 和 Z 列的输出：
- en: '![Figure 3.6: Rows of the ‘Y’ columns](img/C11065_03_06.jpg)'
  id: totrans-380
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.6：''Y'' 列的行](img/C11065_03_06.jpg)'
- en: 'Figure 3.6: Rows of the ''Y'' columns'
  id: totrans-381
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.6：'Y' 列的行
- en: 'This is the output showing the type of the pair of column:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 这是显示列对类型的输出：
- en: '![Figure 3.7: Type of ‘Y’ column](img/C11065_03_07.jpg)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.7：''Y'' 列的类型](img/C11065_03_07.jpg)'
- en: 'Figure 3.7: Type of ''Y'' column'
  id: totrans-384
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.7：'Y' 列的类型
- en: Note
  id: totrans-385
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: For more than one column, the object turns into a DataFrame. But for a single
    column, it is a pandas series object.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多个列，对象变为 DataFrame。但对于单个列，它是一个 pandas 系列对象。
- en: Indexing and Slicing Rows
  id: totrans-387
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引和切片行
- en: 'Indexing and slicing rows in a DataFrame can also be done using following methods:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DataFrame 中，可以使用以下方法进行行索引和切片：
- en: '**Label-based ''loc'' method**'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于标签的 ''loc'' 方法**'
- en: '**Index based ''iloc'' method**'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于索引的 ''iloc'' 方法**'
- en: 'The `loc` method is intuitive and easy to follow. In this method, you can access
    the data by the generic name of the row. On the other hand, the `iloc` method
    allows you to access the rows by their numerical index. It can be very useful
    for a large table with thousands of rows, especially when you want to iterate
    over the table in a loop with a numerical counter. The following code illustrate
    the concepts of `iloc`:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '`loc` 方法直观且易于理解。在此方法中，您可以通过行的通用名称访问数据。另一方面，`iloc` 方法允许您通过它们的数值索引访问行。对于具有数千行的大表，这非常有用，尤其是在您想使用数值计数器在循环中遍历表时。以下代码说明了
    `iloc` 的概念：'
- en: '[PRE135]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: 'The sample output is as follows:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 3.8: Output of loc and iloc methods](img/C11065_03_08.jpg)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.8：loc 和 iloc 方法的输出](img/C11065_03_08.jpg)'
- en: 'Figure 3.8: Output of the loc and iloc methods'
  id: totrans-395
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.8：loc 和 iloc 方法的输出
- en: 'Exercise 41: Creating and Deleting a New Column or Row'
  id: totrans-396
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 41：创建和删除新列或行
- en: 'One of the most common tasks in data wrangling is creating or deleting columns
    or rows of data from your DataFrame. Sometimes, you want to create a new column
    based on some mathematical operation or transformation involving the existing
    columns. This is similar to manipulating database records and inserting a new
    column based on simple transformations. We show some of these concepts in the
    following code blocks:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 数据清洗中最常见的任务之一是从 DataFrame 中创建或删除列或行。有时，您可能希望根据某些涉及现有列的数学运算或转换创建新列。这与操作数据库记录并在简单转换的基础上插入新列类似。我们在以下代码块中展示了这些概念：
- en: 'Create a new column using the following snippet:'
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码片段创建新列：
- en: '[PRE136]'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'The sample output is as follows:'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 3.9: Output after adding a new column](img/C11065_03_09.jpg)'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.9：添加新列后的输出](img/C11065_03_09.jpg)'
- en: 'Figure 3.9: Output after adding a new column'
  id: totrans-402
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.9：添加新列后的输出
- en: 'Drop a column using the `df.drop` method:'
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `df.drop` 方法删除列：
- en: '[PRE137]'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'The sample output is as follows:'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 3.10: Output after dropping a column](img/C11065_03_10.jpg)'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.10：删除列后的输出](img/C11065_03_10.jpg)'
- en: 'Figure 3.10: Output after dropping a column'
  id: totrans-407
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.10：删除列后的输出
- en: 'Drop a specific row using the `df.drop` method:'
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `df.drop` 方法删除特定行：
- en: '[PRE138]'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'The sample output is as follows:'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是一个示例输出：
- en: '![Figure 3.11: Output after dropping a row](img/C11065_03_11.jpg)'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 3.11：删除行后的输出](img/C11065_03_11.jpg)'
- en: 'Figure 3.11: Output after dropping a row'
  id: totrans-412
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.11：删除行后的输出
- en: Dropping methods creates a copy of the DataFrame and does not change the original
    DataFrame.
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 放弃方法会创建 DataFrame 的副本，而不会更改原始 DataFrame。
- en: 'Change the original DataFrame by setting the `inplace` argument to `True`:'
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将 `inplace` 参数设置为 `True` 来更改原始 DataFrame：
- en: '[PRE139]'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'A sample output is as follows:'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是一个示例输出：
- en: '![Figure 3.12: Output after using the inplace argument](img/C11065_03_12.jpg)'
  id: totrans-417
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.12：使用 inplace 参数后的输出](img/C11065_03_12.jpg)'
- en: 'Figure 3.12: Output after using the inplace argument'
  id: totrans-418
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.12：使用 inplace 参数后的输出
- en: Note
  id: totrans-419
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: All the normal operations are not in-place, that is, they do not impact the
    original DataFrame object but return a copy of the original with addition (or
    deletion). The last bit of code shows how to make a change in the existing DataFrame
    with the `inplace=True` argument. Please note that this change is irreversible
    and should be used with caution.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 所有常规操作都不是就地进行的，也就是说，它们不会影响原始 DataFrame 对象，而是返回原始数据的副本（或删除）。最后一段代码展示了如何使用 `inplace=True`
    参数在现有 DataFrame 中进行更改。请注意，这种更改是不可逆的，应谨慎使用。
- en: Statistics and Visualization with NumPy and Pandas
  id: totrans-421
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 NumPy 和 Pandas 进行统计和可视化
- en: One of the great advantages of using libraries such as NumPy and pandas is that
    a plethora of built-in statistical and visualization methods are available, for
    which we don't have to search for and write new code. Furthermore, most of these
    subroutines are written using C or Fortran code (and pre-compiled), making them
    extremely fast to execute.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 使用诸如 NumPy 和 pandas 这样的库的一个巨大优势是，有大量的内置统计和可视化方法可用，我们不需要搜索和编写新代码。此外，这些子程序大多数是用
    C 或 Fortran 代码编写的（并且预编译），这使得它们执行速度极快。
- en: Refresher of Basic Descriptive Statistics (and the Matplotlib Library for Visualization)
  id: totrans-423
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复习基本描述性统计（以及用于可视化的 Matplotlib 库）
- en: For any data wrangling task, it is quite useful to extract basic descriptive
    statistics from the data and create some simple visualizations/plots. These plots
    are often the first step in identifying fundamental patterns as well as oddities
    (if present) in the data. In any statistical analysis, descriptive statistics
    is the first step, followed by inferential statistics, which tries to infer the
    underlying distribution or process from which the data might have been generated.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何数据处理任务，从数据中提取基本描述性统计并创建一些简单的可视化/图表非常有用。这些图表通常是识别数据中的基本模式以及异常（如果有的话）的第一步。在任何统计分析中，描述性统计是第一步，随后是推断统计，它试图推断出可能生成数据的潜在分布或过程。
- en: As the inferential statistics are intimately coupled with the machine learning/predictive
    modeling stage of a data science pipeline, descriptive statistics naturally becomes
    associated with the data wrangling aspect.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 由于推断统计与数据科学管道的机器学习/预测建模阶段紧密相连，描述性统计自然与数据处理方面相关联。
- en: 'There are two broad approaches for descriptive statistical analysis:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 描述性统计分析有两种主要方法：
- en: 'Graphical techniques: Bar plots, scatter plots, line charts, box plots, histograms,
    and so on'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形技术：条形图、散点图、折线图、箱线图、直方图等
- en: 'Calculation of central tendency and spread: Mean, median, mode, variance, standard
    deviation, range, and so on'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算中心趋势和离散程度：平均值、中位数、众数、方差、标准差、范围等
- en: In this topic, we will demonstrate how you can accomplish both of these tasks
    using Python. Apart from NumPy and pandas, we will need to learn the basics of
    another great package – **matplotlib** – which is the most powerful and versatile
    visualization library in Python.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个主题中，我们将展示如何使用 Python 完成这两个任务。除了 NumPy 和 pandas，我们还需要学习另一个优秀包的基础知识——**matplotlib**，这是
    Python 中功能最强大且最灵活的可视化库。
- en: 'Exercise 42: Introduction to Matplotlib Through a Scatter Plot'
  id: totrans-430
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 42：通过散点图介绍 Matplotlib
- en: 'In this exercise, we will demonstrate the power and simplicity of matplotlib
    by creating a simple scatter plot from some data about the age, weight, and height
    of a few people:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将通过创建一些关于几个人的年龄、体重和身高数据的一些简单散点图来展示 matplotlib 的强大和简单性：
- en: 'First, we define simple lists of names, age, weight (in kgs), and height (in
    centimeters):'
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们定义简单的姓名、年龄、体重（以千克为单位）和身高（以厘米为单位）列表：
- en: '[PRE140]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'Import the most important module from matplotlib, called `pyplot`:'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 matplotlib 中最重要的模块，称为 `pyplot`：
- en: '[PRE141]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'Create simple scatter plots of age versus weight:'
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建年龄与体重之间的简单散点图：
- en: '[PRE142]'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'The output is as follows:'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.13: A screenshot of a scatter plot containing age and weight](img/C11065_03_13.jpg)'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.13：包含年龄和体重的散点图截图](img/C11065_03_13.jpg)'
- en: 'Figure 3.13: A screenshot of a scatter plot containing age and weight'
  id: totrans-440
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.13：包含年龄和体重的散点图截图
- en: The plot can be improved by enlarging the figure size, customizing the aspect
    ratio, adding a title with a proper font size, adding X-axis and Y-axis labels
    with a customized font size, adding grid lines, changing the Y-axis limit to be
    between 0 and 100, adding X and Y-tick marks, customizing the scatter plot's color,
    and changing the size of the scatter dots.
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以通过放大图形大小、自定义纵横比、添加带有适当字体大小的标题、添加带有自定义字体大小的X轴和Y轴标签、添加网格线、将Y轴限制在0到100之间、添加X和Y刻度标记、自定义散点图的颜色以及改变散点的大小来改进图表。
- en: 'The code for the improved plot is as follows:'
  id: totrans-442
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 改进图表的代码如下：
- en: '[PRE143]'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'The output is as follows:'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.14: A screenshot of a scatter plot showing age versus weight](img/C11065_03_14.jpg)'
  id: totrans-445
  prefs: []
  type: TYPE_IMG
  zh: '![图3.14：显示年龄与体重关系的散点图截图](img/C11065_03_14.jpg)'
- en: 'Figure 3.14: A screenshot of a scatter plot showing age versus weight'
  id: totrans-446
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.14：显示年龄与体重关系的散点图截图
- en: 'Observe the following:'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 观察以下内容：
- en: A `tuple (8,6)` is passed as an argument for the figure size.
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将一个`元组(8,6)`作为参数传递给图形大小。
- en: A list comprehension is used inside `Xticks` to create a customized list of
    5-10-15-…-55.
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Xticks`内部使用列表推导式创建一个自定义的5-10-15-…-55列表。
- en: A newline (`\n`) character is used inside the `plt.text()` function to break
    up and distribute the text in two lines.
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`plt.text()`函数内部使用换行符（`\n`）来分割和分布文本为两行。
- en: The `plt.show()` function is used at the very end. The idea is to keep on adding
    various graphics properties (font, color, axis limits, text, legend, grid, and
    so on) until you are satisfied and then show the plot with one function. The plot
    will not be displayed without this last function call.
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在最后使用`plt.show()`函数。想法是持续添加各种图形属性（字体、颜色、坐标轴限制、文本、图例、网格等），直到你满意，然后使用一个函数显示图表。如果没有这个最后的函数调用，图表将不会显示。
- en: Definition of Statistical Measures – Central Tendency and Spread
  id: totrans-452
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 统计度量定义 – 中心趋势和分散
- en: 'A measure of central tendency is a single value that attempts to describe a
    set of data by identifying the central position within that set of data. They
    are also categorized as summary statistics:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 中心趋势的度量是一个单一值，它试图通过确定数据集中数据的中心位置来描述这组数据。它们也被归类为汇总统计量：
- en: '**Mean**: Mean is the sum of all values divided by the total number of values.'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**均值**：均值是所有值的总和除以值的总数。'
- en: '**Median**: The median is the middle value. It is the value that splits the
    dataset in half. To find the median, order your data from smallest to largest,
    and then find the data point that has an equal amount of values above it and below
    it.'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**中位数**：中位数是中间值。它是将数据集分成两半的值。要找到中位数，将你的数据从小到大排序，然后找到上方和下方值数量相等的那个数据点。'
- en: '**Mode**: The mode is the value that occurs the most frequently in your dataset.
    On a bar chart, the mode is the highest bar.'
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**众数**：众数是数据集中出现频率最高的值。在条形图中，众数是最高条。'
- en: 'Generally, the mean is a better measure to use for symmetric data and median
    is a better measure for data with a skewed (left or right heavy) distribution.
    For categorical data, you have to use the mode:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，对于对称数据，均值是一个更好的度量，而对于具有偏斜（左重或右重）分布的数据，中位数是一个更好的度量。对于分类数据，你必须使用众数：
- en: '![Figure 3.15: A screenshot of a curve showing the mean, median, and mode](img/C11065_03_15.jpg)'
  id: totrans-458
  prefs: []
  type: TYPE_IMG
  zh: '![图3.15：显示均值、中位数和众数的曲线截图](img/C11065_03_15.jpg)'
- en: 'Figure 3.15: A screenshot of a curve showing the mean, median, and mode'
  id: totrans-459
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.15：显示均值、中位数和众数的曲线截图
- en: 'The spread of the data is a measure of by how much the values in the dataset
    are likely to differ from the mean of the values. If all the values are close
    together then the spread is low; on the other hand, if some or all of the values
    differ by a large amount from the mean (and each other), then there is a large
    spread in the data:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的分散程度是衡量数据集中的值可能偏离值平均值的程度。如果所有值都彼此接近，则分散度低；另一方面，如果某些或所有值与平均值（以及彼此）相差很大，则数据中存在很大的分散度：
- en: '**Variance**: This is the most common measure of spread. Variance is the average
    of the squares of the deviations from the mean. Squaring the deviations ensures
    that negative and positive deviations do not cancel each other out.'
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方差**：这是最常见的分散度度量。方差是平均偏差平方的平均值。平方偏差确保了负偏差和正偏差不会相互抵消。'
- en: '**Standard Deviation**: Because variance is produced by squaring the distance
    from the mean, its unit does not match that of the original data. Standard deviation
    is a mathematical trick to bring back the parity. It is the positive square root
    of the variance.'
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准差**：由于方差是通过平方距离来产生的，其单位与原始数据不匹配。标准差是一种数学技巧，用于恢复等价性。它是方差的正平方根。'
- en: Random Variables and Probability Distribution
  id: totrans-463
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 随机变量和概率分布
- en: A **random variable** is defined as the value of a given variable that represents
    the outcome of a statistical experiment or process.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '**随机变量**被定义为表示统计实验或过程结果的给定变量的值。'
- en: Although it sounds very formal, pretty much everything around us that we can
    measure can be thought of as a random variable.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然听起来非常正式，但我们周围几乎所有可以测量的东西都可以被视为随机变量。
- en: The reason behind this is that almost all natural, social, biological, and physical
    processes are the final outcome of a large number of complex processes, and we
    cannot know the details of those fundamental processes. All we can do is observe
    and measure the final outcome.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 原因在于几乎所有自然、社会、生物和物理过程都是大量复杂过程的最终结果，我们无法了解这些基本过程的细节。我们能做的只是观察和测量最终结果。
- en: 'Typical examples of random variables that are around us are as follows:'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 我们周围典型的随机变量例子如下：
- en: The economic output of a nation
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个国家的经济产出
- en: The blood pressure of a patient
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 患者的血压
- en: The temperature of a chemical process in a factory
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工厂中化学过程的温度
- en: Number of friends of a person on Facebook
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个人在Facebook上的朋友数量
- en: The stock market price of a company
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一家公司的股票市场价格
- en: These values can take any discrete or continuous value and they follow a particular
    pattern (although the pattern may vary over time). Therefore, they can all be
    classified as random variables.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 这些值可以取任何离散或连续的值，并且遵循特定的模式（尽管模式可能会随时间变化）。因此，它们都可以被归类为随机变量。
- en: What Is a Probability Distribution?
  id: totrans-474
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是概率分布？
- en: A **probability distribution** is a function that describes the likelihood of
    obtaining the possible values that a random variable can assume. In other words,
    the values of a variable vary based on the underlying probability distribution.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '**概率分布**是一个函数，描述了随机变量可以假设的可能值的可能性。换句话说，变量的值基于潜在的概率分布而变化。'
- en: Suppose you go to a school and measure the heights of students who have been
    selected randomly. Height is an example of a random variable here. As you measure
    height, you can create a distribution of height. This type of distribution is
    useful when you need to know which outcomes are most likely, the spread of potential
    values, and the likelihood of different results.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你前往一所学校，并测量随机选择的学生身高。身高在这里是一个随机变量的例子。当你测量身高时，你可以创建一个身高分布。这种类型的分布在你需要知道哪些结果最有可能、潜在值的分布范围以及不同结果的可能性时非常有用。
- en: The concepts of central tendency and spread are applicable to a distribution
    and are used to describe the properties and behavior of a distribution.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 中心趋势和分散的概念适用于分布，并用于描述分布的性质和行为。
- en: 'Statisticians generally divide all distributions into two broad categories:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 统计学家通常将所有分布分为两大类：
- en: Discrete distributions
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 离散分布
- en: Continuous distributions
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连续分布
- en: Discrete Distributions
  id: totrans-481
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 离散分布
- en: '**Discrete probability functions** are also known as **probability mass functions**
    and can assume a discrete number of values. For example, coin tosses and counts
    of events are discrete functions. You can have only heads or tails in a coin toss.
    Similarly, if you''re counting the number of trains that arrive at a station per
    hour, you can count 11 or 12 trains, but nothing in-between.'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '**离散概率函数**也称为**概率质量函数**，可以假设离散的数值。例如，抛硬币和事件计数是离散函数。在抛硬币中，你只能得到正面或反面。同样，如果你每小时计算到达车站的火车数量，你可以计算11或12辆火车，但不能在两者之间。'
- en: 'Some prominent discrete distributions are as follows:'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 一些显著的离散分布如下：
- en: '**Binomial distribution** to model binary data, such as coin tosses'
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二项分布**用于模拟二元数据，如抛硬币'
- en: '**Poisson distribution** to model count data, such as the count of library
    book checkouts per hour'
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**泊松分布**用于模拟计数数据，例如每小时图书馆图书借阅的数量'
- en: '**Uniform distribution** to model multiple events with the same probability,
    such as rolling a die'
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**均匀分布**用于模拟具有相同概率的多个事件，例如掷骰子'
- en: Continuous Distributions
  id: totrans-487
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连续分布
- en: '**Continuous probability functions** are also known as **probability density
    functions**. You have a continuous distribution if the variable can assume an
    infinite number of values between any two values. Continuous variables are often
    measurements on a real number scale, such as height, weight, and temperature.'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '**连续概率函数**也被称为**概率密度函数**。如果一个变量可以在任意两个值之间取无限多个值，那么你就有了一个连续分布。连续变量通常是实数尺度上的测量，例如身高、体重和温度。'
- en: The most well-known continuous distribution is the **normal distribution**,
    which is also known as the **Gaussian distribution** or the **bell curve**. This
    symmetric distribution fits a wide variety of phenomena, such as human height
    and IQ scores.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 最著名的连续分布是**正态分布**，也称为**高斯分布**或**钟形曲线**。这种对称分布适合广泛的现象，例如人类身高和智商分数。
- en: 'The normal distribution is linked to the famous **68-95-99.7 rule**, which
    describes the percentage of data that falls within 1, 2, or 3 standard deviations
    away from the mean if the data follows a normal distribution. This means that
    you can quickly look at some sample data, calculate the mean and standard deviation,
    and can have a confidence (a statistical measure of uncertainty) that any future
    incoming data will fall within those *68%-95%-99.7%* boundaries. This rule is
    widely used in industries, medicine, economics, and social science:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 正态分布与著名的**68-95-99.7规则**相联系，该规则描述了如果数据遵循正态分布，那么数据落在平均值的1、2或3个标准差范围内的百分比。这意味着你可以快速查看一些样本数据，计算平均值和标准差，并可以有一个信心（不确定性的统计度量）认为任何未来的数据都将落在那些*68%-95%-99.7%*边界内。这个规则在工业、医学、经济学和社会科学中得到广泛应用：
- en: '![](img/C11065_03_16.jpg)'
  id: totrans-491
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/C11065_03_16.jpg)'
- en: 'Figure 3.16: Curve showing the normal distribution of the famous 68-95-99.7
    rule'
  id: totrans-492
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.16：显示著名68-95-99.7规则正态分布的曲线
- en: Data Wrangling in Statistics and Visualization
  id: totrans-493
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 统计学和可视化中的数据处理
- en: A good data wrangling professional is expected to encounter a dizzying array
    of diverse data sources each day. As we explained previously, due to a multitude
    of complex sub-processes and mutual interactions that give rise to such data,
    they all fall into the category of discrete or continuous random variables.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 一个优秀的数据处理专业人员每天都会遇到令人眼花缭乱的各种数据源。正如我们之前解释的，由于众多复杂的子过程和相互作用的组合产生了这样的数据，它们都属于离散或连续随机变量的范畴。
- en: It will be extremely difficult and confusing to the data wrangler or data science
    team if all of this data continues to be treated as completely random and without
    any shape or pattern. A formal statistical basis must be given to such random
    data streams, and one of the simplest ways to start that process is to measure
    their descriptive statistics.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有这些数据继续被当作完全随机且没有任何形状或模式来处理，这将使数据处理人员或数据科学团队感到极其困难和困惑。必须为这些随机数据流提供一个正式的统计基础，而开始这一过程的最简单方法之一就是测量它们的描述性统计数据。
- en: Assigning a stream of data to a particular distribution function (or a combination
    of many distributions) is actually part of **inferential statistics**. However,
    inferential statistics starts only when descriptive statistics is done alongside
    measuring all the important parameters of the pattern of the data.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据流分配给特定的分布函数（或许多分布的组合）实际上是**推断统计**的一部分。然而，推断统计只有在描述性统计与测量数据模式的全部重要参数同时进行时才开始。
- en: Therefore, as the front line of a data science pipeline, data wrangling must
    deal with measuring and quantifying such descriptive statistics of the incoming
    data. Along with the formatted and cleaned-up data, the primary job of a data
    wrangler is to hand over these measures (and sometimes accompanying plots) to
    the next team member of analytics.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为数据科学流程的前线，数据处理必须处理测量和量化这些描述性统计数据。除了格式化和清理后的数据，数据处理人员的主要任务是向下一个分析团队成员移交这些度量（有时还有相应的图表）。
- en: '**Plotting** and **visualization** also help a data wrangling team identify
    potential outliers and misfits in the incoming data stream and help them to take
    appropriate action. We will see some examples of such tasks in the next chapter,
    where we will identify odd data points by creating scatter plots or histograms
    and either impute or omit the data point.'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: '**绘图** 和 **可视化** 帮助数据整理团队识别传入数据流中的潜在异常值和不符合的数据，并帮助他们采取适当的行动。我们将在下一章中看到一些这样的示例，我们将通过创建散点图或直方图来识别异常数据点，并对其进行插补或删除。'
- en: Using NumPy and Pandas to Calculate Basic Descriptive Statistics on the DataFrame
  id: totrans-499
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 NumPy 和 Pandas 在 DataFrame 上计算基本描述性统计
- en: Now that we have some basic knowledge of NumPy, pandas, and matplotlib under
    our belt, we can explore a few additional topics related to these libraries, such
    as how we can bring them together for advanced data generation, analysis, and
    visualization.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对 NumPy、pandas 和 matplotlib 有了一些基本了解，我们可以探索一些与这些库相关的附加主题，例如如何将它们结合起来进行高级数据生成、分析和可视化。
- en: Random Number Generation Using NumPy
  id: totrans-501
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 NumPy 生成随机数
- en: NumPy offers a dizzying array of random number generation utility functions,
    all of which correspond to various statistical distributions, such as uniform,
    binomial, Gaussian normal, Beta/Gamma, and chi-square. Most of these functions
    are extremely useful and appear countless times in advanced statistical data mining
    and machine learning tasks. Having a solid knowledge of them is strongly encouraged
    for all the students taking this book.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 提供了一系列令人眼花缭乱的随机数生成实用函数，所有这些函数都对应于各种统计分布，如均匀分布、二项分布、高斯正态分布、Beta/Gamma 分布和卡方分布。这些函数中的大多数都非常有用，在高级统计数据挖掘和机器学习任务中出现了无数次。强烈建议所有学习这本书的学生都要掌握它们。
- en: Here, we will discuss three of the most important distributions that may come
    in handy for data wrangling tasks – uniform, binomial, and gaussian normal. The
    goal here is to show an example of simple function calls that can generate one
    or more random numbers/arrays whenever the user needs them.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将讨论三个可能在数据整理任务中派上用场的最重要分布——均匀分布、二项分布和高斯正态分布。我们的目标是展示一些简单的函数调用示例，用户需要时可以生成一个或多个随机数/数组。
- en: Note
  id: totrans-504
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The results will be different for each student when they use these functions
    as they are supposed to be random.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 当学生使用这些函数时，每个学生的结果都可能不同，因为它们应该是随机的。
- en: 'Exercise 43: Generating Random Numbers from a Uniform Distribution'
  id: totrans-506
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 43：从均匀分布生成随机数
- en: 'In this exercise, we will be generating random numbers from a uniform distribution:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将从均匀分布生成随机数：
- en: 'Generate a random integer between `1` and `10`:'
  id: totrans-508
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个介于 `1` 和 `10` 之间的随机整数：
- en: '[PRE144]'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'The sample output is as follows (your output could be different):'
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（你的输出可能不同）：
- en: '[PRE145]'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'Generate a random integer between 1 and 10 but with size=1 as an argument.
    It generates a NumPy array of size 1:'
  id: totrans-512
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 size=1 作为参数生成介于 1 和 10 之间的随机整数。它生成一个大小为 1 的 NumPy 数组：
- en: '[PRE146]'
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'The sample output is as follows (your output could be different due to random
    draw):'
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（你的输出可能因随机抽取而不同）：
- en: '[PRE147]'
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Therefore, we can easily write the code to generate the outcome of a dice being
    thrown (a normal 6-sided dice) for 10 trials.
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，我们可以轻松编写代码来生成掷骰子（一个正常的六面骰子）10 次的结果。
- en: How about moving away from the integers and generating some real numbers? Let's
    say that we want to generate artificial data for weights (in kgs) of 20 adults
    and we can measure the accurate weights up to two decimal places.
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们脱离整数，生成一些实数呢？比如说，我们想要生成 20 名成年人的体重（以千克为单位）的人工数据，并且我们可以测量精确到小数点后两位的体重。
- en: 'Generate decimal data using the following command:'
  id: totrans-518
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令生成小数数据：
- en: '[PRE148]'
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE148]'
- en: 'The sample output is as follows:'
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE149]'
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE149]'
- en: We are not only restricted to one-dimensional arrays.
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们不仅限于使用一维数组。
- en: 'Generate and show a 3x3 matrix with random numbers between `0` and `1`:'
  id: totrans-523
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成并显示一个介于 `0` 和 `1` 之间的随机数的 3x3 矩阵：
- en: '[PRE150]'
  id: totrans-524
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE150]'
- en: 'The sample output is as follows (note that your specific output could be different
    due to randomness):'
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（请注意，你的具体输出可能因随机性而不同）：
- en: '[PRE151]'
  id: totrans-526
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'Exercise 44: Generating Random Numbers from a Binomial Distribution and Bar
    Plot'
  id: totrans-527
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 44：从二项分布生成随机数并绘制条形图
- en: A binomial distribution is the probability distribution of getting a specific
    number of successes in a specific number of trials of an event with a pre-determined
    chance or probability.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 二项分布是在特定次数的试验中，以预定的概率或机会获得特定成功次数的概率分布。
- en: The most obvious example of this is a coin toss. A fair coin may have an equal
    chance of heads or tails, but an unfair coin may have more chances of the head
    coming up or vice versa. We can simulate a coin toss in NumPy in the following
    manner.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 最明显的例子是抛硬币。一个公平的硬币可能有相等的机会出现正面或反面，但一个不公平的硬币可能有更多机会出现正面或反面。我们可以在NumPy中以以下方式模拟抛硬币。
- en: 'Suppose we have a biased coin where the probability of heads is `0.6`. We toss
    this coin ten times and note down the number of heads turning up each time. That
    is one trial or experiment. Now, we can repeat this experiment (10 coin tosses)
    any number of times, say 8 times. Each time, we record the number of heads:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个偏心的硬币，其正面朝上的概率为`0.6`。我们抛掷这个硬币十次，并记录每次出现的正面次数。那是一次试验或实验。现在，我们可以重复这个实验（10次抛硬币）任意多次，比如8次。每次，我们记录正面次数：
- en: 'The experiment can be simulated using the following code:'
  id: totrans-531
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用以下代码来模拟实验：
- en: '[PRE152]'
  id: totrans-532
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE152]'
- en: 'The sample output is as follows (note your specific output could be different
    due to randomness):'
  id: totrans-533
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（注意，由于随机性，您的具体输出可能不同）：
- en: '[PRE153]'
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE153]'
- en: 'Plot the result using a bar chart:'
  id: totrans-535
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用柱状图绘制结果：
- en: '[PRE154]'
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'The sample output is as follows:'
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 3.17: A screenshot of a graph showing the binomial distribution and
    the bar plot](img/C11065_03_17.jpg)'
  id: totrans-538
  prefs: []
  type: TYPE_IMG
  zh: '![图3.17：显示二项分布和柱状图的图形截图](img/C11065_03_17.jpg)'
- en: 'Figure 3.17: A screenshot of a graph showing the binomial distribution and
    the bar plot'
  id: totrans-539
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.17：显示二项分布和柱状图的图形截图
- en: 'Exercise 45: Generating Random Numbers from Normal Distribution and Histograms'
  id: totrans-540
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习45：从正态分布生成随机数和直方图
- en: 'We discussed the normal distribution in the last topic and mentioned that it
    is the most important probability distribution because many pieces of natural,
    social, and biological data follow this pattern closely when the number of samples
    is large. NumPy provides an easy way to generate random numbers corresponding
    to this distribution:'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在上一个主题中讨论了正态分布，并提到它是最重要的概率分布，因为当样本数量大时，许多自然、社会和生物数据都紧密遵循这种模式。NumPy提供了一个简单的方法来生成与这种分布相对应的随机数：
- en: 'Draw a single sample from a normal distribution by using the following command:'
  id: totrans-542
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令从一个正态分布中抽取一个样本：
- en: '[PRE155]'
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 'The sample output is as follows (note that your specific output could be different
    due to randomness):'
  id: totrans-544
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下（注意，由于随机性，您的具体输出可能不同）：
- en: '[PRE156]'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE156]'
- en: We know that normal distribution is characterized by two parameters – mean (µ)
    and standard deviation (σ). In fact, the default values for this particular function
    are µ = 0.0 and σ = 1.0.
  id: totrans-546
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们知道正态分布由两个参数定义——均值（µ）和标准差（σ）。事实上，这个特定函数的默认值是µ = 0.0和σ = 1.0。
- en: Suppose we know that the heights of the teenage (12-16 years) students in a
    particular school is distributed normally with a mean height of 155 cm and a standard
    deviation of 10 cm.
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设我们知道某所学校青少年（12-16岁）学生的身高呈正态分布，平均身高为155厘米，标准差为10厘米。
- en: 'Generate a histogram of 100 students by using the following command:'
  id: totrans-548
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令生成100名学生的直方图：
- en: '[PRE157]'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'The sample output is as follows:'
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![](img/C11065_03_18.jpg)'
  id: totrans-551
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C11065_03_18.jpg)'
- en: 'Figure 3.18: Histogram of teenage student''s height'
  id: totrans-552
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.18：青少年学生身高的直方图
- en: Note the use of the `loc` parameter for the mean (=155) and the `scale` parameter
    for standard deviation (=10). The size parameter is set to 100 for that may samples'
    generation.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 注意使用`loc`参数来表示平均值（=155）和`scale`参数来表示标准差（=10）。大小参数设置为100，以便生成可能样本。
- en: 'Exercise 46: Calculation of Descriptive Statistics from a DataFrame'
  id: totrans-554
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习46：从DataFrame计算描述性统计
- en: Recollect the `age`, `weight`, and `height` parameters that we defined for the
    plotting exercise. Let's put that data in a DataFrame to calculate various descriptive
    statistics about them.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下我们为绘图练习定义的`age`、`weight`和`height`参数。让我们将这些数据放入DataFrame中，以计算它们的各种描述性统计。
- en: 'The best part of working with a pandas DataFrame is that it has a built-in
    utility function to show all of these descriptive statistics with a single line
    of code. It does this by using the `describe` method:'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 与pandas DataFrame一起工作的最好部分是它有一个内置的实用函数，可以单行代码显示所有这些描述性统计。它是通过使用`describe`方法来做到这一点的：
- en: 'Construct a dictionary with the available series data by using the following
    command:'
  id: totrans-557
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令使用可用的序列数据构建一个字典：
- en: '[PRE158]'
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'The output is as follows:'
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_03_19.jpg)'
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C11065_03_19.jpg)'
- en: 'Figure 3.19: Output of the created dictionary'
  id: totrans-561
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.19：创建的字典输出
- en: 'Find the number of rows and columns of the DataFrame by executing the following
    command:'
  id: totrans-562
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令找出DataFrame的行数和列数：
- en: '[PRE159]'
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'The output is as follows:'
  id: totrans-564
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE160]'
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'Obtain a simple `count` (any column can be used for this purpose) by executing
    the following command:'
  id: totrans-566
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令获取简单的`count`（任何列都可以用于此目的）：
- en: '[PRE161]'
  id: totrans-567
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'The output is as follows:'
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE162]'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE162]'
- en: 'Calculate the `sum` total of age by using the following command:'
  id: totrans-570
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算年龄的总和：
- en: '[PRE163]'
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE163]'
- en: 'The output is as follows:'
  id: totrans-572
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE164]'
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE164]'
- en: 'Calculate the `mean` age by using the following command:'
  id: totrans-574
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算平均年龄：
- en: '[PRE165]'
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE165]'
- en: 'The output is as follows:'
  id: totrans-576
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE166]'
  id: totrans-577
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE166]'
- en: 'Calculate the `median` weight by using the following command:'
  id: totrans-578
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算中值重量：
- en: '[PRE167]'
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'The output is as follows:'
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE168]'
  id: totrans-581
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'Calculate the `maximum` height by using the following command:'
  id: totrans-582
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算最大高度：
- en: '[PRE169]'
  id: totrans-583
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'The output is as follows:'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE170]'
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE170]'
- en: 'Calculate the `standard deviation` of the weights by using the following command:'
  id: totrans-586
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算重量的标准差：
- en: '[PRE171]'
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE171]'
- en: 'The output is as follows:'
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE172]'
  id: totrans-589
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE172]'
- en: Note how we are calling the statistical functions directly from a DataFrame
    object.
  id: totrans-590
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意我们是如何直接从DataFrame对象调用统计函数的。
- en: 'To calculate `percentile`, we can call a function from NumPy and pass on the
    particular column (a pandas series). For example, to calculate the 75th and 25th
    percentiles of age distribution and their difference (called the inter-quartile
    range), use the following code:'
  id: totrans-591
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要计算百分位数，我们可以从NumPy中调用一个函数并将特定的列（一个pandas序列）传递给它。例如，要计算年龄分布的75百分位数和25百分位数及其差（称为四分位距），请使用以下代码：
- en: '[PRE173]'
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE173]'
- en: 'The output is as follows:'
  id: totrans-593
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE174]'
  id: totrans-594
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE174]'
- en: 'Use the `describe` command to find a detailed description of the DataFrame:'
  id: totrans-595
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`describe`命令来查找DataFrame的详细描述：
- en: '[PRE175]'
  id: totrans-596
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE175]'
- en: 'The output is as follows:'
  id: totrans-597
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.20: Output of the DataFrame using the describe method](img/C11065_03_20.jpg)'
  id: totrans-598
  prefs: []
  type: TYPE_IMG
  zh: '![图3.20：使用describe方法得到的DataFrame输出](img/C11065_03_20.jpg)'
- en: 'Figure 3.20: Output of the DataFrame using the describe method'
  id: totrans-599
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.20：使用describe方法得到的DataFrame输出
- en: Note
  id: totrans-600
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: This function works only on the columns where numeric data is present. It has
    no impact on the non-numeric columns, for example, People in this DataFrame.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数仅适用于包含数值数据的列。它对非数值列没有影响，例如，DataFrame中的People。
- en: 'Exercise 47: Built-in Plotting Utilities'
  id: totrans-602
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习47：内置绘图实用工具
- en: 'DataFrame also has built-in plotting utilities that wrap around matplotlib
    functions and create basic plots of numeric data:'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame还包含内置的绘图实用工具，这些实用工具围绕matplotlib函数创建，并创建基本数值数据的图表：
- en: 'Find the histogram of the weights by using the `hist` function:'
  id: totrans-604
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`hist`函数找出重量的直方图：
- en: '[PRE176]'
  id: totrans-605
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE176]'
- en: 'The output is as follows:'
  id: totrans-606
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.21: Histogram of the weights](img/Image60813.jpg)'
  id: totrans-607
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.21：重量的直方图](img/Image60813.jpg)'
- en: 'Figure 3.21: Histogram of the weights'
  id: totrans-608
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.21：重量的直方图
- en: 'Create a simple scatter plot directly from the DataFrame to plot the relationship
    between weight and heights by using the following command:'
  id: totrans-609
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令直接从DataFrame创建简单的散点图，以绘制重量与身高之间的关系：
- en: '[PRE177]'
  id: totrans-610
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'The output is as follows:'
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![](img/Image60822.jpg)'
  id: totrans-612
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image60822.jpg)'
- en: 'Figure 3.22: Weight versus Height scatter plot'
  id: totrans-613
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.22：重量与身高的散点图
- en: Note
  id: totrans-614
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: You can try regular matplotlib methods around this function call to make your
    plot pretty.
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以尝试在这个函数调用周围使用matplotlib的常规方法来使你的图表更美观。
- en: 'Activity 5: Generating Statistics from a CSV File'
  id: totrans-616
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动5：从CSV文件生成统计数据
- en: Suppose you are working with the famous Boston housing price (from 1960) dataset.
    This dataset is famous in the machine learning community. Many regression problems
    can be formulated, and machine learning algorithms can be run on this dataset.
    You will do perform a basic data wrangling activity (including plotting some trends)
    on this dataset by reading it as a pandas DataFrame.
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在处理著名的波士顿房价（从1960年）数据集。这个数据集在机器学习社区中很有名。可以制定许多回归问题，并且可以在该数据集上运行机器学习算法。你将通过将其作为pandas
    DataFrame读取来执行基本的数据整理活动（包括绘制一些趋势）。
- en: Note
  id: totrans-618
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The pandas function for reading a CSV file is `read_csv`.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: pandas读取CSV文件的函数是`read_csv`。
- en: 'These steps will help you complete this activity:'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤将帮助你完成此活动：
- en: Load the necessary libraries.
  id: totrans-621
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载必要的库。
- en: Read in the Boston housing dataset (given as a `.csv` file) from the local directory.
  id: totrans-622
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本地目录中读取Boston住房数据集（以`.csv`文件形式给出）。
- en: Check the first 10 records. Find the total number of records.
  id: totrans-623
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查前10条记录。找出记录总数。
- en: Create a smaller DataFrame with columns that do not include `CHAS`, `NOX`, `B`,
    and `LSTAT`.
  id: totrans-624
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个较小的DataFrame，其中不包含`CHAS`、`NOX`、`B`和`LSTAT`列。
- en: Check the last seven records of the new DataFrame you just created.
  id: totrans-625
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你刚刚创建的新DataFrame的最后七条记录。
- en: Plot the histograms of all the variables (columns) in the new DataFrame.
  id: totrans-626
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制新DataFrame中所有变量（列）的直方图。
- en: Plot them all at once using a `for` loop. Try to add a unique title to a plot.
  id: totrans-627
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`for`循环一次性绘制所有图表。尝试为每个图表添加一个独特的标题。
- en: Create a scatter plot of crime rate versus price.
  id: totrans-628
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建犯罪率与价格之间的散点图。
- en: Plot using `log10(crime)` versus `price`.
  id: totrans-629
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`log10(crime)`与`price`进行绘图。
- en: Calculate some useful statistics, such as mean rooms per dwelling, median age,
    mean distances to five Boston employment centers, and the percentage of houses
    with a low price (< $20,000).
  id: totrans-630
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算一些有用的统计数据，例如每套住宅的平均房间数、中位数年龄、平均距离五个波士顿就业中心以及价格低于$20,000的房屋百分比。
- en: Note
  id: totrans-631
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found on page 292.
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个活动的解决方案可以在第292页找到。
- en: Summary
  id: totrans-633
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we started with the basics of NumPy arrays, including how to
    create them and their essential properties. We discussed and showed how a NumPy
    array is optimized for vectorized element-wise operations and differs from a regular
    Python list. Then, we moved on to practicing various operations on NumPy arrays
    such as indexing, slicing, filtering, and reshaping. We also covered special one-dimensional
    and two-dimensional arrays, such as zeros, ones, identity matrices, and random
    arrays.
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先介绍了NumPy数组的基础知识，包括如何创建它们及其基本属性。我们讨论并展示了NumPy数组是如何优化向量化的元素级操作的，以及它与常规Python列表的不同之处。然后，我们转向练习NumPy数组的各种操作，如索引、切片、过滤和重塑。我们还涵盖了特殊的一维和二维数组，例如零数组、一数组、单位矩阵和随机数组。
- en: In the second major topic of this chapter, we started with pandas series objects
    and quickly moved on to a critically important object – pandas DataFrames. It
    is analogous to Excel or MATLAB or a database tab, but with many useful properties
    for data wrangling. We demonstrated some basic operations on DataFrames, such
    as indexing, subsetting, row and column addition, and deletion.
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的第二大主题中，我们首先介绍了pandas系列对象，然后迅速转向一个至关重要的对象——pandas DataFrame。它与Excel、MATLAB或数据库标签页类似，但具有许多用于数据处理的有用属性。我们演示了DataFrame的一些基本操作，例如索引、子集、行和列的添加和删除。
- en: Next, we covered the basics of plotting with matplotlib, the most widely used
    and popular Python library for visualization. Along with plotting exercises, we
    touched upon refresher concepts of descriptive statistics (such as central tendency
    and measure of spread) and probability distributions (such as uniform, binomial,
    and normal).
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们介绍了使用matplotlib进行绘图的基础知识，matplotlib是最广泛使用和最受欢迎的Python可视化库。除了绘图练习，我们还回顾了描述性统计（如集中趋势和离散程度度量）和概率分布（如均匀分布、二项分布和正态分布）的概念。
- en: In the next chapter, we will cover more advanced operation with pandas DataFrames
    that will come in very handy for day-to-day working in a data wrangling job.
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍pandas DataFrame的更多高级操作，这些操作在日常数据处理工作中非常有用。
