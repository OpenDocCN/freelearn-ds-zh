- en: Automating Cloud Cartography
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化云制图
- en: Mapbox has become synonymous with mobile mapping and data visualizations. In
    addition to their basemap styling toolset, which has been adopted by app developers
    and cartographers, they are also producing interesting mapping tools written in
    Python and JavaScript.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Mapbox已成为移动制图和数据可视化的同义词。除了被应用程序开发者和制图师采用的基图样式工具集外，他们还在生产用Python和JavaScript编写的有趣的制图工具。
- en: Combining those two useful languages into one package, Mapbox recently released
    the new MapboxGL—Jupyter Python module. This new module allows for instant data
    visualization creation within a Jupyter Notebook environment. Along with the Mapbox
    Python SDK, a module that allows API access to account services, Python make it
    easy to add Mapbox tools and services to enterprise geospatial applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 将这两种有用的语言结合成一个包，Mapbox最近发布了新的MapboxGL—Jupyter Python模块。这个新模块允许在Jupyter Notebook环境中即时创建数据可视化。与Mapbox
    Python SDK一起，一个允许API访问账户服务的模块，Python使将Mapbox工具和服务添加到企业地理空间应用变得容易。
- en: 'In this chapter, we''ll learn:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习：
- en: How to create a Mapbox account to  generate access tokens
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建Mapbox账户以生成访问令牌
- en: How to style a custom basemap
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何样式化自定义基础图
- en: Read/write access to cloud data and basemaps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对云数据和基础图的读写访问
- en: How to create a choropleth map
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建面状图
- en: How to create a graduated circle visualization
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建渐变圆可视化
- en: All things cartographic
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 所有制图相关内容
- en: Founded in 2010 by Eric Gunderson, Mapbox has expanded rapidly and grown beyond
    its startup roots to become a leader in the cartographic renaissance. Their MapboxGL
    JavaScript API is a useful library for creating interactive web maps and data
    visualizations. They have contributed multiple open mapping specifications, including
    vector tiles, to the geospatial community.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由埃里克·冈德森于2010年创立的Mapbox迅速发展，并超越了其初创公司的根基，成为制图复兴的领导者。他们的MapboxGL JavaScript API是一个用于创建交互式网络地图和数据可视化的有用库。他们向地理空间社区贡献了多个开放制图规范，包括矢量瓦片。
- en: With a core focus on providing custom basemap tiles to map and app developers,
    Mapbox has positioned themselves as the leading software company for web mapping
    and mobile applications. The two Python modules used in this chapter allow GIS
    managers and developers to integrate their services and tools into an enterprise
    geographic information ecosystem.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Mapbox专注于为地图和应用程序开发者提供定制基础图瓦片，将自己定位为网络制图和移动应用领域的领先软件公司。本章中使用的两个Python模块允许GIS经理和开发人员将他们的服务和工具集成到企业地理信息生态系统中。
- en: How to integrate Mapbox into your GIS
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何将Mapbox集成到您的GIS中
- en: With their JavaScript libraries and the new MapboxGL—Jupyter Python module,
    Mapbox tools are easier than ever to use. Geospatial developers and programmers
    can integrate their tools into existing GIS workflows or can create new maps and
    apps that take advantage of the suite of offerings by Mapbox.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 通过他们的JavaScript库和新的MapboxGL—Jupyter Python模块，Mapbox工具的使用比以往任何时候都更容易。地理空间开发者和程序员可以将他们的工具集成到现有的GIS工作流程中，或者创建利用Mapbox提供的套件的新地图和应用程序。
- en: Mapbox, like CARTO, allows for account-based cloud data storage. However, their
    focus is less on analytical tools and more on cartographic tools. For mapping
    teams, large and small, using Mapbox tools eases the cost of creating and supporting
    a custom basemap for interactive web maps, and offers greater savings over other
    map tile options such as the Google Maps API.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Mapbox，就像CARTO一样，允许基于账户的云数据存储。然而，他们的重点更少在分析工具上，更多在制图工具上。对于大小不同的制图团队，使用Mapbox工具可以降低创建和支持自定义基础图的成本，并且比其他地图瓦片选项（如Google
    Maps API）提供更大的节省。
- en: Mapbox Studio makes it easy to create a map with a cartographic look and feel
    that can match the branding of the company or department. The basemaps can be
    built using existing styles and overlaid with your organization's layers, or a
    completely new basemap can be designed. It even allows for styling to be based
    on an image that is dropped into the studio, assigning colors to features based
    on a histogram generated from the pixels in the image.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Mapbox Studio使创建具有制图外观和感觉的地图变得容易，可以与公司或部门的品牌相匹配。基础图可以使用现有样式构建，并叠加您的组织层，或者设计一个全新的基础图。它甚至允许基于被拖入工作室的图像进行样式化，根据从图像像素生成的直方图为要素分配颜色。
- en: Mapbox tools
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mapbox工具
- en: Employing leaders in the geospatial field (such as Mapbox open source lead Sean
    Gillies, a major developer of Shapely, Fiona, and Rasterio), Mapbox has contributed
    to analysis and mapping Python libraries that are available under open source
    license. Their new MapboxGL—Jupyter library represents a new way to take advantage
    of their suite of tools in combination with other Python modules (such as Pandas/GeoPandas)
    and multiple data types, such as GeoJSON, CSVs, and even shapefiles.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在地理空间领域（例如Mapbox开源项目负责人Sean Gillies，Shapely、Fiona和Rasterio的主要开发者）的领导下，Mapbox为开源许可下的分析和地图制作Python库做出了贡献。他们新的MapboxGL—Jupyter库代表了一种利用其工具套件结合其他Python模块（如Pandas/GeoPandas）和多种数据类型（如GeoJSON、CSVs以及甚至shapefiles）的新方法。
- en: Besides the new Python module, Mapbox's open source tools include the MapboxGL
    JavaScript library, built on the **Web Graphics Library** (**WebGL**), and the
    Mapbox Python SDK.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了新的Python模块外，Mapbox的开源工具还包括建立在**Web图形库**（**WebGL**）之上的MapboxGL JavaScript库，以及Mapbox
    Python SDK。
- en: MapboxGL.js
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MapboxGL.js
- en: MapboxGL is built on top of `Leaflet.js`, a well-known JavaScript mapping library.
    Released in 2011, Leaflet supports a wide variety of well-known web mapping applications,
    including Foursquare, Craigslist, and Pinterest. The developer of Leaflet, Vladimir
    Agafonkin, has been working for Mapbox since 2013.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: MapboxGL建立在知名的JavaScript地图库`Leaflet.js`之上。Leaflet于2011年发布，支持多种知名的Web地图应用，包括Foursquare、Craigslist和Pinterest。Leaflet的开发者Vladimir
    Agafonkin自2013年以来一直在Mapbox工作。
- en: Building on the original Leaflet development effort, `MapboxGL.js` incorporates
    the WebGL library, which takes advantage of the HTML 5 `canvas` tag to support
    web graphics without a plug-in. `MapboxGL.js` supports vector tiles, as well as
    3D environments that zoom and pan smoothly. It supports GeoJSON overlays as well
    as markers and shapes. Events, including clicks, zooms, and pans, can be used
    to trigger data processing functions, making it perfect for interactive web mapping
    applications.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Leaflet原始开发努力的基础上，`MapboxGL.js`集成了WebGL库，利用HTML 5的`canvas`标签支持无需插件的Web图形。`MapboxGL.js`支持矢量瓦片，以及平滑缩放和平移的3D环境。它支持GeoJSON叠加以及标记和形状。包括点击、缩放和平移在内的事件可以用来触发数据处理函数，使其非常适合交互式Web地图应用。
- en: Mapbox Python SDK
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mapbox Python SDK
- en: The Mapbox Python SDK is used to access most Mapbox services, including directions,
    geocoding, analytics, and datasets. Low-level access to the cloud-based services
    supporting data editing and upload, administrative management, and location-based
    queries, allows for enterprise integration with, and extension of, local GIS.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Mapbox Python SDK用于访问大多数Mapbox服务，包括路线、地理编码、分析和数据集。对支持数据编辑和上传、管理管理和基于位置的查询的云服务进行低级访问，允许与本地GIS进行企业集成和扩展。
- en: Installing the Python SDK
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Python SDK
- en: 'Use `pip` to install the Python SDK, allowing API access to the Mapbox services.
    This module is not required to use the MapboxGL—Jupyter tools, but it is useful
    for uploads and queries:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pip`安装Python SDK，以允许对Mapbox服务的API访问。此模块不是使用MapboxGL—Jupyter工具所必需的，但对于上传和查询很有用：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Download the Mapbox Python SDK here:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处下载Mapbox Python SDK：
- en: '[https://github.com/mapbox/mapbox-sdk-py](https://github.com/mapbox/mapbox-sdk-py).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/mapbox/mapbox-sdk-py](https://github.com/mapbox/mapbox-sdk-py).'
- en: Getting started with Mapbox
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用Mapbox
- en: To get started using Mapbox tools and Mapbox Studio, you'll need to sign up
    for an account. This will allow you to generate API keys that are required for
    adding Mapbox basemap tiles to web maps, as well as to create the custom basemaps
    that will differentiate your maps. With this account, you can also load data into
    the cloud to use within your maps.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Mapbox工具和Mapbox Studio，您需要注册一个账户。这将允许您生成API密钥，这些密钥是添加Mapbox底图瓦片到网络地图以及创建区分您地图的定制底图所必需的。有了这个账户，您还可以将数据加载到云端，以便在您的地图中使用。
- en: Signing up for a Mapbox account
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册Mapbox账户
- en: 'To use Mapbox tools and basemaps, you must sign up for an account. This is
    a straightforward process and involves supplying a username, an email, and a password:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Mapbox工具和底图，您必须注册一个账户。这是一个简单的过程，需要提供用户名、电子邮件和密码：
- en: '![](img/7e90dd7d-5cb0-4c8f-82a5-4e283e818c38.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7e90dd7d-5cb0-4c8f-82a5-4e283e818c38.png)'
- en: Once you are signed up, you'll be taken to the Account Dashboard, where API
    access token can be generated and Mapbox Studio can be accessed. The Dashboard
    also has your account statistics on the number of API calls to the variety of
    services available, including directions, geocoding, and datasets.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，您将被带到账户仪表板，其中可以生成API访问令牌并访问Mapbox Studio。仪表板还包括您的账户统计信息，包括对各种服务（如路线、地理编码和数据集）的API调用次数。
- en: Creating an API token
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建API令牌
- en: 'With the new account comes the Account Dashboard, which supplies an API access
    token by default. This public access token or key begins with pk and is a long
    string of characters. This API access token is used to authenticate all of the
    maps and apps that will be built using this account. Copy the string of characters
    and add it to your maps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 新账户默认包含账户仪表板，该仪表板提供API访问令牌。这个公开访问令牌或密钥以pk开头，是一长串字符。此API访问令牌用于验证将使用此账户构建的所有地图和应用程序。复制字符串并将其添加到您的地图中：
- en: '![](img/7c65efb6-75f3-4db5-bf14-e0688f5c508b.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7c65efb6-75f3-4db5-bf14-e0688f5c508b.png)'
- en: 'To create a new API access token, push the Create a token button and select
    the access levels that it will allow:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建新的API访问令牌，点击“创建令牌”按钮并选择它将允许的访问级别：
- en: '![](img/0b3f8431-1c31-4e78-9584-5e72c58de0d7.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b3f8431-1c31-4e78-9584-5e72c58de0d7.png)'
- en: 'Within the JavaScript code, the API access token is passed to the MapboxGL
    object to enable access to tiles and tools. Here is a simple web map using HTML/JavaScript
    as an example of how the access token is used to create a map. Replace the access
    token mentioned in the following code with your own public access token:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript代码中，API访问令牌被传递给MapboxGL对象以启用对瓦片和工具的访问。以下是一个简单的网络地图，使用HTML/JavaScript作为如何使用访问令牌创建地图的示例。将以下代码中提到的访问令牌替换为您自己的公开访问令牌：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Save this code as "index.html", and open it using a browser to see the simple
    map. Make sure that you replace the API access token in the earlier example with
    your own key, or the map will not appear.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 将此代码保存为"index.html"，然后使用浏览器打开以查看简单的地图。请确保将早期示例中的API访问令牌替换为您自己的密钥，否则地图将不会显示。
- en: 'Explore the documentation to understand the various configurations available
    for the API access token:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 探索文档以了解API访问令牌的各种配置：
- en: '[https://www.mapbox.com/help/how-access-tokens-work/](https://www.mapbox.com/help/how-access-tokens-work/).'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.mapbox.com/help/how-access-tokens-work/](https://www.mapbox.com/help/how-access-tokens-work/).'
- en: Adding data to a Mapbox account
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据添加到Mapbox账户
- en: Mapbox supports the use of your own data. Not only can you style basemap tiles,
    but you can even add your own data to the tiles to make them more relevant to
    your customers or users. This can be managed programmatically using the Mapbox
    Python SDK and the uploads and datasets APIs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Mapbox支持使用您自己的数据。您不仅可以为底图瓦片设置样式，甚至可以将自己的数据添加到瓦片中，使其更符合您的客户或用户的需求。这可以通过Mapbox
    Python SDK和上传以及数据集API进行编程管理。
- en: 'To upload data, you must create a secret API access token. These are created
    using the same Create a token process detailed earlier, but include secret scopes.
    Choose the following scopes to allow for dataset and tileset read and write capabilities:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传数据，您必须创建一个秘密API访问令牌。这些令牌是通过之前详细说明的创建令牌过程创建的，但包括秘密范围。选择以下范围以允许数据集和瓦片集的读写能力：
- en: DATASETS:WRITE
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DATASETS:WRITE
- en: UPLOADS:READ
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UPLOADS:READ
- en: UPLOADS:WRITE
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UPLOADS:WRITE
- en: TILESETS:READ
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TILESETS:READ
- en: TILESETS:WRITE
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TILESETS:WRITE
- en: 'Read more about loading data into your Mapbox account here:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处了解更多关于将数据加载到您的Mapbox账户的信息：
- en: '[https://www.mapbox.com/help/how-uploads-work/](https://www.mapbox.com/help/how-uploads-work/).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.mapbox.com/help/how-uploads-work/](https://www.mapbox.com/help/how-uploads-work/).'
- en: Tilesets
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 瓦片集
- en: Tilesets are rasters which are tiled to create **slippy maps**, allowing them
    to overlay on a basemap. They can be generated from vector data to create custom
    basemaps with your own data featured. Using the `Uploader` class from the Mapbox
    Python SDK, GeoJSON files and shapefiles can be programmatically loaded as tilesets
    into your cloud account.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 瓦片集是经过分块处理的栅格数据，用于创建**可滑动地图**，允许它们叠加在底图上。它们可以从矢量数据生成，以创建带有您自己数据的自定义底图。使用Mapbox
    Python SDK中的`Uploader`类，可以将GeoJSON文件和shapefile以编程方式作为瓦片集加载到您的云账户中。
- en: 'Read more about tilesets here:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处了解更多关于瓦片集的信息：
- en: '[https://www.mapbox.com/api-documentation/#tilesets](https://www.mapbox.com/api-documentation/#tilesets).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.mapbox.com/api-documentation/#tilesets](https://www.mapbox.com/api-documentation/#tilesets).'
- en: Datasets
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集
- en: Datasets are GeoJSON layers, which can be more frequently edited than tilesets.
    While you can upload datasets using the Account Dashboard, to load a dataset larger
    than 5 MB you must use the datasets API.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集是GeoJSON图层，可以比瓦片集更频繁地编辑。虽然您可以使用账户仪表板上传数据集，但要加载大于5 MB的数据集，您必须使用数据集API。
- en: 'Read more about datasets here:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里了解更多关于数据集的信息：
- en: '[https://www.mapbox.com/api-documentation/#datasets](https://www.mapbox.com/api-documentation/#datasets).'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.mapbox.com/api-documentation/#datasets](https://www.mapbox.com/api-documentation/#datasets).'
- en: Example – uploading a GeoJSON dataset
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例 - 上传GeoJSON数据集
- en: 'The `mapbox` module has a `Datasets` class that is used to create and populated
    datasets in the account. This demonstration code will read from a zip code GeoJSON
    file and load one zip code GeoJSON object into a new dataset. Pass the secret
    access token to the `Datasets` class:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`mapbox`模块有一个`Datasets`类，用于在账户中创建和填充数据集。此演示代码将从邮政编码GeoJSON文件中读取，并将一个邮政编码GeoJSON对象加载到新的数据集中。将秘密访问令牌传递给`Datasets`类：'
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will add one zip code to the layer, which can be viewed from the Account
    Dashboard:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为图层添加一个邮政编码，您可以在账户仪表板上查看：
- en: '![](img/9deb66ea-c49d-465f-a445-6cb157c5e3db.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9deb66ea-c49d-465f-a445-6cb157c5e3db.png)'
- en: Example – uploading data as a tileset
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例 - 将数据作为瓦片集上传
- en: 'Tilesets can be added to custom basemap styles, making it possible to quickly
    load your data layers. This demonstration code uses the secret token with read
    and write capabilities to upload a GeoJSON file as a tileset using the Mapbox
    Python SDK:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将瓦片集添加到自定义底图样式，这使得快速加载数据图层成为可能。此演示代码使用具有读写能力的秘密令牌，通过Mapbox Python SDK将GeoJSON文件作为瓦片集上传：
- en: '[PRE3]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If the response returned is a `201` response, the upload has succeeded.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果返回的响应是`201`响应，则上传成功。
- en: 'Read more about the Uploads API here:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里了解更多关于上传API的信息：
- en: '[https://www.mapbox.com/api-documentation/?language=Python](https://www.mapbox.com/api-documentation/?language=Python).'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.mapbox.com/api-documentation/?language=Python](https://www.mapbox.com/api-documentation/?language=Python).'
- en: Mapbox Studio
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mapbox Studio
- en: 'Creating a custom basemap can be a time-consuming process for even experienced
    cartographers. To help ease this process, Mapbox engineers have used **Open Street
    Map** (**OSM**) data to generate pre-built custom basemaps that can be used in
    commercial and non-commercial applications. Using Mapbox Studio, these styles
    can also be adjusted to add more custom touches. Also, basemaps can be built from
    the ground up to create a specific look for your application:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 即使对于经验丰富的制图员来说，创建自定义底图也可能是一个耗时的过程。为了帮助简化这个过程，Mapbox工程师使用了**Open Street Map**（**OSM**）数据来生成预构建的自定义底图，这些底图可用于商业和非商业应用。使用Mapbox
    Studio，还可以调整这些样式以添加更多定制功能。此外，可以从头开始构建底图，以创建适用于您应用程序的特定外观：
- en: '![](img/c15cb8cd-5290-41d8-9a58-6e51f5ccc3a1.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c15cb8cd-5290-41d8-9a58-6e51f5ccc3a1.png)'
- en: To access Mapbox Studio, log into the Account Dashboard and click the Mapbox
    Studio link. In this Studio environment, you can manage basemaps, tilesets, and
    datasets.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问Mapbox Studio，请登录账户仪表板并点击Mapbox Studio链接。在这个Studio环境中，您可以管理底图、瓦片集和数据集。
- en: Customizing a basemap
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制底图
- en: 'Click the New Style button and select the Satellite Streets theme:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 点击新建样式按钮并选择卫星街道主题：
- en: '![](img/379c4100-c11a-4300-9c9d-533480bfc71a.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/379c4100-c11a-4300-9c9d-533480bfc71a.png)'
- en: 'A quick tutorial explains the customization options. A variety of available
    layers have been added, and both their labeling and styling can be adjusted by
    clicking on the layers in the table of contents. New layers can be added as well,
    including account tilesets:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一个快速教程解释了定制选项。已经添加了各种可用的图层，并且可以通过点击目录表中的图层来调整它们的标签和样式。还可以添加新的图层，包括账户瓦片集：
- en: '![](img/cadcf094-22bc-47d5-9fd6-015e22207530.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cadcf094-22bc-47d5-9fd6-015e22207530.png)'
- en: 'Map zoom levels, bearing, pitch, and initial coordinates can be adjusted. Using
    the Map position menu, these map parameters can be changed and locked as the default
    position using the Lock button at the bottom:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 可以调整地图缩放级别、方位角、俯仰角和初始坐标。使用地图位置菜单，可以更改这些地图参数，并使用底部的锁定按钮将其锁定为默认位置：
- en: '![](img/c13f6524-9725-4c66-8731-776797dc370f.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c13f6524-9725-4c66-8731-776797dc370f.png)'
- en: Explore other styling options, such as label colors and layer scale levels.
    Once you have completed the customizations, publish the style by clicking the
    Publish style button. The style URL is added to MapboxGL visualizations for these
    Jupyter Notebook exercises or in web maps.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 探索其他样式选项，例如标签颜色和图层比例级别。完成定制后，通过点击发布样式按钮来发布样式。样式URL将添加到这些Jupyter Notebook练习的MapboxGL可视化或网络地图中。
- en: Adding a tileset
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加瓦片集
- en: 'To add your data to the basemap style, push the Layer button and select a tileset
    from the available selection. The zip codes tileset loaded earlier using the Mapbox
    Python SDK should be available, and can be added to the basemap and styled:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要将你的数据添加到基图样式，请点击图层按钮并从可用选择中选择一个瓦片集。之前使用 Mapbox Python SDK 加载的 zip 瓦片集应该可用，并可以添加到基图并对其进行样式化：
- en: '![](img/cfc3fdb9-9c6c-46aa-9bd9-5de97af7eea2.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cfc3fdb9-9c6c-46aa-9bd9-5de97af7eea2.jpg)'
- en: Virtual environment
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟环境
- en: 'Start a virtual environment using `virtualenv` (see the previous chapter for
    installation) and use `pip` to install the modules listed as follows. If you had
    a folder path of `C:\Python3Geospatial`, `virtualenv` will create a virtual environment
    folder, here called `mapboxenv`, which can be activated as shown:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `virtualenv`（参见上一章中的安装说明）启动一个虚拟环境，并使用 `pip` 安装以下列出的模块。如果你有一个文件夹路径为 `C:\Python3Geospatial`，`virtualenv`
    将创建一个虚拟环境文件夹，这里称为 `mapboxenv`，它可以按以下方式激活：
- en: '[PRE4]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Installing MapboxGL – Jupyter
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 MapboxGL – Jupyter
- en: 'The MapboxGL—Jupyter library is available using `pip` from the [PyPI.org](http://pypi.org)
    repository:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: MapboxGL—Jupyter 库可以通过 `pip` 从 [PyPI.org](http://pypi.org) 仓库获取：
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: All of the supporting modules will be located and installed along with the core
    libraries created by Mapbox.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 所有支持模块都将与 Mapbox 创建的核心库一起定位和安装。
- en: Installing Jupyter Notebooks
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Jupyter Notebooks
- en: 'Install the Jupyter Notebooks library in the virtual environment:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟环境中安装 Jupyter Notebooks 库：
- en: '[PRE6]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Installing Pandas and GeoPandas
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Pandas 和 GeoPandas
- en: 'Pandas should already be installed, as it is installed with GeoPandas, but
    if it has not yet been installed, use `pip` to find it in the [PyPI.org](http://pypi.org)
    repository:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 应该已经安装，因为它是与 GeoPandas 一起安装的，但如果尚未安装，请使用 `pip` 在 [PyPI.org](http://pypi.org)
    仓库中查找它：
- en: '[PRE7]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If you have any issues installing these modules on a Windows computer, explore
    the pre-built wheel binaries here (use `pip` to install them after download):'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 Windows 计算机上安装这些模块时遇到任何问题，请在此处探索预构建的 wheel 二进制文件（下载后使用 `pip` 安装）：
- en: '[https://www.lfd.uci.edu/~gohlke/pythonlibs/](https://www.lfd.uci.edu/~gohlke/pythonlibs/).'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.lfd.uci.edu/~gohlke/pythonlibs/](https://www.lfd.uci.edu/~gohlke/pythonlibs/)'
- en: Using the Jupyter Notebook server
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Jupyter Notebook 服务器
- en: Starting a Jupyter Notebook server is easy. When using a virtual environment,
    you'll need to activate the environment first, and then start the server. If not,
    make sure that Python and the location of the Notebook server are in the path
    environment variable.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Jupyter Notebook 服务器很简单。当使用虚拟环境时，你需要首先激活环境，然后启动服务器。如果不这样做，请确保 Python 和 Notebook
    服务器位置在路径环境变量中。
- en: 'Open the command prompt and enter `jupyter notebook` to start the server:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 打开命令提示符并输入 `jupyter notebook` 以启动服务器：
- en: '[PRE8]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The server will start and indicate the specifics of its port number and a token
    that can be used to relog into the web browser:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器将启动并显示其端口号和可以用于重新登录网页浏览器的令牌：
- en: '![](img/42a1dabb-19f7-4b47-ba68-cacfeb5191ac.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/42a1dabb-19f7-4b47-ba68-cacfeb5191ac.png)'
- en: 'Starting the server will open a browser window in the system browser. The server
    address is `localhost`, and the default port is `8888`. The browser will open
    at `http://localhost:8888/tree`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 启动服务器将在系统浏览器中打开一个浏览器窗口。服务器地址是 `localhost`，默认端口是 `8888`。浏览器将在 `http://localhost:8888/tree`
    打开：
- en: '![](img/4b060dfb-333b-4206-af65-68be15997378.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4b060dfb-333b-4206-af65-68be15997378.png)'
- en: 'Click the New button to create a new Notebook. Select the Python version from
    the Notebook section, and the new Notebook will open in a second tab. This Notebook
    should be renamed, as it quickly becomes difficult to organize Notebooks that
    are untitled:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 点击新建按钮创建一个新的笔记本。从笔记本部分选择 Python 版本，新的笔记本将在第二个标签页中打开。这个笔记本应该重命名，因为它很快就会变得难以组织未命名的笔记本：
- en: '![](img/ac90a315-68f3-4341-9e0e-e0532f262576.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ac90a315-68f3-4341-9e0e-e0532f262576.png)'
- en: Once the window has opened, the coding environment is live. In this example,
    we will import census tract data using GeoPandas, convert it to point data, select
    specific columns, and visualize it using MapboxGL—Jupyter.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口打开后，编码环境将处于活动状态。在这个例子中，我们将使用 GeoPandas 导入人口普查区数据，将其转换为点数据，选择特定列，并使用 MapboxGL—Jupyter
    进行可视化。
- en: Importing data using GeoPandas
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GeoPandas 导入数据
- en: 'Import the required modules and assign the API key to a variable. These commands
    should be added into Jupyter Notebook cells:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 导入所需的模块并将 API 密钥分配给一个变量。以下命令应添加到 Jupyter Notebook 单元中：
- en: '[PRE9]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The API key can also be assigned to a Windows path environment variable (for
    example, `"MAPBOX_ACCESS_TOKEN"`) and called using the `os` module:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: API密钥也可以分配给Windows路径环境变量（例如，`"MAPBOX_ACCESS_TOKEN"），并使用`os`模块调用：
- en: '[PRE10]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Creating point data from polygons
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从多边形创建点数据
- en: 'The Bay Area census tracts GeoJSON file has population data with polygon `geometry`.
    To create the first visualization we need to convert the geometry type to point:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 旧金山地区的人口普查区GeoJSON文件包含具有多边形`geometry`的人口数据。为了创建第一个可视化，我们需要将几何类型转换为点：
- en: '[PRE11]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output of the previous code is as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 之前代码的输出如下：
- en: '![](img/b962da69-204f-43c7-8b1b-7fa6822742c8.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b962da69-204f-43c7-8b1b-7fa6822742c8.png)'
- en: Data cleanup
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据清理
- en: 'This data visualization will compare the male and female population in the
    Bay Area. To generate the circle visualization, we can rename and eliminate unnecessary
    columns using Geopandas'' dataframe manipulation:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这份数据可视化将比较旧金山地区的男性和女性人口。为了生成圆可视化，我们可以使用Geopandas的数据帧操作重命名和删除不必要的列：
- en: '[PRE12]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This code created three new columns from three existing columns, by passing
    the name of the new columns and assigning the data values to be equal to the existing
    column. Then, the entire GeoDataFrame is rewritten (in memory) to only contain
    the three new columns and the centroids column, eliminating unwanted columns.
    Exploring the first five rows of the new GeoDataFrame allows us to see the new
    data structure:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码从三个现有列中创建了三个新列，通过传递新列的名称并将数据值赋给现有列。然后，整个GeoDataFrame（在内存中）被重写，只包含三个新列和中心点列，消除了不需要的列。探索新GeoDataFrame的前五行可以让我们看到新的数据结构：
- en: '![](img/acb4b206-d9c9-4841-817d-ca598cf087f5.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/acb4b206-d9c9-4841-817d-ca598cf087f5.png)'
- en: Saving the points as GeoJSON
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将点保存为GeoJSON
- en: 'Saving the newly cleaned GeoDataFrame is required for loading into the Mapbox
    `CircleViz` class. The GeoJSON driver must be specified, as the default output
    file format is shapefile:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 将新清理的GeoDataFrame保存下来是将其加载到Mapbox的`CircleViz`类所必需的。必须指定GeoJSON驱动程序，因为默认的输出文件格式是shapefile：
- en: '[PRE13]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Adding the points to a map
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将点添加到地图上
- en: 'To simply see the points on the map, we can supply a few parameters and call
    the `show` property of the `CircleViz` object:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要简单地查看地图上的点，我们可以提供一些参数并调用`CircleViz`对象的`show`属性：
- en: '[PRE14]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The previous code will produce the output as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码将产生以下输出：
- en: '![](img/c1ed2c88-cd1c-46d8-a99e-7ccf7bfdc893.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1ed2c88-cd1c-46d8-a99e-7ccf7bfdc893.png)'
- en: 'To classify the data, we can set color stops for specific fields, passing class
    breaks as a list with associated color information:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了分类数据，我们可以为特定字段设置颜色停止点，通过传递包含相关颜色信息的类断点列表：
- en: '[PRE15]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output will look like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将看起来像这样：
- en: '![](img/ed8a327a-6925-47b3-b346-59c846a3442f.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed8a327a-6925-47b3-b346-59c846a3442f.png)'
- en: 'Add some new fields to the `tract_points` GeoDataFrame and resave it:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 向`tract_points` GeoDataFrame添加一些新字段并重新保存：
- en: '[PRE16]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Creating a graduated color visualization
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建渐变色可视化
- en: 'This code will manually assign colors to specific sections of the data, breaking
    the data into categories. This also assigns specific radius sizes to data so that
    the visualization will convey information with both color and circle size:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码将手动为数据的特定部分分配颜色，将数据分为类别。这也为数据分配了特定的半径大小，以便可视化可以通过颜色和圆的大小传达信息：
- en: '[PRE17]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'With these radius sizes and color ranges set, they can be applied to two fields
    within the new GeoJSON: `Total Population` and `Percent Male`. For this visualization,
    the size of the circle will indicate the male percentage of the population, and
    the color will indicate the total population:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 设置了这些半径大小和颜色范围后，它们可以应用于新的GeoJSON中的两个字段：`总人口`和`男性百分比`。对于这个可视化，圆的大小将表示人口的男性百分比，颜色将表示总人口：
- en: '[PRE18]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This will produce an interactive map like this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生一个交互式地图，如下所示：
- en: '![](img/546f3b6a-2201-409c-8b2b-85b79b3442e2.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/546f3b6a-2201-409c-8b2b-85b79b3442e2.png)'
- en: Automatically setting colors, sizes, and breaks
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动设置颜色、大小和断点
- en: 'Instead of manually setting the colors, radius sizes, and breaks, MapboxGL—Jupyter
    includes utilites (such as `create_color_stops`) that create a match between colors
    (or sizes) and break values. The color schema is set by passing the `YlOrRd` keyword
    ( which means **Yellow Orange Red**). Also, we can adjust the basemap using another
    pre-set style or our own custom styles by setting the visualization style to the
    style URL:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 与手动设置颜色、半径大小和断点不同，MapboxGL—Jupyter 包含了创建颜色（或大小）与断点值之间匹配的实用工具（例如 `create_color_stops`）。颜色方案通过传递
    `YlOrRd` 关键字（表示**黄橙红**）来设置。此外，我们可以通过设置可视化样式为样式 URL 来调整底图：
- en: '[PRE19]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The dark basemap allows for the graduated circle visualizations to be more
    clearly seen:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 深色底图使得渐变圆可视化更加清晰可见：
- en: '![](img/18546256-83fb-42d9-8220-298df0f4268f.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/18546256-83fb-42d9-8220-298df0f4268f.png)'
- en: 'Explore the visualization options available in the documentation here:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 探索文档中可用的可视化选项：
- en: '[https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/viz.md.](https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/viz.md)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/viz.md.](https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/viz.md)'
- en: 'Explore the data utilities available here:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 探索这里可用的数据实用工具：
- en: '[https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/utils.md](https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/utils.md).'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/utils.md](https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/utils.md).'
- en: 'Explore the color ramps available here:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 探索这里可用的颜色渐变：
- en: '[https://github.com/mapbox/mapboxgl-jupyter/blob/master/mapboxgl/colors.py](https://github.com/mapbox/mapboxgl-jupyter/blob/master/mapboxgl/colors.py).'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/mapbox/mapboxgl-jupyter/blob/master/mapboxgl/colors.py](https://github.com/mapbox/mapboxgl-jupyter/blob/master/mapboxgl/colors.py).'
- en: Creating a choropleth map
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个面状图
- en: 'With a choropleth map, we can display a polygon GeoJSON file. Using the `tracts`
    GeoDataFrame, we''ll create another GeoDataFrame with polygon `geometry` and one
    tabular field, and save it to a file as `GeoJSON`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 使用面状图，我们可以显示一个多边形 GeoJSON 文件。使用 `tracts` GeoDataFrame，我们将创建另一个具有多边形 `geometry`
    和一个表格字段的 GeoDataFrame，并将其保存为 `GeoJSON` 文件：
- en: '[PRE20]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The visualization is created using the `ChoroplethViz` class. The basemap style
    is the URL of the satellite imagery style created earlier in the *MapBox Studio*,
    section of the chapter:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化是使用 `ChoroplethViz` 类创建的。底图样式是 *MapBox Studio* 章节中先前创建的卫星影像样式 URL：
- en: '[PRE21]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output generated is as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的输出如下：
- en: '![](img/b769edfc-3131-4be3-a7d9-1b79b9541fda.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b769edfc-3131-4be3-a7d9-1b79b9541fda.png)'
- en: Saving the map
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存地图
- en: 'To save the choropleth map, use the `create_html` method of the visualization:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存面状图，请使用可视化的 `create_html` 方法：
- en: '[PRE22]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To view the saved HTML file locally, open command prompt and start a local
    HTTP server using Python in the same folder as the saved HTML file. Then, open
    a browser at `http://localhost:8000/mpop.html` to see the map:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 要在本地查看保存的 HTML 文件，请打开命令提示符，并在与保存的 HTML 文件相同的文件夹中使用 Python 启动本地 HTTP 服务器。然后，在浏览器中打开
    `http://localhost:8000/mpop.html` 来查看地图：
- en: '[PRE23]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Creating a heat map
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建热图
- en: 'Use the `HeatmapViz` class to generate a heat map from the data:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `HeatmapViz` 类从数据生成热图：
- en: '[PRE24]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Uploading data using the Mapbox Python SDK
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Mapbox Python SDK 上传数据
- en: Storing datasets in the account and joining them to other tabular data is possible
    using MapboxGL—Jupyter and the Mapbox Python SDK. Loading a GeoJSON file requires
    specific permissions assigned only to secret API access tokens. To ensure that
    the API token used has the correct scope, you may have to generate a new API token.
    Go to your Account Dashboard and generate a new token, and ensure that you check
    the read and write capabilities for uploads and datasets as shown in the *Getting
    started with Mapbox* section.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 MapboxGL—Jupyter 和 Mapbox Python SDK 在账户中存储数据集并将它们与其他表格数据连接起来是可能的。加载 GeoJSON
    文件需要仅分配给秘密 API 访问令牌的特定权限。为了确保使用的 API 令牌具有正确的范围，您可能需要生成一个新的 API 令牌。转到您的账户仪表板并生成一个新的令牌，并确保您检查了如
    *Mapbox 入门* 部分所示的读取和写入能力：
- en: Creating the dataset
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据集
- en: 'The first step is to create a dataset, if you haven''t created it already.
    This code generates an empty dataset in the account, which will have a name and
    description as provided to the `datasets.create` method:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建一个数据集，如果您还没有创建，则此代码将在账户中生成一个空数据集，它将具有 `datasets.create` 方法提供的名称和描述：
- en: '[PRE25]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Loading the data into the dataset
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据加载到数据集中
- en: 'To load the data into the new dataset, we will iterate through the features
    contained in the zip codes GeoJSON, writing them all to the dataset (instead of
    just one as demonstrated earlier). As this file is larger than 5MB, it must be
    loaded using the API, which is accessed using the `mapbox` module. The ID of the
    dataset (retrieved using the `datasets.list` method), the row ID, and the `feature`,
    are all required parameters for the `update_feature` method:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '要将数据加载到新的数据集中，我们将遍历包含在邮政编码 GeoJSON 中的特征，并将它们全部写入数据集（而不是像之前演示的那样只写入一个）。由于此文件大于
    5MB，必须使用 API 加载，该 API 通过 `mapbox` 模块访问。`update_feature` 方法所需的全部参数包括数据集的 ID（使用
    `datasets.list` 方法检索）、行 ID 和 `feature`： '
- en: '[PRE26]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The completed dataset now looks like this in Mapbox Studio:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 完成的数据集现在在 Mapbox Studio 中看起来是这样的：
- en: '![](img/4b9c0414-eea1-400e-a41d-a19037ae1776.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4b9c0414-eea1-400e-a41d-a19037ae1776.png)'
- en: Reading data from a dataset
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从数据集中读取数据
- en: 'To read the JSON data stored in the dataset, use the `read_dataset` method:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 要读取存储在数据集中的 JSON 数据，请使用 `read_dataset` 方法：
- en: '[PRE27]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Deleting a row
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除行
- en: 'To delete a specific row from the dataset, pass the dataset ID and the row
    ID to the `datasets.delete_feature` method:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 要从数据集中删除特定行，请将数据集 ID 和行 ID 传递给 `datasets.delete_feature` 方法：
- en: '[PRE28]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Summary
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to use the MapboxGL—Jupyter and Mapbox Python
    SDK to create data visualizations and to upload data into the Mapbox account.
    We created point data visualizations, choropleth maps, heat maps, and graduated
    circle visualizations. We learned how to style a custom basemap, how to add it
    to an HTML map, and how to add custom tilesets to the basemap. We learned how
    to use GeoPandas to convert Polygon data into point data, and how to visualize
    the result.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用 MapboxGL—Jupyter 和 Mapbox Python SDK 创建数据可视化以及将数据上传到 Mapbox 账户。我们创建了点数据可视化、面状图、热力图和渐变圆可视化。我们学习了如何自定义底图样式，如何将其添加到
    HTML 地图中，以及如何将自定义瓦片集添加到底图中。我们还学习了如何使用 GeoPandas 将多边形数据转换为点数据，以及如何可视化结果。
- en: In the next chapter, we will explore the use of Python modules and Hadoop to
    perform geospatial analysis.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨使用 Python 模块和 Hadoop 进行地理空间分析的应用。
