- en: 'Chapter 3: Quantum Circuit Model of Computation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章：量子计算模型
- en: '"As we scale towards a million [qubits], I think we''ve got some fundamental
    issues in error correction, control, and maybe quantum physics that can rear their
    heads," he said, adding that even those problems are "solvable."'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “当我们扩展到一百万[量子比特]时，我认为我们在纠错、控制和可能量子物理方面有一些基本问题可能会出现，”他说，并补充说即使这些问题也是“可解决的”。
- en: – Arvind Krishna, IBM chairman and CEO
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: – 阿维林·克瑞什纳，IBM董事长兼首席执行官
- en: '![](img/B18268_Figure_3.1.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.1.jpg)'
- en: Figure 3.1 – Scaling of the quantum computer [authors]
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – 量子计算机的扩展 [作者]
- en: There are fundamental differences between classical computing and quantum computing;
    classical computing is deterministic with 1s and 0s, and quantum is probabilistic
    with a twist. Quantum computers work with probability amplitudes, which is a postulate
    of quantum mechanics (see *Section 2.2, Postulate 2 – Probability amplitudes*).
    The probabilistic amplitudes of quantum computing behave differently from classical
    probabilities in that these values can cancel each other out, which is known as
    **destructive interference**.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 经典计算和量子计算之间存在根本性的差异；经典计算是确定性的，由1和0组成，而量子计算是概率性的，并且有一个转折点。量子计算机使用概率振幅进行工作，这是量子力学的一个公设（见*第2.2节，公设2
    – 概率振幅*）。量子计算的概率振幅的行为与经典概率不同，因为这些值可以相互抵消，这被称为**破坏性干涉**。
- en: Destructive interference can be illustrated with noise-canceling headphones.
    Specifically, it is when two or more waves come together, eliminating the waves
    altogether. In other words, the waves that come together are opposite in phase
    and equal in amplitude. **Constructive interference** is when two or more waves
    come together, and the amplitudes add positively. These two properties are essential
    to enable the desired result to come out of the computer with the highest probability.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 破坏性干涉可以用降噪耳机来举例说明。具体来说，这是当两个或更多波相遇时，完全消除波的情况。换句话说，相遇的波相位相反且振幅相等。**建设性干涉**是指两个或更多波相遇，振幅以正方式相加。这两个特性对于以最高概率使计算机输出所需结果至关重要。
- en: 'So, interference is at the core of what quantum computing should be, and we
    also use the concept of the wave function as introduced in *Section 2.1,* *Postulate
    1 – Wave function*, and it is used to define the idea of the **qubit**: the quantum
    bit of information. Typically, in the quantum computing industry, **state vector**
    is used as the term for the wave function.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，干涉是量子计算核心所在，我们还使用了在*第2.1节，公设1 – 波函数*中引入的波函数的概念，它被用来定义**量子比特**：信息量子。在量子计算行业中，**状态矢量**通常用作波函数的术语。
- en: Another difference between the two methods of computing is that in quantum computing,
    when we add one more unit of information, the size of the computational space
    is doubled. In theory, this allows us to speed up exponentially.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种计算方法之间的另一个区别是，在量子计算中，当我们添加一个额外的信息单位时，计算空间的大小翻倍。从理论上讲，这允许我们以指数级加速。
- en: Quantum computing also uses the superposition property to achieve parallelism
    up until the moment a measurement is performed. Recall we discussed superposition
    in *Section 2.3, Postulate 3 – Measurable quantities and operators*. A quantum
    algorithm needs to be repeated multiplied times to get the probability distribution
    of the measurement.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算还使用叠加性质直到测量时刻来实现并行性。回想一下我们在*第2.3节，公设3 – 可测量的量和算子*中讨论的叠加。量子算法需要重复乘以多次以获得测量的概率分布。
- en: The scaling of quantum computers paves the way for simulating chemical systems
    that could enable researchers to conduct virtual experiments and discover new
    molecules much faster than by performing physical experiments in a lab. In parallel
    to building a scalable quantum computer, research into optimal mappings of fermionic
    states and operators to qubit states and quantum gates is essential to exploit
    the potential of near-term quantum computers.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算机的扩展为模拟化学系统铺平了道路，这可以使研究人员能够以比在实验室进行物理实验快得多的速度进行虚拟实验和发现新的分子。在构建可扩展量子计算机的同时，研究将费米子状态和算子最优映射到量子比特状态和量子门是利用近期量子计算机潜力的关键。
- en: We give an illustration of a key component of such mappings, a quantum circuit
    that creates permutation symmetric or permutation asymmetric states in a probabilistic
    manner.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们给出了一种此类映射的关键组件的示例，即一种以概率方式创建排列对称或排列非对称状态的量子电路。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: '*Section 3.1, Qubits, entanglement, Bloch sphere, Pauli matrices*'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.1 节，量子比特、纠缠、玻色球、泡利矩阵*'
- en: '*Section 3.2, Quantum gates*'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.2 节，量子门*'
- en: '*Section 3.3, Computation-driven interference*'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.3 节，计算驱动的干涉*'
- en: '*Section 3.4, Preparing a permutation symmetric or asymmetric state*'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.4 节，准备对称或非对称排列状态*'
- en: Technical requirements
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'A companion Jupyter notebook for this chapter can be downloaded from GitHub
    at [https://github.com/PacktPublishing/Quantum-Chemistry-and-Computing-for-the-Curious](https://github.com/PacktPublishing/Quantum-Chemistry-and-Computing-for-the-Curious),
    which has been tested in the Google Colab environment, which is free and runs
    entirely in the cloud, and in the IBM Quantum Lab environment. Please refer to
    [*Appendix B*](B18268_Appendix_B_ePub.xhtml#_idTextAnchor313) *– Leveraging Jupyter
    Notebooks in the Cloud*, for more information. The companion Jupyter notebook
    automatically installs the following list of libraries:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从 GitHub（[https://github.com/PacktPublishing/Quantum-Chemistry-and-Computing-for-the-Curious](https://github.com/PacktPublishing/Quantum-Chemistry-and-Computing-for-the-Curious)）下载本章的配套
    Jupyter 笔记本，该笔记本已在 Google Colab 环境中测试过，这是一个免费的环境，完全运行在云端，并在 IBM Quantum Lab 环境中。请参阅
    [*附录 B*](B18268_Appendix_B_ePub.xhtml#_idTextAnchor313) *– 在云端利用 Jupyter 笔记本*
    获取更多信息。配套的 Jupyter 笔记本会自动安装以下列表中的库：
- en: '**Numerical Python** (**NumPy**) [NumPy], an open-source Python library that
    is used in almost every field of science and engineering'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数值 Python**（**NumPy**）[NumPy]，一个开源的 Python 库，在科学和工程领域的几乎所有领域都得到应用'
- en: Qiskit [Qiskit], an open-source SDK for working with quantum computers at the
    level of pulses, circuits, and application modules
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qiskit [Qiskit]，一个开源的 SDK，用于在脉冲、电路和应用模块级别与量子计算机交互
- en: Qiskit visualization support to enable visualization and Jupyter notebooks
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qiskit 可视化支持，用于启用可视化和 Jupyter 笔记本
- en: '**Quantum Toolbox in Python** (**QuTiP**) [QuTiP], which is designed to be
    a general framework for solving quantum mechanics problems such as systems composed
    of few-level quantum systems and harmonic oscillators'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Python 量子工具箱**（**QuTiP**）[QuTiP]，它被设计成一个通用的框架，用于解决量子力学问题，如由低能级量子系统和谐振子组成的系统'
- en: 'We recommend using the following online graphical tools:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议使用以下在线图形工具：
- en: IBM Quantum Composer, which is a graphical quantum programming tool that lets
    you drag and drop operations to build quantum circuits and run them on real quantum
    hardware or simulators [IBM_comp1] [IBM_comp2]
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IBM Quantum Composer，这是一个图形量子编程工具，允许你拖放操作来构建量子电路并在真实的量子硬件或模拟器上运行它们 [IBM_comp1]
    [IBM_comp2]
- en: Grok the Bloch Sphere, a web-based application that displays the Bloch sphere
    and shows the action of gates as rotations [Grok]
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解玻色球，一个基于网络的程序，它显示玻色球并显示门的作用作为旋转 [Grok]
- en: Installing NumPy, Qiskit, QuTiP, and importing various modules
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 NumPy、Qiskit、QuTiP 并导入各种模块
- en: 'Install NumPy with the following command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装 NumPy：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Install Qiskit with the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装 Qiskit：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Install Qiskit visualization support with the following command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装 Qiskit 可视化支持：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Install QuTiP with the following command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装 QuTiP：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Import NumPy with the following command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令导入 NumPy：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Import the required functions and class methods. The `array_to_latex function()`
    returns a LaTeX representation of a complex array with dimension 1 or 2:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 导入所需的函数和类方法。`array_to_latex function()` 返回一个具有 1 或 2 维的复数数组的 LaTeX 表示形式：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Import the math libraries with the following commands:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令导入数学库：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Import QuTiP with the following command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令导入 QuTiP：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 3.1\. Qubits, entanglement, Bloch sphere, Pauli matrices
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.1\. 量子比特、纠缠、玻色球、泡利矩阵
- en: The concepts presented in this section are a specific application of the five
    postulates of quantum mechanics that were presented in [*Chapter 2*](B18268_02_ePub.xhtml#_idTextAnchor077)*,
    Postulates of Quantum Mechanics*.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中介绍的概念是量子力学五条公设的特定应用，这些公设已在 [*第 2 章*](B18268_02_ePub.xhtml#_idTextAnchor077)*，量子力学的公设*
    中介绍。
- en: 'In this section, we describe the following in detail:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将详细描述以下内容：
- en: '*Section 3.1.1, Qubits*'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.1.1 节，量子比特*'
- en: '*Section 3.1.2, Tensor ordering of qubits*'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.1.2 节，量子比特的张量排序*'
- en: '*Section 3.1.3, Quantum entanglement*'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.1.3 节，量子纠缠*'
- en: '*Section 3.1.4, Bloch sphere*'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.1.4 节，玻色球*'
- en: '*Section 3.1.5, Displaying the Bloch vector corresponding to a state vector*'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.1.5 节，显示与状态向量对应的玻色矢量*'
- en: '*Section 3.1.6, Pauli matrices*'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 3.1.6 节，泡利矩阵*'
- en: 3.1.1\. Qubits
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1.1\. 量子比特
- en: 'In this section, we describe the current setup for quantum computation and
    the definition of a qubit. A qubit is a unit of information that represents a
    two-level quantum system and lives in a two-dimensional Hilbert space ![](img/Formula_03_001.png).
    The basis vectors of the quantum space are denoted as ![](img/Formula_03_002.png),
    which are referred to as the computational basis states:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们描述了量子计算当前的设置以及量子比特的定义。量子比特是表示二维希尔伯特空间中二能级量子系统的信息单位，它存在于二维希尔伯特空间中 ![img/Formula_03_001.png](img/Formula_03_001.png)。量子空间的基向量表示为
    ![img/Formula_03_002.png](img/Formula_03_002.png)，被称为计算基态：
- en: '![](img/Formula_03_003.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![img/Formula_03_003.png](img/Formula_03_003.png)'
- en: 'A general single-qubit state is described by a superposition of the computational
    basis:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一个一般的单量子比特状态由计算基的叠加描述：
- en: '![](img/Formula_03_004.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![img/Formula_03_004.png](img/Formula_03_004.png)'
- en: 'where ![](img/Formula_03_005.png) and ![](img/Formula_03_006.png) are linear
    expansion coefficients that satisfy:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 ![img/Formula_03_005.png](img/Formula_03_005.png) 和 ![img/Formula_03_006.png](img/Formula_03_006.png)
    是线性展开系数，它们满足：
- en: '![](img/Formula_03_007.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![img/Formula_03_007.png](img/Formula_03_007.png)'
- en: Although the qubit is in a quantum superposition during the algorithm, when
    it is measured in the computational basis, it will be found in state ![](img/Formula_03_008.png)
    or state ![](img/Formula_03_009.png), not in a superposition. These measurement
    outcomes occur with probability ![](img/Formula_03_010.png) and ![](img/Formula_03_011.png)
    respectively. If there are ![](img/Formula_03_012.png) qubits in the system, the
    state is described by a vector in the ![](img/Formula_03_013.png) dimensional
    Hilbert space ![](img/Formula_03_014.png) formed by taking the tensor product
    of the Hilbert spaces of the individual qubits. For 10 qubits, the state is described
    by a vector in a 1,024-dimensional Hilbert space.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管量子比特在算法过程中处于量子叠加态，但当它在计算基下被测量时，它将被发现处于状态 ![img/Formula_03_008.png](img/Formula_03_008.png)
    或状态 ![img/Formula_03_009.png](img/Formula_03_009.png)，而不是叠加态。这些测量结果发生的概率分别为 ![img/Formula_03_010.png](img/Formula_03_010.png)
    和 ![img/Formula_03_011.png](img/Formula_03_011.png)。如果系统中存在 ![img/Formula_03_012.png](img/Formula_03_012.png)
    个量子比特，状态由一个向量在 ![img/Formula_03_013.png](img/Formula_03_013.png) 维希尔伯特空间 ![img/Formula_03_014.png](img/Formula_03_014.png)
    中描述，该希尔伯特空间是通过将各个量子比特的希尔伯特空间进行张量积得到的。对于 10 个量子比特，状态由一个在 1,024 维希尔伯特空间中的向量描述。
- en: 3.1.2\. Tensor ordering of qubits
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1.2\. 量子比特的张量排序
- en: 'The physics community typically orders a tensor product of ![](img/Formula_03_012.png)
    qubits with the ![](img/Formula_03_016.png) qubit on the left-most side of the
    tensor product:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 物理学界通常将 ![img/Formula_03_012.png](img/Formula_03_012.png) 个量子比特的张量积按照 ![img/Formula_03_016.png](img/Formula_03_016.png)
    个量子比特位于张量积最左侧的顺序排列：
- en: '![](img/Formula_03_017.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![img/Formula_03_017.png](img/Formula_03_017.png)'
- en: 'where ![](img/Formula_03_018.png). However, Qiskit uses an ordering in which
    the ![](img/Formula_03_019.png) qubit is first in the order and the ![](img/Formula_03_020.png)
    qubit is last:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 ![img/Formula_03_018.png](img/Formula_03_018.png)。然而，Qiskit 使用一种排序方式，其中 ![img/Formula_03_019.png](img/Formula_03_019.png)
    个量子比特排在顺序的第一位，而 ![img/Formula_03_020.png](img/Formula_03_020.png) 个量子比特排在最后：
- en: '![](img/Formula_03_021.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![img/Formula_03_021.png](img/Formula_03_021.png)'
- en: In other words, if qubit 0 is in state ![](img/Formula_03_022.png), qubit 1
    is in state ![](img/Formula_03_022.png), and qubit 2 is in state ![](img/Formula_03_024.png)
    , many physics textbooks would represent this as ![](img/Formula_03_025.png),
    whereas Qiskit would represent this state as ![](img/Formula_03_026.png). This
    difference affects the way multi-qubit operations are represented as matrices,
    so please be on the lookout as we are using Qiskit in the book.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，如果量子比特 0 处于状态 ![img/Formula_03_022.png](img/Formula_03_022.png)，量子比特 1
    处于状态 ![img/Formula_03_022.png](img/Formula_03_022.png)，量子比特 2 处于状态 ![img/Formula_03_024.png](img/Formula_03_024.png)，许多物理学教材会表示为
    ![img/Formula_03_025.png](img/Formula_03_025.png)，而 Qiskit 会表示为 ![img/Formula_03_026.png](img/Formula_03_026.png)。这种差异影响了多量子比特操作作为矩阵的表示方式，因此请留意，我们在书中使用
    Qiskit。
- en: 3.1.3\. Quantum entanglement
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1.3\. 量子纠缠
- en: 'A quantum system is entangled when its quantum state cannot be factored as
    a tensor product of states of its constituents. States can be classified as either
    a product of single particle states or **entangled**:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个量子系统的量子状态不能作为其组成部分状态的张量积来分解时，该量子系统是纠缠的。状态可以分为单粒子状态的乘积或 **纠缠**：
- en: 'Product states can be decomposed into tensor products of fewer qubits, such
    as:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 乘积状态可以分解为较少量子比特的张量积，例如：
- en: '![](img/Formula_03_027.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![img/Formula_03_027.png](img/Formula_03_027.png)'
- en: Entangled states cannot be decomposed into tensor products of states. For example,
    the Bell state ![](img/Formula_03_028.png) is entangled and can only be measured
    either in the state ![](img/Formula_03_029.png) or in the state ![](img/Formula_03_030.png),
    each with a probability of 1/2.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 纠缠态不能分解为状态的张量积。例如，贝尔态 ![img/Formula_03_028.png](img/Formula_03_028.png) 是纠缠的，只能测量为状态
    ![img/Formula_03_029.png](img/Formula_03_029.png) 或状态 ![img/Formula_03_030.png](img/Formula_03_030.png)，每个状态的测量概率为
    1/2。
- en: 3.1.4\. Bloch sphere
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1.4\. 毕奥-萨伐尔球
- en: 'The Bloch sphere describes a qubit in space and is a specific form of the coordinate
    system (*Figure 3.2*) presented in *Section 2.1, Postulate 1 – Wave functions*.
    The ![](img/Formula_03_031.png) vector, or the length, of a qubit is always equal
    to 1, so the coordinates of the Bloch sphere are:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Bloch球描述了空间中的量子比特，是 *第2.1节，公设1 – 波函数* 中提出的坐标系统（*图3.2*）的特例。量子比特的 ![公式 03_031](img/Formula_03_031.png)
    向量，或其长度，总是等于1，因此Bloch球的坐标为：
- en: '![](img/Formula_03_032.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![公式 03_032](img/Formula_03_032.png)'
- en: 'Let''s focus on the general normalized pure state for a single qubit, as presented
    in *Section 3.1.1, Qubits*:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们关注 *第3.1.1节，量子比特* 中提出的单个量子比特的通用归一化纯态：
- en: When ![](img/Formula_03_033.png) and ![](img/Formula_03_034.png), the ![](img/Formula_03_035.png)
    state is "up" in the ![](img/Formula_03_036.png)-direction.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 ![公式 03_033](img/Formula_03_033.png) 和 ![公式 03_034](img/Formula_03_034.png)
    时，![公式 03_035](img/Formula_03_035.png) 状态在 ![公式 03_036](img/Formula_03_036.png)
    方向上是“向上”的。
- en: When ![](img/Formula_03_037.png) and ![](img/Formula_03_038.png), the ![](img/Formula_03_024.png)
    state is "down" in the ![](img/Formula_02_107.png)-direction.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 ![公式 03_037](img/Formula_03_037.png) 和 ![公式 03_038](img/Formula_03_038.png)
    时，![公式 03_024](img/Formula_03_024.png) 状态在 ![公式 02_107](img/Formula_02_107.png)
    方向上是“向下”的。
- en: '![](img/B18268_Figure_3.2.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2](img/B18268_Figure_3.2.jpg)'
- en: Figure 3.2 – Bloch sphere [authors]
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 – Bloch球 [作者]
- en: 'We derived the generalized formula for a qubit in *Section 2.1.2, Addition
    of momenta using Clebsch-Gordan coefficients, example: Coupling spin and angular
    momentum (*![](img/Formula_03_041.png)*):*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 *第2.1.2节，使用克莱布施-戈尔丹系数求动量之和，例如：耦合自旋和角动量（*![公式 03_041](img/Formula_03_041.png)*）*
    中推导了量子比特的广义公式：
- en: '![](img/Formula_03_042.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![公式 03_042](img/Formula_03_042.png)'
- en: 'However, established by the quantum computing industry and set as a convention,
    we have a change of variables for the angles ![](img/Formula_03_043.png) and ![](img/Formula_03_044.png)
    for a qubit defined on the Bloch sphere where the following applies:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由量子计算行业建立并作为惯例，我们对在Bloch球上定义的量子比特的角度 ![公式 03_043](img/Formula_03_043.png)
    和 ![公式 03_044](img/Formula_03_044.png) 进行了变量替换，以下适用：
- en: '![](img/Formula_03_045.png) in ![](img/Formula_03_046.png), which becomes ![](img/Formula_03_047.png)
    in ![](img/Formula_03_048.png) (please note that the arccosine of a positive number
    is a first quadrant angle)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![公式 03_045](img/Formula_03_045.png) 在 ![公式 03_046](img/Formula_03_046.png)
    中，它变为 ![公式 03_047](img/Formula_03_047.png) 在 ![公式 03_048](img/Formula_03_048.png)
    中（请注意，正数的反余弦是一个第一象限角度）'
- en: '![](img/Formula_03_049.png) is the relative phase in ![](img/Formula_03_050.png),
    neglecting the global phase ![](img/Formula_03_051.png)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![公式 03_049](img/Formula_03_049.png) 是 ![公式 03_050](img/Formula_03_050.png)
    中的相对相位，忽略了全局相位 ![公式 03_051](img/Formula_03_051.png)'
- en: 'This change of variables results in the following form of the state vector
    (or wave function) for a qubit on the Bloch sphere:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这种变量替换导致量子比特在Bloch球上的状态向量（或波函数）的以下形式：
- en: '![](img/Formula_03_052.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![公式 03_052](img/Formula_03_052.png)'
- en: where we have replaced the spin-up and spin-down functions with the state vectors
    ![](img/Formula_03_053.png) and ![](img/Formula_03_054.png), respectively. From
    a chemical perspective, please note that the qubit state ![](img/Formula_03_055.png)
    indicates the angular momentum quantum numbers ![](img/Formula_03_056.png) with
    spin-up, and therefore does not have any angular momentum projection on the ![](img/Formula_02_513.png)-axis.
    Furthermore, the qubit state ![](img/Formula_03_058.png) indicates the angular
    momentum quantum numbers ![](img/Formula_03_059.png) with spin-down and does have
    angular momentum projection on the ![](img/Formula_03_060.png)-axis. This is important
    to remember when we introduce the Pauli matrices in *Section 3.1.6, Pauli matrices*,
    as we will see how the chemical information is modified when we apply operations.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，我们将自旋向上和自旋向下的函数分别替换为状态向量 ![公式 03_053](img/Formula_03_053.png) 和 ![公式 03_054](img/Formula_03_054.png)。从化学的角度来看，请注意，量子比特状态
    ![公式 03_055](img/Formula_03_055.png) 表示自旋向上的角动量量子数 ![公式 03_056](img/Formula_03_056.png)，因此没有在
    ![公式 02_513](img/Formula_02_513.png) 轴上的角动量投影。此外，量子比特状态 ![公式 03_058](img/Formula_03_058.png)
    表示自旋向下的角动量量子数 ![公式 03_059](img/Formula_03_059.png)，并且在该 ![公式 03_060](img/Formula_03_060.png)
    轴上有角动量投影。当我们介绍 *第3.1.6节，泡利矩阵* 中的泡利矩阵时，这一点很重要，因为我们将看到当应用操作时化学信息是如何被修改的。
- en: 'On the Bloch sphere, angles are twice as big as in Hilbert space. For instance,
    ![](img/Formula_03_055.png) and ![](img/Formula_03_062.png) are orthogonal in
    Hilbert space, and on the Bloch sphere their angle is ![](img/Formula_03_063.png).
    Further, we would like to point out that ![](img/Formula_03_064.png) determines
    the probability to measure the ![](img/Formula_03_055.png) and ![](img/Formula_03_054.png)
    states with the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在布洛赫球上，角度是希尔伯特空间中的两倍。例如，![](img/Formula_03_055.png) 和 ![](img/Formula_03_062.png)
    在希尔伯特空间中是正交的，在布洛赫球上的角度是 ![](img/Formula_03_063.png)。此外，我们想指出，![](img/Formula_03_064.png)
    决定了测量 ![](img/Formula_03_055.png) 和 ![](img/Formula_03_054.png) 状态的概率，如下所示：
- en: '![](img/Formula_03_053.png) such that ![](img/Formula_03_068.png)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/Formula_03_053.png) 使得 ![](img/Formula_03_068.png)'
- en: '![](img/Formula_03_054.png) such that ![](img/Formula_03_070.png)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](img/Formula_03_054.png) 使得 ![](img/Formula_03_070.png)'
- en: 'We show the Bloch vector for a qubit in different directions on the Bloch sphere,
    which we call pole states, as shown in the table shown in Figure 3.3:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了布洛赫球上不同方向上的布洛赫向量，我们称之为极点态，如图3.3所示的表格所示：
- en: '![](img/B18268_03_Table_01.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_03_Table_01.jpg)'
- en: Figure 3.3 – Pole states in the computational basis and their representation
    on the Bloch sphere
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 – 计算基中的极点态及其在布洛赫球上的表示
- en: 3.1.5\. Displaying the Bloch vector corresponding to a state vector
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1.5\. 显示与状态向量对应的布洛赫向量
- en: 'In the following code, the `check` function performs sanity checks on a given
    complex vector ![](img/Formula_03_101.png) to ensure it is a state vector:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，`check` 函数对一个给定的复向量 ![](img/Formula_03_101.png) 进行合理性检查，以确保它是一个状态向量：
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Next, the `ToBloch()` function computes the Bloch vector of a given state vector
    (complex vector) and displays the angles in LaTeX format and the vector on the
    Bloch sphere. It has two input parameters:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，`ToBloch()` 函数计算给定状态向量（复向量）的布洛赫向量，并以LaTeX格式显示角度和在布洛赫球上的向量。它有两个输入参数：
- en: '`s`: A state vector, a complex vector ![](img/Formula_03_102.png).'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s`：一个状态向量，一个复向量 ![](img/Formula_03_102.png)。'
- en: '`show`: Set to `True` to display the angles and the vector on the Bloch sphere.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show`：设置为 `True` 以显示角度和布洛赫球上的向量。'
- en: 'It has three output parameters:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 它有三个输出参数：
- en: '`theta`: ![](img/Formula_03_103.png) in ![](img/Formula_03_104.png) is the
    angle on the Bloch sphere.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theta`：![](img/Formula_03_103.png) 在 ![](img/Formula_03_104.png) 中是布洛赫球上的角度。'
- en: '`phi`: ![](img/Formula_03_105.png) in ![](img/Formula_03_106.png) is the relative
    phase, neglecting the global phase.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`phi`：![](img/Formula_03_105.png) 在 ![](img/Formula_03_106.png) 中是相对相位，忽略全局相位。'
- en: '`r`: This is the vector on the Bloch sphere.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`r`：这是布洛赫球上的向量。'
- en: '[PRE9]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following code displays the Bloch vector corresponding to the state vector
    ![](img/Formula_03_107.png):'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了与状态向量 ![](img/Formula_03_107.png) 对应的布洛赫向量：
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here is the result with the Bloch sphere displayed using the `QuTiP Bloch()`
    function:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用 `QuTiP Bloch()` 函数显示布洛赫球的结果：
- en: '![](img/B18268_Figure_3.4.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.4.jpg)'
- en: Figure 3.4 – Displaying a vector on the Bloch sphere
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 – 在布洛赫球上显示向量
- en: 'Finally, the `ToS` function computes a state vector of a Bloch vector. It has
    three input parameters:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`ToS` 函数计算布洛赫向量的状态向量。它有三个输入参数：
- en: '`theta`: ![](img/Formula_03_108.png) in ![](img/Formula_03_109.png) is the
    angle on the Bloch sphere.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theta`：![](img/Formula_03_108.png) 在 ![](img/Formula_03_109.png) 中是布洛赫球上的角度。'
- en: '`phi`: ![](img/Formula_03_051.png) in ![](img/Formula_03_106.png) is the relative
    phase, neglecting the global phase.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`phi`：![](img/Formula_03_051.png) 在 ![](img/Formula_03_106.png) 中是相对相位，忽略全局相位。'
- en: '`show`: This is set to `True` to display the input angles and the state vector.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show`：设置为 `True` 以显示输入角度和状态向量。'
- en: 'It has one output parameter:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 它有一个输出参数：
- en: '`s`: a state vector, a complex vector ![](img/Formula_03_112.png)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s`：一个状态向量，一个复向量 ![](img/Formula_03_112.png)'
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here, we compute the complex amplitudes of a Bloch vector with ![](img/Formula_03_113.png)
    and ![](img/Formula_03_114.png) :'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们计算具有 ![](img/Formula_03_113.png) 和 ![](img/Formula_03_114.png) 的布洛赫向量的复振幅：
- en: '[PRE12]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here is the result:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是结果：
- en: '![](img/Formula_03_115.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_115.png)'
- en: '![](img/Formula_03_116.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_116.jpg)'
- en: 3.1.6\. Pauli matrices
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1.6\. 泡利矩阵
- en: 'There are three Pauli matrices, ![](img/Formula_03_117.png) , ![](img/Formula_03_118.png),
    and ![](img/Formula_03_119.png):'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个泡利矩阵，![](img/Formula_03_117.png) ，![](img/Formula_03_118.png)，和 ![](img/Formula_03_119.png)：
- en: '![](img/Formula_03_120.png), ![](img/Formula_03_121.png), ![](img/Formula_03_122.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_120.png)，![](img/Formula_03_121.png)，![](img/Formula_03_122.png)'
- en: 'which are Hermitian and unitary, making the square of each equal to the ![](img/Formula_03_123.png)
    identity matrix:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这些矩阵都是厄米矩阵和幺正矩阵，使得每个矩阵的平方等于 ![](img/Formula_03_123.png) 单位矩阵：
- en: '![](img/Formula_03_124.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_124.png)'
- en: 'Each of the Pauli matrices is equal to its inverse:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 每个泡利矩阵都等于其逆矩阵：
- en: '![](img/Formula_03_125.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_125.png)'
- en: '![](img/Formula_03_126.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_126.png)'
- en: '![](img/Formula_03_127.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_127.png)'
- en: 'We summarize the Pauli matrices and the operations on a qubit that yields the
    associated eigenvectors in *Figure 3.5*:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 *图 3.5* 中总结了泡利矩阵以及产生相关特征向量的量子比特操作：
- en: '![](img/B18268_03_Table_02.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_03_Table_02.jpg)'
- en: Figure 3.5 – Pauli matrices and the associated eigenvectors
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 泡利矩阵及其相关特征向量
- en: In *Figure 3.6*, we display on the far-left side the ![](img/Formula_03_140.png)
    qubit state, which has zero angular momentum projection on the ![](img/Formula_02_107.png)-axis,
    as indicated by the dark circle under the Bloch sphere. In the middle, we display
    the ![](img/Formula_03_142.png) qubit state, which has an angular momentum projection
    on the ![](img/Formula_03_143.png)-axis indicated by a light grey circle under
    the Bloch sphere. Recall we discussed the angular momentum projection for the
    ![](img/Formula_03_144.png) and ![](img/Formula_03_145.png) qubit states in *Section
    3.1.4, Bloch sphere*. On the far-right side, we indicate the ![](img/Formula_03_146.png)
    operation on the ![](img/Formula_03_147.png) qubit state, which modifies the angular
    momentum projection by ![](img/Formula_03_148.png).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 3.6* 中，我们在最左侧显示 ![](img/Formula_03_140.png) 量子比特状态，该状态在 ![](img/Formula_02_107.png)-轴上没有角动量投影，如
    Bloch 球体下的暗圈所示。在中间，我们显示 ![](img/Formula_03_142.png) 量子比特状态，该状态在 ![](img/Formula_03_143.png)-轴上有角动量投影，如
    Bloch 球体下的浅灰色圆圈所示。回想一下，我们在 *3.1.4 节，Bloch 球体* 中讨论了 ![](img/Formula_03_144.png)
    和 ![](img/Formula_03_145.png) 量子比特状态的角动量投影。在最右侧，我们指示对 ![](img/Formula_03_146.png)
    量子比特状态进行的 ![](img/Formula_03_147.png) 操作，该操作通过 ![](img/Formula_03_148.png) 修改了角动量投影。
- en: '![](img/B18268_Figure_3.6.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.6.jpg)'
- en: Figure 3.6 – Pauli Z operation on basis states ![](img/Formula_03_144.png) and
    ![](img/Formula_03_1451.png) illustrated with Grok the Bloch sphere
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 在基态 ![](img/Formula_03_144.png) 和 ![](img/Formula_03_1451.png) 上对泡利
    Z 操作的说明，使用 Grok the Bloch 球体
- en: The ![](img/Formula_03_151.png) operation does not have an effect on the angular
    momentum projection, while the ![](img/Formula_03_152.png) operation modifies
    the angular momentum projection by ![](img/Formula_03_153.png).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/Formula_03_151.png) 操作对角动量投影没有影响，而 ![](img/Formula_03_152.png) 操作通过
    ![](img/Formula_03_153.png) 修改了角动量投影。'
- en: Measurement in the sign basis ![](img/Formula_03_154.png)
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在符号基 ![](img/Formula_03_154.png) 中的测量
- en: 'Let us measure a state ![](img/Formula_03_155.png) in the sign basis ![](img/Formula_03_156.png)
    which is also known as a measurement according to the Pauli matrix ![](img/Formula_03_157.png).
    To make this measurement, we perform a change of basis from the sign basis ![](img/Formula_03_158.png)
    to the standard basis ![](img/Formula_03_159.png) where:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在符号基 ![](img/Formula_03_155.png) 中测量一个状态，该基也被称为根据泡利矩阵 ![](img/Formula_03_157.png)
    进行的测量。为了进行这种测量，我们将基从符号基 ![](img/Formula_03_158.png) 转换为标准基 ![](img/Formula_03_159.png)，其中：
- en: '![](img/Formula_03_160.jpg)![](img/Formula_03_161.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_160.jpg)![](img/Formula_03_161.jpg)'
- en: 'which allows us to rewrite the state:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许我们重新写出状态：
- en: '![](img/Formula_03_162.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_162.png)'
- en: 'The possible outcomes of a measurement with their corresponding probabilities
    and new state are listed in *Figure 3.7*:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 测量的可能结果及其对应概率和新状态列在 *图 3.7* 中：
- en: '![](img/B18268_03_Table_03.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_03_Table_03.jpg)'
- en: Figure 3.7 – Measurement in the sign basis ![](img/Formula_03_168.png)
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – 在符号基 ![](img/Formula_03_168.png) 中的测量
- en: 'The expectation value of the measurement of a state ![](img/Formula_03_169.png)
    according to the Pauli ![](img/Formula_03_170.png) operation is:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 根据泡利 ![](img/Formula_03_170.png) 操作测量状态 ![](img/Formula_03_169.png) 的期望值是：
- en: '![](img/Formula_03_171.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_171.png)'
- en: 'which means we need to calculate the bra in the sign basis by taking the complex
    conjugate transpose:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们需要通过取复共轭转置来计算符号基中的正交归一矢量：
- en: '![](img/Formula_03_172.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_172.png)'
- en: 'We also need to transform the Pauli operation from the standard basis to the
    sign basis:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要将泡利操作从标准基转换为符号基：
- en: '![](img/Formula_03_173.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_173.png)'
- en: 'Recall that a ket times a bra, as seen previously (![](img/Formula_03_174.png)
    and ![](img/Formula_03_175.png)), is an outer product that yields a matrix, whereas
    a bra times a ket is a scalar. With this, we have the expectation value calculated
    as:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，一个基矢量乘以一个共轭基矢量，正如之前所见（![](img/Formula_03_174.png) 和 ![](img/Formula_03_175.png)），是一个外积，它产生一个矩阵，而一个共轭基矢量乘以一个基矢量是一个标量。因此，我们得到期望值的计算如下：
- en: '![](img/Formula_03_176.jpg)![](img/Formula_03_177.jpg)![](img/Formula_03_178.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_176.jpg)![](img/Formula_03_177.jpg)![](img/Formula_03_178.jpg)'
- en: Please remember that in general, ![](img/Formula_03_005.png) and ![](img/Formula_03_006.png)
    are complex numbers, and the imaginary part can be zero. The expectation value
    is the sum of all the possible outcomes (1 and -1) of a measurement of a state
    ![](img/Formula_03_181.png) in the sign basis weighted by their probabilities.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在一般情况下，![](img/Formula_03_005.png) 和 ![](img/Formula_03_006.png) 是复数，虚部可能为零。期望值是所有可能结果（1和-1）的测量值的总和，这些结果是对一个在符号基下测量的状态
    ![](img/Formula_03_181.png) 的概率加权。
- en: Decomposing a matrix into the weighted sum of the tensor product of Pauli matrices
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将矩阵分解为泡利矩阵张量积的加权之和
- en: 'It can be shown that any matrix can be decomposed into the weighted sum of
    the tensor product of the identity matrix and the Pauli matrices ![](img/Formula_03_182.png),
    where ![](img/Formula_03_183.png) with weights ![](img/Formula_03_184.png) and
    ![](img/Formula_03_185.png) qubits:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 可以证明任何矩阵都可以分解为单位矩阵和泡利矩阵 ![](img/Formula_03_182.png) 的张量积的加权之和，其中 ![](img/Formula_03_183.png)
    的权重为 ![](img/Formula_03_184.png) 和 ![](img/Formula_03_185.png) 个量子比特：
- en: '![](img/Formula_03_186.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_186.jpg)'
- en: For Hermitian matrices, all weights ![](img/Formula_03_187.png) are real.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 对于厄米矩阵，所有权重 ![](img/Formula_03_187.png) 都是实数。
- en: 'We provide a proof for any 2x2 matrix, ![](img/Formula_03_188.png):'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为任何2x2矩阵，![](img/Formula_03_188.png) 提供一个证明：
- en: '![](img/Formula_03_189.jpg)![](img/Formula_03_190.jpg)![](img/Formula_03_191.jpg)![](img/Formula_03_192.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_189.jpg)![](img/Formula_03_190.jpg)![](img/Formula_03_191.jpg)![](img/Formula_03_192.jpg)'
- en: 'Since ![](img/Formula_03_193.png), hence ![](img/Formula_03_194.png), we have:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 ![](img/Formula_03_193.png)，因此 ![](img/Formula_03_194.png)，我们有：
- en: '![](img/Formula_03_195.jpg)![](img/Formula_03_196.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_195.jpg)![](img/Formula_03_196.jpg)'
- en: 'Starting from the decomposition of a 2x2 matrix as a sum of outer products:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 从将2x2矩阵分解为外积之和开始：
- en: '![](img/Formula_03_197.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_197.png)'
- en: 'we can then write:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以进一步写出：
- en: '![](img/Formula_03_198.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_198.png)'
- en: '![](img/Formula_03_199.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_199.jpg)'
- en: 3.2\. Quantum gates
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.2. 量子门
- en: 'Quantum gates are unitary operators (![](img/Formula_03_200.png)) working on
    one, two, or three qubits. The norm is preserved when applied to a quantum state.
    The action of a quantum gate on a quantum state corresponds to the multiplication
    of the matrix representing the gate by the vector representing the quantum state:
    ![](img/Formula_03_201.png).'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 量子门是作用于一个、两个或三个量子比特的幺正算子 (![](img/Formula_03_200.png))。当作用于量子态时，范数得到保持。量子门对量子态的作用对应于表示该门的矩阵与表示量子态的向量的乘积：![](img/Formula_03_201.png)。
- en: 'In this section, a tensor product of ![](img/Formula_03_202.png) qubits is
    represented with the first qubit on the left-most side of the tensor product:
    ![](img/Formula_03_203.png) where ![](img/Formula_03_204.png). Please note that
    we are not using the Qiskit tensor ordering of qubits unless specifically specified.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，用张量积表示 ![](img/Formula_03_202.png) 个量子比特，第一个量子比特位于张量积的最左侧：![](img/Formula_03_203.png)
    其中 ![](img/Formula_03_204.png)。请注意，除非特别指定，我们不会使用Qiskit量子比特的张量排序。
- en: 'In this section, we cover the following:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们涵盖了以下内容：
- en: '*Section 3.2.1, Single-qubit quantum gates*'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第3.2.1节，单量子比特量子门*'
- en: '*Section 3.2.2, Two-qubit quantum gates*'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第3.2.2节，双量子比特量子门*'
- en: '*Section 3.2.3, Three-qubit quantum gates*'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第3.2.3节，三量子比特量子门*'
- en: '*Section 3.2.4, Serial wired gates and parallel quantum gates*'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第3.2.4节，串行连接门和并行量子门*'
- en: '*Section 3.2.5, Creation of a Bell state*'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第3.2.5节，贝尔态的生成*'
- en: '*Section 3.2.6, Parallel Hadamard gates*'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第3.2.6节，并行哈达玛门*'
- en: 3.2.1\. Single-qubit quantum gates
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2.1. 单量子比特量子门
- en: 'A single-qubit gate ![](img/Formula_03_205.png) has a ![](img/Formula_03_206.png)
    unitary matrix form: ![](img/Formula_03_207.png).'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 单量子比特门 ![](img/Formula_03_205.png) 有一个 ![](img/Formula_03_206.png) 的幺正矩阵形式：![](img/Formula_03_207.png)。
- en: 'In this section, we describe in detail the following:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们详细描述以下内容：
- en: '![](img/Formula_03_208.png) gate'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](img/Formula_03_208.png) 门'
- en: Hadamard (![](img/Formula_03_209.png)) gate
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈达玛 (![](img/Formula_03_209.png)) 门
- en: Generalized single-qubit quantum gate
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广义单量子比特量子门
- en: We summarize commonly used quantum gates as well as provide some useful relationships.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_03_210.png) gate'
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An ![](img/Formula_03_208.png) gate maps ![](img/Formula_03_140.png) to ![](img/Formula_03_213.png)
    and ![](img/Formula_03_214.png) to ![](img/Formula_03_053.png). It is the quantum
    equivalent of the NOT gate for classical computers and is sometimes called a bit-flip.
    For classical computing, the NOT gate changes a 0 to a 1 and a 1 to a 0\. The
    ![](img/Formula_03_216.png) gate equates to a rotation by π radians around the
    X-axis of the Bloch sphere.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_03_217.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
- en: Hadamard (![](img/Formula_03_218.png)) gate
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A Hadamard gate maps the basis state ![](img/Formula_03_219.png) to ![](img/Formula_03_220.png),
    which is also written as ![](img/Formula_03_221.png), and ![](img/Formula_03_222.png)
    to ![](img/Formula_03_223.png), which is also written as ![](img/Formula_03_224.png).
    It represents a rotation of π about the axis that is in the middle (45![](img/Formula_03_225.png)
    angle) of the ![](img/Formula_03_226.png)- and ![](img/Formula_03_227.png)-axis.
    A measurement of the state ![](img/Formula_03_228.png) or of the state ![](img/Formula_03_229.png)
    will have equal probabilities of being 0 or 1, creating a superposition of states.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_03_230.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
- en: 'It is convenient to write the Hadamard gate applied to the 0th qubit (![](img/Formula_03_231.png))
    in the register as follows: ![](img/Formula_03_232.png) where ![](img/Formula_03_233.png).
    Please note that the Hadamard gate (![](img/Formula_03_209.png)) has similar notation
    to the Hamiltonian operator (![](img/Formula_03_235.png); the difference is the
    hat (![](img/Formula_03_236.png)) symbol.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: General single-qubit quantum gate
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'All single-qubit gates can be obtained from the following matrix ![](img/Formula_03_237.png),
    which describes all unitary matrices up to a global phase factor by an appropriate
    choice of parameters ![](img/Formula_03_238.png) with ![](img/Formula_03_239.png)
    , ![](img/Formula_03_240.png) , ![](img/Formula_03_241.png) [Qiskit_Op]:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_03_242.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
- en: 'The gate ![](img/Formula_03_243.png) has the matrix form:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_03_244.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
- en: 'The gate ![](img/Formula_03_245.png) and has the matrix form:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_03_246.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
- en: Summary of single-qubit quantum gates and useful relationships
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Figure 3.8* presents the main list of single-qubit quantum gates:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18268_03_Table_04.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
- en: Figure 3.8 – Single-qubit quantum gates
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: 'The rotation operator gates ![](img/Formula_03_312.png), ![](img/Formula_03_313.png),
    and ![](img/Formula_03_314.png) perform rotations about the ![](img/Formula_03_315.png),
    ![](img/Formula_03_316.png), and ![](img/Formula_03_317.png) axes respectively
    of the Bloch sphere:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Formula_03_318.jpg)![](img/Formula_03_319.jpg)![](img/Formula_03_320.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
- en: 'We would like to point out that the ![](img/Formula_03_321.png) gate can be
    obtained by using a combination of the Hadamard gate and the ![](img/Formula_03_322.png)
    gate: ![](img/Formula_03_323.png). The converse is also true: ![](img/Formula_03_324.png).
    It means we can project a state onto the ![](img/Formula_03_315.png)-axis of the
    Bloch sphere when applying a ![](img/Formula_03_326.png) gate before measuring.
    Same with the ![](img/Formula_03_316.png)-axis when applying first an ![](img/Formula_03_328.png)
    gate, then an ![](img/Formula_03_326.png) gate. This way we can perform qubit
    tomography (that is, reconstructing the Bloch vector through ![](img/Formula_03_330.png),
    ![](img/Formula_03_316.png), and ![](img/Formula_03_332.png) measurements). These
    gate operations are summarized in *Figure 3.9*:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想指出，![公式_03_321.png] 门可以通过使用Hadamard门和![公式_03_322.png]门的组合来获得：![公式_03_323.png]。反之亦然：![公式_03_324.png]。这意味着在测量之前应用![公式_03_326.png]门时，我们可以将状态投影到Bloch球的![公式_03_315.png]-轴上。同样，当首先应用![公式_03_328.png]门，然后应用![公式_03_326.png]门时，可以投影到![公式_03_316.png]-轴上。这样，我们可以执行量子比特全息术（即通过![公式_03_330.png]，![公式_03_316.png]，和![公式_03_332.png]测量来重建Bloch矢量）。这些门操作总结在
    *图3.9* 中：
- en: '![](img/B18268_Figure_3.9.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18268_Figure_3.9.jpg)'
- en: Figure 3.9 – Relations ![](img/Formula_03_333.png), ![](img/Formula_03_334.png)
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9 – 关系 ![公式_03_333.png], ![公式_03_334.png]
- en: 3.2.2\. Two-qubit quantum gates
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2.2. 二量子比特量子门
- en: A two-qubit gate ![](img/Formula_03_335.png) is a ![](img/Formula_03_336.png)
    unitary matrix, ![](img/Formula_03_337.png) that acts on two qubits.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 一个二量子比特门 ![公式_03_335.png] 是一个 ![公式_03_336.png] 单位矩阵 ![公式_03_337.png]，作用于两个量子比特。
- en: We summarize commonly used two-qubit quantum gates in *Figure 3.10*.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 *图3.10* 中总结了常用的二量子比特量子门。
- en: '![](img/B18268_03_Table_05.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18268_03_Table_05.jpg)'
- en: Figure 3.10 – Two-qubit quantum gates
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10 – 二量子比特量子门
- en: 3.2.3\. Three-qubit quantum gates
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2.3. 三量子比特量子门
- en: 'A three-qubit gate U is an ![](img/Formula_03_364.png) unitary matrix ![](img/Formula_03_365.png)
    that acts on three qubits. We summarize commonly used three-qubit quantum gates
    in *Figure 3.11*:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 一个三量子比特门U是一个 ![公式_03_364.png] 单位矩阵 ![公式_03_365.png]，作用于三个量子比特。我们总结了常用的三量子比特量子门在
    *图3.11* 中：
- en: '![](img/B18268_03_Table_06.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18268_03_Table_06.jpg)'
- en: Figure 3.11 – Three-qubit quantum gates
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11 – 三量子比特量子门
- en: 3.2.4\. Serially wired gates and parallel quantum gates
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2.4. 串联连接的量子门和并行量子门
- en: 'Operations on quantum gates are applied sequentially from left to right, and
    there are no loops. Two gates ![](img/Formula_03_335.png) and ![](img/Formula_03_384.png)
    in series are equivalent to the matrix product of the two gates, as shown in *Figure
    3.12*:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 量子门上的操作是从左到右依次应用的，并且没有循环。串联的两个门 ![公式_03_335.png] 和 ![公式_03_384.png] 等价于两个门的矩阵乘积，如图
    *图3.12* 所示：
- en: '![](img/B18268_03_Table_07.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18268_03_Table_07.jpg)'
- en: Figure 3.12 – Serially wired quantum gates
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.12 – 串联量子门
- en: 'Two gates ![](img/Formula_03_391.png) and ![](img/Formula_03_392.png) in parallel
    are equivalent to the tensor product of the two gates ![](img/Formula_03_393.png),
    as shown in *Figure 3.13*:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 并联的两个门 ![公式_03_391.png] 和 ![公式_03_392.png] 等价于两个门的张量积 ![公式_03_393.png]，如图 *图3.13*
    所示：
- en: '![](img/B18268_03_Table_08.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18268_03_Table_08.jpg)'
- en: Figure 3.13 – Parallel quantum gates
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13 – 并行量子门
- en: 3.2.5\. Creation of a Bell state
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2.5. 生成贝尔态
- en: 'Bell states are maximally entangled pure quantum states, and there are only
    four:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 贝尔态是最大纠缠的纯量子态，共有四个：
- en: '![](img/Formula_03_409.jpg)![](img/Formula_03_410.jpg)![](img/Formula_03_411.jpg)![](img/Formula_03_412.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![公式_03_409.jpg] ![公式_03_410.jpg] ![公式_03_411.jpg] ![公式_03_412.jpg]'
- en: A quantum circuit is an ordered sequence of instructions, quantum gates, measurements,
    and resets that is applied to registers of qubits and may be conditioned on real-time
    classical computation. Several quantum hardware platforms now support dynamic
    quantum circuits, which allow concurrent classical processing of mid-circuit measurement
    results [Corcoles] [IBM_mid]. In *Section 3.4, Preparing a permutation symmetric
    or antisymmetric state*, we demonstrate a classical program that aims to obtain
    the desired quantum state by post selecting the result of a measurement of a control
    qubit. There is no loop in a quantum circuit, but we can have a classical loop
    that appends a quantum sub-circuit. In Qiskit, we use the `QuantumRegister` class
    to create a register of qubits and the `QuantumCircuit` class to create a quantum
    circuit.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 量子电路是一系列有序的指令、量子门、测量和重置，应用于量子比特寄存器，并且可能基于实时经典计算进行条件化。现在，几个量子硬件平台支持动态量子电路，这允许在电路中测量结果的同时进行并发经典处理
    [Corcoles] [IBM_mid]。在*第3.4节，准备对称或反对称态*中，我们展示了一个经典程序，该程序旨在通过后选择控制量子比特测量的结果来获得所需的量子态。量子电路中没有循环，但我们可以有一个经典循环，它附加一个量子子电路。在Qiskit中，我们使用`QuantumRegister`类来创建量子比特寄存器，使用`QuantumCircuit`类来创建量子电路。
- en: 'Let''s build a quantum circuit that creates the first Bell state ![](img/Formula_03_413.png)
    with Qiskit:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Qiskit构建一个创建第一个贝尔态 ![img/Formula_03_413.png] 的量子电路：
- en: '[PRE13]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '*Figure 3.14* shows the result:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.14* 展示了结果：'
- en: '![](img/B18268_Figure_3.14.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.14.jpg)'
- en: Figure 3.14 – Qiskit quantum circuit that creates a Bell state
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14 – 创建贝尔态的Qiskit量子电路
- en: 'We use the `Statevector.from_instruction()` class method from the `quantum_info`
    module to get the final state vector ![](img/Formula_03_414.png) :'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`quantum_info`模块中的`Statevector.from_instruction()`类方法来获取最终状态向量 ![img/Formula_03_414.png]：
- en: '[PRE14]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*Figure 3.15* shows the result:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.15* 展示了结果：'
- en: '![](img/B18268_Figure_3.15.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.15.jpg)'
- en: Figure 3.15 – Final state vector – Bell state
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 – 最终状态向量 – 贝尔态
- en: The final state vector can only be measured in either the state ![](img/Formula_03_415.png)
    or ![](img/Formula_03_416.png), each with a probability of 1/2.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 最终状态向量只能在状态 ![img/Formula_03_415.png] 或 ![img/Formula_03_416.png] 中测量，每个状态的概率为1/2。
- en: 'We use the `DensityMatrix.from_instruction()` class method to obtain the density
    matrix representation of the final state vector:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`DensityMatrix.from_instruction()`类方法来获取最终状态向量的密度矩阵表示：
- en: '[PRE15]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '*Figure 3.16* shows the result:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.16* 展示了结果：'
- en: '![](img/B18268_Figure_3.16.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.16.jpg)'
- en: Figure 3.16 – Density matrix – Bell state
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.16 – 密度矩阵 – 贝尔态
- en: 'We can visualize the density matrix using a cityscape plot of the state:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用状态的城市景观图来可视化密度矩阵：
- en: '[PRE16]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '*Figure 3.17* shows the result:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.17* 展示了结果：'
- en: '![](img/B18268_Figure_3.17.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.17.jpg)'
- en: Figure 3.17 – Cityscape plot – Bell state
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.17 – 城市景观图 – 贝尔态
- en: 3.2.6\. Parallel Hadamard gates
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2.6\. 并行Hadamard门
- en: 'It can be shown that applying parallel Hadamard gates to a register of qubits
    initialized in the zero state puts it in a uniform superposition of all possible
    states. Let''s experiment with the effect of applying one, two, and three Hadamard
    gates. In this section, we''ll build the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 可以证明，将并行Hadamard门应用于初始化为零状态的量子比特寄存器，将其置于所有可能状态的均匀叠加中。让我们通过应用一个、两个和三个Hadamard门来实验其效果。在本节中，我们将构建以下内容：
- en: One Hadamard gate
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Hadamard门
- en: Two parallel Hadamard gates
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个并行的Hadamard门
- en: Three parallel Hadamard gates
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三个并行的Hadamard门
- en: 'The `create_parallel_H()` function creates a quantum circuit with n parallel
    Hadamard gates:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_parallel_H()` 函数创建一个包含n个并行Hadamard门的量子电路：'
- en: '[PRE17]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The function `run_parallel_H()` creates and executes a quantum circuit with
    n parallel Hadamard gates and displays a diagram of the final state vector:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`run_parallel_H()` 函数创建并执行一个包含n个并行Hadamard门的量子电路，并显示最终状态向量的图：'
- en: '[PRE18]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let''s create a quantum circuit with just one Hadamard gate:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个只有一个Hadamard门的量子电路：
- en: '[PRE19]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '*Figure 3.18* shows the result:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.18* 展示了结果：'
- en: '![](img/B18268_Figure_3.18.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.18.jpg)'
- en: Figure 3.18 – One Hadamard gate
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18 – 一个Hadamard门
- en: 'Next, we build a quantum circuit with two parallel Hadamard gates:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们构建一个包含两个并行Hadamard门的量子电路：
- en: '[PRE20]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '*Figure 3.19* shows the result:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.19* 展示了结果：'
- en: '![](img/B18268_Figure_3.19.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.19.jpg)'
- en: Figure 3.19 – Two parallel Hadamard gates
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.19 – 两个并行的Hadamard门
- en: 'Last, let''s build a circuit with three parallel Hadamard gates:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们构建一个包含三个并行Hadamard门的电路：
- en: '[PRE21]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '*Figure 3.20* shows the result:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.20* 展示了结果：'
- en: '![](img/B18268_Figure_3.20.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.20.jpg)'
- en: Figure 3.20 – Three parallel Hadamard gates
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.20 – 三个并行Hadamard门
- en: 3.3\. Computation-driven interference
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.3. 计算驱动的干涉
- en: In this section, we introduce the process of a generic quantum computation in
    *Section 3.3.1, Quantum computation process*. Then we give an example of a simulation
    inspired by a chemical experiment in *Section 3.3.2, Simulating interferometric
    sensing of a quantum superposition of left- and right-handed enantiomer states*.
    In chemistry, molecules or ions that are mirror images of each other are called
    enantiomers or optical isomers. If these images are non-superimposable, they are
    called chiral molecules [ChemChiral] and they differ in their ability to rotate
    plane polarized light either to the left or to the right [Wonders]. Researchers
    have proposed an experiment to prepare a quantum superposition of left- and right-handed
    states of enantiomers and to perform interferometric sensing of chirality-dependent
    forces [Stickler].
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们介绍了*第3.3.1节，量子计算过程*中通用量子计算的过程。然后我们在*第3.3.2节，模拟左旋和右旋对映异构体状态量子叠加的干涉测量*中给出了一个受化学实验启发的模拟示例。在化学中，互为镜像的分子或离子被称为对映异构体或光学异构体。如果这些镜像不可叠加，它们被称为手性分子[ChemChiral]，并且它们在旋转平面偏振光的能力上有所不同[Wonders]。研究人员提出了一种实验，以制备对映异构体的左旋和右旋状态的量子叠加，并执行基于手性依赖力的干涉测量[Stickler]。
- en: 3.3.1\. Quantum computation process
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3.1. 量子计算过程
- en: 'Quantum computing uses interference and the quantum physical phenomena of superposition
    and entanglement. A typical quantum computation comprises the following steps:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算使用干涉以及叠加和纠缠等量子物理现象。典型的量子计算包括以下步骤：
- en: Prepare a uniform superposition of all possible basis states. A register of
    qubits initialized in the zero state is put in a uniform superposition of all
    possible basis states simply by applying parallel Hadamard gates, as we illustrated
    previously.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备所有可能基态的均匀叠加。将一个初始化为零态的量子比特寄存器置于所有可能基态的均匀叠加状态，只需应用并行Hadamard门，正如我们之前所展示的那样。
- en: Orchestrate quantum interference and entanglement. A quantum algorithm ought
    to be designed such that at the end of a computation, only the relative amplitudes
    and the phases of those quantum states that are of interest will remain.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 协调量子干涉和纠缠。一个量子算法应该被设计成，在计算结束时，只有那些感兴趣的量子状态的相对幅度和相位将保留。
- en: Repeat the measurements multiple times. Measurements are repeated hundreds or
    thousands of times in order to obtain a distribution over the possible measurement
    outcomes. This is the key difference between quantum and classical computing.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多次重复测量。为了获得可能的测量结果的分布，测量需要重复数百或数千次。这是量子计算与经典计算之间的关键区别。
- en: 3.3.2\. Simulating interferometric sensing of a quantum superposition of left-
    and right-handed enantiomer states
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3.2. 模拟左旋和右旋对映异构体状态量子叠加的干涉测量
- en: 'Let''s design, with Qiskit, a quantum circuit inspired by the interferometer
    involving enantiomers. We represent a single enantiomer with two qubits. We encode
    in the direction of propagation qubit ![](img/Formula_03_417.png) the horizontal
    propagation as the state ![](img/Formula_03_418.png) and the vertical propagation
    as the state ![](img/Formula_03_024.png) . We simulate a mirror by the Pauli ![](img/Formula_03_420.png)
    matrix and a beam splitter (![](img/Formula_03_421.png)) by the matrix ![](img/Formula_03_422.png):'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Qiskit设计一个受对映异构体干涉仪启发的量子电路。我们用两个量子比特表示一个单一的对映异构体。我们在传播方向量子比特![公式](img/Formula_03_417.png)中将水平传播编码为状态![公式](img/Formula_03_418.png)，将垂直传播编码为状态![公式](img/Formula_03_024.png)。我们用Pauli![公式](img/Formula_03_420.png)矩阵模拟镜子，用![公式](img/Formula_03_422.png)矩阵模拟分束器(![公式](img/Formula_03_421.png))：
- en: '![](img/Formula_03_423.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![公式](img/Formula_03_423.jpg)'
- en: 'By convention, a phase shift of ![](img/Formula_03_424.png) is assigned to
    reflection. From the preceding unitary matrix, we create a beam splitter gate
    named BS with the following Qiskit code:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 按照惯例，反射被分配一个![公式](img/Formula_03_424.png)的相移。从先前的单位矩阵中，我们创建了一个名为BS的分束器门，其Qiskit代码如下：
- en: '[PRE22]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We encode the following in the handedness qubit ![](img/Formula_03_425.png)
    :'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在以下方面对手性量子比特![公式](img/Formula_03_425.png)进行编码：
- en: A left-handed state as the ![](img/Formula_03_426.png) state
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左旋态作为![公式](img/Formula_03_426.png)态
- en: A right-handed state as the ![](img/Formula_03_024.png) state
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右旋态作为![公式](img/Formula_03_024.png)态
- en: A superposition of left- and right-handed states as ![](img/Formula_03_428.png)
    obtained by applying a Hadamard gate
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过应用Hadamard门获得的左右手态叠加 ![](img/Formula_03_428.png)
- en: 'We simulate a polarizing beam splitter (![](img/Formula_03_429.png)):'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 我们模拟了一个偏振分束器 (![](img/Formula_03_429.png))：
- en: '![](img/Formula_03_430.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_430.jpg)'
- en: 'which transmits left-handed and reflects right-handed states with the matrix
    PBS [Rioux]. Unlike the beam splitter, there is no phase change on reflection.
    From the preceding unitary matrix, we create a polarizing beam splitter gate named
    PBS with the following Qiskit code:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 该矩阵PBS [Rioux] 传输左手态并反射右手态。与分束器不同，反射时没有相位变化。从前面的单位矩阵中，我们创建了一个名为PBS的偏振分束器门，以下是用Qiskit代码实现的：
- en: '[PRE23]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We define the `show()` function, which displays the drawing of a quantum circuit
    and the state of the state vector using LaTeX as follows:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义了一个`show()`函数，它使用LaTeX显示量子电路的绘制和状态向量的状态，如下所示：
- en: '[PRE24]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We simulate the action of a polarizing beam splitter on an enantiomer moving
    horizontally and in the right-handed state with the following Qiskit code:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用以下Qiskit代码模拟偏振分束器对一个水平移动且处于右手状态的异构体的作用：
- en: '[PRE25]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '*Figure 3.21* shows the result:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.21* 展示了结果：'
- en: '![](img/B18268_Figure_3.21.jpg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.21.jpg)'
- en: Figure 3.21 – Simulation of the interaction of a right-handed enantiomer with
    a polarizing beam splitter
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.21 – 右手态异构体与偏振分束器相互作用的模拟
- en: The enantiomer moving horizontally and in the right-handed state, represented
    by ![](img/Formula_03_431.png), using Qiskit tensor ordering of qubits, has been
    reflected in the vertical direction of propagation by the polarizing beam splitter,
    represented by ![](img/Formula_03_432.png).
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 水平移动且处于右手状态的异构体，由 ![](img/Formula_03_431.png) 表示，使用Qiskit的量子比特张量排序，其传播方向上的垂直方向已被偏振分束器反射，由
    ![](img/Formula_03_432.png) 表示。
- en: 'We simulate the action of a polarizing beam splitter on an enantiomer moving
    horizontally and in a superposition of left- and right-handed states with the
    following Qiskit code:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用以下Qiskit代码模拟偏振分束器对一个水平移动且处于左右手态叠加的异构体的作用：
- en: '[PRE26]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '*Figure 3.22* shows the result:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.22* 展示了结果：'
- en: '![](img/B18268_Figure_3.22.jpg)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.22.jpg)'
- en: Figure 3.22 – Simulation of the interaction of a left- and right-handed enantiomer
    with a polarizing beam splitter
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.22 – 左右手态异构体与偏振分束器相互作用的模拟
- en: The enantiomer moving horizontally and in a superposition of the left- and right-handed
    states, represented by ![](img/Formula_03_433.png), using Qiskit tensor ordering
    of qubits, has been put by the polarizing beam splitter in the Bell state ![](img/Formula_03_434.png),
    a superposition of left-handed moving horizontally and right-handed moving vertically,
    thereby achieving interferometric sensing.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 水平移动且处于左右手态叠加的异构体，由 ![](img/Formula_03_433.png) 表示，使用Qiskit的量子比特张量排序，被偏振分束器置于贝尔态
    ![](img/Formula_03_434.png)，即左右手态水平移动和右手态垂直移动的叠加，从而实现干涉测量。
- en: Now we move on to preparing permutation symmetric and antisymmetic states.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们继续准备排列对称和反对称态。
- en: 3.4\. Preparing a permutation symmetric or antisymmetric state
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.4.1 准备一个对称或反对称的态
- en: 'Given two qubits ![](img/Formula_03_435.png) and ![](img/Formula_03_436.png)
    , we want to build a symmetrized state that remains invariant under a permutation
    of the qubits ![](img/Formula_03_437.png) and ![](img/Formula_03_438.png), or
    an antisymmetrized state that is multiplied by ![](img/Formula_03_439.png) under
    a permutation of the qubits ![](img/Formula_03_440.png) and ![](img/Formula_03_441.png).
    In this section, we show how to prepare such states in a probabilistic manner
    with a quantum circuit prepared and simulated with Qiskit:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 给定两个量子比特 ![](img/Formula_03_435.png) 和 ![](img/Formula_03_436.png) ，我们希望构建一个在量子比特
    ![](img/Formula_03_437.png) 和 ![](img/Formula_03_438.png) 的排列下保持不变的对称态，或者一个在量子比特
    ![](img/Formula_03_439.png) 和 ![](img/Formula_03_440.png) 的排列下乘以 ![](img/Formula_03_441.png)
    的反对称态。在本节中，我们展示了如何使用Qiskit准备和模拟的量子电路以概率方式准备此类状态：
- en: '*Section 3.4.1, Creating random states*'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*3.4.1节，创建随机状态*'
- en: '*Section 3.4.2, Creating a quantum circuit and initializing qubits*'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*3.4.2节，创建量子电路和初始化量子比特*'
- en: '*Section 3.4.3, Creating a circuit that swaps two qubits with a controlled
    swap gate*'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*3.4.3节，使用受控交换门交换两个量子比特的电路*'
- en: '*Section 3.4.4, Post selecting the control qubit until the desired state is
    obtained*'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*3.4.4节，后选择控制量子比特直到获得所需状态*'
- en: '*Section 3.4.5, Examples of final symmetrized and antisymmetrized states*'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第3.4.5节，最终对称化和反对称化状态的示例*'
- en: 3.4.1\. Creating random states
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4.1. 创建随机状态
- en: 'We define a function called `init_random()` that creates random 1-qubit states
    `s1` and `s2` that we will use later to run experiments with random states:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义了一个名为`init_random()`的函数，它创建随机1量子比特状态`s1`和`s2`，我们将使用这些状态进行后续的随机状态实验：
- en: '[PRE27]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 3.4.2\. Creating a quantum circuit and initializing qubits
  id: totrans-317
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4.2. 创建量子电路和初始化量子比特
- en: 'We define the `setup_qc()` function, which sets up the initialization instruction
    to create qubits ![](img/Formula_03_442.png) and ![](img/Formula_03_443.png) from
    the state vectors `s1` and `s2` given as input and a quantum circuit `qc` with
    a control qubit ![](img/Formula_03_425.png) initialized in state ![](img/Formula_03_445.png),
    qubits ![](img/Formula_03_446.png) and ![](img/Formula_03_447.png), and a classical
    register `c` for measuring ![](img/Formula_03_448.png):'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义了`setup_qc()`函数，它设置初始化指令以从输入的状态向量`s1`和`s2`创建量子比特![公式_03_442.png](img/Formula_03_442.png)和![公式_03_443.png](img/Formula_03_443.png)，以及一个带有控制量子比特![公式_03_425.png](img/Formula_03_425.png)初始化在状态![公式_03_445.png](img/Formula_03_445.png)、量子比特![公式_03_446.png](img/Formula_03_446.png)和![公式_03_447.png](img/Formula_03_447.png)和一个用于测量的经典寄存器`c`![公式_03_448.png](img/Formula_03_448.png)的量子电路`qc`：
- en: '[PRE28]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 3.4.3\. Creating a circuit that swaps two qubits with a controlled swap gate
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4.3. 创建一个使用受控交换门交换两个量子比特的电路
- en: 'We define the `swapper()` function, which creates a quantum circuit as follows
    [Spheres]:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义了`swapper()`函数，它创建一个量子电路如下[Spheres]：
- en: Applying a Hadamard gate to the control qubit ![](img/Formula_03_449.png) which
    puts it in the state ![](img/Formula_03_450.png)
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对控制量子比特![公式_03_449.png](img/Formula_03_449.png)应用Hadamard门，将其置于状态![公式_03_450.png](img/Formula_03_450.png)
- en: Applying a controlled swap gate, which puts the two qubits ![](img/Formula_03_451.png)
    and ![](img/Formula_03_452.png) in a superposition of being swapped and not swapped
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用一个受控交换门，将两个量子比特![公式_03_451.png](img/Formula_03_451.png)和![公式_03_452.png](img/Formula_03_452.png)置于交换和不交换的叠加态
- en: Applying again a Hadamard gate to the control qubit ![](img/Formula_03_453.png)
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 再次对控制量子比特![公式_03_453.png](img/Formula_03_453.png)应用Hadamard门
- en: 'Here is the implementation:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是其实施方法：
- en: '[PRE29]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Let''s get the unitary matrix corresponding to the swapper quantum circuit
    with the unitary simulator:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用单元算符模拟器获取对应于交换量子电路的单元矩阵：
- en: '[PRE30]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '*Figure 3.23* shows the result:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3.23*显示了结果：'
- en: '![](img/B18268_Figure_3.23.jpg)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![img/B18268_Figure_3.23.jpg](img/B18268_Figure_3.23.jpg)'
- en: Figure 3.23 – Unitary matrix of the swapper circuit
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.23 – 交换电路的单元矩阵
- en: Computing the action of the swapper unitary
  id: totrans-332
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算交换单元算符的作用
- en: 'The initial state vector pertaining to the two qubits ![](img/Formula_03_454.png)
    and ![](img/Formula_03_455.png) can be written as follows:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 与两个量子比特![公式_03_454.png](img/Formula_03_454.png)和![公式_03_455.png](img/Formula_03_455.png)相关的初始状态向量可以写成以下形式：
- en: '![](img/Formula_03_456.png)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
  zh: '![公式_03_456.png](img/Formula_03_456.png)'
- en: 'The swapper unitary acts on the initial state vector as follows, using Qiskit
    ordering of the tensor product:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 交换单元算符对初始状态向量作用如下，使用张量积的Qiskit排序：
- en: '![](img/Formula_03_457.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![公式_03_457.png](img/Formula_03_457.png)'
- en: '![](img/Formula_03_458.png)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![公式_03_458.png](img/Formula_03_458.png)'
- en: Computing the final state when the control qubit ![](img/Formula_03_459.png)
    is measured in state ![](img/Formula_03_460.png)
  id: totrans-338
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 当控制量子比特![公式_03_459.png](img/Formula_03_459.png)在状态![公式_03_460.png](img/Formula_03_460.png)下被测量时，计算最终状态
- en: 'If the control qubit ![](img/Formula_03_461.png) is measured in state ![](img/Formula_03_462.png),
    then the final state is computed by discarding all amplitudes that do not contribute
    to this outcome, ![](img/Formula_03_463.png) ![](img/Formula_03_464.png), ![](img/Formula_03_465.png)
    ![](img/Formula_03_466.png) and then renormalizing:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 如果控制量子比特![公式_03_461.png](img/Formula_03_461.png)在状态![公式_03_462.png](img/Formula_03_462.png)下被测量，则通过丢弃所有不贡献于此结果的振幅![公式_03_463.png](img/Formula_03_463.png)、![公式_03_464.png](img/Formula_03_464.png)、![公式_03_465.png](img/Formula_03_465.png)和![公式_03_466.png](img/Formula_03_466.png)，然后重新归一化来计算最终状态：
- en: '![](img/Formula_03_467.png)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![公式_03_467.png](img/Formula_03_467.png)'
- en: Recall that ![](img/Formula_03_468.png), ![](img/Formula_03_469.png), ![](img/Formula_03_470.png)
    and ![](img/Formula_03_471.png) are the Bell states we introduced in *Section
    3.2.5, Creation of a Bell state*. The amplitudes ![](img/Formula_03_472.png) of
    ![](img/Formula_03_473.png) and ![](img/Formula_03_474.png) of ![](img/Formula_03_475.png)
    are left unchanged up to a renormalization factor in the final state. The symmetrized
    Bell state ![](img/Formula_03_476.png) is left unchanged. The amplitudes ![](img/Formula_03_477.png)
    of ![](img/Formula_03_478.png) and ![](img/Formula_03_479.png) of ![](img/Formula_03_480.png)
    are mixed in the Bell state ![](img/Formula_03_481.png), which is symmetrized.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，![](img/Formula_03_468.png)、![](img/Formula_03_469.png)、![](img/Formula_03_470.png)
    和 ![](img/Formula_03_471.png) 是我们在 *3.2.5 节，贝尔态的生成* 中引入的贝尔态。![](img/Formula_03_472.png)
    和 ![](img/Formula_03_473.png) 的振幅 ![](img/Formula_03_474.png) 在最终状态中的归一化因子下保持不变。对称化的贝尔态
    ![](img/Formula_03_476.png) 保持不变。![](img/Formula_03_477.png) 和 ![](img/Formula_03_478.png)
    的振幅 ![](img/Formula_03_479.png) 在贝尔态 ![](img/Formula_03_480.png) 中混合，该态是对称化的。
- en: Computing the final state when the control qubit ![](img/Formula_03_482.png)
    is measured in state ![](img/Formula_03_483.png)
  id: totrans-342
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 当控制量子比特 ![](img/Formula_03_482.png) 测量在状态 ![](img/Formula_03_483.png) 时计算最终状态
- en: 'If the control qubit ![](img/Formula_03_484.png) is measured in state ![](img/Formula_03_485.png),
    then the final state is computed by discarding all amplitudes that do not contribute
    to this outcome, ![](img/Formula_03_486.png) ![](img/Formula_03_487.png), ![](img/Formula_03_488.png)
    and ![](img/Formula_03_489.png), and then renormalizing:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 如果控制量子比特 ![](img/Formula_03_484.png) 测量在状态 ![](img/Formula_03_485.png) 中，则通过丢弃所有不贡献于此结果振幅
    ![](img/Formula_03_486.png)、![](img/Formula_03_487.png)、![](img/Formula_03_488.png)
    和 ![](img/Formula_03_489.png)，然后重新归一化来计算最终状态：
- en: '![](img/Formula_03_490.png)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Formula_03_490.png)'
- en: The only non-null amplitudes of the final state are those in the ![](img/Formula_03_491.png)
    and ![](img/Formula_03_492.png) subspace, which are mixed in the Bell state ![](img/Formula_03_493.png),
    which is antisymmetrized.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 最终状态中唯一的非零振幅是位于 ![](img/Formula_03_491.png) 和 ![](img/Formula_03_492.png) 子空间中的振幅，这些振幅在贝尔态
    ![](img/Formula_03_493.png) 中混合，该态是反对称化的。
- en: These properties of symmetry and antisymmetry are key to efficient implementations
    of the **Variational Quantum Eigensolver** (**VQE**) algorithms [Gard] that we
    will cover in [*Chapter 6*](B18268_06_ePub.xhtml#_idTextAnchor228)*, Variational
    Quantum Eigensolver Algorithm*.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 这些对称性和反对称性的特性是高效实现 **变分量子本征求解器** (**VQE**) 算法 [Gard] 的关键，我们将在 [*第 6 章*](B18268_06_ePub.xhtml#_idTextAnchor228)*，变分量子本征求解器算法*
    中介绍。
- en: 3.4.4\. Post selecting the control qubit until the desired state is obtained
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4.4. 选择控制量子比特，直到获得所需状态
- en: 'We define the `post_select()` function, which performs a loop that executes
    the swapper circuit and measures the state of the control qubit ![](img/Formula_03_425.png)
    until the desired symmetrized or antisymmetrized state is obtained, or until the
    maximum number of iterations is reached:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义了 `post_select()` 函数，该函数执行一个循环，执行交换电路并测量控制量子比特 ![](img/Formula_03_425.png)
    的状态，直到获得所需的对称化或反对称化状态，或者达到最大迭代次数：
- en: Append a circuit created by the `swapper()` function.
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加由 `swapper()` 函数创建的电路。
- en: Measure the control qubit ![](img/Formula_03_495.png). If we get 0, then qubits
    ![](img/Formula_03_496.png) and ![](img/Formula_03_436.png) are in a symmetrized
    state and if we get 1, then qubits ![](img/Formula_03_498.png) and ![](img/Formula_03_499.png)
    are in an antisymmetrized state.
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量控制量子比特 ![](img/Formula_03_495.png)。如果我们得到 0，那么量子比特 ![](img/Formula_03_496.png)
    和 ![](img/Formula_03_436.png) 处于对称化状态，如果我们得到 1，那么量子比特 ![](img/Formula_03_498.png)
    和 ![](img/Formula_03_499.png) 处于反对称化状态。
- en: Then, `post_select()` calls the `proc_result()` function to process the results.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，`post_select()` 调用 `proc_result()` 函数来处理结果。
- en: 'The `post_select()` function has the following input parameters:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '`post_select()` 函数有以下输入参数：'
- en: '`simulator`, by default `statevector_simulator`, which simulates perfect qubits.'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`simulator`，默认为 `statevector_simulator`，模拟完美的量子比特。'
- en: '`symm:` set to `True` to get a symmetrized state and `False` to get an antisymmetrized
    state.'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`symm:` 设置为 `True` 以获得对称化状态，设置为 `False` 以获得反对称化状态。'
- en: '`shots` is the number of shots, and by default is set to `1`.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shots` 是射击次数，默认设置为 `1`。'
- en: '`max_iter` is the maximum number of iterations, and by default is set to `20`.'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_iter` 是最大迭代次数，默认设置为 `20`。'
- en: '`swap_test` is set to `True` to perform a swap test to determine whether the
    final state is permutation symmetric or permutation asymmetric, and by default
    is set to `False`.'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`swap_test` 设置为 `True` 以执行交换测试，以确定最终状态是否为置换对称或置换反对称，默认设置为 `False`。'
- en: 'Here is the code:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是代码：
- en: '[PRE31]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The `proc_result()` function processes the results, displays the saved state
    vector, and calls the `factor()` function. If the input parameter `swap_test`
    is set to `True`, it calls the `swap_check()` function, which tests whether the
    final state is permutation symmetric or permutation asymmetric.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '`proc_result()` 函数处理结果，显示保存的状态向量，并调用 `factor()` 函数。如果输入参数 `swap_test` 设置为 `True`，则调用
    `swap_check()` 函数，该函数测试最终状态是否为置换对称或置换反对称。'
- en: 'It returns `Success`, a Boolean; `True` if the desired state has been obtained,
    `False` otherwise:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 它返回 `Success`，一个布尔值；如果已获得所需状态，则为 `True`，否则为 `False`：
- en: '[PRE32]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The `sym_test()` function determines whether two amplitudes of a state vector
    are equal or opposite to one another and the sum of their modulus squared is equal
    to 1:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '`sym_test()` 函数确定状态向量的两个振幅是否相等或相反，以及它们模平方之和是否等于1：'
- en: '[PRE33]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The `factor()` function attempts to factor the final state into a tensor product
    of the control qubit ![](img/Formula_03_500.png) and the permutation symmetric
    Bell states ![](img/Formula_03_501.png) or ![](img/Formula_03_502.png), or the
    permutation antisymmetric Bell states ![](img/Formula_03_503.png) or ![](img/Formula_03_504.png),
    which were introduced in *Section 3.2.5, Creation of a Bell state*:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '`factor()` 函数尝试将最终状态分解为控制量子比特 ![](img/Formula_03_500.png) 和置换对称贝尔态 ![](img/Formula_03_501.png)
    或 ![](img/Formula_03_502.png)，或者置换反对称贝尔态 ![](img/Formula_03_503.png) 或 ![](img/Formula_03_504.png)
    的张量积，这些状态在 *第3.2.5节，贝尔态的创建* 中介绍：'
- en: '[PRE34]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The `swap_check()` function tests whether the final state is permutation symmetric
    or permutation asymmetric. It calls the `swap()` function and then compares the
    states before and after the swap:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '`swap_check()` 函数测试最终状态是否为置换对称或置换反对称。它调用 `swap()` 函数，然后比较交换前后的状态：'
- en: '[PRE35]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The `swap()` function performs a swap of qubits ![](img/Formula_03_505.png)
    and ![](img/Formula_03_455.png), measures the control qubit, and returns the final
    state vector for comparison purposes:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '`swap()` 函数执行量子比特 ![](img/Formula_03_505.png) 和 ![](img/Formula_03_455.png)
    的交换，测量控制量子比特，并返回用于比较的最终状态向量：'
- en: '[PRE36]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 3.4.5\. Examples of final symmetrized and antisymmetrized states
  id: totrans-371
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4.5. 最终对称化和反对称化状态的例子
- en: 'We now implement five experiments creating:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在实现五个实验，创建：
- en: A symmetrized state from state ![](img/Formula_03_507.png)
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从状态 ![](img/Formula_03_507.png) 得到的对称化状态
- en: An antisymmetrized state from state ![](img/Formula_03_508.png)
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从状态 ![](img/Formula_03_508.png) 得到的反对称化状态
- en: A symmetrized state from qubits initialized with random states
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从随机状态初始化的量子比特得到的对称化状态
- en: An antisymmetrized state from qubits initialized with random states
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从随机状态初始化的量子比特得到的反对称化状态
- en: A symmetrized state from the Bell state ![](img/Formula_03_509.png)
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从贝尔态 ![](img/Formula_03_509.png) 得到的对称化状态
- en: Experiment creating a symmetrized state from state ![](img/Formula_03_510.png)
  id: totrans-378
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从状态 ![](img/Formula_03_510.png) 创建对称化状态的实验
- en: 'We create two state vectors in states ![](img/Formula_03_511.png) and ![](img/Formula_03_022.png)
    , we give them as input to the `setup_qc()` function, and then we call the `post_select()`
    function with `symm` set to `True`:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在状态 ![](img/Formula_03_511.png) 和 ![](img/Formula_03_022.png) 中创建两个状态向量，将它们作为输入传递给
    `setup_qc()` 函数，然后调用 `post_select()` 函数，将 `symm` 设置为 `True`：
- en: '[PRE37]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We have obtained the symmetrized state ![](img/Formula_03_513.png) , as shown
    in *Figure 3.24*:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经获得了对称化状态 ![](img/Formula_03_513.png) ，如图 *图3.24* 所示：
- en: '![](img/B18268_Figure_3.24.jpg)'
  id: totrans-382
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.24.jpg)'
- en: Figure 3.24 – Symmetrized state obtained from state ![](img/Formula_03_514.png)
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.24 – 从状态 ![](img/Formula_03_514.png) 获得的对称化状态
- en: 'We show the density matrix using a cityscape plot of the final state in *Figure
    3.25*:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 *图3.25* 中使用最终状态的市景图显示密度矩阵：
- en: '![](img/B18268_Figure_3.25.jpg)'
  id: totrans-385
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.25.jpg)'
- en: Figure 3.25 – Cityscape plot of the symmetrized state obtained from state ![](img/Formula_03_515.png)
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.25 – 从状态 ![](img/Formula_03_515.png) 获得的对称化状态的市景图
- en: 'We display the quantum circuit with the `draw()` method of the quantum circuit
    class:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用量子电路类的 `draw()` 方法显示量子电路：
- en: '[PRE38]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'After one iteration, the quantum circuit looks like *Figure 3.26*:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一次迭代后，量子电路看起来像 *图3.26*：
- en: '![](img/B18268_Figure_3.26.jpg)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.24.jpg)'
- en: Figure 3.26 – Quantum circuit after one iteration
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.26 – 经过一次迭代后的量子电路
- en: Experiment creating an antisymmetrized state from state ![](img/Formula_03_516.png)
  id: totrans-392
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从状态![公式3.516](img/Formula_03_516.png)创建反对称态的实验
- en: 'We create two state vectors in states ![](img/Formula_03_517.png) and ![](img/Formula_03_022.png)
    , we give them as input to the `setup_qc()` function, and then we call the `post_select()`
    function with `symm` set to `False`:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在状态![公式3.517](img/Formula_03_517.png)和![公式3.022](img/Formula_03_022.png)中创建两个状态向量，将它们作为输入传递给`setup_qc()`函数，然后调用`post_select()`函数，将`symm`设置为`False`：
- en: '[PRE39]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'We have obtained the antisymmetrized state ![](img/Formula_03_519.png), as
    shown in *Figure 3.27*:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经获得了反对称态![公式3.519](img/Formula_03_519.png)，如图3.27所示：
- en: '![](img/B18268_Figure_3.27.jpg)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![图3.27](img/B18268_Figure_3.27.jpg)'
- en: Figure 3.27 – Antisymmetrized state obtained from state ![](img/Formula_03_520.png)
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.27 – 从状态![公式3.520](img/Formula_03_520.png)获得的反对称态
- en: 'We show the density matrix using a cityscape plot of the final state in *Figure
    3.28*:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*图3.28*中展示了最终状态的城市景观图来展示密度矩阵：
- en: '![](img/B18268_Figure_3.28.jpg)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
  zh: '![图3.28](img/B18268_Figure_3.28.jpg)'
- en: Figure 3.28 – Cityscape plot of the antisymmetrized state obtained from state
    ![](img/Formula_03_521.png)
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.28 – 从状态![公式3.521](img/Formula_03_521.png)获得的反对称态的城市景观图
- en: Experiment creating a symmetrized state from qubits initialized with random
    states
  id: totrans-401
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从随机状态初始化的量子比特创建对称态的实验
- en: We create two state vectors in random states with `init_random()`, we give them
    as input to the `setup_qc()` function, and then we call the `post_select()` function
    with `symm` set to `True` and `swap_test` set to `True` to confirm that the final
    state is indeed permutation symmetric. We expect the final state to have four
    non-null amplitudes, based on the computation made in *Section 3.4.3, Creating
    a circuit that swaps two qubits with a controlled swap gate, Computing the final
    state when the control qubit* ![](img/Formula_03_522.png) *is measured in state*
    ![](img/Formula_03_523.png)*:*
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`init_random()`创建两个在随机状态下的状态向量，将它们作为输入传递给`setup_qc()`函数，然后调用`post_select()`函数，将`symm`设置为`True`，将`swap_test`设置为`True`以确认最终状态确实是排列对称的。根据*第3.4.3节*的计算，我们期望最终状态有四个非零振幅：*构建一个使用受控交换门交换两个量子比特的电路，当控制量子比特![公式3.522](img/Formula_03_522.png)*在状态![公式3.523](img/Formula_03_523.png)*下测量时计算最终状态*：
- en: '[PRE40]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'In *Figure 3.29*, we show a result where the final state has four non-null
    amplitudes, as expected, and the swap test has confirmed that the final state
    is permutation symmetric:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图3.29*中，我们展示了最终状态具有四个非零振幅的结果，正如预期的那样，交换测试已确认最终状态是排列对称的：
- en: '![](img/B18268_Figure_3.29.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![图3.29](img/B18268_Figure_3.29.jpg)'
- en: Figure 3.29 – Symmetrized state obtained from qubits initialized in random states
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.29 – 从随机状态初始化的量子比特获得的对称态
- en: 'In the cityscape plot of the final state shown in *Figure 3.30*, we see that
    the state ![](img/Formula_03_524.png) has the largest probability to come out
    after measuring the final state:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图3.30*中展示的最终状态的城市景观图中，我们看到状态![公式3.524](img/Formula_03_524.png)在测量最终状态后具有最大的概率出现：
- en: '![](img/B18268_Figure_3.30.jpg)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: '![图3.30](img/B18268_Figure_3.30.jpg)'
- en: Figure 3.30 – Cityscape plot of symmetrized state obtained from qubits initialized
    in random states
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.30 – 从随机状态初始化的量子比特获得的对称态的城市景观图
- en: Experiment creating an antisymmetrized state from qubits initialized with random
    states
  id: totrans-410
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从随机状态初始化的量子比特创建反对称态的实验
- en: 'We create two state vectors in random states with `init_random()`, we give
    them as input to the `setup_qc()` function, and then we call the `post_select()`
    function with `symm` set to `False`:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`init_random()`创建两个在随机状态下的状态向量，将它们作为输入传递给`setup_qc()`函数，然后调用`post_select()`函数，将`symm`设置为`False`：
- en: '[PRE41]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'We have obtained the antisymmetrized state ![](img/Formula_03_525.png) up to
    a global phase, as shown in *Figure 3.31*:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经获得了反对称态![公式3.525](img/Formula_03_525.png)，如图3.31所示：
- en: '![](img/B18268_Figure_3.31.jpg)'
  id: totrans-414
  prefs: []
  type: TYPE_IMG
  zh: '![图3.31](img/B18268_Figure_3.31.jpg)'
- en: Figure 3.31 – Antisymmetrized state obtained from qubits initialized in random
    states
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.31 – 从随机状态初始化的量子比特获得的反对称态
- en: 'We show the density matrix using a cityscape plot of the final state in *Figure
    3.32*:'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*图3.32*中展示了最终状态的城市景观图来展示密度矩阵：
- en: '![](img/B18268_Figure_3.32.jpg)'
  id: totrans-417
  prefs: []
  type: TYPE_IMG
  zh: '![图3.32](img/B18268_Figure_3.32.jpg)'
- en: Figure 3.32 – Cityscape plot of the antisymmetrized state obtained from qubits
    initialized in random states
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.32 – 从随机状态初始化的量子比特获得的反对称态的城市景观图
- en: Experiment creating a symmetrized state from the Bell state ![](img/Formula_03_526.png)
  id: totrans-419
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从贝尔态![公式3.526](img/Formula_03_526.png)创建对称态的实验
- en: 'We define a function called `setup1_qc()`, which sets up a quantum circuit
    that puts qubits ![](img/Formula_03_527.png) and ![](img/Formula_03_528.png) into
    the Bell state ![](img/Formula_03_529.png), as follows:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义了一个名为 `setup1_qc()` 的函数，该函数设置一个量子电路，将量子比特 ![](img/Formula_03_527.png) 和
    ![](img/Formula_03_528.png) 置于贝尔态 ![](img/Formula_03_529.png)，如下所示：
- en: '[PRE42]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We execute the following code, which calls `setup1_qc()` to create a Bell state
    ![](img/Formula_03_530.png) and then calls the `post_select()` function with `symm`
    set to `True`:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行以下代码，该代码调用 `setup1_qc()` 创建贝尔态 ![](img/Formula_03_530.png)，然后调用 `post_select()`
    函数，将 `symm` 设置为 `True`：
- en: '[PRE43]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'As expected in *Section 3.4.3, Creating a circuit that swaps two qubits with
    a controlled swap gate*, the swapper circuit followed by a measurement of the
    qubit ![](img/Formula_03_531.png) in state 0 leaves the symmetrized Bell state
    ![](img/Formula_03_532.png) unchanged, as shown in *Figure 3.33*:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期在 *第3.4.3节，创建一个使用受控交换门交换两个量子比特的电路* 中，紧随其后的交换电路对量子比特 ![](img/Formula_03_531.png)
    在状态0的测量，不会改变对称化的贝尔态 ![](img/Formula_03_532.png)，如图 *图3.33* 所示：
- en: '![](img/B18268_Figure_3.33.jpg)'
  id: totrans-425
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.33.jpg)'
- en: Figure 3.33 – Symmetrized state obtained from the Bell state ![](img/Formula_03_533.png)
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.33 – 从贝尔态 ![](img/Formula_03_533.png) 获得的对称化状态
- en: 'We show the density matrix using a cityscape plot of the final state in *Figure
    3.34*:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 *图3.34* 中展示了最终状态的城市景观图来表示密度矩阵：
- en: '![](img/B18268_Figure_3.34.jpg)'
  id: totrans-428
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18268_Figure_3.34.jpg)'
- en: Figure 3.34 – Cityscape plot of the final state obtained from the Bell state
    ![](img/Formula_03_533.png)
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.34 – 从贝尔态 ![](img/Formula_03_533.png) 获得的最终状态的城市景观图
- en: References
  id: totrans-430
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[ChemChiral] 5.1 Chiral Molecules, Chemistry LibreTexts, 5 Jul 2015, [https://chem.libretexts.org/Bookshelves/Organic_Chemistry/Map%3A_Organic_Chemistry_(Vollhardt_and_Schore)/05._Stereoisomers/5.1%3A_Chiral__Molecules](https://chem.libretexts.org/Bookshelves/Organic_Chemistry/Map%3A_Organic_Chemistry_(Vollhardt_and_Schore)/05._Stereoisomers/5.1%3A_Chiral__Molecules)'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '[ChemChiral] 5.1 手性分子，Chemistry LibreTexts，2015年7月5日，[https://chem.libretexts.org/Bookshelves/Organic_Chemistry/Map%3A_Organic_Chemistry_(Vollhardt_and_Schore)/05._Stereoisomers/5.1%3A_Chiral__Molecules](https://chem.libretexts.org/Bookshelves/Organic_Chemistry/Map%3A_Organic_Chemistry_(Vollhardt_and_Schore)/05._Stereoisomers/5.1%3A_Chiral__Molecules)'
- en: '[Corcoles] A. D. Córcoles, Maika Takita, Ken Inoue, Scott Lekuch, Zlatko K.
    Minev, Jerry M. Chow, and Jay M. Gambetta, Exploiting Dynamic Quantum Circuits
    in a Quantum Algorithm with Superconducting Qubits, Phys. Rev. Lett. 127, 100501,
    31 August 2021, [https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.127.100501](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.127.100501)'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '[Corcoles] A. D. Córcoles，Maika Takita，Ken Inoue，Scott Lekuch，Zlatko K. Minev，Jerry
    M. Chow，和 Jay M. Gambetta，在超导量子比特量子算法中利用动态量子电路，物理评论快报 127，100501，2021年8月31日，[https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.127.100501](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.127.100501)'
- en: '[Crockett] Christopher Crockett, Superpositions of Chiral Molecules, September
    14, 2021, Physics 14, s108, [https://physics.aps.org/articles/v14/s108](https://physics.aps.org/articles/v14/s108)'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '[Crockett] Christopher Crockett，手性分子的叠加，2021年9月14日，物理 14，s108，[https://physics.aps.org/articles/v14/s108](https://physics.aps.org/articles/v14/s108)'
- en: '[Gard] Gard, B.T., Zhu, L., Barron, G.S. et al., Efficient symmetry-preserving
    state preparation circuits for the variational quantum eigensolver algorithm,
    npj Quantum Inf 6, 10 (2020), [https://doi.org/10.1038/s41534-019-0240-1](https://doi.org/10.1038/s41534-019-0240-1)'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '[Gard] Gard, B.T., Zhu, L., Barron, G.S. 等人，高效保持对称性的变分量子本征求解算法状态制备电路，npj 量子信息
    6, 10 (2020)，[https://doi.org/10.1038/s41534-019-0240-1](https://doi.org/10.1038/s41534-019-0240-1)'
- en: '[Grok] Grok the Bloch Sphere, [https://javafxpert.github.io/grok-bloch/](https://javafxpert.github.io/grok-bloch/)'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '[Grok] 理解布洛赫球，[https://javafxpert.github.io/grok-bloch/](https://javafxpert.github.io/grok-bloch/)'
- en: '[IBM_CEO] IBM CEO: Quantum computing will take off ''like a rocket ship'' this
    decade, Fast Company, Sept 28, 2021., [https://www.fastcompany.com/90680174/ibm-ceo-quantum-computing-will-take-off-like-a-rocket-ship-this-decade](https://www.fastcompany.com/90680174/ibm-ceo-quantum-computing-will-take-off-like-a-rocket-ship-this-decade)'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: '[IBM_CEO] IBM 首席执行官：本十年量子计算将“像火箭一样”起飞，Fast Company，2021年9月28日，[https://www.fastcompany.com/90680174/ibm-ceo-quantum-computing-will-take-off-like-a-rocket-ship-this-decade](https://www.fastcompany.com/90680174/ibm-ceo-quantum-computing-will-take-off-like-a-rocket-ship-this-decade)'
- en: '[IBM_comp1] Welcome to IBM Quantum Composer, [https://quantum-computing.ibm.com/composer/docs/iqx/](https://quantum-computing.ibm.com/composer/docs/iqx/)'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '[IBM_comp1] 欢迎来到 IBM 量子作曲家，[https://quantum-computing.ibm.com/composer/docs/iqx/](https://quantum-computing.ibm.com/composer/docs/iqx/)'
- en: '[IBM_comp2] IBM Quantum Composer, [https://quantum-computing.ibm.com/composer/files/new](https://quantum-computing.ibm.com/composer/files/new)'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '[IBM_comp2] IBM 量子作曲家，[https://quantum-computing.ibm.com/composer/files/new](https://quantum-computing.ibm.com/composer/files/new)'
- en: '[IBM_mid] Mid-Circuit Measurements Tutorial, IBM Quantum systems, [https://quantum-computing.ibm.com/lab/docs/iql/manage/systems/midcircuit-measurement/](https://quantum-computing.ibm.com/lab/docs/iql/manage/systems/midcircuit-measurement/)'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '[IBM_mid] 中断电路测量教程，IBM 量子系统，[https://quantum-computing.ibm.com/lab/docs/iql/manage/systems/midcircuit-measurement/](https://quantum-computing.ibm.com/lab/docs/iql/manage/systems/midcircuit-measurement/)'
- en: '[NumPy] NumPy: the absolute basics for beginners, [https://numpy.org/doc/stable/user/absolute_beginners.html](https://numpy.org/doc/stable/user/absolute_beginners.html)'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: '[NumPy] NumPy：初学者的绝对基础，[https://numpy.org/doc/stable/user/absolute_beginners.html](https://numpy.org/doc/stable/user/absolute_beginners.html)'
- en: '[Qiskit] Qiskit, [https://qiskit.org/](https://qiskit.org/)'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '[Qiskit] Qiskit，[https://qiskit.org/](https://qiskit.org/)'
- en: '[QuTiP] QuTiP, Plotting on the Bloch Sphere, [https://qutip.org/docs/latest/guide/guide-bloch.html](https://qutip.org/docs/latest/guide/guide-bloch.html)'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '[QuTiP] QuTiP，在布洛赫球上绘图，[https://qutip.org/docs/latest/guide/guide-bloch.html](https://qutip.org/docs/latest/guide/guide-bloch.html)'
- en: '[Rioux] Mach-Zehnder Polarizing Interferometer Analyzed Using Tensor Algebra,
    [https://faculty.csbsju.edu/frioux/photon/MZ-Polarization.pdf](https://faculty.csbsju.edu/frioux/photon/MZ-Polarization.pdf)'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '[Rioux] 使用张量代数分析马赫-曾德尔偏振干涉仪，[https://faculty.csbsju.edu/frioux/photon/MZ-Polarization.pdf](https://faculty.csbsju.edu/frioux/photon/MZ-Polarization.pdf)'
- en: '[Spheres] How to Prepare a Permutation Symmetric Multiqubit State on an Actual
    Quantum Computer, [https://spheres.readthedocs.io/en/stable/notebooks/9_Symmetrized_Qubits.html](https://spheres.readthedocs.io/en/stable/notebooks/9_Symmetrized_Qubits.html)'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '[Spheres] 如何在实际量子计算机上准备一个置换对称的多量子比特态，[https://spheres.readthedocs.io/en/stable/notebooks/9_Symmetrized_Qubits.html](https://spheres.readthedocs.io/en/stable/notebooks/9_Symmetrized_Qubits.html)'
- en: '[Stickler] B. A. Stickler et al., Enantiomer superpositions from matter-wave
    interference of chiral molecules, Phys. Rev. X 11, 031056 (2021), [https://journals.aps.org/prx/abstract/10.1103/PhysRevX.11.031056](https://journals.aps.org/prx/abstract/10.1103/PhysRevX.11.031056)'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '[Stickler] B. A. Stickler 等人，来自手性分子物质波干涉的对映异构体叠加，物理评论X 11，031056 (2021)，[https://journals.aps.org/prx/abstract/10.1103/PhysRevX.11.031056](https://journals.aps.org/prx/abstract/10.1103/PhysRevX.11.031056)'
- en: '[Wonders] Optical Isomers, Enantiomers and Chiral Molecules, WondersofChemistry,
    [https://www.youtube.com/watch?v=8TIZdWR4gIU](https://www.youtube.com/watch?v=8TIZdWR4gIU)'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: '[奇迹] 光学异构体、对映异构体和手性分子，化学奇迹，[https://www.youtube.com/watch?v=8TIZdWR4gIU](https://www.youtube.com/watch?v=8TIZdWR4gIU)'
