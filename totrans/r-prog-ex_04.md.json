["```py\nstatus_levels <- c(\"PENDING\", \"DELIVERED\", \"RETURNED\", \"CANCELLED\")\nprotein_source_levels <- c(\"BEEF\", \"FISH\", \"CHICKEN\", \"VEGETARIAN\")\ncontinent_levels <- c(\"AMERICA\", \"EUROPE\", \"ASIA\")\ndelivery_levels <- c(\"IN STORE\", \"TO LOCATION\")\npaid_levels <- c(\"YES\", \"NO\")\n\nsales <- data.frame(\n    SALE_ID = character(),\n    CLIENT_ID = character(),\n    DATE = as.Date(character()),\n    QUANTITY = integer(),\n    COST = numeric(),\n    PRICE = numeric(),\n    DISCOUNT = numeric(),\n    PROTEIN = numeric(),\n    CARBS = numeric(),\n    FAT = numeric(),\n    PROTEIN_SOURCE = factor(levels = protein_source_levels),\n    CONTINENT = factor(levels = continent_levels),\n    DELIVERY = factor(levels = delivery_levels),\n    STATUS = factor(levels = status_levels),\n    PAID = factor(levels = paid_levels)\n)\n```", "```py\nrandom_values <- function(n, mean, variance) {\n    return(round(rnorm(n, mean, sqrt(variance)), 2))\n}\n```", "```py\nrandom_discounts <- function(n, lambda) {\n    return(round(rexp(n, lambda), 2) * 100)\n}\n```", "```py\nrandom_quantities <- function(n, lambda) {\n    return(rpois(n, lambda) + 1)\n}\n```", "```py\nrandom_levels <- function(n, levels, probabilities = NULL) {\n    return(sample(levels, n, TRUE, probabilities))\n}\n```", "```py\nresults <- random_levels(100, c(\"A\", \"B\", \"C\"), c(0.2, 0.3, 0.5))\ntable(results)\n#> results\n#>  A  B  C\n#> 18 37 45\n```", "```py\nrandom_dates_in_range <- function(n, start, end, increasing_prob = FALSE) {\n    sequence <- seq(start, end, \"day\")\n    if (increasing_prob) {\n        probabilities <- seq(1, length(sequence))^2\n        probabilities <- probabilities / sum(probabilities)\n        return(sample(sequence, n, TRUE, probabilities))\n    } else {\n        return(sample(sequence, n, TRUE))\n    }\n}\n```", "```py\nseq(\"2017-01-01\", \"2017-02-01\", \"day\")                    # Error\nseq(as.Date(\"2017-01-01\"), as.Date(\"2017-02-01\"), \"day\")  # Valid\n```", "```py\nrandom_triple <- function() {\n    a <- runif(1, 0, 1)\n    b <- runif(1, 0, 1)\n    PROTEIN <- 1 - max(a, b)\n    CARBS <- abs(a - b)\n    FAT <- min(a, b)\n    return(c(PROTEIN, CARBS, FAT))\n}\n```", "```py\ntriple <- random_triple()\ntriple\n#> [1] 0.05796599 0.76628032 0.17575370\n\nsum(triple)\n#> 1\n```", "```py\nrandom_composition <- function(n) {\n    matrix <- t(replicate(n, random_triple(), TRUE))\n    return(data.frame(PROTEIN = matrix[, 1], \n                      CARBS = matrix[, 2], \n                      FAT = matrix[, 3]))\n}\n```", "```py\nn_letters <- 5\nletters <- do.call(paste0, replicate(\n           n_letters, sample(LETTERS, n, TRUE), FALSE))\nletters\n#> [1] \"KXSVT\" \"HQASE\" \"DDEOG\" \"ERIMD\" \"CQBOY\"\n```", "```py\nmax_number <- as.numeric(paste(replicate(n_digits, 9), collapse = \"\"))\nformat <- paste(\"%0\", n_digits, \"d\", sep = \"\")\ndigits <- sprintf(format, sample(max_number, n, TRUE))\ndigits\n#> [1] \"84150\" \"88603\" \"88640\" \"24548\" \"06355\"\n```", "```py\nrandom_strings <- function(n, n_letters, n_digits, reduction = 0) {\n    letters <- do.call(paste0, replicate(\n                       n_letters, sample(LETTERS, n, TRUE), FALSE))\n    max_number <- as.numeric(paste(replicate(n_digits, 9), \n                                   collapse = \"\"))\n    format <- paste(\"%0\", n_digits, \"d\", sep = \"\")\n    digits <- sprintf(format, sample(max_number, n, TRUE))\n    ids <- paste0(letters, digits)\n    if (reduction > 0) {\n        ids <- sample(ids[1:floor(reduction * length(ids))], n, TRUE)\n    }\n    return(ids)\n}\n```", "```py\nrandom_sales_data <- function(sales, parameters) {\n    n <- parameters[[\"n\"]]\n    n_letters <- parameters[[\"n_letters\"]]\n    n_digits <- parameters[[\"n_digits\"]]\n    reduction <- parameters[[\"reduction\"]]\n    date_start <- parameters[[\"date_start\"]]\n    date_end <- parameters[[\"date_end\"]]\n    quantity_lambda <- parameters[[\"quantity_lambda\"]]\n    price_mean <- parameters[[\"price_mean\"]]\n    price_variance <- parameters[[\"price_variance\"]]\n    cost_mean <- parameters[[\"cost_mean\"]]\n    cost_variance <- parameters[[\"cost_variance\"]]\n    discount_lambda <- parameters[[\"discount_lambda\"]]\n    protein_source_pbs <- parameters[[\"protein_source_probabilities\"]]\n    continent_pbs <- parameters[[\"continent_probabilities\"]]\n    delivery_pbs <- parameters[[\"deliver_probabilities\"]]\n    status_pbs <- parameters[[\"status_probabilities\"]]\n    paid_pbs <- parameters[[\"paid_probabilities\"]]\n\n    set.seed(12345)\n\n    composition = random_composition(n)\n\n    sales <- data.frame(\n        SALE_ID = random_strings(n, n_letters, n_digits),\n        CLIENT_ID = random_strings(n, n_letters, n_digits, reduction),\n        DATE = random_dates_in_range(n, date_start, date_end),\n        QUANTITY = random_quantities(n, quantity_lambda),\n        COST = random_values(n, cost_mean, cost_variance),\n        PRICE = random_values(n, price_mean, price_variance),\n        DISCOUNT = random_discounts(n, discount_lambda),\n        PROTEIN = composition$PROTEIN,\n        CARBS = composition$CARBS,\n        FAT = composition$FAT,\n        PROTEIN_SOURCE = factor(\n            random_levels(n, \n                          levels(sales$PROTEIN_SOURCE), \n                          protein_source_pbs),\n            levels = levels(sales$PROTEIN_SOURCE)\n        ),\n        CONTINENT = factor(\n            random_levels(n, levels(sales$CONTINENT), continent_pbs),\n            levels = levels(sales$CONTINENT)\n        ),\n        DELIVERY = factor(\n            random_levels(n, levels(sales$DELIVERY), delivery_pbs),\n            levels = levels(sales$DELIVERY)\n        ),\n        STATUS = factor(\n            random_levels(n, levels(sales$STATUS), status_pbs),\n            levels = levels(sales$STATUS)\n        ),\n        PAID = factor(\n            random_levels(n, levels(sales$PAID), paid_pbs),\n            levels = levels(sales$PAID)\n        ),\n        stringsAsFactors = FALSE\n    )\n    sales <- skew_sales_data(sales)\n    return(sales)\n}\n```", "```py\nparameters <- list(\n    n = 10000,\n    n_letters = 5,\n    n_digits = 5,\n    reduction = 0.25,\n    date_start = as.Date(\"2015-01-01\"),\n    date_end = Sys.Date(),\n    quantity_lambda = 2,\n    cost_mean = 12,\n    cost_variance = 1,\n    price_mean = 15,\n    price_variance = 2,\n    discount_lambda = 100,\n    protein_source_probabilities = c(0.6, 0.2, 0.1, 0.1),\n    continent_probabilities = c(0.5, 0.3, 0.2),\n    delivery_probabilities = c(0.7, 0.3),\n    status_probabilities = c(0.2, 0.6, 0.1, 0.1),\n    paid_probabilities = c(0.9, 0.1)\n)\nsales <- random_sales_data(sales, parameters)\n```", "```py\ngender_levels <- c(\"FEMALE\", \"MALE\")\nstar_levels <- c(\"1\", \"2\", \"3\", \"4\", \"5\")\n\nclients <- data.frame(\n    CLIENT_ID = character(),\n    BIRTH_DATE = as.Date(character()),\n    CLIENT_SINCE = as.Date(character()),\n    GENDER = factor(levels = gender_levels),\n    STARS = factor(levels = star_levels)\n)\n```", "```py\nrandom_clients_data <- function(clients, client_ids, parameters) {\n    n <- length(client_ids)\n    bd_start <- parameters[[\"birth_date_start\"]]\n    bd_end <- parameters[[\"birth_date_end\"]]\n    cs_start <- parameters[[\"client_since_start\"]]\n    cs_end <- parameters[[\"client_since_end\"]]\n    stars_pbs <- parameters[[\"stars_probabilities\"]]\n\n    set.seed(12345)\n\n    clients <- data.frame(\n        CLIENT_ID = client_ids,\n        BIRTH_DATE = random_dates_in_range(n, bd_start, bd_end, TRUE),\n        CLIENT_SINCE = random_dates_in_range(n, cs_start, cs_end, TRUE),\n        GENDER = factor(\n            random_levels(n, levels(clients$GENDER)),\n            levels = levels(clients$GENDER)\n        ),\n        STARS = factor(\n            random_levels(n, levels(clients$STARS), stars_pbs),\n            levels = levels(clients$STARS)\n        ),\n        stringsAsFactors = FALSE\n    )\n    return(clients)\n}\n```", "```py\nparameters <- list(\n    birth_date_start = as.Date(\"1950-01-01\"),\n    birth_date_end = as.Date(\"1997-01-01\"),\n    client_since_start = as.Date(\"2015-01-01\"),\n    client_since_end = Sys.Date(),\n    stars_probabilities = c(0.05, 0.1, 0.15, 0.2, 0.5)\n)\n\nclients <- random_clients_data(clients, \n                               unique(sales$CLIENT_ID), \n                               parameters)\n```", "```py\nclient_messages <- data.frame(\n    SALE_ID = character(),\n    DATE = as.Date(character()),\n    STARS = factor(levels = star_levels),\n    SUMMARY = character(),\n    MESSAGE = character(),\n    LAT = numeric(),\n    LNG = numeric()\n)\n```", "```py\nrandom_client_messages_data <- function(client_messages, sales, parameters) {\n    n <- parameters[[\"n\"]]\n    date_start <- parameters[[\"date_start\"]]\n    date_end <- parameters[[\"date_end\"]]\n    reviews_file <- parameters[[\"reviews_file\"]]\n    locations <- parameters[[\"locations\"]]\n\n    set.seed(12345)\n\n    reviews <- random_reviews(n, reviews_file)\n\n    client_messages <- data.frame(\n        SALE_ID = sample(unique(sales$SALE_ID), n, TRUE),\n        DATE = random_dates_in_range(n, date_start, date_end),\n        STARS = factor(reviews$STARS, \n                       levels = levels(client_messages$STARS)),\n        SUMMARY = reviews$SUMMARY,\n        MESSAGE = reviews$MESSAGE,\n        LAT = numeric(n),\n        LNG = numeric(n),\n        stringsAsFactors = FALSE\n    )\n    client_messages <- add_coordinates(client_messages, \n                                       sales, \n                                       locations)\n    return(client_messages)\n}\n```", "```py\nrandom_reviews <- function(n, reviews_file) {\n    reviews <- readRDS(reviews_file)\n    return(reviews[sample(1:nrow(reviews), n, FALSE), ])\n}\n```", "```py\nparameters <- list(\n    n = 1000,\n    date_start = as.Date(\"2015-01-01\"),\n    date_end = Sys.Date(),\n    reviews_file = \"./reviews/data/reviews.rds\",\n    locations = list(\n        \"AMERICA\" = list(\n            list(LAT = 35.982915, LNG = -119.028006),\n            list(LAT = 29.023053, LNG = -81.762383),\n            list(LAT = 41.726658, LNG = -74.731133),\n            list(LAT = 19.256493, LNG = -99.292577),\n            list(LAT = -22.472499, LNG = -43.348329)\n        ),\n        \"EUROPE\" = list(\n            list(LAT = 40.436888, LNG = -3.863850),\n            list(LAT = 48.716026, LNG = 2.350955),\n            list(LAT = 52.348010, LNG = 13.351161),\n            list(LAT = 42.025875, LNG = 12.418940),\n            list(LAT = 51.504122, LNG = -0.364277)\n        ),\n        \"ASIA\" = list(\n            list(LAT = 31.074426, LNG = 121.125328),\n            list(LAT = 22.535733, LNG = 113.830406),\n            list(LAT = 37.618251, LNG = 127.135865),\n            list(LAT = 35.713791, LNG = 139.489820),\n            list(LAT = 19.134907, LNG = 73.000993)\n        )\n    )\n)\nclient_messages <- random_client_messages_data(client_messages, sales, parameters)\n```", "```py\nhead(sales)\n#>      SALE_ID  CLIENT_ID       DATE QUANTITY  COST PRICE DISCOUNT    PROTEIN\n#> 1 OKRLL75596 EAWPJ80001 2015-01-27        3 27.58 50.79        1 0.12422681\n#> 2 ZVTFG64065 WQGVB74605 2015-05-26        7 30.78 51.09        3 0.11387543\n#> 3 SPRZD12587 XVRAM64230 2017-01-07        8 33.66 54.46        1 0.54351904\n#> 4 YGOLB67346 PDVDC58438 2015-01-12        5 34.85 53.06        1 0.49077566\n#> 5 CDQRA43926 VJCXI94728 2017-06-21        9 27.35 50.57        0 0.01026306\n#>\n#>       CARBS        FAT PROTEIN_SOURCE   STORE    DELIVERY    STATUS PAID\n#> 1 0.1548693 0.72090390        CHICKEN STORE 4    IN STORE DELIVERED  YES\n#> 2 0.1251422 0.76098233        CHICKEN STORE 3 TO LOCATION DELIVERED  YES\n#> 3 0.2901092 0.16637179     VEGETARIAN STORE 1 TO LOCATION   PENDING  YES\n#> 4 0.1841289 0.32509539        CHICKEN STORE 2 TO LOCATION DELIVERED  YES\n#> 5 0.2620317 0.72770525     VEGETARIAN STORE 1 TO LOCATION DELIVERED  YES\n(Truncated output) head(clients) #>    CLIENT_ID BIRTH_DATE CLIENT_SINCE GENDER STARS\n#> 1 EAWPJ80001 1974-09-04   2015-05-21   MALE     4\n#> 2 WQGVB74605 1987-01-24   2015-12-05 FEMALE     2\n#> 3 XVRAM64230 1977-11-18   2017-06-26 FEMALE     2\n#> 4 PDVDC58438 1987-11-23   2015-12-20   MALE     2\n#> 5 VJCXI94728 1953-07-09   2016-05-03 FEMALE     3\n(Truncated output)\n```", "```py\ninstall.packages(\"RMySQL\")\n```", "```py\ndb <- dbConnect(MySQL(), user = <YOUR_USER>, password = <YOUR_PASSWORD>, host = \"localhost\")\ndbDisconnect(db)\n#> [1] TRUE\n```", "```py\ndbSendQuery(db, \"DROP DATABASE IF EXISTS sales;\")\ndbSendQuery(db, \"CREATE DATABSE sales;\")\n```", "```py\ndbDisconnect(db)\ndb <- dbConnect(\n    MySQL(),\n    user = <YOUR_USER>,\n    password = <YOUR_PASSWORD>,\n    host = \"localhost\",\n    dbname = \"sales\"\n)\n```", "```py\nsales_from_db <- dbReadTable(db, \"sales\")\nstr(sales)\nstr(sales_from_db)\n```", "```py\nread_table <- function(db, table) {\n    data <- dbReadTable(db, table)\n    if (table == \"sales\") {\n        return(add_sales_metadata(data))\n    } else if (table == \"clients\") {\n        return(add_clients_metadata(data))\n    } else if (table == \"client_messages\") {\n        return(add_client_messages_metadata(data))\n    } else {\n        return(data)\n    }\n}\n```", "```py\nadd_sales_metadata <- function(data) {\n    status_levels <- c(\"PENDING\", \"DELIVERED\", \"RETURNED\", \"CANCELLED\")\n    protein_source_levels <- c(\"BEEF\", \"FISH\", \"CHICKEN\", \"VEGETARIAN\")\n    continent_levels <- c(\"AMERICA\", \"EUROPE\", \"ASIA\")\n    delivery_levels <- c(\"IN STORE\", \"TO LOCATION\")\n    paid_levels <- c(\"YES\", \"NO\")\n    data$DATE <- as.Date(data$DATE)\n    data$PROTEIN_SOURCE <- \n    factor(data$PROTEIN_SOURCE, levels = protein_source_levels)\n\n    data$CONTINENT <- factor(data$CONTINENT, levels = continent_levels)\n    data$DELIVERY <- factor(data$DELIVERY, levels = delivery_levels)\n    data$STATUS <- factor(data$STATUS, levels = status_levels)\n    data$PAID <- factor(data$PAID, levels = paid_levels)\n    return(data)\n}\n\nadd_clients_metadata <- function(data) {\n    gender_levels <- c(\"FEMALE\", \"MALE\")\n    star_levels <- c(\"1\", \"2\", \"3\", \"4\", \"5\")\n    data$BIRTH_DATE <- as.Date(data$BIRTH_DATE)\n    data$CLIENT_SINCE <- as.Date(data$CLIENT_SINCE)\n    data$GENDER <- factor(data$GENDER, levels = gender_levels)\n    data$STARS <- factor(data$STARS, levels = star_levels)\n    return(data)\n}\n\nadd_client_messages_metadata <- function(data) {\n    star_levels <- c(\"1\", \"2\", \"3\", \"4\", \"5\")\n    data$DATE <- as.Date(data$DATE)\n    data$STARS <- factor(data$STARS, levels = star_levels)\n    return(data)\n}\n```", "```py\nsales_from_db <- read_table(db, \"sales\")\nstr(sales)\nstr(sales_from_db)\n```", "```py\ndbDataType(MySQL(), \"a\")\n#> [1] \"text\"\ndbDataType(MySQL(), 1.5)\n#> [1] \"double\"\n```", "```py\ndbListTables(db)\n#> [1] \"client_messages\" \"clients\" \"sales\"\n\ndbListFields(db, \"sales\")\n#>  [1] \"row_names\"      \"SALE_ID\"        \"CLIENT_ID\"      \"DATE\"\n#>  [5] \"QUANTITY\"       \"COST\"           \"PRICE\"          \"DISCOUNT\"\n#>  [9] \"PROTEIN\"        \"CARBS\"          \"FAT\"            \"PROTEIN_SOURCE\"\n#> [13] \"STORE\"          \"DELIVERY\"       \"STATUS\"         \"PAID\"\n\ndbListFields(db, \"clients\")\n#> [1] \"row_names\"    \"CLIENT_ID\"    \"BIRTH_DATE\"    \"CLIENT_SINCE\" \"GENDER\"\n#> [6] \"STARS\"\n\ndbListFields(db, \"client_messages\")\n#> [1] \"row_names\" \"SALE_ID\"   \"DATE\"      \"STARS\"     \"SUMMARY\"   \"MESSAGE\"\n```"]