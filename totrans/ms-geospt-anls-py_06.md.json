["```py\nconda install -c conda-forge gdal\n```", "```py\nfrom osgeo import gdal\n```", "```py\nimport gdal\n```", "```py\nnmtif = gdal.Open(r'C:\\Desktop\\ColorRelief\\nm_relief_color.tif')\nprint(nmtif.GetMetadata())\n```", "```py\n{'AREA_OR_POINT': 'Area', 'TIFFTAG_DATETIME': '2002:12:18 8:10:06', 'TIFFTAG_RESOLUTIONUNIT': '2 (pixels/inch)', 'TIFFTAG_SOFTWARE': 'IMAGINE TIFF Support\\nCopyright 1991 - 1999 by ERDAS, Inc. All Rights Reserved\\n@(#)$RCSfile: etif.c $ $Revision: 1.9.3.3 $ $Date: 2002/07/29 15:51:11EDT $', 'TIFFTAG_XRESOLUTION': '96', 'TIFFTAG_YRESOLUTION': '96'}\n```", "```py\nnmtif.GetProjection()\n```", "```py\n'LOCAL_CS[\" Geocoding information not available Projection Name = Unknown Units = other GeoTIFF Units = other\",UNIT[\"unknown\",1]]'\n```", "```py\n <cordsysn>\n <geogcsn>GCS_North_American_1983</geogcsn>\n <projcsn>NAD_1983_UTM_Zone_13N</projcsn>\n </cordsysn>\n```", "```py\nfrom osgeo import osr\np=osr.SpatialReference()\np.ImportFromEPSG(26913)\nnmtif.SetProjection(p.ExportToWkt())\nnmtif.GetProjection()\n```", "```py\n'PROJCS[\"NAD83 / UTM zone 13N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-105],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26913\"]]'\n```", "```py\ngeoTiffDriver=\"GTiff\"\ndriver=gdal.GetDriverByName(geoTiffDriver)\nout=driver.CreateCopy(\"copy.tif\",nmtif,strict=0)\n```", "```py\nout.GetProjection()\n```", "```py\n 'PROJCS[\"NAD83 / UTM zone 13N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY[\"EPSG\",\"6269\"]], PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]], AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\", -105],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1, AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26913\"]]'\n```", "```py\nnmtif.RasterCount \n```", "```py\nband=nmtif.GetRasterBand(1)\n```", "```py\nvalues=band.ReadAsArray()\n```", "```py\nvalues[1100,1100]\n```", "```py\none= nmtif.GetRasterBand(1).ReadAsArray()\ntwo = nmtif.GetRasterBand(2).ReadAsArray()\nthree= nmtif.GetRasterBand(3).ReadAsArray()\nprint(str(one[1100,1100])+\",\"+ str(two[1100,1100])+\",\"+str(three[1100,1100]))\n```", "```py\none=nmtif.GetRasterBand(1)\ntwo=nmtif.GetRasterBand(2)\nthree=nmtif.GetRasterBand(3)\none.ComputeBandStats()\ntwo.ComputeBandStats()\nthree.ComputeBandStats()\n```", "```py\n(225.05771967375847, 34.08382839593031)\n(215.3145137636133, 37.83657996026153)\n(195.34890652292185, 53.08308166590347)\n```", "```py\nprint(str(one.GetMinimum())+\",\"+str(one.GetMaximum()))\n```", "```py\ntwo.GetDescription()    # returns 'band_2'\ntwo.SetDescription(\"The Green Band\")\ntwo.GetDescription()    # returns \"The Green Band\"\n```", "```py\nimport numpy as np\nfrom matplotlib.pyplot import imshow\n%matplotlib inline\n\ndata_array=nmtif.ReadAsArray()\nx=np.array(data_array[0])\n# x.shape ---> 6652,6300\nw, h =6652, 6300\nimage = x.reshape(x.shape[0],x.shape[1]) \nimshow(image, cmap='gist_earth') \n```", "```py\n a_raster=np.array([\n [10,10,1,10,10,10,10],\n [1,1,1,50,10,10,50],\n [10,1,1,51,10,10,50],\n [1,1,1,1,50,10,50]])\n```", "```py\ncoord=(-106.629773,35.105389)\nw=10\nh=10\nname=\"BigI.tif\"\n```", "```py\nd=gdal.GetDriverByName(\"GTiff\")\noutput=d.Create(name,a_raster.shape[1],a_raster.shape[0],1,gdal.GDT_UInt16)\noutput.SetGeoTransform((coord[0],w,0,coord[1],0,h))\noutput.GetRasterBand(1).WriteArray(a_raster)\noutsr=osr.SpatialReference()\noutsr.ImportFromEPSG(4326)\noutput.SetProjection(outsr.ExportToWkt())\noutput.FlushCache()\n```", "```py\noutput.GetProjection()\n```", "```py\n'GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]'\n```", "```py\ndata=output.ReadAsArray()\nw, h =4, 7\nimage = data.reshape(w,h) #assuming X[0] is of shape (400,) .T\nimshow(image, cmap='Blues') #enter bad color to get list\ndata\n```", "```py\n>raster2pgsql -I -C -s 4326 C:\\Users\\Paul\\Desktop\\BigI.tif public.bigi | psql -U postgres -d pythonspatial\n```", "```py\nimport psycopg2\nconnection = psycopg2.connect(database=\"pythonspatial\",user=\"postgres\", password=\"postgres\")\ncursor = connection.cursor()\n```", "```py\ncursor.execute(\"SELECT * from bigi\") \n#Big I is the name of the intersection where I-25 and I-40 meet and split Albuquerque in quadrants.\ncursor.fetchall()\n```", "```py\n[(1,\n '010000010000000000000024400000000000002440D8B969334EA85AC0D82D02637D8D414000000000000000000000000000000000E61000000700040004000A0A010A0A0A0A010101320A0A320A0101330A0A3201010101320A32')]\n```", "```py\ncursor.execute(\"select ST_Summary(rast) from bigi;\")\ncursor.fetchall()\n```", "```py\n[('Raster of 7x4 pixels has 1 band and extent of BOX(-106.629773 35.105389,-36.629773 75.105389)\\n band 1 of pixtype 8BUI is in-db with no NODATA value',)]\n```", "```py\ncursor.execute(\"select ST_MetaData(rast) from bigi\")\ncursor.fetchall()\n```", "```py\n[('(-106.629773,35.105389,7,4,10,10,0,0,4326,1)',)]\n```", "```py\ncursor.execute(\"select ST_AsText(ST_Envelope(rast)) from bigi;\")\ncursor.fetchall()\n```", "```py\n[('POLYGON((-106.629773 75.105389,-36.629773 75.105389,-36.629773 35.105389,-106.629773 35.105389,-106.629773 75.105389))',)]\n```", "```py\ncursor.execute(\"select st_height(rast), st_Width(rast) from bigi;\") #st_width\ncursor.fetchall()\n```", "```py\n[(4, 7)]\n```", "```py\ncursor.execute(\"select ST_PixelWidth(rast), ST_PixelHeight(rast) from bigi;\")\ncursor.fetchall()\n```", "```py\n[(10.0,10.0)]\n```", "```py\ncursor.execute(\"select ST_SummaryStats(rast) from bigi;\")\ncursor.fetchall()\n```", "```py\n[('(28,431,15.3928571428571,18.5902034218377,1,51)',)]\n```", "```py\ncursor.execute(\"SELECT ST_Histogram(rast,1) from bigi;\")\ncursor.fetchall()\n```", "```py\n[('(1,9.33333333333333,10,0.357142857142857)',),\n ('(9.33333333333333,17.6666666666667,12,0.428571428571429)',),\n ('(17.6666666666667,26,0,0)',),\n ('(26,34.3333333333333,0,0)',),\n ('(34.3333333333333,42.6666666666667,0,0)',),\n ('(42.6666666666667,51,6,0.214285714285714)',)]\n```", "```py\ncursor.execute(\"select rid, ST_asText(ST_PixelAsPolygon(rast,7,2)) from bigi;\")\ncursor.fetchall()\n```", "```py\n [(1,\n 'POLYGON((-46.629773 45.105389,-36.629773 45.105389,-36.629773   \n  55.105389,-46.629773 55.105389,-46.629773 45.105389))')]\n```", "```py\ncursor.execute(\"SELECT x, y, val, ST_AsText(geom) FROM (SELECT (ST_PixelAsPoints(rast, 1)).* FROM bigi) as foo;\")\n\ncursor.fetchall()\n```", "```py\n[(1, 1, 10.0, 'POINT(-106.629773 35.105389)'),\n (2, 1, 10.0, 'POINT(-96.629773 35.105389)'),\n (3, 1, 1.0, 'POINT(-86.629773 35.105389)'),\n (4, 1, 10.0, 'POINT(-76.629773 35.105389)'),\n (5, 1, 10.0, 'POINT(-66.629773 35.105389)'),\n (6, 1, 10.0, 'POINT(-56.629773 35.105389)'),\n (7, 1, 10.0, 'POINT(-46.629773 35.105389)'),\n (1, 2, 1.0, 'POINT(-106.629773 45.105389)'),\n (2, 2, 1.0, 'POINT(-96.629773 45.105389)'),\n (3, 2, 1.0, 'POINT(-86.629773 45.105389)'),\n (4, 2, 50.0, 'POINT(-76.629773 45.105389)'),\n (5, 2, 10.0, 'POINT(-66.629773 45.105389)'),\n (6, 2, 10.0, 'POINT(-56.629773 45.105389)'),\n (7, 2, 50.0, 'POINT(-46.629773 45.105389)'),\n (1, 3, 10.0, 'POINT(-106.629773 55.105389)'),\n (2, 3, 1.0, 'POINT(-96.629773 55.105389)'),\n (3, 3, 1.0, 'POINT(-86.629773 55.105389)'),\n (4, 3, 51.0, 'POINT(-76.629773 55.105389)'),\n (5, 3, 10.0, 'POINT(-66.629773 55.105389)'),\n (6, 3, 10.0, 'POINT(-56.629773 55.105389)'),\n (7, 3, 50.0, 'POINT(-46.629773 55.105389)'),\n (1, 4, 1.0, 'POINT(-106.629773 65.105389)'),\n (2, 4, 1.0, 'POINT(-96.629773 65.105389)'),\n (3, 4, 1.0, 'POINT(-86.629773 65.105389)'),\n (4, 4, 1.0, 'POINT(-76.629773 65.105389)'),\n (5, 4, 50.0, 'POINT(-66.629773 65.105389)'),\n (6, 4, 10.0, 'POINT(-56.629773 65.105389)'),\n (7, 4, 50.0, 'POINT(-46.629773 65.105389)')]\n```", "```py\ncursor.execute(\"SELECT x, y, val, ST_AsText(geom) FROM (SELECT (ST_PixelAsCentroids(rast, 1)).* FROM bigi) as foo;\")\n\ncursor.fetchall()\n```", "```py\n[(1, 1, 10.0, 'POINT(-101.629773 40.105389)'),\n (2, 1, 10.0, 'POINT(-91.629773 40.105389)'),\n (3, 1, 1.0, 'POINT(-81.629773 40.105389)'),\n (4, 1, 10.0, 'POINT(-71.629773 40.105389)'),\n (5, 1, 10.0, 'POINT(-61.629773 40.105389)'),\n (6, 1, 10.0, 'POINT(-51.629773 40.105389)'),\n (7, 1, 10.0, 'POINT(-41.629773 40.105389)'),\n (1, 2, 1.0, 'POINT(-101.629773 50.105389)'),\n (2, 2, 1.0, 'POINT(-91.629773 50.105389)'),\n (3, 2, 1.0, 'POINT(-81.629773 50.105389)'),\n (4, 2, 50.0, 'POINT(-71.629773 50.105389)'),\n (5, 2, 10.0, 'POINT(-61.629773 50.105389)'),\n (6, 2, 10.0, 'POINT(-51.629773 50.105389)'),\n (7, 2, 50.0, 'POINT(-41.629773 50.105389)'),\n (1, 3, 10.0, 'POINT(-101.629773 60.105389)'),\n (2, 3, 1.0, 'POINT(-91.629773 60.105389)'),\n (3, 3, 1.0, 'POINT(-81.629773 60.105389)'),\n (4, 3, 51.0, 'POINT(-71.629773 60.105389)'),\n (5, 3, 10.0, 'POINT(-61.629773 60.105389)'),\n (6, 3, 10.0, 'POINT(-51.629773 60.105389)'),\n (7, 3, 50.0, 'POINT(-41.629773 60.105389)'),\n (1, 4, 1.0, 'POINT(-101.629773 70.105389)'),\n (2, 4, 1.0, 'POINT(-91.629773 70.105389)'),\n (3, 4, 1.0, 'POINT(-81.629773 70.105389)'),\n (4, 4, 1.0, 'POINT(-71.629773 70.105389)'),\n (5, 4, 50.0, 'POINT(-61.629773 70.105389)'),\n (6, 4, 10.0, 'POINT(-51.629773 70.105389)'),\n (7, 4, 50.0, 'POINT(-41.629773 70.105389)')]\n```", "```py\ncursor.execute(\"SELECT ST_AsText(ST_PixelAsCentroid(rast,4,1)) FROM bigi;\")\ncursor.fetchall()\n```", "```py\n[('POINT(-71.629773 40.105389)',)]\n```", "```py\ncursor.execute(\"select ST_Value(rast,4,3) from bigi;\")\ncursor.fetchall()\n```", "```py\n[(51.0,)]\n```", "```py\ncursor.execute(\"select ST_PixelOfValue(rast,1,50) from bigi;\")\ncursor.fetchall()\n```", "```py\n[('(4,2)',), ('(5,4)',), ('(7,2)',), ('(7,3)',), ('(7,4)',)]\n```", "```py\ncursor.execute(\"select ST_ValueCount(rast) from bigi;\")\ncursor.fetchall()\n```", "```py\n[('(10,12)',), ('(1,10)',), ('(50,5)',), ('(51,1)',)]\n```", "```py\ncursor.execute(\"select ST_ValueCount(rast,1,True,50) from bigi;\")\ncursor.fetchall()\n```", "```py\n[(5,)]\n```", "```py\ncursor.execute(\"select ST_DumpValues(rast,1) from bigi;\")\ncursor.fetchall()\n```", "```py\n[([[10.0, 10.0, 1.0, 10.0, 10.0, 10.0, 10.0],\n [1.0, 1.0, 1.0, 50.0, 10.0, 10.0, 50.0],\n [10.0, 1.0, 1.0, 51.0, 10.0, 10.0, 50.0],\n [1.0, 1.0, 1.0, 1.0, 50.0, 10.0, 50.0]],)]\n```", "```py\ncursor.execute(\"select ST_NearestValue(rast,( select ST_SetSRID( ST_MakePoint(-71.629773,60.105389),4326))) from bigi;\".format(p.wkt))\n\ncursor.fetchall()\n```", "```py\n[(51.0,)]\n```", "```py\ncursor.execute(\"select ST_Neighborhood(rast,(select ST_SetSRID( ST_MakePoint(410314,3469015),26913)),1,1) from newmexicoraster;\")\n\ncursor.fetchall()\n```", "```py\n[([[255.0, 255.0, 255.0], [255.0, 255.0, 255.0], [255.0, 255.0, 255.0]],)]\n```", "```py\ncursor.execute(\"SELECT ST_AsPNG(ST_asRaster(geom,150,250,'8BUI')) from areacommand where name like 'FOOTHILLS';\")\n\nc=cursor.fetchall()\n\nwith open('Foothills.png','wb') as f:\n    f.write(c[0][0])\nf.close()\n```"]