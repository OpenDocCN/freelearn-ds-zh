["```py\n> library(gamlss.data)\n> data(usair)\n\n```", "```py\n> model.0 <- lm(y ~ x3, data = usair)\n> summary(model.0)\n\nResiduals:\n Min      1Q  Median      3Q     Max \n-32.545 -14.456  -4.019  11.019  72.549 \n\nCoefficients:\n Estimate Std. Error t value Pr(>|t|) \n(Intercept) 17.868316   4.713844   3.791 0.000509 ***\nx3           0.020014   0.005644   3.546 0.001035 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 20.67 on 39 degrees of freedom\nMultiple R-squared:  0.2438,    Adjusted R-squared:  0.2244 \nF-statistic: 12.57 on 1 and 39 DF,  p-value: 0.001035\n\n```", "```py\n> plot(y ~ x3, data = usair, cex.lab = 1.5)\n> abline(model.0, col = \"red\", lwd = 2.5)\n> legend('bottomright', legend = 'y ~ x3', lty = 1, col = 'red',\n+   lwd = 2.5, title = 'Regression line')\n\n```", "```py\n> usair$prediction <- predict(model.0)\n> usair$residual<- resid(model.0)\n> plot(y ~ x3, data = usair, cex.lab = 1.5)\n> abline(model.0, col = 'red', lwd = 2.5)\n> segments(usair$x3, usair$y, usair$x3, usair$prediction,\n+   col = 'blue', lty = 2)\n> legend('bottomright', legend = c('y ~ x3', 'residuals'),\n+   lty = c(1, 2), col = c('red', 'blue'), lwd = 2.5,\n+   title = 'Regression line')\n\n```", "```py\n> model.1 <- update(model.0, . ~ . + x2)\n> summary(model.1)\n\nResiduals:\n Min      1Q  Median      3Q     Max \n-22.389 -12.831  -1.277   7.609  49.533 \n\nCoefficients:\n Estimate Std. Error t value Pr(>|t|) \n(Intercept) 26.32508    3.84044   6.855 3.87e-08 ***\nx3          -0.05661    0.01430  -3.959 0.000319 ***\nx2           0.08243    0.01470   5.609 1.96e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.49 on 38 degrees of freedom\nMultiple R-squared:  0.5863,    Adjusted R-squared:  0.5645 \nF-statistic: 26.93 on 2 and 38 DF,  p-value: 5.207e-08\n\n```", "```py\n> as.numeric(predict(model.1, data.frame(x2 = 150, x3 = 400)))\n[1] 16.04756\n\n```", "```py\n> -0.05661 * 40\n0 + 0.08243 * 150 + 26.32508 [1] 16.04558\n\n```", "```py\n> library(scatterplot3d)\n> plot3d <- scatterplot3d(usair$x3, usair$x2, usair$y, pch = 19,\n+   type = 'h', highlight.3d = TRUE, main = '3-D Scatterplot') \n> plot3d$plane3d(model.1, lty = 'solid', col = 'red')\n\n```", "```py\n> par(mfrow = c(1, 2))\n> plot(y ~ x3, data = usair, main = '2D projection for x3')\n> abline(model.1, col = 'red', lwd = 2.5)\n> plot(y ~ x2, data = usair, main = '2D projection for x2')\n> abline(lm(y ~ x2 + x3, data = usair), col = 'red', lwd = 2.5)\n\n```", "```py\n> library(Hmisc)\n> library(ggplot2)\n> library(gridExtra)\n> set.seed(7)\n> x  <- sort(rnorm(1000, 10, 100))[26:975]\n> y  <- x * 500 + rnorm(950, 5000, 20000)\n> df <- data.frame(x = x, y = y, cuts = factor(cut2(x, g = 5)),\n+                               resid = resid(lm(y ~ x)))\n> scatterPl <- ggplot(df, aes(x = x, y = y)) +\n+    geom_point(aes(colour = cuts, fill = cuts), shape = 1,\n+  show_guide = FALSE) + geom_smooth(method = lm, level = 0.99)\n> plot_left <- ggplot(df,  aes(x = y, fill = cuts)) +\n+    geom_density(alpha = .5) + coord_flip() + scale_y_reverse()\n> plot_right <- ggplot(data = df, aes(x = resid, fill = cuts)) +\n+    geom_density(alpha = .5) + coord_flip()\n> grid.arrange(plot_left, scatterPl, plot_right,\n+    ncol=3, nrow=1, widths=c(1, 3, 1))\n\n```", "```py\n> library(gvlma)\n> gvlma(model.1)\n\nCoefficients:\n(Intercept)           x3           x2 \n 26.32508     -0.05661      0.08243 \n\nASSESSMENT OF THE LINEAR MODEL ASSUMPTIONS\nUSING THE GLOBAL TEST ON 4 DEGREES-OF-FREEDOM:\nLevel of Significance =  0.05 \n\n Value  p-value                   Decision\nGlobal Stat        14.1392 0.006864 Assumptions NOT satisfied!\nSkewness            7.8439 0.005099 Assumptions NOT satisfied!\nKurtosis            3.9168 0.047805 Assumptions NOT satisfied!\nLink Function       0.1092 0.741080    Assumptions acceptable.\nHeteroscedasticity  2.2692 0.131964    Assumptions acceptable.\n\n```", "```py\n> model.2 <- update(model.1, data = usair[-31, ])\n> gvlma(model.2)\n\nCoefficients:\n(Intercept)           x3           x2 \n 22.45495     -0.04185      0.06847 \n\nASSESSMENT OF THE LINEAR MODEL ASSUMPTIONS\nUSING THE GLOBAL TEST ON 4 DEGREES-OF-FREEDOM:\nLevel of Significance =  0.05 \n\n Value p-value                Decision\nGlobal Stat        3.7099  0.4467 Assumptions acceptable.\nSkewness           2.3050  0.1290 Assumptions acceptable.\nKurtosis           0.0274  0.8685 Assumptions acceptable.\nLink Function      0.2561  0.6128 Assumptions acceptable.\nHeteroscedasticity 1.1214  0.2896 Assumptions acceptable.\n\n```", "```py\n> model.0 <- update(model.0, data = usair[-31, ])\n> summary(model.0)[c('r.squared', 'adj.r.squared')]\n$r.squared\n[1] 0.3728245\n$adj.r.squared\n[1] 0.3563199\n\n```", "```py\n> summary(model.2)[c('r.squared', 'adj.r.squared')]\n$r.squared\n[1] 0.6433317\n$adj.r.squared\n[1] 0.6240523\n\n```", "```py\n> summary(model.3 <- update(model.2, .~. -x2 + x1))$coefficients \n Estimate   Std. Error   t value     Pr(>|t|)\n(Intercept) 77.429836 19.463954376  3.978114 3.109597e-04\nx3           0.021333  0.004221122  5.053869 1.194154e-05\nx1          -1.112417  0.338589453 -3.285444 2.233434e-03\n\n> summary(model.4 <- update(model.2, .~. -x3 + x1))$coefficients \n Estimate   Std. Error   t value     Pr(>|t|)\n(Intercept) 64.52477966 17.616612780  3.662723 7.761281e-04\nx2           0.02537169  0.003880055  6.539004 1.174780e-07\nx1          -0.85678176  0.304807053 -2.810899 7.853266e-03\n\n> AIC(model.3, model.4)\n df      AIC\nmodel.3  4 336.6405\nmodel.4  4 326.9136\n\n```", "```py\n> plot(y ~ x5, data = usair, cex.lab = 1.5)\n> abline(lm(y ~ x5, data = usair), col = 'red', lwd = 2.5, lty = 1)\n> abline(lm(y ~ x5, data = usair[usair$x5<=45,]),\n+   col = 'red', lwd = 2.5, lty = 3)\n> abline(lm(y ~ x5, data = usair[usair$x5 >=30, ]),\n+   col = 'red', lwd = 2.5, lty = 2)\n> abline(v = c(30, 45), col = 'blue', lwd = 2.5)\n> legend('topleft', lty = c(1, 3, 2, 1), lwd = rep(2.5, 4),\n+   legend = c('y ~ x5', 'y ~ x5 | x5<=45','y ~ x5 | x5>=30',\n+     'Critical zone'), col = c('red', 'red', 'red', 'blue'))\n\n```", "```py\n> library(partykit)\n> library(rpart)\n> plot(as.party(rpart(y ~ x5, data = usair)))\n\n```", "```py\n> usair$x5_3 <- cut2(usair$x5, c(30, 45))\n> plot(y ~ as.numeric(x5_3), data = usair, cex.lab = 1.5,\n+   xlab = 'Categorized annual rainfall(x5)', xaxt = 'n')\n> axis(1, at = 1:3, labels = levels(usair$x5_3))\n> lines(tapply(usair$y, usair$x5_3, mean), col='red', lwd=2.5, lty=1)\n> legend('topright', legend = 'Linear prediction', col = 'red')\n\n```", "```py\n> summary(glmmodel.1 <- glm(y ~ x2 + x3 + x5_3, data = usair[-31, ]))\nDeviance Residuals: \n Min       1Q   Median       3Q      Max \n-26.926   -4.780    1.543    5.481   31.280 \n\nCoefficients:\n Estimate Std. Error t value Pr(>|t|) \n(Intercept)       14.07025    5.01682   2.805  0.00817 ** \nx2                 0.05923    0.01210   4.897 2.19e-05 ***\nx3                -0.03459    0.01172  -2.952  0.00560 ** \nx5_3[30.00,45.00) 13.08279    5.10367   2.563  0.01482 * \nx5_3[45.00,59.80]  0.09406    6.17024   0.015  0.98792 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 139.6349)\n\n Null deviance: 17845.9  on 39  degrees of freedom\nResidual deviance:  4887.2  on 35  degrees of freedom\nAIC: 317.74\n\nNumber of Fisher Scoring iterations: 2\n\n```"]