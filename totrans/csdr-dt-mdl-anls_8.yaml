- en: Chapter 8. Final Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we went through a quick journey of developing a technical
    analysis application in Python using Cassandra. We started from the theoretical
    basic knowledge and proceeded step-by-step to design and develop a running application.
    Even though you are a novice in computer programming, you should have no trouble
    reading the chapters in a sequence.
  prefs: []
  type: TYPE_NORMAL
- en: We now come to the final chapter of this book. We will take a look at the supplementary
    information pertinent to application design and development. Then we will quickly
    review the basics of each chapter in order to wrap up this book.
  prefs: []
  type: TYPE_NORMAL
- en: Supplementary information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here, we will take a glance at the supplementary information on client drivers,
    security features, backup and restore.
  prefs: []
  type: TYPE_NORMAL
- en: Client drivers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A driver eases the burden of an application developer to deal with the repetitive,
    low-level nitty-gritty of communicating with the underlying database. The application
    developer can then focus on her/his efforts in writing business logic.
  prefs: []
  type: TYPE_NORMAL
- en: As Cassandra is growing popular, drivers are developed for the contemporary
    programming languages. This greatly simplifies the workload of an application
    developer, who was used to the clumsy Thrift API.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Drivers for different languages**'
  prefs: []
  type: TYPE_NORMAL
- en: A list of the commonly used Cassandra drivers and their corresponding supported
    programming languages can be seen at PlanetCassandra [http://planetcassandra.org/client-drivers-tools/](http://planetcassandra.org/client-drivers-tools/).
  prefs: []
  type: TYPE_NORMAL
- en: A great number of Cassandra drivers available nowadays is still growing and
    many of them are open source. If you really want production support, then DataStax
    is worth your consideration.
  prefs: []
  type: TYPE_NORMAL
- en: 'A few comments on the selection of a driver are provided as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: First, the programming language to be supported is the single most important
    constraint. The communication protocol then comes into play. Thrift API is long-lived,
    yet rather difficult to use. Unless you need to support an application working
    with an older version of a Cassandra cluster, a driver providing CQL support is
    highly recommended and it will align the data modeling techniques that are introduced
    in this book. The implementation of the data model will be much easier as well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another selection factor is the additional features that the driver offers,
    for example, node failure detection, node failover, automatic load balancing,
    and performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'PlanetCassandra also provides crispy tutorials on how to get started with the
    client drivers, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Client drivers](img/8884OS_08_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Security is a broad and complex topic. From the perspective of application development,
    authentication, authorization and inter-node encryption are the most fundamental
    security measures to safeguard a production application.
  prefs: []
  type: TYPE_NORMAL
- en: Authentication
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Cassandra, authentication is based on an internally controlled login username
    and password. The login username and password are stored in the `system_auth.credentials`
    table. The internal authentication is disabled, by default. We can configure Cassandra
    in order to enable it by modifying `cassandra.yaml`. We also need to increase
    the replication factor of the `system_auth` keyspace, as the `system_auth` keyspace
    is no different and might fail as well!
  prefs: []
  type: TYPE_NORMAL
- en: Once the internal authentication is enabled, we can use the superuser account
    and CQL statements such as `CREATE USER`, `ALTER USER`, `DROP USER`, and `LIST
    USERS` to create and manage user authentication.
  prefs: []
  type: TYPE_NORMAL
- en: Authorization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Similarly, Cassandra provides internal authorization to work hand-in-hand with
    internal authentication. It borrows the practices from the traditional database
    `GRANT`/`REVOKE` paradigm in order to manage permissions on the schema objects.
  prefs: []
  type: TYPE_NORMAL
- en: The tables in the `system` keyspace are granted read permission, by default,
    to every authenticated user. For user-created keyspace and the objects inside,
    we can also use CQL statements, namely, `GRANT`, `REVOKE`, and `LIST PERMISSIONS`
    to manage the object permission.
  prefs: []
  type: TYPE_NORMAL
- en: Inter-node encryption
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Cassandra provides inter-node encryption that protects data transferred among
    nodes, including gossip communication, in a cluster using **Secure Sockets Layer**
    (**SSL**). All nodes must have all the relevant SSL certificates on all nodes.
    The encryption can be applied to the traffic between all nodes, data centers,
    or racks.
  prefs: []
  type: TYPE_NORMAL
- en: 'We must set the `server_encryption_options` in the `cassandra.yaml` file on
    each node in order to enable the inter-node encryption option and the configuration
    settings of the `keystore` and `truststore` files, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Inter-node encryption](img/8884OS_08_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Backup and restore
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Backup is an interesting topic in a large distributed system such as Cassandra.
    It is very likely that the data volume will be gigantic and the number of nodes
    will be large. Making a consistent backup of the whole cluster can be very tricky.
  prefs: []
  type: TYPE_NORMAL
- en: In my opinion, backup is optional in Cassandra, in contrast to the must-have
    regular backups of a traditional database. The need of backing up a Cassandra
    cluster really depends on the chosen deployment strategies. For example, if the
    nodes of a cluster are distributed in geographically dispersed areas like New
    York, Tokyo, and London, and the replication factor is set to three or above,
    it might be beneficial to explicitly have an external backup of the data in the
    cluster. This example cluster has built-in resilience and each piece of data has
    a number of replicas serving as a backup of itself. The chance of the simultaneous
    failure of all the three geographical areas is rather low.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, you might still make regular backups of the cluster if you need to
    comply with policies, regulations, and so on. Maybe you want to have the so-called
    point-in-time recovery available for the system. In these cases, a managed backup
    is a must. However, this will definitely complicate the whole system architecture.
  prefs: []
  type: TYPE_NORMAL
- en: All in all, this is a design decision for your implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Useful websites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here are some of the useful websites for us to get up-to-date Cassandra information.
  prefs: []
  type: TYPE_NORMAL
- en: Apache Cassandra official site
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The official Cassandra website, [http://cassandra.apache.org/](http://cassandra.apache.org/),
    is always the first place to go for any information. The latest released version
    information can be found on its home page. You might get the source code there
    if you want to dive deep into the heart of Cassandra or if you want to install
    a Cassandra instance back to square one by building from the source code.
  prefs: []
  type: TYPE_NORMAL
- en: Just akin to other projects under the Apache Software Foundation, you are welcome
    to contribute to the community. You can also find out how to join this enthusiastic
    team of developers in order to improve such a great NoSQL database.
  prefs: []
  type: TYPE_NORMAL
- en: You can also find a link to another website called PlanetCassandra, which is
    worth a separate introduction.
  prefs: []
  type: TYPE_NORMAL
- en: PlanetCassandra
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'PlanetCassandra, [http://planetcassandra.org/](http://planetcassandra.org/),
    is a community service website supported by DataStax, a commercial company, that
    provides production-ready Apache Cassandra products and services:'
  prefs: []
  type: TYPE_NORMAL
- en: '![PlanetCassandra](img/8884OS_08_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This website deals more with the collaboration aspects of the Cassandra community.
    We can look for meetups, involvements, webinars, conferences and events, and even
    educational training courses there. The most valuable section of the website is
    the *Apache Cassandra Use Cases* that is a repository of the companies who run
    their applications on Apache Cassandra and enjoy the real benefits from it.
  prefs: []
  type: TYPE_NORMAL
- en: The repository is categorized by several dimensions, namely, **Product Catalog/Playlist**,
    **Recommendation/Personalization**, **Fraud Detection**, **Messaging**, **IOT/Sensor
    Data**, and **Undefined**. Each entry of the repository has a name and a brief
    introduction of the company of the use case, and how it uses Cassandra to drive
    the business. You certainly can learn and generate some ideas by learning from
    the use cases.
  prefs: []
  type: TYPE_NORMAL
- en: 'A must-read is the Netflix case study. The use case is a personalization system
    that understands each person''s unique habits and preferences and bring to light
    products and items that a user might be unaware of and not looking for. The challenges
    were to acquire affordable capacity in order to store and process immense amounts
    of data, to address a single point of failure with Oracle''s legacy relational
    architecture, and to achieve business agility for international expansion. Netflix
    used a commercial version of Cassandra that delivers 100 percent uptime and cost-effective
    scale across multiple data centers. The results are stunning, which are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: First, the throughput of the system is more than 10 million transactions per
    second
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Second, the creation and management of the new data clusters across various
    regions is nearly effortless
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lastly, customer viewing and log data can be captured in the finest detail in
    Cassandra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is highly recommended that you read this, especially for those of you who
    are considering to migrate from a relational database to Cassandra.
  prefs: []
  type: TYPE_NORMAL
- en: DataStax
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Cassandra version used in this book is an open source one that can be obtained
    freely on the Internet. It is good enough for most systems. However, many companies
    still look for enterprise grade products built on Cassandra and the related support,
    training, and consultancy services. DataStax, [http://www.datastax.com/](http://www.datastax.com/),
    is one of them.
  prefs: []
  type: TYPE_NORMAL
- en: 'DataStax serves to compile the most comprehensive Cassandra documentation,
    as shown in the following screenshot. The documentation is freely available on
    its website. It also develops and provides support to the client drivers for Java,
    C#, Python, and so on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![DataStax](img/8884OS_08_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: DataStax offers an enterprise version of Apache Cassandra, known as DataStax
    Enterprise, with enhanced features such as advanced security and management tools
    that simplify the day-to-day system management of a Cassandra cluster.
  prefs: []
  type: TYPE_NORMAL
- en: DataStax Enterprise includes a powerful enterprise system management tool, OpsCenter,
    to allow administrators to easily grasp the status and performance of the system
    through a dashboard. It monitors the cluster and triggers alerts or notifications
    of changes in the cluster. Backup and restore operations are greatly streamlined
    as well.
  prefs: []
  type: TYPE_NORMAL
- en: DataStax Enterprise also extends Cassandra to support Apache Hadoop and Solr,
    as an integrated enterprise platform.
  prefs: []
  type: TYPE_NORMAL
- en: Hadoop integration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Cassandra integrated with Hadoop can be a powerful platform for Big Data Analytics.
    Cassandra has been able to directly integrate with Hadoop since its Version 0.6\.
    It began with MapReduce support. Since then, the support has matured significantly
    and now includes native support for Pig and Hive. Cassandra's Hadoop support implements
    the same interface as **Hadoop Distributed File System** (**HDFS**) in order to
    achieve input data locality.
  prefs: []
  type: TYPE_NORMAL
- en: Cassandra provides the `ColumnFamilyInputFormat` and `ColumnFamilyOutputFormat`
    classes for direct integration with Hadoop from MapReduce programs. It involves
    data being read directly from Cassandra column families in MapReduce mappers and
    does include data movement.
  prefs: []
  type: TYPE_NORMAL
- en: Setup and configuration involves overlaying a Hadoop cluster on Cassandra nodes,
    configuring a separate server for the Hadoop JobTracker, and installing a Hadoop
    TaskTracker and DataNode on each Cassandra node.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Setup and configuration procedures**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The detailed procedures of integrating Cassandra with Hadoop can be found at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.datastax.com/documentation/cassandra/2.1/cassandra/configuration/configHadoop.html](http://www.datastax.com/documentation/cassandra/2.1/cassandra/configuration/configHadoop.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://wiki.apache.org/cassandra/HadoopSupport](http://wiki.apache.org/cassandra/HadoopSupport)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The nodes in the Cassandra data center can draw from data in the HDFS DataNode
    as well as from Cassandra. The JobTracker receives the MapReduce input from the
    client application. It then sends a MapReduce job request to the TaskTrackers
    and optional clients, for example, MapReduce and Pig. The data is written to Cassandra
    and the results are sent back to the client.
  prefs: []
  type: TYPE_NORMAL
- en: DataStax has also created a simple way to use Hadoop with Cassandra and built
    it into the enterprise version.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We started from [Chapter 1](ch01.html "Chapter 1. Bird's Eye View of Cassandra"),
    *Bird's Eye View of Cassandra*, to review the basics of Cassandra. We then touched
    on the important facets of data modeling in Cassandra, such as Modeling by query
    technique, the wealthy set of data types, and the indexes. These techniques and
    knowledge are put together into an example data analysis application in the stock
    trading domain called Stock Screener Application. We walked through and explained
    every single detail of the application, although at a fast pace. We also illustrated
    how to enhance the first-cut version with changes on the data model and coding
    to demonstrate the great flexibility provided by Cassandra. We then turned to
    plan and migrate the enhanced system to a production-ready cluster with considerations
    on the replication strategy, snitch, replication factor, the basic monitoring
    and performance tuning tools.
  prefs: []
  type: TYPE_NORMAL
- en: I really enjoyed writing this book for you and I sincerely hope that it is as
    useful for you when it comes to rapidly using Cassandra in real-world projects,
    as it has been fun for me. Your comments are always welcomed and you can contact
    me through Packt Publishing.
  prefs: []
  type: TYPE_NORMAL
- en: 'As Sir Winston Churchill said:'
  prefs: []
  type: TYPE_NORMAL
- en: '"Now this is not the end. It is not even the beginning of the end. But it is,
    perhaps, the end of the beginning."'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
