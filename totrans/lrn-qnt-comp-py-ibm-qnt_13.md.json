["```py\n    # Import the necessary modules and classes\n    from qiskit import QuantumCircuit\n    from qiskit.visualization import *\n    from qiskit_algorithms import Grover, AmplificationProblem\n    from qiskit.circuit.library.phase_oracle import PhaseOracle\n    # State the SAT problem into a logical expression\n    # A = Ivana, B = Karla, C = Leo, D = Lex\n    expression = '((A ^ B) & (C & D) & ~(A & C))' \n    ```", "```py\n    # Create a PhaseOracle based on the logical expression\n    oracle = PhaseOracle(expression) \n    ```", "```py\n    # Construct the amplification problem from the oracle\n    problem = AmplificationProblem(oracle,\n                     is_good_state=oracle.evaluate_bitstring)\n    problem.grover_operator.oracle.draw() \n    ```", "```py\n    # Using the Sampler to run circuit\n    from qiskit.primitives import Sampler\n    # Set the Options\n    sampler = Sampler()grover = Grover(sampler=sampler)\n    result = grover.amplify(problem)\n    plot_distribution(result.circuit_results[0]) \n    ```"]