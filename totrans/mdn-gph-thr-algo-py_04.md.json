["```py\n#import packages\nimport igraph as ig\nfrom igraph import Graph\nimport numpy as np\nimport pandas as pd\nimport os\n```", "```py\n#import Burkina Faso market millet prices from the csv file\nFile=\"C:/users/njfar/OneDrive/Desktop/BF_Millet.csv\"\npwd=os.getcwd()\nos.chdir(os.path.dirname(File))\nmydata = pd.read_csv(os.path.basename(File),encoding='latin1')\n#import weight matrix of Burkina Faso markets\nFile=\"C:/users/njfar/OneDrive/Desktop/weights_bk.csv\"\npwd=os.getcwd()\nos.chdir(os.path.dirname(File))\nweights = pd.read_csv(os.path.basename(File),encoding='latin1')\n```", "```py\n#define the metric between markets and construct the local Moran #statistic\n#here, correlation coefficient\ndata=mydata.iloc[:,1:46]\nweights_total=weights.iloc[:,1:46]\ncor=np.corrcoef(data.transpose())\ncor[cor>0]=1\ncor_weighted=np.multiply(cor,weights_total)\n```", "```py\n# create market graph and get rid of loops created from the correlation\nbf_market_w=Graph.Adjacency(cor_weighted,mode=\"undirected\")\nedge_list=bf_market_w.get_edgelist()\nself_loop=[]\nfor i in range(0,46):\n    self=(i,i)\n    self_loop.append(self)\nto_remove=[]\nfor i in edge_list:\n    for j in self_loop:\n        if i==j:\n            to_remove.append(i)\nbf_market_w.delete_edges(to_remove)\n```", "```py\n#create plot\nig.plot(bf_market_w)\n```", "```py\n#define the metric between markets and construct \n#the local Moran statistic here, correlation coefficient\ndata=mydata.iloc[:,1:46]\nweights_total=weights.iloc[:,1:46]\ncor=np.corrcoef(data.transpose())\ncor[cor>=0.9]=1\ncor[cor<0.9]=0\ncor_weighted=np.multiply(cor,weights_total)\n# create market graph and get rid of loops created from the #correlation\nbf_market_w=Graph.Adjacency(cor_weighted,mode=\"undirected\")\nedge_list=bf_market_w.get_edgelist()\nself_loop=[]\nfor i in range(0,46):\n    self=(i,i)\n    self_loop.append(self)\nto_remove=[]\nfor i in edge_list:\n    for j in self_loop:\n        if i==j:\n            to_remove.append(i)\nbf_market_w.delete_edges(to_remove)\n#create plot\nig.plot(bf_market_w)\n```", "```py\n#import needed packages\nimport pandas as pd\nimport networkx as nx\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport math\n```", "```py\n#reading the dataset\nfichier = pd.read_csv(\"C:/users/njfar/OneDrive/Desktop/AIMS_data.csv\")\ndata = pd.DataFrame(fichier)\n```", "```py\n#intializing the social network\naimsNetwork = nx.Graph()\n#populating the network with nodes and edges\nfor i in range(len(data[\"Name\"])) :\n    aimsNetwork.add_node(data[\"Name\"][i],\n        Age = data[\"Age\"][i], country=data[\"Country\"][i],\n        Field=data[\"Field\"][i],\n        background=data[\"Background\"][i])\n    for j in range(len(data[\"Name\"])) :\n        aimsNetwork.add_edge(data[\"Name\"][j],data[\"Friend 1\"][j])\n        aimsNetwork.add_edge(data[\"Name\"][j],data[\"Friend 2\"][j])\n        aimsNetwork.add_edge(data[\"Name\"][j],data[\"Friend 3\"][j])\n        aimsNetwork.add_edge(data[\"Name\"][j],data[\"Friend 4\"][j])\n        aimsNetwork.add_edge(data[\"Name\"][j],data[\"Friend 5\"][j])\n```", "```py\n#plot AIMS student social network\nDegree=aimsNetwork.degree()\nvar = [500*k[1] for k in list(Degree)]\nplt.figure(figsize=(20,20))\nnx.draw_spring(aimsNetwork, font_size=10, node_size = var,\n    with_labels=True, node_color=\"red\")\nplt.show()\n```"]