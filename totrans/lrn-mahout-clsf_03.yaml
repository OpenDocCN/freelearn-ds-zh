- en: Chapter 3. Learning Logistic Regression / SGD Using Mahout
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。使用Mahout学习逻辑回归/SGD
- en: 'Instead of jumping directly into logistic regression, let''s try to understand
    a few of its concepts. In this chapter, we will explore the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在直接跳入逻辑回归之前，让我们先尝试理解其几个概念。在本章中，我们将探讨以下主题：
- en: Introducing regression
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍回归
- en: Understanding linear regression
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解线性回归
- en: Cost function
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本函数
- en: Gradient descent
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 梯度下降
- en: Logistic regression
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑回归
- en: Understanding SGD
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解SGD
- en: Using Mahout for logistic regression
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Mahout进行逻辑回归
- en: Introducing regression
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍回归
- en: 'Regression analysis is used for prediction and forecasting. It is used to find
    out the relationship between explanatory variables and target variables. Essentially,
    it is a statistical model that is used to find out the relationship among variables
    present in the datasets. An example that you can refer to for a better understanding
    of this term is this: determine the earnings of workers in a particular industry.
    Here, we will try to find out the factors that affect a worker''s salary. These
    factors can be age, education, years of experience, particular skill set, location,
    and so on. We will try to make a model that will take all these variables into
    consideration and try to predict the salary. In regression analysis, we characterize
    the variation of the target variable around the regression function, which can
    be described by a probability distribution that is also of interest. There are
    a number of regression analysis techniques that are available. For example, linear
    regression, ordinary least squares regression, logistic regression, and so on.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 回归分析用于预测和预测。它用于找出解释变量和目标变量之间的关系。本质上，它是一个用于找出数据集中变量之间关系的统计模型。为了更好地理解这个术语，你可以参考以下例子：确定特定行业中工人的收入。在这里，我们将试图找出影响工人工资的因素。这些因素可以是年龄、教育、工作经验年数、特定的技能组合、位置等等。我们将尝试构建一个模型，考虑所有这些变量，并尝试预测工资。在回归分析中，我们描述目标变量围绕回归函数的变化，这可以通过一个也是感兴趣的概率分布来描述。有许多回归分析技术可供选择。例如，线性回归、普通最小二乘回归、逻辑回归等等。
- en: Understanding linear regression
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解线性回归
- en: In linear regression, we create a model to predict the value of a target variable
    with the help of an explanatory variable. To understand this better, let's look
    at an example.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在线性回归中，我们创建一个模型，通过解释变量来预测目标变量的值。为了更好地理解这一点，让我们来看一个例子。
- en: 'A company X that deals in selling coffee has noticed that in the month of monsoon,
    their sales increased to quite an extent. So they have come up with a formula
    to find the relation between rain and their per cup coffee sale, which is shown
    as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一家名为X的公司从事咖啡销售，注意到在雨季期间，他们的销售额大幅增加。因此，他们提出了一种公式来找出雨量和每杯咖啡销售额之间的关系，如下所示：
- en: '*C = 1.5R+800*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*C = 1.5R+800*'
- en: So, for 2 mm of rain, there is a demand of 803 cups of coffee. Now if you go
    into minute details, you will realize that we have the data for rainfall and per
    cup coffee sale, and we are trying to build a model that can predict the demand
    for coffee based on the rainfall. We have data in the form of *(R1, C1), (R2,
    C2)…. (Ri, Ci)*. Here, we will build the model in a manner that keeps the error
    in the actual and predicted values at a minimum.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对于2毫米的降雨量，咖啡的需求量为803杯。现在，如果你深入到细节中，你会意识到我们有了降雨量和每杯咖啡销售额的数据，我们正在尝试构建一个模型，可以根据降雨量预测咖啡的需求。我们的数据形式为
    *(R1, C1), (R2, C2)…. (Ri, Ci)*。在这里，我们将以使实际值和预测值之间的误差最小化的方式构建模型。
- en: Cost function
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 成本函数
- en: In the equation *C = 1.5R+800*, the two values 1.5 and 800 are parameters and
    these values affect the end result. We can write this equation as *C= p0+p1R*.
    As we discussed earlier, our goal is to reduce the difference between the actual
    value and the predicted value, and this is dependent on the values of *p0* and
    *p1*. Let's assume that the predicted value is *Cp* and the actual value is *C*
    so that the difference will be *(Cp-C)*. This can be written as *(p0+p1R-C)*.To
    minimize this error, we define the error function, which is also called the **cost
    function**.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在方程 *C = 1.5R+800* 中，两个值1.5和800是参数，这些值会影响最终结果。我们可以将此方程写成 *C= p0+p1R*。正如我们之前讨论的，我们的目标是减少实际值和预测值之间的差异，这取决于
    *p0* 和 *p1* 的值。让我们假设预测值为 *Cp*，实际值为 *C*，这样差异将是 *(Cp-C)*。为了最小化这个误差，我们定义了一个误差函数，这也就是所谓的**成本函数**。
- en: 'The cost function can be defined with the following formula:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 成本函数可以用以下公式定义：
- en: '![Cost function](img/4959OS_03_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![成本函数](img/4959OS_03_01.jpg)'
- en: Here, **i** is the ith sample and **N** is the number of training examples.
    We calculate costs for different sets of **p0** and **p1** and finally select
    the **p0** and **p1** that gives the least cost (*C*). This is the model that
    will be used to make predictions for new input.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，**i**是第i个样本，**N**是训练样本的数量。我们计算不同组*p0*和*p1*的成本，并最终选择成本最低的*p0*和*p1*（*C*）。这是将用于对新输入进行预测的模型。
- en: Gradient descent
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 梯度下降
- en: 'Gradient descent starts with an initial set of parameter values, *p0* and *p1*,
    and iteratively moves towards a set of parameter values that minimizes the cost
    function. We can visualize this error function graphically, where width and length
    can be considered as the parameters *p0* and *p1* and height as the cost function.
    Our goal is to find the values for *p0* and *p1* in a way that our cost function
    will be minimal. We start the algorithm with some values of *p0* and *p1* and
    iteratively work towards the minimum value. A good way to ensure that the gradient
    descent is working correctly is to make sure that the cost function decreases
    for each iteration. In this case, the cost function surface is convex and we will
    try to find out the minimum value. This can be seen in the following figure:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 梯度下降从一组初始参数值开始，*p0*和*p1*，并通过迭代移动到一组使成本函数最小化的参数值。我们可以通过图形化地可视化这个误差函数，其中宽度和长度可以被认为是参数*p0*和*p1*，高度是成本函数。我们的目标是找到*p0*和*p1*的值，使得我们的成本函数最小。我们以*p0*和*p1*的一些值开始算法，并通过迭代工作以达到最小值。确保梯度下降正确工作的一种好方法是确保成本函数在每次迭代中都会降低。在这种情况下，成本函数表面是凸的，我们将尝试找到最小值。这可以在以下图中看到：
- en: '![Gradient descent](img/4959OS_03_02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![梯度下降](img/4959OS_03_02.jpg)'
- en: Logistic regression
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 逻辑回归
- en: Logistic regression is used to ascertain the probability of an event. Generally,
    logistic regression refers to problems where the outcome is binary, for example,
    in building a model that is based on a customer's income, travel uses, gender,
    and other features to predict whether he or she will buy a particular car or not.
    So, the answer will be a simple yes or no. When the outcome is composed of more
    than one category, this is called **multinomial logistic regression**.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑回归用于确定事件发生的概率。通常，逻辑回归指的是结果为二元的概率问题，例如，在构建基于客户收入、旅行用途、性别和其他特征的模型来预测他或她是否会购买特定汽车的问题。因此，答案将是简单的“是”或“否”。当结果由多个类别组成时，这被称为**多项式逻辑回归**。
- en: 'Logistic regression is based on the **sigmoid function**. Predictor variables
    are combined with linear weight and then passed to this function, which generates
    the output in the range of 0–1\. An output close to 1 indicates that an item belongs
    to a certain class. Let''s first understand the sigmoid or logistic function.
    It can be defined by the following formula:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑回归基于**sigmoid函数**。预测变量与线性权重结合后传递到该函数，该函数生成0到1范围内的输出。输出接近1表示某个项目属于某个特定类别。让我们首先了解sigmoid或逻辑函数。它可以由以下公式定义：
- en: '*F (z) = 1/1+e (-z)*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*F (z) = 1/(1+e^(-z))*'
- en: 'With a single explanatory variable, *z* will be defined as *z = β0 + β1*x*.
    This equation is explained as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个解释变量*z*，它将被定义为*z = β0 + β1*x*。这个方程可以这样解释：
- en: '**z**: This is called the dependent variable. This is the variable that we
    would like to predict. During the creation of the model, we have this variable
    with us in the training set, and we build the model to predict this variable.
    The known values of z are called observed values.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**z**: 这被称为因变量。这是我们想要预测的变量。在创建模型的过程中，我们在训练集中拥有这个变量，并构建模型来预测这个变量。z的已知值被称为观测值。'
- en: '**x**: This is the explanatory or independent variable. These variables are
    used to predict the dependent variable z. For example, to predict the sales of
    a newly launched product at a particular location, we might include explanatory
    variables such as the price of the product, the average income of the people of
    that location, and so on.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**x**: 这是指解释变量或独立变量。这些变量用于预测因变量z。例如，为了预测在特定地点新推出的产品的销售额，我们可能包括解释变量，如产品的价格、该地点人们的平均收入等。'
- en: '**β0**: This is called the regression intercept. If all explanatory variables
    are zero, then this parameter is equal to the dependent variable z.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**β1**: These are values for each explanatory variable.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The graph of the logistic function is as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '![Logistic regression](img/4959OS_03_03.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: 'With a little bit of mathematics, we can change this equation as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '*ln(F(x)/(1-F(x)) = β0 + β1*x*'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'In the case of linear regression, the cost function graph was convex, but here,
    it is not going to be convex. Finding the minimum values for parameters in a way
    that our predicted output is close to the actual one will be difficult. In a cost
    function, while calculating for logistic regression, we will replace our *Cp*
    value of linear regression with the function *F(z)*. To make convex logistic regression
    cost functions, we will replace *(p0+p1Ri-Ci)2* with one of the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '*log (1/1+e (-(β0 + β1*x)))* if the actual occurrence of an event is 1, this
    function will represent the cost.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*log (1-(1/1+e (-(β0 + β1*x))))* if the actual occurrence of an event is 0,
    this function will represent the cost.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will have to remember that in logistic regression, we calculate the class
    probability. So, if the probability of an event occurring (customer buying a car,
    being defrauded, and so on ) is *p*, the probability of non-occurrence is *1-p*.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Stochastic Gradient Descent
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Gradient descent minimizes the cost function. For very large datasets, gradient
    descent is a very expensive procedure. Stochastic Gradient Descent (SGD) is a
    modification of the gradient descent algorithm to handle large datasets. Gradient
    descent computes the gradient using the whole dataset, while SGD computes the
    gradient using a single sample. So, gradient descent loads the full dataset and
    tries to find out the local minimum on the graph and then repeat the full process
    again, while SGD adjusts the cost function for every sample, one by one. A major
    advantage that SGD has over gradient descent is that its speed of computation
    is a whole lot faster. Large datasets in RAM generally cannot be held as the storage
    is limited. In SGD, the burden on the RAM is reduced, wherein each sample or batch
    of samples are loaded and worked with, the results for which are stored, and so
    on.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Using Mahout for logistic regression
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mahout has implementations for logistic regression using SGD. It is very easy
    to understand and use. So let's get started.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '**Dataset**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: We will use the **Wisconsin Diagnostic Breast Cancer** (**WDBC**) dataset. This
    is a dataset for breast cancer tumors and data is available from 1995 onwards.
    It has 569 instances of breast tumor cases and has 30 features to predict the
    diagnosis, which is categorized as either benign or malignant.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: More details on the preceding dataset is available at [http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.names](http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.names).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '**Preparing the training and test data**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: You can download the `wdbc.data` dataset from [http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data](http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, save it as a CSV file and include the following header line:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '`ID_Number,Diagnosis,Radius,Texture,Perimeter,Area,Smoothness,Compactness,Concavity,ConcavePoints,Symmetry,Fractal_Dimension,RadiusStdError,TextureStdError,PerimeterStdError,AreaStdError,SmoothnessStdError,CompactnessStdError,ConcavityStdError,ConcavePointStdError,Symmetrystderror,FractalDimensionStderror,WorstRadius,worsttexture,worstperimeter,worstarea,worstsmoothness,worstcompactness,worstconcavity,worstconcavepoints,worstsymmentry,worstfractaldimensions`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we will have to perform the following steps to prepare this data to be
    used by the Mahout logistic regression algorithm:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'We will make the target class numeric. In this case, the second field diagnosis
    is the target variable. We will change malignant to 0 and benign to 1\. Use the
    following code snippet to introduce the changes. We can use this strategy for
    small datasets, but for huge datasets, we have different strategies, which we
    will cover in [Chapter 4](ch04.html "Chapter 4. Learning the Naïve Bayes Classification
    Using Mahout"), *Learning the Naïve Bayes Classification Using Mahout*:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'We will have to split the dataset into training and test datasets and then
    shuffle the datasets so that we can mix them up, which can be done using the following
    code snippet:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Training the model**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: 'We will use the training dataset and trainlogistic algorithm to prepare the
    model. Use the following command to create the model:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This command will give you the following output:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![Using Mahout for logistic regression](img/4959OS_03_04.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: 'Let''s understand the parameters used in this command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '`trainlogistic`: This is the algorithm that Mahout provides to build the model
    using your input parameters.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`input`: This is the location of the input file.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`output`: This is the location of the model file.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`target`: This is the name of the target variable that we want to predict from
    the dataset.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`categories`: This refers to the number of predicted classes.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`predictors`: This features in the dataset used to predict the target variable.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`types`: This is a list of the types of predictor variables. (Here all are
    numeric but it could be word or text as well.)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`features`: This is the size of the feature vector used to build the model.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`passes`: This specifies the number of times the input data should be re-examined
    during training. Small input files may need to be examined dozens of times. Very
    large input files probably don''t even need to be completely examined.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`passes`: 这指定了在训练过程中输入数据应该被重新检查的次数。小输入文件可能需要检查数十次。非常大的输入文件甚至可能不需要完全检查。'
- en: '`rate`: This sets the initial learning rate. This can be large if you have
    lots of data or use lots of passes because it decreases progressively as data
    is examined.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rate`: 这设置初始学习率。如果你有很多数据或使用了多次遍历，它可能很大，因为它随着数据的检查而逐渐减少。'
- en: 'Now our model is ready to move on to the next step of evaluation. To evaluate
    the model further, we can use the same dataset and check the confusion and AUC
    matrix. The command for this will be as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们模型已经准备好进入评估的下一步。为了进一步评估模型，我们可以使用相同的数据集并检查混淆和AUC矩阵。此命令如下：
- en: '[PRE3]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`runlogistic`: This is the algorithm to run the logistic regression model over
    an input dataset'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`runlogistic`: 这是运行逻辑回归模型在输入数据集上的算法'
- en: '`model`: This is the location of the model file'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model`: 这是模型文件的位置'
- en: '`auc`: This prints the AUC score for the model versus the input data after
    the data is read'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auc`: 在读取数据后，这会打印模型与输入数据的AUC分数'
- en: '`confusion`: This prints the confusion matrix for a particular threshold'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confusion`: 这将打印特定阈值下的混淆矩阵'
- en: 'The output of the previous command is shown in the following screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 上一条命令的输出显示在下图中：
- en: '![Using Mahout for logistic regression](img/4959OS_03_05.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![使用Mahout进行逻辑回归](img/4959OS_03_05.jpg)'
- en: Now, these matrices show that the model is not bad. Having 0.88 as the value
    for AUC is good, but we will check this on test data as well. The confusion matrix
    informs us that out of 172 malignant tumors, it has correctly classified 151 instances
    and that 34 benign tumors are also classified as malignant. In the case of benign
    tumors, out of 298, it has correctly classified 264.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这些矩阵显示模型表现不错。AUC的值为0.88是好的，但我们也会在测试数据上检查这一点。混淆矩阵告诉我们，在172个恶性肿瘤中，它正确分类了151个实例，并且34个良性肿瘤也被错误地分类为恶性。在良性肿瘤的情况下，在298个中，它正确分类了264个。
- en: If the model does not provide good results, we have a number of options.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果模型没有提供良好的结果，我们有多种选择。
- en: Change the parameters in the feature vector, increasing them if we are selecting
    few features. This should be done one at a time, and we should test the result
    again with each generated model. We should get a model where AUC is close to 1.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 改变特征向量的参数，如果我们正在选择少量特征，则增加它们。这应该一次只做一次，并且我们应该用每个生成的模型再次测试结果。我们应该得到一个AUC接近1的模型。
- en: 'Let''s run the same algorithm on test data as well:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在测试数据上也运行相同的算法：
- en: '[PRE4]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Using Mahout for logistic regression](img/4959OS_03_06.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![使用Mahout进行逻辑回归](img/4959OS_03_06.jpg)'
- en: So this model works almost the same on test data as well. It has classified
    34 out of the 40 malignant tumors correctly.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这个模型在测试数据上也几乎表现相同。它正确分类了40个恶性肿瘤中的34个。
- en: Summary
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we discussed logistic regression and how we can use this algorithm
    available in Apache Mahout. We used the Wisconsin Diagnostic Breast Cancer dataset
    and randomly broke it into two datasets: one for training and the other for testing.
    We created the logistic regression model using Mahout and also ran test data over
    this model. Now, we will move on to the next chapter where you will learn about
    the Naïve Bayes classification and also the most frequently used classification
    technique: text classification.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了逻辑回归以及我们如何使用Apache Mahout中可用的此算法。我们使用了威斯康星诊断乳腺癌数据集，并将其随机分为两个数据集：一个用于训练，另一个用于测试。我们使用Mahout创建了逻辑回归模型，并在此模型上运行了测试数据。现在，我们将进入下一章，你将学习关于朴素贝叶斯分类以及最常用的分类技术：文本分类。
