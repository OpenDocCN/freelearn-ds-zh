["```py\nEnter key. When you do, you will see a [1] 3 which is the output you received back from R. Go ahead and execute various arithmetic expressions to get a feel for the console:\n```", "```py\n> 1 + 2\n[1] 3\n```", "```py\nargs     <- commandArgs(TRUE)\ngreeting <- args[1]\nname     <- args[2]\n\nprint(c(greeting, name))\n```", "```py\n$ Rscript greeting.R Hi John\n[1] \"Hi\" \"John\"\n```", "```py\n$ Rscript greeting.R\n[1] NA NA\n```", "```py\nx <- 1\ny <- 2\nz <- c(x, y)\nz\n#> [1] 1 2\n\ny <- 3\nz\n#> [1] 1 2\n```", "```py\n`!A @B #C $D %E ^F` <- c(1, 2, 3)\n`!A @B #C $D %E ^F`\n#> [1] 1 2 3\n```", "```py\nx <- 2\ny <- 3\nz <- 4\n(x * y + z) / 5\n#> [1] 2\n```", "```py\n7 %% 3\n#> [1] 1\n7 %/% 3\n#> [1] 2\n```", "```py\n1 / 0\n#> [1] Inf\n-1 / 0\n#> [1] -Inf\n0 / 0\n#> [1] NaN\nInf + Inf\n#> [1] Inf\nInf - Inf\n#> [1] NaN\nInf / Inf\n#> [1] NaN\nInf / 0\n#> [1] Inf\n0 / Inf\n#> [1] 0\nInf / NaN\n#> [1] NaN\nInf + NA\n#> [1] NA\n```", "```py\nx <- \"Hi, there!\"\ny <- \"10\"\nclass(y)\n#> [1] \"character\"\ntypeof(y)\n#> [1] \"character\"\nstr(y)\n#> chr \"10\"\ny * 2\n#> Error in y * 2: non-numeric argument to binary operator\nnchar(x)\n#> [1] 10\nnchar(y)\n#> [1] 2\n```", "```py\nx <- \"the x variable\"\ny <- 10\npaste(\"The result for\", x, \"is\", y)\n#> [1] \"The result for the x variable is 10\"\n```", "```py\nx <- \"The ball is blue\"\ngsub(\"blue\", \"red\", x)\n#> [1] \"The ball is red\"\n```", "```py\nx <- \"The sky is blue\"\ngrepl(\"blue\", x)\n#> [1] TRUE\ngrepl(\"red\", x)\n#> [1] FALSE\n```", "```py\nx <- TRUE\n```", "```py\nas.logical(\"TRUE\")\n#> [1] TRUE\n```", "```py\nx <- c(TRUE, FALSE, -1, 0, 1, \"A\", \"B\", NA, NULL, NaN, Inf)\nx\n#> [1] \"TRUE\" \"FALSE\" \"-1\" \"0\" \"1\" \"A\" \"B\" NA\n#> [9] \"NaN\" \"Inf\"\nx[1]\n#> [1] \"TRUE\"\nx[5]\n#> [1] \"1\"\ny <- c(A=TRUE, B=FALSE, C=-1, D=0, E=1, F=NA, G=NULL, H=NaN, I=Inf)\ny\n#> A B  C D E F  H   I\n#> 1 0 -1 0 1 NA NaN Inf\ny[1]\n#> A\n#> 1\ny[\"A\"]\n#> A\n#> 1\ny[5]\n#> E\n#> 1\ny[\"E\"]\n#> E\n#> 1\nlength(x)\n#> [1] 10\nlength(y)\n#> [1] 8\n```", "```py\nx[c(1, 2, 3, 4, 5)]\n#> [1] \"TRUE\" \"FALSE\" \"-1\" \"0\" \"1\"\nx[1:5]\n#> [1] \"TRUE\" \"FALSE\" \"-1\" \"0\" \"1\"\nx[c(1, 3, 5)]\n#> [1] \"TRUE\" \"-1\" \"1\"\nx[c(TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, \n    FALSE, TRUE, FALSE, TRUE)]\n#> [1] \"TRUE\" \"-1\" \"1\" \"B\" \"NaN\" NA\n```", "```py\nx <- c(1, 2, 3, 4)\ny <- c(5, 6, 7, 8)\nx + y\n#> [1] 6 8 10 12\nx - y\n#> [1] -4 -4 -4 -4\nx * y\n#> [1] 5 12 21 32\nx / y\n#> [1] 0.2000 0.3333 0.4286 0.5000\nx %*% y\n#> [,1]\n#> [1,] 70\n```", "```py\nz <- c(y, x)\nz\n#> [1] 5 6 7 8 1 2 3 4\nsort(z)\n#> [1] 1 2 3 4 5 6 7 8\n```", "```py\nc(1, 2) + c(3, 4, 5) + c(6, 7, 8, 9)\n#> Warning in c(1, 2) + c(3, 4, 5): \n       longer object length is not a multiple of\n#> shorter object length\n#> Warning in c(1, 2) + c(3, 4, 5) + c(6, 7, 8, 9): \n       longer object length is\n#> not a multiple of shorter object length\n#> [1] 10 13 14 13\n```", "```py\nx^2\n#> [1] 1 4 9 16\n```", "```py\nx <- c(\"Blue\", \"Red\", \"Black\", \"Blue\")\ny <- factor(c(\"Blue\", \"Red\", \"Black\", \"Blue\"))\nz <- factor(c(\"Blue\", \"Red\", \"Black\", \"Blue\"), \n            levels=c(\"Red\", \"Black\", \"Blue\"))\n\nx\n#> [1] \"Blue\" \"Red\" \"Black\" \"Blue\"\ny\n#> [1] Blue Red Black Blue\n#> Levels: Black Blue Red\nz\n#> [1] Blue Red Black Blue\n#> Levels: Red Black Blue\nlevels(y)\n#> [1] \"Black\" \"Blue\" \"Red\"\nlevels(z)\n#> [1] \"Red\" \"Black\" \"Blue\"\n```", "```py\nclass(x)\n#> [1] \"character\"\nclass(y)\n#> [1] \"factor\"\ntypeof(x)\n#> [1] \"character\"\ntypeof(y)\n#> [1] \"integer\"\n```", "```py\ngsub(\"Black\", \"White\", x)\n#> [1] \"Blue\" \"Red\" \"White\" \"Blue\"\ngsub(\"Black\", \"White\", y)\n#> [1] \"Blue\" \"Red\" \"White\" \"Blue\"\nnchar(x)\n#> [1] 4 3 5 4\nnchar(y)\n#> Error in nchar(y): 'nchar()' requires a character vector\nc(x)\n#> [1] \"Blue\" \"Red\" \"Black\" \"Blue\"\nc(y)\n#> [1] 2 3 1 2\n```", "```py\nmatrix()\n#> [,1]\n#> [1,] NA\n\nmatrix(nrow = 2, ncol = 3)\n#> [,1] [,2] [,3]\n#> [1,] NA NA NA\n#> [2,] NA NA NA\n\nmatrix(c(1, 2, 3), nrow = 2)\n#> Warning in matrix(c(1, 2, 3), nrow = 2): \n data length [3] is not a sub-\n#> multiple or multiple of the number of rows [2]\n#> [,1] [,2]\n#> [1,] 1 3\n#> [2,] 2 1\n\nmatrix(c(1, 2, 3), nrow = 2, ncol = 3)\n#> [,1] [,2] [,3]\n#> [1,] 1 3 2\n#> [2,] 2 1 3\n\nmatrix(c(1, 2, 3, 4, 5, 6), nrow = 2, byrow = TRUE)\n#> [,1] [,2] [,3]\n#> [1,] 1 2 3\n#> [2,] 4 5 6\n```", "```py\nx <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, ncol = 3, byrow = TRUE)\nx[1, 2]\n#> [1] 2\nx[1:2, 2]\n#> [1] 2 5\nx[c(1, 2), 3]\n#> [1] 3 6\nx[c(TRUE, FALSE), c(TRUE, FALSE, TRUE)]\n#> [1] 1 3\nx[1, c(1, 3)]\n#> [1] 1 3\nx[, 1]\n#> [1] 1 4\nx[1, ]\n#> [1] 1 2 3\n```", "```py\nA <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, byrow = TRUE)\nx <- c(7, 8)\ny <- c(9, 10, 11)\nA\n#> [,1] [,2] [,3]\n#> [1,] 1 2 3\n#> [2,] 4 5 6\nx\n#> [1] 7 8\ny\n#> [1] 9 10 11\nt(A)\n#> [,1] [,2]\n#> [1,] 1 4\n#> [2,] 2 5\n#> [3,] 3 6\nt(x)\n#> [,1] [,2]\n#> [1,] 7 8\nt(y)\n#> [,1] [,2] [,3]\n#> [1,] 9 10 11\nx %*% A\n#> [,1] [,2] [,3]\n#> [1,] 39 54 69\nA %*% t(x)\n#> Error in A %*% t(x): non-conformable arguments\nA %*% y\n#> [,1]\n#> [1,] 62\n#> [2,] 152\nt(y) %*% A\n#> Error in t(y) %*% A: non-conformable arguments\nA %*% t(A)\n#> [,1] [,2]\n#> [1,] 14 32\n#> [2,] 32 77\nt(A) %*% A\n#> [,1] [,2] [,3]\n#> [1,] 17 22 27\n#> [2,] 22 29 36\n#> [3,] 27 36 45\nA %*% x\n#> Error in A %*% x: non-conformable arguments\n```", "```py\nx <- list(\n    A = 1,\n    B = \"A\",\n    C = TRUE,\n    D = matrix(c(1, 2, 3, 4), nrow = 2),\n    E = list(F = 2, G = \"B\", H = FALSE)\n)\n\nx \n#> $A\n#> [1] 1\n#>\n#> $B\n#> [1] \"A\"\n#>\n#> $C\n#> [1] TRUE\n#>\n#> $D\n#> [,1] [,2]\n#> [1,] 1 3\n#> [2,] 2 4\n#>\n#> $E\n#> $E$F\n#> [1] 2\n#>\n#> $E$G\n#> [1] \"B\"\n#>\n#> $E$H\n#> [1] FALSE \nx[1]\n#> $A\n#> [1] 1 \nx$A\n#> [1] 1 \nx[2]\n#> $B\n#> [1] \"A\" \nx$B\n#> [1] \"A\"\n```", "```py\nlapply(x, class)\n#> $A\n#> [1] \"numeric\"\n#>\n#> $B\n#> [1] \"character\"\n#>\n#> $C\n#> [1] \"logical\"\n#>\n#> $D\n#> [1] \"matrix\"\n#>\n#> $E\n#> [1] \"list\" \nlapply(x, typeof)\n#> $A\n#> [1] \"double\"\n#>\n#> $B\n#> [1] \"character\"\n#>\n#> $C\n#> [1] \"logical\"\n#>\n#> $D\n#> [1] \"double\"\n#>\n#> $E\n#> [1] \"list\"\n```", "```py\nx <- data.frame(\n    A = c(1, 2, 3, 4),\n    B = c(\"D\", \"E\", \"F\", \"G\"),\n    C = c(TRUE, FALSE, NA, FALSE)\n)\nx[1, ]\n#> A B C\n#> 1 1 D TRUE\nx[, 1]\n#> [1] 1 2 3 4\nx[1:2, 1:2]\n#> A B\n#> 1 1 D\n#> 2 2 E\nx$B\n#> [1] D E F G\n#> Levels: D E F G\nx$B[2]\n#> [1] E\n#> Levels: D E F G\n```", "```py\nx\n#> A B C\n#> 1 1 D TRUE\n#> 2 2 E FALSE\n#> 3 3 F NA\n#> 4 4 G FALSE\n\ncomplete.cases(x)\n#> [1] TRUE TRUE FALSE TRUE\nx[complete.cases(x), ]\n#> A B C\n#> 1 1 D TRUE\n#> 2 2 E FALSE\n#> 4 4 G FALSE\n```", "```py\n{ x <- 1; y <- 2; x * y; x + y }\n#> [1] 3\n```", "```py\nl2_norm <- function(x, y) {\n    print(\"x\")\n    print(x)\n    print(\"y\")\n    print(y)\n    element_to_element_difference <- x - y\n    result <- sum(element_to_element_difference^2)\n    return(result)\n}\n\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\n\nl2_norm(a, b)\n#> [1] \"x\"\n#> [1] 1 2 3\n#> [1] \"y\"\n#> [1] 4 5 6\n#> [1] 27\n\nl2_norm(b, a)\n#> [1] \"x\"\n#> [1] 4 5 6\n#> [1] \"y\"\n#> [1] 1 2 3\n#> [1] 27\n\nl2_norm(x = a, y = b)\n#> [1] \"x\"\n#> [1] 1 2 3\n#> [1] \"y\"\n#> [1] 4 5 6\n#> [1] 27\n\nl2_norm(y = b, x = a)\n#> [1] \"x\"\n#> [1] 1 2 3\n#> [1] \"y\"\n#> [1] 4 5 6\n#> [1] 27\n```", "```py\nl2_norm <- function(x, y) sum((x - y)^2)\n```", "```py\nl2_norm(1, 2)\n#> [1] 1\nl2_norm(1:5, 6:10)\n#> [1] 125\n```", "```py\nl2_norm(a)     # Should throw an error because `y` is missing\n#> Error in l2_norm(a): argument \"y\" is missing, with no default\n\nl2_norm <- function(x, y = 0) sum((x - y)^2)\n\nl2_norm(a)     # Should work fine, since `y` is optional now\n#> [1] 14\nl2_norm(a, b)  # Should work just as before\n#> [1] 27\n```", "```py\nl1_norm <- function(x, y = 0) sum(abs(x - y))\n\nl1_norm(a)\n#> [1] 6\nl1_norm(a, b)\n#> [1] 9\n```", "```py\ndistance <- function(x, y = 0, norm = l2_norm) norm(x, y)\n\ndistance(a)\n#> [1] 14\ndistance(a, b)\n#> [1] 27\ndistance(a, b, l2_norm)\n#> [1] 27\ndistance(a, b, l1_norm)\n#> [1] 9\ndistance(a, norm = l1_norm)\n#> [1] 6\n```", "```py\nx <- c(1, 2, 3, 4, 5)\nx\n#> [1] 1 2 3 4 5\nx[1] <- 10\nx\n#> [1] 10 2 3 4 5\n`[<-`(x, 1, 20)\n#> [1] 20 2 3 4 5\nx\n#> [1] 10 2 3 4 5\nx[1]\n#> [1] 10\n`[`(x, 1)\n#> [1] 10\nx[1] + x[2]\n#> [1] 12\n`+`(x[1], x[2])\n#> [1] 12\n`+`(`[`(x, 1), `[`(x, 1))\n#> [1] 20\n```", "```py\nx <- c(1, 2, 3)\ny <- c(TRUE, FALSE, TRUE)\ndistance(x, y)\n#> [1] 8\n```", "```py\ndistance <- function(x, y = 0, norm = \"l2\") {\n    if (norm == \"l2\") {\n        return(l2_norm(x, y))\n    } else {\n        return(l1_norm(x, y))\n    }\n}\n\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\n\ndistance(a, b)\n#> 27\ndistance(a, b, \"l2\")\n#> 27\ndistance(a, b, \"l1\")\n#> 9\ndistance(a, b, \"l1 will also be used in this case\")\n#> 9\n```", "```py\ndistance <- function(x, y = 0, norm = \"l2\") {\n    if (norm == \"l2\") {\n        return(l2_norm(x, y))\n    } else if (norm == \"l1\") {\n        return(l1_norm(x, y))\n    } else {\n        stop(\"Invalid norm option\")\n    }\n}\n\ndistance(a, b, \"l1\")\n#> [1] 9\ndistance(a, b, \"this will produce an error\")\n#> Error in distance(a, b, \"this will produce an error\") :\n#>   Invalid norm option\n```", "```py\nifelse(c(1, 2, 3, 4, 5, 6) %% 2 == 0, \"even\", \"odd\")\n#> [1] \"odd\" \"even\" \"odd\" \"even\" \"odd\" \"even\"\n```", "```py\nwords <- c(\"Hello\", \"there\", \"dear\", \"reader\")\nfor (word in words) {\n    print(word)\n    print(nchar(word))\n}\n#> [1] \"Hello\"\n#> [1] 5\n#> [1] \"there\"\n#> [1] 5\n#> [1] \"dear\"\n#> [1] 4\n#> [1] \"reader\"\n#> [1] 6\n```", "```py\nfor (i in 1:5) {\n    print(i)\n    for (j in 1:3) {\n        print(paste(\"   \", j))\n    }\n}\n#> [1] 1\n#> [1] \" 1\"\n#> [1] \" 2\"\n#> [1] \" 3\"\n#> [1] 2\n#> [1] \" 1\"\n#> [1] \" 2\"\n#> [1] \" 3\"\n#> [1] 3\n#> [1] \" 1\"\n#> [1] \" 2\"\n#> [1] \" 3\"\n#> [1] 4\n#> [1] \" 1\"\n#> [1] \" 2\"\n#> [1] \" 3\"\n#> [1] 5\n#> [1] \" 1\"\n#> [1] \" 2\"\n#> [1] \" 3\"\n```", "```py\nsapply(words, nchar)\n#> Hello there dear reader\n#> 5     5     4    6\nlapply(words, nchar)\n#> [[1]]\n#> [1] 5\n#>\n#> [[2]]\n#> [1] 5\n#>\n#> [[3]]\n#> [1] 4\n#>\n#> [[4]]\n#> [1] 6\nnchar(words)\n#> [1] 5 5 4 6\n```", "```py\nx <- list(c(1, 2, 3), c(4, 5, 6), c(7, 8, 9))\nlapply(x, distance, c(1, 1, 1), l1_norm)\n#> [[1]]\n#> [1] 3\n#>\n#> [[2]]\n#> [1] 12\n#>\n#> [[3]]\n#> [1] 21\n```", "```py\nx <- 1\nwhile (x <= 10) {\n    print(x)\n    x <- x + 1\n}\n#> [1] 1\n#> [1] 2\n#> [1] 3\n#> [1] 4\n#> [1] 5\n#> [1] 6\n#> [1] 7\n#> [1] 8\n#> [1] 9\n#> [1] 10\n```", "```py\n# DO NOTE EXCEUTE THIS, IT's AN INFINITE LOOP\n\nx <- 1\nrepeat {\n    print(x)\n    x <- x + 1\n}\n\n#> [1] 1\n#> [1] 2\n#> [1] 3\n#> [1] 4\n#> [1] 5\n#> [1] 5\n...\n```"]