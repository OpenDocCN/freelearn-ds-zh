["```py\n> library(hflights)\n> library(data.table)\n> dt <- data.table(hflights)\n> dt[, date := ISOdate(Year, Month, DayofMonth)]\n\n```", "```py\n> daily <- dt[, list(\n+     N         = .N,\n+     Delays    = sum(ArrDelay, na.rm = TRUE),\n+     Cancelled = sum(Cancelled),\n+     Distance  = mean(Distance)\n+ ), by = date]\n> str(daily)\nClasses 'data.table' and 'data.frame':\t365 obs. of  5 variables:\n $ date     : POSIXct, format: \"2011-01-01 12:00:00\" ...\n $ N        : int  552 678 702 583 590 660 661 500 602 659 ...\n $ Delays   : int  5507 7010 4221 4631 2441 3994 2571 1532 ...\n $ Cancelled: int  4 11 2 2 3 0 2 1 21 38 ...\n $ Distance : num  827 787 772 755 760 ...\n - attr(*, \".internal.selfref\")=<externalptr>\n\n```", "```py\n> plot(ts(daily))\n\n```", "```py\n> setorder(daily, date)\n> plot(ts(daily))\n\n```", "```py\n> plot(ts(daily$N, start = 2011, frequency = 365),\n+      main = 'Number of flights from Houston in 2011')\n\n```", "```py\n> plot(decompose(ts(daily$N, frequency = 7)))\n\n```", "```py\n> setNames(decompose(ts(daily$N, frequency = 7))$figure,\n+         weekdays(daily$date[1:7]))\n Saturday      Sunday      Monday     Tuesday   Wednesday \n-102.171776   -8.051328   36.595731  -14.928941   -9.483886 \n Thursday      Friday \n 48.335226   49.704974\n\n```", "```py\n> decompose(ts(daily$N, frequency = 365))\nError in decompose(ts(daily$N, frequency = 365)) : \n time series has no or less than 2 periods\n\n```", "```py\n> nts <- ts(daily$N, frequency = 7)\n> fit <- HoltWinters(nts, beta = FALSE, gamma = FALSE)\n> plot(fit)\n\n```", "```py\n> fit <- HoltWinters(nts)\n> plot(fit)\n\n```", "```py\n> library(forecast)\n> forecast(fit)\n Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n53.14286       634.0968 595.4360 672.7577 574.9702 693.2235\n53.28571       673.6352 634.5419 712.7286 613.8471 733.4233\n53.42857       628.2702 588.7000 667.8404 567.7528 688.7876\n53.57143       642.5894 602.4969 682.6820 581.2732 703.9057\n53.71429       678.2900 637.6288 718.9511 616.1041 740.4758\n53.85714       685.8615 644.5848 727.1383 622.7342 748.9889\n54.00000       541.2299 499.2901 583.1697 477.0886 605.3712\n54.14286       641.8039 598.0215 685.5863 574.8445 708.7633\n54.28571       681.3423 636.8206 725.8639 613.2523 749.4323\n54.42857       635.9772 590.6691 681.2854 566.6844 705.2701\n54.57143       650.2965 604.1547 696.4382 579.7288 720.8642\n54.71429       685.9970 638.9748 733.0192 614.0827 757.9113\n54.85714       693.5686 645.6194 741.5178 620.2366 766.9005\n55.00000       548.9369 500.0147 597.8592 474.1169 623.7570\n\n```", "```py\n> plot(forecast(HoltWinters(nts), 31))\n\n```", "```py\n> auto.arima(nts)\nSeries: ts \nARIMA(3,0,0)(2,0,0)[7] with non-zero mean \n\nCoefficients:\n ar1      ar2     ar3    sar1    sar2  intercept\n 0.3205  -0.1199  0.3098  0.2221  0.1637   621.8188\ns.e.  0.0506   0.0538  0.0538  0.0543  0.0540     8.7260\n\nsigma^2 estimated as 2626:  log likelihood=-1955.45\nAIC=3924.9   AICc=3925.21   BIC=3952.2\n\n```", "```py\n> auto.arima(nts, approximation = FALSE)\nSeries: ts \nARIMA(0,0,4)(2,0,0)[7] with non-zero mean \n\nCoefficients:\n ma1      ma2     ma3     ma4    sar1    sar2  intercept\n 0.3257  -0.0311  0.2211  0.2364  0.2801  0.1392   621.9295\ns.e.  0.0531   0.0531  0.0496  0.0617  0.0534  0.0557     7.9371\n\nsigma^2 estimated as 2632:  log likelihood=-1955.83\nAIC=3927.66   AICc=3928.07   BIC=3958.86\n\n```", "```py\n> plot(forecast(auto.arima(nts, D = 1, approximation = FALSE), 31))\n\n```", "```py\n> cts <- ts(daily$Cancelled)\n> fit <- auto.arima(cts)\n> auto.arima(cts)\nSeries: ts \nARIMA(1,1,2)\n\nCoefficients:\n ar1      ma1      ma2\n -0.2601  -0.1787  -0.7752\ns.e.   0.0969   0.0746   0.0640\n\nsigma^2 estimated as 539.8:  log likelihood=-1662.95\nAIC=3333.9   AICc=3334.01   BIC=3349.49\n\n```", "```py\n> library(tsoutliers)\n> outliers <- tso(cts, tsmethod = 'arima',\n+   args.tsmethod  = list(order = c(1, 1, 2)))\n> plot(outliers)\n\n```", "```py\n> plot(tso(ts(daily$Cancelled)))\n\n```", "```py\n> dfc <- as.data.frame(daily[, c('date', 'Cancelled'), with = FALSE])\n\n```", "```py\n> library(AnomalyDetection)\n> AnomalyDetectionTs(dfc, plot = TRUE)$plot\n\n```", "```py\n> library(zoo)\n> zd <- zoo(daily[, -1, with = FALSE], daily[[1]])\n> plot(zd)\n\n```", "```py\n> plot(cumsum(zd))\n\n```"]