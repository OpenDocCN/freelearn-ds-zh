- en: Appendix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1\. Introduction to Data Wrangling with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 1.01: Handling Lists'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the `random` library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use the `randint` method from the `random` library to create `100` random numbers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print `random_number_list`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The sample output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.20: Section of output for random_number_list'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_20.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.20: Section of output for random_number_list'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The output is susceptible to change since we are generating random numbers.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a `list_with_divisible_by_3` list from `random_number_list`, which will
    contain only numbers that are divisible by `3`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The sample output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.21: Section of the output for random_number_list divisible by 3'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_21.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.21: Section of the output for random_number_list divisible by 3'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Use the `len` function to measure the length of the first list and the second
    list, and store them in two different variables, `length_of_random_list` and `length_of_3_divisible_list`.
    Calculate the difference in length in a variable called `difference`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The sample output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Combine the tasks we have performed so far and add a `for` loop to it. Run
    the loop 10 times and add the values of the difference variables to a list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The sample output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, calculate the arithmetic mean (common average) for the differences in
    the lengths that you have:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The sample output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The output is susceptible to change since we have used random numbers.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/30VMjt3](https://packt.live/30VMjt3).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3eh0JIb](https://packt.live/3eh0JIb).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: With this, we have successfully completed our first activity. Let's move on
    to the next section, where we will discuss another type of data structure – **sets**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Activity 1.02: Analyzing a Multiline String and Generating the Unique Word
    Count'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a new Jupyter Notebook, create a string called `multiline_text`, and copy
    the text present in the first chapter of *Pride and Prejudice*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Part of the first chapter of *Pride and Prejudice* by Jane Austen has been made
    available on this book's GitHub repository at [https://packt.live/2N6ZGP6](https://packt.live/2N6ZGP6).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Use *Ctrl* *+* *A* to select the entire text and then *Ctrl* *+* *C* to copy
    it and use *Ctrl + V* to paste the text you just copied into it:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.22: Initializing the mutliline_text string'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_22.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.22: Initializing the mutliline_text string'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the type of the string using the `type` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, find the length of the string using the `len` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use string methods to get rid of all the new lines (`\n` or `\r`) and symbols.
    Remove all new lines by replacing them with the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, we will print and check the output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.23: The multiline_text string after removing the new lines'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_23.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.23: The multiline_text string after removing the new lines'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Remove the special characters and punctuation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check the content of `cleaned_multiline_text`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.24: The cleaned_multiline_text string'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_24.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.24: The cleaned_multiline_text string'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Generate a list of all the words from the cleaned string using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The section of the output is shown below:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.25: The section of output displaying the list_of_words'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_25.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.25: The section of output displaying the list_of_words'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the number of words:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The output is `236`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a list from the list you just created, which includes only unique words:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The output is `135`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Count the number of times each of the unique words appeared in the cleaned text:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The section of the output is shown below:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.26: Section of output showing unique_words_as_dict'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_26.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.26: Section of output showing unique_words_as_dict'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You just created, step by step, a unique word counter using all the neat tricks
    that you've learned about in this chapter.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the top 25 words from `unique_words_as_dict`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output (partially shown) is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.27: Top 25 unique words from multiline_text'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_01_27.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.27: Top 25 unique words from multiline_text'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/2ASNIWL](https://packt.live/2ASNIWL).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3dcIKkz](https://packt.live/3dcIKkz).
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Advanced Operations on Built-In Data Structures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 2.01: Permutation, Iterator, Lambda, and List'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the detailed steps to solve this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Look up the definition of `permutations` and `dropwhile` from `itertools`.
    There is a way to look up the definition of a function inside Jupyter itself.
    Just type the function name, followed by *?*, and press *Shift* + *Enter*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You will see a long list of definitions after each `?`. We will skip it here.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Write an expression to generate all the possible three-digit numbers using
    `1`, `2`, and `3`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output (which will vary in your case) is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Loop over the iterator expression you generated before. Use the `print` method
    to print each element returned by the iterator. Use `assert` and `isinstance`
    to make sure that the elements are tuples:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Write the loop again. But this time, use `dropwhile` with a lambda expression
    to drop any leading zeros from the tuples. As an example, `(0, 1, 2)` will become
    `[0, 2]`. Also, cast the output of `dropwhile` to a list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'An extra task can be to check the actual type that `dropwhile` returns without casting:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Write all the logic you wrote before, but this time write a separate function
    where you will be passing the list generated from `dropwhile`; the function will
    return the whole number contained in the list. As an example, if you pass `[1,
    2]` to the function, it will return `12`. Make sure that the return type is indeed
    a number and not a string. Although this task can be achieved using other tricks,
    we require you to treat the incoming list as a stack in the function and generate
    the number there:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/37Gk9DT](https://packt.live/37Gk9DT).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3hEWt7f](https://packt.live/3hEWt7f).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Activity 2.02: Designing Your Own CSV Parser'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the detailed steps to solve this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import `zip_longest` from `itertools`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Define the `return_dict_from_csv_line` function so that it contains `header`,
    `line`, and `fillvalue` as `None`, and add it to a dictionary:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the accompanying `sales_record.csv` file using `r` mode inside a `with`
    block. First, check that it is opened, read the first line, and use string methods
    to generate a list of all the column names as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'When you read each line, pass that line to a function along with the list of
    the headers. The work of the function is to construct a dictionary out of these
    two and fill up the `key:values` variables. Keep in mind that a missing value
    should result in `None`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output (partially shown) is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.15: Section of output'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_02_15.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 2.15: Section of output'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/37FlVVK](https://packt.live/37FlVVK).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/2YepGyb](https://packt.live/2YepGyb).
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Introduction to NumPy, Pandas, and Matplotlib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 3.01: Generating Statistics from a CSV File'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Load the necessary libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Read in the Boston Housing dataset (given as a `.csv` file) from the local directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Don't forget to change the path of the dataset (highlighted) based on where
    it is saved on your system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Check the first 10 records:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.30: Output displaying the first 10 records'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_03_30.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.30: Output displaying the first 10 records'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the total number of records:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a smaller DataFrame with columns that do not include `CHAS`, `NOX`,
    `B`, and `LSTAT`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check the last `7` records of the new DataFrame you just created:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.31: Last seven records of the DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_03_31.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.31: Last seven records of the DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot histograms of all the variables (columns) in the new DataFrame by using
    a for loop:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.32: Partial plot of all variables using a for loop'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_03_32.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.32: Partial plot of all variables using a for loop'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To take a look at all the plots, head over to the following link: [https://packt.live/2AGb95F](https://packt.live/2AGb95F).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Crime rate could be an indicator of house price (people don''t want to live
    in high-crime areas). In some cases, having multiple charts together can allow
    for the easy analysis of a variety of variables. In the preceding group of charts,
    we can see several unique spikes in the data: `INDIUS`, `TAX`, and `RAD`. With
    further exploratory analysis, we can find out more. We might want to plot one
    variable against another after looking at the preceding group of charts.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a scatter plot of crime rate versus price:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.33: Scatter plot of crime rate versus price'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_03_33.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.33: Scatter plot of crime rate versus price'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We can understand this relationship better if we plot `log10(crime)` versus `price`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a plot of `log10(crime)` versus price:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.34: Scatter plot of crime rate (Log) versus price'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_03_34.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.34: Scatter plot of crime rate (Log) versus price'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Calculate the mean rooms per dwelling:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the median age:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the average (mean) distances to five Boston employment centers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the price of the housing that''s less than `20`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.35: Output of low_price'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_03_35.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.35: Output of low_price'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This creates a Boolean array of `True, False`, `True = 1`, and `False = 0`.
    If you take an average of this NumPy array, you will know how many `1(True)` values
    are there.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Calculate the mean of this array:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the percentage of houses with a low price (`< $20,000`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/2AGb95F](https://packt.live/2AGb95F).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/2YT3Hfg](https://packt.live/2YT3Hfg).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 4\. A Deep Dive into Data Wrangling with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 4.01: Working with the Adult Income Dataset (UCI)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Load the necessary libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Read in the Adult Income Dataset (given as a `.csv` file) from the local directory
    and check the first five records:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The highlighted path must be changed based on the location of the file on your
    system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.76: DataFrame displaying the first five records from the .csv file'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_76.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.76: DataFrame displaying the first five records from the .csv file'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a script that will read a text file line by line and extract the first
    line, which is the header of the `.csv` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The highlighted path must be changed based on the location of the file on your
    system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.77: Names of the columns in the database](img/B15780_04_77.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 4.77: Names of the columns in the database'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Add a name of `Income` for the response variable (last column) to the dataset
    by using the `append` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Read the new file again using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The highlighted path must be changed based on the location of the file on your
    system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.78: DataFrame with the income column added'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_78.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.78: DataFrame with the income column added'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Use the `describe` command to get the statistical summary of the dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.79: Statistical summary of the dataset'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_79.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.79: Statistical summary of the dataset'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note that only a small number of columns are included. Many variables in the
    dataset have multiple factors or classes.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Make a list of all the variables in the classes by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a loop to count and print them by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output (partially shown) is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.80: Output of different factors or classes](img/B15780_04_80.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 4.80: Output of different factors or classes'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the missing values by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.81: Finding the missing values'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_81.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.81: Finding the missing values'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a DataFrame with only `age`, `education`, and `occupation` by using subsetting:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.82: Subset of the DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_82.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.82: Subset of the DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot a histogram of age with a bin size of 20:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.83: Histogram of age with a bin size of 20'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_83.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.83: Histogram of age with a bin size of 20'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot box plots for `age` grouped by `education` (use a long figure size of
    `25x10` and make the `x` ticks font size `15`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.84: Box plot of age grouped by education'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_84.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.84: Box plot of age grouped by education'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Before doing any further operations, we need to use the `apply` method we learned
    about in this chapter. It turns out that when reading the dataset from the CSV
    file, all the strings came with a whitespace character in front of them. So, we
    need to remove that whitespace from all the strings.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a function to strip the whitespace characters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use the `apply` method to apply this function to all the columns with string
    values, create a new column, copy the values from this new column to the old column,
    and drop the new column. This is the preferred method so that you don''t accidentally
    delete valuable data. Most of the time, you will need to create a new column with
    a desired operation and then copy it back to the old column if necessary. Ignore
    any warning messages that are printed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This is the sample warning message, which you should ignore:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.85: Warning message to be ignored'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_85.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.85: Warning message to be ignored'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the number of people who are aged between `30` and `50` (inclusive) by
    using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check the contents of the new dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.86: Contents of the new DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_86.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.86: Contents of the new DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the `shape` of the filtered DataFrame and specify the index of the tuple
    as 0 to return the first element:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the number of people aged between `30` and `50` using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Group by `occupation` and show the summary statistics of age. Find which profession
    has the oldest workers on average and which profession has its largest share of
    the workforce above the `75th` percentile:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.87: DataFrame with data grouped by age and education'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_87.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.87: DataFrame with data grouped by age and education'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The code returns `79 rows × 1 columns`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Use subset and `groupBy` to find the outliers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Plot the values on a bar chart:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.88: Bar chart displaying occupation statistics'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_88.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.88: Bar chart displaying occupation statistics'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Is there a particular occupation group that has very low representation? Perhaps
    we should remove those pieces of data because, with very low data, the group won't
    be useful in analysis. Just by looking at *Figure 4.89*, you should be able to
    see that the `Armed-Forces` group has only got a `9` count, that is, `9` data
    points. But how can we detect this? By plotting the count column in a bar chart.
    Note how the first argument to the `barh` function is the index of the DataFrame,
    which is the summary stats of the occupation groups. We can see that the `Armed-Forces`
    group has almost no data. This activity teaches you that, sometimes, the outlier
    is not just a value, but can be a whole group. The data of this group is fine,
    but it is too small to be useful for any analysis. So, it can be treated as an
    outlier in this case. But always use your business knowledge and engineering judgment
    for such outlier detection and how to process them. We will now practice merging
    two datasets using a common key.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Suppose you are given two datasets where the common key is `occupation`. First,
    create two such disjoint datasets by taking random samples from the full dataset
    and then try merging. Include at least two other columns, along with the common
    key column for each dataset. Notice how the resulting dataset, after merging,
    may have more data points than either of the two starting datasets if your common
    key is not unique:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.89: Output after merging the common keys'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_89.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.90: Output after merging the common keys'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_90.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.90: Output after merging the common keys'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Merge the two datasets together:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 4.91: Output of distinct occupation values'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_04_91.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 4.91: Output of distinct occupation values'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/37IamwR](https://packt.live/37IamwR).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/2YhuF1j](https://packt.live/2YhuF1j).
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Getting Comfortable with Different Kinds of Data Sources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 5.01: Reading Tabular Data from a Web Page and Creating DataFrames'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import `BeautifulSoup` and load the data by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the Wikipedia file by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Don't forget to change the path of the dataset (highlighted) based on its location
    on your system
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Calculate the tables by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: There are nine tables in total.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the right table using the `class` attribute by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Separate the source and the actual data by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use the `findAll` function to find the data from the `body` tag of `data_table`
    using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use the `findAll` function to find the data from the `data_table` `td` tag
    by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the length of `data_tables` by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check how to get the source names by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Separate the header and data for the first source:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the rows from `data_tables` using `findAll`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the data from `rows1` using the `strip` function for each `td` tag:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.35: DataFrame created from the web page'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_05_35.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.35: DataFrame created from the web page'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Do the same for the other two sources by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the rows from `data_tables` using `findAll` by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Define `find_right_text` using the `strip` function by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the rows from `data_rows` using `find_right_text` by using the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the `df2` DataFrame by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.36: Output of the DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_05_36.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.36: Output of the DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, perform the same operations for the third DataFrame by using the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the rows from `data_tables` using `findAll` by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find the rows from `data_rows3` by using `find_right_text`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the `df3` DataFrame by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.37: The third DataFrame'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_05_37.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.37: The third DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/2NaCrDB](https://packt.live/2NaCrDB).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/2YRAukP](https://packt.live/2YRAukP).
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Learning the Hidden Secrets of Data Wrangling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 6.01: Handling Outliers and Missing Data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps to completing this activity are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The dataset to be used for this activity can be found at [https://packt.live/2YajrLJ](https://packt.live/2YajrLJ).
  prefs: []
  type: TYPE_NORMAL
- en: 'Load the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Read the `.csv` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Don't forget to change the path (highlighted) based on where the CSV file is
    saved on your system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Print the data from the DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 6.11: The contents of the CSV file'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_06_11.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 6.11: The contents of the CSV file'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As we can see, there is data where some values are missing, and if we examine
    this, we will see some outliers.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Check for duplicates by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: There are duplicates in both the first and last names, which is normal. However,
    as we can see, there are no duplicates in email. That's good.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Check whether any essential column contains `NaN`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The `Visit` column contains some `NaN` values. Given that the final task at
    hand will probably be predicting the number of visits, we cannot do anything with
    rows that do not have that information. They are a type of outlier. Let's get
    rid of them.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Get rid of the outliers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Report the size difference:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Plot a box plot to find whether the data has outliers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The box plot is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 6.12: Box plot using the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_06_12.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 6.12: Box plot using the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As we can see, we have data in this column in the interval (`0, 3000`). However,
    the main concentration of the data is between `~700` and `~2300`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Get rid of values beyond `2900` and below `100` – these are outliers for us.
    We need to get rid of them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/2AFcSbn](https://packt.live/2AFcSbn).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3fAL9qY](https://packt.live/3fAL9qY)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 7\. Advanced Web Scraping and Data Gathering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 7.01: Extracting the Top 100 e-books from Gutenberg'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the necessary libraries, including regex and `BeautifulSoup`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Read the HTML from the URL:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Write a small function to check the status of the web request:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check the status of response:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Decode the response and pass it on to `BeautifulSoup` for HTML parsing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Find all the href tags and store them in the list of links.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check what the list looks like – print the first 30 elements:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output (partially shown) is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use a regular expression to find the numeric digits in these links. These are
    the file numbers for the top 100 books. Initialize the empty list to hold the
    file numbers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Numbers 19 to 118 in the original list of links have the top 100 eBooks' numbers.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Loop over the appropriate range and use a regex to find the numeric digits
    in the link (`href`) string. Use the `findall()` method:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the file numbers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Since the list of top 100 books is frequently updated, the output you get will vary.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What does the `soup` object's text look like?
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use the `.text` method and print only the first 2,000 characters (do not print
    the whole thing as it is too long).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will notice a lot of empty spaces/blanks here and there. Ignore them. They
    are part of the HTML page''s markup and its whimsical nature:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Search the extracted text (using regex) from the `soup` object to find the
    names of the top 100 eBooks (yesterday''s ranking):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a starting index. It should point at the text Top 100 Ebooks yesterday.
    Use the `splitlines` method of `soup.text`. It splits the lines of the text of
    the `soup` object:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Since the list of top 100 books is frequently updated, the output you get will vary.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Run the `for` loop from `1-100` to add the strings of the next `100` lines
    to this temporary list. `splitlines` method:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use regex to extract only text from the name strings and append them to an
    empty list. Use `match` and `span` to find the indices and use them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the list of titles:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The partial output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Since the list of top 100 books is frequently updated, the output you get will
    vary.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we have seen how we can use web scraping and parsing using a mix of `BeautifulSoup`
    and regex to find information from very untidy and vast source data. These are
    some essential steps that you will have to perform on a daily basis when you are
    dealing with data wrangling.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/2BltmFo](https://packt.live/2BltmFo).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/37FdLwD](https://packt.live/37FdLwD).
  prefs: []
  type: TYPE_NORMAL
- en: 'Activity 7.02: Building Your Own Movie Database by Reading an API'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**SOLUTION**'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you begin, ensure that you modify the `APIkeys.json` file and add your
    secret API key there. Link to the file: [https://packt.live/2CmIpze](https://packt.live/2CmIpze).'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import `urllib.request`, `urllib.parse`, `urllib.error`, and `json`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Load the secret API key (you have to get one from the OMDb website and use
    that; it has a daily API key limit of 1,000) from a JSON file, stored in the same
    folder, into a variable, by using `json.loads()`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The following cell will not be executed in the solution notebook because the
    author cannot give out their private API key.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The students/users will need to obtain a key and store it in a JSON file. We
    are calling this file `APIkeys.json`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Open the `APIkeys.json` file by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The final URL to be passed should look like this: [http://www.omdbapi.com/?t=movie_name&apikey=secretapikey](http://www.omdbapi.com/?t=movie_name&apikey=secretapikey).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Assign the OMDb portal ([http://www.omdbapi.com/?](http://www.omdbapi.com/?))
    as a string to a variable called `serviceurl` by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a variable called `apikey` with the last portion of the URL (`&apikey=secretapikey`),
    where `secretapikey` is your own API key. The movie name portion is `t=movie_name`,
    and it will be addressed later:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE149]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Write a utility function called `print_json` to print the movie data from a
    JSON file (which we will get from the portal). Here are the keys of a JSON file:
    `''Title'', ''Year'', ''Rated'', ''Released'', ''Runtime'', ''Genre'', ''Director'',
    ''Writer'', ''Actors'', ''Plot'', ''Language'',''Country'', ''Awards'', ''Ratings'',
    ''Metascore'', ''imdbRating'', ''imdbVotes'', and ''imdbID''`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Write a utility function to download a poster of the movie based on the information
    from the JSON dataset and save it in your local folder. Use the `os` module. The
    poster data is stored in the JSON key Poster. You may want to split the name of
    the Poster file and extract the file extension only. Let''s say that the extension
    is `.jpg`. We could later join this extension to the movie name and create a filename
    such as `movie.jpg`. Use the `open` Python command open to open a file and write
    the poster data. Close the file after you''re done. This function may not return
    anything. It just saves the poster data as an image file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Write a utility function called `search_movie` to search a movie by its name,
    print the downloaded JSON data (use the `print_json` function for this), and save
    the movie poster in the local folder (use the `save_poster` function for this).
    Use a try-except loop for this, that is, try to connect to the web portal. If
    successful, proceed, but if not (that is, if an exception is raised), then just
    print an error message. Use the previously created variables, `serviceurl` and
    `apikey`. You have to pass on a dictionary with a key, t, and the movie name as
    the corresponding value to the `urllib.parse.urlencode` function and then add
    the `serviceurl` and `apikey` variables to the output of the function to construct
    the full URL. This URL will be used to access the data. The JSON data has a key
    called Response. If it is True, that means that the read was successful. Check
    this before processing the data. If it was not successful, then print the JSON
    key Error, which will contain the appropriate error message that''s returned by
    the movie database:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Test the `search_movie` function by entering `Titanic`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following is the retrieved data for Titanic:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Test the `search_movie` function by entering `Random_error` (obviously, this
    will not be found, and you should be able to check whether your error-catching
    code is working properly):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE155]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Retrieve the data of `Random_error`:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE156]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the last two steps, we've not shown the private API key (highlighted) for
    security reasons.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/3hLJvoy](https://packt.live/3hLJvoy).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3efkDTZ](https://packt.live/3efkDTZ).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 8\. RDBMS and SQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 8.01: Retrieving Data Accurately from Databases'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Connect to the supplied `petsdb` database:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE157]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Write a function to check whether the connection has been successful:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE159]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Close the connection:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE160]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check whether the connection is open or closed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE162]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Connect to the `petsdb` database:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE163]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Find out the different age groups in the persons table. Execute the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE164]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.13: Section of output grouped by age'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_08_13.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 8.13: Section of output grouped by age'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To find out which age group has the maximum number of people, execute the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE165]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE166]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To find out how many people do not have a full name (the last name is blank/null),
    execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE167]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE168]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To find out how many people have more than one pet, execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE169]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE170]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To find out how many pets have received treatment, execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE171]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE172]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To find out how many pets have received treatment and the type of pet is known,
    execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE173]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE174]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To find out how many pets are from the city called `east port`, execute the
    following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE175]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE176]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To find out how many pets are from the city called `east port` and who received
    treatment, execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE177]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE178]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/3derN9D](https://packt.live/3derN9D).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/2ASWYKi](https://packt.live/2ASWYKi).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 9\. Applications in Business Use Cases and Conclusion of the Course
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Activity 9.01: Data Wrangling Task – Fixing UN Data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the required libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE179]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Save the URL of the dataset (highlighted) and use the pandas `read_csv` method
    to directly pass this link and create a DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE180]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the data in the DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE181]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output (partially shown) is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.7: Partial DataFrame from the UN data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_7.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.7: Partial DataFrame from the UN data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'As the first row does not contain useful information, use the `skiprows` parameter
    to remove the first row:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE182]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the data in the DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE183]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.8: Partial  DataFrame after removing the first row'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_8.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.8: Partial DataFrame after removing the first row'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Drop the `Region/Country/Area` and `Source` columns as they will not be very
    helpful:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE184]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Assign the following names as the columns of the DataFrame: `[''Region/Country/Area'',''Year'',''Data'',''Value'',''Footnotes'']`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE185]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the data in the DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE186]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.9: DataFrame after dropping the Region/Country/Area and Source columns'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_9.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.9: DataFrame after dropping the Region/Country/Area and Source columns'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Check how many unique values the `Footnotes` column contains:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE187]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.10: Unique values of the Footnotes column'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_10.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.10: Unique values of the Footnotes column'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Convert the `Value` column data into a numeric one for further processing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE188]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE189]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a utility function to convert the strings in the `Value` column into
    floating-point numbers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE190]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use the `apply` method to apply this function to the `Value` column data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE191]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the unique types of data in the `Data` column:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE192]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.11: Unique values in a column'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_11.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.11: Unique values in a column'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create three DataFrames by filtering and selecting them from the original DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`df_primary`: Only students enrolled in primary education (thousands)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`df_secondary`: Only students enrolled in secondary education (thousands)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`df_tertiary`: Only students enrolled in tertiary education (thousands):'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE193]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Compare them using bar charts of the primary students'' enrollment of a low-income
    country and a high-income country:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE194]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the `primary_enrollment_india` data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE195]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.12: Data for enrollment in primary education in India'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_12.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.12: Data for enrollment in primary education in India'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Print the `primary_enrollment_USA` data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE196]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.13: Data for enrollment in primary education in USA'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_13.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.13: Data for enrollment in primary education in USA'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot the data for India:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE197]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.14: Bar plot for enrollment in primary education in India'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_14.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.14: Bar plot for enrollment in primary education in India'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot the data for the USA:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE198]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.15: Bar plot for enrollment in primary education in the USA'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_15.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.15: Bar plot for enrollment in primary education in the USA'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As we can see, we have missing data. Now is the time to use `pandas` methods
    to do the data imputation. But to do that, we need to create a DataFrame with
    missing values inserted into it – that is, we need to append another DataFrame
    with missing values to the current DataFrame.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Find the missing years:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE199]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the value in the `missing_years` variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE200]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE201]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a dictionary of values with `np.nan`. Note that there are nine missing
    data points, so we need to create a list with identical values repeated nine times:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE202]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a DataFrame of missing values (from the preceding dictionary) that we
    can `append`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE203]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Append the new DataFrames to the previously existing ones:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE204]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the data in `primary_enrollment_india`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE205]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.16: Partial Data for enrollment in primary education in India after
    appending'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: the data
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_16.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.16: Partial Data for enrollment in primary education in India after
    appending the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Sort by `year` and reset the indices using `reset_index`. Use `inplace=True`
    to execute the changes on the DataFrame itself:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE206]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the data in `primary_enrollment_india`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE207]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.17: Partial Data for enrollment in primary education in India after
    sorting the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_17.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.17: Partial Data for enrollment in primary education in India after
    sorting the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Use the `interpolate` method for linear interpolation. It fills all the `NaN`
    values with linearly interpolated values. Check out this link for more details
    about this method: [http://pandas.pydata.org/pandas-docs/version/0.17/generated/pandas.DataFrame.interpolate.html](http://pandas.pydata.org/pandas-docs/version/0.17/generated/pandas.DataFrame.interpolate.html):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE208]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the data in `primary_enrollment_india`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE209]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.18: Data for enrollment in primary education in India after interpolating
    the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_18.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.18: Data for enrollment in primary education in India after interpolating
    the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE210]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.19: Bar plot for enrollment in primary education in India'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_19.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.19: Bar plot for enrollment in primary education in India'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Repeat the same steps for the USA:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE211]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Print the value in `missing_years`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE212]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE213]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create `dict_missing`, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE214]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create the DataFrame for `df_missing`, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE215]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Append this to the `primary_enrollment_USA` variable, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE216]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Sort the values in the `primary_enrollment_USA` variable, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE217]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Reset the index of the `primary_enrollment_USA` variable, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE218]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Interpolate the `primary_enrollment_USA` variable, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE219]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Print the `primary_enrollment_USA` variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE220]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.20: Data for enrollment in primary education in the USA after all
    operations have been completed'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_20.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.20: Data for enrollment in primary education in the USA after all
    operations have been completed'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Still, the first value is unfilled. We can use the `limit` and `limit_direction`
    parameters with the interpolate method to fill it in. How did we know this? By
    searching on Google and looking at the StackOverflow page. Always search for the
    solution to your problem and look for what has already been done and try to implement
    it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE221]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.21: Data for enrollment in primary education in the USA after limiting
    the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_21.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.21: Data for enrollment in primary education in the USA after limiting
    the data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Print the data in `primary_enrollment_USA`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE222]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.22: Data for enrollment in primary education in the USA'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_22.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.22: Data for enrollment in primary education in the USA'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE223]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.23: Bar plot for enrollment in primary education in the USA'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_23.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.23: Bar plot for enrollment in primary education in the USA'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/3fyIqy8](https://packt.live/3fyIqy8).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3fQ0PXJ](https://packt.live/3fQ0PXJ).
  prefs: []
  type: TYPE_NORMAL
- en: 'Activity 9.02: Data Wrangling Task – Cleaning GDP Data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the required libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE224]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`pandas` `read_csv` method will throw an error if we try to read it normally.
    Let''s look at a step-by-step guide of how we can read useful information from
    it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE225]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Read the India World Bank Information `.csv` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE226]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output (partially shown) will be:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.24: Partial output of the warnings.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_24.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.24: Partial output of the warnings.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Then, let's take a look at the contents of the DataFrame.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE227]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.25: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_25.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.25: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: At times, the output may not be found because there are three rows instead of
    the expected one row.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Clearly, the delimiter in this file is tab (`\t`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE228]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.26: Partial output of the DataFrame from the India World Bank Information
    after using a delimiter'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_26.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.26: Partial output of the DataFrame from the India World Bank Information
    after using a delimiter'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Use the `skiprows` parameter to skip the first four rows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE229]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.27: Partial output of DataFrame from the India World Bank Information
    after'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: using skiprows
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_27.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE230]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.28: DataFrame focusing on GDP per capita'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_28.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.28: DataFrame focusing on GDP per capita'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'There is no index, so let''s use `reset_index` again:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE231]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.29: DataFrame from the India World Bank Information using reset_index'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_29.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.29: DataFrame from the India World Bank Information using reset_index'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The first three rows aren''t useful. We can redefine the DataFrame without
    them. Then, we re-index again:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE232]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.30: DataFrame from the India World Bank Information after dropping
    and resetting the index'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_30.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.30: DataFrame from the India World Bank Information after dropping
    and resetting the index'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let''s rename the columns properly (this is necessary for merging, which we
    will look at shortly):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE233]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.31: DataFrame focusing on Year and GDP'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_31.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.31: DataFrame focusing on Year and GDP'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'It looks like we have GDP data from 1960 onward. However, we are only interested
    in `2003 – 2016`. Let''s examine the last 20 rows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE234]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.32: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_32.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.32: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: So, we should be good with rows `43-56`. Let's create a DataFrame called `df_gdp:`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE235]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.33: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_33.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.33: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'We need to reset the index again (for merging):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE236]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.34: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_34.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.34: DataFrame from the India World Bank Information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The year in this DataFrame is not of the `int` type. So, it will have problems
    merging with the education DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE237]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.35: DataFrame focusing on year'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_35.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.35: DataFrame focusing on year'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Use the `apply` method with Python''s built-in `int` function. Ignore any warnings
    that are thrown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE238]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/3fyIqy8](https://packt.live/3fyIqy8).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3fQ0PXJ](https://packt.live/3fQ0PXJ).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Activity 9.03: Data Wrangling Task – Merging UN Data and GDP Data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, merge the two DataFrames, that is, `primary_enrollment_india` and `df_gdp`,
    on the `Year` column:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE239]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.36: Merged data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_36.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.36: Merged data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, we can drop the `Data`, `Footnotes`, and `Region/Country/Area` columns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE240]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.37: Merged data after dropping the Data, Footnotes,'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: and Region/Country/Area columns
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_37.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.37: Merged data after dropping the Data, Footnotes, and Region/Country/Area
    columns'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Rearrange the columns for proper viewing and presentation to a data scientist:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE241]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.38: Merged data after rearranging the columns'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_38.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.38: Merged data after rearranging the columns'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Plot the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE242]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.39: Scatter plot of merged data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B15780_09_39.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 9.39: Scatter plot of merged data'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/3fyIqy8](https://packt.live/3fyIqy8).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3fQ0PXJ](https://packt.live/3fQ0PXJ).
  prefs: []
  type: TYPE_NORMAL
- en: 'Activity 9.04: Data Wrangling Task – Connecting the New Data to the Database'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the steps to complete this activity:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Connect to a database and start writing values in it. We start by importing
    the `sqlite3` module of Python and then use the `connect` function to connect
    to a database. Designate `Year` as the `PRIMARY KEY` of this table:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE243]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run a loop with the dataset rows one by one to insert them into the table:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE244]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: If we look at the current folder, we should see a file called `Education_GDP.db`,
    and if we can examine that using a database viewer program, we will see that the
    data has been transferred there.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To access the source code for this specific section, please refer to [https://packt.live/3fyIqy8](https://packt.live/3fyIqy8).
  prefs: []
  type: TYPE_NORMAL
- en: You can also run this example online at [https://packt.live/3fQ0PXJ](https://packt.live/3fQ0PXJ).
  prefs: []
  type: TYPE_NORMAL
- en: Contents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[The Data Wrangling Workshop](B15780_FM_Final_SMP.xhtml#_idParaDest-1)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Second Edition](B15780_FM_Final_SMP.xhtml#_idParaDest-2)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Preface](B15780_Preface_Final_NT.xhtml#_idParaDest-3)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[About the Book](B15780_Preface_Final_NT.xhtml#_idParaDest-4)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Audience](B15780_Preface_Final_NT.xhtml#_idParaDest-5)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[About the Chapters](B15780_Preface_Final_NT.xhtml#_idParaDest-6)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Conventions](B15780_Preface_Final_NT.xhtml#_idParaDest-7)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Code Presentation](B15780_Preface_Final_NT.xhtml#_idParaDest-8)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Setting up Your Environment](B15780_Preface_Final_NT.xhtml#_idParaDest-9)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Installing Python](B15780_Preface_Final_NT.xhtml#_idParaDest-10)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Installing Python on Windows](B15780_Preface_Final_NT.xhtml#_idParaDest-11)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Installing Python on Linux](B15780_Preface_Final_NT.xhtml#_idParaDest-12)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Installing Python on MacOS](B15780_Preface_Final_NT.xhtml#_idParaDest-13)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Installing Libraries](B15780_Preface_Final_NT.xhtml#_idParaDest-14)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Project Jupyter](B15780_Preface_Final_NT.xhtml#_idParaDest-15)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Accessing the Code Files](B15780_Preface_Final_NT.xhtml#_idParaDest-16)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[1\. Introduction to Data Wrangling with Python](B15780_01_Final_SMP.xhtml#_idParaDest-17)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_01_Final_SMP.xhtml#_idParaDest-18)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Importance of Data Wrangling](B15780_01_Final_SMP.xhtml#_idParaDest-19)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Python for Data Wrangling](B15780_01_Final_SMP.xhtml#_idParaDest-20)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Lists, Sets, Strings, Tuples, and Dictionaries](B15780_01_Final_SMP.xhtml#_idParaDest-21)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Lists](B15780_01_Final_SMP.xhtml#_idParaDest-22)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[List Functions](B15780_01_Final_SMP.xhtml#_idParaDest-23)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.01: Accessing the List Members](B15780_01_Final_SMP.xhtml#_idParaDest-24)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.02: Generating and Iterating through a List](B15780_01_Final_SMP.xhtml#_idParaDest-25)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.03: Iterating over a List and Checking Membership](B15780_01_Final_SMP.xhtml#_idParaDest-26)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.04: Sorting a List](B15780_01_Final_SMP.xhtml#_idParaDest-27)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.05: Generating a Random List](B15780_01_Final_SMP.xhtml#_idParaDest-28)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 1.01: Handling Lists](B15780_01_Final_SMP.xhtml#_idParaDest-29)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Sets](B15780_01_Final_SMP.xhtml#_idParaDest-30)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction to Sets](B15780_01_Final_SMP.xhtml#_idParaDest-31)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Union and Intersection of Sets](B15780_01_Final_SMP.xhtml#_idParaDest-32)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Creating Null Sets](B15780_01_Final_SMP.xhtml#_idParaDest-33)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Dictionary](B15780_01_Final_SMP.xhtml#_idParaDest-34)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.06: Accessing and Setting Values in a Dictionary](B15780_01_Final_SMP.xhtml#_idParaDest-35)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.07: Iterating over a Dictionary](B15780_01_Final_SMP.xhtml#_idParaDest-36)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.08: Revisiting the Unique Valued List Problem](B15780_01_Final_SMP.xhtml#_idParaDest-37)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.09: Deleting a Value from Dict](B15780_01_Final_SMP.xhtml#_idParaDest-38)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.10: Dictionary Comprehension](B15780_01_Final_SMP.xhtml#_idParaDest-39)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Tuples](B15780_01_Final_SMP.xhtml#_idParaDest-40)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Creating a Tuple with Different Cardinalities](B15780_01_Final_SMP.xhtml#_idParaDest-41)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Unpacking a Tuple](B15780_01_Final_SMP.xhtml#_idParaDest-42)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.11: Handling Tuples](B15780_01_Final_SMP.xhtml#_idParaDest-43)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Strings](B15780_01_Final_SMP.xhtml#_idParaDest-44)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.12: Accessing Strings](B15780_01_Final_SMP.xhtml#_idParaDest-45)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.13: String Slices](B15780_01_Final_SMP.xhtml#_idParaDest-46)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[String Functions](B15780_01_Final_SMP.xhtml#_idParaDest-47)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1.14: Splitting and Joining a String](B15780_01_Final_SMP.xhtml#_idParaDest-48)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 1.02: Analyzing a Multiline String and Generating the Unique Word
    Count](B15780_01_Final_SMP.xhtml#_idParaDest-49)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_01_Final_SMP.xhtml#_idParaDest-50)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[2\. Advanced Operations on Built-In Data Structures](B15780_02_Final_SMP.xhtml#_idParaDest-51)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_02_Final_SMP.xhtml#_idParaDest-52)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Advanced Data Structures](B15780_02_Final_SMP.xhtml#_idParaDest-53)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Iterator](B15780_02_Final_SMP.xhtml#_idParaDest-54)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.01: Introducing to the Iterator](B15780_02_Final_SMP.xhtml#_idParaDest-55)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Stacks](B15780_02_Final_SMP.xhtml#_idParaDest-56)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.02: Implementing a Stack in Python](B15780_02_Final_SMP.xhtml#_idParaDest-57)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.03: Implementing a Stack Using User-Defined Methods](B15780_02_Final_SMP.xhtml#_idParaDest-58)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Lambda Expressions](B15780_02_Final_SMP.xhtml#_idParaDest-59)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.04: Implementing a Lambda Expression](B15780_02_Final_SMP.xhtml#_idParaDest-60)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.05: Lambda Expression for Sorting](B15780_02_Final_SMP.xhtml#_idParaDest-61)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.06: Multi-Element Membership Checking](B15780_02_Final_SMP.xhtml#_idParaDest-62)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Queue](B15780_02_Final_SMP.xhtml#_idParaDest-63)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.07: Implementing a Queue in Python](B15780_02_Final_SMP.xhtml#_idParaDest-64)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 2.01: Permutation, Iterator, Lambda, and List](B15780_02_Final_SMP.xhtml#_idParaDest-65)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Basic File Operations in Python](B15780_02_Final_SMP.xhtml#_idParaDest-66)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.08: File Operations](B15780_02_Final_SMP.xhtml#_idParaDest-67)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[File Handling](B15780_02_Final_SMP.xhtml#_idParaDest-68)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.09: Opening and Closing a File](B15780_02_Final_SMP.xhtml#_idParaDest-69)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The with Statement](B15780_02_Final_SMP.xhtml#_idParaDest-70)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Opening a File Using the with Statement](B15780_02_Final_SMP.xhtml#_idParaDest-71)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.10: Reading a File Line by Line](B15780_02_Final_SMP.xhtml#_idParaDest-72)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2.11: Writing to a File](B15780_02_Final_SMP.xhtml#_idParaDest-73)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 2.02: Designing Your Own CSV Parser](B15780_02_Final_SMP.xhtml#_idParaDest-74)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_02_Final_SMP.xhtml#_idParaDest-75)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[3\. Introduction to NumPy, Pandas, and Matplotlib](B15780_03_Final_SMP.xhtml#_idParaDest-76)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_03_Final_SMP.xhtml#_idParaDest-77)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[NumPy Arrays](B15780_03_Final_SMP.xhtml#_idParaDest-78)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[NumPy Arrays and Features](B15780_03_Final_SMP.xhtml#_idParaDest-79)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.01: Creating a NumPy Array (from a List)](B15780_03_Final_SMP.xhtml#_idParaDest-80)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.02: Adding Two NumPy Arrays](B15780_03_Final_SMP.xhtml#_idParaDest-81)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.03: Mathematical Operations on NumPy Arrays](B15780_03_Final_SMP.xhtml#_idParaDest-82)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Advanced Mathematical Operations](B15780_03_Final_SMP.xhtml#_idParaDest-83)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.04: Advanced Mathematical Operations on NumPy Arrays](B15780_03_Final_SMP.xhtml#_idParaDest-84)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.05: Generating Arrays Using arange and linspace Methods](B15780_03_Final_SMP.xhtml#_idParaDest-85)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.06: Creating Multi-Dimensional Arrays](B15780_03_Final_SMP.xhtml#_idParaDest-86)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.07: The Dimension, Shape, Size, and Data Type of Two-dimensional
    Arrays](B15780_03_Final_SMP.xhtml#_idParaDest-87)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.08: Zeros, Ones, Random, Identity Matrices, and Vectors](B15780_03_Final_SMP.xhtml#_idParaDest-88)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.09: Reshaping, Ravel, Min, Max, and Sorting](B15780_03_Final_SMP.xhtml#_idParaDest-89)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.10: Indexing and Slicing](B15780_03_Final_SMP.xhtml#_idParaDest-90)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Conditional SubSetting](B15780_03_Final_SMP.xhtml#_idParaDest-91)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.11: Array Operations](B15780_03_Final_SMP.xhtml#_idParaDest-92)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Stacking Arrays](B15780_03_Final_SMP.xhtml#_idParaDest-93)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Pandas DataFrames](B15780_03_Final_SMP.xhtml#_idParaDest-94)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.12: Creating a Pandas Series](B15780_03_Final_SMP.xhtml#_idParaDest-95)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.13: Pandas Series and Data Handling](B15780_03_Final_SMP.xhtml#_idParaDest-96)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.14: Creating Pandas DataFrames](B15780_03_Final_SMP.xhtml#_idParaDest-97)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.15: Viewing a DataFrame Partially](B15780_03_Final_SMP.xhtml#_idParaDest-98)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Indexing and Slicing Columns](B15780_03_Final_SMP.xhtml#_idParaDest-99)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Indexing and Slicing Rows](B15780_03_Final_SMP.xhtml#_idParaDest-100)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.16: Creating and Deleting a New Column or Row](B15780_03_Final_SMP.xhtml#_idParaDest-101)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Statistics and Visualization with NumPy and Pandas](B15780_03_Final_SMP.xhtml#_idParaDest-102)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Refresher on Basic Descriptive Statistics](B15780_03_Final_SMP.xhtml#_idParaDest-103)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.17: Introduction to Matplotlib through a Scatter Plot](B15780_03_Final_SMP.xhtml#_idParaDest-104)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The Definition of Statistical Measures – Central Tendency and Spread](B15780_03_Final_SMP.xhtml#_idParaDest-105)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Random Variables and Probability Distribution](B15780_03_Final_SMP.xhtml#_idParaDest-106)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[What is a Probability Distribution?](B15780_03_Final_SMP.xhtml#_idParaDest-107)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Discrete Distributions](B15780_03_Final_SMP.xhtml#_idParaDest-108)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Continuous Distributions](B15780_03_Final_SMP.xhtml#_idParaDest-109)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Wrangling in Statistics and Visualization](B15780_03_Final_SMP.xhtml#_idParaDest-110)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using NumPy and Pandas to Calculate Basic Descriptive Statistics](B15780_03_Final_SMP.xhtml#_idParaDest-111)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Random Number Generation Using NumPy](B15780_03_Final_SMP.xhtml#_idParaDest-112)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.18: Generating Random Numbers from a Uniform Distribution](B15780_03_Final_SMP.xhtml#_idParaDest-113)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.19: Generating Random Numbers from a Binomial Distribution and
    Bar Plot](B15780_03_Final_SMP.xhtml#_idParaDest-114)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.20: Generating Random Numbers from a Normal Distribution and Histograms](B15780_03_Final_SMP.xhtml#_idParaDest-115)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.21: Calculating Descriptive Statistics from a DataFrame](B15780_03_Final_SMP.xhtml#_idParaDest-116)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3.22: Built-in Plotting Utilities](B15780_03_Final_SMP.xhtml#_idParaDest-117)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 3.01: Generating Statistics from a CSV File](B15780_03_Final_SMP.xhtml#_idParaDest-118)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_03_Final_SMP.xhtml#_idParaDest-119)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[4\. A Deep Dive into Data Wrangling with Python](B15780_04_Final_SMP.xhtml#_idParaDest-120)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_04_Final_SMP.xhtml#_idParaDest-121)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Subsetting, Filtering, and Grouping](B15780_04_Final_SMP.xhtml#_idParaDest-122)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.01: Examining the Superstore Sales Data in an Excel File](B15780_04_Final_SMP.xhtml#_idParaDest-123)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Subsetting the DataFrame](B15780_04_Final_SMP.xhtml#_idParaDest-124)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[An Example Use Case – Determining Statistics on Sales and Profit](B15780_04_Final_SMP.xhtml#_idParaDest-125)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.02: The unique Function](B15780_04_Final_SMP.xhtml#_idParaDest-126)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Conditional Selection and Boolean Filtering](B15780_04_Final_SMP.xhtml#_idParaDest-127)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.03: Setting and Resetting the Index](B15780_04_Final_SMP.xhtml#_idParaDest-128)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The GroupBy Method](B15780_04_Final_SMP.xhtml#_idParaDest-129)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.04: The GroupBy Method](B15780_04_Final_SMP.xhtml#_idParaDest-130)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Detecting Outliers and Handling Missing Values](B15780_04_Final_SMP.xhtml#_idParaDest-131)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Missing Values in Pandas](B15780_04_Final_SMP.xhtml#_idParaDest-132)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.05: Filling in the Missing Values Using the fillna Method](B15780_04_Final_SMP.xhtml#_idParaDest-133)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The dropna Method](B15780_04_Final_SMP.xhtml#_idParaDest-134)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.06: Dropping Missing Values with dropna](B15780_04_Final_SMP.xhtml#_idParaDest-135)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Outlier Detection Using a Simple Statistical Test](B15780_04_Final_SMP.xhtml#_idParaDest-136)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Concatenating, Merging, and Joining](B15780_04_Final_SMP.xhtml#_idParaDest-137)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.07: Concatenation in Datasets](B15780_04_Final_SMP.xhtml#_idParaDest-138)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Merging by a Common Key](B15780_04_Final_SMP.xhtml#_idParaDest-139)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.08: Merging by a Common Key](B15780_04_Final_SMP.xhtml#_idParaDest-140)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The join Method](B15780_04_Final_SMP.xhtml#_idParaDest-141)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.09: The join Method](B15780_04_Final_SMP.xhtml#_idParaDest-142)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Useful Methods of Pandas](B15780_04_Final_SMP.xhtml#_idParaDest-143)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Randomized Sampling](B15780_04_Final_SMP.xhtml#_idParaDest-144)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.10: Randomized Sampling](B15780_04_Final_SMP.xhtml#_idParaDest-145)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The value_counts Method](B15780_04_Final_SMP.xhtml#_idParaDest-146)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Pivot Table Functionality](B15780_04_Final_SMP.xhtml#_idParaDest-147)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.11: Sorting by Column Values – the sort_values Method](B15780_04_Final_SMP.xhtml#_idParaDest-148)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4.12: Flexibility of User-Defined Functions with the apply Method](B15780_04_Final_SMP.xhtml#_idParaDest-149)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 4.01: Working with the Adult Income Dataset (UCI)](B15780_04_Final_SMP.xhtml#_idParaDest-150)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_04_Final_SMP.xhtml#_idParaDest-151)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[5\. Getting Comfortable with Different Kinds of Data Sources](B15780_05_Final_RK.xhtml#_idParaDest-152)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_05_Final_RK.xhtml#_idParaDest-153)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading Data from Different Sources](B15780_05_Final_RK.xhtml#_idParaDest-154)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Files Provided with This Chapter](B15780_05_Final_RK.xhtml#_idParaDest-155)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Libraries to Install for This Chapter](B15780_05_Final_RK.xhtml#_idParaDest-156)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading Data Using Pandas](B15780_05_Final_RK.xhtml#_idParaDest-157)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.01: Working with Headers When Reading Data from a CSV File](B15780_05_Final_RK.xhtml#_idParaDest-158)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.02: Reading from a CSV File Where Delimiters Are Not Commas](B15780_05_Final_RK.xhtml#_idParaDest-159)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.03: Bypassing and Renaming the Headers of a CSV File](B15780_05_Final_RK.xhtml#_idParaDest-160)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.04: Skipping Initial Rows and Footers When Reading a CSV File](B15780_05_Final_RK.xhtml#_idParaDest-161)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading Only the First N Rows](B15780_05_Final_RK.xhtml#_idParaDest-162)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.05: Combining skiprows and nrows to Read Data in Small Chunks](B15780_05_Final_RK.xhtml#_idParaDest-163)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Setting the skip_blank_lines Option](B15780_05_Final_RK.xhtml#_idParaDest-164)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading CSV Data from a Zip File](B15780_05_Final_RK.xhtml#_idParaDest-165)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading from an Excel File Using sheet_name and Handling a Distinct sheet_name](B15780_05_Final_RK.xhtml#_idParaDest-166)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.06: Reading a General Delimited Text File](B15780_05_Final_RK.xhtml#_idParaDest-167)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading HTML Tables Directly from a URL](B15780_05_Final_RK.xhtml#_idParaDest-168)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.07: Further Wrangling to Get the Desired Data](B15780_05_Final_RK.xhtml#_idParaDest-169)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading from a JSON file](B15780_05_Final_RK.xhtml#_idParaDest-170)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.08: Reading from a JSON File](B15780_05_Final_RK.xhtml#_idParaDest-171)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading a PDF File](B15780_05_Final_RK.xhtml#_idParaDest-172)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.09: Reading Tabular Data from a PDF File](B15780_05_Final_RK.xhtml#_idParaDest-173)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction to Beautiful Soup 4 and Web Page Parsing](B15780_05_Final_RK.xhtml#_idParaDest-174)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Structure of HTML](B15780_05_Final_RK.xhtml#_idParaDest-175)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.10: Reading an HTML File and Extracting Its Contents Using Beautiful
    Soup](B15780_05_Final_RK.xhtml#_idParaDest-176)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.11: DataFrames and BeautifulSoup](B15780_05_Final_RK.xhtml#_idParaDest-177)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.12: Exporting a DataFrame as an Excel File](B15780_05_Final_RK.xhtml#_idParaDest-178)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5.13: Stacking URLs from a Document Using bs4](B15780_05_Final_RK.xhtml#_idParaDest-179)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 5.01: Reading Tabular Data from a Web Page and Creating DataFrames](B15780_05_Final_RK.xhtml#_idParaDest-180)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_05_Final_RK.xhtml#_idParaDest-181)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[6\. Learning the Hidden Secrets of Data Wrangling](B15780_06_Final_RK.xhtml#_idParaDest-182)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_06_Final_RK.xhtml#_idParaDest-183)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Advanced List Comprehension and the zip Function](B15780_06_Final_RK.xhtml#_idParaDest-184)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction to Generator Expressions](B15780_06_Final_RK.xhtml#_idParaDest-185)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.01: Generator Expressions](B15780_06_Final_RK.xhtml#_idParaDest-186)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.02: Single-Line Generator Expression](B15780_06_Final_RK.xhtml#_idParaDest-187)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.03: Extracting a List with Single Words](B15780_06_Final_RK.xhtml#_idParaDest-188)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.04: The zip Function](B15780_06_Final_RK.xhtml#_idParaDest-189)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.05: Handling Messy Data](B15780_06_Final_RK.xhtml#_idParaDest-190)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Formatting](B15780_06_Final_RK.xhtml#_idParaDest-191)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The % operator](B15780_06_Final_RK.xhtml#_idParaDest-192)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using the format Function](B15780_06_Final_RK.xhtml#_idParaDest-193)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.06: Data Representation Using {}](B15780_06_Final_RK.xhtml#_idParaDest-194)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Identifying and Cleaning Outliers](B15780_06_Final_RK.xhtml#_idParaDest-195)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.07: Outliers in Numerical Data](B15780_06_Final_RK.xhtml#_idParaDest-196)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Z-score](B15780_06_Final_RK.xhtml#_idParaDest-197)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.08: The Z-Score Value to Remove Outliers](B15780_06_Final_RK.xhtml#_idParaDest-198)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Levenshtein Distance](B15780_06_Final_RK.xhtml#_idParaDest-199)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Additional Software Required for This Section](B15780_06_Final_RK.xhtml#_idParaDest-200)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6.09: Fuzzy String Matching](B15780_06_Final_RK.xhtml#_idParaDest-201)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 6.01: Handling Outliers and Missing Data](B15780_06_Final_RK.xhtml#_idParaDest-202)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_06_Final_RK.xhtml#_idParaDest-203)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[7\. Advanced Web Scraping and Data Gathering](B15780_07_Final_SZ.xhtml#_idParaDest-204)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_07_Final_SZ.xhtml#_idParaDest-205)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The Requests and BeautifulSoup Libraries](B15780_07_Final_SZ.xhtml#_idParaDest-206)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.01: Using the Requests Library to Get a Response from the Wikipedia
    Home Page](B15780_07_Final_SZ.xhtml#_idParaDest-207)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.02: Checking the Status of the Web Request](B15780_07_Final_SZ.xhtml#_idParaDest-208)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Checking the Encoding of a Web Page](B15780_07_Final_SZ.xhtml#_idParaDest-209)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.03: Decoding the Contents of a Response and Checking Its Length](B15780_07_Final_SZ.xhtml#_idParaDest-210)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.04: Extracting Readable Text from a BeautifulSoup Object](B15780_07_Final_SZ.xhtml#_idParaDest-211)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Extracting Text from a Section](B15780_07_Final_SZ.xhtml#_idParaDest-212)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Extracting Important Historical Events that Happened on Today''s Date](B15780_07_Final_SZ.xhtml#_idParaDest-213)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.05: Using Advanced BS4 Techniques to Extract Relevant Text](B15780_07_Final_SZ.xhtml#_idParaDest-214)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.06: Creating a Compact Function to Extract the On this day Text
    from the Wikipedia Home Page](B15780_07_Final_SZ.xhtml#_idParaDest-215)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading Data from XML](B15780_07_Final_SZ.xhtml#_idParaDest-216)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.07: Creating an XML File and Reading XML Element Objects](B15780_07_Final_SZ.xhtml#_idParaDest-217)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.08: Finding Various Elements of Data within a Tree (Element)](B15780_07_Final_SZ.xhtml#_idParaDest-218)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading from a Local XML File into an ElementTree Object](B15780_07_Final_SZ.xhtml#_idParaDest-219)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.09: Traversing the Tree, Finding the Root, and Exploring All the
    Child Nodes and Their Tags and Attributes](B15780_07_Final_SZ.xhtml#_idParaDest-220)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.10: Using the text Method to Extract Meaningful Data](B15780_07_Final_SZ.xhtml#_idParaDest-221)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Extracting and Printing the GDP/Per Capita Information Using a Loop](B15780_07_Final_SZ.xhtml#_idParaDest-222)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Finding All the Neighboring Countries for Each Country and Printing Them](B15780_07_Final_SZ.xhtml#_idParaDest-223)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.11: A Simple Demo of Using XML Data Obtained by Web Scraping](B15780_07_Final_SZ.xhtml#_idParaDest-224)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading Data from an API](B15780_07_Final_SZ.xhtml#_idParaDest-225)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Defining the Base URL (or API Endpoint)](B15780_07_Final_SZ.xhtml#_idParaDest-226)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.12: Defining and Testing a Function to Pull Country Data from an
    API](B15780_07_Final_SZ.xhtml#_idParaDest-227)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using the Built-In JSON Library to Read and Examine Data](B15780_07_Final_SZ.xhtml#_idParaDest-228)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Printing All the Data Elements](B15780_07_Final_SZ.xhtml#_idParaDest-229)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using a Function that Extracts a DataFrame Containing Key Information](B15780_07_Final_SZ.xhtml#_idParaDest-230)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.13: Testing the Function by Building a Small Database of Country
    Information](B15780_07_Final_SZ.xhtml#_idParaDest-231)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Fundamentals of Regular Expressions (RegEx)](B15780_07_Final_SZ.xhtml#_idParaDest-232)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[RegEx in the Context of Web Scraping](B15780_07_Final_SZ.xhtml#_idParaDest-233)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.14: Using the match Method to Check Whether a Pattern Matches a
    String/Sequence](B15780_07_Final_SZ.xhtml#_idParaDest-234)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using the compile Method to Create a RegEx Program](B15780_07_Final_SZ.xhtml#_idParaDest-235)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.15: Compiling Programs to Match Objects](B15780_07_Final_SZ.xhtml#_idParaDest-236)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.16: Using Additional Parameters in the match Method to Check for
    Positional Matching](B15780_07_Final_SZ.xhtml#_idParaDest-237)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Finding the Number of Words in a List That End with "ing"](B15780_07_Final_SZ.xhtml#_idParaDest-238)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The search Method in RegEx](B15780_07_Final_SZ.xhtml#_idParaDest-239)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.17: The search Method in RegEx](B15780_07_Final_SZ.xhtml#_idParaDest-240)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.18: Using the span Method of the Match Object to Locate the Position
    of the Matched Pattern](B15780_07_Final_SZ.xhtml#_idParaDest-241)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.19: Examples of Single-Character Pattern Matching with search](B15780_07_Final_SZ.xhtml#_idParaDest-242)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.20: Handling Pattern Matching at the Start or End of a String](B15780_07_Final_SZ.xhtml#_idParaDest-243)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.21: Pattern Matching with Multiple Characters](B15780_07_Final_SZ.xhtml#_idParaDest-244)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.22: Greedy versus Non-Greedy Matching](B15780_07_Final_SZ.xhtml#_idParaDest-245)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.23: Controlling Repetitions to Match in a Text](B15780_07_Final_SZ.xhtml#_idParaDest-246)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Sets of Matching Characters](B15780_07_Final_SZ.xhtml#_idParaDest-247)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.24: Sets of Matching Characters](B15780_07_Final_SZ.xhtml#_idParaDest-248)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7.25: The Use of OR in RegEx Using the OR Operator](B15780_07_Final_SZ.xhtml#_idParaDest-249)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The findall Method](B15780_07_Final_SZ.xhtml#_idParaDest-250)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 7.01: Extracting the Top 100 e-books from Gutenberg](B15780_07_Final_SZ.xhtml#_idParaDest-251)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 7.02: Building Your Own Movie Database by Reading an API](B15780_07_Final_SZ.xhtml#_idParaDest-252)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_07_Final_SZ.xhtml#_idParaDest-253)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[8\. RDBMS and SQL](B15780_08_Final_SZ.xhtml#_idParaDest-254)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_08_Final_SZ.xhtml#_idParaDest-255)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Refresher of RDBMS and SQL](B15780_08_Final_SZ.xhtml#_idParaDest-256)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[How Is an RDBMS Structured?](B15780_08_Final_SZ.xhtml#_idParaDest-257)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[SQL](B15780_08_Final_SZ.xhtml#_idParaDest-258)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using an RDBMS (MySQL/PostgreSQL/SQLite)](B15780_08_Final_SZ.xhtml#_idParaDest-259)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8.01: Connecting to a Database in SQLite](B15780_08_Final_SZ.xhtml#_idParaDest-260)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[DDL and DML Commands in SQLite](B15780_08_Final_SZ.xhtml#_idParaDest-261)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8.02: Using DDL and DML Commands in SQLite](B15780_08_Final_SZ.xhtml#_idParaDest-262)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reading Data from a Database in SQLite](B15780_08_Final_SZ.xhtml#_idParaDest-263)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8.03: Sorting Values That Are Present in the Database](B15780_08_Final_SZ.xhtml#_idParaDest-264)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The ALTER Command](B15780_08_Final_SZ.xhtml#_idParaDest-265)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8.04: Altering the Structure of a Table and Updating the New Fields](B15780_08_Final_SZ.xhtml#_idParaDest-266)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The GROUP BY clause](B15780_08_Final_SZ.xhtml#_idParaDest-267)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8.05: Grouping Values in Tables](B15780_08_Final_SZ.xhtml#_idParaDest-268)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Relation Mapping in Databases](B15780_08_Final_SZ.xhtml#_idParaDest-269)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Adding Rows in the comments Table](B15780_08_Final_SZ.xhtml#_idParaDest-270)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Joins](B15780_08_Final_SZ.xhtml#_idParaDest-271)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Retrieving Specific Columns from a JOIN Query](B15780_08_Final_SZ.xhtml#_idParaDest-272)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Deleting Rows from Tables](B15780_08_Final_SZ.xhtml#_idParaDest-273)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8.06: Deleting Rows from Tables](B15780_08_Final_SZ.xhtml#_idParaDest-274)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Updating Specific Values in a Table](B15780_08_Final_SZ.xhtml#_idParaDest-275)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8.07: RDBMS and DataFrames](B15780_08_Final_SZ.xhtml#_idParaDest-276)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 8.01: Retrieving Data Accurately from Databases](B15780_08_Final_SZ.xhtml#_idParaDest-277)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_08_Final_SZ.xhtml#_idParaDest-278)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[9\. Applications in Business Use Cases and Conclusion of the Course](B15780_09_Final_SZ.xhtml#_idParaDest-279)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](B15780_09_Final_SZ.xhtml#_idParaDest-280)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Applying Your Knowledge to a Data Wrangling Task](B15780_09_Final_SZ.xhtml#_idParaDest-281)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.01: Data Wrangling Task – Fixing UN Data](B15780_09_Final_SZ.xhtml#_idParaDest-282)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.02: Data Wrangling Task – Cleaning GDP Data](B15780_09_Final_SZ.xhtml#_idParaDest-283)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.03: Data Wrangling Task – Merging UN Data and GDP Data](B15780_09_Final_SZ.xhtml#_idParaDest-284)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.04: Data Wrangling Task – Connecting the New Data to the Database](B15780_09_Final_SZ.xhtml#_idParaDest-285)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[An Extension to Data Wrangling](B15780_09_Final_SZ.xhtml#_idParaDest-286)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Additional Skills Required to Become a Data Scientist](B15780_09_Final_SZ.xhtml#_idParaDest-287)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Basic Familiarity with Big Data and Cloud Technologies](B15780_09_Final_SZ.xhtml#_idParaDest-288)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[What Goes with Data Wrangling?](B15780_09_Final_SZ.xhtml#_idParaDest-289)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Tips and Tricks for Mastering Machine Learning](B15780_09_Final_SZ.xhtml#_idParaDest-290)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](B15780_09_Final_SZ.xhtml#_idParaDest-291)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Appendix](B15780_Solution_Final_RK.xhtml#_idParaDest-292)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[1\. Introduction to Data Wrangling with Python](B15780_Solution_Final_RK.xhtml#_idParaDest-293)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 1.01: Handling Lists](B15780_Solution_Final_RK.xhtml#_idParaDest-294)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 1.02: Analyzing a Multiline String and Generating the Unique Word
    Count](B15780_Solution_Final_RK.xhtml#_idParaDest-295)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[2\. Advanced Operations on Built-In Data Structures](B15780_Solution_Final_RK.xhtml#_idParaDest-296)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 2.01: Permutation, Iterator, Lambda, and List](B15780_Solution_Final_RK.xhtml#_idParaDest-297)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 2.02: Designing Your Own CSV Parser](B15780_Solution_Final_RK.xhtml#_idParaDest-298)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[3\. Introduction to NumPy, Pandas, and Matplotlib](B15780_Solution_Final_RK.xhtml#_idParaDest-299)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 3.01: Generating Statistics from a CSV File](B15780_Solution_Final_RK.xhtml#_idParaDest-300)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[4\. A Deep Dive into Data Wrangling with Python](B15780_Solution_Final_RK.xhtml#_idParaDest-301)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 4.01: Working with the Adult Income Dataset (UCI)](B15780_Solution_Final_RK.xhtml#_idParaDest-302)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[5\. Getting Comfortable with Different Kinds of Data Sources](B15780_Solution_Final_RK.xhtml#_idParaDest-303)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 5.01: Reading Tabular Data from a Web Page and Creating DataFrames](B15780_Solution_Final_RK.xhtml#_idParaDest-304)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[6\. Learning the Hidden Secrets of Data Wrangling](B15780_Solution_Final_RK.xhtml#_idParaDest-305)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 6.01: Handling Outliers and Missing Data](B15780_Solution_Final_RK.xhtml#_idParaDest-306)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[7\. Advanced Web Scraping and Data Gathering](B15780_Solution_Final_RK.xhtml#_idParaDest-307)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 7.01: Extracting the Top 100 e-books from Gutenberg](B15780_Solution_Final_RK.xhtml#_idParaDest-308)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 7.02: Building Your Own Movie Database by Reading an API](B15780_Solution_Final_RK.xhtml#_idParaDest-309)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[8\. RDBMS and SQL](B15780_Solution_Final_RK.xhtml#_idParaDest-310)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 8.01: Retrieving Data Accurately from Databases](B15780_Solution_Final_RK.xhtml#_idParaDest-311)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[9\. Applications in Business Use Cases and Conclusion of the Course](B15780_Solution_Final_RK.xhtml#_idParaDest-312)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.01: Data Wrangling Task – Fixing UN Data](B15780_Solution_Final_RK.xhtml#_idParaDest-313)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.02: Data Wrangling Task – Cleaning GDP Data](B15780_Solution_Final_RK.xhtml#_idParaDest-314)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.03: Data Wrangling Task – Merging UN Data and GDP Data](B15780_Solution_Final_RK.xhtml#_idParaDest-315)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9.04: Data Wrangling Task – Connecting the New Data to the Database](B15780_Solution_Final_RK.xhtml#_idParaDest-316)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Landmarks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Cover](Images/cover.xhtml)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Table of Contents](B15780_FM_Final_SMP.xhtml#_idContainer004)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
