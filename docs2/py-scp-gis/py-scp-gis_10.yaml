- en: Geoprocessing with a GPU Database
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GPU 数据库进行地理处理
- en: With the emergence of multi-core GPUs, new database technologies have been developed
    to take advantage of this improved technology. MapD, a startup based in San Francisco,
    is one example of these companies. Their GPU-based database technology was made
    open source in 2017 and is available for use on cloud services, such as **Amazon
    Web Services** (**AWS**) and Microsoft Azure. By combining the parallelization
    potential of GPUs with a relational database, the MapD database improves the speed
    of database queries and visualizations based on the data.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 随着多核 GPU 的出现，新的数据库技术被开发出来以利用这项改进的技术。MapD 是一家位于旧金山的初创公司，是这些公司的一个例子。他们的基于 GPU
    的数据库技术在 2017 年开源，并可在云服务上使用，例如 **Amazon Web Services** (**AWS**) 和 Microsoft Azure。通过结合
    GPU 的并行化潜力与关系数据库，MapD 数据库提高了基于数据的数据库查询和可视化的速度。
- en: MapD has created a Python 3 module, `pymapd`, that allows users to connect to
    the database and automate queries. This Python binding allows geospatial professionals
    to integrate the speed of a GPU database into an existing geospatial architecture,
    adding speed improvements to analysis and queries. Both of MapD's core offerings
    (the open source community version and the commercial enterprise version) are
    supported by `pymapd`.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MapD 创建了一个 Python 3 模块 `pymapd`，允许用户连接到数据库并自动化查询。这个 Python 绑定使得地理空间专业人士能够将 GPU
    数据库的速度集成到现有的地理空间架构中，从而提高分析和查询的速度。MapD 的两个核心产品（开源社区版本和商业企业版本）都由 `pymapd` 支持。
- en: In addition to the Python module, MapD has added geospatial capabilities to
    their database technology. Storage of points, lines, and polygons is now supported,
    as is a spatial analysis engine that offers distance and contains functionality.
    Also, MapD has developed a visualization component, **Immerse**, that allows for
    analytical dashboards to be built quickly, with the database as a backend.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 Python 模块之外，MapD 还将地理空间功能添加到他们的数据库技术中。现在支持点、线和多边形的存储，以及提供距离和包含功能的地理分析引擎。此外，MapD
    开发了一个可视化组件 **Immerse**，允许快速构建分析仪表板，数据库作为后端。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Create a GPU database in the cloud
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云中创建 GPU 数据库
- en: Explore data visualizations using Immerse and the SQL EDITOR
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Immerse 和 SQL 编辑器探索数据可视化
- en: Use `pymapd` to load spatial and tabular data into the database
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `pymapd` 将空间和表格数据加载到数据库中
- en: Use `pymapd` to query the database
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `pymapd` 查询数据库
- en: Integrate the cloud database into a GIS architecture
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将云数据库集成到 GIS 架构中
- en: Cloud geodatabase solutions
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云地理数据库解决方案
- en: Cloud storage of geospatial data has become a common part of many GIS architectures.
    Whether it is used as a backup to an on-premises solution, replaces an on-premises
    solution, or is combined with a local solution to provide internet support for
    an intranet-based system, the cloud is a big part of the future of GIS.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 云存储地理空间数据已成为许多 GIS 架构的常见部分。无论它是作为本地解决方案的备份、替代本地解决方案，还是与本地解决方案结合以提供基于内部网络的系统互联网支持，云都是
    GIS 未来的一部分。
- en: With ArcGIS Online, CARTO, MapBox, and now MapD, the options for a cloud data
    store that support geospatial data are more numerous than ever. Each offers a
    visualization component and a different type of data storage and each will integrate
    with your data and software in different ways.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ArcGIS Online、CARTO、MapBox 以及现在的 MapD，支持地理空间数据的云数据存储选项比以往任何时候都要多。每个平台都提供可视化组件和不同类型的数据存储，并且将以不同的方式与您的数据和软件集成。
- en: ArcGIS Online, while also offering stand-alone options (that is, direct data
    upload), integrates with ArcGIS Enterprise (formerly ArcGIS Server) to consume
    enterprise **REpresentational State Transfer** (**REST**) web services that are
    stored on a local geodatabase. ArcGIS Online is built on top of **Amazon Web Services**
    (**AWS**) and all of the server architecture is hidden from users. Enterprise
    integration requires a high-level of licensing (cost), which includes a number
    of cloud tokens (that is credits), and storage and analysis within the cloud account
    itself can use lots of those tokens.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ArcGIS Online 虽然也提供独立选项（即直接数据上传），但与 ArcGIS Enterprise（以前称为 ArcGIS Server）集成，以使用存储在本地地理数据库上的企业
    **REpresentational State Transfer** (**REST**) 网络服务。ArcGIS Online 基于 **Amazon
    Web Services** (**AWS**) 构建，所有的服务器架构都隐藏在用户视线之外。企业集成需要高级别的许可（成本），这包括大量的云令牌（即信用额度），并且云账户内的存储和分析可以使用这些令牌。
- en: CARTO offers cloud PostGIS storage, allowing for geospatial data files to be
    uploaded. With the release of the Python package CARTOframes (covered in [Chapter
    14](d8f80a31-ec1a-47f5-bcdb-015b5502a86f.xhtml), *Cloud Geodatabase Analysis and
    Visualization*), the cloud datasets can be uploaded and updated using scripting.
    Using Python, a CARTO account can become a part of an enterprise solution that
    maintains up-to-date datasets while allowing them to be quickly deployed as custom
    web maps using the builder application. CARTO offers two tiers of paid accounts
    which have different levels of storage.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: CARTO提供云PostGIS存储，允许上传地理空间数据文件。随着Python包CARTOframes（在第14章中介绍，*云地理数据库分析和可视化*）的发布，云数据集可以通过脚本上传和更新。使用Python，CARTO账户可以成为企业解决方案的一部分，该解决方案维护最新的数据集，同时允许它们通过构建应用程序快速部署为自定义网络地图。CARTO提供两个付费账户级别，具有不同的存储级别。
- en: MapBox is focused on map tools for creating custom basemaps for mobile apps,
    but it also offers cloud data storage of datasets and map creation tools such
    as MapBox GL, the JavaScript library for maps built on the **Web Graphics Library**
    (**WebGL**). With the new MapBox GL—Jupyter module, the data can be accessed using
    Python.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: MapBox专注于为移动应用创建自定义底图的地图工具，但它也提供数据集的云数据存储和地图创建工具，如MapBox GL，这是一个基于**Web图形库**（**WebGL**）的JavaScript库。使用新的MapBox
    GL—Jupyter模块，数据可以通过Python访问。
- en: MapD, while offering similar solutions to those mentioned, is different in a
    number of respects. It has an open source version of the database (MapD Core Community
    Edition) which can be used locally or on the cloud, and has an enterprise version
    for large customers. While MapD Core has a relational database schema and uses
    SQL for queries like a traditional RDBMS, it uses GPUs to accelerate queries.
    MapD Core can be cloud-deployed on AWS, Google Cloud Platform, and Microsoft Azure.
    MapD can be installed on servers without GPUs as well, though this reduces its
    effective speed gains over other geodatabases.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: MapD虽然提供了与所提及的类似解决方案，但在许多方面都有所不同。它有一个开源的数据库版本（MapD Core Community Edition），可以在本地或云上使用，并为大型客户提供企业版。虽然MapD
    Core具有关系数据库模式并使用SQL进行查询，就像传统的RDBMS一样，但它使用GPU来加速查询。MapD Core可以部署在AWS、Google Cloud
    Platform和Microsoft Azure上。MapD也可以安装在没有GPU的服务器上，但这会降低其相对于其他地理数据库的有效速度提升。
- en: All of the geodatabases support Jupyter Notebook environments for data queries,
    but MapD has them integrated into the SQL EDITOR within the Immerse visualization
    platform. MapD uses Apache Arrow to upload data when using `pymapd` and also supports
    `INSERT` statements while allowing for data to be loaded using the Immerse data
    importer (including SHPs, GeoJSONs, and CSVs).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所有地理数据库都支持Jupyter Notebook环境进行数据查询，但MapD将它们集成到Immerse可视化平台内的SQL EDITOR中。当使用`pymapd`上传数据时，MapD使用Apache
    Arrow，同时也支持`INSERT`语句，并允许使用Immerse数据导入器（包括SHPs、GeoJSONs和CSVs）加载数据。
- en: Big data processing
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据处理
- en: For data science analysis and geospatial analysis, encountering big data is
    more common than ever. MapD is incredibly fast when retrieving rows and return
    data to the client, making it really useful for powering real-time databases or
    for performing queries on huge datasets.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据科学分析和地理空间分析，遇到大数据的情况比以往任何时候都更常见。MapD在检索行和向客户端返回数据时速度极快，这使得它对于驱动实时数据库或对大型数据集进行查询非常有用。
- en: MapD offers amazing speed-ups on processing big datasets compared to CPU-bound
    databases. Because of the high number of cores that each GPU card contains, paralleled
    processes can run faster. This means that datasets numbering in the billions can
    be queried and analyzed in milliseconds.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 与基于CPU的数据库相比，MapD在处理大型数据集方面提供了惊人的加速。由于每个GPU卡都包含大量的核心，并行进程可以运行得更快。这意味着数十亿条数据集可以在毫秒内进行查询和分析。
- en: MapD architecture
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MapD架构
- en: 'The architecture of MapD is a combination of MapD Core (the GPU-based database),
    MapD Immerse (the data visualization component), and other associated technologies
    and APIs that support data science operations and geospatial applications:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: MapD的架构是MapD Core（基于GPU的数据库）、MapD Immerse（数据可视化组件）以及其他支持数据科学操作和地理空间应用的相关技术和API的组合：
- en: '![](img/7289cd8e-2c11-4635-8fe0-92a6caa26914.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7289cd8e-2c11-4635-8fe0-92a6caa26914.png)'
- en: With the fast query speed and APIs, as well as `pymapd`, the components can
    be used together or separately to create geodatabases and visualizations. Drivers
    for multiple data importers exist to help data migration and the Thrift API can
    supply data for export or for communication with software packages and Immerse.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 借助快速的查询速度和 API，以及 `pymapd`，组件可以一起或单独使用来创建地理数据库和可视化。存在多个数据导入器的驱动程序，以帮助数据迁移，而
    Thrift API 可以提供数据用于导出或与软件包和 Immerse 进行通信。
- en: Cloud versus local versus combined
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云与本地与结合
- en: With many different types of organizations depending on geodatabases, the options
    for architecture are also quite varied. While some organizations have moved all
    of their data to the cloud, storing data and analysis tools on different servers,
    most maintain an on-premise geodatabase as the enterprise system.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 由于许多不同类型的组织依赖于地理数据库，架构的选择也相当多样。虽然一些组织已经将所有数据迁移到云中，将数据和工具存储在不同的服务器上，但大多数组织仍然维护一个本地地理数据库作为企业系统。
- en: A third architecture style, which balances between cloud-based and local geodatabases,
    is also very popular. This allows for database backups to be supported by always
    available cloud services and for data services to reach outside of organizational
    firewalls while limiting the datasets and services that are exposed to the internet.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 第三种架构风格，在基于云和本地地理数据库之间取得平衡，也非常受欢迎。这允许数据库备份由始终可用的云服务支持，并且数据服务可以超出组织防火墙的局限，同时限制暴露给互联网的数据集和服务。
- en: The balance between these solutions depends on the need for processing speed
    and storage costs. MapD, which can be installed and maintained locally or can
    be hosted in the cloud, fits all kinds of organizational requirements. The speed
    of queries and data processing allows cloud data resources to be used in the same
    manner as locally-stored datasets. With `pymapd`, datasets can easily be mirrored
    in the cloud while maintained locally and can be integrated into geospatial analyses
    by comparing locally stored data to cloud-based data.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些解决方案之间的平衡取决于对处理速度和存储成本的需求。MapD 可以本地安装和维护，也可以在云中托管，满足各种组织需求。查询和数据处理的速度允许以与本地存储数据集相同的方式使用云数据资源。使用
    `pymapd`，数据集可以轻松地在云中镜像，同时本地维护，并且可以通过比较本地存储的数据与基于云的数据来集成到地理空间分析中。
- en: The technological structure your organization chooses will depend on your needs
    and the size of the datasets both produced and ingested from other sources. MapD
    can become a part of this structure or can be the entire GIS, supporting Spatial
    SQL queries at blazing speeds whether located on-premise, in the cloud or both.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您组织选择的技术结构将取决于您的需求和产生以及从其他来源摄取的数据集的大小。MapD 可以成为这个结构的一部分，也可以是整个 GIS，支持在本地、云或两者都位于时的快速
    Spatial SQL 查询。
- en: Creating a MapD instance in the cloud
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云中创建 MapD 实例
- en: To explore the possibilities of using a mixed local and cloud-based GIS with
    MapD Core and MapD Immerse, let's create an instance (a virtual server) in the
    cloud. This cloud database will be accessed locally, using `pymapd` to perform
    queries and data management tasks.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为了探索使用 MapD Core 和 MapD Immerse 的混合本地和云 GIS 的可能性，让我们在云中创建一个实例（虚拟服务器）。这个云数据库将本地访问，使用
    `pymapd` 执行查询和数据管理任务。
- en: Using AWS, we can create a server with GPU support. While I am using AWS here,
    MapD can be loaded into other cloud services, such as Google Cloud and Microsoft
    Azure, as well as installed locally. These other cloud services have a community
    edition available as well.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AWS，我们可以创建一个支持 GPU 的服务器。虽然我在这里使用 AWS，但 MapD 可以加载到其他云服务中，例如 Google Cloud 和
    Microsoft Azure，也可以本地安装。这些其他云服务也提供社区版。
- en: Finding the AMI
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找 AMI
- en: 'I''ll use the MapD Community Edition, the open source version of the platform,
    on a p2.xlarge AWS instance. Pre-built **Amazon Machine Images** (**AMIs**) of
    the community edition are available. While the core database technology is free,
    the p2 instance will still have costs associated with it and is not available
    with the AWS free tier. I chose the p2.xlarge over the recommended p2.8xlarge,
    reducing the costs per hour from $7 to $1\. For low-cost or free evaluation of
    the software, download and install it on a virtual machine or a dedicated Linux
    server:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在 p2.xlarge AWS 实例上使用 MapD 社区版，这是平台的开源版本。社区版的预构建 **Amazon Machine Images**（**AMIs**）可用。虽然核心数据库技术是免费的，但
    p2 实例仍会有与之相关的成本，并且不包含在 AWS 免费层中。我选择了 p2.xlarge 而不是推荐的 p2.8xlarge，将每小时成本从 7 美元降低到
    1 美元。对于低成本或免费评估软件，请下载并在虚拟机或专用 Linux 服务器上安装它：
- en: '![](img/7d76508c-0530-4449-a5e5-efa32ab2ccbd.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d76508c-0530-4449-a5e5-efa32ab2ccbd.png)'
- en: For local installation, download the community edition (both compiled and the
    source code) from this website: [https://www.mapd.com/community/](https://www.mapd.com/community/).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本地安装，从本网站下载社区版（编译版和源代码）：[https://www.mapd.com/community/](https://www.mapd.com/community/).
- en: Opening an AWS account
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开通 AWS 账户
- en: Creating the database instance will require an AWS account. Go to [aws.amazon.com](http://aws.amazon.com)
    and sign up for an account. This account will require a credit or debit card that
    is tied to the account.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数据库实例需要 AWS 账户。请访问 [aws.amazon.com](http://aws.amazon.com) 并注册一个账户。此账户需要一个与账户关联的信用卡或借记卡。
- en: 'Explore the official documentation for installing a MapD AWS AMI here:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处探索安装 MapD AWS AMI 的官方文档：
- en: '[https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/](https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/](https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/).'
- en: Creating a key pair
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建密钥对
- en: 'Generating a key pair will allow you to use secure shell or SSH connections
    to remote in or remotely access AWS instances. To generate the pair from the EC2
    Dashboard, select Key Pairs from the NETWORK &amp;amp; SECURITY group in the left
    panel after scrolling down:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 生成密钥对将允许您使用安全外壳或 SSH 连接远程访问或远程连接 AWS 实例。要从 EC2 控制台生成密钥对，请在向下滚动后从左侧面板的“网络 & 安全”组中选择密钥对：
- en: '![](img/23cf9b5b-ee52-42ff-9017-32f4895dcdea.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23cf9b5b-ee52-42ff-9017-32f4895dcdea.png)'
- en: Give the key pair a name and push Create to save the private key (with a `.pem`
    extension) in a secure location on your computer or a USB stick. This key will
    be required each time you connect to the instance using SSH. The corresponding
    public key (with a `.pub` extension) is saved in your AWS account and used to
    match with the private key when connecting to the instance.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 给密钥对命名并点击创建以将私钥（以 `.pem` 扩展名）保存在您计算机或 U 盘上的安全位置。每次您使用 SSH 连接到实例时都需要此密钥。相应的公钥（以
    `.pub` 扩展名）保存在您的 AWS 账户中，并在连接到实例时与私钥匹配。
- en: Launching an instance
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动实例
- en: 'Once the account is set up, go to EC2 from the AWS Management Console. In the
    EC2 Dashboard, select Launch Instance to open the AWS instance selection tool:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 账户设置完成后，从 AWS 管理控制台转到 EC2。在 EC2 控制台中，选择启动实例以打开 AWS 实例选择工具：
- en: '![](img/89a29924-67b5-4323-ad02-93f33a0d1ebe.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89a29924-67b5-4323-ad02-93f33a0d1ebe.png)'
- en: Picking a version
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择版本
- en: 'After clicking on AWS Marketplace on the left panel, search for the MapD database
    within the marketplace. Entering `MapD` into the search box brings up both versions. I
    chose the MapD core database community edition, as the MapD software is included
    for free:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧面板点击 AWS Marketplace 后，在市场中搜索 MapD 数据库。在搜索框中输入 `MapD` 会显示两个版本。我选择了 MapD 核心数据库社区版，因为
    MapD 软件是免费提供的：
- en: '![](img/f047f4d1-0a90-4206-92fd-c545d084fbbf.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f047f4d1-0a90-4206-92fd-c545d084fbbf.png)'
- en: Select the version of interest by pushing the Select button and go to the Instance
    Types menu.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击选择按钮选择感兴趣的版本，并转到实例类型菜单。
- en: Searching for an instance
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索实例
- en: 'Within the available Instance Types, only a few are supported. These p2 instances
    offer different levels of CPUs, memory, and GPUs. I chose the p2.xlarge instance
    for cost reasons, though the p2.8xlarge is recommended for production-level computing:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在可用的实例类型中，只有少数受支持。这些 p2 实例提供不同级别的 CPU、内存和 GPU。我出于成本考虑选择了 p2.xlarge 实例，尽管 p2.8xlarge
    更适合生产级计算：
- en: '![](img/1309f7f7-9231-4ef8-ba41-19ad6db36f1a.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1309f7f7-9231-4ef8-ba41-19ad6db36f1a.png)'
- en: After selecting the instance type, there are a few menus describing the details
    of the instance and allowing for backup storage within the AWS ecosystem. Set
    these parameters as required by your organization.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 选择实例类型后，有一些菜单描述了实例的详细信息，并允许在AWS生态系统中进行备份存储。根据您组织的需要设置这些参数。
- en: Setting up a security group
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置安全组
- en: 'The security group settings are important as they control who can access the
    instance, and where they can access it from. The Source tab allows you to set
    the machines that can connect to the instance, using IP addresses to determine
    who is allowed to connect:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 安全组设置很重要，因为它们控制谁可以访问实例，以及他们可以从哪里访问。源选项卡允许您设置可以连接到实例的机器，使用IP地址来确定谁被允许连接：
- en: '![](img/fb933da1-aba2-48c5-817b-d3ac0c93cd3c.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fb933da1-aba2-48c5-817b-d3ac0c93cd3c.png)'
- en: For security, adjust the Source for SSH to my IP. This can be updated later
    to allow for connections from anywhere, that is the internet at large. Once that
    is complete, assign the existing key pair to the instance to ensure that it can
    be used for direct connections to the command line MapD Core.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安全起见，调整SSH的源为我的IP。这可以在以后更新，以允许从任何地方连接，即整个互联网。一旦完成，将现有的密钥对分配给实例，以确保它可以用于直接连接到命令行MapD
    Core。
- en: Immerse environment
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Immerse环境
- en: 'With the instance set up, accessing the installed Immerse environment can be
    done using a browser. In the Immerse environment, data can be imported, dashboards
    can be created, and SQL queries can be executed:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 实例设置完成后，可以使用浏览器访问已安装的Immerse环境。在Immerse环境中，可以导入数据，创建仪表板，并执行SQL查询：
- en: '![](img/fde677db-1c94-45a1-b139-72704bfd1a6c.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fde677db-1c94-45a1-b139-72704bfd1a6c.png)'
- en: Logging in to Immerse
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 登录Immerse
- en: 'Within the EC2 Dashboard, ensure that the MapD instance is started. Copy the
    IP address of the instance (the Public IP address, not the Private IP) and the
    Instance ID, which is located underneath the instances list in the EC2 Dashboard.
    Ensure that the MapD instance is highlighted to ensure that the Instance ID is
    correct:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在EC2仪表板中，确保MapD实例已启动。复制实例的IP地址（公共IP地址，不是私有IP）和实例ID，这些信息位于EC2仪表板中的实例列表下方。确保MapD实例被高亮显示，以确保实例ID正确：
- en: '![](img/04d0cc4e-df64-4df3-a558-c989730b875c.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/04d0cc4e-df64-4df3-a558-c989730b875c.png)'
- en: 'Open a browser and enter the Public IP address in the URL bar, along with port
    number `8443`. Here is an example of the URL: `https://ec2-54-200-213-68.us-west-2.compute.amazonaws.com:8443/`.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 打开浏览器，在URL栏中输入公共IP地址，以及端口号`8443`。以下是一个URL示例：`https://ec2-54-200-213-68.us-west-2.compute.amazonaws.com:8443/`。
- en: 'Make sure that you are using **Hyper Text Transfer Protocol Secure** (**HTTPS**)
    to connect and that the port number is included. If the browser warns you that
    the connection is insecure, click through using the Advanced link at the bottom
    of the page. Once the connection is made, the login page will open with the user
    and database pre-populated. Add the Instance ID as the password and push Connect:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您使用**超文本传输安全协议**（**HTTPS**）进行连接，并且包含端口号。如果浏览器警告您连接不安全，请点击页面底部的“高级”链接。一旦建立连接，登录页面将打开，用户和数据库已预先填写。将实例ID作为密码并点击“连接”：
- en: '![](img/40e726dc-de5e-4539-bdb9-9f2b77a6320a.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40e726dc-de5e-4539-bdb9-9f2b77a6320a.png)'
- en: Read the MapD conditions, click I Agree, and enter the Immerse environment.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读MapD条件，点击“我同意”，并进入Immerse环境。
- en: 'Read more about using MapD on AWS here: [https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/](https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/).'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处了解更多关于在AWS上使用MapD的信息：[https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/](https://www.mapd.com/docs/latest/getting-started/get-started-aws-ami/)。
- en: Default dashboards
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 默认仪表板
- en: 'Once the Immerse environment is started, explore the included default DASHBOARDS
    to get a sense of what is possible:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启动Immerse环境，探索内置的默认DASHBOARDS，以了解可能实现的功能：
- en: '![](img/954b92cf-aae6-4de6-bd4b-d133a6ae08a1.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/954b92cf-aae6-4de6-bd4b-d133a6ae08a1.png)'
- en: NYC taxi dataset
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 纽约出租车数据集
- en: 'The NYC Taxi Rides dashboard uses a database table with 13 million rows of
    data points to demonstrate the speed of the database. Every time the map is zoomed,
    the database is re-queried and the points regenerated in milliseconds. It''s quite
    fun to explore the data and to alter the dashboard to include other chart and
    map types:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 纽约出租车行程仪表板使用包含1300万行数据点的数据库表来展示数据库的速度。每次地图缩放时，数据库都会重新查询，并在毫秒内重新生成点。探索数据和修改仪表板以包含其他图表和地图类型非常有趣：
- en: '![](img/4d48e987-1827-43df-ae15-be0530f399df.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d48e987-1827-43df-ae15-be0530f399df.png)'
- en: Importing a CSV
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入 CSV 文件
- en: Importing a dataset in CSV format is easy using the data importer built into
    MapD Immerse. Go to the DATA MANAGER and select Import Data. On the next page,
    click on the Add Files button and load the included City of Juneau addresses CSV
    dataset using drag and drop.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用内置的数据导入器，导入 CSV 格式的数据集非常简单。转到 DATA MANAGER 并选择“导入数据”。在下一页上，点击“添加文件”按钮，通过拖放加载包含
    Juneau 市地址的 CSV 数据集。
- en: 'The data will be loaded and, once loaded, a MapD database table is generated
    from the uploaded data. Review the data and add a new name or accept the default
    name (generated from the spreadsheet name). Once Save Table is clicked, the database
    table will be generated:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 数据将被加载，一旦加载完成，将根据上传的数据生成一个 MapD 数据库表。检查数据，添加新的名称或接受默认名称（由电子表格名称生成）。点击“保存表”后，将生成数据库表：
- en: '![](img/a64af924-8afe-4457-b4ce-596a9806d026.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a64af924-8afe-4457-b4ce-596a9806d026.png)'
- en: Creating a chart
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建图表
- en: 'With a dataset now added to the database, test out MapD Immerse by selecting
    the DASHBOARDS tab. Here, dynamic charts, tables, histograms, heat maps and more
    can be created and added to a new dashboard. In this example, a simple donut chart
    is created using the data loaded from the CSV. The number of records associated
    with a city name is counted and added to the chart:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已经将数据集添加到数据库中，通过选择 DASHBOARDS 选项卡来测试 MapD Immerse。在这里，可以创建并添加到新仪表板中的动态图表、表格、直方图、热图等。在这个例子中，使用从
    CSV 文件中加载的数据创建了一个简单的饼图。统计与城市名称相关的记录数量并将其添加到图表中：
- en: '![](img/fed8ddff-c055-4a43-a621-8bb770ee0fea.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fed8ddff-c055-4a43-a621-8bb770ee0fea.png)'
- en: Selections with the SQL EDITOR
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SQL 编辑器进行选择
- en: 'Using the built-in SQL EDITOR, SQL statements can be executed. The results
    will appear in the SQL EDITOR in a Jupyter Notebook-like interactive table:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用内置的 SQL 编辑器，可以执行 SQL 语句。结果将出现在类似 Jupyter Notebook 的交互式表格中的 SQL 编辑器中：
- en: '![](img/c9b9e05e-02ae-4e1e-b9f1-6866497226f3.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c9b9e05e-02ae-4e1e-b9f1-6866497226f3.png)'
- en: The SQL statements are executed really fast and will include spatial SQL commands
    that can perform analysis with an SQL select statement.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 语句执行得非常快，并将包括可以执行 SQL 选择语句分析的 spatial SQL 命令。
- en: Use geospatial data
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用地理空间数据
- en: 'MapD Core supports geometry and geography data types and can also generate
    interactive maps using coordinate columns to display data with *x*/*y* or longitude
    and latitude pairs. Point maps, heat maps, and choropleth maps can easily be generated
    and styled using the Immerse dashboard environment:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: MapD Core 支持几何和地理数据类型，并且可以使用坐标列生成交互式地图，以 *x*/*y* 或经纬度对显示数据。点地图、热图和分色地图可以轻松地使用
    Immerse 仪表板环境生成和样式化：
- en: '![](img/65a2923b-f38d-4380-93cc-d0eecfc6aad7.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65a2923b-f38d-4380-93cc-d0eecfc6aad7.png)'
- en: This data visualization was created by loading the Calaveras County address
    CSV from OpenAddresses into my MapD Immerse instance using the DATA MANAGER and
    then using the LON and LAT columns to create a heat map.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这份数据可视化是通过将 OpenAddresses 中的 Calaveras 县地址 CSV 文件加载到我的 MapD Immerse 实例中，使用 DATA
    MANAGER，然后利用 LON 和 LAT 列创建热图来制作的。
- en: Connecting to the database using a terminal
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用终端连接到数据库
- en: Connect to the database using the integrated Java-based terminal, or another
    terminal solution. As my local machine uses Windows, and does not have a terminal
    integrated into the OS, I have downloaded and installed PuTTY. This free SSH software
    allows me to connect to Linux command line servers from a Windows machine, using
    the key pair generated earlier for authentication.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基于 Java 的集成终端或另一个终端解决方案连接到数据库。由于我的本地机器使用 Windows，并且没有集成到操作系统中的终端，我已经下载并安装了
    PuTTY。这款免费的 SSH 软件允许我使用之前生成的密钥对从 Windows 机器连接到 Linux 命令行服务器。
- en: If you are using another terminal solution for Windows or using another operating
    system, connect to the instance using the correct SSH procedure for the terminal.
    The steps will be similar, except for the required private key format conversion.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用 Windows 的其他终端解决方案或使用其他操作系统，请使用终端的正确 SSH 程序连接到实例。步骤将类似，但需要转换所需的私钥格式。
- en: Download the PuTTY terminal here: [https://www.chiark.greenend.org.uk/~sgtatham/putty/. ](https://www.chiark.greenend.org.uk/~sgtatham/putty/)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处下载 PuTTY 终端：[https://www.chiark.greenend.org.uk/~sgtatham/putty/](https://www.chiark.greenend.org.uk/~sgtatham/putty/)
- en: PuTTYgen
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PuTTYgen
- en: To authorize any connection to the AWS instance, the private key generated for
    the AWS account must be converted into a PuTTY key format using the associated
    program PuTTYgen. Open PuTTYgen from the Start menu, and click on the Conversions
    menu. From the drop-down tab, select Import Key.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 要授权任何连接到AWS实例，必须使用为AWS账户生成的私钥，并使用相关的程序PuTTYgen将其转换为PuTTY密钥格式。从开始菜单打开PuTTYgen，然后点击“转换”菜单。从下拉选项卡中选择“导入密钥”。
- en: 'A file dialogue will open, allowing you to select the private key downloaded
    from AWS. This private key will have a `.pem` extension:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 将打开一个文件对话框，允许您选择从AWS下载的私钥。此私钥将具有`.pem`扩展名：
- en: '![](img/df08fe1a-7067-4641-b42f-902f945e5b5f.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/df08fe1a-7067-4641-b42f-902f945e5b5f.png)'
- en: Click Open, and the key will be imported. To generate the private key in the
    PuTTY format, supply an optional key phrase (a word or few words that further
    identify the user and which must be remembered), and click the Save Private Key
    button in the Actions section. Select a folder and save the key, which will now
    have a `.ppk` file extension.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“打开”，密钥将被导入。要生成PuTTY格式的私钥，提供可选的密钥短语（一个或几个进一步识别用户并必须记住的词），然后在“操作”部分点击“保存私钥”按钮。选择一个文件夹并保存密钥，现在它将具有`.ppk`文件扩展名。
- en: Connection configuration
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接配置
- en: 'Connecting to the instance using PuTTY requires some configuration. To create
    the connection, paste the public IP address of the instance into the Host Name
    field, check to ensure that the port is set to 22, and that the connection type
    is SSH. Save the settings in the Saved Sessions section by clicking the Save button:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PuTTY连接到实例需要一些配置。要创建连接，将实例的公网IP地址粘贴到“主机名”字段中，确保端口设置为22，连接类型为SSH。通过点击“保存”按钮在“已保存会话”部分保存设置：
- en: '![](img/ddfc50d8-e6ef-4272-b2e4-1e31578d1423.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ddfc50d8-e6ef-4272-b2e4-1e31578d1423.png)'
- en: Using the private key
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用私钥
- en: 'Once the setting is loaded, click on the SSH drop-down on the left. In the
    new menu, click Auth to switch to a new menu, and then browse to the private key
    that we converted into PuTTY format:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置加载，点击左侧的SSH下拉菜单。在新菜单中，点击Auth切换到新菜单，然后浏览到我们转换成PuTTY格式的私钥：
- en: '![](img/c24f7c6a-90e5-4e2b-9375-c04ad9fbaaf2.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c24f7c6a-90e5-4e2b-9375-c04ad9fbaaf2.png)'
- en: 'Once the key has been located, push Open to establish the connection. To start
    MapD on the server, go to the `/raidStorage/prod/mapd/bin` folder and run the
    following code, replacing `{Instance-ID}` with your instance ID:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦找到密钥，请按“打开”以建立连接。要启动服务器上的MapD，请转到`/raidStorage/prod/mapd/bin`文件夹并运行以下代码，将`{Instance-ID}`替换为您的实例ID：
- en: '[PRE0]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you are having trouble establishing the connection, check to make sure that
    the security group for the AWS instance is set to allow connections from the current
    computer being used. If the security group setting is my IP and the IP of the
    computer is different, the connection cannot be made.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在建立连接时遇到问题，请检查AWS实例的安全组是否设置为允许从当前使用的计算机进行连接。如果安全组设置是“我的IP”且计算机的IP地址不同，则无法建立连接。
- en: Installing pymapd
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装pymapd
- en: Installing `pymapd` is simple, and supported by both `conda` and `pip`, the
    package installer included with Python. I am using `pip` for this chapter, but
    using `conda` will not cause any issues and may be recommended for integration
    with other `conda`-supported software.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 安装`pymapd`很简单，并且由`conda`和`pip`（Python中包含的包安装程序）支持。我在本章中使用`pip`，但使用`conda`不会引起任何问题，并且可能建议与其他`conda`支持的软件集成。
- en: The conda install command
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: conda安装命令
- en: 'Use `conda install -c conda-forge` to connect to `conda forge`, the repository
    where the `pymapd` module is stored. Refer to [Chapter 1](23e9b6f4-e43b-4bf7-bc80-2c1537d5f760.xhtml), *Package
    Installation and Management* for more information on `conda`:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`conda install -c conda-forge`连接到`conda forge`，这是存储`pymapd`模块的存储库。有关`conda`的更多信息，请参阅[第1章](23e9b6f4-e43b-4bf7-bc80-2c1537d5f760.xhtml)，*包安装和管理*：
- en: '[PRE1]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The pip install command
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pip安装命令
- en: 'The `pymapd` module is also available using `pip`, the Python installer package.
    It pulls from [PyPi.org](http://PyPi.org), the Python foundation''s repository:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`pymapd`模块也可以通过`pip`（Python安装程序包）使用。它从[PyPi.org](http://PyPi.org)（Python基金会的存储库）获取：'
- en: '[PRE2]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the install command is run, the `pymapd` wheel is downloaded and installed
    along with the required supporting modules:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦运行安装命令，`pymapd`轮子将下载并安装，以及所需的辅助模块：
- en: '![](img/14f78d7c-c56f-4675-836c-44fb982eab45.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14f78d7c-c56f-4675-836c-44fb982eab45.png)'
- en: Test that the module was installed by opening a Python terminal (or IDLE) and
    typing `import pymapd`. If no errors occur, `pymapd` has successfully been installed.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 通过打开 Python 终端（或 IDLE）并输入 `import pymapd` 来测试模块是否已安装。如果没有错误发生，则 `pymapd` 已成功安装。
- en: 'Another option is to download pymapd from GitHub: [https://github.com/mapd/pymapd.](https://github.com/mapd/pymapd)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项是从 GitHub 下载 pymapd：[https://github.com/mapd/pymapd.](https://github.com/mapd/pymapd)
- en: Creating a connection
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建连接
- en: The `pymapd` module includes a class called `connect` that requires connection
    information such as username, password, host server IP/domain, and database name
    (default value for both user and database name is `mapd`). For an AWS instance,
    the default password for MapD Core and MapD Immerse is the instance ID, available
    in the instance information section in the EC2 Dashboard, as shown earlier.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`pymapd` 模块包含一个名为 `connect` 的类，该类需要连接信息，如用户名、密码、主机服务器 IP/域名和数据库名（用户名和数据库名的默认值均为
    `mapd`）。对于 AWS 实例，MapD Core 和 MapD Immerse 的默认密码是实例 ID，可在 EC2 仪表板中的实例信息部分找到，如前所述。'
- en: User and password
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户名和密码
- en: 'If you are connecting to the AWS AMI MapD instance, use the public IP address
    as the `host` and the instance ID as the `password`. Here is the `connection`
    pattern:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在连接到 AWS AMI MapD 实例，请使用公共 IP 地址作为 `host`，并将实例 ID 作为 `password`。以下是一个 `connection`
    模式示例：
- en: '[PRE3]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here is an example of what a filled out `connect` instantiation could look
    like:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个已填充的 `connect` 实例化的示例：
- en: '[PRE4]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Data cursor
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据游标
- en: 'To execute the SQL commands (spatial or otherwise), we will create a data `cursor`.
    The `cursor` is part of the `connection` class and will be used to execute statements
    using the `execute` command. It is also used to access query results, which are
    converted into a list and iterated using a `for` loop:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行 SQL 命令（空间或其他），我们将创建一个数据 `cursor`。`cursor` 是 `connection` 类的一部分，将用于使用 `execute`
    命令执行语句。它还用于访问查询结果，这些结果被转换为列表并使用 `for` 循环迭代：
- en: '[PRE5]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The result is a list of tuples, which contain (in this case) only the name of
    the `county`, accessed using a zero index to get it out of the tuple.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个包含元组的列表，其中（在这种情况下）只包含 `county` 的名称，通过使用零索引从元组中获取它。
- en: Creating a table
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个表格
- en: 'With the connection established, we can now execute SQL statements in the Python
    script that will generate tables in the MapD Core instance. The following statement
    will create a simple table called `county`, with a `MULTIPOLYGON` geometry type,
    an `integer id` field, and three `VARCHAR`-type fields (or strings, as they would
    be called in Python):'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 建立连接后，我们现在可以在 Python 脚本中执行 SQL 语句，这将生成 MapD Core 实例中的表格。以下语句将创建一个简单的名为 `county`
    的表格，包含 `MULTIPOLYGON` 几何类型、一个 `integer id` 字段和三个 `VARCHAR` 类型字段（或字符串，如 Python
    中的称呼）：
- en: '[PRE6]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The next code block will create a table called `address`, with a `POINT` geometry
    type, an `integer id` field, and a `VARCHAR`-type field called `address`:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个代码块将创建一个名为 `address` 的表格，包含 `POINT` 几何类型、一个 `integer id` 字段和一个名为 `address`
    的 `VARCHAR` 类型字段：
- en: '[PRE7]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Insert statements
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插入语句
- en: 'One way to add data to the database is to use SQL `INSERT` statements. These
    will generate rows of data within the database tables created in the last section.
    Using the `pyshp` module, we can read a shapefile and add the data it contains
    to an `INSERT` statement template. This statement is then executed by the `cursor`:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 向数据库添加数据的一种方法是通过使用 SQL `INSERT` 语句。这些语句将在上一节中创建的数据库表中生成数据行。使用 `pyshp` 模块，我们可以读取
    shapefile 并将其包含的数据添加到 `INSERT` 语句模板中。然后，该语句由 `cursor` 执行：
- en: '[PRE8]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This process can be time-consuming, so there are a few other ways to add data
    to the database.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程可能很耗时，因此还有其他几种向数据库添加数据的方法。
- en: Using Apache Arrow to load data
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Apache Arrow 加载数据
- en: 'Using the `pyarrow` module and `pandas`, data can be written to the MapD Core
    database:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `pyarrow` 模块和 `pandas`，数据可以写入 MapD Core 数据库：
- en: '[PRE9]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Contains queries
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包含查询
- en: 'This code will test the speed of a data query against the `county` database
    table, using `ST_Contains`, a spatial SQL point in polygon analysis tool. The
    geometry column of the `county` table (called `geom`) is the first input into
    `ST_Contains`, and the **well-known text** (**WKT**) `point` is added second.
    Once the SQL statement is executed, the `point` will be compared against all of
    the rows in the table to find if one of the `county` geometries contains the `point`
    described by the WKT `point`:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码将测试对`county`数据库表的数据查询速度，使用`ST_Contains`，一个空间SQL点在多边形分析工具。`county`表的几何列（称为`geom`）是`ST_Contains`的第一个输入，第二个输入是**已知文本**（**WKT**）`point`。一旦执行SQL语句，`point`将与表中的所有行进行比较，以找出`county`几何中是否包含由WKT
    `point`描述的点：
- en: '[PRE10]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The result of this script is as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本的输出结果如下：
- en: '![](img/ec9cbdae-bf83-48b6-b254-3a86c8be9036.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec9cbdae-bf83-48b6-b254-3a86c8be9036.png)'
- en: The geospatial query runs really fast, as you can see from the printed time
    signatures (in seconds). It takes only a few milliseconds to find that Okeechobee
    polygon contains the `point` location.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间查询运行得非常快，正如您可以从打印的时间戳（以秒为单位）中看到的那样。只需几毫秒就能找到Okeechobee多边形包含`point`位置。
- en: Other available spatial SQL commands
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他可用的空间SQL命令
- en: 'The number of spatial SQL commands available within a MapD Core database is
    growing all the time. These include:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在MapD Core数据库中可用的空间SQL命令的数量一直在增长。这些包括：
- en: '`ST_Transform` (for coordinate system transformations)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ST_Transform`（用于坐标系转换）'
- en: '`ST_Distance` (for distance analyses)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ST_Distance`（用于距离分析）'
- en: '`ST_Point` (to generate `point` objects)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ST_Point`（用于生成`point`对象）'
- en: '`ST_XMin`, `ST_XMax`, `ST_YMin`, `ST_YMax` (for bounding box access)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ST_XMin`、`ST_XMax`、`ST_YMin`、`ST_YMax`（用于边界框访问）'
- en: More functionality is being added every day and will reach spatial SQL feature
    parity with PostGIS and other spatial databases later this year. With these SQL
    commands, and the unique front-end dashboard publication tool MapD Immerse, MapD
    is a powerful new option for geodatabase deployment.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 每天都在添加更多功能，并将在今年晚些时候达到与PostGIS和其他空间数据库的空间SQL功能对等。有了这些SQL命令，以及独特的MapD Immerse前端仪表板发布工具，MapD是地理数据库部署的一个强大新选择。
- en: Summary
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Using a cloud-based GPU database like MapD Core, and the Immerse visualization
    studio will pay dividends when designing and implementing a GIS. It offers speed
    and cloud reliability to both tabular and spatial queries and allows the data
    to be shared in interactive dashboards (which rely on JavaScript technologies
    such as `D3.js` and MapBox GL JavaScript) that are simple to create and publish.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 使用像MapD Core这样的基于云的GPU数据库和Immerse可视化工作室，在设计实现GIS时将带来回报。它为表格和空间查询提供速度和云可靠性，并允许数据在交互式仪表板（依赖于`D3.js`和MapBox
    GL JavaScript等JavaScript技术）中共享，这些仪表板易于创建和发布。
- en: With the MapD Python module, `pymapd`, cloud data can become an integrated part
    of a query engine. Data can be pushed to the cloud or pulled down to use locally.
    Analyses can be performed rapidly, using the power of GPU parallelization. It's
    worth installing MapD on a virtual server in the cloud, or even locally, to test
    out the potential of the software.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 使用MapD Python模块，`pymapd`，云数据可以成为查询引擎的集成部分。数据可以被推送到云端或下载到本地使用。利用GPU并行化的力量，分析可以快速进行。在云中的虚拟服务器上安装MapD，甚至本地安装，以测试软件的潜力是值得的。
- en: In the next chapter, we will explore the use of Flask, SQLAlchemy, and GeoAlchemy2
    to create an interactive web map with a PostGIS geodatabase backend.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨使用Flask、SQLAlchemy和GeoAlchemy2创建一个具有PostGIS地理数据库后端的交互式网络地图。
