- en: '*Appendix*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*附录*'
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section is included to assist the students to perform the activities in
    the book. It includes detailed steps that are to be performed by the students
    to achieve the objectives of the activities.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包含帮助学生执行书中活动的详细步骤，学生需要执行这些步骤以达到活动的目标。
- en: 'Solution of Activity 1: Handling Lists'
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动一：处理列表的解决方案
- en: 'These are the steps to complete this activity:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是完成此活动的步骤：
- en: 'Import the `random` library:'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `random` 库：
- en: '[PRE0]'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Set the maximum number of random numbers:'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置随机数的最大数量：
- en: '[PRE1]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Use the `randint` function from the `random` library to create 100 random numbers.
    Tip: try getting a list with the least number of duplicates:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `random` 库中的 `randint` 函数创建 100 个随机数。提示：尝试获取具有最少重复数的列表：
- en: '[PRE2]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Print `random_number_list`:'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印 `random_number_list`：
- en: '[PRE3]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The sample output is as follows:'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 1.16: Section of output for random_number_list](img/C11065_01_16.jpg)'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.16：random_number_list 的输出部分](img/C11065_01_16.jpg)'
- en: 'Figure 1.16: Section of output for random_number_list'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.16：random_number_list 的输出部分
- en: 'Create a `list_with_divisible_by_3` list from `random_number_list`, which will
    contain only numbers that are divisible by `3`:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `random_number_list` 创建一个名为 `list_with_divisible_by_3` 的列表，其中只包含能被 `3` 整除的数字：
- en: '[PRE4]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The sample output is as follows:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '![Figure 1.17: Section of output for random_number_list divisible by 3](img/C11065_01_17.jpg)'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.17：random_number_list 能被 3 整除的输出部分](img/C11065_01_17.jpg)'
- en: 'Figure 1.17: Section of output for random_number_list divisible by 3'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.17：random_number_list 能被 3 整除的输出部分
- en: 'Use the `len` function to measure the length of the first list and the second
    list, and store them in two different variables, `length_of_random_list` and `length_of_3_divisible_list`.
    Calculate the difference in length in a variable called `difference`:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `len` 函数测量第一个列表和第二个列表的长度，并将它们存储在两个不同的变量中，`length_of_random_list` 和 `length_of_3_divisible_list`。在名为
    `difference` 的变量中计算长度差异：
- en: '[PRE5]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The sample output is as follows:'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE6]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Combine the tasks we have performed so far and add a while loop to it. Run
    the loop 10 times and add the values of the difference variables to a list:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们迄今为止执行的任务组合起来，并添加一个 while 循环。循环运行 10 次，并将差异变量的值添加到一个列表中：
- en: '[PRE7]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The sample output is as follows:'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE8]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then, calculate the arithmetic mean (common average) for the differences in
    the lengths that you have:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，计算你拥有的长度差异的算术平均值（普通平均值）：
- en: '[PRE9]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The sample output is as follows:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本输出如下：
- en: '[PRE10]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Solution of Activity 2: Analyze a Multiline String and Generate the Unique
    Word Count'
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动二：分析多行字符串并生成唯一单词计数的解决方案
- en: 'These are the steps to complete this activity:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是完成此活动的步骤：
- en: 'Create a string called `multiline_text` and copy the text present in the first
    chapter of *Pride and Prejudice*. Use *Ctrl* *+* *A* to select the entire text
    and then *Ctrl* *+* *C* to copy it and paste the text you just copied into it:![Figure
    1.18: Initializing the mutliline_text string](img/C11065_01_18.jpg)'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `multiline_text` 的字符串，并将《傲慢与偏见》第一章中的文本复制到其中。使用 *Ctrl* *+* *A* 选择整个文本，然后使用
    *Ctrl* *+* *C* 复制它，并将你刚刚复制的文本粘贴进去：![图 1.18：初始化 mutliline_text 字符串](img/C11065_01_18.jpg)
- en: 'Figure 1.18: Initializing the mutliline_text string'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.18：初始化 mutliline_text 字符串
- en: 'Find the type of the string using the `type` function:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `type` 函数查找字符串的类型：
- en: '[PRE11]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output is as follows:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE12]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, find the length of the string, using the `len` function:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用 `len` 函数找到字符串的长度：
- en: '[PRE13]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output is as follows:'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE14]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Use string methods to get rid of all the new lines (`\n` or `\r`),and symbols.
    Remove all new lines by replacing them with this:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用字符串方法去除所有换行符（`\n` 或 `\r`）和符号。通过替换它们来移除所有换行符：
- en: '[PRE15]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Then, we will print and check the output:'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，我们将打印并检查输出：
- en: '[PRE16]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output is as follows:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.19: The multiline_text string after removing the new lines](img/C11065_01_19.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.19：移除换行符后的 multiline_text 字符串](img/C11065_01_19.jpg)'
- en: 'Figure 1.19: The multiline_text string after removing the new lines'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.19：移除换行符后的 multiline_text 字符串
- en: 'Removing the special characters and punctuation:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移除特殊字符和标点符号：
- en: '[PRE17]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Check the content of `cleaned_multiline_text`:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 `cleaned_multiline_text` 的内容：
- en: '[PRE18]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The output is as follows:'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.20: The cleaned_multiline_text string](img/C11065_01_20.jpg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.20：cleaned_multiline_text 字符串](img/C11065_01_20.jpg)'
- en: 'Figure 1.20: The cleaned_multiline_text string'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.20：cleaned_multiline_text 字符串
- en: 'Generate a list of all the words from the cleaned string using the following
    command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令从清洗后的字符串生成所有单词的列表：
- en: '[PRE19]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output is as follows:'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.21: The section of output displaying the list_of_words](img/C11065_01_21.jpg)'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.21：显示单词列表的输出部分](img/C11065_01_21.jpg)'
- en: 'Figure 1.21: The section of output displaying the list_of_words'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.21：显示单词列表的输出部分
- en: 'Find the number of words:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出单词的数量：
- en: '[PRE20]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The output is `852`.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出为`852`。
- en: 'Create a list from the list you just created, which includes only unique words:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你刚刚创建的列表中创建一个列表，其中只包含唯一单词：
- en: '[PRE21]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The output is `340`.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出为`340`。
- en: 'Count the number of times each of the unique words appeared in the cleaned
    text:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每个唯一单词在清洗后的文本中出现的次数：
- en: '[PRE22]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The output is as follows:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.22: Section of output showing unique_words_as_dict](img/C11065_01_22.jpg)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图1.22：显示唯一单词字典的输出部分](img/C11065_01_22.jpg)'
- en: 'Figure 1.22: Section of output showing unique_words_as_dict'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.22：显示唯一单词字典的输出部分
- en: You just created, step by step, a unique word counter using all the neat tricks
    that you just learned.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你已经一步一步地创建了一个唯一单词计数器，使用了你刚刚学到的所有巧妙技巧。
- en: Find the top 25 words from the `unique_words_as_dict`.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`unique_words_as_dict`中找出前25个单词。
- en: '[PRE23]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'These are the steps to complete this activity:'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: '![Figure 1.23: Top 25 unique words from multiline_text](img/C11065_01_23.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图1.23：多行文本中的前25个唯一单词](img/C11065_01_23.jpg)'
- en: 'Figure 1.23: Top 25 unique words from multiline_text'
  id: totrans-80
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.23：多行文本中的前25个唯一单词
- en: 'Solution of Activity 3: Permutation, Iterator, Lambda, List'
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动三的解决方案：排列、迭代器、Lambda、列表
- en: 'These are the steps to solve this activity:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个活动的步骤如下：
- en: 'Look up the definition of `permutations` and `dropwhile` from `itertools`.
    There is a way to look up the definition of a function inside Jupyter itself.
    Just type the function name, followed by *?*, and press *Shift +* *Enter*:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`itertools`中查找`permutations`和`dropwhile`的定义。在Jupyter中查找函数定义的方法是：输入函数名，后跟*?*，然后按*Shift
    + Enter*：
- en: '[PRE24]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: You will see a long list of definitions after each `?`. We will skip it here.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在每个`?`之后，你会看到一个长列表的定义。这里我们将跳过它。
- en: 'Write an expression to generate all the possible three-digit numbers using
    1, 2, and 3:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个表达式，使用1、2和3生成所有可能的三位数：
- en: '[PRE25]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The output is as follows:'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE26]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Loop over the iterator expression you generated before. Use print to print
    each element returned by the iterator. Use `assert` and `isinstance` to make sure
    that the elements are tuples:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遍历你之前生成的迭代器表达式。使用`print`打印迭代器返回的每个元素。使用`assert`和`isinstance`确保元素是元组：
- en: '[PRE27]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The output is as follows:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE28]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Write the loop again. But this time, use `dropwhile` with a lambda expression
    to drop any leading zeros from the tuples. As an example, `(0, 1, 2)` will become
    `[0, 2]`. Also, cast the output of the `dropwhile` to a list.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次编写循环。但这次，使用带有Lambda表达式的`dropwhile`来删除元组中的任何前导零。例如，`(0, 1, 2)`将变成`[0, 2]`。同时，将`dropwhile`的输出转换为列表。
- en: 'An extra task can be to check the actual type that `dropwhile` returns without
    casting:'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以作为一个额外任务来检查`dropwhile`实际返回的类型而不进行类型转换：
- en: '[PRE29]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output is as follows:'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE30]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Write all the logic you wrote before, but this time write a separate function
    where you will be passing the list generated from `dropwhile`, and the function
    will return the whole number contained in the list. As an example, if you pass
    `[1, 2]` to the function, it will return `12`. Make sure that the return type
    is indeed a number and not a string. Although this task can be achieved using
    other tricks, we require that you treat the incoming list as a stack in the function
    and generate the number there:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你之前编写的所有逻辑写出来，但这次写一个单独的函数，你将传递由`dropwhile`生成的列表，该函数将返回列表中的整个数字。例如，如果你将`[1,
    2]`传递给函数，它将返回`12`。确保返回类型确实是一个数字而不是字符串。尽管可以使用其他技巧完成此任务，但我们要求你在函数中将传入的列表作为栈处理并生成数字：
- en: '[PRE31]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The output is as follows:'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE32]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Solution of Activity 4: Design Your Own CSV Parser'
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动四的解决方案：设计你自己的CSV解析器
- en: 'These are the steps to complete this activity:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Import `zip_longest` from `itertools`:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`itertools`导入`zip_longest`：
- en: '[PRE33]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Define the `return_dict_from_csv_line` function so that it contains `header`,
    `line`, and `fillvalue` as `None`, and add it to a `dict`:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义`return_dict_from_csv_line`函数，使其包含`header`、`line`和`fillvalue`作为`None`，并将其添加到`dict`中：
- en: '[PRE34]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Open the accompanying `sales_record.csv` file using `r` mode inside a with
    block. First, check that it is opened, read the first line, and use string methods
    to generate a list of all the column names with `open("sales_record.csv", "r")
    as fd`. When you read each line, pass that line to a function along with the list
    of the headers. The work of the function is to construct a dict out of these two
    and fill up the `key:values`. Keep in mind that a missing value should result
    in a `None`:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`with`块中的`r`模式打开随附的`sales_record.csv`文件。首先，检查它是否已打开，读取第一行，并使用字符串方法通过`open("sales_record.csv",
    "r") as fd`生成所有列名列表。当你读取每一行时，将那一行和标题列表传递给一个函数。该函数的工作是从这些中构建一个字典并填充`key:values`。请注意，缺失值应导致`None`：
- en: '[PRE35]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The output is as follows:'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 2.10: Section of code](img/C11065_02_10.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图2.10：代码的一部分](img/C11065_02_10.jpg)'
- en: 'Figure 2.10: Section of output'
  id: totrans-113
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.10：输出的一部分
- en: 'Solution of Activity 5: Generating Statistics from a CSV File'
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动五的解决方案：从CSV文件生成统计数据
- en: 'These are the steps to complete this activity:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Load the necessary libraries:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载必要的库：
- en: '[PRE36]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Read in the Boston housing dataset (given as a `.csv` file) from the local
    direction:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本地目录读取波士顿住房数据集（以`.csv`文件形式给出）：
- en: '[PRE37]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Check the first 10 records:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查前10条记录：
- en: '[PRE38]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The output is as follows:'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.23: Output displaying the first 10 records](img/C11065_03_23.jpg)'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.23：显示前10条记录的输出](img/C11065_03_23.jpg)'
- en: 'Figure 3.23: Output displaying the first 10 records'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.23：显示前10条记录的输出
- en: 'Find the total number of records:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找记录总数：
- en: '[PRE39]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The output is as follows:'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE40]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Create a smaller DataFrame with columns that do not include `CHAS`, `NOX`,
    `B`, and `LSTAT`:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含不包括`CHAS`、`NOX`、`B`和`LSTAT`列的小型DataFrame：
- en: '[PRE41]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Check the last 7 records of the new DataFrame you just created:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你刚刚创建的新DataFrame的最后7条记录：
- en: '[PRE42]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The output is as follows:'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.24: Last seven records of the DataFrame](img/C11065_03_24.jpg)'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.24：DataFrame的最后七条记录](img/C11065_03_24.jpg)'
- en: 'Figure 3.24: Last seven records of the DataFrame'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.24：DataFrame的最后七条记录
- en: 'Plot histograms of all the variables (columns) in the new DataFrame by using
    a `for` loop:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`for`循环通过绘制新DataFrame中所有变量（列）的直方图：
- en: '[PRE43]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The output is as follows:'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.25: Plot of all variables using a for loop](img/C11065_03_25.jpg)'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.25：使用for循环绘制的所有变量图](img/C11065_03_25.jpg)'
- en: 'Figure 3.25: Plot of all variables using a for loop'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.25：使用for循环绘制所有变量的图
- en: 'Crime rate could be an indicator of house price (people don''t want to live
    in high-crime areas). Create a scatter plot of crime rate versus price:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 犯罪率可能是房价的指标（人们不愿意住在高犯罪率地区）。创建犯罪率与价格的散点图：
- en: '[PRE44]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The output is as follows:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.26: Scatter plot of crime rate versus price](img/C11065_03_26.jpg)'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.26：犯罪率与价格的散点图](img/C11065_03_26.jpg)'
- en: 'Figure 3.26: Scatter plot of crime rate versus price'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.26：犯罪率与价格的散点图
- en: We can understand the relationship better if we plot log10(crime) versus price.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们绘制log10(crime)与价格的关系图，我们可以更好地理解这种关系。
- en: 'Create that plot of log10(crime) versus price:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建log10(crime)与价格的关系图：
- en: '[PRE45]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The output is as follows:'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 3.27: Scatter plot of crime rate (Log) versus price](img/C11065_03_27.jpg)'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.27：犯罪率（Log）与价格的散点图](img/C11065_03_27.jpg)'
- en: 'Figure 3.27: Scatter plot of crime rate (Log) versus price'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.27：犯罪率（Log）与价格的散点图
- en: 'Calculate the mean rooms per dwelling:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每户平均房间数：
- en: '[PRE46]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The output is `6.284634387351788`.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出为`6.284634387351788`。
- en: 'Calculate the median age:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算中位数年龄：
- en: '[PRE47]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The output is `77.5`.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出为`77.5`。
- en: 'Calculate the average (mean) distances to five Boston employment centers:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算平均（均值）距离五个波士顿就业中心：
- en: '[PRE48]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The output is `3.795042687747034`.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出为`3.795042687747034`。
- en: Calculate the percentage of houses with low price *(< $20,000):*
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算低价房屋（< $20,000）的百分比：
- en: '[PRE49]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The output is as follows:'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE50]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Solution of Activity 6: Working with the Adult Income Dataset (UCI)'
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动六的解决方案：处理UCI成人收入数据集
- en: 'These are the steps to complete this activity:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Load the necessary libraries:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载必要的库：
- en: '[PRE51]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Read in the adult income dataset (given as a `.csv` file) from the local directory
    and check the first 5 records:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本地目录读取成人收入数据集（以`.csv`文件形式给出）并检查前5条记录：
- en: '[PRE52]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The output is as follows:'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.61: DataFrame displaying the first five records from the .csv file](img/C11065_04_61.jpg)'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图4.61：显示.csv文件前五条记录的DataFrame](img/C11065_04_61.jpg)'
- en: 'Figure 4.61: DataFrame displaying the first five records from the .csv file'
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.61：显示 .csv 文件前五条记录的 DataFrame
- en: 'Create a script that will read a text file line by line and extracts the first
    line, which is the header of the .csv file:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个脚本，逐行读取文本文件并提取第一行，这是 .csv 文件的标题：
- en: '[PRE53]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The output is as follows:'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.62: Names of the columns in the database](img/C11065_04_62.jpg)'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.62：数据库中列的名称](img/C11065_04_62.jpg)'
- en: 'Figure 4.62: Names of the columns in the database'
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.62：数据库中列的名称
- en: 'Add a name of `Income` for the response variable (last column) to the dataset
    by using the `append` command:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `append` 命令将响应变量（最后一列）的名称 `Income` 添加到数据集中：
- en: '[PRE54]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Read the new file again using the following command:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令再次读取新文件：
- en: '[PRE55]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The output is as follows:'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_04_63.jpg)'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C11065_04_63.jpg)'
- en: 'Figure 4.63: DataFrame with the income column added'
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.63：添加了收入列的 DataFrame
- en: 'Use the `describe` command to get the statistical summary of the dataset:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `describe` 命令获取数据集的统计摘要：
- en: '[PRE56]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The output is as follows:'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_04_64.jpg)'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C11065_04_64.jpg)'
- en: 'Figure 4.64: Statistical summary of the dataset'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.64：数据集的统计摘要
- en: Note that only a small number of columns are included. Many variables in the
    dataset have multiple factors or classes.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，只包含少量列。数据集中许多变量具有多个因素或类别。
- en: 'Make a list of all the variables in the classes by using the following command:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令列出类中所有变量的列表：
- en: '[PRE57]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Create a loop to count and print them by using the following command:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建循环以计数并打印它们：
- en: '[PRE58]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The output is as follows:'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.65: Output of different factors or classes](img/C11065_04_65.jpg)'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.65：不同因素或类别的输出](img/C11065_04_65.jpg)'
- en: 'Figure 4.65: Output of different factors or classes'
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.65：不同因素或类别的输出
- en: 'Find the missing values by using the following command:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令查找缺失值：
- en: '[PRE59]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The output is as follows:'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.66: Finding the missing values](img/C11065_04_66.jpg)'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.66：查找缺失值](img/C11065_04_66.jpg)'
- en: 'Figure 4.66: Finding the missing values'
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.66：查找缺失值
- en: 'Create a DataFrame with only age, education, and occupation by using subsetting:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用子集选择创建只包含年龄、教育和职业的 DataFrame：
- en: '[PRE60]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The output is as follows:'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Fig 4.67: Subset DataFrame](img/C11065_04_67.jpg)'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.67：子集 DataFrame](img/C11065_04_67.jpg)'
- en: 'Figure 4.67: Subset DataFrame'
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.67：子集 DataFrame
- en: 'Plot a histogram of age with a bin size of 20:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以 20 为 bin 大小绘制年龄直方图：
- en: '[PRE61]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The output is as follows:'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE62]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '![Figure 4.68: Histogram of age with a bin size of 20](img/C11065_04_68.jpg)'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.68：20 个 bin 大小的年龄直方图](img/C11065_04_68.jpg)'
- en: 'Figure 4.68: Histogram of age with a bin size of 20'
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.68：20 个 bin 大小的年龄直方图
- en: 'Plot boxplots for `age` grouped by `education` (use a long figure size 25x10
    and make x ticks font size 15):'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以 25x10 的长图尺寸绘制按 `education` 分组的 `age` 的箱线图，并使 x 轴刻度字体大小为 15：
- en: '[PRE63]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The output is as follows:'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.69: Boxplot of age grouped by education](img/C11065_04_69.jpg)'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.69：按教育分组年龄的箱线图](img/C11065_04_69.jpg)'
- en: 'Figure 4.69: Boxplot of age grouped by education'
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.69：按教育分组的年龄箱线图
- en: Before doing any further operations, we need to use the `apply` method we learned
    in this chapter. It turns out that when reading the dataset from the CSV file,
    all the strings came with a whitespace character in front. So, we need to remove
    that whitespace from all the strings.
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在进行任何进一步的操作之前，我们需要使用本章学到的 `apply` 方法。结果发现，当我们从 CSV 文件中读取数据集时，所有字符串前都带有空格字符。因此，我们需要从所有字符串中删除该空格。
- en: 'Create a function to strip the whitespace characters:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数来删除空格字符：
- en: '[PRE64]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Use the `apply` method to apply this function to all the columns with string
    values, create a new column, copy the values from this new column to the old column,
    and drop the new column. This is the preferred method so that you don''t accidentally
    delete valuable data. Most of the time, you will need to create a new column with
    a desired operation and then copy it back to the old column if necessary. Ignore
    any warning messages that are printed:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `apply` 方法将此函数应用于所有具有字符串值的列，创建一个新列，将新列的值复制到旧列中，然后删除新列。这是首选方法，以免意外删除有价值的数据。大多数时候，您需要创建一个具有所需操作的新列，并在必要时将其复制回旧列。忽略打印出的任何警告信息：
- en: '[PRE65]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'This is the sample warning message, which you should ignore:'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是您应该忽略的示例警告信息：
- en: '![Figure 4.70: Warning message to be ignored](img/C11065_04_70.jpg)'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.70：可忽略的警告信息](img/C11065_04_70.jpg)'
- en: 'Figure 4.70: Warning message to be ignored'
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.70：忽略的警告信息
- en: 'Find the number of people who are aged between 30 and 50 (inclusive) by using
    the following command:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令找出 30 至 50 岁之间（包括）的人数：
- en: '[PRE66]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Check the contents of the new dataset:'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检查新数据集的内容：
- en: '[PRE67]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'The output is as follows:'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.71: Contents of new DataFrame](img/C11065_04_71.jpg)'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.71：新 DataFrame 的内容](img/C11065_04_71.jpg)'
- en: 'Figure 4.71: Contents of new DataFrame'
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.71：新 DataFrame 的内容
- en: 'Find the `shape` of the filtered DataFrame and specify the index of the tuple
    as 0 to return the first element:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找过滤后的 DataFrame 的 `shape`，并将元组的索引指定为 0 以返回第一个元素：
- en: '[PRE68]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The output is as follows:'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE69]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Print the number of black people aged between 30 and 50 using the following
    command:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印 30 至 50 岁之间黑人的数量：
- en: '[PRE70]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'The output is as follows:'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE71]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Group the records based on occupation to find how the mean age is distributed:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据职业对记录进行分组，以找出平均年龄的分布情况：
- en: '[PRE72]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The output is as follows:'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.72: DataFrame with data grouped by age and education](img/C11065_04_72.jpg)'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.72：按年龄和教育分组的数据 DataFrame](img/C11065_04_72.jpg)'
- en: 'Figure 4.72: DataFrame with data grouped by age and education'
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.72：按年龄和教育分组的数据 DataFrame
- en: The code returns `79 rows × 1 columns.`
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 代码返回 `79 rows × 1 columns.`（79 行 × 1 列。）
- en: 'Group by occupation and show the summary statistics of age. Find which profession
    has the oldest workers on average and which profession has its largest share of
    workforce above the 75th percentile:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按职业分组并显示年龄的汇总统计。找出平均年龄最大的职业以及在其劳动力中占比最大的 75 分位数以上的职业：
- en: '[PRE73]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'The output is as follows:'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.73: DataFrame showing summary statistics of age](img/C11065_04_73.jpg)'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.73：显示年龄汇总统计的 DataFrame](img/C11065_04_73.jpg)'
- en: 'Figure 4.73: DataFrame showing summary statistics of age'
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.73：显示年龄汇总统计的 DataFrame
- en: Is there a particular occupation group that has very low representation? Perhaps
    we should remove those pieces of data because with very low data, the group won't
    be useful in analysis. Actually, just by looking at the preceding table, you should
    be able to see that the `barh` function is the index of the DataFrame, which is
    the summary stats of the occupation groups. We can see that the **Armed-Forces**
    group has almost no data. This exercise teaches you that, sometimes, the outlier
    is not just a value, but can be a whole group. The data of this group is fine,
    but it is too small to be useful for any analysis. So, it can be treated as an
    outlier in this case. But always use your business knowledge and engineering judgement
    for such outlier detection and how to process them.
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 是否有某个职业群体代表性非常低？也许我们应该删除这些数据，因为数据非常低，该群体在分析中不会很有用。实际上，仅通过查看前面的表格，你应该能够看到 `barh`
    函数是 DataFrame 的索引，它是职业群体的汇总统计。我们可以看到 **武装部队** 群组几乎没有数据。这个练习教你，有时，异常值不仅仅是一个值，而可能是一个整个群体。这个群体的数据是好的，但太小，无法用于任何分析。因此，在这种情况下，它可以被视为异常值。但始终使用你的业务知识和工程判断来进行此类异常值检测以及如何处理它们。
- en: 'Use subset and groupby to find the outliers:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用子集和分组来查找异常值：
- en: '[PRE74]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Plot the values on a bar chart:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在条形图上绘制值：
- en: '[PRE75]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'The output is as follows:'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 4.74: Bar chart displaying occupation statistics](img/C11065_04_74.jpg)'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 4.74：显示职业统计的条形图](img/C11065_04_74.jpg)'
- en: 'Figure 4.74: Bar chart displaying occupation statistics'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.74：显示职业统计的条形图
- en: 'Practice merging by common keys. Suppose you are given two datasets where the
    common key is `occupation`. First, create two such disjoint datasets by taking
    random samples from the full dataset and then try merging. Include at least two
    other columns, along with the common key column for each dataset. Notice how the
    resulting dataset, after merging, may have more data points than either of the
    two starting datasets if your common key is not unique:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过公共键进行合并练习。假设你被给出了两个数据集，其中公共键是 `occupation`。首先，通过从完整数据集中随机抽取样本创建两个这样的非交集数据集，然后尝试合并。包括至少两个其他列，以及每个数据集的公共键列。注意，如果公共键不是唯一的，合并后的数据集可能比两个起始数据集中的任何一个都有更多的数据点：
- en: '[PRE76]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The output is as follows:'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_04_75.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C11065_04_75.jpg)'
- en: 'Figure 4.75: Output after merging the common keys'
  id: totrans-266
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.75：合并公共键后的输出
- en: 'The second dataset is as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个数据集如下：
- en: '[PRE77]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'The output is as follows:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_04_76.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](img/C11065_04_76.jpg)'
- en: 'Figure 4.76: Output after merging the common keys'
  id: totrans-271
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.76：合并公共键后的输出
- en: 'Merging the two datasets together:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个数据集合并在一起：
- en: '[PRE78]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'The output is as follows:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_04_77.jpg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![图片 5.37：DataFrame](img/C11065_04_77.jpg)'
- en: 'Figure 4.77: Output of distinct occupation values'
  id: totrans-276
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.77：不同职业值的输出
- en: 'Solution of Activity 7: Reading Tabular Data from a Web Page and Creating DataFrames'
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动第 7 部分的解决方案：从网页中读取表格数据并创建 DataFrame
- en: 'These are the steps to complete this activity:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Import BeautifulSoup and load the data by using the following command:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过以下命令导入 BeautifulSoup 并加载数据：
- en: '[PRE79]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Open the Wikipedia file by using the following command:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打开 Wikipedia 文件：
- en: '[PRE80]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Calculate the tables by using the following command:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算表格：
- en: '[PRE81]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: There are 9 tables in total.
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 总共有 9 个表格。
- en: 'Find the right table using the class attribute by using the following command:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用类属性通过以下命令查找正确的表格：
- en: '[PRE82]'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'The output is as follows:'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE83]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Separate the source and the actual data by using the following command:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过以下命令分离来源和实际数据：
- en: '[PRE84]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'The output is as follows:'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE85]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Use `findAll` function to find the data from the `data_table`''s `body` tag,
    using the following command:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `findAll` 函数通过以下命令从 `data_table` 的 `body` 标签中查找数据：
- en: '[PRE86]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'Use the `findAll` function to find the data from the `data_table` `td` tag
    by using the following command:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过 `findAll` 函数从 `data_table` 的 `td` 标签中查找数据：
- en: '[PRE87]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Find the length of `data_tables` by using the following command:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令查找 `data_tables` 的长度：
- en: '[PRE88]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'The output is as follows:'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE89]'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Check how to get the source names by using the following command:'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查如何获取来源名称：
- en: '[PRE90]'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The output is as follows:'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE91]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Separate the header and data for the first source:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分离第一个来源的标题和数据：
- en: '[PRE92]'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'The output is as follows:'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE93]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Find the rows from `data_tables` using `findAll`:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `findAll` 通过以下命令从 `data_tables` 中查找行：
- en: '[PRE94]'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Find the data from `rows1` using the `strip` function for each `td` tag:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `strip` 函数对每个 `td` 标签进行 `rows1` 中的数据查找：
- en: '[PRE95]'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'Find the DataFrame:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找 DataFrame：
- en: '[PRE96]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'The output is as follows:'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 5.35: DataFrame](img/C11065_05_351.jpg)'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 5.35：DataFrame](img/C11065_05_351.jpg)'
- en: 'Figure 5.35: DataFrame created from Web page'
  id: totrans-318
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5.35：从网页创建的 DataFrame
- en: 'Do the same for the other two sources by using the following command:'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令对其他两个来源执行相同的操作：
- en: '[PRE97]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'The output is as follows:'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE98]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Find the rows from `data_tables` using `findAll` by using the following command:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `findAll` 通过以下命令从 `data_tables` 中查找行：
- en: '[PRE99]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'Define `find_right_text` using the `strip` function by using the following
    command:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过 `strip` 函数定义 `find_right_text`：
- en: '[PRE100]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'Find the rows from `data_rows` using `find_right_text` by using the following
    command:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过 `find_right_text` 从 `data_rows` 中查找行：
- en: '[PRE101]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Calculate the `df2` DataFrame by using the following command:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算 `df2` DataFrame：
- en: '[PRE102]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'The output is as follows:'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 5.36: Output of the DataFrame'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 5.36：DataFrame 输出]'
- en: '](img/C11065_05_44.jpg)'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片 5.36：DataFrame 输出](img/C11065_05_44.jpg)'
- en: 'Figure 5.36: Output of the DataFrame'
  id: totrans-334
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5.36：DataFrame 输出
- en: 'Now, perform the same operations for the third DataFrame by using the following
    command:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用以下命令对第三个 DataFrame 执行相同的操作：
- en: '[PRE103]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'The output is as follows:'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE104]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'Find the rows from `data_tables` using `findAll` by using the following command:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令通过 `findAll` 从 `data_tables` 中查找行：
- en: '[PRE105]'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'Find the rows from `data_rows3` by using `find_right_text`:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `find_right_text` 通过以下命令从 `data_rows3` 中查找行：
- en: '[PRE106]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'Calculate the `df3` DataFrame by using the following command:'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令计算 `df3` DataFrame：
- en: '[PRE107]'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'The output is as follows:'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 5.37: The third DataFrame'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.37：第三个 DataFrame](img/C11065_05_37.jpg)'
- en: '](img/C11065_05_55.jpg)'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 5.55：](img/C11065_05_55.jpg)'
- en: 'Figure 5.37: The third DataFrame'
  id: totrans-348
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5.37：第三个 DataFrame
- en: 'Solution of Activity 8: Handling Outliers and Missing Data'
  id: totrans-349
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动第 8 部分的解决方案：处理异常值和缺失数据
- en: 'These are the steps to complete this activity:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Load the data:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载数据：
- en: '[PRE108]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Read the .csv file:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取 .csv 文件：
- en: '[PRE109]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'Print the data from the DataFrame:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印 DataFrame 中的数据：
- en: '[PRE110]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'The output is as follows:'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 6.10: The contents of the CSV file](img/C11065_06_10.jpg)'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 6.10：CSV 文件的内容](img/C11065_06_10.jpg)'
- en: 'Figure 6.10: The contents of the CSV file'
  id: totrans-359
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.10：CSV 文件的内容
- en: As we can see, there is data where some values are missing, and if we examine
    this, we will see some outliers.
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如我们所见，有一些数据值缺失，如果我们检查这些数据，我们会看到一些异常值。
- en: 'Check for duplicates by using the following command:'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查重复项：
- en: '[PRE111]'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'The output is as follows:'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE112]'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: There are duplicates in both the first and last names, which is normal. However,
    as we can see, there is no duplicate in email. That's good.
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在名字的第一和最后部分都有重复，这是正常的。然而，正如我们所看到的，电子邮件没有重复，这是好的。
- en: 'Check if any essential column contains `NaN`:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查是否有任何重要列包含`NaN`：
- en: '[PRE113]'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'The output is as follows:'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE114]'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: The column visit contains some None values. Given that the final task at hand
    will probably be predicting the number of visits, we cannot do anything with rows
    that do not have that information. They are a type of outlier. Let's get rid of
    them.
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 访问列包含一些`None`值。鉴于手头的最终任务可能是预测访问次数，我们无法处理没有该信息的行。它们是一种异常值。让我们去除它们。
- en: 'Get rid of the outliers:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 去除异常值：
- en: '[PRE115]'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'Report the size difference:'
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 报告大小差异：
- en: '[PRE116]'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'The output is as follows:'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE117]'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Plot a boxplot to find if the data has outliers.
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制箱线图以检查数据是否有异常值。
- en: '[PRE118]'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'The output is as follows:'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE119]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'The boxplot is as follows:'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 箱线图如下：
- en: '![Figure 6.43: Boxplot using the data](img/C11065_06_43.jpg)'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图6.43：使用数据的箱线图](img/C11065_06_43.jpg)'
- en: 'Figure 6.43: Boxplot using the data'
  id: totrans-383
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.43：使用数据的箱线图
- en: As we can see, we have data in this column in the interval (0, 3000). However,
    the main concentration of the data is between ~700 and ~2300\.
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如我们所见，我们在这个列中有数据，在区间（0，3000）内。然而，数据的主要集中在大约700到大约2300之间。
- en: 'Get rid of values beyond 2900 and below 100 – these are outliers for us. We
    need to get rid of them:'
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 去除超过2900和低于100的值——这些对我们来说是异常值。我们需要去除它们：
- en: '[PRE120]'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: After getting rid of the outliers, the new size of the data is `923.`
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 去除异常值后，新数据的大小是`923`。
- en: This is the end of the activity for this chapter.
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是本章活动的结束。
- en: 'Solution of Activity 9: Extracting the Top 100 eBooks from Gutenberg'
  id: totrans-389
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动九的解决方案：从古腾堡提取前100本电子书
- en: 'These are the steps to complete this activity:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: Import the necessary libraries, including `regex` and `beautifulsoup:`
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入必要的库，包括`regex`和`beautifulsoup`：
- en: '[PRE121]'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'Check the SSL certificate:'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查SSL证书：
- en: '[PRE122]'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'Read the HTML from the URL:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从URL读取HTML：
- en: '[PRE123]'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'Write a small function to check the status of the web request:'
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个小函数来检查网络请求的状态：
- en: '[PRE124]'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'Check the status of `response`:'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`response`的状态：
- en: '[PRE125]'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'The output is as follows:'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE126]'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Decode the response and pass it on to `BeautifulSoup` for HTML parsing:'
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解码响应并将其传递给`BeautifulSoup`进行HTML解析：
- en: '[PRE127]'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'Find all the `href` tags and store them in the list of links. Check what the
    list looks like – print the first 30 elements:'
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到所有的`href`标签并将它们存储在链接列表中。检查列表的外观——打印前30个元素：
- en: '[PRE128]'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'Print the links by using the following command:'
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打印链接：
- en: '[PRE129]'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE129]'
- en: 'The output is as follows:'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE130]'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'Use a regular expression to find the numeric digits in these links. These are
    the file numbers for the top 100 books. Initialize the empty list to hold the
    file numbers:'
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用正则表达式在这些链接中查找数字。这些是前100本书的文件编号。初始化一个空列表来保存文件编号：
- en: '[PRE131]'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 'Numbers 19 to 118 in the original list of links have the top 100 eBooks'' numbers.
    Loop over the appropriate range and use a regex to find the numeric digits in
    the link (href) string. Use the `findall()` method:'
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 原始链接列表中的第19到118号数字是前100本电子书的编号。遍历适当的范围并使用正则表达式在链接（href）字符串中查找数字。使用`findall()`方法：
- en: '[PRE132]'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'Print the file numbers:'
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印文件编号：
- en: '[PRE133]'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 'The output is as follows:'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE134]'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE134]'
- en: What does the soup object's text look like? Use the .`text` method and print
    only the first 2,000 characters (do not print the whole thing as it is too long).
  id: totrans-419
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: soup对象的文本看起来是什么样子？使用`.`text`方法并仅打印前2,000个字符（不要打印整个内容，因为它太长了）。
- en: 'You will notice a lot of empty spaces/blanks here and there. Ignore them. They
    are part of the HTML page''s markup and its whimsical nature:'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会注意到这里和那里有很多空格/空白。忽略它们。它们是HTML页面标记和其随意性质的一部分：
- en: '[PRE135]'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE135]'
- en: 'The output is as follows:'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE136]'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'Search the extracted text (using regular expression) from the soup object to
    find the names of top 100 eBooks (yesterday''s rank):'
  id: totrans-424
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用正则表达式从soup对象中搜索提取的文本，以找到前100本电子书的名称（昨日的排名）：
- en: '[PRE137]'
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'Create a starting index. It should point at the text `splitlines` method of
    `soup.text`. It splits the lines of the text of the soup object:'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个起始索引。它应该指向`soup.text`的`splitlines`方法。它将soup对象的文本行分割成行：
- en: '[PRE138]'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'Loop 1-100 to add the strings of the next 100 lines to this temporary list.
    Hint: use the `splitlines` method:'
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 循环1-100，将下一100行的字符串添加到这个临时列表中。提示：使用`splitlines`方法：
- en: '[PRE139]'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'Use a regular expression to extract only text from the name strings and append
    them to an empty list. Use match and span to find the indices and use them:'
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用正则表达式从名称字符串中提取文本并将其追加到空列表中。使用match和span找到索引并使用它们：
- en: '[PRE140]'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'Print the list of titles:'
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印标题列表：
- en: '[PRE141]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'The output is as follows:'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE142]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'Solution of Activity 10: Extracting the top 100 eBooks from Gutenberg.org'
  id: totrans-436
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动第 10 项的解决方案：从 Gutenberg.org 提取前 100 本电子书
- en: 'These are the steps to complete this activity:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Import `urllib.request`, `urllib.parse`, `urllib.error`, and `json`:'
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `urllib.request`、`urllib.parse`、`urllib.error` 和 `json`：
- en: '[PRE143]'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'Load the secret API key (you have to get one from the OMDB website and use
    that; it has a 1,000 daily limit) from a JSON file, stored in the same folder
    into a variable, by using `json.loads()`:'
  id: totrans-440
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `json.loads()` 从存储在同一文件夹中的 JSON 文件中加载秘密 API 密钥（你必须从 OMDB 网站获取一个并使用它；它有每天
    1,000 次的限制），并将其存储在一个变量中：
- en: Note
  id: totrans-441
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The following cell will not be executed in the solution notebook because the
    author cannot give out their private API key.
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下单元格在解决方案笔记本中不会执行，因为作者无法提供他们的私人 API 密钥。
- en: The students/users/instructor will need to obtain a key and store it in a JSON
    file. We are calling this file `APIkeys.json`.
  id: totrans-443
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 学生/用户/讲师需要获取一个密钥并将其存储在一个名为 `APIkeys.json` 的 JSON 文件中。我们称此文件为 `APIkeys.json`。
- en: 'Open the `APIkeys.json` file by using the following command:'
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打开 `APIkeys.json` 文件：
- en: '[PRE144]'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'The final URL to be passed should look like this: [http://www.omdbapi.com/?t=movie_name&apikey=secretapikey](http://www.omdbapi.com/?t=movie_name&apikey=secretapikey).'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要传递的最终 URL 应该看起来像这样：[http://www.omdbapi.com/?t=movie_name&apikey=secretapikey](http://www.omdbapi.com/?t=movie_name&apikey=secretapikey)。
- en: 'Assign the OMDB portal ([http://www.omdbapi.com/?](http://www.omdbapi.com/?))
    as a string to a variable called `serviceurl` by using the following command:'
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将 OMDB 站点（[http://www.omdbapi.com/?](http://www.omdbapi.com/?)）作为字符串分配给名为
    `serviceurl` 的变量：
- en: '[PRE145]'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'Create a variable called `apikey` with the last portion of the URL (`&apikey=secretapikey`),
    where `secretapikey` is your own API key. The movie name portion is `t=movie_name`,
    and will be addressed later:'
  id: totrans-449
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `apikey` 的变量，使用 URL 的最后一部分（`&apikey=secretapikey`），其中 `secretapikey`
    是你自己的 API 密钥。电影名称部分是 `t=movie_name`，稍后将会说明：
- en: '[PRE146]'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'Write a utility function called `print_json` to print the movie data from a
    JSON file (which we will get from the portal). Here are the keys of a JSON file:
    ''Title'', ''Year'', ''Rated'', ''Released'', ''Runtime'', ''Genre'', ''Director'',
    ''Writer'', ''Actors'', ''Plot'', ''Language'',''Country'', ''Awards'', ''Ratings'',
    ''Metascore'', ''imdbRating'', ''imdbVotes'', and ''imdbID'':'
  id: totrans-451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为 `print_json` 的实用函数，用于从 JSON 文件（我们将从该站点获取）中打印电影数据。以下是 JSON 文件的键：'Title'（标题）、'Year'（年份）、'Rated'（评级）、'Released'（上映日期）、'Runtime'（时长）、'Genre'（类型）、'Director'（导演）、'Writer'（编剧）、'Actors'（演员）、'Plot'（剧情）、'Language'（语言）、'Country'（国家）、'Awards'（奖项）、'Ratings'（评分）、'Metascore'（评分）、'imdbRating'（imdb评分）、'imdbVotes'（imdb投票数）和
    'imdbID'（imdb ID）：
- en: '[PRE147]'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'Write a utility function to download a poster of the movie based on the information
    from the JSON dataset and save it in your local folder. Use the `os` module. The
    poster data is stored in the JSON key `Poster`. You may want to split the name
    of the `Poster` file and extract the file extension only. Let''s say that the
    extension is `jpg`. We would later join this extension to the movie name and create
    a filename such as `movie.jpg`. Use the open Python command open to open a file
    and write the poster data. Close the file after you''re done. This function may
    not return anything. It just saves the poster data as an image file:'
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个实用函数，根据 JSON 数据集中的信息下载电影的海报并将其保存在你的本地文件夹中。使用 `os` 模块。海报数据存储在 JSON 键 `Poster`
    中。你可能需要拆分 `Poster` 文件名并提取文件扩展名。比如说，扩展名是 `jpg`。我们稍后会把这个扩展名和电影名称连接起来创建一个文件名，例如 `movie.jpg`。使用
    open Python 命令打开文件并写入海报数据。完成后关闭文件。此函数可能不会返回任何内容，它只是将海报数据保存为图像文件：
- en: '[PRE148]'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE148]'
- en: 'Write a utility function called `search_movie` to search a movie by its name,
    print the downloaded JSON data (use the `print_json` function for this), and save
    the movie poster in the local folder (use the `save_poster` function for this).
    Use a `try-except` loop for this, that is, try to connect to the web portal. If
    successful, proceed, but if not (that is, if an exception is raised), then just
    print an error message. Use the previously created variables `serviceurl` and
    `apikey`. You have to pass on a dictionary with a key, `t`, and the movie name
    as the corresponding value to the `urllib.parse.urlencode` function and then add
    the `serviceurl` and `apikey` to the output of the function to construct the full
    URL. This URL will be used for accessing the data. The JSON data has a key called
    `Response`. If it is `True`, that means that the read was successful. Check this
    before processing the data. If it was not successful, then print the JSON key
    `Error`, which will contain the appropriate error message that''s returned by
    the movie database:'
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为 `search_movie` 的实用函数，通过电影名称搜索电影，打印下载的 JSON 数据（使用 `print_json` 函数进行此操作），并将电影海报保存在本地文件夹中（使用
    `save_poster` 函数进行此操作）。使用 `try-except` 循环进行此操作，即尝试连接到网络门户。如果成功，则继续进行，如果不成功（即，如果引发异常），则仅打印错误消息。使用先前创建的变量
    `serviceurl` 和 `apikey`。你必须传递一个包含键 `t` 和电影名称作为相应值的字典到 `urllib.parse.urlencode`
    函数，然后将 `serviceurl` 和 `apikey` 添加到函数的输出以构造完整的 URL。此 URL 将用于访问数据。JSON 数据有一个名为 `Response`
    的键。如果它是 `True`，则表示读取成功。在处理数据之前检查这一点。如果不成功，则打印 JSON 键 `Error`，它将包含电影数据库返回的适当错误消息：
- en: '[PRE149]'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE149]'
- en: 'Test the `search_movie` function by entering `Titanic`:'
  id: totrans-457
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入 `Titanic` 测试 `search_movie` 函数：
- en: '[PRE150]'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE150]'
- en: 'The following is the retrieved data for `Titanic`:'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是为 `Titanic` 检索到的数据：
- en: '[PRE151]'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'Test the `search_movie` function by entering `"Random_error"` (obviously, this
    will not be found, and you should be able to check whether your error catching
    code is working properly):'
  id: totrans-461
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入 `"Random_error"`（显然，这将找不到，你应该能够检查你的错误捕获代码是否正常工作）来测试 `search_movie` 函数：
- en: '[PRE152]'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE152]'
- en: 'Retrieve the data of `"Random_error"`:'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检索 `"Random_error"` 的数据：
- en: '[PRE153]'
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE153]'
- en: Look for a folder called `Posters` in the same directory you are working in.
    It should contain a file called `Titanic.jpg`. Check the file.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 在你工作的同一目录中查找名为 `Posters` 的文件夹。它应该包含一个名为 `Titanic.jpg` 的文件。检查该文件。
- en: 'Solution of Activity 11: Retrieving Data Correctly from Databases'
  id: totrans-466
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动第 11 项的解决方案：正确从数据库检索数据
- en: 'These are the steps to complete this activity:'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Connect to the supplied `petsDB` database:'
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到提供的 `petsDB` 数据库：
- en: '[PRE154]'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'Write a function to check whether the connection has been successful:'
  id: totrans-470
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个函数来检查连接是否成功：
- en: '[PRE155]'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 'The output is as follows:'
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE156]'
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 'Close the connection:'
  id: totrans-474
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭连接：
- en: '[PRE157]'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'Check whether the connection is open or closed:'
  id: totrans-476
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查连接是否打开或关闭：
- en: '[PRE158]'
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'The output is as follows:'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE159]'
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'Find out the different age groups are in the `persons` database. Connect to
    the supplied `petsDB` database:'
  id: totrans-480
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找 `persons` 数据库中的不同年龄组。连接到提供的 `petsDB` 数据库：
- en: '[PRE160]'
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'Execute the following command:'
  id: totrans-482
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE161]'
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'The output is as follows:'
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 8.17: Section of output grouped by age](img/C11065_08_17.jpg)'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 8.17：按年龄分组的输出部分](img/C11065_08_17.jpg)'
- en: 'Figure 8.17: Section of output grouped by age'
  id: totrans-486
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8.17：按年龄分组的输出部分
- en: 'To find out which age group has the highest number of people, execute the following
    command:'
  id: totrans-487
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出哪个年龄组的人数最多，请执行以下命令：
- en: '[PRE162]'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE162]'
- en: 'The output is as follows:'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE163]'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE163]'
- en: 'To find out how many people do not have a full name (the last name is blank/null),
    execute the following command:'
  id: totrans-491
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出有多少人没有全名（姓氏为空/空值），请执行以下命令：
- en: '[PRE164]'
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE164]'
- en: 'The output is as follows:'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE165]'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE165]'
- en: 'To find out how many people have more than one pet, execute the following command:'
  id: totrans-495
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出有多少人有多于一只宠物，请执行以下命令：
- en: '[PRE166]'
  id: totrans-496
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE166]'
- en: 'The output is as follows:'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE167]'
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'To find out how many pets have received treatment, execute the following command:'
  id: totrans-499
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出接受过治疗的有多少宠物，请执行以下命令：
- en: '[PRE168]'
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'The output is as follows:'
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE169]'
  id: totrans-502
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'To find out how many pets have received treatment and the type of pet is known,
    execute the following command:'
  id: totrans-503
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出接受过治疗且已知宠物类型的宠物有多少，请执行以下命令：
- en: '[PRE170]'
  id: totrans-504
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE170]'
- en: 'The output is as follows:'
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE171]'
  id: totrans-506
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE171]'
- en: 'To find out how many pets are from the city called "east port", execute the
    following command:'
  id: totrans-507
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出来自名为 "east port" 的城市的宠物有多少，请执行以下命令：
- en: '[PRE172]'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE172]'
- en: 'The output is as follows:'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE173]'
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE173]'
- en: 'To find out how many pets are from the city called "east port" and who received
    treatment, execute the following command:'
  id: totrans-511
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出有多少宠物来自名为“东港”的城市并且接受了治疗，执行以下命令：
- en: '[PRE174]'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE174]'
- en: 'The output is as follows:'
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE175]'
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE175]'
- en: 'Solution of Activity 12: Data Wrangling Task – Fixing UN Data'
  id: totrans-515
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动十二的解决方案：数据整理任务 - 修复联合国数据
- en: 'These are the steps to complete this activity:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Import the required libraries:'
  id: totrans-517
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的库：
- en: '[PRE176]'
  id: totrans-518
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE176]'
- en: 'Save the URL of the dataset and use the pandas `read_csv` method to directly
    pass this link and create a DataFrame:'
  id: totrans-519
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存数据集的URL并使用pandas的`read_csv`方法直接传递此链接以创建DataFrame：
- en: '[PRE177]'
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'Print the data in the DataFrame:'
  id: totrans-521
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印DataFrame中的数据：
- en: '[PRE178]'
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'The output is as follows:'
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.4: DataFrame after removing the first row](img/C11065_9_3.jpg)'
  id: totrans-524
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.4：删除第一行后的DataFrame](img/C11065_9_3.jpg)'
- en: 'Figure 9.3: DataFrame from the UN data'
  id: totrans-525
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.3：联合国数据的DataFrame
- en: 'As the first row does not contain useful information, use the `skiprows` parameter
    to remove the first row:'
  id: totrans-526
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于第一行不包含有用的信息，使用`skiprows`参数删除第一行：
- en: '[PRE179]'
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE179]'
- en: 'Print the data in the DataFrame:'
  id: totrans-528
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印DataFrame中的数据：
- en: '[PRE180]'
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE180]'
- en: 'The output is as follows:'
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.4: DataFrame after removing the first row](img/C11065_9_4.jpg)'
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.4：删除第一行后的DataFrame](img/C11065_9_4.jpg)'
- en: 'Figure 9.4: DataFrame after removing the first row'
  id: totrans-532
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.4：删除第一行后的DataFrame
- en: 'Drop the column Region/Country/Area and Source as they will not be very helpful:'
  id: totrans-533
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除Region/Country/Area和Source列，因为它们不太有帮助：
- en: '[PRE181]'
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE181]'
- en: 'Assign the following names as the columns of the DataFrame: `[''Region/Country/Area'',''Year'',''Data'',''Value'',''Footnotes'']`'
  id: totrans-535
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下名称分配为DataFrame的列：`['Region/Country/Area','Year','Data','Value','Footnotes']`
- en: '[PRE182]'
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE182]'
- en: 'Print the data in the DataFrame:'
  id: totrans-537
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印DataFrame中的数据：
- en: '[PRE183]'
  id: totrans-538
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE183]'
- en: 'The output is as follows:'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.5: DataFrame after dropping Region/Country/Area and Source columns](img/C11065_9_5.jpg)'
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.5：删除Region/Country/Area和Source列后的DataFrame](img/C11065_9_5.jpg)'
- en: 'Figure 9.5: DataFrame after dropping Region/Country/Area and Source columns'
  id: totrans-541
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.5：删除Region/Country/Area和Source列后的DataFrame
- en: 'Check how many unique values the `Footnotes` column contains:'
  id: totrans-542
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`Footnotes`列包含多少唯一值：
- en: '[PRE184]'
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE184]'
- en: 'The output is as follows:'
  id: totrans-544
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.6: Unique values of the Footnotes column](img/C11065_9_6.jpg)'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.6：脚注列的唯一值](img/C11065_9_6.jpg)'
- en: 'Figure 9.6: Unique values of the Footnotes column'
  id: totrans-546
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.6：脚注列的唯一值
- en: 'Convert the `Value` column data into a numeric one for further processing:'
  id: totrans-547
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Value`列数据转换为数值型，以便进一步处理：
- en: '[PRE185]'
  id: totrans-548
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE185]'
- en: 'The output is as follows:'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE186]'
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE186]'
- en: 'Create a utility function to convert the strings in the Value column into floating-point
    numbers:'
  id: totrans-551
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个实用函数，将`Value`列中的字符串转换为浮点数：
- en: '[PRE187]'
  id: totrans-552
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE187]'
- en: 'Use the `apply` method to apply this function to the `Value` column data:'
  id: totrans-553
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`apply`方法将此函数应用于`Value`列数据：
- en: '[PRE188]'
  id: totrans-554
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE188]'
- en: 'Print the unique types of data in the `Data` column:'
  id: totrans-555
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`Data`列中数据的唯一类型：
- en: '[PRE189]'
  id: totrans-556
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE189]'
- en: 'The output is as follows:'
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![](img/C11065_9_7.jpg)'
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C11065_9_7.jpg)'
- en: Figure 9.7:Unique values in a column
  id: totrans-559
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.7：列中的唯一值
- en: 'Create three DataFrames by filtering and selecting them from the original DataFrame:'
  id: totrans-560
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过过滤和选择从原始DataFrame中创建三个DataFrame：
- en: '**df_primary**: Only students enrolled in primary education (thousands)'
  id: totrans-561
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**df_primary**：仅包含接受基础教育的学生（千）'
- en: '**df_secondary**: Only students enrolled in secondary education (thousands)'
  id: totrans-562
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**df_secondary**：仅包含接受中等教育的学生（千）'
- en: '**df_tertiary**: Only students enrolled in tertiary education (thousands):'
  id: totrans-563
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**df_tertiary**：仅包含接受高等教育的学生（千）：'
- en: '[PRE190]'
  id: totrans-564
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE190]'
- en: 'Compare them using bar charts of the primary students'' enrollment of a low-income
    country and a high-income country:'
  id: totrans-565
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用条形图比较低收入国家和高收入国家的初级学生入学率：
- en: '[PRE191]'
  id: totrans-566
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE191]'
- en: 'Print the `primary_enrollment_india` data:'
  id: totrans-567
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`primary_enrollment_india`数据：
- en: '[PRE192]'
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE192]'
- en: 'The output is as follows:'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.8: Data for the enrollment in primary education in India](img/C11065_9_8.jpg)'
  id: totrans-570
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.8：印度基础教育入学率的数据](img/C11065_9_8.jpg)'
- en: 'Figure 9.8: Data for the enrollment in primary education in India'
  id: totrans-571
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.8：印度基础教育入学率的数据
- en: 'Print the `primary_enrollment_USA` data:'
  id: totrans-572
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`primary_enrollment_USA`数据：
- en: '[PRE193]'
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE193]'
- en: 'The output is as follows:'
  id: totrans-574
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.9: Data for the enrollment in primary education in USA](img/C11065_9_9.jpg)'
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.9：美国基础教育入学率的数据](img/C11065_9_9.jpg)'
- en: 'Figure 9.9: Data for the enrollment in primary education in USA'
  id: totrans-576
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.9：美国基础教育入学率的数据
- en: 'Plot the data for India:'
  id: totrans-577
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制印度数据：
- en: '[PRE194]'
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE194]'
- en: 'The output is as follows:'
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.10: Bar plot for the enrollment in primary education in India](img/C11065_9_10.jpg)'
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.10：印度基础教育入学率的条形图](img/C11065_9_10.jpg)'
- en: 'Figure 9.10: Bar plot for the enrollment in primary education in India'
  id: totrans-581
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.10：印度小学入学柱状图
- en: 'Plot the data for the USA:'
  id: totrans-582
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制美国的数据：
- en: '[PRE195]'
  id: totrans-583
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE195]'
- en: 'The output is as follows:'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.11: Bar plot for the enrollment in primary education in the USA](img/C11065_9_11.jpg)'
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.11：美国小学入学柱状图](img/C11065_9_11.jpg)'
- en: 'Figure 9.11: Bar plot for the enrollment in primary education in the USA'
  id: totrans-586
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.11：美国小学入学柱状图
- en: 'Data imputation: Clearly, we are missing some data. Let''s say we decide to
    impute these data points by simple linear interpolation between the available
    data points. We can take out a pen and paper or a calculator and compute those
    values and manually create a dataset somehow. But being a data wrangler, we will
    of course take advantage of Python programming, and use pandas imputation methods
    for this task. But to do that, we first need to create a DataFrame with missing
    values inserted – that is, we need to append another DataFrame with missing values
    to the current DataFrame.'
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据插补：显然，我们缺少一些数据。假设我们决定通过在可用数据点之间进行简单线性插值来插补这些数据点。我们可以拿出笔和纸或计算器来计算这些值，并手动创建一个数据集。但作为一个数据处理员，我们当然会利用Python编程，并使用pandas插补方法来完成这项任务。但要做到这一点，我们首先需要创建一个包含缺失值的DataFrame
    – 也就是说，我们需要将另一个包含缺失值的DataFrame附加到当前DataFrame中。
- en: '**(For India) Append the rows corresponding to missing the years** – **2004
    - 2009, 2011 – 2013.**'
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**（针对印度）附加对应缺失年份的行** – **2004 - 2009, 2011 – 2013**。'
- en: 'Find the missing years:'
  id: totrans-589
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出缺失的年份：
- en: '[PRE196]'
  id: totrans-590
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE196]'
- en: Print the value in the `missing_years variable:`
  id: totrans-591
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`missing_years`变量中的值：
- en: '[PRE197]'
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE197]'
- en: 'The output is as follows:'
  id: totrans-593
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE198]'
  id: totrans-594
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE198]'
- en: 'Create a dictionary of values with `np.nan`. Note that there are 9 missing
    data points, so we need to create a list with identical values repeated 9 times:'
  id: totrans-595
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`np.nan`创建一个包含值的字典。注意，有9个缺失数据点，因此我们需要创建一个包含相同值重复9次的列表：
- en: '[PRE199]'
  id: totrans-596
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE199]'
- en: 'Create a DataFrame of missing values (from the preceding dictionary) that we
    can `append`:'
  id: totrans-597
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含缺失值的DataFrame（来自前面的字典），我们可以`append`：
- en: '[PRE200]'
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE200]'
- en: 'Append the new DataFrames to previously existing ones:'
  id: totrans-599
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新的DataFrames附加到之前存在的DataFrame中：
- en: '[PRE201]'
  id: totrans-600
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE201]'
- en: 'Print the data in `primary_enrollment_india`:'
  id: totrans-601
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`primary_enrollment_india`中的数据：
- en: '[PRE202]'
  id: totrans-602
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE202]'
- en: 'The output is as follows:'
  id: totrans-603
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.12: Data for the enrollment in primary education in India after
    appending the data](img/C11065_9_12.jpg)'
  id: totrans-604
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.12：对印度小学入学数据进行附加数据后的数据](img/C11065_9_12.jpg)'
- en: 'Figure 9.12: Data for the enrollment in primary education in India after appending
    the data'
  id: totrans-605
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.12：对印度小学入学数据进行附加数据后的数据
- en: 'Sort by `year` and reset the indices using `reset_index`. Use `inplace=True`
    to execute the changes on the DataFrame itself:'
  id: totrans-606
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照年份排序并使用`reset_index`重置索引。使用`inplace=True`在DataFrame本身上执行更改：
- en: '[PRE203]'
  id: totrans-607
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE203]'
- en: 'Print the data in `primary_enrollment_india`:'
  id: totrans-608
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`primary_enrollment_india`中的数据：
- en: '[PRE204]'
  id: totrans-609
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE204]'
- en: 'The output is as follows:'
  id: totrans-610
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.13: Data for the enrollment in primary education in India after
    sorting the data](img/C11065_9_13.jpg)'
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.13：对印度小学入学数据进行排序后的数据](img/C11065_9_13.jpg)'
- en: 'Figure 9.13: Data for the enrollment in primary education in India after sorting
    the data'
  id: totrans-612
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.13：对印度小学入学数据进行排序后的数据
- en: 'Use the `interpolate` method for linear interpolation. It fills all the `NaN`
    by linearly interpolated values. Check out this link for more details about this
    method: [http://pandas.pydata.org/pandas-docs/version/0.17/generated/pandas.DataFrame.interpolate.html](http://pandas.pydata.org/pandas-docs/version/0.17/generated/pandas.DataFrame.interpolate.html):'
  id: totrans-613
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`interpolate`方法进行线性插值。它通过线性插值值填充所有的`NaN`。有关此方法的更多详细信息，请查看此链接：[http://pandas.pydata.org/pandas-docs/version/0.17/generated/pandas.DataFrame.interpolate.html](http://pandas.pydata.org/pandas-docs/version/0.17/generated/pandas.DataFrame.interpolate.html)：
- en: '[PRE205]'
  id: totrans-614
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE205]'
- en: 'Print the data in `primary_enrollment_india`:'
  id: totrans-615
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`primary_enrollment_india`中的数据：
- en: '[PRE206]'
  id: totrans-616
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE206]'
- en: 'The output is as follows:'
  id: totrans-617
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![](img/C11065_9_14.jpg)'
  id: totrans-618
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C11065_9_14.jpg)'
- en: 'Figure 9.14: Data for the enrollment in primary education in India after interpolating
    the data'
  id: totrans-619
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.14：对印度小学入学数据进行插值后的数据
- en: 'Plot the data:'
  id: totrans-620
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制数据：
- en: '[PRE207]'
  id: totrans-621
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE207]'
- en: 'The output is as follows:'
  id: totrans-622
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 9.15: Bar plot for the enrollment in primary education in India](img/C11065_9_15.jpg)'
  id: totrans-623
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.15：印度小学入学柱状图](img/C11065_9_15.jpg)'
- en: 'Figure 9.15: Bar plot for the enrollment in primary education in India'
  id: totrans-624
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.15：印度小学入学柱状图
- en: 'Repeat the same steps for the USA:'
  id: totrans-625
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对美国重复相同的步骤：
- en: '[PRE208]'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE208]'
- en: Print the value in `missing_years`.
  id: totrans-627
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`missing_years`中的值。
- en: '[PRE209]'
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE209]'
- en: 'The output is as follows:'
  id: totrans-629
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE210]'
  id: totrans-630
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE210]'
- en: 'Create `dict_missing`, as follows:'
  id: totrans-631
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`dict_missing`，如下所示：
- en: '[PRE211]'
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE211]'
- en: 'Create the DataFrame fpr `df_missing`, as follows:'
  id: totrans-633
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`df_missing`的DataFrame，如下所示：
- en: '[PRE212]'
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE212]'
- en: 'Append this to the `primary_enrollment_USA` variable, as follows:'
  id: totrans-635
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此追加到`primary_enrollment_USA`变量，如下所示：
- en: '[PRE213]'
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE213]'
- en: 'Sort the values in the `primary_enrollment_USA` variable, as follows:'
  id: totrans-637
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对`primary_enrollment_USA`变量中的值进行排序，如下所示：
- en: '[PRE214]'
  id: totrans-638
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE214]'
- en: 'Reset the index of the `primary_enrollment_USA` variable, as follows:'
  id: totrans-639
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重置`primary_enrollment_USA`变量的索引，如下所示：
- en: '[PRE215]'
  id: totrans-640
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE215]'
- en: 'Interpolate the `primary_enrollment_USA` variable, as follows:'
  id: totrans-641
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式插值`primary_enrollment_USA`变量：
- en: '[PRE216]'
  id: totrans-642
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE216]'
- en: 'Print the `primary_enrollment_USA` variable:'
  id: totrans-643
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`primary_enrollment_USA`变量：
- en: '[PRE217]'
  id: totrans-644
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE217]'
- en: 'The output is as follows:'
  id: totrans-645
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.16: Data for the enrollment in primary education in USA after all
    operations have been completed](img/C11065_9_16.jpg)'
  id: totrans-646
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.16：完成所有操作后美国小学入学数据](img/C11065_9_16.jpg)'
- en: 'Figure 9.16: Data for the enrollment in primary education in USA after all
    operations have been completed'
  id: totrans-647
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.16：完成所有操作后美国小学入学数据
- en: 'Still, the first value is unfilled. We can use the `limit` and `limit_direction`
    parameters with the interpolate method to fill that. How did we know this? By
    searching on Google and looking at this StackOverflow page. Always search for
    the solution to your problem and look for what has already been done and try to
    implement it:'
  id: totrans-648
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽管如此，第一个值是空的。我们可以使用`limit`和`limit_direction`参数与插值方法来填充它。我们是如何知道这个的？通过在Google上搜索并查看这个StackOverflow页面。始终搜索你问题的解决方案，寻找已经完成的工作并尝试实现它：
- en: '[PRE218]'
  id: totrans-649
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE218]'
- en: 'The output is as follows:'
  id: totrans-650
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.17: Data for the enrollment in primary education in the USA after
    limiting the data](img/C11065_9_17.jpg)'
  id: totrans-651
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.17：限制数据后美国小学入学数据](img/C11065_9_17.jpg)'
- en: 'Figure 9.17: Data for the enrollment in primary education in the USA after
    limiting the data'
  id: totrans-652
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.17：限制数据后美国小学入学数据
- en: 'Print the data in primary_enrollment_USA:'
  id: totrans-653
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印`primary_enrollment_USA`中的数据：
- en: '[PRE219]'
  id: totrans-654
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE219]'
- en: 'The output is as follows:'
  id: totrans-655
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.18: Data for the enrollment in primary education in USA](img/C11065_9_18.jpg)'
  id: totrans-656
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.18：美国小学入学数据](img/C11065_9_18.jpg)'
- en: 'Figure 9.18: Data for the enrollment in primary education in USA'
  id: totrans-657
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.18：美国小学入学数据
- en: 'Plot the data:'
  id: totrans-658
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制数据：
- en: '[PRE220]'
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE220]'
- en: 'The output is as follows:'
  id: totrans-660
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.19: Bar plot for the enrollment in primary education in the USA](img/C11065_9_19.jpg)'
  id: totrans-661
  prefs: []
  type: TYPE_IMG
  zh: '![图9.19：美国小学入学条形图](img/C11065_9_19.jpg)'
- en: 'Figure 9.19: Bar plot for the enrollment in primary education in the USA'
  id: totrans-662
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.19：美国小学入学条形图
- en: 'Activity 13: Data Wrangling Task – Cleaning GDP Data'
  id: totrans-663
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动13：数据处理任务 – 清洗GDP数据
- en: 'These are the steps to complete this activity:'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'GDP data for India: We will try to read the GDP data for India from a CSV file
    that was found in a World Bank portal. It is given to you and also hosted on the
    Packt GitHub repository. But the Pandas `read_csv` method will throw an error
    in we try to read it normally. Let''s look at a step-by-step guide on how we can
    read useful information from it:'
  id: totrans-665
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 印度GDP数据：我们将尝试从在世界银行门户中找到的CSV文件中读取印度的GDP数据。它已经提供给你，并且托管在Packt GitHub仓库上。但是，如果我们尝试正常读取它，Pandas的`read_csv`方法将抛出错误。让我们看看如何一步一步地从这个文件中读取有用信息的指南：
- en: '[PRE221]'
  id: totrans-666
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE221]'
- en: 'The output is as follows:'
  id: totrans-667
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE222]'
  id: totrans-668
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE222]'
- en: We can try and use the `error_bad_lines=False` option in this kind of situation.
  id: totrans-669
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以尝试使用`error_bad_lines=False`选项在这种情况下。
- en: 'Read the India World Bank Information `.csv` file:'
  id: totrans-670
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取印度世界银行信息`.csv`文件：
- en: '[PRE223]'
  id: totrans-671
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE223]'
- en: 'The output is as follows:'
  id: totrans-672
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.20: DataFrame from the India World Bank Information](img/C11065_9_20.jpg)'
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.20：来自印度世界银行信息的DataFrame](img/C11065_9_20.jpg)'
- en: 'Figure 9.20: DataFrame from the India World Bank Information'
  id: totrans-674
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.20：来自印度世界银行信息的DataFrame
- en: 'Note:'
  id: totrans-675
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: At times, the output may not found because there are three rows instead of the
    expected one row.
  id: totrans-676
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有时，输出可能找不到，因为有三行而不是预期的单行。
- en: 'Clearly, the delimiter in this file is tab (`\t`):'
  id: totrans-677
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显然，此文件的分隔符是制表符（`\t`）：
- en: '[PRE224]'
  id: totrans-678
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE224]'
- en: 'The output is as follows:'
  id: totrans-679
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.21: DataFrame from the India World Bank Information after using
    a delimiter](img/C11065_9_21.jpg)'
  id: totrans-680
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.21：使用分隔符后的印度世界银行信息DataFrame](img/C11065_9_21.jpg)'
- en: 'Figure 9.21: DataFrame from the India World Bank Information after using a
    delimiter'
  id: totrans-681
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.21：使用分隔符后的印度世界银行信息DataFrame
- en: 'Use the `skiprows` parameter to skip the first 4 rows:'
  id: totrans-682
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`skiprows`参数跳过前4行：
- en: '[PRE225]'
  id: totrans-683
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE225]'
- en: 'The output is as follows:'
  id: totrans-684
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.22: DataFrame from the India World Bank Information after using
    skiprows](img/C11065_9_22.jpg)'
  id: totrans-685
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.22：使用skiprows后的印度世界银行信息DataFrame](img/C11065_9_22.jpg)'
- en: 'Figure 9.22: DataFrame from the India World Bank Information after using skiprows'
  id: totrans-686
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.22：使用skiprows后的印度世界银行信息DataFrame
- en: 'Closely examine the dataset: In this file, the columns are the yearly data
    and rows are the various types of information. Upon examining the file with Excel,
    we find that the column `Indicator Name` is the one with the name of the particular
    data type. We filter the dataset with the information we are interested in and
    also transpose (the rows and columns are interchanged) it to make it a similar
    format as our previous education dataset:'
  id: totrans-687
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仔细检查数据集：在这个文件中，列是年度数据，行是各种类型的信息。通过用Excel检查文件，我们发现`Indicator Name`列是特定数据类型的名称所在的列。我们使用感兴趣的信息过滤数据集，并将其转置（行和列互换）以使其格式与先前的教育数据集相似：
- en: '[PRE226]'
  id: totrans-688
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE226]'
- en: 'The output is as follows:'
  id: totrans-689
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.23: DataFrame focusing on GDP per capita](img/C11065_9_23.jpg)'
  id: totrans-690
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.23：关注人均GDP的DataFrame](img/C11065_9_23.jpg)'
- en: 'Figure 9.23: DataFrame focusing on GDP per capita'
  id: totrans-691
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.23：关注人均GDP的DataFrame
- en: 'There is no index, so let''s use `reset_index` again:'
  id: totrans-692
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有索引，所以让我们再次使用`reset_index`：
- en: '[PRE227]'
  id: totrans-693
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE227]'
- en: 'The output is as follows:'
  id: totrans-694
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.24: DataFrame from the India World Bank Information using reset_index](img/C11065_9_24.jpg)'
  id: totrans-695
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.24：使用reset_index从印度世界银行信息中创建的DataFrame](img/C11065_9_24.jpg)'
- en: 'Figure 9.24: DataFrame from the India World Bank Information using reset_index'
  id: totrans-696
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.24：使用reset_index从印度世界银行信息中创建的DataFrame
- en: 'The first 3 rows aren''t useful. We can redefine the DataFrame without them.
    Then, we re-index again:'
  id: totrans-697
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前三行没有用。我们可以重新定义DataFrame而不包括它们。然后，我们再次重新索引：
- en: '[PRE228]'
  id: totrans-698
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE228]'
- en: 'The output is as follows:'
  id: totrans-699
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.25: DataFrame from the India World Bank Information after dropping
    and resetting the index](img/C11065_9_25.jpg)'
  id: totrans-700
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.25：删除和重置索引后的印度世界银行信息DataFrame](img/C11065_9_25.jpg)'
- en: 'Figure 9.25: DataFrame from the India World Bank Information after dropping
    and resetting the index'
  id: totrans-701
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 在删除和重置索引后，从印度世界银行信息中创建的DataFrame
- en: 'Let''s rename the columns properly (this is necessary for merging, which we
    will look at shortly):'
  id: totrans-702
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们适当地重命名列（这对于合并是必要的，我们将在稍后查看）：
- en: '[PRE229]'
  id: totrans-703
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE229]'
- en: 'The output is as follows:'
  id: totrans-704
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.26: DataFrame focusing on Year and GDP](img/C11065_9_26.jpg)'
  id: totrans-705
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.26：关注年份和GDP的DataFrame](img/C11065_9_26.jpg)'
- en: 'Figure 9.26: DataFrame focusing on Year and GDP'
  id: totrans-706
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.26：关注年份和GDP的DataFrame
- en: 'It looks like that we have GDP data from 1960 onward. But we are interested
    in 2003 - 2016\. Let''s examine the last 20 rows:'
  id: totrans-707
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看起来我们有从1960年以来的GDP数据。但我们感兴趣的是2003-2016年。让我们检查最后20行：
- en: '[PRE230]'
  id: totrans-708
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE230]'
- en: 'The output is as follows:'
  id: totrans-709
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.27: DataFrame from the India World Bank Information](img/C11065_9_27.jpg)'
  id: totrans-710
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.27：来自印度世界银行信息的DataFrame](img/C11065_9_27.jpg)'
- en: 'Figure 9.27: DataFrame from the India World Bank Information'
  id: totrans-711
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.27：来自印度世界银行信息的DataFrame
- en: So, we should be good with rows 43-56\. Let's create a DataFrame called `df_gdp:`
  id: totrans-712
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，我们应该对43-56行感到满意。让我们创建一个名为`df_gdp`的DataFrame：
- en: '[PRE231]'
  id: totrans-713
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE231]'
- en: 'The output is as follows:'
  id: totrans-714
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.28: DataFrame from the India World Bank Information](img/C11065_9_28.jpg)'
  id: totrans-715
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.28：来自印度世界银行信息的DataFrame](img/C11065_9_28.jpg)'
- en: 'Figure 9.28: DataFrame from the India World Bank Information'
  id: totrans-716
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.28：来自印度世界银行信息的DataFrame
- en: 'We need to reset the index again (for merging):'
  id: totrans-717
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要再次重置索引（为了合并）：
- en: '[PRE232]'
  id: totrans-718
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE232]'
- en: 'The output is as follows:'
  id: totrans-719
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.29: DataFrame from the India World Bank Information](img/C11065_9_29.jpg)'
  id: totrans-720
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.29：来自印度世界银行信息的DataFrame](img/C11065_9_29.jpg)'
- en: 'Figure 9.29: DataFrame from the India World Bank Information'
  id: totrans-721
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.29：来自印度世界银行信息的DataFrame
- en: 'The year in this DataFrame is not of the `int` type. So, it will have problems
    merging with the education DataFrame:'
  id: totrans-722
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此DataFrame中的年份不是`int`类型。因此，它将与教育DataFrame合并时出现问题：
- en: '[PRE233]'
  id: totrans-723
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE233]'
- en: 'The output is as follows:'
  id: totrans-724
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_9_30.jpg)'
  id: totrans-725
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C11065_9_30.jpg)'
- en: 'Figure 9.30: DataFrame focusing on year'
  id: totrans-726
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.30：关注年份的DataFrame
- en: 'Use the `apply` method with Python''s built-in `int` function. Ignore any warnings
    that are thrown:'
  id: totrans-727
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Python内置的`int`函数的`apply`方法。忽略任何抛出的警告：
- en: '[PRE234]'
  id: totrans-728
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE234]'
- en: 'Solution of Activity 14: Data Wrangling Task – Merging UN Data and GDP Data'
  id: totrans-729
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动第14题的解决方案：数据整理任务 – 合并联合国数据和GDP数据
- en: 'These are the steps to complete this activity:'
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Now, merge the two DataFrames, that is, `primary_enrollment_india` and `df_gdp`,
    on the `Year` column:'
  id: totrans-731
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将两个DataFrame，即`primary_enrollment_india`和`df_gdp`，在`Year`列上合并：
- en: '[PRE235]'
  id: totrans-732
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE235]'
- en: 'The output is as follows:'
  id: totrans-733
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![](img/C11065_9_31.jpg)'
  id: totrans-734
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/C11065_9_31.jpg)'
- en: 'Figure 9.31: Merged data'
  id: totrans-735
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.31：合并后的数据
- en: 'Now, we can drop the `Data`, `Footnotes`, and `Region/Country/Area` columns:'
  id: totrans-736
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以删除`Data`、`Footnotes`和`Region/Country/Area`列：
- en: '[PRE236]'
  id: totrans-737
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE236]'
- en: 'The output is as follows:'
  id: totrans-738
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.32: Merged data after dropping the Data, Footnotes, and Region/Country/Area
    columns](img/C11065_9_32.jpg)'
  id: totrans-739
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.32：删除数据、脚注和地区/国家/区域列后的合并数据](img/C11065_9_32.jpg)'
- en: 'Figure 9.32: Merged data after dropping the Data, Footnotes, and Region/Country/Area
    columns'
  id: totrans-740
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.32：删除数据、脚注和地区/国家/区域列后的合并数据
- en: 'Rearrange the columns for proper viewing and presentation to a data scientist:'
  id: totrans-741
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对列进行重新排列，以便数据科学家能够正确查看和展示：
- en: '[PRE237]'
  id: totrans-742
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE237]'
- en: 'The output is as follows:'
  id: totrans-743
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.33: Merged data after rearranging the columns](img/C11065_9_33.jpg)'
  id: totrans-744
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图9.33：重新排列列后的合并数据](img/C11065_9_33.jpg)'
- en: 'Figure 9.33: Merged data after rearranging the columns'
  id: totrans-745
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.33：重新排列列后的合并数据
- en: 'Plot the data:'
  id: totrans-746
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制数据：
- en: '[PRE238]'
  id: totrans-747
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE238]'
- en: 'The output is as follows:'
  id: totrans-748
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 9.34: Scatter plot of merged data](img/C11065_9_34.jpg)'
  id: totrans-749
  prefs: []
  type: TYPE_IMG
  zh: '![图9.34：合并数据的散点图](img/C11065_9_34.jpg)'
- en: 'Figure 9.34: Scatter plot of merged data'
  id: totrans-750
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9.34：合并数据的散点图
- en: 'Activity 15: Data Wrangling Task – Connecting the New Data to a Database'
  id: totrans-751
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动15：数据处理任务 – 将新数据连接到数据库
- en: 'These are the steps to complete this activity:'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Connect to a database and writing values it. We start by importing the `sqlite3`
    module of Python and then use the connect function to connect to a database. Designate
    `Year` as the `PRIMARY` `KEY` of this table:'
  id: totrans-753
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到数据库并写入值。我们首先导入Python的`sqlite3`模块，然后使用`connect`函数连接到数据库。将`Year`指定为该表的`PRIMARY
    KEY`：
- en: '[PRE239]'
  id: totrans-754
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE239]'
- en: 'Run a loop with the dataset rows one by one to insert them in the table:'
  id: totrans-755
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对数据集的每一行运行循环，将它们逐个插入到表中：
- en: '[PRE240]'
  id: totrans-756
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE240]'
- en: If we look at the current folder, we should see a file called `Education_GDP.db`,
    and if we can examine that using a database viewer program, we can see the data
    transferred there.
  id: totrans-757
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们查看当前文件夹，应该会看到一个名为`Education_GDP.db`的文件，如果我们使用数据库查看程序检查它，我们可以看到数据已传输到那里。
- en: In these activities, we have examined a complete data wrangling flow, including
    reading data from the web and a local drive, filtering, cleaning, quick visualization,
    imputation, indexing, merging, and writing back to a database table. We also wrote
    custom functions to transform some of the data and saw how to handle situations
    where we may get errors upon reading the file.
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些活动中，我们检查了一个完整的数据处理流程，包括从网络和本地驱动器读取数据，过滤、清洗、快速可视化、插补、索引、合并，并将数据写回数据库表。我们还编写了自定义函数来转换一些数据，并了解了在读取文件时可能遇到错误的情况如何处理。
