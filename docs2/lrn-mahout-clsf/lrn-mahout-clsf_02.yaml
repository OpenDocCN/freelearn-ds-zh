- en: Chapter 2. Apache Mahout
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：Apache Mahout
- en: 'In the previous chapter, we discussed classification and looked into the algorithms
    provided by Mahout in this area. Before going to those algorithms, we need to
    understand Mahout and its installation. In this chapter, we will explore the following
    topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了分类，并探讨了 Mahout 在该领域提供的算法。在探讨这些算法之前，我们需要了解 Mahout 及其安装。在本章中，我们将探讨以下主题：
- en: What is Apache Mahout?
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Apache Mahout？
- en: Algorithms supported in Mahout
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mahout 支持的算法
- en: Why is it a good choice for classification problems?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么它是分类问题的好选择？
- en: Setting up the system for Mahout development
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Mahout 开发环境
- en: Introducing Apache Mahout
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Apache Mahout
- en: A mahout is a person who rides and controls an elephant. Most of the algorithms
    in Apache Mahout are implemented on top of Hadoop, which is another Apache-licensed
    project and has the symbol of an elephant ([http://hadoop.apache.org/](http://hadoop.apache.org/)).
    As Apache Mahout rides over Hadoop, this name is justified.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Mahout 是指骑乘和控制大象的人。Apache Mahout 中的大多数算法都是在 Hadoop 之上实现的，Hadoop 是另一个 Apache
    许可的项目，并以大象为标志 ([http://hadoop.apache.org/](http://hadoop.apache.org/))。由于 Apache
    Mahout 在 Hadoop 上运行，这个名字是合理的。
- en: Apache Mahout is a project of Apache Software Foundation that has implementations
    of machine learning algorithms. Mahout was started as a subproject of the Apache
    Lucene project in 2008\. After some time, an open source project named **Taste**,
    which was developed for collaborative filtering, and it was absorbed into Mahout.
    Mahout is written in Java and provides scalable machine learning algorithms. Mahout
    is the default choice for machine learning problems in which the data is too large
    to fit into a single machine. Mahout provides Java libraries and does not provide
    any user interface or server. It is a framework of tools to be used and adapted
    by developers.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Mahout 是 Apache 软件基金会的一个项目，它实现了机器学习算法。Mahout 于 2008 年作为 Apache Lucene
    项目的子项目启动。经过一段时间，一个名为 **Taste** 的开源项目，该项目是为了协同过滤而开发的，后来被纳入 Mahout。Mahout 使用 Java
    编写，并提供可扩展的机器学习算法。当数据太大而无法适应单个机器时，Mahout 是机器学习问题的默认选择。Mahout 提供了 Java 库，但不提供任何用户界面或服务器。它是一个开发者可以使用和适应的工具框架。
- en: '![Introducing Apache Mahout](img/4959OS_02_01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![介绍 Apache Mahout](img/4959OS_02_01.jpg)'
- en: To sum it up, Mahout provides you with implementations of the most frequently
    used machine learning algorithms in the area of classification, clustering, and
    recommendation. Instead of spending time writing algorithms, it provides us with
    ready-to-consume solutions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Mahout 为你在分类、聚类和推荐领域的常用机器学习算法提供了实现。它不是让我们花时间编写算法，而是提供了现成的解决方案。
- en: 'Mahout uses Hadoop for its algorithms, but some of the algorithms can also
    run without Hadoop. Currently, Mahout supports the following use cases:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Mahout 使用 Hadoop 来实现其算法，但其中一些算法也可以在没有 Hadoop 的情况下运行。目前，Mahout 支持以下用例：
- en: '**Recommendation**: This takes the user data and tries to predict items that
    the user might like. With this use case, you can see all the sites that are selling
    goods to the user. Based on your previous action, they will try to find out unknown
    items that could be of use. One example can be this: as soon as you select some
    book from Amazon, the website will show you a list of other books under the title,
    **Customers Who Bought This Item Also Bought**. It also shows the title, **What
    Other Items Do Customers Buy After Viewing This Item?** Another example of recommendation
    is that while playing videos on YouTube, it recommends that you listen to some
    other videos based on your selection. Mahout provides full API support to develop
    your own user-based or item-based recommendation engine.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**推荐**：这会根据用户数据尝试预测用户可能喜欢的项目。在这个用例中，你可以看到所有向用户销售商品的网站。基于你的先前行为，他们会尝试找出可能有用的未知项目。一个例子可以是：当你从亚马逊选择一些书籍时，网站会显示一系列其他书籍，标题为
    **Customers Who Bought This Item Also Bought**。它还会显示标题，**What Other Items Do Customers
    Buy After Viewing This Item?** 推荐的另一个例子是在 YouTube 上播放视频时，根据你的选择推荐你听一些其他视频。Mahout
    提供了完整的 API 支持来开发你自己的基于用户或基于项目的推荐引擎。'
- en: '**Classification**: As defined in the earlier chapter, classification decides
    how much an item belongs to one particular category. E-mail classification for
    filtering out spam is a classic example of classification. Mahout provides a rich
    set of APIs to build your own classification model. For example, Mahout can be
    used to build a document classifier or an e-mail classifier.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类**：如前一章所述，分类决定一个项目属于特定类别多少。用于过滤垃圾邮件的电子邮件分类是分类的一个经典例子。Mahout提供了一套丰富的API来构建自己的分类模型。例如，可以使用Mahout构建文档分类器或电子邮件分类器。'
- en: '**Clustering**: This is a technique that tries to group items together based
    on some sort of similarity. Here, we find the different clusters of items based
    on certain properties, and we do not know the name of the cluster in advance.
    The main difference between clustering and classification is that in classification,
    we know the end class name. Clustering is useful in finding out different customer
    segments. Google News uses the clustering technique in order to group news. For
    clustering, Mahout has already implemented some of the most popular algorithms
    in this area, such as k-means, fuzzy k-means, canopy, and so on.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚类**：这是一种试图根据某种相似性将项目分组的技术。在这里，我们根据某些属性找到不同的项目簇，我们事先不知道簇的名称。聚类与分类的主要区别在于，在分类中，我们知道最终类别的名称。聚类在找出不同的客户细分市场时很有用。Google
    News使用聚类技术来分组新闻。对于聚类，Mahout已经实现了该领域最流行的算法，如k-means、模糊k-means、canopy等。'
- en: '**Dimensional reduction**: As we discussed in the previous chapter, features
    are called dimensions. Dimensional reduction is the process of reducing the number
    of random variables under consideration. This makes data easy to use. Mahout provides
    algorithms for dimensional reduction. Singular value decomposition and Lanczos
    are examples of the algorithms that Mahout provides.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**降维**：正如我们在上一章所讨论的，特征被称为维度。降维是减少考虑的随机变量数量的过程。这使得数据易于使用。Mahout提供了降维算法。奇异值分解和Lanczos是Mahout提供的算法示例。'
- en: '**Topic modeling**: Topic modeling is used to capture the abstract idea of
    a document. A topic model is a model that associates probability distribution
    with each document over topics. Given that a document is about a particular topic,
    one would expect particular words to appear in the document more or less frequently.
    "Football" and "goal" will appear more in a document about sports. **Latent Dirichlet
    Allocation** (**LDA**) is a powerful learning algorithm for topic modeling. In
    Mahout, collapsed variational Bayes is implemented for LDA.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题建模**：主题建模用于捕捉文档的抽象思想。主题模型是一种将概率分布与每个文档的主题相关联的模型。鉴于一个文档是关于特定主题的，人们会期望某些词在文档中出现频率较高或较低。"足球"和"进球"将在关于体育的文档中出现的频率更高。**潜在狄利克雷分配**（**LDA**）是主题建模的一个强大学习算法。在Mahout中，实现了LDA的塌陷变分贝叶斯。'
- en: Algorithms supported in Mahout
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mahout支持的算法
- en: 'The implementation of algorithms in Mahout can be categorized into two groups:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Mahout中算法的实现可以分为两组：
- en: '**Sequential algorithms**: These algorithms are executed sequentially and do
    not use Hadoop scalable processing. They are usually the ones derived from Taste.
    For example: user-based collaborative filtering, logistic regression, Hidden Markov
    Model, multi-layer perceptron, singular value decomposition.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**顺序算法**：这些算法是顺序执行的，不使用Hadoop可扩展处理。它们通常是来自Taste的算法。例如：基于用户的协同过滤、逻辑回归、隐马尔可夫模型、多层感知器、奇异值分解。'
- en: '**Parallel algorithms**: These algorithms can support petabytes of data using
    Hadoop''s map and hence reduce parallel processing. For example, Random Forest,
    Naïve Bayes, canopy clustering, k-means clustering, spectral clustering, and so
    on.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**并行算法**：这些算法可以使用Hadoop的map支持PB级的数据，从而减少并行处理。例如，随机森林、朴素贝叶斯、canopy聚类、k-means聚类、谱聚类等。'
- en: Reasons for Mahout being a good choice for classification
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择Mahout进行分类的原因
- en: In machine learning systems, the more data you use, the more accurate the system
    built will be. Mahout, which uses Hadoop for scalability, is way ahead of others
    in terms of handling huge datasets. As the number of training sets increases,
    Mahout's performance also increases. If the input size for training examples is
    from 1 million to 10 million, then Mahout is an excellent choice.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习系统中，您使用的数据越多，构建的系统就越准确。使用Hadoop进行可扩展性的Mahout在处理大型数据集方面远远领先于其他系统。随着训练集数量的增加，Mahout的性能也会提高。如果训练示例的输入大小从100万增加到1000万，那么Mahout是一个很好的选择。
- en: For classification problems, increased data for training is desirable as it
    can improve the accuracy of the model. Generally, as the number of datasets increases,
    memory requirement also increases, and algorithms become slow, but Mahout's scalable
    and parallel algorithms work better with regards to the time taken. Each new machine
    added decreases the training time and provides higher performance.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于分类问题，增加训练数据是有益的，因为它可以提高模型的准确性。通常，随着数据集数量的增加，内存需求也会增加，算法会变慢，但Mahout的可扩展和并行算法在处理时间方面表现更好。每增加一台新机器都会减少训练时间并提供更高的性能。
- en: Installing Mahout
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Mahout
- en: 'Now let''s try the slightly challenging part of this book: Mahout installation.
    Based on common experiences, I have come up with the following questions or concerns
    that users face before installation:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来尝试这本书的稍微有点挑战性的部分：Mahout的安装。根据常见经验，我总结出以下用户在安装前可能会遇到的问题或疑虑：
- en: I do not know anything about Maven. How will I compile Mahout build?
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我对Maven一无所知。我该如何编译Mahout构建？
- en: How can I set up Eclipse to write my own programs in Mahout?
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何设置Eclipse以在Mahout中编写自己的程序？
- en: How can I install Mahout on a Windows system?
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在Windows系统上安装Mahout？
- en: 'So, we will install Mahout with the help of the following steps. Each step
    is independent from the other. You can choose any one of these:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将通过以下步骤安装Mahout。每个步骤都是独立的。您可以选择以下任何一个：
- en: Building Mahout code using Maven
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Maven构建Mahout代码
- en: Setting up a development environment using Eclipse
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Eclipse设置开发环境
- en: Setting up Mahout for a Windows user
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Windows用户设置Mahout
- en: 'Before any of the steps, some of the prerequisites are:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何步骤之前，以下是一些先决条件：
- en: You should have Java installed on your system. Wikihow is a good source for
    this at [http://www.wikihow.com/Install-Java-on-Linux](http://www.wikihow.com/Install-Java-on-Linux)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该在系统上安装Java。Wikihow是Linux上安装Java的好资源，请参阅[http://www.wikihow.com/Install-Java-on-Linux](http://www.wikihow.com/Install-Java-on-Linux)
- en: You should have Hadoop installed on your system from the [http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleNodeSetup.html](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleNodeSetup.html)
    URL
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该从[http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleNodeSetup.html](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleNodeSetup.html)
    URL安装Hadoop
- en: Building Mahout from source using Maven
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Maven从源代码构建Mahout
- en: Mahout's build and release system is based on Maven.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Mahout的构建和发布系统基于Maven。
- en: Installing Maven
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Maven
- en: 'Create the folder `/usr/local/maven`, as follows:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建文件夹`/usr/local/maven`，如下所示：
- en: '[PRE0]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Download the distribution `apache-maven`-`x.y.z-bin.tar.gz` from the Maven
    site ([http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi))
    and move this to `/usr/local/maven`, as follows:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Maven网站下载发行版`apache-maven`-`x.y.z-bin.tar.gz`（[http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi)），并将其移动到`/usr/local/maven`，如下所示：
- en: '[PRE1]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Unpack to the location `/usr/local/maven`, as follows:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压到`/usr/local/maven`位置，如下所示：
- en: '[PRE2]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Edit the `.bashrc` file, as follows:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`.bashrc`文件，如下所示：
- en: '[PRE3]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the Eclipse IDE, go to **Help** and select **Install new Software**. Click
    on the **Add** button, and in the pop up, type the name `M2Eclipse`, provide the
    link [http://download.eclipse.org/technology/m2e/releases](http://download.eclipse.org/technology/m2e/releases),
    and click on **OK**.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Eclipse IDE，转到**帮助**并选择**安装新软件**。点击**添加**按钮，在弹出的窗口中输入名称`M2Eclipse`，提供链接[http://download.eclipse.org/technology/m2e/releases](http://download.eclipse.org/technology/m2e/releases)，然后点击**确定**。
- en: Building Mahout code
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建 Mahout 代码
- en: 'By default, Mahout assumes that Hadoop is already installed on the system.
    Mahout uses the `HADOOP_HOME` and `HADOOP_CONF_DIR` environment variables to access
    Hadoop cluster configurations. For setting up Mahout, execute the following steps:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Mahout假定系统上已经安装了Hadoop。Mahout使用`HADOOP_HOME`和`HADOOP_CONF_DIR`环境变量来访问Hadoop集群配置。为了设置Mahout，执行以下步骤：
- en: Download the Mahout distribution file `mahout-distribution-0.9-src.tar.gz` from
    the location [http://archive.apache.org/dist/mahout/0.9/](http://archive.apache.org/dist/mahout/0.9/).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://archive.apache.org/dist/mahout/0.9/](http://archive.apache.org/dist/mahout/0.9/)位置下载
    Mahout 分发文件 `mahout-distribution-0.9-src.tar.gz`。
- en: 'Choose an installation directory for Mahout (`/usr/local/Mahout`), and place
    the downloaded source in the folder. Extract the source code and ensure that the
    folder contains the `pom.xml` file. The following is the exact location of the
    source:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 Mahout 的安装目录（`/usr/local/Mahout`），并将下载的源文件放置在该文件夹中。解压源代码并确保文件夹包含 `pom.xml`
    文件。以下是源代码的确切位置：
- en: '[PRE4]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Install the Mahout Maven project, and skip the test cases while installing,
    as follows:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Mahout Maven 项目，并在安装时跳过测试用例，操作如下：
- en: '[PRE5]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Set the `MAHOUT_HOME` environment variable in the `~/.bashrc` file, and update
    the `PATH` variable with the `Mahout bin` directory:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `~/.bashrc` 文件中设置 `MAHOUT_HOME` 环境变量，并更新 `PATH` 变量以包含 `Mahout bin` 目录：
- en: '[PRE6]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To test the Mahout installation, execute the command: `mahout`. This will list
    the available programs within the distribution bundle, as shown in the following
    screenshot:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要测试 Mahout 安装，执行命令：`mahout`。这将列出分发包内的可用程序，如下截图所示：
- en: '![Building Mahout code](img/4959OS_02_02.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![构建 Mahout 代码](img/4959OS_02_02.jpg)'
- en: Setting up a development environment using Eclipse
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Eclipse 设置开发环境
- en: 'For this setup, you should have Maven installed on the system and the Maven
    plugin for Eclipse. Refer to the *Installing Maven* step explained in the previous
    section. This setup can be done in the following steps:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此设置，您应该在系统上安装 Maven 和 Eclipse 的 Maven 插件。参考前面章节中解释的 *安装 Maven* 步骤。此设置可以按以下步骤完成：
- en: 'Download the Mahout distribution file `mahout-distribution-0.9-src.tar.gz`
    from the location [http://archive.apache.org/dist/mahout/0.9/](http://archive.apache.org/dist/mahout/0.9/)
    and unzip this:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://archive.apache.org/dist/mahout/0.9/](http://archive.apache.org/dist/mahout/0.9/)位置下载
    Mahout 分发文件 `mahout-distribution-0.9-src.tar.gz` 并解压：
- en: '[PRE7]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s create a folder named `workspace` under `/usr/local/workspace`, as follows:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/usr/local/workspace` 下创建一个名为 `workspace` 的文件夹，操作如下：
- en: '[PRE8]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Move the downloaded distribution to this folder (from the downloads folder),
    as follows:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的分发文件移动到该文件夹（从下载文件夹），操作如下：
- en: '[PRE9]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Move to the folder `/usr/local/workspace/mahout-distribution-0.9` and make
    an Eclipse project (this command can take up to an hour):'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移动到 `/usr/local/workspace/mahout-distribution-0.9` 文件夹并创建一个 Eclipse 项目（此命令可能需要一个小时）：
- en: '[PRE10]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Set the Mahout home in the `.bashrc` file, as explained earlier in the *Building
    Mahout code* section.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `.bashrc` 文件中设置 Mahout home，如前面 *构建 Mahout 代码* 部分所述。
- en: Now open Eclipse. Select the file, import Maven, and **Existing Maven Projects**.
    Now, navigate to the location for **mahout-distribution-0.9** and click on **Finish**.![Setting
    up a development environment using Eclipse](img/4959OS_02_03.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开 Eclipse。选择文件，导入 Maven，并选择 **Existing Maven Projects**。现在，导航到 **mahout-distribution-0.9**
    的位置并点击 **Finish**。![使用 Eclipse 设置开发环境](img/4959OS_02_03.jpg)
- en: Setting up Mahout for a Windows user
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 Windows 用户设置 Mahout
- en: 'A Windows user can use Cygwin (a large collection of GNU and open source tools
    that provides functionality similar to a Linux distribution on Windows) to set
    up their environment. There is also another way that is easy to use, as shown
    in the following steps:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 用户可以使用 Cygwin（一个包含大量 GNU 和开源工具的集合，在 Windows 上提供类似于 Linux 分发的功能）来设置他们的环境。还有另一种简单易用的方式，如下步骤所示：
- en: Download Hortonworks Sandbox for virtual box on your system from the location
    [http://hortonworks.com/products/hortonworks-sandbox/#install](http://hortonworks.com/products/hortonworks-sandbox/#install).
    Hortonworks Sandbox on your system will be a pseudo-distributed mode of Hadoop.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://hortonworks.com/products/hortonworks-sandbox/#install](http://hortonworks.com/products/hortonworks-sandbox/#install)位置下载适用于虚拟盒子的
    Hortonworks Sandbox。您的系统上的 Hortonworks Sandbox 将是 Hadoop 的伪分布式模式。
- en: Log in to the console. Use *Alt* + *F5* or alternatively download Putty and
    provide **127.0.0.1** as the hostname and **2222** in the port, as shown in the
    following figure. Log in with the username `root` and password `-hadoop`.![Setting
    up Mahout for a Windows user](img/4959OS_02_04.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到控制台。使用 *Alt* + *F5* 或作为替代，下载 Putty 并提供 **127.0.0.1** 作为主机名和 **2222** 作为端口号，如图所示。使用用户名
    `root` 和密码 `-hadoop` 登录。![为 Windows 用户设置 Mahout](img/4959OS_02_04.jpg)
- en: 'Enter the following command:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE11]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, you will see a screen like this:'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，您将看到如下屏幕：
- en: '![Setting up Mahout for a Windows user](img/4959OS_02_05.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![为 Windows 用户设置 Mahout](img/4959OS_02_05.jpg)'
- en: Enter `y`, and your Mahout will start installing. Once this is done, you can
    test by typing the command `mahout` and this will show you the same screen as
    shown in the *Setting up a development environment using Eclipse* recipe seen
    earlier.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`y`，你的 Mahout 将开始安装。一旦完成，你可以通过输入命令`mahout`来测试，这将显示与之前看到的*使用 Eclipse 设置开发环境*食谱中相同的屏幕。
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We discussed Apache Mahout in detail in this chapter. We covered the process
    of installing Mahout on our system, along with setting up a development environment
    that is ready to execute Mahout algorithms. We have also taken a look at the reasons
    behind Mahout being considered a good choice for classification. Now, we move
    to the next where we will understand about logistic regression and learn about
    the process that needs to be followed to execute our first algorithm in Mahout.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们详细讨论了 Apache Mahout。我们涵盖了在系统上安装 Mahout 的过程，以及设置一个准备好执行 Mahout 算法的开发环境。我们还探讨了为什么
    Mahout 被认为是分类的良好选择的原因。现在，我们将进入下一部分，我们将了解逻辑回归，并学习在 Mahout 中执行第一个算法需要遵循的过程。
